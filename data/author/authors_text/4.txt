DTD-Driven Bilingual Document Generation 
...... ,Arantza Casillas . . . . .  
Departamento de Automgtica, Universidad e Alcalgt e -mai l  :arantza@aut,  a lca ia ,  es 
Joseba Abaitua 
Facultad de Filosofia y Letras Universidad e Deusto, Bilbao e -ami l :aba i tua0f i l  .deusto .  es 
Raque l  Mar t inez  
Departamento de  Sis. Informgticos y Programacidn, Facultad de MatemgLticas 
Universidad C0mplutense de Madrid e -mai l  : raquelOeucmos, sire. ucm. es 
Abst ract  
Extensively annotated bilingual parallel corpora 
can be exploited to feed editing tools that in- 
tegrate the processes of document composition 
and translation. Here we discuss the archi- 
tecture of an interactive diting tool that, on 
top of techniques common to most Translation 
Memory-based systems, applies the potential of 
SGML's DTDs to guide the process of bilingual 
document generation. Rather than employing 
just simple task-oriented mark-up, we selected a 
set of TEI's highly complex and versatile collec- 
tion of tags to help disclose the underlying log- 
ical structure of documents in the test-corpus. 
DTDs were automatically induced and later in- 
tegrated in the editing tool to provide the basic 
scheme for new documents. 
1 In t roduct ion  
This paper discusses an approach to the archi- 
tecture of an experimental interactive diting 
tool that integrates the processes of source doc- 
ument composition and translation i to the tar- 
get language. The tool has been conceived as an 
optimal solution for a particular case of bilin- 
gual production of legal documentation, but it 
also illustrates in a more general way how to ex- 
ploit the possibilities of SGML (ISO8879, 1986) 
used extensively to annotate a whole range of 
linguistic and extralinguistic information i  spe- 
cialized bilingual corpora. 
SGML is well established as the coding 
scheme underlying most Translation Memory 
based systems (TMBS), and has been pro- 
posed as the cod-it~g scheme for the interchange 
of existing Translation Memory databases 
Translation Meinories eXchange, TMX (Melby, 
1998). The advantages of SGML have also been 
perceived by a large conmmnity of corpus lin- 
guistics researchers, and big efforts have been 
made in the development of suitable markup 
options to encode a variety of textual types and 
functions -as clearly demonstrated by the Text 
Encoding Initiative, TEI; (Burnard & Speberg- 
MacQueen, 1995). While the tag-sets employed 
by TMBS are simple and task-oriented, TEI has 
offered a highly complex and versatile collection 
of tags. The guiding hypothesis in our experi- 
ment has been the idea that it is possible to 
explore TEI/SGML markup in order to develop 
a system that carries the concept of Translation 
Memory one step further. One important lea- 
ture of SGML is the DTD. DTDs determine the 
logical structure of documents and how to tag 
them accordingly. We have concentrated on the 
accurate description of documents by means of 
TEI conformant SGML markup. The markup 
will help disclose the underlying logical struc- 
ture of documents. From annotated ocumen- 
tation, DTDs can be induced and these DTDs 
provide the basic scheme to produce new doc- 
uments. We have collected a corpus of official 
publications from three main institutions in the 
Basque Autonomous Region in Spain, the Bo- 
letln Oficial de Bizkaia (BOB, 1990-1995), Bo- 
tetln Oficial de Alava (BOA, 1990-1994) and 
Bolet{n Oficial del Pais Vasco (BOPV, 1995). 
Documents in the corpus were composed by Ad- 
nfinistration clerks and translated by transla- 
tors. Both clerks and translators have been us- 
ing a wide variety of word-processors, although 
since 1994 MSWord has been generalized as the 
standard editing tool. Administrative docu- 
mentation shows a regular structure, and is rich 
? in*recurrent textual patterns.  For each docu- ..... 
ment type different document okens share a 
common global distribution of elements. Of- 
ficial document composers learn these global 
structures and apply them consistently. It is 
also the case that composers tend to reuse old 
32 
Document Type 
Orden Form 
Decreto..Foral =-- 
Resolucidn 
Extracto 
Acuerdo 
Norma Foral 
Anuncio 
% 
53% 
..22%,;- 
13% 
5.4% 
3.4% 
1.9% 
0.4% 
documents, where the whole document may 
be considered the translation unit. TM3 can 
.,-., : :- :...~ .~o. ~be~,g. o~strued,as~:~i:hiling~ai,doc,,~ent-database. 
Much redundancy originates from this TM col- 
lection, although it should be noticed that they 
are all by-products derived from the same an- 
notated bitext which subsumes them all. Good 
software packages for TM1 and TM3 already ex- 
ist in the market, and hence their exploitation is 
Table I: 
document files when producing new documents 
of the same type. Despite the fact that no 
SGML software was used at the editing phase, 
texts in the corpus show regular logical struc- 
tures and consistent distribution of text seg- 
ments. Our main goal in tagging the corpus was 
to make all them explicit (Martinez, 1997). The 
most common type of document in the corpus,  
the Orden Foral, was chosen (see Table 1). We 
analysed some 100 tokens and hand-marked the 
most salient elements. The heuristics to identify 
these elements were later expressed in a collec- 
tion of recognition routines in Perl and tested 
against a set of 400 tokens, including the initial 
100. As a result of this process of automatic 
tagging of structural elements we produced a 
TE I /SGML tagged corpus with yet no corre- 
sponding overt DTD. In  Section 2 we will ex- 
plain how DTDs were later induced from the 
tagged corpus. 
Once the corpus was segmented the next step 
was to align it. This was conducted at different 
levels: general document elements (DIV, SEG, 
P), as well as sentential and intra-sentential e - 
ements, such as S, ItS, NUM, DATE, etc. (Mar- 
tinez, 1998b). Aligned in this way, the corpus 
becomes an important resource for translation. 
Four complementary language databases may 
be obtained at any time from the annotated 
corpus: three translation memory databases 
(TM1, TM2, and TM3) as well as a terminology 
database (termbase). The three TMs differ in 
the nature of the translation units they contain. 
TM1 consists of aligned sentences than can feed 
commercial TM software. TM2 contains ele- 
ments which are translation segments ranging 
from whole sections of a document or multi- 
sentence paragraphs to smaller units, such as 
short phrases or proper names. TM3 simply 
hosts the whole collection of aligned bilingual 
Types of documents in the corpus beyond our interest (Trados Translator's Work- 
. . . . .  . bench, Star!s Transit,.,SDLX, D e'j?~fi,. IBM~s. 
browsing tool for TM3). The originality of our 
editing tool lies in a design which benefits from 
joining the potentiality of DTDs  and the ele- 
ments in TM2, as will be shown in sections 4 
and 5. 
2 DTD abst rac t ion  
SGML mark-up determines the logical structure 
of a document and its syntax in the form of a 
context-free grammar. This is called the Doc- 
ument Type Definition (DTD) and it contains 
specifications for: 
? Names and content for all elements that are 
permitted to appear in a document. 
o Order in which these elements must ap- 
pear. 
o Tag attributes with default values for those 
elements. 
DTDs have been abstracted away from the an- 
notations that were automatically introduced 
in the corpus. Similar experiments have been 
reported before in the literature. (Ahonen, 
1995) uses a method to build document in- 
stances from tagged texts that consists of a de- 
terministic finite automaton for each context 
model. Subsequently, these automata re gen- 
eralized and converted into regular expressions 
which are easily transcribed into SGML content 
models. (Shafer, 1995) combines docmnent in- 
stances with simplification rules. Our method 
is similar to  Sharer's, but .with a.modification 
in the way rules reduce document instances. A 
tool to obtain a DTD for all document instances 
has been developed (Casillas, 1999). Given that 
source and target documents how some syn- 
tactic and structural mismatches, two different 
DTDs are induced, one for each language, and 
33 
Spanish Text: 
<div0> 
<div l> ... < /d iv l>  
<seg9 id=9ES2 corresp=gEU2> Contra dicha 
<rs  type=law id=LES12 corresp=LEU10> 
Orden Foral </ rs>,  que agota la vfa ad- 
ministrativa podr~i interponerse recurso 
contencioso-administrativo ante la <rs  
type=organization id=0ES9 corresp=0EUl i> 
Sala de lo Contencioso-Administrativo del Tri- 
? bunal Superior de J usticia del Pais Vasco </ rs  >, 
en el plazo de dos meses, contado desde el d/a 
Basque Text: 
<div0> 
<divl> ... </divl> 
<seg9 i de9EU2 correspe9ES2> <rs type=law 
id=LEUi0 corresp=LESl2> Foru agindu </rs> 
horrek amaiera eman dio administrazio bideari; 
eta beraren aurka <rs type=organizat ion 
id=0EU10> Administrazioarekiko </ rs> 
auzibide-errekurtsoa jarri ahal izango zaio <rs 
type=organization id=0EUll corresp=0ES9> 
Euskal Herriko JustiziAuzitegi Nagusiko Admin- 
istrazioarekiko Auzibideetarako Salari < / rs>,  
siguiente a esta~:m~t.~eaci~m~.sin~p~er~ui~i~deAu~,.~;.~aila~aetek~:~epea~;~4ja~d~mxazpen ~hatl egiten 
utilizacidn de otros medios de defensa que estime den egunaren biharamunetik zenbatuko da epe 
oportunos. </seg9> hori; halo eta guztiz ere, egokiesten diren beste 
defentsabideak ere erabil litezke. </seg9> 
<segl0 id=10ES1 corresp=10EUl> Du- 
rante el referido plazo el expediente BHI-<num 
num=10094> 100/94 </num>-P05-A quedar? de 
manifiesto para su ex~imen en las dependencias 
de <rs type=place id=PES3 corresp=PEU2> 
Bilbao calle Alameda Rekalde </ rs>,  <num 
num=30> 30 </num>, <num num=5> 5.a </num> 
y <hum hum=6> 6.a </hUm> plantas. </segl0> 
</div0> 
<closer id=pESl3 corresp=pEUl3 > <name> 
El Diputado Foral de Urbanismo Pedro Hern?ndez 
Gonz~ilez. </name> </closer> 
<segl0 id=10EU1 corresp=10ESl> Epe hori 
amaitu arte BHI-<num num=10094> 100/94 
</num>-P05-A espedientea gerian egongo da, 
nahi duenak azter dezan, <rs  type=place 
id=PEU2 corresp=PES3> Bilboko Errekalde zu- 
markaleko </ rs> <num num=30> 30.eko </num> 
bulegoetan, <num num=5> 5 </num> eta <num 
num=6> 6.</num> solairuetan. </seg l0> 
</div0> 
<closer  id=pEU13 corresp=pESl3> <name> 
Hirigintzako foru diputatua. Pedro Hern/mdez 
Gonz?1ez. </name> </c loser> 
Figure 1: Ilustrates a sample of the annotated bitext 
are paired through a correspondence table. Cor- 
respondences in this table can be up-dated, or 
deleted. At present, we have six DTDs, one for 
each document ype in each language (there are 
three document ypes; Figure 2 shows a part of 
one of these DTDs). By means of these paired 
DTDs, document elements in each language are 
appropriately placed. In the process of gener- 
ating the bilingual document, a document ype 
must first be selected. Each document ype has 
an associated DTD. This DTD specifies which 
elements are obhgatory and.which are optional. 
With the aid of the DTD, the source document 
is generated. The target document will be gen- 
erated with .the aid of the com~esponding target 
DTD. 
3 Jo in ing  TM2 and  DTD 
TM2 specifically stores a type of translation 
segment class, which we have tagged <seg l>,  
<seg2>... <segn>, <t i t le> and <rs>,  and 
which is relevant o the DTD. Segments tagged 
<segn> are variable recurrent language pat- 
terns very frequent in the specialized domain 
of the corpus and whose occurrence in the text 
is well established. These <segn> tags in- 
clude two attributes: id  and cor respond which 
locate the aligned segment both in the cor- 
pus and in the database (Figure 1). Seg- 
ments tagged <rs> are referring expressions 
which have been recognized, tagged and aligned 
? and which correspond largely to proper names 
(Martinez, 1998a), (Martinez, 1998b). TM2 is 
managed in tile form of a relational database 
-where segments are stored, as records. .Each 
record in the database consists of four fields: 
the segment string, a counter for the occur- 
rences of that string in the corpus, the tag 
and the attributes (type, id and corresp) .  
Table 2 shows how the text fragment inside 
34 
<!ELEMENT 
<!ELEMENT 
<!ELEMENT 
<!ELEMENT 
<!ELEMENT 
<!ELEMENT 
LEGE - - (TEXT)> 
TEXT - - (BODY)> 
BODY - - (OPENER,  DIVO,  CLOSER)> 
0PENER - - (TITLE, NUM, DATE, NAME?, SEGI)> 
SEGI - - (SEGIi, (#PCDATAIRSIDATEINUM)+)> 
(SEGii, NUM, DATE, RS, NAME, TITLE) (#PCDATA)> 
<!ELEMENT 
\ [SEGI5)+,  
<!ELEMENT 
<!ELEMENT 
<!ELEMENT 
<!ELEMENT 
(DIVO) - - ( (#PCDATA \[RS INUM \[DATE ISEG4\[SEGS ISEG6\[SEG7 ISEG8 ISEGI2 \[SEGi4 
SEG9?, SEGIO?)> 
(SEG4, SEG5, SEG6) (#PCDATA) > 
(SEG9, SEGiO, SEGT, SEG8, SEGi2, SEGi4, SEGi5) - - (#PCDATA\[RS\[DATE\[NUM)+> 
(CLOSER) i i (PLACENAME?,DATE? ,  NAME?)> 
(PLACENAME)  - : (RS)> 
<!ATTLIST RS TYPE (0RGANIZATION\[ LAW\[ PLACE\[ UNCAT) UNCAT> 
Figure 2: Part of the DTD of the type document Orden Foral 
the </d iv l>. . .</d iv0> tags of Figure 1 ren- 
ders three records in the database. Note how 
the content of the string field in the database 
maintains only the initial <segn> and <rs> 
tags. Furthermore, <rs> tagged segments in- 
side <segn> records are simplified so that their 
content is dismissed and only the initial tag is 
kept (Lange et al, 1997). The reason is that 
they are considered variable elements within 
the segment (dates and numbers are also these 
type of elements). The strings Orden Foral of 
record 2 marked as <rs  type=law> and Sala 
de lo Contencioso-Administrativo del Tribunal 
Superior de Justicia del Pais Vasco of record 
3 <rs  type=organ izat ion> are thus not in- 
cluded in record 1 <segg>,  since they may dif- 
fer in other instantiations of the segment. These 
internal elements are largely proper names that 
vary from one instantiation of the segment o 
another. The <rs> tag can be considered 
to be the name of the varying element. The 
value of the type attribute <rs  type=law> 
constraints the kind of referential expression 
that may be inserted in that point of the trans- 
lation segment. Table 2 shows that source 
and target records may not have straight one- 
to-one correspondences. Although this is by 
no means the general:case; only about 5.61%, 
(Martinez, 1998a), such one-to-N correspon- 
dences provide good ground to explain how 
the TM2 is designed. The asymmetry can be 
easily explained. The Spanish term recurso 
contencioso-administrativo has been translated 
into Basque by means of a category changing 
operation, where the Spanish adjective admin- 
istrativo has been translated as a Basque noun 
complement Administrazioarekiko which liter- 
ally means "Administration-the-with-of' trig- 
gering its identification as a proper noun. 
Table 3 shows the way in which source lan- 
guage units are related with their correspond- 
ing target units, which, as can be observed, can 
be one-to-one or one-to-N. This means that one 
source element can have more than one transla- 
tion. 
TM2 is created in three steps: 
? First, non-pertinent ags are filtered out 
from the annotated corpus. Tags marking 
sentence <s> and paragraph <p> align- 
ment are removed because they are of no 
interest for TM2 'recall that they are reg- 
istered in TM1). 
? Second, translation segments <segn>,  
<t i t le> phrases and referential expres- 
sions <rs> are detected in the source doc- 
ument and looked up in the database. 
o Third, if they are not already present in 
the database, they are stored each in its 
database.and values of the id  and  cor resp  
attributes-are~used to set the correspon- 
dence between source and target database. 
4 Compos i t ion  S t ra tegy  
Every phase in tile process is guided by the 
markup contained in TM2 and the paired DTDs 
35 
Spanish Unit 
<seg9> Contra dicha <rs type=law>, 
que agota la via 
administrativa podr~i interponerse r curso 
contencioso-administrativo nte 
la <rs type=organization>, 
en el plazo de dos meses, contado 
desde el dla siguiente 
a esta notificacidn, sin perjuicio 
de la utilizaci6n 
Basque Unit 
<seg9> <rs type=law> 
horrek amaiera eman dio 
? - adrrrinistrazio'bideari; eta:beraren aurka: " 
<rs type=organization> 
auzibide-errekurtsoa jarri 
ahal izango zaio 
<rs type=organization>, 
bi hilabeteko epean; 
jakinarazpen hau egiten den egunaren 
de otros medios de. defensa que estime oportunos, biharamunetik zenbatuko da epe hori; 
que estime oportunos, hala eta guztiz ere, egokiesten diren beste 
. . . . . . . . . . . .  '-. . -. .~' ?.~ ..... :z-:: : :~ : : :de femVs~ideate .~ere :erab i t~htezke~, . . . -  - . . . .  
<rs type=law> Orden Foral <rs type=law> Foru agindu 
<rs type=organization> Administrazioarekiko 
<rs type=organizat ion>-S~ de lo 
Contencioso-Administrativo 
del Tribunal Superior de Justicia del Pals Vasco 
<rs type=organization> Euskal 
Herriko Justizi 
Auzitegi Nagusiko Administrazioarekiko 
Auzibideetarako Salari 
Table 2: Source and targe language record samples in TM2 
Spanish Unit Basque Unit 
<rs type=organization id= corresp=> 
Bolet/n Oficial de Bizkaia 
<rs type=organization id= corresp=> 
Bizkaiko Aldizkari Ofizialea 
<rs  type=organization id= orresp=> 
Bizkaiko Engunkari Ofizialea 
<rs  type=organization id= corresp=> 
Bizkaiko Boletin Ofizialea 
<seg3> dispongo <seg3> xedatu dut 
<seg3> xedatzen duen 
Table 3: Source language units related with their corresponding target language units 
which control the application of this markup. 
The composition process follows two main steps 
which correspond to the traditional source doc- 
ument generation and translation into the tar- 
get document. The markup and the paired 
DTD guides the process in the following man- 
ner: 
1. Before the user starts writing the source 
document, he must select a document type, 
i.e., a DTD. This has two consequences. On 
the one hand, the selected DTD produces 
a source document template that contains 
the logical structure of the document and 
some of its contents. On the other hand, 
the selected source DTD trigger:s .a target 
paired DTD, which will be used later to 
translate the document. There are three 
different types of elements in the source 
document template: 
? Some elements are mandatory and are 
. :  A . . 
provided to the user, who must only 
choose its content among some alter- 
native usages (s/he will get a list of 
alternatives ordered by frequency, for 
example <t i t le>) .  Other obligatory 
elements, such as dates and numbers, 
will also be automatically generated. 
o Some other elements in the template 
are optional (e.g., <seg9>).  Again, 
a list of alternatives will be offered to 
the user. These optional elements are 
.sensitive to the .context (document or 
division type), and markup is also re- 
sponsible for constraining the valid op- 
- ~ tion.s.g:iverlTtQ,the user:. Obligatory and 
optional elements are retrieved from 
TM2, and make a considerable part of 
the source document. 
. All documents have an important part 
of their content which is not deter- 
36 
Word/doc. 'Num.  doc. TM2 
0-500 378 34.91 
500-1,000 -25 . . . .  .M:0t - 
More 1,000 16 3.01 
Weighted mean 31.8 
Table 4: % generated by TM2 
mined by the DTD (<d iv l>) .  It is the 
most variable part, and .the system lets 
the writer input text freely. It is when 
TM2 has nothing to offer that TM1 
and TM3 may provide useful material. 
Given the recurrent style of legal doc- 
umentation, it is quite likely that the 
user will be using many of the bilin- 
gual text choices already aligned and 
available in TM1 and TM3. 
2. Once the source document has been com- 
pleted, the system derives its particular 
logical structure, which, with the aid of the 
target DTD, is projected into the resulting 
target logical structure. 
5 Eva luat ion  
Table 4 shows the number of words that make 
up the segments stored in TM2 from the source 
documents. There is a line for each document 
size considered. We can see that the average 
of segments contained in TM2 is 31.8%, on a 
scale from 34.91% to only 3.01%. The amount 
of segments dealt with in this way largely de- 
pends on the size of the document. Short doc- 
uments (90.21) have about 35% of their text 
composed in this way. This figure goes down to 
3% in documents larger than 1,000 words. This 
is understandable, in the sense that the larger 
the document, the smaller proportion of fixed 
sections it will contain. 
Table 5. shows the Immber of words that are 
proposed for the target document. These trans- 
lations are obtained from what is stored in TM2 
complemented by algorithms designed to trans- 
late dates and numbers. We can see that the 
average of document ranslated is 34%. Short 
documents have 36% of their text translated. 
falling to above 11% in t, he case of large docu- 
I l l ents .  
37 
Word/doc. Num. doc. TM2 Alg. Total 
0-500 378 28.3 7.7 36 
~,500-1;000 25 ' :.: 12.3  . '9.6 ? -.21-3'. 
More 1,000 16 4.7 !6 .41  10.7 
i i 
W.M.  26.5 ' 7.6 I 34.2 
Table 5: % translated by TM2 and algorithms 
6 Conc lus ions  
We have shown how7 DTDs derived from de- 
? scriptive markup can~be"employed to ease the  
process of generating bilingual dedicated ocu- 
mentation. On average, one third of the con- 
tents of thedocuments can be automatically ac- 
counted for. It must also be pointed out that 
the part being dealt with represents the core 
structure, lay-out and logical components of the 
text. The remaining two-thirds of untreated 
document can still be managed with the aid 
of sentence-oriented TMBS, filling in the gaps 
in the ore/all skeleton provided by the target 
template. Composers may also browse TM3 to 
retrieve whole blocks for those parts which are 
not determined by the DTD. One of the clear 
targets for the future is to extend the cover- 
age of the corpus and to test structural taggers 
against other document types. A big challenge 
we face is to develop tools that automatically 
perform the recognition of documents from less 
restricted and more open text types. However, 
we are not sure of the extent of the practicality 
of such an approach. An alternative direction 
we are presently considering is to establish a 
collection of pre-defined ocument types, which 
would be validated by the institutional writers 
themselves. It is a process currently being im- 
plemented in the Basque administration to de- 
fine docmnent models for writers and transla- 
tors to follow. What we have demonstrated is 
that paired DTDs, complemented with rich lan- 
guage resources of the kind defined in this pa- 
per, allow for the design of optimal editing envi- 
ronments which would combine both document 
composition and translation as one single pro- 
cess. All the resourcesneeded (DTDs.and TMs) . 
can be induced from an aligned corpus. 
7 Acknowledgements  
This research is being partially supported by the 
Spanish Research Agency, project ITEM, TIC- 
96-1243-C03-01. 
References  
H. Ahonen. Automatic Generation of SGML 
:Content Models. Electronic :Publishing, 8(2- 
3):195-206, 1995. 
L. Burnard, C. Speberg-McQueen. TEILite: 
An Introduction to Text Encoding 
for Interchange. URL://http://www- 
tel. uic. edu/orgs/tei/intros/teiu5, tei, 1995. 
Casillas A., Abaitua J., Martinez R. Extracci6n 
y aprovechamiento de DTDs emparejadas en 
. . . . . . . . . . . . .  corpus paralelos. Proceesamientq: deL!~enguaje 
Natural, 25:33-41, 1999. 
ISO 8879, Information Processing-Text and Of- 
fice Systems-Standard Generalized Markup 
Language (SGML). International Organiza- 
tion For Standards, 1986, Geneva. 
J. Lang6, I~ Gaussier, B. Daile. Bricks and 
Skeletons: Some Ideas for the Near Future of 
MATH. Machine Translation, 12:39-51, 1997. 
Martinez R., Abaitua J., Casillas R. Bilingual 
parallel text segmentation and tagging for 
specialized ocumentation. Proceedings of the 
International Conference Recent Advances in 
Natural Language Processing (RANLP'97), 
369-372, 1997. 
Martinez R., Abaitua J., Casillas A.. Bi- 
text Correspondences through Rich Mark- 
up. 36th Annual Meeting of the Association 
for Computational Linguistics abd 17 Inter- 
national Conference on Computational Lin- 
guistics (COLING-ACL'98), 812-818, 1998. 
Martinez R., Abaitua J., Casillas A.. Aligning 
tagged bitexts. Sixth Workshop on Very Large 
Corpora, 102-109, 1998. 
A. Melby. Data Exchange from OSCAR and 
MARTIF Projects. First International con- 
ference on Language Resources ~4 Evaluation, 
3-7, 1998. 
38 
Cascading XSL filters for content selection in multilingual 
document generation 
Guillermo BARRUTIETA 
Mondragon Unibertsitatea  
Loramendi, 4 
Arrasate, Spain, 20500 
gbarrutieta@eps.muni.es  
Joseba ABAITUA 
Universidad de Deusto 
Avenida de las Universidades, 24 
Bilbao, Spain, 48007 
abaitua@fil.deusto.es 
JosuKa D?AZ 
Universidad de Deusto 
Avenida de las Universidades, 24 
Bilbao, Spain, 48007 
josuka@eside.deusto.es  
 
Abstract 
Content selection is a key factor of any 
successful document generation system. 
This paper shows how a content selection 
algorithm has been implemented using an 
efficient combination of XML/XSL 
technology and the framework of RST for 
discourse modeling. The system generates 
multilingual documents adapted to user 
profiles in a learning environment for the 
web.  This CourseViewGenerator applies 
simplified RST schemes to the elaboration 
of a master document in XML from which 
content segments are chosen to suit the 
user's needs. The personalisation of the 
document is achieved through the 
application of a sequence of filtering levels 
of text selection based on the user aspects 
given as input. These cascading filters are 
implemented in XSL. 
Introduction 
It is widely accepted that content selection 
plays a crucial role in text generation (Reiter 
and Dale 2000). This process is normally seen 
as a goal-directed activity in which text 
segments are fit into the discourse structure of 
the text so as to convey a coherent 
communicative goal (Grosz and Sidner 1986). 
Content planning techniques, such as textual 
schemas (McKeown 1985) or plan operators 
(Moore and Paris 1993), have been successfully 
used as models of text generation. There are 
cases, though, in which these techniques may 
face some limitations, for example, when the 
structure of the discourse is difficult to 
anticipate (Mellish et al 1998). Nevertheless, 
when a set of well-defined communicative 
goals exists, complex goals can be broken down 
into sequences of utterances and generation 
becomes an efficient "top-down'' process 
(Marcu 1997). 
This paper shows a macro level content 
selection algorithm that applies user profiles to 
constrain and discriminate the contents of a 
text, whose discourse structure is represented 
using a simplified version of Rhetorical 
Structure Theory (Mann and Thompson 1988). 
The algorithm has been implemented using 
XML/XSL-based technology in a multilingual 
document generation system for educational 
purposes. The main objective of this 
CourseViewGenerator system (Barrutieta, 2001 
and Barrutieta et al, 2001) is to automatically 
produce multilingual learning documents that 
suit the student's needs at each particular stage 
of the learning process. Figure 1 shows the 
overall architecture of the system. 
 
 
 
Course material
(multilingual 
parallel corpus)
User aspects
xml-dtd
Document generation
Document view
COURSE GENERATOR
Generation engine
html-xml-dtd-
xsl-javascriptSelect content and format in an?intelligent? way.
Inputs
W eb browser
 
Figure 1: General scheme of the multilingual 
document generation system 
We will begin by explaining the different 
parts of the system before addressing in more 
detail the content selection algorithm itself. The 
system starts by constructing a master 
document of the kind Hirst et al (1997) 
proposed. This master document consists in a 
full-fledged text with references to all necessary 
multimedia elements (figures, tables, pictures, 
links, etc.). In our case, this master document 
takes the shape of a simple text file with all 
relevant information tagged in XML. Tags 
carry information of the logical composition of 
the text as well as metadata information about 
 its discourse structure. The text is seen as raw 
data, and tags encapsulate these raw data as 
metadata. The structure of the discourse is 
represented using a simplified version of RST. 
RST is simplified in the sense that the 
granularity of discourse segments does not 
transcend the boundaries of the sentence. 
Table 1. illustrates this gross-grained 
version of RST in which discourse relations are 
represented as XML tags.  
 
 
<RST> 
  <RST-S> 
    <PREPARATION> 
      <S>  What is knowledge management?  </S> 
    </PREPARATION> 
  </RST-S>    
  <RST-N> 
    <S> 
      Knowledge, in a business context, is the organizational    
      memory, which  people know collectively and individually 
    </S> 
    <S> 
      Management is the judicious use of means to accomplish     
      an end 
    </S> 
    <S> 
      Knowledge management is the combination of those  
       concepts, KM = knowledge + management 
    </S> 
  </RST-N> 
</RST> 
<RST> 
  <RST-S> 
    <PREPARATION> 
      <S>  ?Qu? es gesti?n del conocimiento?  </S> 
    </PREPARATION> 
  </RST-S>    
  <RST-N> 
    <S> 
      Conocimiento, en el contexto de los negocios, es la memoria 
      de la organizaci?n, lo que la gente sabe colectiva 
      e individualmente 
    </S> 
    <S> 
      Gesti?n es el uso juicioso de recursos para alcanzar un fin 
    </S> 
    <S> 
      Gesti?n del conocimiento es la combinaci?n de esos dos  
      conceptos, GC = gesti?n + conocimiento 
    </S> 
  </RST-N> 
</RST> 
<RST> 
  <RST-S> 
    <PREPARATION> 
      <S>  Zer da ezagutzaren kudeaketa?  </S> 
    </PREPARATION> 
  </RST-S>    
  <RST-N> 
    <S> 
      Kudeaketa, negozioetan, erakundearen memoria  
      da, jendeak bakarka eta taldeka dakiena  
    </S> 
    <S> 
      Kudeaketak erabideen erabilera zuzena du helburu 
    </S> 
    <S> 
      Ezagutzaren kudeaketa bi kontzeptu hauen nahasketa da,  
      EK = ezagutza + kudeaketa 
    </S> 
  </RST-N> 
</RST> 
Table 1: Gross-grained RST in XML 
As any other standard RST discourse tree, 
this simplified RST contains a nucleus for each 
text paragraph, and one or several satellites 
linked by a discourse relation to the nucleus 
within the same paragraph. The nucleus is an 
absolutely essential segment of the text, as it 
carries the main message that the author wants 
to convey. Satellites can be replaced or erased 
without changing the overall message and play 
an important supporting role for the nucleus. 
In our system, satellites are selected or 
discarded depending on the reader?s profile. 
The reader?s profile is defined through a set of 
user aspects. These take the form of multi-
value parameters that were sketched after a 
number of surveys were conducted among 
teachers, students and other experts from the 
educational context. As a result of these surveys 
a user model was proposed (Barrutieta et al 
2002). Table 2 illustrates a simplified version of 
the model. 
 
 
 
Specific User Aspects Discrete values 
Subject Language processors 
Moment in time Before the course / Period 1 / 
Period 2 / ? / After the 
course (review) 
Languages EN/ ES/ EU 
General User Aspects Discrete values 
Level of expertise Null / Basic / Medium / High
Reason to read To get an idea / To get deep 
into it 
Background Not related to the subject / 
Related to the subject 
Opinion or motivation Against / Without an opinion 
or motivation / In favour 
Time available A little bit of time / Quite 
some time / Enough time 
Table 2:  User model 
Based on this user model, we will now 
discuss the content selection algorithm 
(henceforth CSA). The CSA determines which 
segments of the discourse are going to be used 
in order to make explicit  the set of parameters 
that conform with the user?s profile. In 
principle, nuclei will always be chosen (as they 
convey the main message of the text); satellites, 
however, will be selected depending on their  
relation to the nucleus and the user aspects that 
are activated at the time of generation. 
 
 The selection algorithm works in three 
consecutive phases: parallel selection, 
horizontal filtering and vertical filtering. 
Vertical filtering is the most important phase of 
the three as it is here that the parts of the 
discourse tree are selected or discarded. 
1 CSA - Parallel selection - Phase 1 
In the phase of parallel selection two of the 
three specific user aspects are taken into 
account: subject and languages. These aspects 
identify the relevant XML master document in 
the chosen language (as illustrated in figure 2.). 
There is one master document for each subject 
covered by the system, and these documents 
contain parallel aligned versions of the texts in 
each language (English, Spanish and Basque, in 
our case). 
 
 
 
Figure 2: CSA ? Parallel selection 
As a result of this first filtering phase, the 
appropriate language division of the master 
document is selected. This text division is the 
input for subsequent filtering phases in which 
the particular segments of the document will be 
discriminated.  
2 CSA - Horizontal filtering - Phase 2 
The horizontal filtering phase concerns the third 
remaining user aspect that is moment in time, 
which is used to suit the generated text to the 
particular moment of the learning plan.  This 
aspect cuts horizontally the parallel selection of 
the previous section. 
The master document is structured in 
accordance with a set of course scheduling 
parameters. Each day and learning unit within 
the day is correlated with corresponding set of 
learning entities in the XML master document. 
In this way, the generated document can be  
targeted for learning unit 1 of day 1, or any 
other day or unit. The XML master file also 
contains some informative elements that the 
reader may need to know even before the 
course starts or after it has finished. These will 
be generated also as a result of some specific 
user aspects that are activated. Figure 3 shows a 
graphical representation of horizontal filtering. 
 
 
 
 
Figure 3:  CSA ? Horizontal filtering 
3 CSA - Vertical filtering - Phase 3 
The final phase of vertical filtering comprises 
the five user aspects of level expertise, reason 
to read, professional background, opinion or 
motivation and time available. These five 
aspects will be relevant to discriminate those 
parts of the discourse tree which have been 
previously selected and filtered.  
Nuclei will be always maintained because 
they are, by definition, irreplaceable segments 
of the text and convey the main message. 
Satellites are segments of the text that will be 
subject to the algorithm's process of selection. 
Figure 4. shows graphically this filtering phase. 
 
 
 
 
Figure 4: Vertical filtering 
 
 The set of discrimination rules applied in 
this first version of the content selection 
algorithm is described below. These rules apply 
in subsequent checking levels of filtering, and 
therefore have a cascading effect. It is known 
that RST covers an indefinite number of 
relation-satellites (Knott, 1995) which have 
been classified by Hovy & Maier (1997), but 
we will only mention the set of relation-
satellites used in the master document taken as 
example. 
 
3.1 Vertical filter ? Level of expertise 
If level_expertise = ?null? or  
   level_expertise = ?basic? Then 
   no relation-satellite is discarded; 
 
If level_expertise = ?medium? or      
   level_expertise = ?high? Then 
   discard example, exercise, background  
   and preparation relation-satellites; 
 
Rationale for the rule: Any user with a null 
or basic level of expertise on the selected 
subject will need all the information available 
to understand the text. Alternatively, a user with 
a medium or high level of expertise will not 
require examples, exercises, background, 
preparation and similar relation-satellites.  
 
3.2 Vertical filter ? Reason to read 
If reason_to_read = ?to get an idea? Then  
   discard exercise and elaboration (all the     
   types of elaboration: textual elaboration,  
   link elaboration and image elaboration)  
   relation-satellites; 
 
If reason_to_read = ?to get deep into it?Then 
   no relation-satellite is discarded; 
 
Rationale: Any user wishing to broaden his 
knowledge in the selected subject will need 
additional information. Conversely, a user with 
the intention of just getting an idea does not 
need any exercise, elaboration, or similar 
relation-satellites, which often require a more 
active role on the part of the user. 
 
3.3 Vertical filter ? Professional background 
If job_studies =  ?not related subject? Then 
   no relation-satellite is discarded; 
 
If job_studies = ?related subject? Then 
   discard background and preparation     
   relation-satellites; 
 
Rationale: Any user whose professional 
background is not related to the subject will 
need all the additional supporting text to 
understand its meaning. Conversely, if the user 
is related to the selected subject, we may 
assume that background, preparation and 
similar relation-satellites will be unnecessary. 
 
3.4 Vertical filter ? Opinion or motivation 
If opinion_motivation = ?against? or 
   opinion_motivation = ?without an opinion     
   or motivation? Then 
   no relation-satellite is discarded; 
 
If opinion_motivation = ?in favour? Then 
   discard motivate, antithesis, concession  
   and justify relation-satellite; 
 
Rationale: A motivated or favourable user 
will not require additional motivation and, 
therefore, the motivate, antithesis, concession, 
justification, and similar relation-satellites will 
be disregarded, since they play a role in 
changing the opinion of the user to be in favour 
of the course material. 
 
3.5 Vertical filter ? Time available 
If time_available = ?a little bit of time? Then 
discard all the relation-satellites; 
 
If time_available = ?quite some time? Then 
   discard exercise relation-satellite; 
 
If time_available = ?enough time? Then 
   no relation-satellite is discarded; 
 
Rationale: Time availability is a crucial user 
aspect. If the user is in a rush or has little time, 
the system has to provide only the most 
elementary information. In such case only 
nuclei will be generated. If the user has a bit 
more time, but not much, exercises are not 
offered, since they are usually quite time 
consuming and they require an active 
participation of the user. Finally, if the user has 
plenty of time, all the additional information is 
delivered. 
 
3.6 Final comments on vertical filters 
Cascading filters apply to the relation-
satellites that are still active after the previous 
phases in the generation process. When a 
vertical filter 3 tries to get rid of a relation-
satellite already abandoned at a previous phase 
(2 or 1), there will be nothing to act upon, but 
 
 this circumstance will produce no consequence, 
since the CSA continues the filtering process on 
the remaining text. Thus, the order in which the 
vertical filters are applied is not relevant. 
After the filtering process has been 
successfully completed, there is still a final 
presentation task. A good presentation is, in our 
opinion, one that will provide the student with 
an optimal version of the document to read, 
understand and fruitfully assimilate its content. 
4 Implementation 
The javascript code manages the user aspects 
(one of the inputs of the algorithm) and the 
application of the casdading filters (the CSA). 
Depending on the user aspects given by the 
user, the variables sXSL1 to sXSL5 take the 
value of the filter to be applied for each user 
aspect (level of expertise, reason to read, 
background, opinion or motivation and time 
available). 
The sResult variable contains the XML file 
whose content will be varying after each filter is 
applied. Table 3 shows the code that executes a 
filter. 
 
  
 
objData.loadXML(sResult); 
objStyle.load(sXSL1); 
sResult=objData.transformNode(objStyle);
 
Table 3:  Javascript implementation 
XSL filters pass on (or not) one element to 
the following vertical filter depending on the 
rules described before. Table 4 shows how this 
is done with the relation-satellite 
BACKGROUND. 
 
 
 
<xsl:template 
match="BACKGROUND"> 
  <xsl:copy> 
     <xsl:apply-templates/> 
  </xsl:copy> 
</xsl:template> 
 
Table 4:  XSL implementation 
5 Experimentation 
The objective of the experiment is to validate 
the hypothesis expressed in the filtering rules 
and the actual filtering mechanism of the CSA. 
Several ideas are taken into consideration in 
this respect, but we are aware that users 
(students, professor and other scholars) are the 
final judges. Their assessment of the system 
will depend on whether the generated document  
meet (or fail to do so) their information 
requirements, providing them with just the right 
type and amount of information. 
Conclusions 
In the tests conducted so far, the 
CourseViewGenerator is functioning correctly. 
One of the features that is worth considering is 
the scalability of the filtering mechanism. We 
anticipate two types of expansions to the 
system: (1) Increasing the size of the corpus, 
including more subjects and master documents, 
and (2) augmenting the user model by adding 
user aspects or by adding more parameters to 
the existing user aspects. 
The first type of expansion will not require 
any alteration of the CSA as long as the added 
document tokens conform to the existing DTD 
and our RST model. In order to increase the 
size of the corpus, it will be necessary to 
annotate XML discourse-tree metadata 
manually. This is a complex and time-
consuming task (as has been noted by Carlson 
and Marcu, 2001). Future research activities 
should focus on helping automate the 
annotation process, for example using cue 
phrases ? la Knott (Knott 1995; Alonso and 
Castell?n, 2001). 
The second type of expansion requires only 
the elaboration of additional XSL filters. 
Adding new values to existing user aspects 
requires only the modification of the 
corresponding XSL filter. Any of these last two 
operations can be incorporated easily. 
Therefore, adding a new user aspect or a new 
discrete value does not increase in any 
substantial way the complexity of the system.  
Acknowledgements  
This research was partly supported by the 
Basque Government (XML-Bi: multilingual 
document flow management procedures using 
XML/TEI-P3,  PI1999-72 project). 
 
 References 
Alonso, L. and Castell?n, I. (2001) Towards a 
delimitation of discursive segment for Natural 
Language Processing applications. First 
International Workshop on Semantics, Pragmatics 
and Rhetoric. Donostia (Spain), pp. 45-52. 
Barrutieta, G. (2001)  Generador inteligente de 
documentos de formaci?n. Virtual Educa 2001, 
Madrid (Spain), pp. 256-261. 
Barrutieta, G., Abaitua, J. and D?az, J. (2001) Gross-
grained RST through XML metadata for 
multilingual document generation. MT Summit 
VIII. Santiago de Compostela (Spain), pp. 39-42. 
Barrutieta, G., Abaitua, J. and D?az, J. (2002) User 
modelling and content selection for multilingual 
document generation. Unpublished but currently 
been evaluated for publication. 
Carlson, L.and Marcu, D. (2001) Discourse tagging 
manual. Technical report ISI-TR-545. ISI Marina 
del Rey (USA). 
Grosz, B. and Sidner, C. (1986) Attention, intentions 
and the structure of discourse'', Computational 
Linguistics, 12:175-204.  
Hirst, G., DiMarco, C., Hovy E. & Parsons K. 
(1997) Authoring and Generating Heath-
Education Documents That Are Tailored to the 
Needs of the Individual Patient. Proceedings of 
the Sixth International Conference. UM97. Vienna 
(NY-USA), pp. 107-118. 
Hovy, E. & Maier, E. (1997) Parsimonious or 
profligate: how many and which discourse 
structure relations? 
<http://citeseer.nj.nec.com/hovy97parsimonious.
html>  
Knott, A. (1995) A Data-Driven Methodology for 
Motivating a Set of Coherence Relations, Ph.D. 
thesis, University of Edinburgh, Edinburgh (UK). 
Mann, W.C., and Thompson, S.A. (1988) Rhetorical 
Structure Theory: A theory of text organization. 
Tech. Rep. RS-87-190. Information Sciences 
Institute. Los Angeles, CA. 
Marcu, D. (1997) From local to global coherence: a 
bottom-up approach to text planning, in 
Proceedings of AAAI-97, American Association 
for Artificial Intelligence, pp.629-635. 
McKeown, K. (1985) Text Generation: Using 
Discourse Strategies and Focus Constraints to 
Generate Natural Language Text, Cambridge 
University Press.  
Mellish, C., M. O'Donnell, J. Oberlander and A. 
Knott (1998) An architecture for opportunistic text 
generation. Proceedings of the Ninth International 
Workshop on Natural Language Generation, 
Niagara-on-the-Lake, Ontario, Canada, pp. 28-37. 
 
Moore, J. and Paris, C. (1993) Planning texts for 
advisory dialogues: capturing intentional and 
rhetorical information, Computational Linguistics, 
19. 
Reiter, E. and Dale, R. (2000) Building applied 
natural language generation systems. Cambridge 
University Press (UK). 
 
