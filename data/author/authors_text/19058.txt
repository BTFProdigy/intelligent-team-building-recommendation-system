Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 1443?1448,
Seattle, Washington, USA, 18-21 October 2013. c?2013 Association for Computational Linguistics
Where Not to Eat? Improving Public Policy by Predicting Hygiene
Inspections Using Online Reviews
Jun Seok Kang? Polina Kuznetsova?
?Department of Computer Science
Stony Brook University
Stony Brook, NY 11794-4400
{junkang,pkuznetsova,ychoi}
@cs.stonybrook.edu
Michael Luca? Yejin Choi?
?Harvard Business School
Soldiers Field Road
Boston, MA 02163
mluca@hbs.edu
Abstract
This paper offers an approach for governments
to harness the information contained in social
media in order to make public inspections and
disclosure more efficient. As a case study, we
turn to restaurant hygiene inspections ? which
are done for restaurants throughout the United
States and in most of the world and are a fre-
quently cited example of public inspections
and disclosure. We present the first empiri-
cal study that shows the viability of statistical
models that learn the mapping between tex-
tual signals in restaurant reviews and the hy-
giene inspection records from the Department
of Public Health. The learned model achieves
over 82% accuracy in discriminating severe
offenders from places with no violation, and
provides insights into salient cues in reviews
that are indicative of the restaurant?s sanitary
conditions. Our study suggests that public
disclosure policy can be improved by mining
public opinions from social media to target in-
spections and to provide alternative forms of
disclosure to customers.
1 Introduction
Public health inspection records help customers to
be wary of restaurants that have violated health
codes. In some counties and cities, e.g., LA, NYC,
it is required for restaurants to post their inspec-
tion grades at their premises, which have shown
to affect the revenue of the business substantially
(e.g., Jin and Leslie (2005), Henson et al (2006)),
thereby motivating restaurants to improve their sani-
tary practice. Other studies have reported correlation
between the frequency of unannounced inspections
per year, and the average violation scores, confirm-
ing the regulatory role of inspections in improving
the hygiene quality of the restaurants and decreasing
food-borne illness risks (e.g., Jin and Leslie (2003),
Jin and Leslie (2009), Filion and Powell (2009),
NYC-DoHMH (2012)).
However, one practical challenge in the current
inspection system is that the department of health
has only limited resources to dispatch inspectors,
leaving out a large number of restaurants with un-
known hygiene grades. We postulate that online re-
views written by the very citizens who have visited
those restaurants can serve as a proxy for predicting
the likely outcome of the health inspection of any
given restaurant. Such a prediction model can com-
plement the current inspection system by enlight-
ening the department of health to make a more in-
formed decision when allocating inspectors, and by
guiding customers when choosing restaurants.
Our work shares the spirit of recently emerging
studies that explores social media analysis for pub-
lic health surveillance, in particular, monitoring in-
fluenza or food-poisoning outbreaks from micro-
blogs (e.g., Aramaki et al (2011), Sadilek et al
(2012b), Sadilek et al (2012a), Sadilek et al (2013),
Lamb et al (2013), Dredze et al (2013), von Etter
et al (2010)). However, no prior work has examined
the utility of review analysis as a predictive tool for
accessing hygiene of restaurants, perhaps because
the connection is not entirely conspicuous: after all,
customers are neither familiar with inspection codes,
nor have the full access to the kitchen, nor have been
asked to report on the hygiene aspects of their expe-
1443
review count*review count (filtered)*
Coe
fficie
nt
0.05
0.10
(a)0 10 20 30 40 50
np review count*np review count (filtered)*
  
0.05
0.10
(b)0 10 20 30 40 50
avg review rating*avg review rating (filtered)*
Coe
fficie
nt
?0.05
?0.03
(c)0 10 20 30 40 50
avg review length*avg review length(filtered)*
  
0
0.05
(d)0 10 20 30 40 50Inspection Penalty Score Threshold
Figure 1: Spearman?s coefficients of factors & inspection
penalty scores. ?*?: statistically significant (p ? 0.05)
rience.
In this work, we report the first empirical study
demonstrating the utility of review analysis for pre-
dicting health inspections, achieving over 82% accu-
racy in discriminating severe offenders from places
with no violation, and find predictive cues in reviews
that correlate with the inspection results.
2 Data
We scraped entire reviews written for restaurants in
Seattle from Yelp over the period of 2006 to 2013.1
The inspection records of Seattle is publicly avail-
able at www.datakc.org. More than 50% of the
restaurants listed under Yelp did not have inspection
records, implying the limited coverage of inspec-
tions. We converted street addresses into canonical
forms when matching restaurants between Yelp and
inspection database. After integrating reviews with
inspection records, we obtained about 13k inspec-
1Available at http://www.cs.stonybrook.edu/
?junkang/hygiene/
bimodality*bimodality (filtered)*
Coe
fficie
nt
0
0.05
0.10
(a)0 10 20 30 40 50
fake review count*fake review count (filtered)
   
0
0.05
0.10
(b)0 10 20 30 40 50
Inspection Penalty Score Threshold
Figure 2: Spearman?s coefficients of factors & inspection
penalty scores. ?*?: statistically significant (p ? 0.05)
tions over 1,756 restaurants with 152k reviews. For
each restaurant, there are typically several inspec-
tion records. We defined an ?inspection period? of
each inspection record as the period of time start-
ing from the day after the previous inspection to the
day of the current inspection. If there is no previ-
ous inspection, then the period stretches to the past
6 months in time. Each inspection period corre-
sponds to an instance in the training or test set. We
merge all reviews within an inspection period into
one document when creating the feature vector.
Note that non-zero penalty scores may not nec-
essarily indicate alarming hygiene issues. For ex-
ample, violating codes such as ?proper labeling? or
?proper consumer advisory posted for raw or under-
cooked foods? seem relatively minor, and unlikely to
be noted and mentioned by reviewers. Therefore, we
focus on restaurants with severe violations, as they
are exactly the set of restaurants that inspectors and
customers need to pay the most attention to. To de-
fine restaurants with ?severe violations? we experi-
ment with a varying threshold t, such that restaurants
with score ? t are labeled as ?unhygienic?.2
3 Correlates of Inspection Penalty Scores
We examine correlation between penalty scores and
several statistics of reviews:
I. Volume of Reviews:
2For restaurants with ?hygienic? labels, we only consider
those without violation, as there are enough number of such
restaurants to keep balanced distribution between two classes.
1444
61.42 61.46 66.61
70.83 77.16
81.37
Acc
urac
y (%
)
60
80
Inspection Penalty Score Threshold
0 10 20 30 40 50
Figure 3: Trend of penalty score thresholds & accuracies.
? count of all reviews
? average length of all reviews
II. Sentiment of Reviews: We examine whether
the overall sentiment of the customers correlates
with the hygiene of the restaurants based on follow-
ing measures:
? average review rating
? count of negative (? 3) reviews
III. Deceptiveness of Reviews: Restaurants with
bad hygiene status are more likely to attract negative
reviews, which would then motivate the restaurants
to solicit fake reviews. But it is also possible that
some of the most assiduous restaurants that abide
by health codes strictly are also diligent in solicit-
ing fake positive reviews. We therefore examine the
correlation between hygiene violations and the de-
gree of deception as follows.
? bimodal distribution of review ratings
The work of Feng et al (2012) has shown
that the shape of the distribution of opinions,
overtly skewed bimodal distributions in partic-
ular, can be a telltale sign of deceptive review-
ing activities. We approximately measure this
by computing the variance of review ratings.
? volume of deceptive reviews based on linguistic
patterns
We also explore the use of deception classifiers
based on linguistic patterns (Ott et al, 2011)
to measure the degree of deception. Since no
deception corpus is available in the restaurant
domain, we collected a set of fake reviews and
truthful reviews (250 reviews for each class),
following Ott et al (2011).3
310 fold cross validation on this dataset yields 79.2% accu-
racy based on unigram and bigram features.
Features Acc. MSE SCC
- *50.00 0.500 -
review count *50.00 0.489 0.0005
np review count *52.94 0.522 0.0017
cuisine *66.18 0.227 0.1530
zip code *67.32 0.209 0.1669
avrg. rating *57.52 0.248 0.0091
inspection history *72.22 0.202 0.1961
unigram 78.43 0.461 0.1027
bigram *76.63 0.476 0.0523
unigram + bigram 82.68 0.442 0.0979
all 81.37 0.190 0.2642
Table 1: Feature Compositions & Respective Accuracies,
Respective Mean Squared Errors(MSE) & Squared Cor-
relation Coefficients (SCC), np=non-positive
Filtering Reviews: When computing above statis-
tics over the set of reviews corresponding to each
restaurant, we also consider removing a subset of re-
views that might be dubious or just noise. In partic-
ular, we remove reviews that are too far away (delta
? 2) from the average review rating. Another filter-
ing rule can be removing all reviews that are clas-
sified as deceptive by the deception classifier ex-
plained above. For brevity, we only show results
based on the first filtering rule, as we did not find
notable differences in different filtering strategies.
Results: Fig 1 and 2 show Spearman?s rank corre-
lation coefficient with respect to the statistics listed
above, with and without filtering, computed at dif-
ferent threshold cutoffs ? {0, 10, 20, 30, 40, 50} of
inspection scores. Although coefficients are not
strong,4 they are mostly statistically significant with
p ? 0.05 (marked with ?*?), and show interesting
contrastive trends as highlighted below.
In Fig 1, as expected, average review rating is neg-
atively correlated with the inspection penalty scores.
Interestingly, all three statistics corresponding to the
volume of customer reviews are positively corre-
lated with inspection penalty. What is more inter-
esting is that if potentially deceptive reviews are fil-
tered, then the correlation gets stronger, which sug-
gests the existence of deceptive reviews covering up
unhappy customers. Also notice that correlation is
4Spearman?s coefficient assumes monotonic correlation. We
suspect that the actual correlation of these factors and inspection
scores are not entirely monotonic.
1445
Hygienic gross, mess, sticky, smell, restroom, dirty
Basic Ingredients: beef, pork, noodle, egg, soy,
ramen, pho,
Cuisines Vietnamese, Dim Sum, Thai, Mexican,
Japanese, Chinese, American, Pizza, Sushi, Indian,
Italian, Asian
Sentiment: cheap, never,
Service & Atmosphere cash, worth, district, delivery,
think, really, thing, parking, always, usually, definitely
- door: ?The wait is always out the door when I
actually want to go there?,
- sticker: ?I had sticker shock when I saw the prices.?,
- student: ?heap, large portions and tasty = the perfect
student food!?,
- the size: ?i was pretty astonished at the size of all the
plates for the money.?,
- was dry: ?The beef was dry, the sweet soy and
anise-like sauce was TOO salty (almost inedible).?,
- pool: ?There are pool tables, TV airing soccer games
from around the globe and of course - great drinks!?
Table 2: Lexical Cues & Examples - Unhygienic (dirty)
generally stronger when higher cutoffs are used (x-
axis), as expected. Fig 2 looks at the relation be-
tween the deception level and the inspection scores
more directly. As suspected, restaurants with high
penalty scores show increased level of deceptive re-
views.
Although various correlates of hygiene scores ex-
amined so far are insightful, these alone are not in-
formative enough to be used as a predictive tool,
hence we explore content-based classification next.
4 Content-based Prediction
We examine the utility of the following features:
Features based on customers? opinion:
1. Aggregated opinion: average review rating
2. Content of the reviews: unigram, bigram
Features based on restaurant?s metadata:
3. Cuisine: e.g., Thai, Italian, as listed under Yelp
4. Location: first 5 digits of zip code
5. Inspection History: a boolean feature (?hy-
gienic? or ?unhygienic?), a numerical feature
(previous penalty score rescaled ? [0, 1]), a nu-
meric feature (average penalty score over all
previous inspections)
Hygienic:
Cooking Method & Garnish: brew, frosting, grill,
crush, crust, taco, burrito, toast
Healthy or Fancier Ingredients: celery, calamity,
wine, broccoli, salad, flatbread, olive, pesto
Cuisines : Breakfast, Fish & Chips, Fast Food,
German, Diner, Belgian, European, Sandwiches,
Vegetarian
Whom & When: date, weekend, our, husband,
evening, night
Sentiment: lovely, yummy, generous, friendly, great,
nice
Service & Atmosphere: selection, attitude,
atmosphere, ambiance, pretentious
Table 3: Lexical Cues & Examples - Hygienic (clean)
6. Review Count
7. Non-positive Review Count
Classification Results We use liblinear?s SVM
(Fan et al, 2008) with L1 regularization and 10 fold
cross validation. We filter reviews that are farther
than 2 from the average rating. We also run Sup-
port Vector Regression (SVR) using liblinear. Fig 3
shows the results. As we increase the threshold, the
accuracy also goes up in most cases. Table 1 shows
feature ablation at threshold t = 50, and ?*? denotes
statistically significant (p?0.05) difference over the
performance with all features based on student t-test.
We find that metadata information of restaurants
such as location and cuisine alone show good predic-
tive power, both above 66%, which are significantly
higher than the expected accuracy of random guess-
ing (50%).
Somewhat unexpected outcome is aggregated
opinion, which is the average review rating during
the corresponding inspection period, as it performs
not much better than chance (57.52%). This result
suggest that the task of hygiene prediction from re-
views differs from the task of sentiment classifica-
tion of reviews.
Interestingly, the inspection history feature alone
is highly informative, reaching accuracy upto 72%,
suggesting that the past performance is a good pre-
dictor of the future performance.
Textual content of the reviews (unigram+bigram)
turns out to be the most effective features, reaching
upto 82.68% accuracy. Lastly, when all the features
1446
are combined together, the performance decreases
slightly to 81.37%, perhaps because n-gram features
perform drastically better than all others.
4.1 Insightful Cues
Table 2 and 3 shows representative lexical cues for
each class with example sentences excerpted from
actual reviews when context can be helpful.
Hygiene: Interestingly, hygiene related words are
overwhelmingly negative, e.g., ?gross?, ?mess?,
?sticky?. What this suggests is that reviewers do
complain when the restaurants are noticeably dirty,
but do not seem to feel the need to complement on
cleanliness as often. Instead, they seem to focus on
other positive aspects of their experience, e.g., de-
tails of food, atmosphere, and their social occasions.
Service and Atmosphere: Discriminative fea-
tures reveal that it is not just the hygiene related
words that are predictive of the inspection results of
restaurants. It turns out that there are other quali-
ties of restaurants, such as service and atmosphere,
that also correlate with the likely outcome of inspec-
tions. For example, when reviewers feel the need
to talk about ?door?, ?student?, ?sticker?, or ?the
size? (see Table 2 and 3), one can extrapolate that
the overall experience probably was not glorious. In
contrast, words such as ?selection?, ?atmosphere?,
?ambiance? are predictive of hygienic restaurants,
even including those with slightly negative connota-
tion such as ?attitude? or ?pretentious?.
Whom and When: If reviewers talk about details
of their social occasions such as ?date?, ?husband?,
it seems to be a good sign.
The way food items are described: Another in-
teresting aspect of discriminative words are the way
food items are described by reviewers. In general,
mentions of basic ingredients of dishes, e.g., ?noo-
dle?, ?egg?, ?soy? do not seem like a good sign. In
contrast, words that help describing the way dish is
prepared or decorated, e.g., ?grill?, ?toast?, ?frost-
ing?, ?bento box? ?sugar? (as in ?sugar coated?)
are good signs of satisfied customers.
Cuisines: Finally, cuisines have clear correlations
with inspection outcome, as shown in Table 2 and 3.
5 Related Work
There have been several recent studies that probe the
viability of public health surveillance by measuring
relevant textual signals in social media, in particu-
lar, micro-blogs (e.g., Aramaki et al (2011), Sadilek
et al (2012b), Sadilek et al (2012a), Sadilek et al
(2013), Lamb et al (2013), Dredze et al (2013), von
Etter et al (2010)). Our work joins this line of re-
search but differs in two distinct ways. First, most
prior work aims to monitor a specific illness, e.g.,
influenza or food-poisoning by paying attention to
a relatively small set of keywords that are directly
relevant to the corresponding sickness. In contrast,
we examine all words people use in online reviews,
and draw insights on correlating terms and concepts
that may not seem immediately relevant to the hy-
giene status of restaurants, but nonetheless are pre-
dictive of the outcome of the inspections. Second,
our work is the first to examine online reviews in the
context of improving public policy, suggesting addi-
tional source of information for public policy mak-
ers to pay attention to.
Our work draws from the rich body of research
that studies online reviews for sentiment analysis
(e.g., Pang and Lee (2008)) and deception detec-
tion (e.g., Mihalcea and Strapparava (2009), Ott et
al. (2011), Feng et al (2012)), while introducing
the new task of public hygiene prediction. We ex-
pect that previous studies for aspect-based sentiment
analysis (e.g., Titov and McDonald (2008), Brody
and Elhadad (2010), Wang et al (2010)) would be a
fruitful venue for further investigation.
6 Conclusion
We have reported the first empirical study demon-
strating the promise of review analysis for predicting
health inspections, introducing a task that has poten-
tially significant societal benefits, while being rele-
vant to much research in NLP for opinion analysis
based on customer reviews.
Acknowledgments
This research was supported in part by the Stony
Brook University Office of the Vice President for
Research, and in part by gift from Google. We thank
anonymous reviewers and Adam Sadilek for helpful
comments and suggestions.
1447
References
Eiji Aramaki, Sachiko Maskawa, and Mizuki Morita.
2011. Twitter catches the flu: Detecting influenza epi-
demics using twitter. In Proceedings of the 2011 Con-
ference on Empirical Methods in Natural Language
Processing, pages 1568?1576, Edinburgh, Scotland,
UK., July. Association for Computational Linguistics.
Samuel Brody and Noemie Elhadad. 2010. An unsu-
pervised aspect-sentiment model for online reviews.
In Human Language Technologies: The 2010 Annual
Conference of the North American Chapter of the
Association for Computational Linguistics, HLT ?10,
pages 804?812, Stroudsburg, PA, USA. Association
for Computational Linguistics.
Mark Dredze, Michael J. Paul, Shane Bergsma, and Hieu
Tran. 2013. Carmen: A twitter geolocation system
with applications to public health. In AAAI Workshop
on Expanding the Boundaries of Health Informatics
Using AI (HIAI).
Rong-En Fan, Kai-Wei Chang, Cho-Jui Hsieh, Xiang-Rui
Wang, and Chih-Jen Lin. 2008. Liblinear: A library
for large linear classification. The Journal of Machine
Learning Research, 9:1871?1874.
Song Feng, Longfei Xing, Anupam Gogar, and Yejin
Choi. 2012. Distributional footprints of deceptive
product reviews. In ICWSM.
Katie Filion and Douglas A Powell. 2009. The use of
restaurant inspection disclosure systems as a means of
communicating food safety information. Journal of
Foodservice, 20(6):287?297.
Spencer Henson, Shannon Majowicz, Oliver Masakure,
Paul Sockett, Anria Johnes, Robert Hart, Debora Carr,
and Lewinda Knowles. 2006. Consumer assessment
of the safety of restaurants: The role of inspection
notices and other information cues. Journal of Food
Safety, 26(4):275?301.
Ginger Zhe Jin and Phillip Leslie. 2003. The effect of
information on product quality: Evidence from restau-
rant hygiene grade cards. The Quarterly Journal of
Economics, 118(2):409?451.
Ginger Zhe Jin and Phillip Leslie. 2005. The case in
support of restaurant hygiene grade cards.
Ginger Zhe Jin and Phillip Leslie. 2009. Reputational
incentives for restaurant hygiene. American Economic
Journal: Microeconomics, pages 237?267.
Alex Lamb, Michael J. Paul, and Mark Dredze. 2013.
Separating fact from fear: Tracking flu infections on
twitter. In the North American Chapter of the Associa-
tion for Computational Linguistics: Human Language
Technologies (NAACL-HLT).
Rada Mihalcea and Carlo Strapparava. 2009. The lie
detector: Explorations in the automatic recognition
of deceptive language. In Proceedings of the ACL-
IJCNLP 2009 Conference Short Papers, pages 309?
312, Suntec, Singapore, August. Association for Com-
putational Linguistics.
NYC-DoHMH. 2012. Restaurant grading in new york
city at 18 months. New York City Department of
Health and Mental Hygiene.
Myle Ott, Yejin Choi, Claire Cardie, and Jeffrey T. Han-
cock. 2011. Finding deceptive opinion spam by any
stretch of the imagination. In Proceedings of the 49th
Annual Meeting of the Association for Computational
Linguistics: Human Language Technologies, pages
309?319, Portland, Oregon, USA, June. Association
for Computational Linguistics.
Bo Pang and Lillian Lee. 2008. Opinion mining and
sentiment analysis. Foundations and trends in infor-
mation retrieval, 2(1-2):1?135.
Adam Sadilek, Henry Kautz, and Vincent Silenzio.
2012a. Predicting disease transmission from geo-
tagged micro-blog data. In Twenty-Sixth AAAI Con-
ference on Artificial Intelligence.
Adam Sadilek, Henry A. Kautz, and Vincent Silenzio.
2012b. Modeling spread of disease from social in-
teractions. In John G. Breslin, Nicole B. Ellison,
James G. Shanahan, and Zeynep Tufekci, editors,
ICWSM. The AAAI Press.
Adam Sadilek, Sean Brennan, Henry Kautz, and Vincent
Silenzio. 2013. nemesis: Which restaurants should
you avoid today? First AAAI Conference on Human
Computation and Crowdsourcing.
Ivan Titov and Ryan McDonald. 2008. A joint model
of text and aspect ratings for sentiment summariza-
tion. In Proceedings of ACL-08: HLT, pages 308?316,
Columbus, Ohio, June. Association for Computational
Linguistics.
Peter von Etter, Silja Huttunen, Arto Vihavainen, Matti
Vuorinen, and Roman Yangarber. 2010. Assess-
ment of utility in web mining for the domain of pub-
lic health. In Proceedings of the NAACL HLT 2010
Second Louhi Workshop on Text and Data Mining of
Health Documents, pages 29?37, Los Angeles, Cal-
ifornia, USA, June. Association for Computational
Linguistics.
Hongning Wang, Yue Lu, and Chengxiang Zhai. 2010.
Latent aspect rating analysis on review text data: a rat-
ing regression approach. In Proceedings of the 16th
ACM SIGKDD international conference on Knowl-
edge discovery and data mining, pages 783?792.
ACM.
1448
Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 1469?1473,
October 25-29, 2014, Doha, Qatar.
c
?2014 Association for Computational Linguistics
Keystroke Patterns as Prosody in Digital Writings:
A Case Study with Deceptive Reviews and Essays
Ritwik Banerjee Song Feng Jun S. Kang
Computer Science
Stony Brook University
{rbanerjee, songfeng, junkang}
@cs.stonybrook.edu
Yejin Choi
Computer Science & Engineering
University of Washington
yejin@cs.washington.edu
Abstract
In this paper, we explore the use of keyboard
strokes as a means to access the real-time writ-
ing process of online authors, analogously to
prosody in speech analysis, in the context of
deception detection. We show that differences
in keystroke patterns like editing maneuvers
and duration of pauses can help distinguish be-
tween truthful and deceptive writing. Empiri-
cal results show that incorporating keystroke-
based features lead to improved performance
in deception detection in two different do-
mains: online reviews and essays.
1 Introduction
Due to the practical importance of detecting deceit, in-
terest in it is ancient, appearing in papyrus dated back
to 900 B.C. (Trovillo, 1939). In more recent years, sev-
eral studies have shown that the deceiver often exhibits
behavior that belies the content of communication, thus
providing cues of deception to an observer. These in-
clude linguistic (e.g., Newman et al. (2003), Hancock
et al. (2004)) as well as paralinguistic (e.g., Ekman et
al. (1991), DePaulo et al. (2003)) cues. Recognizing
deception, however, remains a hard task for humans,
who perform only marginally better than chance (Bond
and DePaulo, 2006; Ott et al., 2011).
Recent studies suggest that computers can be sur-
prisingly effective in this task, albeit in limited domains
such as product reviews. Prior research has employed
lexico-syntactic patterns (Ott et al., 2011; Feng et al.,
2012) as well as online user behavior (Fei et al., 2013;
Mukherjee et al., 2013). In this paper, we study the
effect of keystroke patterns for deception detection in
digital communications, which might be helpful in un-
derstanding the psychology of deception and help to-
ward trustful online communities. This allows us to in-
vestigate differences in the writing and revisional pro-
cesses of truthful and fake writers. Our work thus
shares intuition with HCI research linking keystroke
analysis to cognitive processes (Vizer et al., 2009; Epp
et al., 2011) and psychology research connecting cog-
nitive differences to deception (Ekman, 2003; Vrij et
al., 2006).
Recent research has shown that lying generally im-
poses a cognitive burden (e.g., McCornack (1997), Vrij
et al. (2006)) which increases in real-time scenar-
ios (Ekman, 2003). Cognitive burden has been known
to produce differences in keytroke features (Vizer et
al., 2009; Epp et al., 2011). Previous research has not,
however, directly investigated any quantitative connec-
tion between keystroke patterns and deceptive writing.
In this paper, we posit that cognitive burdens in
deception may lead to measurable characteristics in
keystroke patterns. Our contributions are as follows:
(1) introducing keystroke logs as an extended linguis-
tic signal capturing the real-time writing process (anal-
ogous to prosody in speech analysis) by measuring the
writing rate, pauses and revision rate. (2) showing
their empirical value in deception detection, (3) provid-
ing novel domain-specific insights into deceptive writ-
ing, and (4) releasing a new corpus of deception writ-
ings in new domains.
1
2 Related Work
Prior research has focused mainly on using keystroke
traits as a behvioral biometric. Forsen et al. (1977)
first demonstrated that users can be distinguished by the
way they type their names. Subsequent work showed
that typing patterns are unique to individuals (Leggett
and Williams, 1988), and can be used for authentica-
tion (Cho et al., 2000; Bergadano et al., 2002) and in-
trusion detection (Killourhy and Maxion, 2009).
Keystroke pauses have been linked to linguistic pat-
terns in discourse (e.g. Matsuhashi (1981), van Hell et
al. (2008)) and regarded as indications of cognitive bur-
den (e.g., Johansson (2009), Zulkifli (2013)). In this pa-
per, we present the first empirical study that quantita-
tively measures the deception cues in real-time writing
process as manifested in keystroke logs.
3 Data Collection
As discussed by Gokhman et al. (2012), the crowd-
sourcing approach to soliciting deceptive content sim-
ulates the real world of online deceptive content cre-
ators. We collected the data via Amazon Mechanical
Turk.
2
Turkers were led to a separate website where
keylogging was enabled, and asked to write truthful
and deceptive texts (? 100 words) on one of three top-
1
Available at http://www3.cs.stonybrook.
edu/
?
junkang/keystroke/
2
https://www.mturk.com/mturk
1469
ArrowKey Del MouseUp
0
5
10
GayMarriage
GunControl
Restaurant
GayMarriage
GunControl
Restaurant
GayMarriage
GunControl
Restaurant
Fre
que
ncy
 of e
ditin
g ke
ystr
oke
s
Deceptive Truthful
Figure 1: Number of keystrokes corresponding to the three
types of edit patterns (E
3
): (a) use of arrow keys, (b) deletion
(Delete and Backspace) and (c) text selection with mouse.
ics: restaurant review, gay marriage and gun control.
Each Turker was required to agree to their typing be-
ing logged. Since copy/paste operations defeat our pur-
pose of studying keystrokes in the typing process, they
were disabled. This restriction also acts as a hindrance
to plagiarism. All texts were reviewed manually, and
those not meeting the requirements (due to the being
too short, plagiarized content, etc.) were disregarded.
Writing task design: The task was designed such
that each Turker wrote a pair of texts, one truthful and
one deceptive, on the same topic. For restaurant re-
views, they were asked to write a truthful review of
a restaurant they liked, and a deceptive review of a
restaurant they have never been to or did not like. For
the other two topics ? ?gun control? and ?gay marriage?
? we asked their opinion: support, neutral, or against.
Then, they were asked to write a truthful and a decep-
tive essay articulating, respectively, their actual opin-
ion and its opposite.
3
The tasks further were divided
into two ?flows?: writing the truthful text before the de-
ceptive one, and vice versa. Each Turker was assigned
only one flow, and was not allowed to participate in the
other. After completing this, each Turker was asked to
copy their own typing, i.e., re-type the two texts.
Finally, in order to get an idea of the cognitive bur-
den associated with truthful and deceptive writing, we
asked the Turkers which task was easier for them. Of
the 196 participants, 152 answered ?truthful?, 40 an-
swered ?deceptive? and only 4 opted for ?not sure?.
What are logged: We deployed a keylogger to cap-
ture the mouse and keyboard events in the ?text area?.
The events KeyUp, KeyDown and MouseUp, along with
the keycode and timestamp were logged.
4
For the three
topics restaurant review, gay marriage and gun control
we obtained 1000, 800 and 800 texts, respectively.
In the remainder of this paper, k
dn
and k
up
denote
the KeyDown and KeyUp events for a key k. For any
3
To prevent a change in opinion depending on task avail-
ability, Turkers were redirected to other tasks if their opinion
was neutral, or if we had enough essays of their opinion.
4
Printable (e.g., alphanumeric characters) as well as non-
printable keystrokes like (e.g., ?Backspace?), are logged.
Document Sentence Word Key Press
1.5
2.0
2.5
1.5
2.0
2.5
First?only
First+Second
GayMarriage
GunControl
Restaurant
GayMarriage
GunControl
Restaurant
GayMarriage
GunControl
Restaurant
GayMarriage
GunControl
Restaurant
Tim
e ta
ken
 (rel.
 to c
opy t
ask
)
Deceptive Truthful
Figure 2: Average normalized timespan ??(e) for documents,
sentences, words and key presses. The top row considers only
the first text, while the bottom row considers both flows.
event e, its timespan, i.e., the time interval between the
beginning and end of e, is denoted by ?(e).
4 Feature Design
Keystroke logging enables the study of two types of in-
formation that go beyond conventional linguistic anal-
ysis. First, it captures editing processes (e.g., deletions,
insertions made by changing cursor position, etc.).
Second, it reveals the temporal aspect of text generation
(e.g., duration, latency). Our exploration of these fea-
tures and their application in deception detection is mo-
tivated by the similarities between text and speech gen-
eration. Editing patterns, for instance, can be viewed as
attempts to veil incoherence in deceptive writing and
temporal patterns like latency or pause can be treated
as analogous to disfluency.
Different people, of course, have varying typing
skills, and some may type faster than others. In or-
der to control for this variation, we normalize all event
timespans ?(e) with respect to the corresponding event
timespan in the copy task:
?
?(e) = ?(e)/?(e
copy
).
4.1 Editing Patterns
In this work, we treat keys that are used only for edit-
ing as different from others. Text editing is done by
employing a small subset of available keys: deletion
keys (?Backspace? and ?Delete?), arrow keys (?, ?,
? and ?) and by using the mouse for text selection
(i.e., the ?MouseUp? event). The three types of editing
keystrokes are collectively denoted by
E
3
= ?|DEL| , |MSELECT| , |ARROW|?
where
(i) |DEL| = number of deletion keystrokes
(ii) |MSELECT| = number of ?MouseUp? events, and
(iii) |ARROW| = number of arrow keystrokes
The editing differences between truthful and deceptive
writing across all three topics are shown in Fig. 1.
4.2 Temporal Aspects
Each event is logged with a keycode and a timestamp.
In order to study the temporal aspects of digital writ-
ing, we calculate the timespan of different linguistic
1470
Topic Features Flow
First + Second First-only
Restaurants
BoW 73.9 78.8
BoW + T
6
74.3 79.1
BoW + T
6
+ E
3
74.6 80.3
?
Gun Control
(Support)
BoW 86.5 80.0
BoW + T
6
86.8 82.5
?
BoW + T
6
+ E
3
88.0
?
83.5
?
Gun Control
(Oppose)
BoW 88.5 88.0
BoW + T
6
89.8 87.5
BoW + T
6
+ E
3
90.8
?
89.1
Gay Marriage
(Support)
BoW 92.5 92.0
BoW + T
6
93.8 92.5
BoW + T
6
+ E
3
94.3
?
92.0
Gay Marriage
(Oppose)
BoW 84.5 86.5
BoW + T
6
85.0 87.0
BoW + T
6
+ E
3
85.3 86.8
Table 1: SVM classifier performance for truthful vs. de-
ceptive writing. Statistically significant improvements over
the baseline are marked * (p < 0.05) and ? (p < 0.1).
E
3
= ?|DEL| , |MSELECT| , |ARROW|? denotes the editing
keystrokes, and T
6
is the set of normalized timespans of
documents, words (plus preceding keystroke), all keystrokes,
spaces, non-whitespace keystrokes and inter-word intervals:
T
6
= {??(D), ??(k), ??(SP), ??(?SP), ??(?W), ??(k
prv
+ W)}
units such as words, sentences and even entire docu-
ments. Further, we separately inspect the timespans
of different parts of speech, function words and con-
tent words. In addition to event timespans, intervals
between successive events (e.g., inter-word and inter-
sentence pauses) and pauses preceding or succeeding
and event (e.g., time interval before and after a function
word) are measured as well.
5 Experimental Results
This section describes our experimental setup and
presents insights based on the obtained results. All
classification experiments use 5-fold cross validation
with 80/20 division for training and testing. In addition
to experimenting on the entire dataset, we also sepa-
rately analyze the texts written first (of the two texts in
each ?flow?). This additional step is taken in order to
eliminate the possibility of a text being primed by its
preceding text.
Deception cues in keystroke patterns: To empiri-
cally check whether keystroke features can help distin-
guish between truthful and deceptive writing, we de-
sign binary SVM classifiers.
5
Unigrams with tf-idf
encoding is used as the baseline. The average baseline
accuracy across all topics is 82.58% when considering
both texts of a flow, and 83.62% when considering only
the first text of each flow. The better performance in the
latter possibly indicates that the second text of a flow
exhibits some amount of lexical priming with the first.
The high accuracy of the baseline is not surprising.
Previous work by Ott et al. (2011) reported similar per-
5
We use the LIBLINEAR (Fan et al., 2008) package.
??(W) ??(kprv + W)
D > T T > D D > T T > D
our best when one
if get quality other
when well even get
were your on service
it?s fresh by been
quality not me their
dishes my has not
the one also with
i?ve had go friendly
on hat we great
they of had an
we other is our
friendly very at are
has love which really
at service from but
wait great dishes favorite
an really or very
go you re about
is but would will
which been just here
Table 2: Top 20 words in restaurant reviews with greatest
timespan difference between deceptive and truthful writing.
formance of unigram models. The focus of our work
is to explore the completely new feature space of ty-
pographic patterns in deception detection. We draw
motivation from parallels between the text generation
and speech generation processes. Prosodic concepts
such as speed, disfluency and coherence can be real-
ized in typographic behavior by analyzing timestamp
of keystrokes, pauses and editing patterns, respectively.
Based on the differences in the temporal aspects of
keystrokes, we extract six timespan features to improve
this baseline. This set, denoted by T
6
, comprises of
(i)
?
?(D) = timespan of entire document
(ii)
?
?(k
prv
+W) = average timespan of word plus pre-
ceding keystroke
(iii)
?
?(k) = average keystroke timespan
(iv)
?
?(SP) = average timespan of spaces
(v)
?
?(?SP) = average timespan of non whitesp-
ace keystrokes
(vi)
?
?(?W) = average interval between words.
The improvements attained by adding T
6
to the base-
line are shown in Table 1. Adding the edit patterns (E
3
)
(cf. ? 4.1) further improves the performance (with the
exception of two cases) by 0.7?3.5%.
Writing speed, pauses and revisions: To study the
temporal aspect of language units across all topics,
we first consider all texts, and then restrict to only
the first of each ?flow?. The timespan measurements
are presented in Fig. 2, showing the average duration
of typing documents, sentences, words and individual
keystrokes. The timespans are measured as the inter-
val between the first and the last keystrokes. The sen-
tence timespan, for instance, does not include the gap
between a sentence end and the first keystroke marking
the beginning of the next.
The sentence timespans for ?gay marriage? and ?gun
1471
DT+TD
120
130
140
150
160
170
All Words
Function Words
Content Words
Nouns Verbs Adjectives
Adverbs
Tim
esp
an (m
s) Deceptive
Truthful
(a)
DT+TD
350
400
450
500
550
Function Words
Content Words
Nouns Verbs Adjectives
Adverbs
Tim
esp
an (m
s) Deceptive
Truthful
(b)
Figure 3: Event timespans in restaurant reviews: (a) language units, and (b) language units including their preceding k
dn
.
control? are lower in truthful writing, even though the
document timespans are higher. This difference implies
that the writer is spending a longer period of time to
think before commencing the next sentence, but once
started, the actual typing proceeds rapidly.
Apart from restaurant reviews, truthful writers have
typed slower. This may be due to exercising better care
while expressing their honest opinion.
For restaurant reviews, the document, sentence and
word timespans are significantly higher in deceptive
writing. This, however, is not the case for documents
and words in the other two topics. We conjecture that
this is because deception is harder to write for prod-
uct reviews, due to their dependence on factual details.
Gun control and gay marriage, on the other hand, are
topics well discussed in media, and it is possible that
the writers are aware of the arguments that go against
their personal belief. The frequency of revisional oc-
currences (i.e., keys used for editing) shown in Fig. 1,
too, supports the thought that writing fake reviews may
be harder than adopting a fake stance on well-known
issues. Deceptive reviews exhibit a higher number of
revisions than truthful ones, but essays show the oppo-
site trend. Our findings align with previous studies (Ott
et al., 2011) which showed that deception cues are do-
main dependent.
Writing speed variations over word categories:
Next, we investigate whether there is any quantitative
difference in the writing rate over different words with
respect to the deceptive and truthful intent of the author.
In an attempt to understand this, we analyze words
which show the highest timespan difference between
deceptive and truthful writings.
Table 2 presents words in the restaurant review
topic for which deceptive writers took a lot longer
than truthful writers, and vice versa. Some word cat-
egories exhibit common trends across all three top-
ics. Highly subjective words, for instance (e.g., ?love?,
?best?, ?great?) are words over which truthful writers
spent more time.
Deceptive and truthful texts differ in the typing rate
of first- and second-person pronouns. Deceptive re-
views reveal more time spent in using 2
nd
-person pro-
nouns, as shown by ?you? and ?your?. This finding
throws some light on how people perceive text cues.
Toma and Hancock (2012) showed that readers per-
form poorly at deception detection because they rely on
unrelated text cues such as 2
nd
-person pronouns. Our
analysis indicates that people associate the use of 2
nd
-
person pronouns more with deception not only while
reading, but while writing as well.
Deceptive reviews also exhibit longer time spans for
1
st
-person pronouns (e.g., ?we?, ?me?), which have
been known to be useful in deception detection (New-
man et al., 2003; Ott et al., 2011). Newman et al.
(2003) attributed the less frequent usage of 1
st
-person
pronouns to psychological distancing. The longer time
taken by deceptive writers in our data is a possible sign
of increased cognitive burden when the writer is unable
to maintain the psychological distance. Deceptive re-
viewers also paused a lot more around relative clauses,
e.g., ?if?, ?when?, and ?which?.
In essays, however, the difference in timespans of
1
st
-person and 2
nd
-person pronouns as well as the
timespan difference in relative clauses were insignifi-
cant (< 50ms).
A broader picture of the temporal difference in using
different types of words is presented in Fig. 3, which
shows deceptive reviewers spending less time on ad-
verbs as compared to truthful writers, but more time on
nouns, verbs, adjectives, function words and content
words. They also exhibited significantly longer pauses
before nouns, verbs and function words.
6 Conclusion
In this paper, we investigated the use of typographic
style in deception detection and presented distinct tem-
poral and revisional aspects of keystroke patterns that
improve the characterization of deceptive writing. Our
study provides novel empirically supported insights
into the writing and editing processes of truthful and
deceptive writers. It also presents the first application
of keylogger data used to distinguish between true and
fake texts, and opens up a new range of questions to
better understand what affects these different keystroke
patterns and what they exhibit. It also suggests new
possibilities for making use of keystroke information
as an extended linguistic signal to accompany writings.
Acknowledgements
This research is supported in part by gift from Google.
1472
References
Francesco Bergadano, Daniele Gunetti, and Claudia Pi-
cardi. 2002. User Authentication through Keystroke
Dynamics. ACM Transactions on Information and
System Security (TISSEC), 5(4):367?397.
Charles F Bond and Bella M DePaulo. 2006. Accu-
racy of Deception Judgments. Personality and So-
cial Psychology Review, 10(3):214?234.
Sungzoon Cho, Chigeun Han, Dae Hee Han, and
Hyung-Il Kim. 2000. Web-based Keystroke Dy-
namics Identity Verification Using Neural Network.
Journal of Organizationl Computing and Electronic
Commerce, 10(4):295?307.
Bella M DePaulo, James J Lindsay, Brian E Mal-
one, Laura Muhlenbruck, Kelly Charlton, and Harris
Cooper. 2003. Cues to Deception. Psychological
Bulletin, 129(1):74.
Paul Ekman, Maureen O?Sullivan, Wallace V Friesen,
and Klaus R Scherer. 1991. Invited Article: Face,
Voice and Body in Detecting Deceit. Journal of
Nonverbal Behavior, 15(2):125?135.
Paul Ekman. 2003. Darwin, Deception, and Facial Ex-
pression. Annals of the New York Academy of Sci-
ences, 1000(1):205?221.
Clayton Epp, Michael Lippold, and Regan L Mandryk.
2011. Identifying Emotional States Using Keystroke
Dynamics. In Proc. of the SIGCHI Conference on
Human Factors in Computing Systems, pages 715?
724. ACM.
Rong-En Fan, Kai-Wei Chang, Cho-Jui Hsieh, Xiang-
Rui Wang, and Chih-Jen Lin. 2008. LIBLINEAR:
A Library for Large Linear Classification. The Jour-
nal of Machine Learning Research, 9:1871?1874.
Geli Fei, Arjun Mukherjee, Bing Liu, Meichun Hsu,
Malu Castellanos, and Riddhiman Ghosh. 2013.
Exploiting Burstiness in Reviews for Review Spam-
mer Detection. In ICWSM, pages 175?184.
Song Feng, Ritwik Banerjee, and Yejin Choi. 2012.
Syntactic Stylometry for Deception Detection. In
Proc. 50th Annual Meeting of the ACL, pages 171?
175. ACL.
George E Forsen, Mark R Nelson, and Raymond J
Staron Jr. 1977. Personal Attributes Authentication
Techniques. Technical report, DTIC Document.
Stephanie Gokhman, Jeff Hancock, Poornima Prabhu,
Myle Ott, and Claire Cardie. 2012. In Search of a
Gold Standard in Studies of Deception. In Compu-
tational Approaches to Deception Detection, pages
23?30. ACL.
Jeffrey T Hancock, L Curry, Saurabh Goorha, and
Michael T Woodworth. 2004. Lies in Conversa-
tion: An Examination of Deception Using Auto-
mated Linguistic Analysis. In Annual Conference
of the Cognitive Science Society, volume 26, pages
534?540.
Victoria Johansson. 2009. Developmental Aspects of
Text Production in Writing and Speech. Ph.D. thesis,
Lund University.
Kevin S Killourhy and Roy A Maxion. 2009. Compar-
ing Anomaly-Detection Algorithms for Keystroke
Dynamics. In Dependable Systems & Networks,
2009. DSN?09., pages 125?134. IEEE.
John Leggett and Glen Williams. 1988. Verifying
Identity Via Keystroke Characteristics. Interna-
tional Journal of Man-Machine Studies, 28(1):67?
76.
Ann Matsuhashi. 1981. Pausing and Planning: The
Tempo of Written Discourse Production. Research
in the Teaching of English, pages 113?134.
Steven A McCornack. 1997. The Generation of De-
ceptive Messages: Laying the Groundwork for a Vi-
able Theory of Interpersonal Deception. In John O
Greene, editor, Message Production: Advances in
Communication Theory. Erlbaum, Mahwah, NJ.
Arjun Mukherjee, Vivek Venkataraman, Bing Liu, and
Natalie Glance. 2013. What Yelp Fake Review Fil-
ter Might be Doing. In ICSWM, pages 409?418.
Matthew L Newman, James W Pennebaker, Diane S
Berry, and Jane M Richards. 2003. Lying Words:
Predicting Deception from Linguistic Styles. Per-
sonality and Social Psychology Bulletin, 29(5):665?
675.
Myle Ott, Yejin Choi, Claire Cardie, and Jeffrey T
Hancock. 2011. Finding Deceptive Opinion Spam
by Any Stretch of the Imagination. In Proc. 49th
Annual Meeting of the ACL: HLT, pages 309?319.
ACL.
Catalina L Toma and Jeffrey T Hancock. 2012. What
Lies Beneath: The Linguistic Traces of Deception in
Online Dating Profiles. Journal of Communication,
62(1):78?97.
Paul V Trovillo. 1939. A History of Lie Detection.
Journal of Criminal Law and Criminology (1931-
1951), 29:848?881.
Janet G van Hell, Ludo Verhoeven, and Liesbeth M van
Beijsterveldt. 2008. Pause Time Patterns in Writ-
ing Narrative and Expository Texts by Children and
Adults. Discourse Processes, 45(4-5):406?427.
Lisa M Vizer, Lina Zhou, and Andrew Sears. 2009.
Automated Stress Detection Using Keystroke and
Linguistic Features: An Exploratory Study. In-
ternational Journal of Human-Computer Studies,
67(10):870?886.
Aldert Vrij, Ronald Fisher, Samantha Mann, and
Sharon Leal. 2006. Detecting Deception by Ma-
nipulating Cognitive Load. Trends in Cognitive Sci-
ences, 10(4):141?142.
Putri Zulkifli. 2013. Applying Pause Analysis to Ex-
plore Cognitive Processes in the Copying of Sen-
tences by Second Language Users. Ph.D. thesis,
University of Sussex.
1473
Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 1774?1784,
Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational Linguistics
Connotation Lexicon:
A Dash of Sentiment Beneath the Surface Meaning
Song Feng Jun Seok Kang Polina Kuznetsova Yejin Choi
Department of Computer Science
Stony Brook University
Stony Brook, NY 11794-4400
songfeng, junkang, pkuznetsova, ychoi@cs.stonybrook.edu
Abstract
Understanding the connotation of words
plays an important role in interpreting sub-
tle shades of sentiment beyond denotative
or surface meaning of text, as seemingly
objective statements often allude nuanced
sentiment of the writer, and even purpose-
fully conjure emotion from the readers?
minds. The focus of this paper is draw-
ing nuanced, connotative sentiments from
even those words that are objective on the
surface, such as ?intelligence?, ?human?,
and ?cheesecake?. We propose induction
algorithms encoding a diverse set of lin-
guistic insights (semantic prosody, distri-
butional similarity, semantic parallelism of
coordination) and prior knowledge drawn
from lexical resources, resulting in the first
broad-coverage connotation lexicon.
1 Introduction
There has been a substantial body of research
in sentiment analysis over the last decade (Pang
and Lee, 2008), where a considerable amount of
work has focused on recognizing sentiment that is
generally explicit and pronounced rather than im-
plied and subdued. However in many real-world
texts, even seemingly objective statements can be
opinion-laden in that they often allude nuanced
sentiment of the writer (Greene and Resnik, 2009),
or purposefully conjure emotion from the readers?
minds (Mohammad and Turney, 2010). Although
some researchers have explored formal and statis-
tical treatments of those implicit and implied sen-
timents (e.g. Wiebe et al (2005), Esuli and Sebas-
tiani (2006), Greene and Resnik (2009), Davidov
et al (2010)), automatic analysis of them largely
remains as a big challenge.
In this paper, we concentrate on understanding
the connotative sentiments of words, as they play
an important role in interpreting subtle shades of
sentiment beyond denotative or surface meaning
of text. For instance, consider the following:
Geothermal replaces oil-heating; it helps re-
ducing greenhouse emissions.1
Although this sentence could be considered as a
factual statement from the general standpoint, the
subtle effect of this sentence may not be entirely
objective: this sentence is likely to have an influ-
ence on readers? minds in regard to their opinion
toward ?geothermal?. In order to sense the subtle
overtone of sentiments, one needs to know that the
word ?emissions? has generally negative connota-
tion, which geothermal reduces. In fact, depend-
ing on the pragmatic contexts, it could be precisely
the intention of the author to transfer his opinion
into the readers? minds.
The main contribution of this paper is a broad-
coverage connotation lexicon that determines the
connotative polarity of even those words with ever
so subtle connotation beneath their surface mean-
ing, such as ?Literature?, ?Mediterranean?, and
?wine?. Although there has been a number of
previous work that constructed sentiment lexicons
(e.g., Esuli and Sebastiani (2006), Wilson et al
(2005a), Kaji and Kitsuregawa (2007), Qiu et
al. (2009)), which seem to be increasingly and
inevitably expanding over words with (strongly)
connotative sentiments rather than explicit senti-
ments alone (e.g., ?gun?), little prior work has di-
rectly tackled this problem of learning connota-
tion,2 and much of the subtle connotation of many
seemingly objective words is yet to be determined.
1Our learned lexicon correctly assigns negative polarity to
emission.
2A notable exception would be the work of Feng et al
1774
POSITIVE NEGATIVE
FEMA, Mandela, Intel, Google, Python, Sony, Pulitzer,
Harvard, Duke, Einstein, Shakespeare, Elizabeth, Clooney,
Hoover, Goldman, Swarovski, Hawaii, Yellowstone
Katrina, Monsanto, Halliburton, Enron, Teflon, Hi-
roshima, Holocaust, Afghanistan, Mugabe, Hutu, Sad-
dam, Osama, Qaeda, Kosovo, Helicobacter, HIV
Table 1: Example Named Entities (Proper Nouns) with Polar Connotation.
A central premise to our approach is that it is
collocational statistics of words that affect and
shape the polarity of connotation. Indeed, the ety-
mology of ?connotation? is from the Latin ?com-
? (?together or with?) and ?notare? (?to mark?).
It is important to clarify, however, that we do not
simply assume that words that collocate share the
same polarity of connotation. Although such an
assumption played a key role in previous work for
the analogous task of learning sentiment lexicon
(Velikovich et al, 2010), we expect that the same
assumption would be less reliable in drawing sub-
tle connotative sentiments of words. As one ex-
ample, the predicate ?cure?, which has a positive
connotation typically takes arguments with nega-
tive connotation, e.g., ?disease?, when used as the
?relieve? sense.3
Therefore, in order to attain a broad cover-
age lexicon while maintaining good precision, we
guide the induction algorithm with multiple, care-
fully selected linguistic insights: [1] distributional
similarity, [2] semantic parallelism of coordina-
tion, [3] selectional preference, and [4] seman-
tic prosody (e.g., Sinclair (1991), Louw (1993),
Stubbs (1995), Stefanowitsch and Gries (2003))),
and also exploit existing lexical resources as an ad-
ditional inductive bias.
We cast the connotation lexicon induction task
as a collective inference problem, and consider ap-
proaches based on three distinct types of algorith-
mic framework that have been shown successful
for conventional sentiment lexicon induction:
Random walk based on HITS/PageRank (e.g.,
Kleinberg (1999), Page et al (1999), Feng
et al (2011) Heerschop et al (2011),
Montejo-Ra?ez et al (2012))
Label/Graph propagation (e.g., Zhu and Ghahra-
(2011) but with practical limitations. See ?3 for detailed dis-
cussion.
3Note that when ?cure? is used as the ?preserve? sense, it
expects objects with non-negative connotation. Hence word-
sense-disambiguation (WSD) presents a challenge, though
not unexpectedly. In this work, we assume the general conno-
tation of each word over statistically prevailing senses, leav-
ing a more cautious handling of WSD as future work.
mani (2002), Velikovich et al (2010))
Constraint optimization (e.g., Roth and Yih
(2004), Choi and Cardie (2009), Lu et al
(2011)).
We provide comparative empirical results over
several variants of these approaches with compre-
hensive evaluations including lexicon-based, hu-
man judgments, and extrinsic evaluations.
It is worthwhile to note that not all words have
connotative meanings that are distinct from deno-
tational meanings, and in some cases, it can be dif-
ficult to determine whether the overall sentiment is
drawn from denotational or connotative meanings
exclusively, or both. Therefore, we encompass any
sentiment from either type of meanings into the
lexicon, where non-neutral polarity prevails over
neutral one if some meanings lead to neutral while
others to non-neutral.4
Our work results in the first broad-coverage
connotation lexicon,5 significantly improving both
the coverage and the precision of Feng et al
(2011). As an interesting by-product, our algo-
rithm can be also used as a proxy to measure the
general connotation of real-world named entities
based on their collocational statistics. Table 1
highlights some example proper nouns included in
the final lexicon.
The rest of the paper is structured as follows.
In ?2 we describe three types of induction algo-
rithms followed by evaluation in ?3. Then we re-
visit the induction algorithms based on constraint
optimization in ?4 to enhance quality and scala-
bility. ?5 presents comprehensive evaluation with
human judges and extrinsic evaluations. Related
work and conclusion are in ?6 and ?7.
4In general, polysemous words do not seem to have con-
flicting non-neutral polarities over different senses, though
there are many exceptions, e.g., ?heat?, or ?fine?. We treat
each word in each part-of-speech as a separate word to reduce
such cases, otherwise aim to learn the most prevalent polar-
ity in the corpus with respect to each part-of-speech of each
word.
5Available at http://www.cs.stonybrook.edu/
?ychoi/connotation.
1775
? 
Pred-Arg 
Arg-Arg 
pred-arg distr sim 
enjoy 
thank 
writing 
profit 
help 
investment 
aid 
reading 
Figure 1: Graph for Graph Propagation (?2.2).
? 
? 
synonyms antonyms 
prevent 
suffer  
enjoy 
thank 
tax  
loss 
writing 
profit 
preventing 
gain 
investment 
bonus  
pred-arg distr sim 
flu  
cold  
Figure 2: Graph for ILP/LP (?2.3, ?4.2).
2 Connotation Induction Algorithms
We develop induction algorithms based on three
distinct types of algorithmic framework that have
been shown successful for the analogous task of
sentiment lexicon induction: HITS & PageRank
(?2.1), Label/Graph Propagation (?2.2), and Con-
straint Optimization via Integer Linear Program-
ming (?2.3). As will be shown, each of these ap-
proaches will incorporate additional, more diverse
linguistic insights.
2.1 HITS & PageRank
The work of Feng et al (2011) explored the use
of HITS (Kleinberg, 1999) and PageRank (Page
et al, 1999) to induce the general connotation
of words hinging on the linguistic phenomena of
selectional preference and semantic prosody, i.e.,
connotative predicates influencing the connotation
of their arguments. For example, the object of
a negative connotative predicate ?cure? is likely
to have negative connotation, e.g., ?disease? or
?cancer?. The bipartite graph structure for this
approach corresponds to the left-most box (labeled
as ?pred-arg?) in Figure 1.
2.2 Label Propagation
With the goal of obtaining a broad-coverage lexi-
con in mind, we find that relying only on the struc-
ture of semantic prosody is limiting, due to rel-
atively small sets of connotative predicates avail-
able.6 Therefore, we extend the graph structure
as an overlay of two sub-graphs (Figure 1) as de-
scribed below:
6For connotative predicates, we use the seed predicate set
of Feng et al (2011), which comprises of 20 positive and 20
negative predicates.
Sub-graph #1: Predicate?Argument Graph
This sub-graph is the bipartite graph that encodes
the selectional preference of connotative predi-
cates over their arguments. In this graph, conno-
tative predicates p reside on one side of the graph
and their co-occurring arguments a reside on the
other side of the graph based on Google Web 1T
corpus.7 The weight on the edges between the
predicates p and arguments a are defined using
Point-wise Mutual Information (PMI) as follows:
w(p? a) := PMI(p, a) = log2
P (p, a)
P (p)P (a)
PMI scores have been widely used in previous
studies to measure association between words
(e.g., Turney (2001), Church and Hanks (1990)).
Sub-graph #2: Argument?Argument Graph
The second sub-graph is based on the distribu-
tional similarities among the arguments. One pos-
sible way of constructing such a graph is simply
connecting all nodes and assign edge weights pro-
portionate to the word association scores, such as
PMI, or distributional similarity. However, such a
completely connected graph can be susceptible to
propagating noise, and does not scale well over a
very large set of vocabulary.
We therefore reduce the graph connectivity by
exploiting semantic parallelism of coordination
(Bock (1986), Hatzivassiloglou and McKeown
7We restrict predicte-argument pairs to verb-object pairs
in this study. Note that Google Web 1T dataset consists of
n-grams upto n = 5. Since n-gram sequences are too short
to apply a parser, we extract verb-object pairs approximately
by matching part-of-speech tags. Empirically, when overlaid
with the second sub-graph, we found that it is better to keep
the connectivity of this sub-graph as uni-directional. That is,
we only allow edges to go from a predicate to an argument.
1776
POSITIVE NEGATIVE NEUTRAL
n. avatar, adrenaline, keynote, debut,
stakeholder, sunshine, cooperation
unbeliever, delay, shortfall, gun-
shot, misdemeanor, mutiny, rigor
header, mark, clothing, outline,
grid, gasoline, course, preview
v. handcraft, volunteer, party, ac-
credit, personalize, nurse, google
sentence, cough, trap, scratch, de-
bunk, rip, misspell, overcharge
state, edit, send, put, arrive, type,
drill, name, stay, echo, register
a. floral, vegetarian, prepared, age-
less, funded, contemporary
debilitating, impaired, swollen,
intentional, jarring, unearned
same, cerebral, west, uncut, auto-
matic, hydrated, unheated, routine
Table 2: Example Words with Learned Connotation: Nouns(n), Verbs(v), Adjectives(a).
(1997), Pickering and Branigan (1998)). In par-
ticular, we consider an undirected edge between a
pair of arguments a1 and a2 only if they occurred
together in the ?a1 and a2? or ?a2 and a1? coor-
dination, and assign edge weights as:
w(a1 ? a2) = CosineSim(??a1,??a2) =
??a1 ? ??a2
||??a1|| ||??a2||
where ??a1 and ??a2 are co-occurrence vectors for a1
and a2 respectively. The co-occurrence vector for
each word is computed using PMI scores with re-
spect to the top n co-occurring words.8 n (=50)
is selected empirically. The edge weights in two
sub-graphs are normalized so that they are in the
comparable range.9
Limitations of Graph-based Algorithms
Although graph-based algorithms (?2.1, ?2.2) pro-
vide an intuitive framework to incorporate various
lexical relations, limitations include:
1. They allow only non-negative edge weights.
Therefore, we can encode only positive (sup-
portive) relations among words (e.g., distri-
butionally similar words will endorse each
other with the same polarity), while miss-
ing on exploiting negative relations (e.g.,
antonyms may drive each other into the op-
posite polarity).
2. They induce positive and negative polarities
in isolation via separate graphs. However, we
expect that a more effective algorithm should
induce both polarities simultaneously.
3. The framework does not readily allow incor-
porating a diverse set of soft and hard con-
straints.
8We discard edges with cosine similarity ? 0, as those
indicate either independence or the opposite of similarity.
9Note that cosine similarity does not make sense for the
first sub-graph as there is no reason why a predicate and an ar-
gument should be distributionally similar. We experimented
with many different variations on the graph structure and
edge weights, including ones that include any word pairs that
occurred frequently enough together. For brevity, we present
the version that achieved the best results here.
2.3 Constraint Optimization
Addressing limitations of graph-based algorithms
(?2.2), we propose an induction algorithm based
on Integer Linear Programming (ILP). Figure 2
provides the pictorial overview. In comparison to
Figure 1, two new components are: (1) dictionary-
driven relations targeting enhanced precision, and
(2) dictionary-driven words (i.e., unseen words
with respect to those relations explored in Figure
1) targeting enhanced coverage. We formulate in-
sights in Figure 2 using ILP as follows:
Definition of sets of words:
1. P+: the set of positive seed predicates.
P?: the set of negative seed predicates.
2. S: the set of seed sentiment words.
3. Rsyn: word pairs in synonyms relation.
Rant: word pairs in antonyms relation.
Rcoord: word pairs in coordination relation.
Rpred: word pairs in pred-arg relation.
Rpred+(?) : Rpred based on P+ (P?).
Definition of variables: For each word i, we
define binary variables xi, yi, zi ? {0, 1}, where
xi = 1 (yi = 1, zi = 1) if and only if i has a pos-
itive (negative, neutral) connotation respectively.
For every pair of word i and j, we define binary
variables dpqij where p, q ? {+,?, 0} and dpqij = 1
if and only if the polarity of i and j are p and q
respectively.
Objective function: We aim to maximize:
F = ?prosody + ?coord + ?neu
where ?prosody is the scores based on semantic
prosody, ?coord captures the distributional similar-
ity over coordination, and ?neu controls the sen-
sitivity of connotation detection between positive
(negative) and neutral. In particular,
?prosody =
Rpred?
i,j
wpredi,j (d++i,j + d??i,j ? d+?i,j ? d?+i,j )
?coord =
Rcoord?
i,j
wcoordi,j (d++i,j + d??i,j + d00i,j)
1777
?neu = ?
Rpred?
i,j
wpredi,j ? zj
Soft constraints (edge weights): The weights in
the objective function are set as follows:
wpred(p, a) = freq(p, a)?
(p,x)?Rpred
freq(p, x)
wcoord(a1, a2) = CosSim(??a1,??a2) =
??a1 ? ??a2
||??a1|| ||??a2||
Note that the same wcoord(a1, a2) has been used
in graph propagation described in Section 2.2. ?
controls the sensitivity of connotation detection
such that higher value of ? will promote neutral
connotation over polar ones.
Hard constrains for variable consistency:
1. Each word i has one of {+,?, ?} as polarity:
?i, xi + yi + zi = 1
2. Variable consistency between dpqij and
xi, yi, zi:
xi + xj ? 1 ? 2d++i,j ? xi + xj
yi + yj ? 1 ? 2d??i,j ? yi + yj
zi + zj ? 1 ? 2d00i,j ? zi + zj
xi + yj ? 1 ? 2d+?i,j ? xi + yj
yi + xj ? 1 ? 2d?+i,j ? yi + xj
Hard constrains for WordNet relations:
1. Cant: Antonym pairs will not have the same
positive or negative polarity:
?(i, j) ? Rant, xi + xj ? 1, yi + yj ? 1
For this constraint, we only consider
antonym pairs that share the same root, e.g.,
?sufficient? and ?insufficient?, as those pairs
are more likely to have the opposite polarities
than pairs without sharing the same root, e.g.,
?east? and ?west?.
2. Csyn: Synonym pairs will not have the oppo-
site polarity:
?(i, j) ? Rsyn, xi + yj ? 1, xj + yi ? 1
3 Experimental Result I
We provide comprehensive comparisons over vari-
ants of three types of algorithms proposed in ?2.
We use the Google Web 1T data (Brants and Franz
(2006)), and POS-tagged ngrams using Stanford
POS Tagger (Toutanova and Manning (2000)). We
filter out the ngrams with punctuations and other
special characters to reduce the noise.
3.1 Comparison against Conventional
Sentiment Lexicon
Note that we consider the connotation lexicon to
be inclusive of a sentiment lexicon for two prac-
tical reasons: first, it is highly unlikely that any
word with non-neutral sentiment (i.e., positive or
negative) would carry connotation of the oppo-
site, i.e., conflicting10 polarity. Second, for some
words with distinct sentiment or strong connota-
tion, it can be difficult or even unnatural to draw a
precise distinction between connotation and senti-
ment, e.g., ?efficient?. Therefore, sentiment lexi-
cons can serve as a surrogate to measure a subset
of connotation words induced by the algorithms,
as shown in Table 3 with respect to General In-
quirer (Stone and Hunt (1963)) and MPQA (Wil-
son et al (2005b)).11
Discussion Table 3 shows the agreement statis-
tics with respect to two conventional sentiment
lexicons. We find that the use of label propaga-
tion alone [PRED-ARG (CP)] improves the per-
formance substantially over the comparable graph
construction with different graph analysis algo-
rithms, in particular, HITS and PageRank ap-
proaches of Feng et al (2011). The two com-
pletely connected variants of the graph propa-
gation on the Pred-Arg graph, [? PRED-ARG
(PMI)] and [? PRED-ARG (CP)], do not neces-
sarily improve the performance over the simpler
and computationally lighter alternative, [PRED-
ARG (CP)]. The [OVERLAY], which is based
on both Pred-Arg and Arg-Arg subgraphs (?2.2),
achieves the best performance among graph-based
algorithms, significantly improving the precision
over all other baselines. This result suggests:
1 The sub-graph #2, based on the semantic par-
allelism of coordination, is simple and yet
very powerful as an inductive bias.
2 The performance of graph propagation varies
significantly depending on the graph topol-
ogy and the corresponding edge weights.
Note that a direct comparison against ILP for top
N words is tricky, as ILP does not rank results.
Only for comparison purposes however, we assign
10We consider ?positive? and ?negative? polarities conflict,
but ?neutral? polarity does not conflict with any.
11In the case of General Inquirer, we use words in POSITIV
and NEGATIV sets as words with positive and negative labels
respectively.
1778
GENINQ EVAL MPQA EVAL
100 1,000 5,000 10,000 ALL 100 1,000 5,000 10,000 ALL
ILP 97.6 94.5 84.5 80.8 80.4 98.0 89.7 84.6 81.2 78.4
OVERLAY 97.0 95.1 78.8 (78.3) 78.3 98.0 93.4 82.1 77.7 77.7? PRED-ARG (PMI) 91.0 91.4 76.1 (76.1) 76.1 88.0 89.1 78.8 75.1 75.1?PRED-ARG (CP) 88.0 85.4 76.2 (76.2) 76.2 87.0 82.6 78.0 76.3 76.3
PRED-ARG (CP) 91.0 91.0 81.0 (81.0) 81.0 88.0 91.5 80.0 78.3 78.3
HITS-ASYMT 77.0 68.8 - - 66.5 86.3 81.3 - - 72.2
PAGERANK-ASYMF 77.0 68.5 - - 65.7 87.2 80.3 - - 72.3
Table 3: Evaluation of Induction Algorithms (?2) with respect to Sentiment Lexicons (precision%).
ranks based on the frequency of words for ILP. Be-
cause of this issue, the performance of top ?1k
words of ILP should be considered only as a con-
servative measure. Importantly, when evaluated
over more than top 5k words, ILP is overall the
top performer considering both precision (shown
in Table 3) and coverage (omitted for brevity).12
4 Precision, Coverage, and Efficiency
In this section, we address three important aspects
of an ideal induction algorithm: precision, cover-
age, and efficiency. For brevity, the remainder of
the paper will focus on the algorithms based on
constraint optimization, as it turned out to be the
most effective one from the empirical results in ?3.
Precision In order to see the effectiveness of the
induction algorithms more sharply, we had used a
limited set of seed words in ?3. However to build a
lexicon with substantially enhanced precision, we
will use as a large seed set as possible, e.g., entire
sentiment lexicons13.
Broad coverage Although statistics in Google
1T corpus represent a very large amount of text,
words that appear in pred-arg and coordination re-
lations are still limited. To substantially increase
the coverage, we will leverage dictionary words
(that are not in the corpus) as described in ?2.3
and Figure 2.
Efficiency One practical problem with ILP is ef-
ficiency and scalability. In particular, we found
that it becomes nearly impractical to run the ILP
formulation including all words in WordNet plus
all words in the argument position in Google Web
1T. We therefore explore an alternative approach
based on Linear Programming in what follows.
12In fact, the performance of PRED-ARG variants for top
10K w.r.t. GENINQ is not meaningful as no additional word
was matched beyond top 5k words.
13Note that doing so will prevent us from evaluating
against the same sentiment lexicon used as a seed set.
4.1 Induction using Linear Programming
One straightforward option for Linear Program-
ming formulation may seem like using the same
Integer Linear Programming formulation intro-
duced in ?2.3, only changing the variable defini-
tions to be real values ? [0, 1] rather than integers.
However, because the hard constraints in ?2.3 are
defined based on the assumption that all the vari-
ables are binary integers, those constraints are not
as meaningful when considered for real numbers.
Therefore we revise those hard constraints to en-
code various semantic relations (WordNet and se-
mantic coordination) more directly.
Definition of variables: For each word i, we de-
fine variables xi, yi, zi ? [0, 1]. i has a positive
(negative) connotation if and only if the xi (yi) is
assigned the greatest value among the three vari-
ables; otherwise, i is neutral.
Objective function: We aim to maximize:
F = ?prosody + ?coord + ?syn + ?ant + ?neu
?prosody =
Rpred+?
i,j
wpred
+
i,j ? xj +
Rpred??
i,j
wpred
?
i,j ? yj
?coord =
Rcoord?
i,j
wcoordi,j ? (dc++i,j + dc??i,j )
?syn = W syn
Rsyn?
i,j
(ds++i,j + ds??i,j )
?ant = W ant
Rant?
i,j
(da++i,j + da??i,j )
?neu = ?
Rpred?
i,j
wpredi,j ? zj
Hard constraints We add penalties to the
objective function if the polarity of a pair of words
is not consistent with its corresponding semantic
relations. For example, for synonyms i and j, we
introduce a penalty W syn (a positive constant) for
ds++i,j , ds??i,j ? [?1, 0], where we set the upper
bound of ds++i,j (ds??i,j ) as the signed distance of
1779
FORMULA POSITIVE NEGATIVE ALLR P F R P F R P F
ILP ?prosody + Csyn + Cant 51.4 85.7 64.3 44.7 87.9 59.3 48.0 86.8 61.8
?prosody + Csyn + Cant + CS 61.2 93.3 73.9 52.4 92.2 66.8 56.8 92.8 70.5
?prosody + ?coord + Csyn + Cant 67.3 75.0 70.9 53.7 84.4 65.6 60.5 79.7 68.8
?prosody + ?coord + Csyn + Cant + CS 62.2 96.0 75.5 51.5 89.5 65.4 56.9 92.8 70.5
LP ?prosody + ?syn + ?ant 24.4 76.0 36.9 23.6 78.8 36.3 24.0 77.4 36.6
?prosody + ?syn + ?ant + ?S 71.6 87.8 78.9 68.8 84.6 75.9 70.2 86.2 77.4
?prosody + ?coord + ?syn + ?ant 67.9 92.6 78.3 64.6 89.1 74.9 66.3 90.8 76.6
?prosody + ?coord + ?syn + ?ant + ?S 78.6 90.5 84.1 73.3 87.1 79.6 75.9 88.8 81.8
Table 4: ILP/LP Comparison on MQPA? (%).
xi and xj (yi and yj) as shown below:
For (i, j) ? Rsyn,
ds++i,j ? xi ? xj , ds++i,j ? xj ? xi
ds??i,j ? yi ? yj , ds??i,j ? yj ? yi
Notice that ds++i,j , ds??i,j satisfying above inequal-
ities will be always of negative values, hence in
order to maximize the objective function, the LP
solver will try to minimize the absolute values of
ds++i,j , ds??i,j , effectively pushing i and j toward
the same polarity. Constraints for semantic coor-
dination Rcoord can be defined similarly. Lastly,
following constraints encode antonym relations:
For (i, j) ? Rant ,
da++i,j ? xi ? (1? xj), da++i,j ? (1? xj)? xi
da??i,j ? yi ? (1? yj), da??i,j ? (1? yj)? yi
Interpretation Unlike ILP, some of the vari-
ables result in fractional values. We consider a
word has positive or negative polarity only if the
assignment indicates 1 for the corresponding po-
larity and 0 for the rest. In other words, we treat
all words with fractional assignments over differ-
ent polarities as neutral. Because the optimal so-
lutions of LP correspond to extreme points in the
convex polytope formed by the constraints, we ob-
tain a large portion of words with non-fractional
assignments toward non-neutral polarities. Alter-
natively, one can round up fractional values.
4.2 Empirical Comparisons: ILP v.s. LP
To solve the ILP/LP, we run ILOG CPLEX Opti-
mizer (CPLEX, 2009)) on a 3.5GHz 6 core CPU
machine with 96GB RAM. Efficiency-wise, LP
runs within 10 minutes while ILP takes several
hours. Table 4 shows the results evaluated against
MPQA for different variations of ILP and LP.
We find that LP variants much better recall and
F-score, while maintaining comparable precision.
Therefore, we choose the connotation lexicon by
LP (C-LP) in the following evaluations in ?5.
5 Experimental Results II
In this section, we present comprehensive intrin-
sic ?5.1 and extrinsic ?5.2 evaluations comparing
three representative lexicons from ?2 & ?4: C-
LP, OVERLAY, PRED-ARG (CP), and two popular
sentiment lexicons: SentiWordNet (Baccianella et
al., 2010) and GI+MPQA.14 Note that C-LP is the
largest among all connotation lexicons, including
?70,000 polar words.15
5.1 Intrinsic Evaluation: Human Judgements
We evaluate 4000 words16 using Amazon Me-
chanical Turk (AMT). Because we expect that
judging a connotation can be dependent on one?s
cultural background, personality and value sys-
tems, we gather judgements from 5 people for
each word, from which we hope to draw a more
general judgement of connotative polarity. About
300 unique Turkers participated the evaluation
tasks. We gather gold standard only for those
words for which more than half of the judges
agreed on the same polarity. Otherwise we treat
them as ambiguous cases.17 Figure 3 shows a part
of the AMT task, where Turkers are presented with
questions that help judges to determine the subtle
connotative polarity of each word, then asked to
rate the degree of connotation on a scale from -
5 (most negative) and 5 (most positive). To draw
14GI+MPQA is the union of General Inquirer and MPQA.
The GI, we use words in the ?Positiv? & ?Negativ? set. For
SentiWordNet, to retrieve the polarity of a given word, we
sum over the polarity scores over all senses, where positive
(negative) values correspond to positive (negative) polarity.
15?13k adj, ?6k verbs, ?28k nouns, ?22k proper nouns.
16We choose words that are not already in GI+MPQA and
obtain most frequent 10,000 words based on the unigram fre-
quency in Google-Ngram, then randomly select 4000 words.
17We allow Turkers to mark words that can be used with
both positive and negative connotation, which results in about
7% of words that are excluded from the gold standard set.
1780
Figure 3: A Part of AMT Task Design.
YES NO
QUESTION % Avg % Avg
?Enjoyable or pleasant? 43.3 2.9 16.3 -2.4
?Of a good quality? 56.7 2.5 6.1 -2.7
?Respectable / honourable? 21.0 3.3 14.0 -1.1
?Would like to do or have? 52.5 2.8 11.5 -2.4
Table 5: Distribution of Answers from AMT.
the gold standard, we consider two different voting
schemes:
? ?V ote: The judgement of each Turker is
mapped to neutral for ?1 ? score ? 1, pos-
itive for score ? 2, negative for score ? 2,
then we take the majority vote.
? ?Score: Let ?(i) be the sum (weighted vote)
of the scores given by 5 judges for word i.
Then we determine the polarity label l(i) of i
as:
l(i) =
?
?
?
positive if ?(i) > 1
negative if ?(i) < ?1
neutral if ?1 ? ?(i) ? 1
The resulting distribution of judgements is shown
in Table 5 & 6. Interestingly, we observe
that among the relatively frequently used English
words, there are overwhelmingly more positively
connotative words than negative ones.
In Table 7, we show the percentage of words
with the same label over the mutual words by the
two lexicon. The highest agreement is 77% by
C-LP and the gold standard by AMTV ote. How
good is this? It depends on what is the natural de-
gree of agreement over subtle connotation among
people. Therefore, we also report the degree of
agreement among human judges in Table 7, where
we compute the agreement of one Turker with re-
spect to the gold standard drawn from the rest of
the Turkers, and take the average across over all
five Turkers18. Interestingly, the performance of
18In order to draw the gold standard from the 4 remaining
Turkers, we consider adjusted versions of ?V ote and ?Score
schemes described above.
POS NEG NEU UNDETERMINED
?V ote 50.4 14.6 24.1 10.9
?Score 67.9 20.6 11.5 n/a
Table 6: Distribution of Connotative Polarity from
AMT.
C-LP SENTIWN HUMAN JUDGES
?V ote 77.0 71.5 66.0
?Score 73.0 69.0 69.0
Table 7: Agreement (Accuracy) against AMT-
driven Gold Standard.
Turkers is not as good as that of C-LP lexicon. We
conjecture that this could be due to generally vary-
ing perception of different people on the connota-
tive polarity,19 while the corpus-driven induction
algorithms focus on the general connotative po-
larity corresponding to the most prevalent senses
of words in the corpus.
5.2 Extrinsic Evaluation
We conduct lexicon-based binary sentiment clas-
sification on the following two corpora.
SemEval From the SemEval task, we obtain a
set of news headlines with annotated scores (rang-
ing from -100 to 87). The positive/negative scores
indicate the degree of positive/negative polarity
orientation. We construct several sets of the posi-
tive and negative texts by setting thresholds on the
scores as shown in Table 8. ?? n? indicates that
the positive set consists of the texts with scores
? n and the negative set consists of the texts with
scores ? ?n.
Emoticon tweets The sentiment Twitter data20
consists of tweets containing either a smiley
emoticon (positive sentiment) or a frowny emoti-
con (negative sentiment). We filter out the tweets
with question marks or more than 30 words, and
keep the ones with at least two words in the union
of all polar words in the five lexicons in Table 8,
and then randomly select 10000 per class.
We denote the short text (e.g., content of tweets
or headline texts from SemEval) by t. w repre-
sents the word in t. W+/W? is the set of posi-
19Pearson correlation coefficient among turkers is 0.28,
which corresponds to a positive small to medium correlation.
Note that when the annotation of turkers is aggregated, we
observe agreement as high as 77% with respect to the learned
connotation lexicon.
20http://www.stanford.edu/?alecmgo/
cs224n/twitterdata.2009.05.25.c.zip
1781
DATA
LEXICON TWEET SEMEVAL
?20 ?40 ?60 ?80
C-LP 70.1 70.8 74.6 80.8 93.5
OVERLAY 68.5 70.0 72.9 76.8 89.6
PRED-ARG (CP) 60.5 64.2 69.3 70.3 79.2
SENTIWN 67.4 61.0 64.5 70.5 79.0
GI+MPQA 65.0 64.5 69.0 74.0 80.5
Table 8: Accuracy on Sentiment Classification
(%).
tive/negative words of the lexicon. We define the
weight of w as s(w). If w is adjective, s(w) = 2;
otherwise s(w) = 1. Then the polarity of each text
is determined as follows:
pol(t) =
?
????
????
positive if
W+?
w?t
s(w) ?
W??
w?t
s(w)
negative if
W+?
w?t
s(w) <
W??
w?t
s(w)
As shown in Table 8, C-LP generally performs
better than the other lexicons on both corpora.
Considering that only very simple classification
strategy is applied, the result by the connotation
lexicon is quite promising.
Finally, Table 1 highlights interesting exam-
ples of proper nouns with connotative polarity,
e.g., ?Mandela?, ?Google?, ?Hawaii? with pos-
itive connotation, and ?Monsanto?, ?Hallibur-
ton?, ?Enron? with negative connotation, sug-
gesting that our algorithms could potentially serve
as a proxy to track the general connotation of real
world entities. Table 2 shows example common
nouns with connotative polarity.
5.3 Practical Remarks on WSD and MWEs
In this work we aim to find the polarity of most
prevalent senses of each word, in part because it
is not easy to perform unsupervised word sense
disambiguation (WSD) on a large corpus in a reli-
able way, especially when the corpus consists pri-
marily of short n-grams. Although the resulting
lexicon loses on some of the polysemous words
with potentially opposite polarities, per-word con-
notation (rather than per-sense connotation) does
have a practical value: it provides a convenient
option for users who wish to avoid the burden of
WSD before utilizing the lexicon. Future work in-
cludes handling of WSD and multi-word expres-
sions (MWEs), e.g., ?Great Leader? (for Kim
Jong-Il), ?Inglourious Basterds? (a movie title).21
21These examples credit to an anonymous reviewer.
6 Related Work
A very interesting work of Mohammad and Tur-
ney (2010) uses Mechanical Turk in order to build
the lexicon of emotions evoked by words. In con-
trast, we present an automatic approach that in-
fers the general connotation of words. Velikovich
et al (2010) use graph propagation algorithms for
constructing a web-scale polarity lexicon for sen-
timent analysis. Although we employ the same
graph propagation algorithm, our graph construc-
tion is fundamentally different in that we integrate
stronger inductive biases into the graph topology
and the corresponding edge weights. As shown
in our experimental results, we find that judicious
construction of graph structure, exploiting multi-
ple complementing linguistic phenomena can en-
hance both the performance and the efficiency of
the algorithm substantially. Other interesting ap-
proaches include one based on min-cut (Dong et
al., 2012) or LDA (Xie and Li, 2012). Our pro-
posed approaches are more suitable for encoding
a much diverse set of linguistic phenomena how-
ever. But our work use a few seed predicates with
selectional preference instead of relying on word
similarity. Some recent work explored the use
of constraint optimization framework for inducing
domain-dependent sentiment lexicon (Choi and
Cardie (2009), Lu et al (2011)). Our work dif-
fers in that we provide comprehensive insights into
different formulations of ILP and LP, aiming to
learn the much different task of learning the gen-
eral connotation of words.
7 Conclusion
We presented a broad-coverage connotation lexi-
con that determines the subtle nuanced sentiment
of even those words that are objective on the sur-
face, including the general connotation of real-
world named entities. Via a comprehensive eval-
uation, we provided empirical insights into three
different types of induction algorithms, and pro-
posed one with good precision, coverage, and effi-
ciency.
Acknowledgments
This research was supported in part by the Stony
Brook University Office of the Vice President for
Research. We thank reviewers for many insightful
comments and suggestions, and for providing us
with several very inspiring examples to work with.
1782
References
Stefano Baccianella, Andrea Esuli, and Fabrizio Sebas-
tiani. 2010. Sentiwordnet 3.0: An enhanced lexi-
cal resource for sentiment analysis and opinion min-
ing. In Proceedings of the Seventh conference on
International Language Resources and Evaluation
(LREC?10), Valletta, Malta, may. European Lan-
guage Resources Association (ELRA).
J. Kathryn Bock. 1986. Syntactic persistence
in language production. Cognitive psychology,
18(3):355?387.
Thorsten Brants and Alex Franz. 2006. {Web 1T 5-
gram Version 1}.
Yejin Choi and Claire Cardie. 2009. Adapting a po-
larity lexicon using integer linear programming for
domain-specific sentiment classification. In Pro-
ceedings of the 2009 Conference on Empirical Meth-
ods in Natural Language Processing: Volume 2 -
Volume 2, EMNLP ?09, pages 590?598, Strouds-
burg, PA, USA. Association for Computational Lin-
guistics.
Kenneth Ward Church and Patrick Hanks. 1990. Word
association norms, mutual information, and lexicog-
raphy. Comput. Linguist., 16:22?29, March.
ILOG CPLEX. 2009. High-performance software for
mathematical programming and optimization. U RL
http://www.ilog.com/products/cplex.
Dmitry Davidov, Oren Tsur, and Ari Rappoport. 2010.
Semi-supervised recognition of sarcastic sentences
in twitter and amazon. In Proceedings of the
Fourteenth Conference on Computational Natural
Language Learning, CoNLL ?10, pages 107?116,
Stroudsburg, PA, USA. Association for Computa-
tional Linguistics.
Xishuang Dong, Qibo Zou, and Yi Guan. 2012. Set-
similarity joins based semi-supervised sentiment
analysis. In Neural Information Processing, pages
176?183. Springer.
Andrea Esuli and Fabrizio Sebastiani. 2006. Sen-
tiwordnet: A publicly available lexical resource
for opinion mining. In In Proceedings of the 5th
Conference on Language Resources and Evaluation
(LREC06), pages 417?422.
Song Feng, Ritwik Bose, and Yejin Choi. 2011. Learn-
ing general connotation of words using graph-based
algorithms. In Proceedings of the Conference on
Empirical Methods in Natural Language Process-
ing, pages 1092?1103. Association for Computa-
tional Linguistics.
Stephan Greene and Philip Resnik. 2009. More than
words: Syntactic packaging and implicit sentiment.
In Proceedings of Human Language Technologies:
The 2009 Annual Conference of the North American
Chapter of the Association for Computational Lin-
guistics, pages 503?511, Boulder, Colorado, June.
Association for Computational Linguistics.
Vasileios Hatzivassiloglou and Kathleen R McKeown.
1997. Predicting the semantic orientation of adjec-
tives. In Proceedings of the eighth conference on
European chapter of the Association for Computa-
tional Linguistics, pages 174?181. Association for
Computational Linguistics.
Bas Heerschop, Alexander Hogenboom, and Flavius
Frasincar. 2011. Sentiment lexicon creation from
lexical resources. In Business Information Systems,
pages 185?196. Springer.
Nobuhiro Kaji and Masaru Kitsuregawa. 2007. Build-
ing lexicon for sentiment analysis from massive col-
lection of html documents. In Proceedings of the
2007 Joint Conference on Empirical Methods in
Natural Language Processing and Computational
Natural Language Learning (EMNLP-CoNLL).
Jon M. Kleinberg. 1999. Authoritative sources in a hy-
perlinked environment. JOURNAL OF THE ACM,
46(5):604?632.
Bill Louw. 1993. Irony in the text or insincerity in
the writer. Text and technology: In honour of John
Sinclair, pages 157?176.
Yue Lu, Malu Castellanos, Umeshwar Dayal, and
ChengXiang Zhai. 2011. Automatic construction
of a context-aware sentiment lexicon: an optimiza-
tion approach. In Proceedings of the 20th interna-
tional conference on World wide web, pages 347?
356. ACM.
Saif Mohammad and Peter Turney. 2010. Emotions
evoked by common words and phrases: Using me-
chanical turk to create an emotion lexicon. In Pro-
ceedings of the NAACL HLT 2010 Workshop on
Computational Approaches to Analysis and Genera-
tion of Emotion in Text, pages 26?34, Los Angeles,
CA, June. Association for Computational Linguis-
tics.
Arturo Montejo-Ra?ez, Eugenio Mart??nez-Ca?mara,
M. Teresa Mart??n-Valdivia, and L. Alfonso Uren?a
Lo?pez. 2012. Random walk weighting over sen-
tiwordnet for sentiment polarity detection on twit-
ter. In Proceedings of the 3rd Workshop in Com-
putational Approaches to Subjectivity and Sentiment
Analysis, pages 3?10, Jeju, Korea, July. Association
for Computational Linguistics.
Lawrence Page, Sergey Brin, Rajeev Motwani, and
Terry Winograd. 1999. The pagerank citation rank-
ing: Bringing order to the web. Technical Report
1999-66, Stanford InfoLab, November.
Bo Pang and Lillian Lee. 2008. Opinion mining and
sentiment analysis. Found. Trends Inf. Retr., 2(1-
2):1?135.
Martin J Pickering and Holly P Branigan. 1998. The
representation of verbs: Evidence from syntactic
priming in language production. Journal of Mem-
ory and Language, 39(4):633?651.
1783
Guang Qiu, Bing Liu, Jiajun Bu, and Chun Chen.
2009. Expanding domain sentiment lexicon through
double propagation. In Proceedings of the 21st in-
ternational jont conference on Artifical intelligence,
IJCAI?09, pages 1199?1204, San Francisco, CA,
USA. Morgan Kaufmann Publishers Inc.
Dan Roth and Wen-tau Yih. 2004. A linear program-
ming formulation for global inference in natural lan-
guage tasks. Defense Technical Information Center.
John Sinclair. 1991. Corpus, concordance, colloca-
tion. Describing English language. Oxford Univer-
sity Press.
Anatol Stefanowitsch and Stefan Th Gries. 2003. Col-
lostructions: Investigating the interaction of words
and constructions. International journal of corpus
linguistics, 8(2):209?243.
Philip J. Stone and Earl B. Hunt. 1963. A computer
approach to content analysis: studies using the gen-
eral inquirer system. In Proceedings of the May 21-
23, 1963, spring joint computer conference, AFIPS
?63 (Spring), pages 241?256, New York, NY, USA.
ACM.
Michael Stubbs. 1995. Collocations and semantic pro-
files: on the cause of the trouble with quantitative
studies. Functions of language, 2(1):23?55.
Kristina Toutanova and Christopher D. Manning.
2000. Enriching the knowledge sources used in
a maximum entropy part-of-speech tagger. In In
EMNLP/VLC 2000, pages 63?70.
Peter Turney. 2001. Mining the web for synonyms:
Pmi-ir versus lsa on toefl.
Leonid Velikovich, Sasha Blair-Goldensohn, Kerry
Hannan, and Ryan McDonald. 2010. The via-
bility of web-derived polarity lexicons. In Human
Language Technologies: The 2010 Annual Confer-
ence of the North American Chapter of the Associa-
tion for Computational Linguistics. Association for
Computational Linguistics.
Janyce Wiebe, Theresa Wilson, and Claire Cardie.
2005. Annotating expressions of opinions and emo-
tions in language. Language Resources and Eval-
uation (formerly Computers and the Humanities),
39(2/3):164?210.
Theresa Wilson, Paul Hoffmann, Swapna Somasun-
daran, Jason Kessler, Janyce Wiebe, Yejin Choi,
Claire Cardie, Ellen Riloff, and Siddharth Patward-
han. 2005a. Opinionfinder: a system for subjec-
tivity analysis. In Proceedings of HLT/EMNLP on
Interactive Demonstrations, pages 34?35, Morris-
town, NJ, USA. Association for Computational Lin-
guistics.
Theresa Wilson, Janyce Wiebe, and Paul Hoffmann.
2005b. Recognizing contextual polarity in phrase-
level sentiment analysis. In HLT ?05: Proceedings
of the conference on Human Language Technology
and Empirical Methods in Natural Language Pro-
cessing, pages 347?354, Morristown, NJ, USA. As-
sociation for Computational Linguistics.
Rui Xie and Chunping Li. 2012. Lexicon construc-
tion: A topic model approach. In Systems and Infor-
matics (ICSAI), 2012 International Conference on,
pages 2299?2303. IEEE.
Xiaojin Zhu and Zoubin Ghahramani. 2002. Learn-
ing from labeled and unlabeled data with label prop-
agation. In Technical Report CMU-CALD-02-107.
CarnegieMellon University.
1784
Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, pages 1544?1554,
Baltimore, Maryland, USA, June 23-25 2014.
c
?2014 Association for Computational Linguistics
ConnotationWordNet:
Learning Connotation over the Word+Sense Network
Jun Seok Kang Song Feng Leman Akoglu Yejin Choi
Department of Computer Science
Stony Brook University
Stony Brook, NY 11794-4400
junkang, songfeng, leman, ychoi@cs.stonybrook.edu
Abstract
We introduce ConnotationWordNet, a con-
notation lexicon over the network of words
in conjunction with senses. We formulate
the lexicon induction problem as collec-
tive inference over pairwise-Markov Ran-
dom Fields, and present a loopy belief
propagation algorithm for inference. The
key aspect of our method is that it is
the first unified approach that assigns the
polarity of both word- and sense-level
connotations, exploiting the innate bipar-
tite graph structure encoded in WordNet.
We present comprehensive evaluation to
demonstrate the quality and utility of the
resulting lexicon in comparison to existing
connotation and sentiment lexicons.
1 Introduction
We introduce ConnotationWordNet, a connotation
lexicon over the network of words in conjunction
with senses, as defined in WordNet. A connotation
lexicon, as introduced first by Feng et al (2011),
aims to encompass subtle shades of sentiment a
word may conjure, even for seemingly objective
words such as ?sculpture?, ?Ph.D.?, ?rosettes?.
Understanding the rich and complex layers of con-
notation remains to be a challenging task. As a
starting point, we study a more feasible task of
learning the polarity of connotation.
For non-polysemous words, which constitute a
significant portion of English vocabulary, learning
the general connotation at the word-level (rather
than at the sense-level) would be a natural oper-
ational choice. However, for polysemous words,
which correspond to most frequently used words,
it would be an overly crude assumption that the
same connotative polarity should be assigned for
all senses of a given word. For example, consider
?abound?, for which lexicographers of WordNet
prescribe two different senses:
? (v) abound: (be abundant of plentiful; exist
in large quantities)
? (v) abound, burst, bristle: (be in a state of
movement or action) ?The room abounded
with screaming children?; ?The garden bris-
tled with toddlers?
For the first sense, which is the most commonly
used sense for ?abound?, the general overtone of
the connotation would seem positive. That is, al-
though one can use this sense in both positive and
negative contexts, this sense of ?abound? seems
to collocate more often with items that are good to
be abundant (e.g., ?resources?), than unfortunate
items being abundant (e.g., ?complaints?).
However, as for the second sense, for which
?burst? and ?bristle? can be used interchangeably
with respect to this particular sense,
1
the general
overtone is slightly more negative with a touch of
unpleasantness, or at least not as positive as that of
the first sense. Especially if we look up the Word-
Net entry for ?bristle?, there are noticeably more
negatively connotative words involved in its gloss
and examples.
This word sense issue has been a universal chal-
lenge for a range of Natural Language Processing
applications, including sentiment analysis. Recent
studies have shown that it is fruitful to tease out
subjectivity and objectivity corresponding to dif-
ferent senses of the same word, in order to improve
computational approaches to sentiment analysis
(e.g. Pestian et al (2012), Mihalcea et al (2012)
Balahur et al (2014)). Encouraged by these recent
successes, in this study, we investigate if we can
attain similar gains if we model the connotative
polarity of senses separately.
There is one potential practical issue we would
like to point out in building a sense-level lexical
resource, however. End-users of such a lexicon
may not wish to deal with Word Sense Disam-
1
Hence a sense in WordNet is defined by synset (= syn-
onym set), which is the set of words sharing the same sense.
1544
biguation (WSD), which is known to be often too
noisy to be incorporated into the pipeline with re-
spect to other NLP tasks. As a result, researchers
often would need to aggregate labels across differ-
ent senses to derive the word-level label. Although
such aggregation is not entirely unreasonable, it
does not seem to be the most optimal and princi-
pled way of integrating available resources.
Therefore, in this work, we present the first uni-
fied approach that learns both sense- and word-
level connotations simultaneously. This way, end-
users will have access to more accurate sense-level
connotation labels if needed, while also having ac-
cess to more general word-level connotation la-
bels. We formulate the lexicon induction problem
as collective inference over pairwise-Markov Ran-
dom Fields (pairwise-MRF) and derive a loopy be-
lief propagation algorithm for inference.
The key aspect of our approach is that we ex-
ploit the innate bipartite graph structure between
words and senses encoded in WordNet. Although
our approach seems conceptually natural, previous
approaches, to our best knowledge, have not di-
rectly exploited these relations between words and
senses for the purpose of deriving lexical knowl-
edge over words and senses collectively. In ad-
dition, previous studies (for both sentiment and
connotation lexicons) aimed to produce only ei-
ther of the two aspects of the polarity: word-level
or sense-level, while we address both.
Another contribution of our work is the intro-
duction of loopy belief propagation (loopy-BP)
as a lexicon induction algorithm. Loopy-BP in
our study achieves statistically significantly better
performance over the constraint optimization ap-
proaches previously explored. In addition, it runs
much faster and it is considerably easier to imple-
ment. Last but not least, by using probabilistic rep-
resentation of pairwise-MRF in conjunction with
Loopy-BP as inference, the resulting solution has
the natural interpretation as the intensity of con-
notation. This contrasts to approaches that seek
discrete solutions such as Integer Linear Program-
ming(Papadimitriou and Steiglitz, 1998).
ConnotationWordNet, the final outcome of our
study, is a new lexical resource that has conno-
tation labels over both words and senses follow-
ing the structure of WordNet. The lexicon is pub-
licly available at: http://www.cs.sunysb.
edu/
?
junkang/connotation_wordnet.)
In what follows, we will first describe the net-
memberships)antonyms)Pred1Arg)Arg1Arg)
?)
?)
prevent)
suffer)
enjoy)
achieve)
pain)
losses)
life)
profit)
success)
win)
investment)
injure)accident)
wound)ache)
word)sense)
gain)
hurt)
put)on)
lose)
injure,))wound)
gain,))put)on)
win,)gain,)acquire)
win,)profits,)))winnings)
ConnotaAve)Predicates) Arguments) Senses)
Figure 1: G
WORD+SENSE
with words and senses.
work of words and senses (Section 2), then intro-
duce the representation of the network structure as
pairwise Markov Random Fields, and a loopy be-
lief propagation algorithm as collective inference
(Section 3). We then present comprehensive eval-
uation (Section 4 & 5 & 6), followed by related
work (Section 7) and conclusion (Section 8).
2 Network of Words and Senses
The connotation graph, called G
WORD+SENSE
, is a
heterogeneous graph with multiple types of nodes
and edges. As shown in Figure 1, it contains two
types of nodes; (i) lemmas (i.e., words, 115K)
and (ii) synsets (63K), and four types of edges;
(t
1
) predicate-argument (179K), (t
2
) argument-
argument (144K), (t
3
) argument-synset (126K),
and (t
4
) synset-synset (3.4K) edges.
The predicate-argument edges, first introduced
by Feng et al (2011), depict the selectional prefer-
ence of connotative predicates (i.e., the polarity of
a predicate indicates the polarity of its arguments)
and encode their co-occurrence relations based
on the Google Web 1T corpus. The argument-
argument edges are based on the distributional
similarities among the arguments. The argument-
synset edges capture the synonymy between argu-
ment nodes through the corresponding synsets. Fi-
nally, the synset-synset edges depict the antonym
relations between synset pairs.
In general, our graph construction is similar to
that of Feng et al (2013), but there are a few im-
portant differences. Most notably, we model both
words and synsets explicitly, and exploit the mem-
bership relations between words and senses. We
expect that edges between words and senses will
encourage senses that belong to the same word to
1545
receive the same connotation label. Conversely,
we expect that these edges will also encourage
words that belong to the same sense (i.e., synset
definition) to receive the same connotation label.
Another benefit of our approach is that for var-
ious WordNet relations (e.g., antonym relations),
which are defined over synsets (not over words),
we can add edges directly between corresponding
synsets, rather than projecting (i.e., approximat-
ing) those relations over words. Note that the lat-
ter, which has been employed by several previous
studies (e.g., Kamps et al (2004), Takamura et al
(2005), Andreevskaia and Bergler (2006), Su and
Markert (2009), Lu et al (2011), Kaji and Kit-
suregawa (2007), Feng et al (2013)), could be a
source of noise, as one needs to assume that the
semantic relation between a pair of synsets trans-
fers over the pair of words corresponding to that
pair of synsets. For polysemous words, this as-
sumption may be overly strong.
3 Pairwise Markov Random Fields and
Loopy Belief Propagation
We formulate the task of learning sense- and word-
level connotation lexicon as a graph-based clas-
sification task (Sen et al, 2008). More formally,
we denote the connotation graph G
WORD+SENSE
by
G = (V,E), in which a total of n word and synset
nodes V = {v
1
, . . . , v
n
} are connected with
typed edges e(v
i
, v
j
, t) ? E, where edge types
t ? {pred-arg, arg-arg, syn-arg, syn-syn} de-
pict the four edge types as described in Section
2. A neighborhood function N , where N
v
=
{u| e(u, v) ? E} ? V , describes the underlying
network structure.
In our collective classification formulation, each
node in V is represented as a random variable that
takes a value from an appropriate class label do-
main; in our case, L = {+,?} for positive and
negative connotation. In this classification task,
we denote by Y the nodes the labels of which need
to be assigned, and let y
i
refer to Y
i
?s label.
3.1 Pairwise Markov Random Fields
We next define our objective function. We pro-
pose to use an objective formulation that utilizes
pairwise Markov Random Fields (MRFs) (Kinder-
mann and Snell, 1980), which we adapt to our
problem setting. MRFs are a class of probabilistic
graphical models that are suited for solving infer-
ence problems in networked data. An MRF con-
sists of an undirected graph where each node can
be in any of a finite number of states (i.e., class
labels). The state of a node is assumed to be de-
pendent on each of its neighbors and independent
of other nodes in the graph.
2
In pairwise MRFs,
the joint probability of the graph can be written as
a product of pairwise factors, parameterized over
the edges. These factors are referred to as clique
potentials in general MRFs, which are essentially
functions that collectively determine the graph?s
joint probability.
Specifically, let G = (V,E) denote a network
of random variables, where V consists of the un-
observed variables Y that need to be assigned val-
ues from label set L. Let ? denote a set of clique
potentials that consists of two types of factors:
? For each Y
i
? Y , ?
i
? ? is a prior map-
ping ?
i
: L ? R
?0
, where R
?0
denotes non-
negative real numbers.
? For each e(Y
i
, Y
j
, t) ? E, ?
t
ij
? ? is a com-
patibility mapping ?
t
ij
: L ? L ? R
?0
.
Objective formulation Given an assignment y
to all the unobserved variables Y and x to ob-
served ones X (variables with known labels, if
any), our objective function is associated with the
following joint probability distribution
P (y|x) =
1
Z(x)
?
Y
i
?Y
?
i
(y
i
)
?
e(Y
i
,Y
j
,t)?E
?
t
ij
(y
i
, y
j
)
(1)
where Z(x) is the normalization function. Our
goal is then to infer the maximum likelihood as-
signment of states (i.e., labels) to unobserved vari-
ables (i.e., nodes) that will maximize Equation (1).
Problem Definition Having introduced our
graph-based classification task and objective for-
mulation, we define our problem more formally.
Given
- a connotation graph G = (V,E) of words
and synsets connected with typed edges,
- prior knowledge (i.e., probabilities) of (some
or all) nodes belonging to each class,
- compatibility of two nodes with a given pair
of labels being connected to each other;
Classify the nodes Y
i
? Y , into one of two classes;
L = {+,?}, such that the class assignments y
i
maximize our objective in Equation (1).
We can further rank the network objects by the
probability of their connotation polarity.
2
This assumption yields a pairwise Markov Random Field
(MRF); a special case of general MRFs (Yedidia et al, 2003).
1546
3.2 Loopy Belief Propagation
Finding the best assignments to unobserved vari-
ables in our objective function is the inference
problem. The brute force approach through enu-
meration of all possible assignments is exponen-
tial and thus intractable. In general, exact in-
ference is known to be NP-hard and there is
no known algorithm which can be theoretically
shown to solve the inference problem for gen-
eral MRFs. Therefore in this work, we em-
ploy a computationally tractable (in fact linearly
scalable with network size) approximate infer-
ence algorithm called Loopy Belief Propagation
(LBP) (Yedidia et al, 2003), which we extend to
handle typed graphs like our connotation graph.
Our inference algorithm is based on iterative
message passing and the core of it can be concisely
expressed as the following two equations:
m
i?j
(y
j
) = ?
?
y
i
?L
(
?
t
ij
(y
i
, y
j
) ?
i
(y
i
)
?
Y
k
?N
i
?Y\Y
j
m
k?i
(y
i
)
)
, ?y
j
? L (2)
b
i
(y
i
) = ? ?
i
(y
i
)
?
Y
j
?N
i
?Y
m
j?i
(y
i
),?y
i
? L
(3)
A message m
i?j
is sent from node i to node j
and captures the belief of i about j, which is the
probability distribution over the labels of j; i.e.
what i ?thinks? j?s label is, given the current la-
bel of i and the type of the edge that connects i
and j. Beliefs refer to marginal probability dis-
tributions of nodes over labels; for example b
i
(y
i
)
denotes the belief of node i having label y
i
. ? and
? are the normalization constants, which respec-
tively ensure that each message and each set of
marginal probabilities sum to 1. At every iteration,
each node computes its belief based on messages
received from its neighbors, and uses the compat-
ibility mapping to transform its belief into mes-
sages for its neighbors. The key idea is that after
enough iterations of message passes between the
nodes, the ?conversations? are likely to come to a
consensus, which determines the marginal proba-
bilities of all the unknown variables.
The pseudo-code of our method is given in Al-
gorithm 1. It first initializes all messages to 1
and priors to unbiased (i.e., equal) probabilities
for all nodes except the seed nodes for which the
sentiment is known (lines 3-9). It then proceeds
by making each Y
i
? Y communicate messages
Algorithm 1: CONNOTATION INFERENCE
1 Input: Connotation graph G=(V,E), prior
potentials ?
s
for seed words s ? S, and
compatibility potentials ?
t
ij
2 Output: Connotation label probabilities for
each node i ? V \P
3 foreach e(Y
i
, Y
j
, t) ? E do // initialize msg.s
4 foreach y
j
? L do
5 m
i?j
(y
j
)? 1
6 foreach i ? V do // initialize priors
7 foreach y
j
? L do
8 if i ? S then ?
i
(y
j
)? ?
i
(y
j
) else
?
i
(y
j
)? 1/|L|
9 repeat // iterative message passing
10 foreach e(Y
i
, Y
j
, t) ? E, Y
j
? Y
V \S
do
11 foreach y
j
? L do
12 Use Equation (2)
13 until all messages stop changing
14 foreach Y
i
? Y
V \S
do // compute final beliefs
15 foreach y
i
? L do
16 Use Equation (3)
with their neighbors in an iterative fashion until
the messages stabilize (lines 10-14), i.e. conver-
gence is reached.
3
At convergence, we calculate
the marginal probabilities, that is of assigning Y
i
with label y
i
, by computing the final beliefs b
i
(y
i
)
(lines 15-17). We use these maximum likelihood
probabilities for label assignment; for each node i,
we assign the label L
i
? max
y
i
b
i
(y
i
).
To completely define our algorithm, we need to
instantiate the potentials ?, in particular the priors
and the compatibilities, which we discuss next.
Priors The prior beliefs ?
i
of nodes can be suit-
ably initialized if there is any prior knowledge for
their connotation sentiment (e.g., enjoy is posi-
tive, suffer is negative). As such, our method
is flexible to integrate available side information.
In case there is no prior knowledge available, each
node is initialized equally likely to have any of the
possible labels, i.e.,
1
|L|
as in Algorithm 1 (line 9).
Compatibilities The compatibility potentials
can be thought of as matrices, with entries
3
Although convergence is not theoretically guaranteed, in
practice LBP converges to beliefs within a small threshold of
change (e.g., 10
?6
) fairly quickly with accurate results (Pan-
dit et al, 2007; McGlohon et al, 2009; Akoglu et al, 2013).
1547
?t
ij
(y
i
, y
j
) that give the likelihood of a node hav-
ing label y
i
, given that it has a neighbor with label
y
j
to which it is connected through a type t edge.
A key difference of our method from earlier mod-
els is that we use clique potentials that differ for
edge types, since the connotation graph is hetero-
geneous. This is exactly because the compatibil-
ity of class labels of two adjacent nodes depends
on the type of the edge connecting them: e.g.,
+
syn-arg
?????? + is highly compatible, whereas +
syn-syn
?????? + is unlikely; as syn-arg edges capture
synonymy; i.e., words-sense memberships, while
syn-syn edges depict antonym relations.
A sample instantiation of the compatibilities
is shown in Table 1. Notice that the potentials
for pred-arg, arg-arg, and syn-arg capture ho-
mophily, i.e., nodes with the same label are likely
to connect to each other through these types of
edges.
4
On the other hand, syn-syn edges con-
nect nodes that are antonyms of each other, and
thus the compatibilities capture the reverse rela-
tionship among their labels.
Table 1: Instantiation of compatibility potentials.
Entry ?
t
ij
(y
i
, y
j
) is the compatibility of a node
with label y
i
having a neighbor labeled y
j
, given
the edge between i and j is type t, for small .
t: t
1
A
P + ?
+ 1- 
?  1-
t: t
2
A
A + ?
+ 1-2 2
? 2 1-2
(t
1
) pred-arg (t
2
) arg-arg
t: t
3
A
S + ?
+ 1- 
?  1-
t: t
4
S
S + ?
+  1-
? 1- 
(t
3
) syn-arg (t
4
) syn-syn
(synonym relations) (antonym relations)
Complexity analysis Most demanding compo-
nent of Algorithm 1 is the iterative message pass-
ing over the edges (lines 10-14), with time com-
plexity O(ml
2
r), where m = |E| is the num-
ber of edges in the connotation graph, l = |L|,
the classes, and r, the iterations until convergence.
Often, l is quite small (in our case, l = 2) and
r  m. Thus running time grows linearly with the
number of edges and is scalable to large datasets.
4
arg-arg edges are based on co-occurrence (see Section
2), which does not carry as strong indication of the same con-
notation as e.g., synonymy. Thus, we enforce less homophily
for nodes connected through edges of arg-arg type.
4 Evaluation I: Agreement with
Sentiment Lexicons
ConnotationWordNet is expected to be the super-
set of a sentiment lexicon, as it is highly likely for
any word with positive/negative sentiment to carry
connotation of the same polarity. Thus, we use
two conventional sentiment lexicons, General In-
quirer (GENINQ) (Stone et al, 1966) and MPQA
(Wilson et al, 2005b), as surrogates to measure
the performance of our inference algorithm.
4.1 Variants of Graph Construction
The construction of the connotation graph, de-
noted by G
WORD+SENSE
, which includes words and
synsets, has been described in Section 2. In ad-
dition to this graph, we tried several other graph
constructions, the first three of which have previ-
ously been used in (Feng et al, 2013). We briefly
describe these graphs below, and compare perfor-
mance on all the graphs in the proceeding.
G
WORD
W/ PRED-ARG: This is a (bipartite)
subgraph of G
WORD+SENSE
, which only includes
the connotative predicates and their arguments. As
such, it contains only type t
1
edges. The edges
between the predicates and the arguments can be
weighted by their Point-wise Mutual Information
(PMI)
5
based on the Google Web 1T corpus.
G
WORD
W/ OVERLAY: The second graph is also
a proper subgraph of G
WORD+SENSE
, which in-
cludes the predicates and all the argument words.
Predicate words are connected to their arguments
as before. In addition, argument pairs (a
1
, a
2
) are
connected if they occurred together in the ?a
1
and
a
2
? or ?a
2
and a
1
? coordination (Hatzivassiloglou
and McKeown, 1997; Pickering and Branigan,
1998). This graph contains both type t
1
and t
2
edges. The edges can also be weighted based on
the distributional similarities of the word pairs.
G
WORD
: The third graph is a super-graph of
G
WORD
W/ OVERLAY, with additional edges,
where argument pairs in synonym and antonym
relation are connected to each other. Note that un-
like the connotation graph G
WORD+SENSE
, it does
not contain any synset nodes. Rather, the words
that are synonyms or antonyms of each other are
directly linked in the graph. As such, this graph
contains all edge types t
1
through t
4
.
5
PMI scores are widely used in previous studies to mea-
sure association between words (e.g., (Church and Hanks,
1990), (Turney, 2001), (Newman et al, 2009)).
1548
GWORD+SENSE
W/ SYNSIM: This is a super-
graph of our original G
WORD+SENSE
graph; that
is, it has all the predicate, arguments, and synset
nodes, as well as the four types of edges between
them. In addition, we add edges of a fifth type t
5
between the synset nodes to capture their similar-
ity. To define similarity, we use the glossary def-
initions of the synsets and derive three different
scores. Each score utilizes the count(s
1
, s
2
) of
overlapping nouns, verbs, and adjectives/adverbs
among the glosses of the two synsets s
1
and s
2
.
G
WORD+SENSE
W/ SYNSIM1: We discard edges
with count less than 3. The weighted version has
the counts normalized between 0 and 1.
G
WORD+SENSE
W/ SYNSIM2: We normalize
the counts by the length of the gloss (the
avg of two lengths), that is, p = count /
avg(len gloss(s
1
), len gloss(s
2
))
and discard edges with p < 0.5. The weighted
version contains p values as edge weights.
G
WORD+SENSE
W/ SYNSIM3: To further sparsify
the graph we discard edges with p < 0.6. To
weigh the edges, we use the cosine similarity be-
tween the gloss vectors of the synsets based on the
TF-IDF values of the words the glosses contain.
Note that the connotation inference algorithm,
as given in Algorithm 1, remains exactly the same
for all the graphs described above. The only dif-
ference is the set of parameters used; while G
WORD
W/ PRED-ARG and G
WORD
W/ OVERLAY contain
one and two edge types, respectively and only use
compatibilities (t
1
) and (t
2
), G
WORD
uses all four
as given in Table 1. The G
WORD+SENSE
W/ SYN-
SIM graphs use an additional compatibility matrix
for the synset similarity edges of type t
5
, which is
the same as the one used for t
1
, i.e., similar synsets
are likely to have the same connotation label. This
flexibility is one of the key advantages of our al-
gorithm as new types of nodes and edges can be
added to the graph seamlessly.
4.2 Sentiment-Lexicon based Performance
In this section, we first compare the performance
of our connotation graph G
WORD+SENSE
to graphs
that do not include synset nodes but only words.
Then we analyze the performance when the addi-
tional synset similarity edges are added. First, we
briefly describe our performance measures.
The sentiment lexicons we use as gold standard
are small, compared to the size (i.e., number of
words) our graphs contain. Thus, we first find
the overlap between each graph and a senti-
GENINQ MPQA
P R F F
Variations of G
WORD
W/ PRED-ARG 88.0 67.6 76.5 57.3
W/ PRED-ARG-W 84.9 68.9 76.1 57.8
W/ OVERLAY 87.8 70.4 78.1 58.4
W/ OVERLAY-W 82.2 67.7 74.2 54.2
G
WORD
88.5 83.1 85.7 69.7
G
WORD
-W 75.5 71.5 73.4 53.2
Variations of G
WORD+SENSE
G
WORD+SENSE
88.8 84.1 86.4 70.0
G
WORD+SENSE
-W 76.8 73.0 74.9 54.6
W/ SYNSIM1 87.2 83.3 85.2 67.9
W/ SYNSIM2 83.9 80.8 82.3 65.1
W/ SYNSIM3 86.5 83.2 84.8 67.8
W/ SYNSIM1-W 88.0 84.3 86.1 69.2
W/ SYNSIM2-W 86.4 83.7 85.0 68.5
W/ SYNSIM3-W 86.7 83.4 85.0 68.2
Table 2: Connotation inference performance on
various graphs. ?-W? indicates weighted versions
(see ?4.1). P: precision, R: recall, F: F1-score (%).
ment lexicon. Note that the overlap size may be
smaller than the lexicon size, as some sen-
timent words may be missing from our graphs.
Then, we calculate the number of correct la-
bel assignments. As such, precision is defined as
(correct / overlap), and recall as (correct
/ lexicon size). Finally, F1-score is their har-
monic mean and reflects the overall accuracy.
As shown in Table 2 (top), we first observe that
including the synonym and antonym relations in
the graph, as with G
WORD
and G
WORD+SENSE
, im-
prove the performance significantly, almost by an
order of magnitude, over graphs G
WORD
W/ PRED-
ARG and G
WORD
W/ OVERLAY that do not contain
those relation types. Furthermore, we notice that
the performances on the G
WORD+SENSE
graph are
better than those on the word-only graphs. This
shows that including the synset nodes explicitly in
the graph structure is beneficial. What is more,
it gives us a means to obtain connotation labels
for the synsets themselves, which we use in the
evaluations in the next sections. Finally, we note
that using the unweighted versions of the graphs
provide relatively more robust performance, po-
tentially due to noise in the relative edge weights.
Next we analyze the performance when the new
edges between synsets are introduced, as given in
Table 2 (bottom). We observe that connecting the
synset nodes by their gloss-similarity (at least in
the ways we tried) does not yield better perfor-
mance than on our original G
WORD+SENSE
graph.
Different from earlier, the weighted versions of
the similarity based graphs provide better perfor-
1549
mance than their unweighted counterparts. This
suggests that glossary similarity would be a more
robust means to correlate nodes; we leave it as fu-
ture work to explore this direction for predicate-
argument and argument-argument relations.
4.3 Parameter Sensitivity
Our belief propagation based connotation senti-
ment inference algorithm has one user-specified
parameter  (see Table 1). To study the sensitivity
of its performance to the choice of , we reran our
experiments for  = {0.02, 0.04, . . . , 0.24}
6
and
report the accuracy results on our G
WORD+SENSE
in
Figure 2 for the two lexicons. The results indicate
that the performances remain quite stable across a
wide range of the parameter choice.
precisionrecallF-scoreP
erfor
man
ce
0
20
40
60
80
100
?0.02 0.06 0.10 0.14 0.18 0.22
precisionrecallF-scoreP
erfor
manc
e
0
20
40
60
80
100
?0.02 0.06 0.10 0.14 0.18 0.22
(a) GENINQ EVAL (b) MPQA EVAL
Figure 2: Performance is stable across various .
5 Evaluation II: Human Evaluation on
ConnotationWordNet
In this section, we present the result of human
evaluation we executed using Amazon Mechani-
cal Turk (AMT). We collect two separate sets of
labels: a set of labels at the word-level, and an-
other set at the sense-level. We first describe the
labeling process of sense-level connotation: We
selected 350 polysemous words and one of their
senses, and each Turker was asked to rate the con-
notative polarity of a given word (or of a given
sense), from -5 to 5, 0 being the neutral.
7
For each
word, we asked 5 Turkers to rate and we took the
average of the 5 ratings as the connotative inten-
sity score of the word. We labeled a word as nega-
tive if its intensity score is less than 0 and positive
otherwise. For word-level labels we apply similar
procedure as above.
6
Note that for  > 0.25, compatibilities of ?
t
2
in Table 1
are reversed, hence the maximum of 0.24.
7
Because senses in WordNet can be tricky to understand,
care should be taken in designing the task so that the Turkers
will focus only on the corresponding sense of a word. There-
fore, we provided the part of speech tag, the WordNet gloss
of the selected sense, and a few examples as given in Word-
Net. As an incentive, each Turker was rewarded $0.07 per hit
which consists of 10 words to label.
Lexicon Word-level Sense-level
SentiWordNet 27.22 14.29
OpinionFinder 31.95 -
Feng2013 62.72 -
G
WORD+SENSE
(95%) 84.91 83.43
G
WORD+SENSE
(99%) 84.91 83.71
E-G
WORD+SENSE
(95%) 86.98 86.29
E-G
WORD+SENSE
(99%) 86.69 85.71
Table 3: Word-/Sense-level evaluation results
5.1 Word-Level Evaluation
We first evaluate the word-level assignment of
connotation, as shown in Table 3. The agreement
between the new lexicon and human judges varies
between 84% and 86.98%. Sentiment lexicons
such as SentiWordNet (Baccianella et al (2010))
and OpinionFinder (Wilson et al (2005a)) show
low agreement rate with human, which is some-
what as expected: human judges in this study are
labeling for subtle connotation, not for more ex-
plicit sentiment. OpinionFinder?s low agreement
rate was mainly due to the low hit rate of the words
(successful look-up rate, 33.43%). Feng2013 is
the lexicon presented in (Feng et al, 2013) and it
showed a relatively higher 72.13% hit rate.
Note that belief propagation was run until 95%
and 99% of the nodes were converged in their
beliefs. In addition, the seed words with known
connotation labels originally consist of 20 positive
and 20 negative predicates. We also extended the
seed set with the sentiment lexicon words and de-
note these runs with E- for ?Extended?.
5.2 Sense-Level Evaluation
We also examined the agreement rates on the
sense-level. Since OpinionFinder and Feng2013
do not provide the polarity scores at the sense-
level, we excluded them from this evaluation. Be-
cause sense-level polarity assignment is a harder
(more subtle) task, the performance of all lexicons
decreased to some degree in comparison to that of
word-level evaluations.
5.3 Pair-wise Intensity Ranking
A notable goodness of our induction algorithm is
that the outcome of the algorithm can be inter-
preted as an intensity of the corresponding conno-
tation. But are these values meaningful? We an-
swer this question in this section. We formulate a
pair-wise ranking task as a binary decision task as
follows: given a pair of words, we ask which one
is more positive (or more negative) than the other.
Since we collect human labels based on scales, we
1550
Lexicon Correct Undecided
SentiWordNet 33.77 23.34
G
WORD+SENSE
(95%) 74.83 0.58
G
WORD+SENSE
(99%) 73.01 0.58
E-G
WORD+SENSE
(95%) 73.84 1.16
E-G
WORD+SENSE
(99%) 74.01 1.16
Table 4: Results of pair-wise intensity evaluation,
for intensity difference threshold = 2.0
already have this information at hand. Because
different human judges have different notion of
scales however, subtle differences are more likely
to be noisy. Therefore, we experiment with vary-
ing degrees of differences in their scales, as shown
in Figure 3. Threshold values (ranging from 0.5 to
3.0) indicate the minimum differences in scales for
any pair of words, for the pair to be included in the
test set. As expected, we observe that the perfor-
mance improves as we increase the threshold (as
pairs get better separated). Within range [0.5, 1.5]
(249 pairs examined), the accuracies are as high as
68.27%, which shows that even the subtle differ-
ences of the connotative intensities are relatively
well reflected in the new lexicons.
SentiWordNetGWord+Sense(95%)GWord+Sense(99%)e-GWord+Sense(95%)e-GWord+Sense(99%)A
ccu
rac
y (%
)
40
60
80
Threshold
0.5 1.0 2.0 3.0
Figure 3: Trend of accuracy for pair-wise intensity
evaluation over threshold
The results for pair-wise intensity evaluation
(threshold=2.0, 1,208 pairs) are given in Table 4.
Despite that intensity is generally a harder prop-
erty to measure (than the coarser binary catego-
rization of polarities), our connotation lexicons
perform surprisingly well, reaching up to 74.83%
accuracy. Further study on the incorrect cases re-
veals that SentiWordNet has many pair of words
with the same polarity score (23.34%). Such cases
seems to be due to the limited score patterns of
SentiWordNet. The ratio of such cases are ac-
counted as Undecided in Table 4.
6 Evaluation III: Sentiment Analysis
using ConnotationWordNet
Finally, to show the utility of the resulting lexi-
con in the context of a concrete sentiment analysis
task, we perform lexicon-based sentiment analy-
sis. We experiment with SemEval dataset (Strap-
parava and Mihalcea, 2007) that includes the hu-
man labeled dataset for predicting whether a news
headline is a good news or a bad news, which we
expect to have a correlation with the use of con-
notative words that we focus on in this paper. The
good/bad news are annotated with scores (ranging
from -100 to 87). We construct several data sets by
applying different thresholds on scores. For exam-
ple, with the threshold set to 60, we discard the in-
stances whose scores lie between -60 and 60. For
comparison, we also test the connotation lexicon
from (Feng et al, 2013) and the combined senti-
ment lexicon GENINQ+MPQA.
Note that there is a difference in how humans
judge the orientation and the degree of connota-
tion for a given word out of context, and how the
use of such words in context can be perceived as
good/bad news. In particular, we conjecture that
humans may have a bias toward the use of posi-
tive words, which in turn requires calibration from
the readers? minds (Pennebaker and Stone, 2003).
That is, we might need to tone down the level of
positiveness in order to correctly measure the ac-
tual intended positiveness of the message.
With this in mind, we tune the appropriate cali-
bration from a small training data, by using 1 fold
from N fold cross validation, and using the re-
maining N ? 1 folds as testing. We simply learn
the mixture coefficient ? to scale the contribution
of positive and negative connotation values. We
tune this parameter ?
8
for other lexicons we com-
pare against as well. Note that due to this param-
eter learning, we are able to report better perfor-
mance for the connotation lexicon of (Feng et al,
2013) than what the authors have reported in their
paper (labeled with *) in Table 5.
Table 5 shows the results for N=15, where the
new lexicon consistently outperforms other com-
petitive lexicons. In addition, Figure 4 shows that
the performance does not change much based on
the size of training data used for parameter tuning
(N={5, 10, 15, 20}).
7 Related Work
Several previous approaches explored the use of
graph propagation for sentiment lexicon induction
(Velikovich et al, 2010) and connotation lexicon
8
What is reported is based on ? ? {20, 40, 60, 80}. More
detailed parameter search does not change the results much.
1551
Lexicon
SemEval Threshold
20 40 60 80
Instance Size 955 649 341 86
Feng2013 71.5 77.1 81.6 90.5
GENINQ+MPQA 72.8 77.2 80.4 86.7
G
WORD+SENSE
(95%) 74.5 79.4 86.5 91.9
G
WORD+SENSE
(99%) 74.6 79.4 86.8 91.9
E-G
WORD+SENSE
(95%) 72.5 76.8 82.3 87.2
E-G
WORD+SENSE
(99%) 72.6 76.9 82.5 87.2
Feng2013* 70.8 74.6 80.8 93.5
GENINQ+MPQA* 64.5 69.0 74.0 80.5
Table 5: SemEval evaluation results, for N=15
Feng2013MPQA+GenInqGWord+Sense(95%)GWord+Sense(99%)e-GWord+Sense(95%)e-GWord+Sense(99%)
Acc
ura
cy 
(%)
50
60
70
80
N
5 10 15 20
Figure 4: Trend of SemEval performance over N ,
the number of CV folds
induction (Feng et al, 2013). Our work intro-
duces the use of loopy belief propagation over
pairwise-MRF as an alternative solution to these
tasks. At a high-level, both approaches share the
general idea of propagating confidence or belief
over the graph connectivity. The key difference,
however, is that in our MRF representation, we
can explicitly model various types of word-word,
sense-sense and word-sense relations as edge po-
tentials. In particular, we can naturally encode re-
lations that encourage the same assignment (e.g.,
synonym) as well as the opposite assignment (e.g.,
antonym) of the polarity labels. Note that integra-
tion of the latter is not straightforward in the graph
propagation framework.
There have been a number of previous studies
that aim to construct a word-level sentiment lex-
icon (Wiebe et al, 2005; Qiu et al, 2009) and
a sense-level sentiment lexicon (Esuli and Sebas-
tiani, 2006). But none of these approaches con-
sidered to induce the polarity labels at both the
word-level and sense-level. Although we focus on
learning connotative polarity of words and senses
in this paper, the same approach would be applica-
ble to constructing a sentiment lexicon as well.
There have been recent studies that address
word sense disambiguation issues for sentiment
analysis. SentiWordNet (Esuli and Sebastiani,
2006) was the very first lexicon developed for
sense-level labels of sentiment polarity. In recent
years, Akkaya et al (2009) report a successful em-
pirical result where WSD helps improving senti-
ment analysis, while Wiebe and Mihalcea (2006)
study the distinction between objectivity and sub-
jectivity in each different sense of a word, and
their empirical effects in the context of sentiment
analysis. Our work shares the high-level spirit of
accessing the sense-level polarity, while also de-
riving the word-level polarity.
In recent years, there has been a growing re-
search interest in investigating more fine-grained
aspects of lexical sentiment beyond positive and
negative sentiment. For example, Mohammad and
Turney (2010) study the affects words can evoke
in people?s minds, while Bollen et al (2011) study
various moods, e.g., ?tension?, ?depression?, be-
yond simple dichotomy of positive and negative
sentiment. Our work, and some recent work by
Feng et al (2011) and Feng et al (2013) share this
spirit by targeting more subtle, nuanced sentiment
even from those words that would be considered
as objective in early studies of sentiment analysis.
8 Conclusion
We have introduced a novel formulation of lexicon
induction operating over both words and senses,
by exploiting the innate structure between the
words and senses as encoded in WordNet. In addi-
tion, we introduce the use of loopy belief propaga-
tion over pairwise-Markov Random Fields as an
effective lexicon induction algorithm. A notable
strength of our approach is its expressiveness: var-
ious types of prior knowledge and lexical relations
can be encoded as node potentials and edge po-
tentials. In addition, it leads to a lexicon of bet-
ter quality while also offering faster run-time and
easiness of implementation. The resulting lexi-
con, called ConnotationWordNet, is the first lex-
icon that has polarity labels over both words and
senses. ConnotationWordNet is publicly available
for research and practical use.
Acknowledgments
This research was supported by the Army Re-
search Office under Contract No. W911NF-14-1-
0029, Stony Brook University Office of Vice Pres-
ident for Research, and gifts from Northrop Grum-
man Aerospace Systems and Google. We thank
reviewers for many insightful comments and sug-
gestions.
1552
References
Cem Akkaya, Janyce Wiebe, and Rada Mihalcea.
2009. Subjectivity word sense disambiguation. In
Proceedings of the 2009 Conference on Empirical
Methods in Natural Language Processing: Volume
1-Volume 1, pages 190?199. Association for Com-
putational Linguistics.
Leman Akoglu, Rishi Chandy, and Christos Faloutsos.
2013. Opinion fraud detection in online reviews by
network effects.
Alina Andreevskaia and Sabine Bergler. 2006. Min-
ing wordnet for a fuzzy sentiment: Sentiment tag
extraction from wordnet glosses. In EACL, pages
209?216.
Stefano Baccianella, Andrea Esuli, and Fabrizio Sebas-
tiani. 2010. Sentiwordnet 3.0: An enhanced lexical
resource for sentiment analysis and opinion mining.
In LREC, volume 10, pages 2200?2204.
Alexandra Balahur, Rada Mihalcea, and Andr?es Mon-
toyo. 2014. Computational approaches to subjec-
tivity and sentiment analysis: Present and envisaged
methods and applications. Computer Speech & Lan-
guage, 28(1):1?6.
Johan Bollen, Huina Mao, and Alberto Pepe. 2011.
Modeling public mood and emotion: Twitter senti-
ment and socio-economic phenomena. In ICWSM.
K. W. Church and P. Hanks. 1990. Word association
norms, mutual information, and lexicography. Com-
putational Linguistics, 1(16):22?29.
Andrea Esuli and Fabrizio Sebastiani. 2006. Sen-
tiwordnet: A publicly available lexical resource
for opinion mining. In In Proceedings of the 5th
Conference on Language Resources and Evaluation
(LREC06, pages 417?422.
Song Feng, Ritwik Bose, and Yejin Choi. 2011. Learn-
ing general connotation of words using graph-based
algorithms. In Proceedings of the Conference on
Empirical Methods in Natural Language Process-
ing, pages 1092?1103. Association for Computa-
tional Linguistics.
Song Feng, Jun Seok Kang, Polina Kuznetsova, and
Yejin Choi. 2013. Connotation lexicon: A dash
of sentiment beneath the surface meaning. In The
Association for Computer Linguistics, pages 1774?
1784.
Vasileios Hatzivassiloglou and Kathleen McKeown.
1997. Predicting the semantic orientation of adjec-
tives. In Proceedings of the Joint ACL/EACL Con-
ference, pages 174?181.
Nobuhiro Kaji and Masaru Kitsuregawa. 2007. Build-
ing lexicon for sentiment analysis from massive col-
lection of html documents. In EMNLP-CoNLL,
pages 1075?1083.
Jaap Kamps, MJ Marx, Robert J Mokken, and Maarten
De Rijke. 2004. Using wordnet to measure seman-
tic orientations of adjectives.
Ross Kindermann and J. L. Snell. 1980. Markov Ran-
dom Fields and Their Applications.
Yue Lu, Malu Castellanos, Umeshwar Dayal, and
ChengXiang Zhai. 2011. Automatic construction
of a context-aware sentiment lexicon: an optimiza-
tion approach. In Proceedings of the 20th interna-
tional conference on World wide web, pages 347?
356. ACM.
Mary McGlohon, Stephen Bay, Markus G. Anderle,
David M. Steier, and Christos Faloutsos. 2009.
Snare: a link analytic system for graph labeling
and risk detection. In John F. Elder IV, Franoise
Fogelman-Souli, Peter A. Flach, and Mohammed
Zaki, editors, KDD, pages 1265?1274. ACM.
Rada Mihalcea, Carmen Banea, and Janyce Wiebe.
2012. Multilingual subjectivity and sentiment anal-
ysis. In Tutorial Abstracts of ACL 2012, pages 4?4.
Association for Computational Linguistics.
Saif Mohammad and Peter Turney. 2010. Emotions
evoked by common words and phrases: Using me-
chanical turk to create an emotion lexicon. In Pro-
ceedings of the NAACL HLT 2010 Workshop on
Computational Approaches to Analysis and Genera-
tion of Emotion in Text, pages 26?34, Los Angeles,
CA, June. Association for Computational Linguis-
tics.
David Newman, Sarvnaz Karimi, and Lawrence Cave-
don. 2009. External evaluation of topic models.
In Australasian Document Computing Symposium,
pages 11?18, Sydney, December.
Shashank Pandit, Duen Horng Chau, Samuel Wang,
and Christos Faloutsos. 2007. Netprobe: a fast and
scalable system for fraud detection in online auction
networks. In WWW, pages 201?210.
Christos H Papadimitriou and Kenneth Steiglitz. 1998.
Combinatorial optimization: algorithms and com-
plexity. Courier Dover Publications.
James W Pennebaker and Lori D Stone. 2003. Words
of wisdom: language use over the life span. Journal
of personality and social psychology, 85(2):291.
John P Pestian, Pawel Matykiewicz, Michelle Linn-
Gust, Brett South, Ozlem Uzuner, Jan Wiebe, K Bre-
tonnel Cohen, John Hurdle, Christopher Brew, et al
2012. Sentiment analysis of suicide notes: A shared
task. Biomedical Informatics Insights, 5(Suppl.
1):3.
Martin J. Pickering and Holly P. Branigan. 1998. The
representation of verbs: Evidence from syntactic
priming in language production. Journal of Mem-
ory and Language, 39:633?651.
1553
Guang Qiu, Bing Liu, Jiajun Bu, and Chun Chen.
2009. Expanding domain sentiment lexicon through
double propagation. In IJCAI, volume 9, pages
1199?1204.
Prithviraj Sen, Galileo Namata, Mustafa Bilgic, Lise
Getoor, Brian Gallagher, and Tina Eliassi-Rad.
2008. Collective classification in network data. AI
Magazine, 29(3):93?106.
Philip J. Stone, Dexter C. Dunphy, Marshall S. Smith,
and Daniel M. Ogilvie. 1966. The General In-
quirer: A Computer Approach to Content Analysis.
MIT Press, Cambridge, MA.
Carlo Strapparava and Rada Mihalcea. 2007. Semeval-
2007 task 14: Affective text. In Proceedings of
the 4th International Workshop on Semantic Evalu-
ations, pages 70?74. Association for Computational
Linguistics.
Fangzhong Su and Katja Markert. 2009. Subjectiv-
ity recognition on word senses via semi-supervised
mincuts. In Proceedings of Human Language Tech-
nologies: The 2009 Annual Conference of the North
American Chapter of the Association for Computa-
tional Linguistics, pages 1?9. Association for Com-
putational Linguistics.
Hiroya Takamura, Takashi Inui, and Manabu Okumura.
2005. Extracting semantic orientations of words us-
ing spin model. In Proceedings of the 43rd Annual
Meeting on Association for Computational Linguis-
tics, pages 133?140. Association for Computational
Linguistics.
Peter D. Turney. 2001. Mining the Web for synonyms:
PMI-IR versus LSA on TOEFL. In Proceedings
of the Twelfth European Conference on Machine
Learning (ECML-01), pages 491?502, Freiburg,
Germany.
Leonid Velikovich, Sasha Blair-Goldensohn, Kerry
Hannan, and Ryan McDonald. 2010. The via-
bility of web-derived polarity lexicons. In Human
Language Technologies: The 2010 Annual Confer-
ence of the North American Chapter of the Associa-
tion for Computational Linguistics. Association for
Computational Linguistics.
Janyce Wiebe and Rada Mihalcea. 2006. Word sense
and subjectivity. In Proceedings of the 21st Inter-
national Conference on Computational Linguistics
and the 44th annual meeting of the Association for
Computational Linguistics, pages 1065?1072. Asso-
ciation for Computational Linguistics.
Janyce Wiebe, Theresa Wilson, and Claire Cardie.
2005. Annotating expressions of opinions and emo-
tions in language. Language Resources and Eval-
uation (formerly Computers and the Humanities),
39(2/3):164?210.
Theresa Wilson, Paul Hoffmann, Swapna Somasun-
daran, Jason Kessler, Janyce Wiebe, Yejin Choi,
Claire Cardie, Ellen Riloff, and Siddharth Patward-
han. 2005a. Opinionfinder: A system for subjec-
tivity analysis. In Proceedings of HLT/EMNLP on
Interactive Demonstrations, pages 34?35. Associa-
tion for Computational Linguistics.
Theresa Wilson, Janyce Wiebe, and Paul Hoffmann.
2005b. Recognizing contextual polarity in phrase-
level sentiment analysis. In Proceedings of Human
Language Technologies Conference/Conference on
Empirical Methods in Natural Language Processing
(HLT/EMNLP 2005), Vancouver, CA.
Jonathan S. Yedidia, William T. Freeman, and Yair
Weiss. 2003. Understanding belief propagation and
its generalizations. In Exploring AI in the new mil-
lennium, pages 239?269.
1554
