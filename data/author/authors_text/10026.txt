Simple Syntactic and Morphological Processing Can Help English-Hindi
Statistical Machine Translation
Ananthakrishnan Ramanathan,
Pushpak Bhattacharyya
Department of Computer Science
and Engineering
Indian Institute of Technology
Powai, Mumbai-400076
India
{anand,pb}@cse.iitb.ac.in
Jayprasad Hegde, Ritesh M. Shah,
Sasikumar M
CDAC Mumbai (formerly NCST)
Gulmohar Cross Road No. 9
Juhu, Mumbai-400049
India
{jjhegde,ritesh,sasi}
@cdacmumbai.in
Abstract
In this paper, we report our work on incor-
porating syntactic and morphological infor-
mation for English to Hindi statistical ma-
chine translation. Two simple and compu-
tationally inexpensive ideas have proven to
be surprisingly effective: (i) reordering the
English source sentence as per Hindi syntax,
and (ii) using the suffixes of Hindi words.
The former is done by applying simple trans-
formation rules on the English parse tree.
The latter, by using a simple suffix separa-
tion program. With only a small amount of
bilingual training data and limited tools for
Hindi, we achieve reasonable performance
and substantial improvements over the base-
line phrase-based system. Our approach es-
chews the use of parsing or other sophisti-
cated linguistic tools for the target language
(Hindi) making it a useful framework for
statistical machine translation from English
to Indian languages in general, since such
tools are not widely available for Indian lan-
guages currently.
1 Introduction
Techniques for leveraging syntactic and morpholog-
ical information for statistical machine translation
(SMT) are receiving a fair amount of attention nowa-
days. For SMT from English to Indian languages,
these techniques are especially important for the fol-
lowing three reasons: (i) Indian languages differ
widely from English in terms of word-order; (ii) In-
dian languages are morphologically quite rich; and
(iii) large amounts of parallel corpora are not avail-
able for these languages, though smaller amounts of
text in specific domains (such as health, tourism, and
agriculture) are now becoming accessible. It might
therefore be expected that using syntactic and mor-
phological information for English to Indian lan-
guage SMT will prove highly beneficial in terms
of achieving reasonable performance out of limited
parallel corpora. However, the difficulty in this is
that crucial tools, such as parsers and morphological
analyzers, are not widely available for Indian lan-
guages yet.
In this paper, we present our work on incorporat-
ing syntactic and morphological information for En-
glish to Hindi SMT. Our approach, which eschews
the use of parsing and other tools for Hindi, is two-
pronged:
1. Incorporating syntactic information by com-
bining phrase-based models with a set of struc-
tural preprocessing rules on English
2. Incorporating morphological information by
using a simple suffix separation program for
Hindi, the likes of which can be created with
limited effort for other Indian languages as well
Significant improvements over the baseline
phrase-based SMT system are obtained using our
approach. Table 1 illustrates this with an example 1.
Since only limited linguistic effort and tools are
required for the target language, we believe that the
framework we propose is suitable for SMT from En-
glish to other Indian languages as well.
1This example is discussed further in section 4
513
input For a celestial trip of the scientific kind, visit the planetarium.
reference
	 ta	 	 e	   	 e , ta ae?
vaigyaanika tariike ke eka divya saira ke lie, taaraamandala aaem
scientific kind of a celestial trip for, planetarium visit (come)
baseline
	   	 	 pr	 , 	 ta

 ?
ke svargiiya yaatraa ke vaigyaanika prakaara, kaa taaraagruha hai
of celestial trip of scientific kind, of planetarium is
baseline+syn
	 pr	 	   	 e , ta

 ?
vaigyaanika prakaara ke svargiiya yaatraa ke lie, taaraagruha hai
scientific kind of celestial trip for, planetarium is
baseline+syn+morph
	 pr	 	   	 e , ta

 ?
vaigyaanika prakaara ke svargiiya yaatraa ke lie, taaraagruha dekhem
scientific kind of celestial trip for, planetarium visit (see)
Table 1: Effects of Syntactic and Morphological Processing (reference: human reference translation;
baseline: phrase-based system; syn: with syntactic information; morph: with morphological information)
The rest of this paper is organized as follows: Sec-
tion 2 outlines related work. Section 3 describes our
approach ? first, the phrase-based baseline system is
sketched briefly, leading up to the techniques used
for incorporating syntactic and morphological infor-
mation within this system. Experimental results are
discussed in section 4. Section 5 concludes the pa-
per with some directions for future work.
2 Related Work
Statistical translation models have evolved from the
word-based models originally proposed by Brown
et al (1990) to syntax-based and phrase-based tech-
niques.
The beginnings of phrase-based translation can
be seen in the alignment template model introduced
by Och et al (1999). A joint probability model
for phrase translation was proposed by Marcu and
Wong (2002). Koehn et al (2003) propose certain
heuristics to extract phrases that are consistent with
bidirectional word-alignments generated by the IBM
models (Brown et al, 1990). Phrases extracted us-
ing these heuristics are also shown to perform bet-
ter than syntactically motivated phrases, the joint
model, and IBM model 4 (Koehn et al, 2003).
Syntax-based models use parse-tree representa-
tions of the sentences in the training data to learn,
among other things, tree transformation probabili-
ties. These methods require a parser for the target
language and, in some cases, the source language
too. Yamada and Knight (2001) propose a model
that transforms target language parse trees to source
language strings by applying reordering, insertion,
and translation operations at each node of the tree.
Graehl and Knight (2004) and Melamed (2004), pro-
pose methods based on tree-to-tree mappings. Ima-
mura et al (2005) present a similar method that
achieves significant improvements over a phrase-
based baseline model for Japanese-English transla-
tion.
Recently, various preprocessing approaches have
been proposed for handling syntax within SMT.
These algorithms attempt to reconcile the word-
order differences between the source and target lan-
guage sentences by reordering the source language
data prior to the SMT training and decoding cy-
cles. Nie?en and Ney (2004) propose some restruc-
turing steps for German-English SMT. Popovic and
Ney (2006) report the use of simple local trans-
formation rules for Spanish-English and Serbian-
English translation. Collins et al (2006) propose
German clause restructuring to improve German-
English SMT.
The use of morphological information for SMT
has been reported in (Nie?en and Ney, 2004) and
(Popovic and Ney, 2006). The detailed experi-
ments by Nie?en and Ney (2004) show that the use
of morpho-syntactic information drastically reduces
the need for bilingual training data.
Recent work by Koehn and Hoang (2007) pro-
514
poses factored translation models that combine fea-
ture functions to handle syntactic, morphological,
and other linguistic information in a log-linear
model.
Our work uses a preprocessing approach for in-
corporating syntactic information within a phrase-
based SMT system. For incorporating morphology,
we use a simple suffix removal program for Hindi
and a morphological analyzer for English. These as-
pects are described in detail in the next section.
3 Syntactic & Morphological Information
for English-Hindi SMT
3.1 Phrase-Based SMT: the Baseline
Given a source sentence f , SMT chooses as its trans-
lation e?, which is the sentence with the highest prob-
ability:
e? = arg max
e
p(e|f)
According to Bayes? decision rule, this is written
as:
e? = arg max
e
p(e)p(f |e)
The phrase-based model that we use as our base-
line system (defined by Koehn et al (2003)) com-
putes the translation model p(f |e) by using a phrase
translation probability distribution. The decoding
process works by segmenting the input sentence f
into a sequence of I phrases f
I
1
. A uniform proba-
bility distribution over all possible segmentations is
assumed. Each phrase f
i
is translated into a target
language phrase e
i
with probability ?(f
i
|e
i
). Re-
ordering is penalized according to a simple exponen-
tial distortion model.
The phrase translation table is learnt in the fol-
lowing manner: The parallel corpus is word-aligned
bidirectionally, and using various heuristics (see
(Koehn et al, 2003) for details) phrase correspon-
dences are established. Given the set of collected
phrase pairs, the phrase translation probability is cal-
culated by relative frequency:
?(f |e) = count(f, e)?
f
count(f, e)
Lexical weighting, which measures how well
words within phrase pairs translate to each other,
validates the phrase translation, and addresses the
problem of data sparsity.
The language model p(e) used in our baseline sys-
tem is a trigram model with modified Kneser-Ney
smoothing (Chen and Goodman, 1998).
The weights for the various components of the
model (phrase translation model, language model,
distortion model etc.) are set by minimum error rate
training (Och, 2003).
3.2 Syntactic Information
As mentioned in section 2, phrase-based models
have emerged as the most successful method for
SMT. These models, however, do not handle syntax
in a natural way. Reordering of phrases during trans-
lation is typically managed by distortion models,
which have proved not entirely satisfactory (Collins
et al, 2006), especially for language pairs that differ
a lot in terms of word-order. We use a preprocess-
ing approach to get over this problem, by reordering
the English sentences in the training and test corpora
before the SMT system kicks in. This reduces, and
often eliminates, the ?distortion load? on the phrase-
based system.
The reordering rules that we use for prepro-
cessing can be broadly described by the following
transformation rule going from English to Hindi
word order (Rao et al 2000):
SS
m
V V
m
OO
m
Cm ? C
?
m
S
?
m
S
?
O
?
m
O
?
V
?
m
V
?
where,
S: Subject
O: Object
V : Verb
C
m
: Clause modifier
X
?: Corresponding constituent in Hindi,
where X is S, O, or V
X
m
: modifier of X
Essentially, the SVO order of English is changed
to SOV order, and post-modifiers are converted to
pre-modifiers. Our preprocessing module effects
this by parsing the input English sentence 2 and ap-
2Dan Bikel?s parser was used for parsing
(http://www.cis.upenn.edu/d?bikel/license.html).
515
structural transformation
morph analysis (English) Giza++
alignment correction
phrase extraction
suffix separation 
(Hindi)
decoder
	



	



