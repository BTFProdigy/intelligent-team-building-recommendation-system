Proceedings of the Seventeenth Conference on Computational Natural Language Learning: Shared Task, pages 20?25,
Sofia, Bulgaria, August 8-9 2013. c?2013 Association for Computational Linguistics
CoNLL-2013 Shared Task: Grammatical Error Correction NTHU System Description  Ting-Hui Kao+, Yu-Wei Chang*, Hsun-Wen Chiu*, Tzu-Hsi Yen+,  Joanne Boisson*, Jian-Cheng Wu+, Jason S. Chang+
* Institute of Information Systems and Applications + Department of Computer Science National Tsing Hua University  HsinChu, Taiwan, R.O.C. 30013 { maxis1718, teer1990, chiuhsunwen, joseph.yen,  Joanne.boisson, wujc86, jason.jschang} @gmail.com    Abstract 
Grammatical error correction has been an active research area in the field of Natural Language Processing. This paper describes the grammatical error correction system developed at NTHU in participation of the CoNLL-2013 Shared Task. The system consists of four modules in a pipeline to correct errors related to determiners, prepositions, verb forms and noun number. Although more types of errors are involved that than last year?s Shared Task, leading to more complicated problem this year, our system still obtain higher F-score as compared to last year. We received an overall F-measure score of 0.325, which put our system in second place among 17 systems evaluated. 1 Introduction Grammatical error correction is a task involving automatically detecting and correcting grammatical errors and improper choices. Grammatical error correction in writing of English as a second language (L2) or foreign language (EFL) is an important issue, for there are 375 million L2 speakers and 750 million EFL speakers around the world (Graddol, 2006). Most of these non-native speakers tend to make many kinds of error in their writing. An error correction system has the short-term benefit of helping writers improve the quality of writing. In the long run, non-native writers might learn from the corrections and thus gradually gain better command of grammar and word choice. The HOO shared task of 2012 is aimed at detecting and correcting misuse of determiners and prepositions, two types of errors accounting 
for only 38% of all errors. Therefore, there are a lot more errors related to other parts of speech that we have to address in this year?s shared task. In this paper, we describe the system submission from NTHU. The system reads and processes a given sentence through a pipeline of four distinct modules dealing with determiners, prepositions, verb forms and noun plurality. The output of one module feeds into the next module as input. The system finally produces possibly corrected sentences. The rest of the article is organized as follows. Section 2 describes detection and correction approach of each module in detail. Section 3 describes experiment setting and results. Then in Section 4, we discuss strengths and limitations of the proposed system and directions of future work. We conclude in Section 5.  2 System Description The system is designed to read a sentence and process each type of errors in terms and finally produce a corrected sentence. In Section 2.1, we give an overview of the system. Then, in Sections 2.2-2.5, we describe how to correct errors related to noun number, determiner, verb tense, and preposition.   
  Figure 1. System Architecture 
20
Table 1. Moving windows of ?location? Moving Window n-grams MW5 track based on the location based on the location of  on the location of cell the location of cell phone location of cell phone by MW4 based on the location on the location of the location of cell location of cell phone MW3 on the location the location of location of cell MW2 the location location of 2.1 Overview In this section, we give an overview of our system. Figure 1 shows the architecture of the error correction system. In this study, we focus on five different grammatical error types, including the improper usage of Determiner (ArtOrDet), Noun Number (Nn), Verb-Tenses (Vform), Subject-Verb Agreement (SVA), and Preposition (Prep).  In order to deal with these different types of errors systematically, we propose a back-off model based on the moving window approach.  Moving Window  A moving window MW of certain word wi is defined as below. (Leacock et al, 2010; Rozovskaya et al, 2010)   ???,?(?) = {???? ,? ,????? ???  ?, ? = 0, ? ? 1 ?}  (1)  where i denotes the position of word, k the window size, and w the original or replacement word at position i. In our approach, the window size is set to 2 to 5 words.  For example, consider the target word ?location? in the sentence, ?Children can easily be track based on the location of cell phone by parents.? The n-grams in moving windows of related to ?location? of sizes 2 to 5 are shown in Table 1.  Back-off Model To determine whether the target word needs to be changed to a different form (e.g, from ?location? to ?locations?), we first replace the target word with its variant forms (e.g., ?locations? for ?location?) in all MW n-grams and 
Table 2. Trigram information of ?location? and ?locations? in back-off model MW3 n-gram Freq. S3 location on the location the location of location of cell 304,400 3,794,400 1,400 4 M locations on the locations the locations of locations of cell 18,200 374,000 200 0.04 M  then measure the ratio of the counts of the original and replaced n-grams in a corpus. The frequency counts are obtained by querying a linguistic search engine Linggle (Joanne Boisson et al 2013), a web-scale linguistic search engine based on Google Web1T (Brants and Franz, 2006). The sum of n-gram counts, Sk with  the word w (original or replacement) in the ith position is defined as        ??,?(?)  ?=  ? ?????(?????)????  ?? ? ? ?(?)      (2)  With MW and S, we design a Replace function to determine whether is necessary to replace wi with its variant form, w' :  
Figure 2. The function Replace for determining whether to replace a word in location i using moving windows of size k.  The parameters ? and ? in Replace are set empirically.  For instance, in the given sentence ?Children can easily be track based on the location of cell phone by parents?, the target word wi is ?location? and the candidate is ?locations? for the Nn type error. According to Equation 2, the sums S9,3(?location?) of the original trigrams is about 4 million, whereas S9,3(?locations?) of the replaced trigrams is only 0.4 million (see Table 2 for more details). The value of r is 0.096, and depending on the threshold, Replace either returns False or back off to consider again the ratio r of S9,2(?location?) of the original bigrams and S9,2(?locations?) of the replacement bigrams for confidence in replacing the word ?location.?  
function Replace(i, k, w?) r = Si,k(w?)/Si,k(wi) if r > ? return True else if k > 2 and r > ?: return Replace (i, k-1, w?) else: return False 
21
2.2 The number module The number module is designed to correct error related to noun number (i.e., Nn). Two types of error are included, errors of singular noun and plural noun. To correct errors, we identify heads of base noun phrase (i.e., NP consisting of maximal contiguous sequence of tokens without containing another noun phrase or clause) in the given sentence by using part-of-speech tags and GeniaTagger (Tsuruoka et al, 2006), then use the Replace function to replace the original nouns (either singular or plural) to a different form (i.e., singular to plural, or plural to singular). We use two methods in the number module: combining voting with back-off, and using dependency relations.   Combining voting with back-off   Each n-gram in a moving window of various sizes described in Section 2.1 gets to cast a vote. When the sum of frequency counts related to the original noun is higher than that related to the replacement noun, the original noun gets one vote and vise versa. Voting method determines whether to replace the noun based on majority of the votes. For example, all of the 14 replacement n-grams (MWi, k , k = 2, 5) in Table 1 get a vote, because the n-gram with ?location? has higher frequency count that the same n-gram replaced with ?locations?. Intuitively, we should be confident enough to decide to stay with the original noun, i.e., ?location.? Back-off model described in Section 2.1 make a decision to permit the Replace module to change the original noun depend on threshold ?. Both of voting and back-off model need to show that alternative noun number is better. For the scheme of voting and back-off model, we also require the top count ratio and absolute count of 0.95 and 60,000 based on empirical evidence.  Using dependency relations  In some cases, the noun number depends on subject-verb agreement. We use part-of-speech information of subject and governing verb obtained from a tagger to handle such cases. For that, we use 3rd person singular present (i.e., VBZ) and other verb forms (e.g., VBP) to detect noun number mistakes.  Consider the sentence, ?In the society today, there are many ideas or concept that are 
currently in the stages of research and development.?, where ?concept? is a singular noun, but should be plural according to syntactic dependency information. The dependency parser typically produces nsubj(are-7, concept-11) among other relations and the word ?are? is tagged as VBP. Accordingly, we can replace the original noun, ?concept? to its plural form, ?concepts.?  2.3 Determiners module  The determiner is aimed at correcting determiner errors (i.e., errors annotated as ArtOrDet ). Given a sentence, we first identify the base noun phrases and their determiners (or lack of determiner) and using the moving window approach to decide whether there is an error and which alternative form to use. For determiner errors, the variant form of a base NP with a determiner is simple the same NP with determiner removed, while the variant form of a base NP without a determiner is simple the same NP with a determiner added. In addition to the moving window and back-off model, we also use dependency relations to check if a determiner is required for a base noun phrase.  Frequency of n-grams  We adopt the moving window approach and combine it with the back-off model mentioned in Section 2.1 with slight modification for the cases specific to determiner errors. When the head of given Base-NP is the last word of the n-gram, (as in ?Prepare meals for the elderly is my duty.?), the head can often be used as an modifier (as in ?for elderly people? leading to higher counts unrelated to the our case of the word being used as the head.   Therefore, while we adopting the moving window approach, the count of such n-gram is not counted. We set the threshold in the Replace function empirically: ?=5 and ?=0.35.   Dependency  In some cases, the frequency information of n-grams provides limited evidence for identifying mistakes. Therefore, we use more effective rules based on dependency relations to recognize the determiner errors in a way similar to the number module. 
22
Table 3. Verb form n-grams with PMIs. 
Verb Form n-grams PMI Sum happening crash happening happening at 21.5 38.2 59.7 happen crash happen happen at 24.0 35.7 59.7 happened crash happened happened at air crash happened happened at Miami crash happened at 
30.5 43.0 36.2 31.8 43.2 
184.7 
happens crash happens happens at crash happens at 
27.9 42.4 37.0 
107.3 
 We remove a determiner from a noun phrase with a plural head and an existing determiner. Otherwise, this module adds an appropriate determiner before the current noun phrase. For a conjunction (i.e., X and/or Y) of two base NPs, the rules favor adding a determiner such that both NPs have the same kind of determiner. 2.4 The verb-tense module In this section, we mainly concentrate on providing more proper verb tenses. Besides moving window, we introduce accumulated point-wise mutual information (PMI) (Church and Hanks, 1990) to improve the performance of this module. Applying PMI to this topic is based on the hypothesis that an appropriate verb form has a higher PMI measure with the context. To achieve more flexibility than the standard PMI, we use the modified PMI, which is an extension of standard PMI allowing an n-gram s of arbitrary length as input   ???(?) = log ?(?|?)?(??)????                               (3) where wi denotes the i-th word in s, k = | s |, and P(wi) the probability of wi estimated using a very large corpus. P(s|k) is the probability based on maximal likelihood estimation:   ?(?|?) = ???? (?)???? (?)???                               (4)  where S denotes all n-grams of length k. The PMI value of n-grams related to the original and alternative tense forms of a give verb are then calculated to attempt to correct the verb in question with a decision in favor of highest PMI. 
Table 4. Sample search results of ?being ?$PP a dangerous situation? * 
N-gram Count being in a dangerous situation 161 being a dangerous situation 0 being at a dangerous situation 0 being on a dangerous situation 0 ? 0 being about a dangerous situation 0 * Note:? denotes option word and $PP denotes wildcard prepositions  With this extended notion of PMI, we proceed as follows. First, we select each verb in a sentence and extract n-grams in moving window method as described in Section 2.2. Next, we generate more alternative n-grams by substituting all the related verb forms for the selected verb. After that, for all these n-grams, we calculate PMIs and accumulate the measures for each group of verb forms. Finally, if the accumulated PMI of the original verb is lower than the mean value of PMI of all verb forms, the verb in question will be replaced with the verb form associated the highest PMI value. Consider the sentence, ?In late nineteenth century, there was a severe air crash happening at Miami international airport.? We attempt to correct the verbs ?was? and ?happening? in the sentence. Table 3 shows n-grams and corresponding PMIs of each verb form. The accumulated PMI of ?happened? has the maximum value. So, the module changes ?happening? to ?happened.?  2.5 The prepositions module For preposition, we attempt to handle the two types of error: DELETE and REPLACE, and leave the INSERT errors for future work. For DELETE errors, the preposition in question should be deleted from the given sentence, whereas for REPLACE errors the preposition should be replaced with a more appropriate alternative. The third error type of preposition, INSERT, is left for future study. The proposed solution is based on the hypothesis that the usage of preposition often depends on the collocation relation of verb or noun. Therefore, we propose a back-off model, which utilizes the dependency relations to identify the related words of the preposition in question. We proceed as follows: For a target preposition in a given sentence, we extract the n-gram containing the preposition, its prepositional object, and the content word before the 
23
preposition. For example, the n-gram ?being in a dangerous situation? is extracted from the sentence ?This can protect the students from being in a dangerous situation in particularly for the small children who are studying in nursery.? The n-gram ?being in a dangerous situation? is then transformed into a query for a linguistic search engine (e.g., Linggle as described in Joanne et al 2013) to obtain the counts of all preposition variant forms, including NULL (for DELETE) or other prepositions (for REPLACE). The transformation process is very simple involving changing the proposition to a wild part of speech symbol. For example, ?being in a dangerous situation? is transformed to ?being ?$PP a dangerous situation.? The sample search results are shown in Table 4. From the results, we could confirm that the preposition ?in? is used correctly.  Although we use the web-scale n-gram for validation of usage of preposition, however, data sparseness still poses a problem. Furthermore, we cannot obtain information for n-grams with length more than 5, since the Web 1T we used only contains 1 to 5-grams. In order to cope with the data sparseness problem, we transform a query into a more general form, if no result could be obtained in the first round of search. To generalize the query, we remove the modifiers of the prepositional object one after another. Additionally, we also attempt to change the modifiers with the most frequent modifier of the object. Consider the n-gram ?in modern digit world.? The generalized n-grams ?in digit world? and ?in new world? will then be transformed into queries in turns until the results are sufficient for the model to make a decision. To avoid false alarm, empirically determined thresholds are used to measure the ratio of count of a preposition variant form to the original preposition. 3 Experiment To assess the effectiveness of the proposed method, we used the official training and testing data of CoNLL-2013 Shared Task. We also exploited several tools including Linggle, Stanford Parser and Geniatagger in the proposed system. Linggle supports flexible linguistic queries with wild part of speech and returns matching n-grams counts in Google Web 1T 5gram. Stanford Parser and Geniatagger produce syntactical information including dependency relations, 
part-of-speech tags, and phrase boundary. The evaluation scorer, which computes precision, recall, and F-score, is provided by National University of Singapore, the organizer of CoNLL-2013 Shared Task. On the test data, our system obtained the precision, recall and F-score of .3057, 0.346, and .3246, which put us in first place in term of recall and second place in term of F-score. 4 Discussion In this section, we discuss the strengths and limitations of our system and propose approaches to overcome current limitations. The module of noun numbers, moving window and syntactic dependency for correcting errors cannot handle well some ambiguous cases. For example, in this case "In conclusion, what I have mentioned above, we have to agree, tracking system has many benefits?.", according to the gold-standard annotations, ?system has? is corrected to ?systems have?.  However, this module keep the original word because of the 3rd person singular present verb, ?has?. Before ?has? being corrected to ?have?, there was no sufficient evidence to support that ?systems? is a good replacement. In cases like this, it is often difficult to suggest a correction using only the sentential context and n-gram frequency and dependency relations. To correct such an error, we may need to consider the context of the discourse or combine the module of different error types such as noun numbers and verb tense, which is beyond the scope of the current system. We handle the determiner errors with threshold ?  and ?  empirically derived, but it would be more effective if we could use some form of minimal error rate tuning (MERT) to set the parameters. Besides, we found that applying the dependency criteria and moving window method in parallel leads to high recall but low precision. However, the moving window method often fails because of insufficient evidence. In such case, the system can perform better in both precision and recall by favoring the dependency model output. For our system, the performance of correcting verb form errors is severely limited by the lengths of n-gram. The failure related to verb forms correction are mostly caused by the limitation of n-gram length of Web 1T. There is a large portion of sentences where the subject (or the adverbs) and the verb are so far apart, that 
24
they are not within windows of five words. So, it is difficult to use the noun number of the subject to select the correct verb form. Another major area of limitations of handling verb form errors has to do with rare words which lead to unseen n-grams even in a very large dataset like Web 1T. These rare words are mostly name entities that have insufficient coverage when combined other words in n-grams. Intuitively, we can generalize the n-gram matching process as in the case of handling preposition errors. In this study, we use the preposition and object relation (POBJ) to determine whether the use of the preposition is correct. The relation is useful for generalizing the queries and in correcting preposition errors. However, many preposition errors are unrelated to POBJ. For example, in the sentence ?Surveillance technology will help to prevent the family to loss their member...?, the two words ?to loss? should be replace with ?from losing.? Unfortunately, the current system cannot correct such an error in the absence of POBJ relation. In order to correct this kind of error, we have to consider composed relations such as noun-preposition-verb, which is crucial to the capability of correcting such multiple consecutive errors (i.e., preposition plus verb). 5 Conclusion In this paper, we build four modules in determiner, noun number, verb form, and preposition for error detection and correction. For different types of errors, we have developed modules independently in accordance with their features. The constructed modules rely on both moving windows and back-off model to improve grammatical error correction. Additionally, for verb form errors, we introduce point-wise mutual information for higher precision and recall.  We plan to integrate all the modules in a more flexible way than the current pipeline scheme. Yet another direction for future research is to consider the discourse context. 6 Acknowledgements We would like to acknowledge the funding supports from Delta Electronic Corp and National Science Council, Taiwan (contract no: NSC 100-2511-S-007-005-MY3). We are also thankful for helpful comments from the anonymous reviewers.  
References  Joanne Boisson, Ting-Hui Kao, Jian-Cheng Wu, Tzu-Hsi Yen and Jason S. Chang. 2013. Linggle: a Web-scale Linguistic Search Engine for Words in Context. In proceedings of Association for Computational Linguistics demonstrations. (ACL 2013) Thorsten Brants and Alex Franz. 2006. The Google Web 1T 5-gram corpus version 1.1.LDC2006T13 Kenneth W. Church and Patrick Hanks. 1990. Word association norms, mutual information, and lexicography. Computational Linguistics 16(1) (1990) 22?29 Leacock Claudia et al 2010. Automated grammatical error detection for language learners. Synthesis Lectures on Human Language Technologies, 3(1) 1?134. Daniel Dahlmeier, Hwee Tou Ng, Siew Mei Wu. 2013. Building a Large Annotated Corpus of Learner English: The NUS Corpus of Learner English. In Proceedings of the 8th Workshop on Innovative Use of NLP for Building Educational Applications (BEA 2013). Daniel Dahlmeier and Hwee Tou Ng. 2012. Better Evaluation for Grammatical Error Correction. In Proceedings of the 2012 Conference of the North American Chapter of the Association for Computational Linguistics (NAACL 2012). pp. 568 ? 572 David Graddol. 2006. English next: Why global English may mean the end of ?English as a Foreign Language.? UK: British Council. John Lee and Stephanie Seneff. 2006. Automatic Grammar Correction for Second-Language Learners. In INTERSPEECH ICSLP. Hwee Tou Ng, Siew Mei Wu, Yuanbin Wu, Christian Hadiwinoto and Joel Tetreault. 2013. The CoNLL-2013 Shared Task on Grammatical Error Correction. In Proceedings of the Seventeenth Conference on Computational Natural Language Learning. Alla Rozovskaya and Dan Roth. 2010. Generating confusion sets for context-sensitive error correction. In Proceedings of EMNLP, pp. 961?970. Yoshimasa Tsuruoka et al Developing a Robust Part-of-Speech Tagger for Biomedical Text. In Advances in Informatics - 10th Panhellenic Conference on Informatics, pp 382?392. 
25
Proceedings of the Workshop on Interactive Language Learning, Visualization, and Interfaces, pages 34?37,
Baltimore, Maryland, USA, June 27, 2014. c?2014 Association for Computational Linguistics
GLANCE Visualizes Lexical Phenomena for Language Learning  
 
Mei-Hua Chen*, Shih-Ting Huang+, Ting-Hui Kao+, Sun-Wen Chiu+, Tzu-His Yen+ 
* Department of Foreign Languages and Literature, Hua Fan University, Taipei, Taiwan, 
R.O.C. 22301 
+ Department of Computer Science, National Tsing Hua University, HsinChu, Taiwan, 
R.O.C. 30013 
{chen.meihua,koromiko1104,maxis1718,chiuhsunwen, joseph.yen}@gmail.com 
 
 
Abstract 
Facilitating vocabulary knowledge is a 
challenging aspect for language learners. 
Although current corpus-based reference 
tools provide authentic contextual clues, the 
plain text format is not conducive to fully 
illustrating some lexical phenomena. Thus, 
this paper proposes GLANCE 1 , a text 
visualization tool, to present a large amount 
of lexical phenomena using charts and graphs, 
aimed at helping language learners 
understand a word quickly and intuitively. To 
evaluate the effectiveness of the system, we 
designed interfaces to allow comparison 
between text and graphics presentation, and 
conducted a preliminary user study with ESL 
students. The results show that the visualized 
display is of greater benefit to the 
understanding of word characteristics than 
textual display. 
1 Introduction 
Vocabulary is a challenging aspect for language 
learners to master. Extended word knowledge, 
such as word polarity and position, is not widely 
available in traditional dictionaries. Thus, for 
most language learners, it is very difficult to 
have a good command of such lexical phenome-
na.  
Current linguistics software programs use 
large corpus data to advance language learning. 
The use of corpora exposes learners to authentic 
contextual clues and lets them discover patterns 
or collocations of words from contextual clues 
(Partington, 1998). However, a huge amount of 
data can be overwhelming and time-consuming 
(Yeh et al., 2007) for language learners to induce 
rules or patterns. On the other hand, some lexical 
phenomena seem unable to be comprehended 
                                                 
1 http://glance-it.herokuapp.com/ 
fast and directly in plain text format (Koo, 2006). 
For example, in the British National Corpus 
(2007), ?however? seems more negative than 
?but?. Also, compared with ?but?, ?however? 
appears more frequently at the beginning of a 
sentence. 
With this in mind, we proposed GLANCE1, a 
text visualization tool, which presents corpus 
data using charts and graphs to help language 
learners understand the lexical phenomena of a 
word quickly and intuitively. In this paper, we 
focused on five types of lexical phenomena: po-
larity, position, POS, form and discipline, which 
will be detailed in the Section 3. Given a single 
query word, the GLANCE system shows graph-
ical representations of its lexical phenomena se-
quentially within a single web page.  
Additionally we believe that the use of 
graphics also facilitates the understanding of the 
differences between two words. Taking this into 
consideration, we introduce a comparison mode 
to help learners differentiate two words at a 
glance. Allowing two word input, GLANCE 
draws the individual representative graphs for 
both words and presents these graphs in a two-
column view. The display of parallel graphs de-
picts the distinctions between the two words 
clearly. 
 
2 Related Work 
Corpus-based language learning has widened the 
perspectives in second and foreign language edu-
cation, such as vocabulary learning (Wood, 
2001). In past decades, various corpus-based ref-
erence tools have been developed. For example, 
WordSmith (Scott, 2000), Compleat Lexical Tu-
tor (Cobb, 2007), GRASP (Huang et al., 2011), 
PREFER (Chen et al, 2012). 
Recently, some interactive visualization tools 
have been developed for the purpose of illustrat-
ing various linguistic phenomena. Three exam-
34
ples are Word Tree, a visual concordance (Wat-
tenberg and  i gas, 2008), WORDGRAPH, a 
visual tool for context-sensitive word choice 
(Riehmann et al., 2012) and Visual Thesaurus, a 
3D interactive reference tool (ThinkMap Inc., 
2005). 
 
3 Design of the GLANCE System 
The GLANCE system consists of several com-
ponents of corpus data visualization. We design 
and implement these visualization modules sepa-
rately to ensure all graphs are simple and clear 
enough for users to capture and understand the 
lexical phenomena quickly. 
In this paper, we use the d3.js (Data-Driven 
Documents) (Bostock et al., 2011) to visualize 
the data. The d3.js enables direct inspection and 
manipulation of a standard document object 
model (DOM) so that we are able to transform 
numeric data into various types of graphs when 
fitting these data to other visualization tools. In 
this section, we describe the ways we extract the 
data from the corpus and how we translate these 
data into informative graphs. 
 
3.1 Data Preprocessing 
We use the well-formed corpus, the BNC, to ex-
tract the data. In order to obtain the Part-of-
speech tags for each text, we use the GENIA 
tagger (Tsuruoka et al., 2005) to analyze the sen-
tences of the BNC and build a list of <POS-tag, 
frequency> pairs for each word in the BNC. Also 
the BNC contains the classification code as-
signed to the text in a genre-based analysis car-
ried out at Lancaster University by Lee (2001). 
For each word, the classification codes are ag-
gregated to a list of <code, frequency> pairs.  
  
3.2 Visualization of Lexical Phenomena  
Polarity 
A word may carry different sentiment polarities 
(i.e., positive, negative and objective). To help 
users quickly determine the proper sentiment 
polarity of a word, we introduce the sentiment 
polarity information of SentiWordNet 
(Baccianella et al., 2010) into our system. For 
each synset of a word, GLANCE displays the 
polarity in a bar with three different colors. The 
individual length of the three parts in the bar cor-
responds to the polarity scores of a synset (Fig-
ure 1). 
 
 
Figure 1. Representation of sentiment polarity  
 
Position 
The word position in a sentence is also an im-
portant lexical phenomenon. By calculating the 
word position in each sentence, we then obtain 
the location distribution. GLANCE visualizes the 
distribution information of a word using a bar 
chart. Figure 2 shows a plot of distribution of 
word position on the x-axis against the word fre-
quency on the y-axis. 
 
 
Figure 2. Distribution of word position 
 
Part Of Speech (POS) 
A lexical item may have more than one part of 
speech. Knowing the distribution of POS helps 
users quickly understand the general usage of a 
word.  
GLANCE displays a pie chart for each word 
to differentiate between its parts of speech. We 
use the maximum likelihood probability of a 
POS tag for a word as the arc length of the pie 
chart (Figure 3). 
 
 
35
Figure 3. POS representation 
 
Form 
The levels of formality of written and spoken 
language are different, which also confuse lan-
guage learners. Pie charts are used to illustrate 
the proportion of written and spoken English of 
individual words as shown in Figure 4. 
We derive the frequencies of both forms from 
the BNC classification code for each word. The 
arc length of each sector is proportional to the 
maximum likelihood probability of forms. 
 
 
Figure 4. Form representation 
 
Discipline 
Similar to language form, the discipline infor-
mation (e.g., newspaper or fiction) was gathered 
from the BNC classification code. The relations 
of the disciplines of a word are presented using a 
sunburst graph, a radial space-filling tree layout 
implemented with prefuse (Heer et al., 2005). In 
the sunburst graph (Figure 5.), each level corre-
sponds to the relation of the disciplines of a cer-
tain word. The farther the level is away from the 
center, the more specific the discipline is. Each 
level is given equal width, but the circular angle 
swept out by a discipline corresponds to the fre-
quency of the disciplines. 
 
  
Figure 5. Discipline relations 
 
4 Results 
4.1 Experimental Setting 
We performed a preliminary user study to assess 
the efficiency of our system in assisting language 
learners in grasping lexical phenomena. To ex-
amine the effectiveness of visualization, we built 
a textual interface for comparison with the 
graphical interface. 
Ten pre-intermediate ESL college students 
participated in the study. A total of six pairs of 
similar words were listed on the worksheet. After 
being introduced to GLANCE, all students were 
randomly divided into two groups. One group 
was required to consult the first three pairs using 
the graphical interface and the second three pairs 
the textual interface, and vice versa. The partici-
pants were allowed a maximum of one minute 
per pair, which meets the goal of this study of 
quickly glancing at the graphics and grasping the 
concepts of words. Then a test sheet containing 
the same six similar word pairs was used to ex-
amine the extent of students? word understanding. 
Note that during the test, no tool supports were 
provided. The student scored one point if he gave 
the correct answers to each question. In other 
words he would be awarded 6 points (the highest 
number of points) if he provided all the correct 
answers. They also completed a questionnaire, 
described below, evaluating the system. 
 
4.2 Experimental Results 
To determine the effectiveness of visualization of 
lexical phenomena, the students? average scores 
were used as performance indicators. Students 
achieved the average score 61.9 and 45.0 out of 
100.00 after consulting the graphic interface and 
textual interface respectively. Overall, the visual-
ized display of word characteristics outper-
formed the textual version. 
The questionnaire revealed that all the partici-
pants showed a positive attitude to visualized 
word information. Further analyses showed that 
all ten participants appreciated the position dis-
play and nine of them the polarity and form dis-
plays. In short, the graphical display of lexical 
phenomena in GLANCE results in faster assimi-
lation and understanding of word information. 
Moreover, the participants suggested several in-
teresting aspects for improving the GLANCE 
system. For example, they preferred bilingual 
environment, further information concerning an-
tonyms, more example sentences, and increased 
36
detail in the sunburst representation of disci-
plines. 
 
5 Conclusion and Future Work 
In this paper, we proposed GLANCE, a text vis-
ualization tool, which provides graphical display 
of corpus data. Our goal is to assist language 
learners in glancing at the graphics and grasping 
the lexical knowledge quickly and intuitively. To 
evaluate the efficiency and effectiveness of 
GLANCE, we conducted a preliminary user 
study with ten non-native ESL learners. The re-
sults revealed that visualization format outper-
formed plain text format. 
Many avenues exist for future research and 
improvement. We attempt to expand the single 
word to phrase level. For example, the colloca-
tion behaviors are expected to be deduced and 
displayed. Moreover, we are interested in sup-
porting more lexical phenomena, such as hypo-
nyms, to provide learners with more lexical rela-
tions of the word with other words. 
 
Reference 
Baccianella, S., Esuli, A., & Sebastiani, F. (2010, 
May). SentiWordNet 3.0: An Enhanced Lexical 
Resource for Sentiment Analysis and Opinion Min-
ing. In LREC (Vol. 10, pp. 2200-2204). 
Bostock, M., Ogievetsky, V., & Heer, J. (2011). D? 
data-driven documents. Visualization and Comput-
er Graphics, IEEE Transactions on, 17(12), 2301-
2309. 
Chen, M. H., Huang, S. T., Huang, C. C., Liou, H. C., 
& Chang, J. S. (2012, June). PREFER: using a 
graph-based approach to generate paraphrases for 
language learning. In Proceedings of the Seventh 
Workshop on Building Educational Applications 
Using NLP (pp. 80-85). Association for Computa-
tional Linguistics. 
Cobb, T. (2007). The compleat lexical tutor. Retrieved 
September, 22, 2009. 
Heer, J., Card, S. K., & Landay, J. A. (2005, April). 
Prefuse: a toolkit for interactive information visual-
ization. In Proceedings of the SIGCHI conference 
on Human factors in computing systems (pp. 421-
430). ACM. 
Huang, C. C., Chen, M. H., Huang, S. T., Liou, H. C., 
& Chang, J. S. (2011, June). GRASP: grammar-
and syntax-based pattern-finder in CALL. 
In Proceedings of the 6th Workshop on Innovative 
Use of NLP for Building Educational Applications 
(pp. 96-104). Association for Computational Lin-
guistics. 
Kyosung Koo (2006). Effects of using corpora and 
online reference tools on foreign language writing: 
a study of Korean learners of English as a second 
language. PhD. dissertation, University of Iowa. 
Lee, D. Y. (2001). Genres, registers, text types, do-
mains and styles: Clarifying the concepts and 
nevigating a path through the BNC jungle. 
Partington, A. (1998). Patterns and meanings: Using 
corpora for English language research and teach-
ing (Vol. 2). John Benjamins Publishing. 
Riehmann, P., Gruendl, H., Froehlich, B., Potthast, M., 
Trenkmann, M., & Stein, B. (2011, March). The 
NETSPEAK WORDGRAPH: Visualizing key-
words in context. In Pacific Visualization Sympo-
sium (PacificVis), 2011 IEEE (pp. 123-130). IEEE. 
Scott, M. (2004). WordSmith tools version 4. 
The British National Corpus, version 3 (BNC XML 
Edition). 2007. Distributed by Oxford University 
Computing Services on behalf of the BNC Consor-
tium. URL: http://www.natcorp.ox.ac.uk/ 
ThinkMap Inc. (2005). Thinkmap Visual Thesaurus. 
Available from http:// www.visualthesaurus.com 
Tsuruoka, Y., Tateishi, Y., Kim, J. D., Ohta, T., 
McNaught, J., Ananiadou, S., & Tsujii, J. I. (2005). 
Developing a robust part-of-speech tagger for bio-
medical text. In Advances in informatics (pp. 382-
392). Springer Berlin Heidelberg. 
Wattenberg, M., & Vi?gas, F. B. (2008). The word 
tree, an interactive visual concord-
ance. Visualization and Computer Graphics, IEEE 
Transactions on, 14(6), 1221-1228. 
Wood, J. (2001). Can software support children?s 
vocabulary development.Language Learning & 
Technology, 5(1), 166-201. 
Yeh, Y., Liou, H. C., & Li, Y. H. (2007). Online syn-
onym materials and concordancing for EFL college 
writing. Computer Assisted Language Learning, 
20(2), 131-152. 
 
37
