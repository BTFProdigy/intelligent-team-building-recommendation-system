Proceedings of the NAACL HLT 2013 Demonstration Session, pages 5?9,
Atlanta, Georgia, 10-12 June 2013. c?2013 Association for Computational Linguistics
Topic Models and Metadata for Visualizing Text Corpora
Justin Snyder, Rebecca Knowles, Mark Dredze, Matthew R. Gormley, Travis Wolfe
Human Language Technology Center of Excellence
Johns Hopkins University
Baltimore, MD 21211
{jsnyde32,mdredze,mgormley,twolfe3}@jhu.edu, rknowles@haverford.edu
Abstract
Effectively exploring and analyzing large text
corpora requires visualizations that provide a
high level summary. Past work has relied on
faceted browsing of document metadata or on
natural language processing of document text.
In this paper, we present a new web-based tool
that integrates topics learned from an unsuper-
vised topic model in a faceted browsing expe-
rience. The user can manage topics, filter doc-
uments by topic and summarize views with
metadata and topic graphs. We report a user
study of the usefulness of topics in our tool.
1 Introduction
When analyzing text corpora, such as newspaper ar-
ticles, research papers, or historical archives, users
need an intuitive way to understand and summa-
rize numerous documents. Exploratory search (Mar-
chionini, 2006) is critical for large corpora that can
easily overwhelm users. Corpus visualization tools
can provide a high-level view of the data and help di-
rect subsequent exploration. Broadly speaking, such
systems can be divided into two groups: those that
rely on structured metadata, and those that use infor-
mation derived from document content.
Metadata Approaches based on metadata include
visualizing document metadata alongside a domain
ontology (Seeling and Becks, 2003), providing tools
to select passages based on annotated words (Cor-
rell et al, 2011), and using images and metadata for
visualizing related documents (Cataldi et al, 2011).
A natural solution for exploring via metadata is
faceted browsing (English et al, 2002; Hearst, 2006;
Smith et al, 2006; Yee et al, 2003), a paradigm
for filtering commonly used in e-commerce stores.
This consists of filtering based on metadata like
?brand? or ?size?, which helps summarize the con-
tent of the current document set (Ka?ki, 2005). Stud-
ies have shown improved user experiences by facil-
itating user interactions through facets (Oren et al,
2006) and faceted browsing has been used for aid-
ing search (Fujimura et al, 2006) and exploration
(Collins et al, 2009) of text corpora.
However, facets require existing structured meta-
data fields, which may be limited or unavailable. An
alternative is to use NLP to show document content.
Content Topic modeling (Blei et al, 2003), has
become very popular for corpus and document un-
derstanding. Recent research has focused on aspects
highlighted by the topic model, such as topic distri-
butions across the corpus, topic distributions across
documents, related topics and words that make up
each topic (Chaney and Blei, 2012; Eisenstein et al,
2012), or document relations through topic compo-
sitions (Chuang et al, 2012; Gardner et al, 2010).
Newer work has begun to visualize documents in
the context of their topics and their metadata, such as
topics incorporated with keywords and events (Cui
et al, 2011). Other examples include displaying
topic prevalence over time (Liu et al, 2009) or help-
ing users understand how real events shape textual
trends (Dou et al, 2011). While interfaces may be
customized for specific metadata types, e.g. the top-
ical map of National Institutes of Health funding
agencies (Talley et al, 2011), these interfaces do not
incorporate arbitrary metadata.
5
2 Combining Metadata and Topics
We present MetaToMATo (Metadata and Topic
Model Analysis Toolkit), a visualization tool that
combines both metadata and topic models in a single
faceted browsing paradigm for exploration and anal-
ysis of document collections. While previous work
has shown the value of metadata facets, we show that
topic model output complements metadata. Provid-
ing both in a single interface yields a flexible tool.
We illustrate MetaToMATo with an example
adapted from our user study. Consider Sarah, a
hypothetical intern in the New York Times archive
room who is presented with the following task.
Your boss explains that although the New
York Times metadata fields are fairly compre-
hensive, sometimes human error leads to over-
sights or missing entries. Today you?ve been
asked to keep an eye out for documents that
mention the New York Marathon but do not
include descriptors linking them to that event.
This is corpus exploration: a user is asked to dis-
cover relevant information by exploring the corpus.
We illustrate the tool with a walk-through.
Corpus Selection The corpus selection page (tool
home page) provides information about all available
corpora, and allows for corpora upload and deletion.
Sarah selects the New York Times corpus.
Corpus Overview After selecting a corpus, the
user sees the corpus overview and configuration
page. Across four tabs, the user is presented with
more detailed corpus statistics and can customize
her visualization experience. The first tab shows
general corpus information. The second allows for
editing the inferred type (date, quantity, or string)
for each metadata attribute to change filtering be-
havior, hide unhelpful attributes, and choose which
attributes to ?quick display? in the document col-
lapsed view. On the remaining two tabs, the user can
customize date display formats and manage tags.
She selects attributes ?Date? and ?Byline? for
quick display, hides ?Series Name?, and formats
?Date? to show only the date (no times).
Topics View Each topic is displayed in a box con-
taining its name (initially set to its top 3 words) and a
list of the top 10 words. Top words within a topic are
words with the highest probability of appearing in
the corpus. Each topic word is highlighted to show a
Figure 1: Topics Page A view of the first row of top-
ics, and the sorting selector at the top of the page. The
left topic is being renamed. The second topic has been
marked as junk.
normalized probability of that word within the topic.
(Figure 1) Clicking a topic box provides more infor-
mation. Users can rename topics, label unhelpful or
low-quality topics as JUNK, or sort them in terms of
frequency in the corpus,1 predicted quality,2 or junk.
Sarah renames several topics, including the topic
?{running, athletes, race}? as SPORTS and marks
the ?{share, listed, bath}? topic as JUNK.
Documents View The document view provides a
faceted browsing interface of the corpus. (Figure 2)
The pane on the right side displays the set of docu-
ments returned by the current filters (search). Each
document is summarized by the first 100 words and
any quick view metadata. Users can expand doc-
uments to see all document metadata, a graph of
the distribution of the topics in this document, and
a graph of topics distinctive to this document com-
pared to corpus-wide averages.3
Sarah begins by looking at the types of documents
in the corpus, opening and closing a few documents
as she scrolls down the page.
The facets pane on the left side of the page dis-
plays the available facets given the current filters.
Topics in a drop-down menu can be used to filter
given a threshold.
Sarah selects the value ?New York City? for the
Location attribute and a threshold of 5% for the
SPORTS topic, filtering on both facets.
Values next to each metadata facet show the num-
ber of documents in the current view with those at-
tribute values, which helps tell the user what to ex-
1Frequency is computed using topic assignments from a
Gibbs sampler (Griffiths and Steyvers, 2004).
2Topic quality is given by the entropy of its word distribu-
tion. Other options include Mimno and Blei (2011).
3The difference of the probability of a topic in the current
document and the topic overall, divided by value overall.
6
Figure 2: Left: Documents Page. The left pane shows the available facets (topics and metadata) and the right pane
shows the matching documents (collapsed view.) Right: Expanded Document. An expanded collapsed document is
replaced with this more detailed view, showing the entire document as well as metadata and topic graphs.
pect if she refines her query.
Sarah notices that the News Desk value of
?Sports? matches a large number of documents in
the current view. She adds this filter to the current
facet query, updating the document view.
At the top of the document pane are the cur-
rent view?s ?Aggregate Statistics?, which shows how
many documents match the current query. An ex-
pandable box shows graphs for the current docu-
ments topic distribution and distinctive topics.4
Looking at the topic graph for the current query,
Sarah sees that another topic with sports related
words appears with high probability. She adds it to
the search and updates the document view.
Any document can be tagged with user-created
tags. Tags and their associated documents are dis-
played in the corpus overview on the configuration
page. If a user finds a search query of interest, she
can save and name the search to return to it later.
Sarah sees many documents relevant to the New
York City Marathon. She tags documents of interest
and saves the query for later reference.
2.1 Implementation Details
Our web based tool makes it easy for users to share
results, maintain the system, and make the tool
widely available. The application is built with a
JSP front-end, a Java back-end, and a MongoDB
database for storing the corpus and associated data.
To ensure a fast UI, filters use an in-memory meta-
data and topic index. Searches are cached so incre-
mental search queries are very fast. The UI uses
4Computed as above but with more topics displayed.
Ajax and JQuery UI for dynamic loading and inter-
active elements. We easily hosted more than a dozen
corpora on a single installation.
3 Evaluation
Our primary goal was to investigate whether incor-
porating topic model output along with document
metadata into a faceted browser provided an effec-
tive mechanism for filtering documents. Participants
were presented with four tasks consisting of a ques-
tion to answer using the tool and a paragraph provid-
ing context. The first three tasks tested exploration
(find documents) while the last tested analysis (learn
about article authors). At the end of each task, the
users were directed to a survey on the tool?s useful-
ness. We also logged user actions to further evaluate
how they used the tool.
3.1 Participants and Experimental Setup
Twelve participants (3 female, 9 male) volunteered
after receiving an email from a local mailing list.
They received no compensation for their participa-
tion and they were able to complete the experiment
in their preferred environment at a convenient time
by accessing the tool online. They were provided
with a tool guide and were encouraged to familiarize
themselves with the tool before beginning the tasks;
logs suggest 8 of 12 did exploration before starting.
The study required participants to find informa-
tion from a selection of 10,000 documents from
the New York Times Annotated Corpus (Sandhaus,
2008), which contains a range of metadata.5 All
5The full list of metadata fields that we allowed users to ac-
7
documents in the corpus were published in January
of 1995 and we made no effort at deduplication.
Topics were generated using the Latent Dirichlet Al-
location (LDA) (Blei et al, 2003) implementation
in MALLET (McCallum, 2002). We used 100 top-
ics trained with 1500 Gibbs iterations and hyper-
parameter optimization.
3.2 Quantitative Results
The length of time required to complete individual
tasks ranged from 1 minute and 3 seconds to 24 min-
utes and 54 seconds (average 9 minutes.) 6
Within the scope of each task, each user initi-
ated on average 5.75 searches. The time between
searches was on average 1 minute and 53 seconds.
Of all the searches, 21.4% were new searches and
78.6% built on previous searches when users chose
to expand or narrow the scope of the search. When
users initiated new search queries, they began with
queries on topics 59.3% of the time, with queries on
metadata 37.3% of the time, and queries that used
both topics and metadata 3.4% of the time. This
lends credence to the claim that the ability to access
both metadata and topics is crucial.
We asked users to rate features in terms of their
usefulness on a Likert scale from 1 (not helpful at
all) to 5 (extremely helpful). The most preferred fea-
tures were filtering on topics (mean 4.217, median 5)
and compacted documents (mean 3.848, median 5)
The least preferred were document graphs of topic
usage (mean 1.848, median 1) and aggregate statis-
tics (mean 1.891, median 1).7 The fact that filtering
on topics was the most preferred feature validates
our approach of including topics as a facet. Addi-
tionally, topic names were critical to this success.
3.3 Surveys
Users provided qualitative feedback8 by describing
their approaches to the task, and offering sugges-
cess in the study was: online section, organization, news desk,
date, locations, series name, byline (author), people, title, fea-
ture page, and descriptors.
6These times do not include the 3 instances in which a user
felt unable to complete a task. Also omitted are 11 tasks (from
4 users) for which log files could not provide accurate times.
7Ratings are likely influenced by the specific nature of the
sample user tasks. In tasks that required seeking out metadata,
expanded document views rated higher than their average.
8The survey results presented here consist of one survey per
participant per task, with two exceptions where two participants
tions, the most common of which was an increase
in allowed query complexity, a feature we intend to
enhance. In the current version, all search terms are
combined using AND; 7 of the 12 participants made
requests for a NOT option.
Some users (6 of 12) admitted to using their
browser?s search feature to help complete the tasks.
We chose to forgo a keyword search capability in the
study-ready version of the tool because we wanted
to test the ability of topic information to provide a
way to navigate the content. Given the heavy us-
age of topic searches and the ability of users to com-
plete tasks with or without browser search, we have
demonstrated the usefulness of the topics as a win-
dow into the content. In future versions, we envision
incorporating keyword search capabilities, including
suggested topic filters for searched queries.
As users completed the tasks, their comfort with
the tool increased. One user wrote, ?After the last
task I knew exactly what to do to get my results. I
knew what information would help me find docu-
ments.? Users also began to suggest new ways that
they would like to see topics and metadata com-
bined. Task 4 led one user to say ?It would be in-
teresting to see a page on each author and what top-
ics they mostly covered.? We could provide this in a
general way by showing a page for each metadata at-
tribute that contains relevant topics and other meta-
data. We intend to implement such features.
4 Conclusion
A user evaluation of MetaToMATo, our toolkit for
visualizing text corpora that incorporates both topic
models and metadata, confirms the validity of our
approach to use topic models and metadata in a sin-
gle faceted browser. Users searched with topics a
majority of the time, but also made use of metadata.
This clearly demonstrates a reliance on both, sug-
gesting that users went back and forth as needed.
Additionally, while metadata is traditionally used for
facets, users ranked filtering by topic more highly
than metadata. This suggests a new direction in
which advances in topic models can be used to aid
corpus exploration.
each failed to record one of their four surveys.
8
References
David M. Blei, Andrew Y. Ng, and Michael I. Jordan.
2003. Latent dirichlet alocation. J. Mach. Learn.
Res., 3:993?1022, March.
M. Cataldi, L. Di Caro, and C. Schifanella. 2011. Im-
mex: Immersive text documents exploration system.
In Content-Based Multimedia Indexing (CBMI), 2011
9th International Workshop on, pages 1?6. IEEE.
A.J.B. Chaney and D.M. Blei. 2012. Visualizing topic
models. In AAAI.
J. Chuang, C.D. Manning, and J. Heer. 2012. Ter-
mite: visualization techniques for assessing textual
topic models. In Proceedings of the International
Working Conference on Advanced Visual Interfaces,
pages 74?77. ACM.
Christopher Collins, Fernanda B. Vie?gas, and Martin
Wattenberg. 2009. Parallel tag clouds to explore and
analyze faceted text corpora. In Proc. of the IEEE
Symp. on Visual Analytics Science and Technology
(VAST).
M. Correll, M. Witmore, and M. Gleicher. 2011. Explor-
ing collections of tagged text for literary scholarship.
Computer Graphics Forum, 30(3):731?740.
W. Cui, S. Liu, L. Tan, C. Shi, Y. Song, Z. Gao, H. Qu,
and X. Tong. 2011. Textflow: Towards better un-
derstanding of evolving topics in text. Visualiza-
tion and Computer Graphics, IEEE Transactions on,
17(12):2412?2421.
W. Dou, X. Wang, R. Chang, and W. Ribarsky. 2011.
Paralleltopics: A probabilistic approach to exploring
document collections. In Visual Analytics Science and
Technology (VAST), 2011 IEEE Conference on, pages
231?240. IEEE.
Jacob Eisenstein, Duen Horng ?Polo? Chau, Aniket Kit-
tur, and Eric P. Xing. 2012. Topicviz: Interactive topic
exploration in document collections. In CHI.
Jennifer English, Marti Hearst, Rashmi Sinha, Kirsten
Swearingen, and Ka-Ping Yee. 2002. Flexible search
and navigation using faceted metadata. In ACM SIGIR
Conference on Information Retrieval (SIGIR).
Ko Fujimura, Hiroyuki Toda, Takafumi Inoue, Nobuaki
Hiroshima, Ryoji Kataoka, and Masayuki Sugizaki.
2006. Blogranger - a multi-faceted blog search engine.
In World Wide Web (WWW).
Matthew J. Gardner, Joshua Lutes, Jeff Lund, Josh
Hansen, Dan Walker, Eric Ringger, and Kevin Seppi.
2010. The topic browser: An interactive tool for
browsing topic models. In NIPS Workshop on Chal-
lenges of Data Visualization.
T.L. Griffiths and M. Steyvers. 2004. Finding scien-
tific topics. Proceedings of the National Academy of
Sciences of the United States of America, 101(Suppl
1):5228?5235.
Marti Hearst. 2006. Clustering versus faceted categories
for information exploration. Communications of the
ACM, 49(4).
Mika Ka?ki. 2005. Findex: search result categories help
users when document ranking fails. In Proceedings of
the SIGCHI Conference on Human Factors in Com-
puting Systems, CHI ?05, pages 131?140, New York,
NY, USA. ACM.
S. Liu, M.X. Zhou, S. Pan, W. Qian, W. Cai, and X. Lian.
2009. Interactive, topic-based visual text summariza-
tion and analysis. In Proceedings of the 18th ACM
conference on Information and knowledge manage-
ment, pages 543?552. ACM.
G. Marchionini. 2006. Exploratory search: from find-
ing to understanding. Communications of the ACM,
49(4):41?46.
Andrew Kachites McCallum. 2002. Mal-
let: A machine learning for language toolkit.
http://mallet.cs.umass.edu.
D. Mimno and D. Blei. 2011. Bayesian checking for
topic models. In Proceedings of the Conference on
Empirical Methods in Natural Language Processing,
pages 227?237. Association for Computational Lin-
guistics.
Eyal Oren, Renaud Delbru, and Stefan Decker. 2006.
Extending faceted navigation for rdf data. In Interna-
tional Semantic Web Conference (ISWC).
Evan Sandhaus. 2008. The new york times annotated
corpus.
Christian Seeling and Andreas Becks. 2003. Exploit-
ing metadata for ontology-based visual exploration of
weakly structured text documents. In Proceedings of
the 7th International Conference on Information Visu-
alisation (IV03, pages 0?7695. IEEE Press, ISBN.
Greg Smith, Mary Czerwinski, Brian Meyers, Daniel
Robbins, George Robertson, and Desney S. Tan. 2006.
FacetMap: A Scalable Search and Browse Visualiza-
tion. IEEE Transactions on Visualization and Com-
puter Graphics, 12(5):797?804.
E.M. Talley, D. Newman, D. Mimno, B.W. Herr II,
H.M. Wallach, G.A.P.C. Burns, A.G.M. Leenders, and
A. McCallum. 2011. Database of nih grants using
machine-learned categories and graphical clustering.
Nature Methods, 8(6):443?444.
Ping Yee, Kirsten Swearingen, Kevin Li, and Marti
Hearst. 2003. Faceted metadata for image search and
browsing. In Computer-Human Interaction (CHI).
9
Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 63?68,
Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational Linguistics
PARMA: A Predicate Argument Aligner
Travis Wolfe, Benjamin Van Durme, Mark Dredze, Nicholas Andrews,
Charley Beller, Chris Callison-Burch, Jay DeYoung, Justin Snyder,
Jonathan Weese, Tan Xu?, and Xuchen Yao
Human Language Technology Center of Excellence
Johns Hopkins University, Baltimore, Maryland USA
?University of Maryland, College Park, Maryland USA
Abstract
We introduce PARMA, a system for cross-
document, semantic predicate and argu-
ment alignment. Our system combines a
number of linguistic resources familiar to
researchers in areas such as recognizing
textual entailment and question answering,
integrating them into a simple discrimina-
tive model. PARMA achieves state of the
art results on an existing and a new dataset.
We suggest that previous efforts have fo-
cussed on data that is biased and too easy,
and we provide a more difficult dataset
based on translation data with a low base-
line which we beat by 17% F1.
1 Introduction
A key step of the information extraction pipeline
is entity disambiguation, in which discovered en-
tities across many sentences and documents must
be organized to represent real world entities. The
NLP community has a long history of entity dis-
ambiguation both within and across documents.
While most information extraction work focuses
on entities and noun phrases, there have been a
few attempts at predicate, or event, disambigua-
tion. Commonly a situational predicate is taken to
correspond to either an event or a state, lexically
realized in verbs such as ?elect? or nominaliza-
tions such as ?election?. Similar to entity coref-
erence resolution, almost all of this work assumes
unanchored mentions: predicate argument tuples
are grouped together based on coreferent events.
The first work on event coreference dates back to
Bagga and Baldwin (1999). More recently, this
task has been considered by Bejan and Harabagiu
(2010) and Lee et al (2012). As with unanchored
entity disambiguation, these methods rely on clus-
tering methods and evaluation metrics.
Another view of predicate disambiguation seeks
to link or align predicate argument tuples to an ex-
isting anchored resource containing references to
events or actions, similar to anchored entity dis-
ambiguation (entity linking) (Dredze et al, 2010;
Han and Sun, 2011). The most relevant, and per-
haps only, work in this area is that of Roth and
Frank (2012) who linked predicates across docu-
ment pairs, measuring the F1 of aligned pairs.
Here we present PARMA, a new system for pred-
icate argument alignment. As opposed to Roth and
Frank, PARMA is designed as a a trainable plat-
form for the incorporation of the sort of lexical se-
mantic resources used in the related areas of Rec-
ognizing Textual Entailment (RTE) and Question
Answering (QA). We demonstrate the effective-
ness of this approach by achieving state of the art
performance on the data of Roth and Frank despite
having little relevant training data. We then show
that while the ?lemma match? heuristic provides a
strong baseline on this data, this appears to be an
artifact of their data creation process (which was
heavily reliant on word overlap). In response, we
evaluate on a new and more challenging dataset for
predicate argument alignment derived from multi-
ple translation data. We release PARMA as a new
framework for the incorporation and evaluation of
new resources for predicate argument alignment.1
2 PARMA
PARMA (Predicate ARguMent Aligner) is a
pipelined system with a wide variety of features
used to align predicates and arguments in two doc-
uments. Predicates are represented as mention
spans and arguments are represented as corefer-
ence chains (sets of mention spans) provided by
in-document coreference resolution systems such
as included in the Stanford NLP toolkit. Results
indicated that the chains are of sufficient quality
so as not to limit performance, though future work
1https://github.com/hltcoe/parma
63
RF
? Australian [police]1 have [arrested]2 a man in the western city of Perth over an alleged [plot]3 to [bomb]4 Israeli diplomatic
[buildings]5 in the country , police and the suspect s [lawyer]6 [said]7
? Federal [police]1 have [arrested]2 a man over an [alleged]5 [plan]3 to [bomb]4 Israeli diplomatic [posts]8 in Australia , the
suspect s [attorney]6 [said]7 Tuesday
LDC MTC
? As I [walked]1 to the [veranda]2 side , I [saw]2 that a [tent]3 is being decorated for [Mahfil-e-Naat]4 -LRB- A [get-together]5
in which the poetic lines in praise of Prophet Mohammad are recited -RRB-
? I [came]1 towards the [balcony]2 , and while walking over there I [saw]2 that a [camp]3 was set up outside for the [Naatia]4
[meeting]5 .
Figure 1: Example of gold-standard alignment pairs from Roth and Frank?s data set and our data set
created from the LDC?s Multiple Translation Corpora. The RF data set exhibits high lexical overlap,
where most of the alignments are between identical words like police-police and said-said. The LDC
MTC was constructed to increase lexical diversity, leading to more challenging alignments like veranda-
balcony and tent-camp
may relax this assumption.
We refer to a predicate or an argument as an
?item? with type predicate or argument. An align-
ment between two documents is a subset of all
pairs of items in either documents with the same
type.2 We call the two documents being aligned
the source document S and the target document
T . Items are referred to by their index, and ai,j is a
binary variable representing an alignment between
item i in S and item j in T . A full alignment is an
assignment ~a = {aij : i ? NS , j ? NT }, where
NS and NT are the set of item indices for S and T
respectively.
We train a logistic regression model on exam-
ple alignmentsand maximize the likelihood of a
document alignment under the assumption that the
item alignments are independent. Our objective
is to maximize the log-likelihood of all p(S, T )
with an L1 regularizer (with parameter ?). After
learning model parameters w by regularized max-
imum likelihood on training data, we introducing
a threshold ? on alignment probabilities to get a
classifier. We perform line search on ? and choose
the value that maximizes F1 on dev data. Train-
ing was done using the Mallet toolkit (McCallum,
2002).
2.1 Features
The focus of PARMA is the integration of a diverse
range of features based on existing lexical seman-
tic resources. We built PARMA on a supervised
framework to take advantage of this wide variety
of features since they can describe many different
correlated aspects of generation. The following
features cover the spectrum from high-precision
2Note that type is not the same thing as part of speech: we
allow nominal predicates like ?death?.
to high-recall. Each feature has access to the pro-
posed argument or predicate spans to be linked and
the containing sentences as context. While we use
supervised learning, some of the existing datasets
for this task are very small. For extra training data,
we pool material from different datasets and use
the multi-domain split feature space approach to
learn dataset specific behaviors (Daume?, 2007).
Features in general are defined over mention
spans or head tokens, but we split these features
to create separate feature-spaces for predicates and
arguments.3
For argument coref chains we heuristically
choose a canonical mention to represent each
chain, and some features only look at this canon-
ical mention. The canonical mention is cho-
sen based on length,4 information about the head
word,5 and position in the document.6 In most
cases, coref chains that are longer than one are
proper nouns and the canonical mention is the first
and longest mention (outranking pronominal ref-
erences and other name shortenings).
PPDB We use lexical features from the Para-
phrase Database (PPDB) (Ganitkevitch et al,
2013). PPDB is a large set of paraphrases ex-
tracted from bilingual corpora using pivoting tech-
niques. We make use of the English lexical portion
which contains over 7 million rules for rewriting
terms like ?planet? and ?earth?. PPDB offers a
variety of conditional probabilities for each (syn-
chronous context free grammar) rule, which we
3While conceptually cleaner, In practice we found this
splitting to have no impact on performance.
4in tokens, not counting some words like determiners and
auxiliary verbs
5like its part of speech tag and whether the it was tagged
as a named entity
6mentions that appear earlier in the document and earlier
in a given sentence are given preference
64
treat as independent experts. For each of these rule
probabilities (experts), we find all rules that match
the head tokens of a given alignment and have a
feature for the max and harmonic mean of the log
probabilities of the resulting rule set.
FrameNet FrameNet is a lexical database based
on Charles Fillmore?s Frame Semantics (Fill-
more, 1976; Baker et al, 1998). The database
(and the theory) is organized around seman-
tic frames that can be thought of as descrip-
tions of events. Frames crucially include spec-
ification of the participants, or Frame Elements,
in the event. The Destroying frame, for in-
stance, includes frame elements Destroyer or
Cause Undergoer. Frames are related to other
frames through inheritance and perspectivization.
For instance the frames Commerce buy and
Commerce sell (with respective lexical real-
izations ?buy? and ?sell?) are both perspectives of
Commerce goods-transfer (no lexical re-
alizations) which inherits from Transfer (with
lexical realization ?transfer?).
We compute a shortest path between headwords
given edges (hypernym, hyponym, perspectivized
parent and child) in FrameNet and bucket by dis-
tance to get features. We also have a binary feature
for whether two tokens evoke the same frame.
TED Alignments Given two predicates or argu-
ments in two sentences, we attempt to align the
two sentences they appear in using a Tree Edit
Distance (TED) model that aligns two dependency
trees, based on the work described by (Yao et al,
2013). We represent a node in a dependency tree
with three fields: lemma, POS tag and the type
of dependency relation to the node?s parent. The
TED model aligns one tree with the other using
the dynamic programming algorithm of Zhang and
Shasha (1989) with three predefined edits: dele-
tion, insertion and substitution, seeking a solution
yielding the minimum edit cost. Once we have
built a tree alignment, we extract features for 1)
whether the heads of the two phrases are aligned
and 2) the count of how many tokens are aligned
in both trees.
WordNet WordNet (Miller, 1995) is a database
of information (synonyms, hypernyms, etc.) per-
taining to words and short phrases. For each entry,
WordNet provides a set of synonyms, hypernyms,
etc. Given two spans, we use WordNet to deter-
mine semantic similarity by measuring how many
synonym (or other) edges are needed to link two
terms. Similar words will have a short distance.
For features, we find the shortest path linking the
head words of two mentions using synonym, hy-
pernym, hyponym, meronym, and holonym edges
and bucket the length.
String Transducer To represent similarity be-
tween arguments that are names, we use a stochas-
tic edit distance model. This stochastic string-to-
string transducer has latent ?edit? and ?no edit?
regions where the latent regions allow the model
to assign high probability to contiguous regions of
edits (or no edits), which are typical between vari-
ations of person names. In an edit region, param-
eters govern the relative probability of insertion,
deletion, substitution, and copy operations. We
use the transducer model of Andrews et al (2012).
Since in-domain name pairs were not available, we
picked 10,000 entities at random from Wikipedia
to estimate the transducer parameters. The entity
labels were used as weak supervision during EM,
as in Andrews et al (2012).
For a pair of mention spans, we compute the
conditional log-likelihood of the two mentions go-
ing both ways, take the max, and then bucket to get
binary features. We duplicate these features with
copies that only fire if both mentions are tagged as
PER, ORG or LOC.
3 Evaluation
We consider three datasets for evaluating PARMA.
For richer annotations that include lemmatiza-
tions, part of speech, NER, and in-doc corefer-
ence, we pre-processed each of the datasets using
tools7 similar to those used to create the Annotated
Gigaword corpus (Napoles et al, 2012).
Extended Event Coreference Bank Based on
the dataset of Bejan and Harabagiu (2010), Lee et
al. (2012) introduced the Extended Event Coref-
erence Bank (EECB) to evaluate cross-document
event coreference. EECB provides document clus-
ters, within which entities and events may corefer.
Our task is different from Lee et al but we can
modify the corpus setup to support our task. To
produce source and target document pairs, we se-
lect the first document within every cluster as the
source and each of the remaining documents as
target documents (i.e. N ? 1 pairs for a cluster
of size N ). This yielded 437 document pairs.
Roth and Frank The only existing dataset for
our task is from Roth and Frank (2012) (RF), who
7https://github.com/cnap/anno-pipeline
65
annotated documents from the English Gigaword
Fifth Edition corpus (Parker et al, 2011). The data
was generated by clustering similar news stories
from Gigaword using TF-IDF cosine similarity of
their headlines. This corpus is small, containing
only 10 document pairs in the development set and
60 in the test set. To increase the training size,
we train PARMA with 150 randomly selected doc-
ument pairs from both EECB and MTC, and the
entire dev set from Roth and Frank using multi-
domain feature splitting. We tuned the threshold
? on the Roth and Frank dev set, but choose the
regularizer ? based on a grid search on a 5-fold
version of the EECB dataset.
Multiple Translation Corpora We constructed
a new predicate argument alignment dataset
based on the LDC Multiple Translation Corpora
(MTC),8 which consist of multiple English trans-
lations for foreign news articles. Since these mul-
tiple translations are semantically equivalent, they
provide a good resource for aligned predicate ar-
gument pairs. However, finding good pairs is a
challenge: we want pairs with significant overlap
so that they have predicates and arguments that
align, but not documents that are trivial rewrites
of each other. Roth and Frank selected document
pairs based on clustering, meaning that the pairs
had high lexical overlap, often resulting in mini-
mal rewrites of each other. As a result, despite ig-
noring all context, their baseline method (lemma-
alignment) worked quite well.
To create a more challenging dataset, we se-
lected document pairs from the multiple transla-
tions that minimize the lexical overlap (in En-
glish). Because these are translations, we know
that there are equivalent predicates and arguments
in each pair, and that any lexical variation pre-
serves meaning. Therefore, we can select pairs
with minimal lexical overlap in order to create
a system that truly stresses lexically-based align-
ment systems.
Each document pair has a correspondence be-
tween sentences, and we run GIZA++ on these
sentences to produce token-level alignments. We
take all aligned nouns as arguments and all aligned
verbs (excluding be-verbs, light verbs, and report-
ing verbs) as predicates. We then add negative ex-
amples by randomly substituting half of the sen-
tences in one document with sentences from an-
8LDC2010T10, LDC2010T11, LDC2010T12,
LDC2010T14, LDC2010T17, LDC2010T23, LDC2002T01,
LDC2003T18, and LDC2005T05
0.3 0.4 0.5 0.6 0.7 0.8
0.0
0.2
0.4
0.6
0.8
1.0
Performance vs Lexical Overlap
Doc-pair Cosine Similarity
F1
Figure 2: We plotted the PARMA?s performance on
each of the document pairs. Red squares show the
F1 for individual document pairs drawn from Roth
and Frank?s data set, and black circles show F1 for
our Multiple Translation Corpora test set. The x-
axis represents the cosine similarity between the
document pairs. On the RF data set, performance
is correlated with lexical similarity. On our more
lexically diverse set, this is not the case. This
could be due to the fact that some of the docu-
ments in the RF sets are minor re-writes of the
same newswire story, making them easy to align.
other corpus, guaranteed to be unrelated. The
amount of substitutions we perform can vary the
?relatedness? of the two documents in terms of
the predicates and arguments that they talk about.
This reflects our expectation of real world data,
where we do not expect perfect overlap in predi-
cates and arguments between a source and target
document, as you would in translation data.
Lastly, we prune any document pairs that have
more than 80 predicates or arguments or have a
Jaccard index on bags of lemmas greater than 0.5,
to give us a dataset of 328 document pairs.
Metric We use precision, recall, and F1. For the
RF dataset, we follow Roth and Frank (2012) and
Cohn et al (2008) and evaluate on a version of F1
that considers SURE and POSSIBLE links, which
are available in the RF data. Given an alignment
to be scored A and a reference alignment B which
contains SURE and POSSIBLE links, Bs andBp re-
spectively, precision and recall are:
P = |A ?Bp||A| R =
|A ?Bs|
|Bs|
(1)
66
F1 P R
EECB lemma 63.5 84.8 50.8
PARMA 74.3 80.5 69.0
RF lemma 48.3 40.3 60.3
Roth and Frank 54.8 59.7 50.7
PARMA 57.6 52.4 64.0
MTC lemma 42.1 51.3 35.7
PARMA 59.2 73.4 49.6
Table 1: PARMA outperforms the baseline lemma
matching system on the three test sets, drawn from
the Extended Event Coreference Bank, Roth and
Frank?s data, and our set created from the Multiple
Translation Corpora. PARMA achieves a higher F1
and recall score than Roth and Frank?s reported
result.
and F1 as the harmonic mean of the two. Results
for EECB and MTC reflect 5-fold cross validation,
and RF uses the given dev/test split.
Lemma baseline Following Roth and Frank we
include a lemma baseline, in which two predicates
or arguments align if they have the same lemma.9
4 Results
On every dataset PARMA significantly improves
over the lemma baselines (Table 1). On RF,
compared to Roth and Frank, the best published
method for this task, we also improve, making
PARMA the state of the art system for this task.
Furthermore, we expect that the smallest improve-
ments over Roth and Frank would be on RF, since
there is little training data. We also note that com-
pared to Roth and Frank we obtain much higher
recall but lower precision.
We also observe that MTC was more challeng-
ing than the other datasets, with a lower lemma
baseline. Figure 2 shows the correlation between
document similarity and document F1 score for
RF and MTC. While for RF these two measures
are correlated, they are uncorrelated for MTC. Ad-
ditionally, there is more data in the MTC dataset
which has low cosine similarity than in RF.
5 Conclusion
PARMA achieves state of the art performance on
three datasets for predicate argument alignment.
It builds on the development of lexical semantic
resources and provides a platform for learning to
utilize these resources. Additionally, we show that
9We could not reproduce lemma from Roth and Frank
(shown in Table 1) due to a difference in lemmatizers. We ob-
tained 55.4; better than their system but worse than PARMA.
task difficulty can be strongly tied to lexical simi-
larity if the evaluation dataset is not chosen care-
fully, and this provides an artificially high baseline
in previous work. PARMA is robust to drops in lex-
ical similarity and shows large improvements in
those cases. PARMA will serve as a useful bench-
mark in determining the value of more sophis-
ticated models of predicate-argument alignment,
which we aim to address in future work.
While our system is fully supervised, and thus
dependent on manually annotated examples, we
observed here that this requirement may be rela-
tively modest, especially for in-domain data.
Acknowledgements
We thank JHU HLTCOE for hosting the winter
MiniSCALE workshop that led to this collabora-
tive work. This material is based on research spon-
sored by the NSF under grant IIS-1249516 and
DARPA under agreement number FA8750-13-2-
0017 (the DEFT program). The U.S. Government
is authorized to reproduce and distribute reprints
for Governmental purposes. The views and con-
clusions contained in this publication are those of
the authors and should not be interpreted as repre-
senting official policies or endorsements of NSF,
DARPA, or the U.S. Government.
References
Nicholas Andrews, Jason Eisner, and Mark Dredze.
2012. Name phylogeny: A generative model of
string variation. In Empirical Methods in Natural
Language Processing (EMNLP).
Amit Bagga and Breck Baldwin. 1999. Cross-
document event coreference: Annotations, exper-
iments, and observations. In Proceedings of the
Workshop on Coreference and its Applications,
pages 1?8. Association for Computational Linguis-
tics.
Collin F. Baker, Charles J. Fillmore, and John B. Lowe.
1998. The berkeley framenet project. In Proceed-
ings of the 36th Annual Meeting of the Associa-
tion for Computational Linguistics and 17th Inter-
national Conference on Computational Linguistics -
Volume 1, ACL ?98, pages 86?90, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Cosmin Adrian Bejan and Sanda Harabagiu. 2010.
Unsupervised event coreference resolution with rich
linguistic features. In Proceedings of the 48th An-
nual Meeting of the Association for Computational
Linguistics, ACL ?10, pages 1412?1422, Strouds-
burg, PA, USA. Association for Computational Lin-
guistics.
67
Trevor Cohn, Chris Callison-Burch, and Mirella Lap-
ata. 2008. Constructing corpora for the develop-
ment and evaluation of paraphrase systems. Com-
put. Linguist., 34(4):597?614, December.
Hal Daume?. 2007. Frustratingly easy domain adap-
tation. In Annual meeting-association for computa-
tional linguistics, volume 45, page 256.
Mark Dredze, Paul McNamee, Delip Rao, Adam Ger-
ber, and Tim Finin. 2010. Entity disambiguation
for knowledge base population. In Conference on
Computational Linguistics (Coling).
Charles J. Fillmore. 1976. Frame semantics and
the nature of language. Annals of the New York
Academy of Sciences: Conference on the Origin and
Development of Language and Speech, 280(1):20?
32.
Juri Ganitkevitch, Benjamin Van Durme, and Chris
Callison-Burch. 2013. Ppdb: The paraphrase
database. In North American Chapter of the Asso-
ciation for Computational Linguistics (NAACL).
Xianpei Han and Le Sun. 2011. A generative entity-
mention model for linking entities with knowledge
base. In Proceedings of the 49th Annual Meeting of
the Association for Computational Linguistics: Hu-
man Language Technologies-Volume 1, pages 945?
954. Association for Computational Linguistics.
Heeyoung Lee, Marta Recasens, Angel Chang, Mihai
Surdeanu, and Dan Jurafsky. 2012. Joint entity and
event coreference resolution across documents. In
Proceedings of the Conference on Empirical Meth-
ods in Natural Language Processing and Com-
putational Natural Language Learning (EMNLP-
CoNLL).
Andrew Kachites McCallum. 2002. Mal-
let: A machine learning for language toolkit.
http://www.cs.umass.edu/ mccallum/mallet.
George A Miller. 1995. Wordnet: a lexical
database for english. Communications of the ACM,
38(11):39?41.
Courtney Napoles, Matthew Gormley, and Benjamin
Van Durme. 2012. Annotated gigaword. In AKBC-
WEKEX Workshop at NAACL 2012, June.
Robert Parker, David Graff, Jumbo Kong, Ke Chen,
and Kazuaki Maeda. 2011. English gigaword fifth
edition.
Michael Roth and Anette Frank. 2012. Aligning predi-
cate argument structures in monolingual comparable
texts: A new corpus for a new task. In *SEM 2012:
The First Joint Conference on Lexical and Compu-
tational Semantics ? Volume 1: Proceedings of the
main conference and the shared task, and Volume 2:
Proceedings of the Sixth International Workshop on
Semantic Evaluation (SemEval 2012), pages 218?
227, Montre?al, Canada, 7-8 June. Association for
Computational Linguistics.
Xuchen Yao, Benjamin Van Durme, Peter Clark, and
Chris Callison-Burch. 2013. Answer extraction as
sequence tagging with tree edit distance. In North
American Chapter of the Association for Computa-
tional Linguistics (NAACL).
K. Zhang and D. Shasha. 1989. Simple fast algorithms
for the editing distance between trees and related
problems. SIAM J. Comput., 18(6):1245?1262, De-
cember.
68
