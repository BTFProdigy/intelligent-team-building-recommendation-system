Proceedings of the 22nd International Conference on Computational Linguistics (Coling 2008), pages 129?136
Manchester, August 2008
Latent Morpho-Semantic Analysis: 
Multilingual Information Retrieval with Character N-Grams  
and Mutual Information 
 
Peter A. Chew, Brett W. Bader 
Sandia National Laboratories 
P. O. Box 5800 
Albuquerque, NM 87185, USA 
{pchew,bwbader}@sandia.gov 
Ahmed Abdelali 
New Mexico State University 
P.O. Box 30002, Mail Stop 3CRL 
Las Cruces, NM 88003-8001, USA 
ahmed@crl.nmsu.edu 
 
Abstract 
We describe an entirely statistics-based, 
unsupervised, and language-
independent approach to multilingual 
information retrieval, which we call La-
tent Morpho-Semantic Analysis 
(LMSA). LMSA overcomes some of the 
shortcomings of related previous ap-
proaches such as Latent Semantic 
Analysis (LSA). LMSA has an impor-
tant theoretical advantage over LSA: it 
combines well-known techniques in a 
novel way to break the terms of LSA 
down into units which correspond more 
closely to morphemes. Thus, it has a 
particular appeal for use with morpho-
logically complex languages such as 
Arabic. We show through empirical re-
sults that the theoretical advantages of 
LMSA can translate into significant 
gains in precision in multilingual infor-
mation retrieval tests. These gains are 
not matched either when a standard 
stemmer is used with LSA, or when 
terms are indiscriminately broken down 
into n-grams. 
1 Introduction 
As the linguistic diversity of textual resources 
increases, and need for access to those resources 
grows, there is also greater demand for efficient 
 
? 2008. Licensed under the Creative Commons Attribution-
Noncommercial-Share Alike 3.0 Unported license 
(http://creativecommons.org/licenses/by-nc-sa/3.0/). Some 
rights reserved. 
information retrieval (IR) methods which are 
truly language-independent. In the ideal but pos-
sibly unattainable case, an IR algorithm would 
produce equally reliable results for any language 
pair: for example, a query in English would re-
trieve equally good results in Arabic as in 
French. 
A number of developments in recent years 
have brought that goal more within reach. One of 
the factors that severely hampered early attempts 
at machine translation, for example, was the lack 
of available computing power. However, 
Moore?s Law, the driving force of change in 
computing since then, has opened the way for 
recent progress in the field, such as Statistical 
Machine Translation (SMT) (Koehn et al 2003). 
Even more closely related to the topic of the pre-
sent paper, implementations of the Singular 
Value Decomposition (SVD) (which is at the 
heart of LSA), and related algorithms such as 
PARAFAC2 (Harshman 1972), have become 
both more widely available and more powerful. 
SVD, for example, is available in both commer-
cial off-the-shelf packages and at least one open-
source implementation designed to run on a par-
allel cluster (Heroux et  al. 2005). 
Despite these advances, there are (as yet) not 
fully surmounted obstacles to working with cer-
tain language pairs, particularly when the lan-
guages are not closely related. This is 
demonstrated in Chew and Abdelali (2008). At 
least in part, this has to do with the lexical statis-
tics of the languages concerned. For example, 
because Arabic has a much richer morphological 
structure than English and French (meaning is 
varied through the addition of prefixes and suf-
fixes rather than separate terms such as parti-
cles), it has a considerably higher type-to-token 
129
ratio. Exactly this type of language-specific sta-
tistical variation seems to lead to difficulties for 
statistics-based techniques such as LSA, as evi-
denced by lower cross-language information re-
trieval (CLIR) precision for Arabic/English than 
for French/English (Chew and Abdelali 2008). 
In this paper, we present a strategy for over-
coming these difficulties. In section 2, we outline 
the basic problem and the thinking behind our 
approach: that breaking words down into mor-
phemes, or at least morphologically significant 
subconstituents, should enable greater inter-
language comparability. This in turn should in 
theory lead to improved CLIR results. Several 
alternatives for achieving this are considered in 
section 3. One of these, a novel combination of 
mutual-information-based morphological tokeni-
zation (a step beyond simple n-gram tokeniza-
tion) and SVD, is what we call LMSA. Section 4 
discusses the framework for testing our intui-
tions, and the results of these tests are presented 
and discussed in section 5. Finally, we draw 
some conclusions and outline possible directions 
for future research in section 6. 
2 The problem 
In many approaches to IR, the underlying 
method is to represent a corpus as a term-by-
document matrix in which each row corresponds 
to a unique term2, and each column to a docu-
ment in the corpus. The standard LSA frame-
work (Deerwester et al 1990) is no different, 
except that the (sparse) term-by-document matrix 
X is subjected to SVD,  
 
X = USVT (1) 
 
where U is a smaller but dense term-by-concept 
matrix, S is a diagonal matrix of singular values, 
and V is a dense document-by-concept matrix for 
the documents used in training. Effectively, U 
and V respectively map the terms and documents 
to a single set of arbitrary concepts, such that 
semantically related terms or documents (as de-
termined by patterns of co-occurrence) will tend 
to be similar; similarity is usually measured by 
taking the cosine between two (term or docu-
ment) vectors. New documents can also be pro-
jected into the LSA ?semantic space? by 
multiplying their document vectors (formed in 
exactly the same way as the columns for X) by 
 
2 Pragmatically, terms can be defined very straightforwardly 
in the regular expressions language as sequences of charac-
ters delimited by non-word characters. 
the product US-1, to yield document-by-concept 
vectors. LSA is a completely unsupervised ap-
proach to IR in that associations between terms 
simply fall out when SVD is applied to the data. 
With cross-language or multilingual LSA, the 
approach differs little from that just outlined. The 
only required modification is in the training data: 
the term-by-document matrix must be formed 
from a parallel corpus, in which each document 
is the combination of text from the parallel lan-
guages (as described in Berry et al 1994). 
Clearly, this IR model cannot be deployed to any 
languages not in the parallel corpus used for 
training SVD. However, recent work (Chew et 
al. 2007) shows not only that there is no limit (at 
least up to a certain point) to the number of lan-
guages that can be processed in parallel, but that 
precision actually increases for given language 
pairs as more other languages are included. In 
practice, the factors which limit the addition of 
parallel languages are likely to be computational 
power and the availability of parallel aligned 
text. As noted in section 1, the first of these is 
less and less of an issue; and regarding the sec-
ond, parallel corpora (which are the mainstay of 
many current approaches to computational lin-
guistics and IR, particularly in real-world appli-
cations) are becoming increasingly available. 
Substantially all of the Bible, in particular, is al-
ready electronically available in at least 40-50 
languages from diverse language families (Biola 
University 2005-2006). 
Yet, there are clearly variations in how well 
CLIR works. In previous results (Chew et al 
2007, Chew and Abdelali 2008) it is noticeable 
in particular that the results for Arabic and Rus-
sian (the two most morphologically complex 
languages for which they present results) are 
consistently poorer than they are for other lan-
guages. To our knowledge, no solution for this 
has been proposed and validated. Ideally, a solu-
tion would both make sense theoretically (or lin-
guistically) and be statistics-based rather than 
rule-based, consistent with the general frame-
work of LSA and other recent developments in 
the field, such as SMT, and avoiding the need to 
build a separate grammar for every new language 
? an expensive undertaking. 
Translation Types Tokens Ratio 
English (KJV) 12,335 789,744 1.56% 
French (Darby) 20,428 812,947 2.51% 
Spanish (RV 1909) 28,456 704,004 4.04% 
Russian (Syn 1876) 47,226 560,524 8.43% 
Arabic (S. Van Dyke) 55,300 440,435 12.56% 
Table 1. Lexical statistics in a parallel corpus 
130
To begin to assess the problem, one can com-
pare the lexical statistics for the Bible from 
Chew et al (2007), which should be directly 
comparable since they are from a parallel corpus. 
These are arranged in Table 1 in order of type-to-
token ratio. 
This ordering also corresponds to the ordering 
of languages on a scale from ?analytic? to ?syn-
thetic?: meaning is shaped in the former by the 
use of particles and word order, and in the latter 
by inflection and suffixation. Some examples 
illustrating differences between Russian and 
English in this respect are given in Table 2. 
English I read you read they read 
Russian KLMNO KLMNPQR KLMNOM 
Table 2. Analytic versus synthetic languages 
 
The element in Russian, of course, which cor-
responds to ?read? is the stem ?KLMN?, but this is 
embedded within a larger term. Hence, in all 
three examples, Russian takes one term to ex-
press what in English takes two terms. The same 
occurs (although to a lesser extent) in English, in 
which ?read? and ?reads? are treated as distinct 
terms. Without any further context (such as sen-
tences in which these terms are instantiated), the 
similarity in meaning between ?read? and ?reads? 
will be readily apparent to any linguist, simply 
because of the shared orthography and morphol-
ogy. But for an approach like standard LSA in 
which terms are defined simply as distinct enti-
ties delimited by non-word characters, the mor-
phology is considered immaterial ? it is invisible. 
The only way a standard term-based approach 
can detect any similarity between ?read? and 
?reads? is through the associations of terms in 
documents. Clearly, then, such an approach op-
erates under a handicap. 
Two unfortunate consequences will inevitably 
result from this. First, some terms will be treated 
as out-of-vocabulary even when at least some of 
the semantics could perhaps have been derived 
from a part of the term. For example, if the train-
ing corpus contains ?read? and ?reads? but not 
?reading?, valuable information is lost every time 
?reading? is encountered in a new document to 
which LSA might be deployed. Secondly, asso-
ciations that should be made between in-
vocabulary terms will also be missed. Perhaps a 
reason that more attention has not been devoted 
to this is that the problem can largely be disre-
garded in highly analytic languages like English. 
But, as previous results such as Chew and Abde-
lali?s (2008) show, for a language like Arabic, 
the adverse consequences of a morphology-blind 
approach are more severe. The question then is: 
how can information which is clearly available in 
the training corpus be more fully leveraged with-
out sacrificing efficiency? 
3 Possible solutions 
3.1 Replacing terms with n-grams 
At first glance, one might think that stemming 
would be an answer. Stemming has been shown 
to improve IR, in particular for morphologically 
complex languages (recent examples, including 
with Arabic, are Lavie et al 2004 and Abdou et 
al. 2005). We are not aware, however, of any 
previous results that show unequivocally that 
stemming is beneficial specifically in CLIR. 
Chew and Abdelali (2008) examine the use of a 
light stemmer for Arabic (Darwish 2002), and 
while this does result in a small overall increase 
in overall precision, there is paradoxically no 
increase for Arabic. The problem may be that the 
approach for Arabic needs to be matched by a 
similar approach for other languages in the paral-
lel corpus. However, since stemmers are usually 
tailored to particular languages ? and may even 
be unavailable for some languages ? use of exist-
ing stemmers may not always be an option. 
Another more obviously language-
independent approach is to replace terms with 
character n-grams3. This is feasible for more or 
less any language, regardless of script. Moreover, 
implementation of a similar idea is described in 
McNamee and Mayfield (2004) and applied spe-
cifically to CLIR. However, McNamee and May-
field?s CLIR results are solely for European 
languages written in the Roman script. This is 
why they are able to obtain, in their words, ?sur-
prisingly good results? without translation [of 
the query]?, and without using LSA in any form. 
With related languages in the same script, and 
particularly when n-grams are used in place of 
terms, the existence of cognates means that many 
translations can easily be identified, since they 
probably share many of the same n-grams (e.g. 
French ?parisien? versus English ?Parisian?). 
When languages do not all share the same script 
or come from the same language family, how-
ever, the task can be considerably harder. 
Since the approach of n-gram tokenization has 
the advantages of being entirely statistically-
 
3 Hereafter, we use the term ?n-grams? to refer specifically 
to character (not word) n-grams. 
131
based and language-independent, however, we 
examined whether it could be combined with 
LSA to allow CLIR (including cross-script re-
trieval), and whether this would lead to any ad-
vantage over term-based LSA. Our intuition was 
that some (although not all) n-grams would cor-
respond to morphologically significant subcon-
stituents of terms, such as ?read? from ?reading?, 
and therefore associations at the morpheme level 
might be facilitated. The steps for this approach 
are listed in Table 3. 
1 Form a term-by-document array from the paral-
lel corpus as described above 
2 For each term, list all (overlapping) n-grams4
3 Replace terms in the term-by-document array 
with n-grams, to form an n-gram-by-document 
array 
4 Subject the n-gram-by-document array to SVD 
to produce an n-gram-by-concept U matrix, sin-
gular values (the diagonal S matrix), and docu-
ment-by-concept V matrix 
5 Project new documents into the semantic space 
by multiplying their vectors by US-1 
Table 3. Steps for n-gram-based LSA 
 
Under all approaches, we selected the same 
log-entropy term weighting scheme that we used 
for standard LSA. Thus, whether a term t stands 
for a wordform or an n-gram, its weighted fre-
quency W in a particular document k is given by: 
 
W = log2 (F + 1) ? (1 + Ht / log2 (N))X (2) 
 
where F is the raw frequency of t in k, Ht is the 
entropy of the term or n-gram across all docu-
ments, N is the number of documents in the cor-
pus, and X is some arbitrary constant (a power to 
which the global weight is raised).  We have 
found that an X > 1 improves precision by chang-
ing the relative distribution of weighted frequen-
cies. Common terms with high entropy become 
much less influential in the SVD.  
It should be noted that step (2) in Table 3 is 
similar to McNamee and Mayfield?s approach, 
except that we did not include word-spanning n-
grams, owing to computational constraints. We 
also tried two variants of step (2), one in which 
all n-grams were of the same length (as per 
McNamee and Mayfield 2004), and one in which 
n-grams of different lengths were mixed. Under 
the second of these, the number of rows in both 
the term-by-document and U matrices is of 
course considerably larger. For example, Table 4 
 
4 As an example, for ?cat?, the complete list of overlapping 
n-grams would be ?c?, ?a?, ?t?, ?ca?, ?at?, and ?cat?. 
shows that the number of rows in the n-gram-by-
document matrix for English (EN) under the first 
variant (with n = 6) is 19,801, while under the 
second (with n Z 6) it is 58,907. Comparable sta-
tistics are given for Arabic (AR), Spanish (ES), 
French (FR) and Russian (RU). 
n= AR EN ES FR RU 
1 35 27 41 41 47
2 939 516 728 708 827
3 11,127 4,267 5,563 5,067 7,808
4 40,835 13,927 19,686 15,948 30,702
5 53,671 20,369 35,526 25,253 54,647
6 39,822 19,801 42,408 28,274 65,308
Total 146,429 58,907 103,952 75,291 159,339
Table 4. Number of distinct n-grams by language 
and length, up to length 6, based on Bible text 
 
3.2 Replacing terms with morphemes: 
LMSA 
We also attempted a related approach with 
non-overlapping n-grams. This set of 
experiments was guided by the intuition that not 
all n-grams are morphologically significant. 
Before we discuss the details of this approach, 
consider the English example ?comingle?. Here, 
?co? + ?mingle? are likely to be more significant 
to the overall meaning than ?coming? + ?le? ? in 
fact, the presence of the n-gram ?coming? could 
be misleading in this case. One way to model this 
would be to change the weighting scheme. The 
problem with this is that the weighting for one 
token has to be contingent on the weighting for 
another in the same term. Otherwise, in this 
example, the n-gram ?coming? would presumably 
receive a high weighting based on its frequency 
elsewhere in the corpus. 
An alternative is to select the tokenization 
which maximizes mutual information (MI). 
Brown et al (1992) describe one application of 
MI to identify word collocations; Kashioka et al 
(1998) describe another, based on MI of charac-
ter n-grams, for morphological analysis of Japa-
nese. The pointwise MI of a pair s1 and s2 as 
adjacent symbols is 
 
MI = log P(s1 s2) ? log P(s1) ? log P(s2) (3) 
 
If s1 follows s2 less often than expected on the 
basis of their independent frequencies, then MI is 
negative; otherwise, it is positive. 
In our application, we want to consider all 
candidate tokenizations, sum MI for each candi-
date, and rule out all but one candidate. A to-
132
kenization is a candidate if it exhaustively parses 
the entire string and has no overlapping tokens. 
Thus, for ?comingle?, co+mingle, coming+le, 
comingle, c+o+m+i+n+g+l+e, etc., are some of 
the candidates, but comi+ngl and com+mingle 
are not. To obtain MI, we need to compute the 
log probability (logp) of every n-gram in the cor-
pus. If Sk (k = 1, ?, K) denotes the set of all n-
grams of length k, and sn is a particular n-gram of 
length n, then we compute logp for sn as: 
 
logp = log F(sn) ? log [ (F(Sn))  (4) 
 
where F(sn) is the frequency of sn in the corpus, 
and [ (F(Sn)) is the sum of the frequencies of all 
Sn in the corpus.5 In all cases, logp is negative, 
and MI is maximized when the magnitude of the 
sum of logp for all elements in the tokenization 
(also negative) is minimized, i.e. closest to zero. 
Tokenizations consisting of one, two or more 
elements (respective examples are comingle, 
co+mingle, and co+ming+le) will all receive a 
score, although those with fewer elements will 
tend to be favored. 
We considered some minor variants in the set-
tings for this approach in which word-initial and 
word-final n-grams were indexed separately from 
word-medial n-grams. Guided by McNamee and 
Mayfield?s (2004) finding that there is an optimal 
(language-dependent) value of k for Sk, we also 
varied the maximum length of n-grams allowed 
in tokenizations. Under all settings, we followed 
steps 3-5 from Table 3 (including SVD) from 
here on. 
This approach (which we call latent morpho-
semantic analysis), then, is like LSA, except that 
the types and tokens are statistically-derived 
morphemes rather than terms. Whatever LMSA 
variant is used, the underlying approach to mor-
phological tokenization is completely language-
independent. Example output is shown in Table 5 
for wordforms from the Russian lemma 
]^P_`abNMR_c ?to crawl?, where the common 
stem (or at least an approximation thereof) is cor-
rectly identified. 
Wordform Tokenization 
]^P_`abNOdP`e_c ]^P_`abNO dP`e_c 
]^P_`abNOdL`L_c ]^P_`abNO dL`L_c 
]^P_`abNOdL`_c ]^P_`abNO dL`_c 
]^P_`abNOdLf_c ]^P_`abNO dLf_c 
Table 5. Examples of MI-based tokenization 
 
5 Note that (4) is closely related to the ?weighted mutual 
information? measure used in Goldsmith (2001: 172). 
We do not directly test the accuracy of these 
tokenizations. Rather, measures of CLIR preci-
sion (described in section 4) indirectly validate 
our morphological tokenizations. 
4 Testing framework 
To assess our results on a basis comparable with 
previous work, we used the same training and 
test data as used in Chew et al (2007) and Chew 
and Abdelali (2008). The training data consists 
of the text of the Bible in 31,226 parallel chunks, 
corresponding generally to verses, in Arabic, 
English, French, Russian and Spanish. The test 
data is the text of the Quran in the same 5 lan-
guages, in 114 parallel chunks corresponding to 
suras (chapters). 
Questions are sometimes raised as to how rep-
resentative the Bible and/or Quran are of modern 
language. However, there is little question that 
the number and diversity of parallel languages 
covered by the Bible6 is not matched elsewhere 
(Resnik et al 1999), even by more mainstream 
parallel corpora such as Europarl (Koehn 2002)7.
The diversity of languages covered is a particu-
larly important criterion for our purposes, since 
we would like to look at methods which enhance 
retrieval for languages across the analytic-
synthetic spectrum. The Bible also has the ad-
vantage of being readily available in electronic 
form: we downloaded all our data in a tab-
delimited, verse-indexed format from the ?Un-
bound Bible? website mentioned above (Biola 
University, 2005-2006). 
In accordance with previous work, we split the 
test set into each of the 10 possible language-pair 
combinations: AR-EN, AR-FR, EN-FR, and so 
on. For each language pair and test, 228 distinct 
?queries? were submitted ? each query consisting 
of one of the 228 sura ?documents?. To assess the 
aggregate performance of the framework, we 
used average precision at 1 document, hereafter 
?P1? (1 if the translation of the document ranked 
highest, zero otherwise ? thus, a fairly strict 
measure of precision). We also measured preci-
sion on a basis not used by Chew et al (2007) or 
Chew and Abdelali (2008): multilingual preci-
sion at 5 documents (hereafter ?MP5?). For this, 
 
6 At December 31, 2006, complete translations existed in 
429 languages, and partial translations in 2,426 languages 
(Bible Society 2007).  
7 Since the Europarl text is extracted from the proceedings 
of the European Parliament, the languages represented are 
generally closely-related to one another (most being Ger-
manic or Romance). 
133
each of the 570 documents (114 suras, each in 5 
languages) is submitted as a query. The results 
are drawn from the pool of all five languages, so 
MP5 represents the percentage, on average, of 
the top 5 documents which are translations of the 
query. This measure is still stricter than P1 (this 
is a mathematical necessity) because the retrieval 
task is harder. Essentially, MP5 measures how 
well similar documents cluster across languages, 
while P1 measures how reliably document trans-
lations are retrieved when the target language is 
known. 
5 Results and Discussion 
The following tables show the results of our 
tests. First, we present in Table 6 the results us-
ing standard LSA, in which terms are sequences 
of characters delimited by non-word characters. 
Here, in essence, we reperformed an experiment 
in Chew and Abdelali (2008). 
P1 (overall average: 0.8796) 
AR EN ES FR RU 
AR 1.0000 0.7544 0.7193 0.7368 0.7544 
EN 0.7719 1.0000 0.9123 0.9386 0.9474 
ES 0.6316 0.9298 1.0000 0.9298 0.8947 
FR 0.7719 0.9035 0.9298 1.0000 0.9386 
RU 0.7719 0.9298 0.9035 0.9211 1.0000 
MP5: AR 0.4456, EN 0.7211, ES 0.6649,  
FR 0.7614, RU 0.6947; overall average: 0.6575 
Table 6. Results with standard LSA 
 
Our results differ from Chew and Abdelali?s 
(2008) ? our precision is higher ? because we use 
a different value of X in equation (2) above (here, 
1.8 rather than 1). Generally, we selected X so as 
to maximize MP5; discussion of this is beyond 
the scope of this paper, and not strictly relevant 
in any case, since we present like-for-like com-
parisons throughout this section. However, Table 
6 shows clearly that our results replicate those 
previously published, in that precision for Arabic 
(the most ?synthetic? of the five languages) is 
consistently lower than for the other four. 
The next set of results (in Table 7) is for LSA 
with SVD of an array in which the rows corre-
spond to all overlapping, but not word-spanning, 
n-grams of fixed length. The best results here, for 
n=4, are essentially no better on average than 
those obtained with standard LSA. However, 
averaging across languages obscures the fact that 
results for Arabic have significantly improved 
(for example, where Arabic documents are used 
as queries, MP5 is now 0.6205 instead of 
0.4456). Still, the fact that average MP5 is essen-
tially unchanged means that this is at the expense 
of results for other languages. 
n = Average P1 Average MP5 
3 0.8340 0.4951 
4 0.8779 0.6761 
5 0.8232 0.6365 
6 0.6957 0.5197 
7 0.5321 0.3986 
Table 7. Results with LSA / overlapping n-grams 
of fixed length 
 
Now we present results in Table 8 where SVD 
is performed on an array in which the rows cor-
respond to all overlapping, but not word-
spanning, n-grams of any length (varying maxi-
mum length). 
n Z Average P1 Average MP5 
3 0.8235 0.3909 
4 0.9039 0.6256 
5 0.9095 0.6839 
6 0.8863 0.6716 
7 0.8635 0.6470 
Table 8. Results with LSA / overlapping n-grams 
of variable length 
 
Here, the best results (with n<=5) more clearly 
improve upon LSA: the increases in both P1 and 
MP5, though each only about 0.03 in absolute 
terms, are highly significant (p < 0.005). Very 
likely this is related to the fact that when n-grams 
are used in place of words, the out-of-vocabulary 
problem is alleviated. But there is quite a high 
computational cost, which will become apparent 
in Table 10 and the discussion accompanying it. 
A practical advantage of the ?morpheme?-by-
document array of LMSA, on the other hand, is 
that this cost is substantially reduced. This is be-
cause, as already mentioned, the vast majority of 
n-grams are eliminated from consideration. 
However, does taking this step significantly hurt 
performance? The results for LMSA presented in 
Table 9 provide an answer to this. 
For P1, the results are comparable to standard 
LSA when we select settings of n Z 7 (maximum 
permitted morpheme length) or above. But under 
the stricter MP5 measure, LMSA not only sig-
nificantly outperforms standard LSA (p < 0.001, 
at n Z 9); the results are also superior to those 
obtained under any other method we tested. The 
improvement in MP5 is comparable to that for 
P1 ? 0.677 to 0.707 ? when Chew and Abdelali 
(2008) use the Darwish Arabic light stemmer to 
provide input to LSA; our approach, however, 
has the advantage that it is fully unsupervised. 
134
n Z Average P1 Average MP5 
4 0.6947 0.4411 
5 0.8151 0.6102 
6 0.8614 0.6793 
7 0.8709 0.6912 
8 0.8663 0.6856 
9 0.8765 0.6909 
10 0.8772 0.6740 
Table 9. Results with LMSA8
As when n-grams are used without MI, fewer 
types are out-of-vocabulary: for example, with 
certain settings for LMSA, we found that the 
percentage of out-of-vocabulary types dropped 
from 65% under LSA to 29% under LMSA, and 
the effect was even more marked for Arabic 
taken individually (78.5% to 34.4%). This is de-
spite the fact mentioned above that LMSA arrays 
are more economical than LSA arrays: in fact, as 
Table 10 shows, 22% more economical (the size 
of the U matrix output by SVD, used to create 
vectors for new documents, is determined solely 
by the number of rows, or types). Note also that 
both LSA and LMSA are significantly more eco-
nomical than SVD with overlapping n-grams. 
Technique Rows Nonzeros 
LSA 163,745 2,684,938 
LSA with overlapping 
n-grams (where n Z 5) 
527,506 45,878,062 
LMSA 127,722 3,215,078 
Table 10. Comparative matrix sizes 
 
Even the results in Table 9 can still be im-
proved upon. Following McNamee and May-
field?s insight that different length n-grams may 
be optimal for different languages, we attempted 
to improve precision further by varying n inde-
pendently by language. For all languages but 
Arabic, n Z 9 seems to work well (either increas-
ing or decreasing maximum n resulted in a drop 
in precision), but by setting n Z 6 for Arabic, P1 
increased to 0.8874 and MP5 to 0.7368. As com-
parison of Table 11 with Table 6 shows, some of 
the most significant individual increases were for 
Arabic. It should however be noted that the op-
timal value for n may be dataset-dependent. 
Since n is a maximum length (unlike in 
McNamee and Mayfield?s experiments), one 
might expect that increasing n should never re-
 
8 These results are with the stipulation that word-initial and 
word-final n-grams are distinguished from word-medial n-
grams. We also ran experiments in which this distinction 
was not made. Detailed results are not presented here; suf-
fice it to say that when word-medial and other morphemes 
were not distinguished, precision was hurt somewhat (low-
ering it often by several percentage points). 
sult in a drop in precision. We believe the benefit 
to limiting the size of n is connected to Brown et 
al.?s (1992: 470) observation that ?as n increases, 
the accuracy of an n-gram model increases, but 
the reliability of our parameter estimates, drawn 
as they must be from a limited training text, de-
creases?. Effectively, the probabilities used in MI 
are unrepresentatively high for longer n-grams 
(this becomes clear if one considers the extreme 
example of an n-gram the same length as the 
training corpus). 
P1 (overall average: 0.8874) 
AR EN ES FR RU 
AR 1.0000 0.7895 0.7719 0.7281 0.7807 
EN 0.8158 1.0000 0.9298 0.9298 0.9123 
ES 0.7807 0.9474 1.0000 0.9123 0.8684 
FR 0.7632 0.9035 0.9474 1.0000 0.8947 
RU 0.7456 0.9298 0.9298 0.9035 1.0000 
MP5: AR 0.5140, EN 0.8035, ES 0.8228,  
FR 0.8035, RU 0.7404; overall average: 0.7368 
Table 11. Best results with LMSA 
 
If setting a maximum value for n makes sense 
in general, the idea of a lower maximum for 
Arabic in particular also seems reasonable since 
Arabic words, generally written as they are with-
out vowels, contain on average fewer characters 
than the other four languages, and contain roots 
which are usually three or fewer characters long. 
6 Conclusion 
In this paper, we have demonstrated LMSA, a 
linguistically (specifically, morphologically) 
more sophisticated alternative to LSA. By com-
puting mutual information of character n-grams 
of non-fixed length, we are able to obtain an ap-
proximation to a morpheme-by-document matrix 
which can substitute for the commonly-used 
term-by-document matrix. At the same time, be-
cause mutual information is based entirely on 
statistics, rather than grammar rules, all the ad-
vantages of LSA (language-independence, speed 
of implementation and fast run-time processing) 
are retained. In fact, some of these advantages 
may be increased since the number of index 
items is often lower. 
Although from a linguist?s point of view the 
theoretical advantages of LMSA may be intrinsi-
cally satisfying, the benefit is not confined to the 
theoretical realm. Our empirical results show that 
LMSA also brings practical benefits, particularly 
when performing IR with morphologically com-
plex languages like Arabic. Principally, this 
seems to be due to two factors: alleviation of the 
135
out-of-vocabulary problem and improvement in 
the associations made by SVD. 
We believe that the results we have presented 
may point the way towards still more sophisti-
cated types of analysis, particularly for multilin-
gual text. We would like to explore, for example, 
whether it is possible to use tensor decomposi-
tion methods like PARAFAC2 to leverage asso-
ciations between n-grams, words, documents and 
languages to still better advantage. 
Finally, it is worth pointing out that our ap-
proach offers an indirect way to test our statis-
tics-based approach to morphological analysis. 
The better our ?morphemes? correspond to mini-
mal semantic units (as theory dictates they 
should), the more coherently our system should 
work overall. In this case, our final arbiter of the 
system?s overall performance is CLIR precision. 
In short, our initial attempts appear to show 
that statistics-based morphological analysis can 
be integrated into a larger information retrieval 
architecture with some success. 
Acknowledgement 
Sandia is a multiprogram laboratory operated 
by Sandia Corporation, a Lockheed Martin Com-
pany, for the United States Department of En-
ergy?s National Nuclear Security Administration 
under contract DE-AC04-94AL85000. 
References  
S. Abdou, P. Ruck, and J. Savoy. 2005. Evaluation of 
Stemming, Query Expansion and Manual Indexing 
Approaches for the Genomic Task. Proceedings of 
TREC 2005.
M. W. Berry, S. T. Dumais., and G. W. O?Brien. 
1994. Using Linear Algebra for Intelligent Infor-
mation Retrieval. SIAM: Review 37, 573-595. 
Bible Society. 2006. A Statistical Summary of Lan-
guages with the Scriptures. Accessed Jan 5 2007 at 
http://www.biblesociety.org/latestnews/latest341-
slr2005stats.html. 
Biola University. 2005-2006. The Unbound Bible.
Accessed Jan 29 2008 at 
http://www.unboundbible.org/. 
P. F. Brown, P. V. deSouza, R. L. Mercer, V. J. Della 
Pietra, and J. C. Lai. 1992. Class-Based n-gram 
Models of Natural Language. Computational Lin-
guistics 18(4), 467-479. 
P. Chew and A. Abdelali. 2007. Benefits of the ?Mas-
sively Parallel Rosetta Stone?: Cross-Language In-
formation Retrieval with over 30 Languages. 
Proceedings of the Association for Computational 
Linguistics, 872-879. 
P. Chew and A. Abdelali. 2008. The Effects of Lan-
guage Relatedness on Multilingual Information Re-
trieval: A Case Study With Indo-European and 
Semitic Languages. Proceedings of the Workshop 
on Cross-Language Information Access.
K. Darwish. 2002. Building a shallow Arabic morpho-
logical analyzer in one day. Proceedings of the As-
sociation for Computational Linguistics, 47-54. 
S. Deerwester, S. T. Dumais, G. W. Furnas, T. K. 
Landauer and R. Harshman. 1990.  Indexing by La-
tent Semantic Analysis. Journal of the American 
Society for Information Science 41:6, 391-407. 
J. Goldsmith. 2001. Unsupervised Learning of the 
Morphology of a Natural Language. Computa-
tional Linguistics 27(2), 153-198. 
R. A. Harshman. 1972. PARAFAC2: Mathematical 
and Technical Notes. UCLA Working Papers in 
Phonetics 22, 30-47. 
M. Heroux, R. Bartlett, V. Howle, R. Hoekstra, J. Hu, 
T. Kolda, R. Lehoucq, K. Long, R. Pawlowski, E. 
Phipps, A. Salinger, H. Thornquist, R. Tuminaro, J. 
Willenbring, A. Williams, and K. Stanley. 2005. 
An Overview of the Trilinos Project. ACM Trans-
actions on Mathematical Software 31:3, 397-423. 
H. Kashioka, Y. Kawata, Y. Kinjo, A. Finch and E. 
W. Black. 1998. Use of Mutual Information Based 
Character Clusters in Dictionary-less Morphologi-
cal Analysis of Japanese. Proceedings of the 17th 
International Conference on Computational Lin-
guistics Vol. 1: 658-662. 
P. Koehn, F. J. Och, and D. Marcu. 2003. Statistical 
Phrase-Based Translation. Proceedings of the Joint 
Conference on Human Language Technologies and 
NAACL, 48-54. 
P. Koehn. 2002. Europarl: a Multilingual Corpus for 
Evaluation of Machine Translation. Unpublished. 
Accessed Jan 29 2008 at 
http://www.iccs.inf.ed.ac.uk 
/~pkoehn/publications/europarl.pdf. 
A. Lavie, E. Peterson, K. Probst, S. Wintner, and Y. 
Eytani. 2004. Rapid Prototyping of a Transfer-
Based Hebrew-to-English Machine Translation 
System. Proceedings of the TMI-04.
P. McNamee and J. Mayfield. 2004. Character N-
Gram Tokenization for European Language Text 
Retrieval. Information Retrieval 7, 73-97. 
P. Resnik, M. Broman Olsen, and M. Diab. 1999. The 
Bible as a Parallel Corpus: Annotating the "Book 
of 2000 Tongues". Computers and the Humanities 
33: 129-153.  
136
The Effects of Language Relatedness on Multilingual Information Re-
trieval: A Case Study With Indo-European and Semitic Languages 
Peter A. Chew 
Sandia National Laboratories 
P. O. Box 5800, MS 1012 
Albuquerque, NM 87185-1012, USA 
pchew@sandia.gov 
Ahmed Abdelali 
New Mexico State University 
P.O. Box 30002, Mail Stop 3CRL 
Las Cruces, NM 88003-8001, USA 
ahmed@crl.nmsu.edu 
 
 
Abstract 
We explore the effects of language related-
ness within a multilingual information re-
trieval (IR) framework which can be de-
ployed to virtually any language, focusing 
specifically on Indo-European versus Se-
mitic languages. The Semitic languages 
present unique challenges to IR for a num-
ber of reasons, so we set out to answer the 
question of whether cross-language IR for 
Semitic languages can be boosted by ma-
nipulation of the training data (which, in 
our framework, includes multilingual paral-
lel text, some of which is morphologically 
analyzed). We attempted three measures to 
achieve this: first, the inclusion of geneti-
cally related (i.e., other Semitic) languages 
in the training data; second, the inclusion 
of non-related languages sharing the same 
script, and third, the inclusion of morpho-
logical analysis for Semitic languages. We 
find that language relatedness is a definite 
factor in boosting IR precision; script simi-
larity can probably be ruled out as a factor; 
and morphological analysis can be helpful, 
but ? perhaps paradoxically ? not necessar-
ily to the languages which are subjected to 
morphological analysis. 
1 Introduction 
In this paper, we consider how related languages 
fit into a general framework developed for 
multilingual cross-language information retrieval 
(CLIR). Although this framework can deal with 
virtually any language, there are some special 
considerations which make related languages more 
interesting for exploration. Taking one example, 
Semitic languages are distinguished by their 
complex morphology, a characteristic which 
presents challenges to an information retrieval 
model in which terms (usually, separated by white 
space or punctuation) are implicitly treated as 
individual units of meaning. We consider three 
possible methods for investigating the phenomena. 
In all cases, we keep the overall framework the 
same but simply make changes to the training data. 
One method we consider is to augment the train-
ing data with text from related languages; we com-
pare results obtained from using Semitic languages 
with those obtained when non-Semitic languages 
are used. The other two relate to morphological 
analysis: the second is to replace inflected forms 
(in just one language, Arabic) with just the root in 
the training data; and the third is to remove vowels 
(again in just one language, Hebrew). 
The paper is organized as follows. Section 2 de-
scribes our general framework, which is a standard 
one used for CLIR. At a high level, section 3 out-
lines some of the challenges Semitic languages 
present within the context of our approach. In sec-
tion 4, we compare results from using a number of 
different combinations of training data with the 
same test data. Finally, we conclude on our find-
ings in section 5. 
2 The Framework 
2.1 General description 
The framework that we use for IR is multilingual 
Latent Semantic Analysis (LSA) as described by 
Berry et al (1994:21, and used by Landauer and 
Littman (1990) and Young (1994). A number of 
different approaches to CLIR have been proposed; 
generally, they rely either on the use of a parallel 
corpus for training, or translation of the IR query. 
Either or both of these methods can be based on 
the use of dictionaries, although that is not the ap-
proach that we use. 
In the standard multilingual LSA framework, a 
term-by-document matrix is formed from a parallel 
aligned corpus. Each ?document? consists of the 
concatenation of all the languages, so terms from 
all languages will appear in any given document. 
Thus, if there are K languages, N documents (each 
of which is translated into each of the K lan-
guages), and T distinct linguistic terms across all 
languages, then the term-by-document matrix is of 
dimensions T by N. Each cell in the matrix repre-
sents a weighted frequency of a particular term t 
(in any language) in a particular document n. The 
weighting scheme we use is a standard log-entropy 
scheme in which the weighted frequency xt,n of a 
particular term t in a particular document n is given 
by: 
 W = log2 (F + 1) ? (1 + Ht / log2 (N)) 
 
where F is the raw frequency of t in n, and Ht is a 
measure of the entropy of the term across all 
documents. The last term in the expression above, 
log2 (N), is the maximum entropy that any term 
can have in the corpus, and therefore (1 + Ht / log2 
(N)) is 1 for the most distinctive terms in the cor-
pus, 0 for those which are least distinctive. The 
log-entropy weighting scheme has been shown to 
outperform other schemes such as tf-idf in LSA-
based retrieval (see for example Dumais 1991). 
The sparse term-by-document matrix is sub-
jected to singular value decomposition (SVD), and 
a reduced non-sparse matrix is output. Generally, 
we used the output corresponding to the top 300 
singular values in our experiments. 
To evaluate the similarity of unseen queries or 
documents (those not in the training set) to one 
another, these documents are tokenized, the 
weighted frequencies are calculated in the same 
way as they were for the training set, and the re-
sults are multiplied by the matrices output by the 
SVD to project the unseen queries/documents into 
a ?semantic space?, assigning (in our case) 300-
dimensional vectors to each document. Again, our 
approach to measuring the similarity of one docu-
ment to another is a standard one: we calculate the 
cosine between the respective vectors. 
For CLIR, the main advantages of an approach 
like LSA are that it is by now quite well-
understood; the underlying algorithms remain con-
stant regardless of which languages are being 
compared; and there is wide scope to use different 
sets of training data, providing they exist in paral-
lel corpora. LSA is thus a highly generic approach 
to CLIR: since it relies only on the ability to token-
ize text at the boundaries between words, or more 
generally semantic units, it can be generalized to 
virtually all languages. 
2.2 Training and test data 
For our experiments, the training and test data 
were taken from the Bible and Quran respectively. 
As training data, the Bible lends itself extremely 
well to multilingual LSA. It is highly available in 
multiple languages1 (over 80 parallel translations 
in 50 languages, mostly public-domain, are avail-
able from a single website, 
www.unboundbible.org); and a very fine-grained 
alignment is possible (by verse) (Resnik et al1999, 
Chew and Abdelali 2007). Many purpose-built 
parallel corpora are biased towards particular lan-
guage groups (for example, the European Union 
funds work in CLIR, but it tends to be biased to-
wards European languages ? for example, see Pe-
ters 2001). This is not as true of the Bible, and the 
fact that it covers a wider range of languages is a 
reflection of the reasons it was translated in the 
first place. 
The question which is most commonly raised 
about use of the Bible in this way is whether its 
coverage of vocabulary from other domains is suf-
ficient to allow it to be used as training data for 
most applications. Based on a variety of experi-
ments we have carried out (see for example Chew 
et al forthcoming), we believe this need not al-
ways be a drawback ? it depends largely on the 
intended application. However, it is beyond our 
scope to address this in detail here; it is sufficient 
to note that for the experiments we describe in this 
paper, we were able to achieve perfectly respect-
able CLIR results using the Bible as the training 
data. 
                                                 
1 It has proved hard to come by reliable statistics to al-
low direct comparison, but the Bible is generally be-
lieved to be the world?s most widely translated book. At 
the end of 2006, it is estimated that there were full trans-
lations into 429 languages and partial translations into 
2,426 languages (Bible Society 2007). 
As test data, we used the 114 suras (chapters) of 
the Quran, which has also been translated into a 
wide variety of languages. Clearly, both training 
and  test data have to be available in multiple lan-
guages to allow the effectiveness of CLIR to be 
measured in a meaningful way. For the experi-
ments reported in this paper, we limited the testing 
languages to Arabic, English, French, Russian and 
Spanish (the respective abbreviations AR, EN, FR, 
RU and ES are used hereafter). The test data thus 
amounted to 570 (114 ? 5) documents: a relatively 
small set, but large enough to achieve statistically 
significant results for our purposes, as will be 
shown. In all tests described in this paper, we use 
the same test set: thus, although the test documents 
all come from a single domain, it is reasonable to 
suppose that the comparative results can be gener-
alized to other domains. 
The complete list of languages used for both 
testing and training is given in Table 1. 
 
Language Bible -training- Quran -test- Language Family Sub-Family 
Afrikaans Yes No Indo-European Germanic-West 
Amharic Yes No Afro-Asiatic Semitic-South 
Arabic Yes Yes Afro-Asiatic Semitic-Central 
Aramaic Yes No Afro-Asiatic Semitic-North 
Czech Yes No Indo-European Slavic-West 
Danish Yes No Indo-European Germanic-North 
Dutch Yes No Indo-European Germanic-West 
English Yes Yes Indo-European Germanic-West 
French Yes Yes Indo-European Italic 
Hebrew Yes No Afro-Asiatic Semitic-Central 
Hungarian Yes No Uralic Finno-Ugric 
Japanese Yes No Altaic  
Latin Yes No Indo-European Italic 
Persian Yes No Indo-European Indo-Iranian 
Russian Yes Yes Indo-European Slavic-East 
Spanish Yes Yes Indo-European Italic 
Table 1. Languages used for training and testing 
2.3 Test method 
We tokenized each of the 570 test documents, ap-
plying the weighting scheme described above to 
obtain a vector of weighted frequencies of each 
term in the document, then multiplying that vector 
by U ? S-1, also as described above. The result was 
a set of projected document vectors in the 300-
dimensional LSA space. 
For some of our experiments, we used a light 
stemmer for Arabic (Darwish 2002) to replace in-
flected forms in the training data with citation 
forms. It is commonly accepted that morphology 
improves IR (Abdou et al 2005, Lavie et al 2004, 
Larkey et al 2002, Oard and Gey 2002), and it will 
be seen that our results generally confirm this. 
For Hebrew, we used the Westminster Lenin-
grad Codex in the training data. Since this is avail-
able for download either with vowels or without 
vowels, no morphological pre-processing was re-
quired in this case; we simply substituted one ver-
sion for the other in the training data when neces-
sary. 
Various measurements are used for evaluating 
IR systems performance (Van Rijsbergen 1979). 
However, since the aim of our experiments is to 
assess whether we could identify the correct trans-
lation for a given document among a set of possi-
bilities in another language (i.e., given the lan-
guage of the query and the language of the results), 
we selected ?precision at 1 document? as our pre-
ferred metric. This metric represents the proportion 
of cases, on average, where the translation was re-
trieved first. 
3 Challenges of Semitic languages 
The features which make Semitic languages chal-
lenging for information retrieval are generally 
fairly well understood: it is probably fair to say 
that chief among them is their complex morphol-
ogy (for example, ambiguity resulting from diacri-
tization, root-and-pattern alternations, and the use 
of infix morphemes as described in Habash 2004). 
These challenges can be illustrated by means of a 
statistical comparison of a portion of our training 
data (the Gospel of Matthew) as shown in Table 2. 
 Types Tokens 
Afrikaans 2,112 24,729 
French 2,840 24,438 
English 2,074 23,503 
Dutch 2,613 23,099 
Danish 2,649 21,816 
Spanish 3,075 21,279 
Persian 3,587 21,190 
Hungarian 4,730 18,787 
Czech 4,236 18,000 
Russian 4,196 16,826 
Latin 3,936 16,543 
Hebrew (Modern) 4,337 14,153 
Arabic 4,607 13,930 
Japanese 5,741 13,130 
Amharic 5,161 12,940 
TOTAL 55,894 284,363 
Table 2. Statistics of parallel texts by language 
From Table 2, it should be clear that there is 
generally an inverse relationship between the num-
ber of types and tokens. Modern Indo-European 
(IE) (and particularly Germanic or Italic lan-
guages) are at one end of the spectrum, while the 
Semitic languages (along with Japanese) are at the 
other. The statistics separate ?analytic? languages 
from ?synthetic? ones, and essentially illustrate the 
fact that, thanks to the richness of their morphol-
ogy, the Semitic languages pack more information 
(in the information-theoretic sense) into each term 
than the other languages. Because this results in 
higher average entropy per word (in the informa-
tion theoretic sense), a challenge is presented to 
information retrieval techniques such as LSA 
which rely on tokenization at word boundaries: it is 
harder to isolate each ?unit? of meaning in a syn-
thetic language. The actual effect this has on in-
formation retrieval precision will be shown in the 
next section. 
4 Results with LSA 
The series of experiments described in this section 
have the aims of: 
? clarifying what effect morphological analysis 
of the training data has on CLIR precision; 
? highlighting the effect on CLIR precision of 
adding more languages in training; 
? illustrating what the impact is of adding a par-
tial translation (text in one language which is 
only partially parallel with the texts in the oth-
er languages) 
We choose Arabic as the language of focus in 
our experiment; specifically for these experiments, 
we intended to reveal the effect of adding lan-
guages from the same group (Semitic) compared 
with that of adding languages of different groups. 
First, we present results in Table 3 which con-
firm that morphological analysis of the training 
data improves CLIR performance. 
 ES RU FR EN AR 
without morphological analysis of Arabic 
ES 1.0000 0.5614 0.8333 0.7368 0.2895 
RU 0.4211 1.0000 0.5263 0.7632 0.2632 
FR 0.7807 0.7018 1.0000 0.8158 0.4035 
EN 0.7193 0.8158 0.8596 1.0000 0.4825 
AR 0.5000 0.2807 0.6228 0.5526 1.0000 
Average precision:  
Overall 0.677, within IE 0.783, IE-Semitic 0.488 
with morphological analysis of Arabic 
ES 1.0000 0.6579 0.8772 0.7807 0.4123 
RU 0.4912 1.0000 0.7193 0.8158 0.3947 
FR 0.8421 0.7719 1.0000 0.8421 0.3772 
EN 0.8070 0.8684 0.8947 1.0000 0.3684 
AR 0.3947 0.3509 0.5614 0.4561 1.0000 
Average precision:  
Overall 0.707, within IE 0.836, IE-Semitic 0.480 
Table 3. Effect of morphological analysis2 
An important point to note first is that CLIR 
precision is generally much lower for pairs includ-
ing Arabic than it is elsewhere, lending support to 
our assertion above that Arabic and other Semitic 
languages present special challenges in informa-
tion retrieval. 
It also emerges from Table 3 that when morpho-
logical analysis of Arabic was added, the overall 
average precisions increased from 0.677 to 0.707, a 
highly significant increase (p? 6.7 ? 10-8). (Here 
and below, a chi-squared test is used to measure 
statistical significance.) 
Given that the ability of morphological analysis 
to improve IR precision has been documented, this 
result in itself is not surprising. However, it is in-
teresting that the net benefit of adding morphologi-
cal analysis ? and just to Arabic within the training 
data ? was more or less confined to pairs of non-
Semitic languages. We believe that the explanation 
is that by adding morphology more relations (liai-
                                                 
2 In this and the following tables, the metric used is pre-
cision at 1 document (discussed in section 2.3). 
sons) are defined in LSA between the words from 
different languages. For language pairs including 
Arabic, the average precision actually decreased 
from 0.488 to 0.480 when morphology was added 
(although this decrease is insignificant). 
With the same five training languages as used in 
Table 3, we added Persian. The results are shown 
in Table 4. 
 ES RU FR EN AR 
ES 1.0000 0.6140 0.8246 0.7632 0.3246 
RU 0.5088 1.0000 0.6667 0.7982 0.2281 
FR 0.8772 0.7368 1.0000 0.8158 0.3947 
EN 0.8246 0.8333 0.8947 1.0000 0.4035 
AR 0.4474 0.4386 0.6140 0.5526 1.0000 
Average precision:  
Overall 0.702, within IE 0.822, IE-Semitic 0.489 
Table 4. Effect on CLIR of adding Persian  
First to note is that the addition of Persian (an IE 
language) led to a general increase in precision for 
pairs of IE languages (Spanish, Russian, French 
and English) from 0.783 to 0.822 but no significant 
change for pairs including Arabic (0.488 to 0.489). 
Although Persian and Arabic share the same script, 
these results confirm that genetic relatedness is a 
much more important factor in affecting precision. 
Chew and Abdelali (2007) show that the results 
of multilingual LSA generally improve as the 
number of parallel translations used in training in-
creases. Our next step here, therefore, is to analyze 
whether it makes any difference whether the addi-
tional languages are from the same or different 
language groups. In Table 5 we compare the re-
sults of adding an IE language (Latin), an Altaic 
language (Japanese), and another Semitic language 
(Hebrew) to the training data. In all three cases, no 
morphological analysis of the training data was 
performed. 
Based on these results, cross-language precision 
yielded only very slightly improved results overall 
by adding Latin or Japanese. With Japanese, the 
net improvement (0.677 to 0.680) was not statisti-
cally significant overall, neither was the change 
significant for pairs either including or excluding 
Arabic (0.488 to 0.485 and 0.783 to 0.789 respec-
tively). Note that this is even though Japanese 
shares some statistical (although of course not lin-
guistic) properties with the Semitic languages, as 
shown in Table 2. With Latin, the net overall im-
provement (0.677 to 0.699) was barely significant 
(p ? 0.01) and was insignificant for pairs including 
Arabic (0.488 to 0.496). With Hebrew, however, 
the net improvement was highly significant in all 
cases (0.677 to 0.718, p ? 3.36 ? 10-6 overall, 
0.783 to 0.819, p ? 2.20 ? 10-4 for non-Semitic 
pairs, and 0.488 to 0.538, p ? 1.45 ? 10-3 for pairs 
including Arabic). We believe that these results 
indicate that there is more value overall in ensuring 
that languages are paired with at least one other 
related language in the training data; our least im-
pressive results (with Japanese) were when two 
languages in training (one Semitic and one Altaic 
language) were ?isolated?. 
 ES RU FR EN AR 
Latin included in training data 
ES 1.0000 0.6140 0.8333 0.7456 0.2544 
RU 0.4737 1.0000 0.6316 0.8246 0.3333 
FR 0.8596 0.7368 1.0000 0.8333 0.4474 
EN 0.7719 0.7982 0.8860 1.0000 0.4474 
AR 0.5088 0.3509 0.6140 0.5088 1.0000 
Average precision:  
Overall 0.699, within IE 0.813, IE-Semitic 0.496 
Japanese included in training data 
ES 1.0000 0.5789 0.8333 0.7456 0.2895 
RU 0.4298 1.0000 0.5526 0.7807 0.2719 
FR 0.7719 0.7368 1.0000 0.8070 0.4035 
EN 0.7193 0.807 0.8596 1.0000 0.4123 
AR 0.5088 0.2982 0.614 0.5702 1.0000 
Average precision:  
Overall 0.680, within IE 0.789, IE-Semitic 0.485 
Modern Hebrew (no vowels) in training data 
ES 1.0000 0.6140 0.8596 0.7807 0.3509 
RU 0.4561 1.0000 0.6667 0.7719 0.3684 
FR 0.8509 0.7193 1.0000 0.8684 0.4298 
EN 0.7632 0.8509 0.9035 1.0000 0.4298 
AR 0.5263 0.4474 0.6491 0.6404 1.0000 
Average precision:  
Overall 0.718, within IE 0.819, IE-Semitic 0.538 
Table 5. Effect of language relatedness on CLIR 
The next set of results are for a repetition of the 
previous three experiments, but this time with 
morphological analysis of the Arabic data. These 
results are shown in Table 6. 
As was the case without the additional lan-
guages, the overall effect of adding morphological 
analysis of Arabic is still to increase precision. In 
all three cases, the net improvement for pairs ex-
cluding Arabic is highly significant (0.813 to 0.844 
with Latin, 0.789 to 0.852 with Japanese, and 
0.819 to 0.850 with Hebrew). For pairs including 
Arabic, however, the change is again insignificant. 
This was a consistent but surprising feature of our 
results, that morphological analysis of Arabic in 
fact appears to benefit non-Semitic languages more 
than it benefits Arabic itself, at least with this data-
set. The results might possibly have been different 
if we had included other Semitic languages in the 
test data, although this appears unlikely as we 
found the same phenomenon consistently occur-
ring across a wide variety of tests, and regardless 
of which languages we used in training. 
 ES RU FR EN AR 
Latin included in training data 
ES 1.0000 0.6579 0.8684 0.7456 0.4211 
RU 0.5614 1.0000 0.7456 0.8509 0.4386 
FR 0.8421 0.8158 1.0000 0.8509 0.4211 
EN 0.8421 0.8333 0.8947 1.0000 0.4123 
AR 0.4123 0.3947 0.5351 0.4825 1.0000 
Average precision:  
Overall 0.721, within IE 0.844, IE-Semitic 0.502 
Japanese included in training data 
ES 1.0000 0.7544 0.8684 0.8070 0.4211 
RU 0.4737 1.0000 0.7193 0.8509 0.4123 
FR 0.8246 0.8596 1.0000 0.8772 0.4211 
EN 0.8421 0.8596 0.8947 1.0000 0.4035 
AR 0.3333 0.3509 0.5614 0.4649 1.0000 
Average precision:  
Overall 0.720, within IE 0.852, IE-Semitic 0.485 
Modern Hebrew (no vowels) in training data 
ES 1.0000 0.7018 0.9035 0.7982 0.4561 
RU 0.5614 1.0000 0.7105 0.8070 0.4035 
FR 0.8421 0.8246 1.0000 0.8596 0.4825 
EN 0.8509 0.8509 0.8947 1.0000 0.4123 
AR 0.3947 0.4298 0.5351 0.5175 1.0000 
Average precision:  
Overall 0.729, within IE 0.850, IE-Semitic 0.514 
Table 6. Effect of language relatedness and 
morphology on CLIR 
For further verification, we explored what would 
happen if only the Arabic root were included in 
morphological analysis. As already mentioned, for 
languages that combine affixes with the stem, there 
is a higher token-to-type ratio. Omitting the affix 
from the morphological analysis of these languages 
reveals the importance of considering the affixes 
and their contribution to the semantics of a given 
sentence. Although LSA is not sentence-structure-
aware (as it uses a bag-of-words approach), the 
importance of considering the affixes as part of the 
sentence is very crucial. The results in Table 7 
demonstrate clearly that ignoring or over-looking 
the word affixes has a negative effect on the over-
all performance of the CLIR system. When includ-
ing only the Arabic stem, a performance degrada-
tion is noticeable across all languages, with a lar-
ger impact on IE languages. The results which il-
lustrate can be seen by comparing Table 7 with 
Table 3. 
 ES RU FR EN AR 
morphological analysis of Arabic ?Stem only- 
ES 1.0000 0.5789 0.8070 0.7807 0.3421 
RU 0.4912 1.0000 0.6842 0.8246 0.1842 
FR 0.8421 0.7018 1.0000 0.8333 0.4211 
EN 0.8333 0.8333 0.9211 1.0000 0.4211 
AR 0.4561 0.4386 0.5702 0.4912 1.0000 
Average precision:  
Overall 0.698, within IE 0.821, IE-Semitic 0.481 
Table 7. Effect of Using Stem only 
Next, we turn specifically to a comparison of the 
effect that different Semitic languages have on 
CLIR precision. Here, we compare the results 
when the sixth language used in training is He-
brew, Amharic, or Aramaic. However, since our 
Amharic and Aramaic training data were only par-
tially parallel (we have only the New Testament in 
Amharic, and only portions of the New Testament 
in Aramaic), we first considered the effect that par-
tial translations have on precision. Table 8 shows 
the results we obtained when only the Hebrew Old 
Testament (with vowels) was used as the sixth par-
allel version. No morphological analysis was per-
formed. 
 ES RU FR EN AR 
without morphological analysis of Arabic 
ES 1.0000 0.6842 0.8421 0.8158 0.3947 
RU 0.4211 1.0000 0.6228 0.7982 0.4737 
FR 0.8509 0.7719 1.0000 0.8509 0.4737 
EN 0.7895 0.8333 0.8684 1.0000 0.4649 
AR 0.4561 0.3333 0.6404 0.4561 1.0000 
Average precision:  
Overall 0.714, within IE 0.822, IE-Semitic 0.521 
with morphological analysis of Arabic 
ES 1.0000 0.7105 0.9035 0.8333 0.4737 
RU 0.4649 1.0000 0.7456 0.8333 0.4912 
FR 0.8421 0.8070 1.0000 0.8860 0.4474 
EN 0.8772 0.8421 0.9298 1.0000 0.4298 
AR 0.2719 0.3684 0.5088 0.5000 1.0000 
Average precision:  
Overall 0.727, within IE 0.855, IE-Semitic 0.499 
 Table 8. Effect of partial translation on CLIR 
Although two or more parameters differ from 
those used for Hebrew in Table 5 (a fully-parallel 
text in modern Hebrew without vowels, versus a 
partial text in Ancient Hebrew with vowels), it is 
worth comparing the two sets of results. In particu-
lar, the reductions in average precision from 0.718 
to 0.714 and from 0.729 to 0.727 respectively are 
insignificant. Likewise, the changes for pairs with 
and without Arabic were insignificant. This ap-
pears to show that, at least up to a certain point, 
even only partially parallel corpora can success-
fully be used under our LSA-based approach. We 
now turn to the results we obtained using Aramaic, 
with the intention of comparing these to our previ-
ous results with Hebrew. 
 ES RU FR EN AR 
no morphological analysis of Arabic 
ES 1.0000 0.4035 0.8070 0.7368 0.2632 
RU 0.3509 1.0000 0.5965 0.6579 0.2281 
FR 0.8421 0.6754 1.0000 0.8246 0.2719 
EN 0.7018 0.6754 0.8947 1.0000 0.2719 
AR 0.4825 0.2807 0.4649 0.3947 1.0000 
Average precision:  
Overall 0.633, within IE 0.760, IE-Semitic 0.406 
morphological analysis of Arabic 
ES 1.0000 0.5351 0.8684 0.7719 0.2895 
RU 0.5175 1.0000 0.6930 0.7807 0.3421 
FR 0.8947 0.7807 1.0000 0.8684 0.2807 
EN 0.8070 0.8158 0.9035 1.0000 0.2982 
AR 0.3509 0.2193 0.3772 0.2895 1.0000 
Average precision:  
Overall 0.667, within IE 0.827, IE-Semitic 0.383 
Table 9. Effect of Aramaic on CLIR 
Here, there is a noticeable across-the-board de-
crease in precision from the previous results. We 
believe that this may have more to do with the fact 
that the Aramaic training data we have is fairly 
sparse (2,957 verses of the Bible out of a total of 
31,226, compared with 23,269 out of 31,226 for 
Ancient Hebrew). It is likely that at some point as 
the parallel translation?s coverage drops (some-
where between the coverage of the Hebrew and the 
Aramaic), there is a severe hit to the performance 
of CLIR. Accordingly, we discarded Aramaic for 
further tests. 
Next, we considered the addition of two Semitic 
languages other than Arabic, Modern Hebrew and 
Amharic, to the training data. In this case, we per-
formed morphological analysis of Arabic. 
The results appear to show a significant increase 
in precision for pairs of IE languages and a signifi-
cant decrease for cross-language-group cases 
(those where an IE language is paired with Ara-
bic), compared to when just Modern Hebrew was 
used in the training data (see the relevant part of 
Table 6). It is not clear why this is the case, but in 
this case we believe that it is quite possible that the 
results would have been different if more than one 
Semitic language had been included in the test 
data. 
 ES RU FR EN AR 
ES 1.0000 0.6930 0.8860 0.7719 0.4649 
RU 0.5000 1.0000 0.7456 0.8684 0.5175 
FR 0.8772 0.7982 1.0000 0.8772 0.4649 
EN 0.8684 0.8596 0.9298 1.0000 0.4386 
AR 0.2632 0.2982 0.4386 0.3947 1.0000 
Average precision:  
Overall 0.718, within IE 0.855, IE-Semitic 0.476 
Table 10. CLIR with 7 languages (including 
Modern Hebrew and Amharic) 
We now come to a rare example where we 
achieved a boost in precision specifically for Ara-
bic. In this case, we repeated the last experiment 
but removed the vowels from the Hebrew text. The 
results are shown in Table 11. 
 ES RU FR EN AR 
ES 1.0000 0.7018 0.8772 0.8158 0.5088 
RU 0.5175 1.0000 0.7632 0.8421 0.4825 
FR 0.8596 0.8246 1.0000 0.8860 0.5351 
EN 0.8947 0.8158 0.9298 1.0000 0.5088 
AR 0.2895 0.3772 0.5526 0.5000 1.0000 
Average precision:  
Overall 0.739, within IE 0.858, IE-Semitic 0.528 
Table 11. Effect of removing Hebrew vowels 
Average precision for pairs including Arabic in-
creased from 0.476 to 0.528, an increase which 
was significant (p ? 7.33 ? 10-4), but for other pairs 
the change was insignificant. Since the Arabic text 
in training did not include vowels, we believe that 
the exclusion of vowels from Hebrew placed the 
two languages on a more common footing, allow-
ing LSA, for example, to make associations be-
tween Hebrew and Arabic roots which otherwise 
might not have been made. Although Hebrew and 
Arabic do not always share common stems, it can 
be seen from Table 2 that the type/token statistics 
of Hebrew (without vowels) and Arabic are very 
similar. The inclusion of Hebrew vowels would 
change the statistics for Hebrew considerably, in-
creasing the number of types (since previously in-
distinguishable wordforms would now be listed 
separately). Thus, with the exclusion of Hebrew 
vowels, there should be more instances where Ara-
bic tokens can be paired one-to-one with Hebrew 
tokens. 
Finally, in order to confirm our conclusions and 
to eliminate any doubts about the results obtained 
so far, we experimented with more languages. We 
added Japanese, Afrikaans, Czech, Danish, Dutch, 
Hungarian and Hebrew in addition to our 5 original 
languages. Morphological analysis of the Arabic 
text in training was performed, as in some of the 
previous experiments. The results of these tests are 
shown in Table 12. 
 ES RU FR EN AR 
11 languages (original 5 + Japanese, Afrikaans, 
Czech, Danish, Dutch, and Hungarian) 
ES 1.0000 0.6754 0.9035 0.7719 0.5526 
RU 0.4737 1.0000 0.7632 0.8772 0.5175 
FR 0.8596 0.8070 1.0000 0.8947 0.5088 
EN 0.8421 0.8684 0.9035 1.0000 0.4912 
AR 0.3772 0.2632 0.6316 0.4912 1.0000 
Average precision:  
Overall 0.739, within IE 0.853, IE-Semitic 0.537 
12 languages (as above plus Hebrew) 
ES 1.0000 0.7018 0.8947 0.7719 0.6404 
RU 0.6667 1.0000 0.7105 0.9123 0.6228 
FR 0.8772 0.8333 1.0000 0.8421 0.6404 
EN 0.6667 0.8684 0.9035 1.0000 0.6316 
AR 0.5877 0.4386 0.5965 0.6491 1.0000 
Average precision:  
Overall 0.778, within IE 0.853, IE-Semitic 0.645 
Table 12. Effect of further languages on CLIR 
Generally, these results confirm the finding of 
Chew and Abdelali (2007) about adding more lan-
guages; doing so enhances the ability to identify 
translations across language boundaries. Across the 
board (for Arabic and other languages), the in-
crease in precision gained by adding Afrikaans, 
Czech, Danish, Dutch and Hungarian is highly sig-
nificant (compared to the part of Table 5 which 
deals with Japanese, overall average precision in-
creased from 0.680 to 0.739, with p ? 1.17 ? 10-11; 
for cross-language-group retrieval, from 0.485 to 
0.537, with p ? 9.31 ? 10-4; for pairs within IE, 
from 0.789 to 0.853 with p ? 2.81 ? 10-11). In con-
trast with most previous results, however, with the 
further addition of Hebrew, precision was boosted 
primarily for Arabic (0.537 to 0.645 with p ? 4.39 
? 10-13). From this and previous results, it appears 
that there is no clear pattern to when the addition 
of a Semitic language in training was beneficial to 
the Semitic language in testing. 
5 Conclusion and future work 
Based on our results, it appears that although 
clear genetic relationships exist between certain 
languages in our training data, it was less possible 
than we had anticipated to leverage this to our ad-
vantage. We had expected, for example, that by 
including multiple Semitic languages in the train-
ing data within an LSA framework, we would have 
been able to improve cross-language information 
retrieval results specifically for Arabic. Perhaps 
surprisingly, the greatest benefit of including addi-
tional Semitic languages in the training data is 
most consistently to non-Semitic languages. A 
clear observation is that any additional languages 
in training are generally beneficial, and the benefit 
of additional languages can be considerably greater 
than the benefits of linguistic pre-processing (such 
as morphological analysis). Secondly, it is not nec-
essarily the case that cross-language retrieval with 
Arabic is helped most by including other Semitic 
languages, despite the genetic relationship. Finally, 
as we expected, we were able to rule out script 
similarity (e.g. between Persian and Arabic) as a 
factor which might improve precision. Our results 
appear to demonstrate clearly that language relat-
edness is much more important in the training data 
than use of the same script. 
Finally, to improve cross-language retrieval with 
Arabic ? the most difficult case in the languages 
we tested ? we attempted to ?prime? the training 
data by including Arabic morphological analysis. 
This did lead to a statistically significant improve-
ment overall in CLIR, but ? perhaps paradoxically 
? the improvement specifically for cross-language 
retrieval with Arabic was negligible in most cases. 
The only two measures which were successful in 
boosting precision for Arabic significantly were (1) 
the inclusion of Modern Hebrew in the training 
data; and (2) the elimination of vowels in the An-
cient Hebrew training data ? both measures which 
would have placed the training data for the two 
Semitic languages (Arabic and Hebrew) on a more 
common statistical footing. These results appear to 
confirm our hypothesis that there is value, within 
the current framework, of ?pairing? genetically re-
lated languages in the training data. In short, lan-
guage relatedness does matter in cross-language 
information retrieval. 
6 Acknowledgement 
Sandia is a multiprogram laboratory operated by 
Sandia Corporation, a Lockheed Martin Company, 
for the United States Department of Energy?s Na-
tional Nuclear Security Administration under con-
tract DE-AC04-94AL85000. 
7 References 
Abdou, S., Ruck, P., and Savoy, J. 2005. Evaluation of 
Stemming, Query Expansion and Manual Indexing 
Approaches for the Genomic Task. In Proceedings of 
TREC 2005. 
Berry, M. W., Dumais, S. T., and O?Brien, G. W. 1994. 
Using Linear Algebra for Intelligent Information Re-
trieval. SIAM: Review, 37, 573-595. 
Biola University. 2005-2006. The Unbound Bible. Ac-
cessed at http://www.unboundbible.com/ on February 
27, 2007. 
Chew, P. A., and Abdelali, A. 2007. Benefits of the 
?Massively Parallel Rosetta Stone?: Cross-Language 
Information Retrieval with over 30 Languages, Pro-
ceedings of the 45th Annual Meeting of the Associa-
tion for Computational Linguistics, ACL 2007. Pra-
gue, Czech Republic, June 23?30, 2007. pp. 872-879. 
Chew, P. A., Kegelmeyer, W. P., Bader, B. W. and Ab-
delali, A. Forthcoming. The Knowledge of Good and 
Evil: Multilingual Ideology Classification with 
PARAFAC2 and Maching Learning. 
Chew, P. A., Verzi, S. J., Bauer, T. L., and McClain, J. 
T. 2006. Evaluation of the Bible as a Resource for 
Cross-Language Information Retrieval. Proceedings 
of the Workshop on Multilingual Language Re-
sources and Interoperability, 68?74. 
Darwish, K. 2002. Building a shallow Arabic morpho-
logical analyzer in one day. In Proceedings of the 
Association for Computational Linguistics (ACL-02), 
40th Anniversary Meeting. pp. 47-54. 
Dumais, S. T. 1991. Improving the Retrieval of Infor-
mation from External Sources. Behavior Research 
Methods, Instruments, and Computers 23 (2), 229-
236. 
Dumais, S. T., Furnas, G. W., Landauer, T. K., Deer-
wester, S. and Harshman, R. 1998. Using Latent Se-
mantic Analysis to Improve Access to Textual In-
formation. In CHI?88: Proceedings of the SIGCHI 
Conference on Human Factors in Computing Sys-
tems, 281-285. ACM Press. 
Frakes, W. B. and Baeza-Yates, R. 1992. Information 
Retrieval: Data Structures and Algorithms. Prentice-
Hall: New Jersey. 
Habash, N. 2004. Large Scale Lexeme Based Arabic 
Morphological Generation. In Proc. of Traitement 
Automatique du Langage Naturel. 
Larkey, L., Ballesteros, L. and Connell, M. 2002. Im-
proving Stemming for Arabic Information Retrieval: 
Light Stemming and Co-Occurrence Analysis. SIGIR 
2002, Finland, pp. 275-282. 
Larkey, L. and Connell, M. 2002. Arabic Information 
Retrieval at Umass in TREC-10. In Voorhees, E.M. 
and Harman, D.K. (eds.): The Tenth Text Retrieval 
Conference, TREC 2001 NIST Special Publication 
500-250, pp. 562-570. 
Lavie, A., Peterson, E., Probst, K., Wintner, S., and Ey-
tani, Y. 2004. Rapid Prototyping of a Transfer-Based 
Hebrew-to-English Machine Translation System. In 
Proceedings of the TMI-04. 
Mathieu, B., Besan?on, R. and Fluhr, C. 2004. Multilin-
gual Document Clusters Discovery. Recherche 
d?Information Assist?e par Ordinateur (RIAO) Pro-
ceedings, 1-10. 
Oard, D. and Gey, F. 2002. The TREC 2002 Ara-
bic/English CLIR Track, NIST TREC 2002 Proceed-
ings, pp. 16-26. 
Peters, C. (ed.). 2001. Cross-Language Information 
Retrieval and Evaluation: Workshop of the Cross-
Language Evaluation Forum, CLEF 2000. Berlin: 
Springer-Verlag. 
Resnik, P., Olsen, M. B., and Diab, M. 1999. The Bible 
as a Parallel Corpus: Annotating the "Book of 2000 
Tongues". Computers and the Humanities, 33, 129-
153. 
Van Rijsbergen, C. 1979. Information Retrieval (2nd 
edition). Butterworth: London. 
Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 872?879,
Prague, Czech Republic, June 2007. c?2007 Association for Computational Linguistics
Benefits of the ?Massively Parallel Rosetta Stone?:  
Cross-Language Information Retrieval with over 30 Languages 
Peter A. Chew 
Sandia National Laboratories 
P. O. Box 5800, MS 1012 
Albuquerque, NM 87185-1012, USA 
pchew@sandia.gov
Ahmed Abdelali 
New Mexico State University 
P.O. Box 30002, Mail Stop 3CRL 
Las Cruces, NM 88003-8001, USA 
ahmed@crl.nmsu.edu
Abstract 
In this paper, we describe our experiences 
in extending a standard cross-language in-
formation retrieval (CLIR) approach 
which uses parallel aligned corpora and 
Latent Semantic Indexing. Most, if not 
all, previous work which follows this ap-
proach has focused on bilingual retrieval; 
two examples involve the use of French-
English or English-Greek parallel cor-
pora. Our extension to the approach is 
?massively parallel? in two senses, one 
linguistic and the other computational. 
First, we make use of a parallel aligned 
corpus consisting of almost 50 parallel 
translations in over 30 distinct languages, 
each in over 30,000 documents. Given the 
size of this dataset, a ?massively parallel? 
approach was also necessitated in the 
more usual computational sense. Our re-
sults indicate that, far from adding more 
noise, more linguistic parallelism is better 
when it comes to cross-language retrieval 
precision, in addition to the self-evident 
benefit that CLIR can be performed on 
more languages. 
1 Introduction 
Approaches to cross-language information retrieval 
(CLIR) fall generally into one of two types, or 
some combination thereof: the ?query translation? 
approach or the ?parallel corpus? approach. The 
first of these, which is perhaps more common, in-
volves translation of the query into the target lan-
guage, for example using machine translation or 
on-line dictionaries.  The second makes use of par-
allel aligned corpora as training sets. One approach 
which uses parallel corpora does this in conjunc-
tion with Latent Semantic Indexing (LSI) (Lan-
dauer and Littman 1990, Young 1994). According 
to Berry et al (1994:21), the use of LSI with paral-
lel corpora can be just as effective as the query 
translation approach, and avoids some of the draw-
backs of the latter, discussed in Nie et al (1999). 
Generally, research in CLIR has not attempted 
to use very many languages at a time (see for ex-
ample Nie and Jin 2002). With query translation 
(although that is not the approach that Nie and Jin 
take), this is perhaps understandable, as for each 
new language, a new translation algorithm must be 
included. The effort involved in extending query 
translation to multiple languages, therefore, is 
likely to be in proportion to the number of lan-
guages. 
With parallel corpora, the reason that research 
has been limited to only a few languages at a time 
? and usually just two at a time, as in the LSI work 
cited above ? is more likely to be rooted in the 
widespread perception that good parallel corpora 
are difficult to obtain (see for example Asker 
2004). However, recent work (Resnik et al 1999, 
Chew et al 2006) has challenged this idea. 
One advantage of a ?massively parallel? multi-
lingual corpus is perhaps self-evident: within the 
LSI framework, the more languages are mapped 
into the single conceptual space, the fewer restric-
tions there are on which languages documents can 
be selected from for cross-language retrieval. 
However, several questions were raised for us as 
872
we contemplated the use of a massively parallel 
corpus. Would the addition of languages not used 
in testing create ?noise? for a given language pair, 
reducing the precision of CLIR? Could partially 
parallel corpora be used? Our work appears to 
show both that more languages are generally bene-
ficial, and even incomplete parallel corpora can be 
used. In the remainder of this paper, we provide 
evidence for this claim. The paper is organized as 
follows: section 2 describes the work we undertook 
to build the parallel corpus and its characteristics. 
In section 3, we outline the mechanics behind the 
'Rosetta-Stone' type method we use for cross-
language comparison. In section 4, we present and 
discuss the results of the various tests we per-
formed. Finally, we conclude on our findings in 
section 5. 
2 The massively parallel corpus  
Following Chew et al (2006), our parallel corpus 
was built up from translations of the Bible which 
are freely available on the World Wide Web. Al-
though reliable comparable statistics are hard to 
find, it appears to be generally agreed that the Bi-
ble is the world?s most widely translated book, 
with complete translations in 426 languages and 
partial translations in 2,403 as of December 31, 
2005 (Bible Society, 2006). Great care is taken 
over the translations, and they are alignable by 
chapter and verse. According to Resnik et al 
(1999), the Bible?s coverage of modern vocabulary 
may be as high as 85%. The vast majority of the 
translations we used came from the ?Unbound Bi-
ble? website (Biola University, 2005-2006); from 
this website, the text of a large number of different 
translations of the Bible can ? most importantly for 
our purposes ? be downloaded in a tab-delimited 
format convenient for loading into a database and 
then indexing by chapter and verse in order to en-
sure ?parallelism? in the corpus. The number of 
translations available at the website is apparently 
being added to, based on our observations access-
ing the website on a number of different occasions. 
The languages we have included in our multilin-
gual parallel corpus include those both ancient and 
modern, and are as follows: 
Language No. of 
translations 
Used in 
tests 
Afrikaans 1 12+ 
Albanian 1 27+ 
Arabic 1 All 
Chinese (Simplified) 1 44+ 
Chinese (Traditional) 1 44+ 
Croatian 1 27+ 
Czech 2 12+ 
Danish 1 12+ 
Dutch 1 12+ 
English 7 All 
Finnish 3 27+ 
French 2 All 
German 4 8,27+ 
Greek (New Testament) 2 46+ 
Hebrew (Old Testament) 1 46+ 
Hebrew (Modern) 1 6,12+ 
Hungarian 1 6+ 
Italian 2 8,27+ 
Japanese* 1 9+ 
Korean 1 27+ 
Latin 1 8,9,28+ 
Maori 1 7,8,9,27+ 
Norwegian 1 27+ 
Polish* 1 27+ 
Portuguese 1 27+ 
Russian 1 All 
Spanish 2 All 
Swedish 1 27+ 
Tagalog 1 27+ 
Thai 1 27+ 
Vietnamese 1 27,44+ 
Table 1. Languages1
The languages above represent many of the ma-
jor language groups: Austronesian (Maori and 
Tagalog); Altaic (Japanese and Korean); Sino-
Tibetan (Chinese); Semitic (Arabic and Hebrew);  
Finno-Ugric (Finnish and Hungarian); Austro-
Asiatic (Vietnamese); Tai-Kadai (Thai); and Indo-
European (the remaining languages). The two New 
Testament Greek versions are the Byzan-
tine/Majority Text (2000), and the parsed version 
of the same text, in which we treated distinct mor-
phological elements (such as roots or inflectional 
endings) as distinct terms. Overall, the list includes 
 
1 Translations in languages marked with an asterisk above 
were obtained from websites other than the ?Unbound Bible? 
website. ?Used in tests? indicates in which tests in Table 2 
below the language was used as training data, and hence the 
order of addition of languages to the training data. 
873
47 versions in 31 distinct languages (assuming 
without further discussion here that each entry in 
the list represents a distinct language). 
We aligned the translations by verse, and, since 
there are some differences in versification between 
translations (for example, the Hebrew Old Testa-
ment includes the headings for the Psalms as sepa-
rate verses, unlike most translations), we spent 
some time cleaning the data to ensure the align-
ment was as good as possible, given available re-
sources and our knowledge of the languages. (Even 
after this process, the alignment was not perfect, 
and differences in how well the various transla-
tions were aligned may account for some of the 
variability in the outcome of our experiments, de-
pending on which translations were used.) The end 
result was that our parallel corpus consisted of 
31,226 ?mini-documents? ? the total number of text 
chunks2 after the cleaning process, aligned across 
all 47 versions. The two New Testament Greek 
versions, and the one Old Testament Hebrew ver-
sion, were exceptions because these are only par-
tially complete; the former have text in only 7,953 
of the verses, and the latter has text in 23,266 of 
the verses. For some versions, a few of the verse 
translations are incomplete where a particular verse 
has been skipped in translation; this also explains 
the fact that the number of Hebrew and Greek text 
chunks together do not add up to 31,226. However, 
the number of such verses is negligible in compari-
son to the total. 
3 Framework 
The framework we used was the standard LSI 
framework described in Berry et al (1994). Each 
aligned mini-document from the parallel corpus 
consists of the combination of text from all the 31 
languages. A document-by-term matrix is formed 
in which each cell represents a weighted frequency 
of a particular term t in a particular document k.
We used a standard log-entropy weighting scheme, 
where the weighted frequency W is given by: 
 
W = log2 (F) ? (1 + Ht / log2 (N)) 
 
where F is the raw frequency of t in k, Ht is the 
standard ?p log p? measure of the entropy of the 
term across all documents, and N is the number of 
 
2 The text chunks generally had the same boundaries as the 
verses in the original text. 
documents in the corpus. The last term in the ex-
pression above, log2 (N), is the maximum entropy 
that any term can have in the corpus, and therefore 
(1 + Ht / log2 (N)) is 1 for the most distinctive 
terms in the corpus, 0 for those which are least dis-
tinctive. 
The sparse document-by-term matrix is sub-
jected to singular value decomposition (SVD), and 
a reduced non-sparse matrix is output. Generally, 
we used the output corresponding to the top 300 
singular values in our experiments. When we had a 
smaller number of languages in the mix, it was 
possible to use SVDPACK (Berry et al 1996), 
which is an open-source non-parallel algorithm for 
computing the SVD, but for larger problems (in-
volving more than a couple of dozen parallel ver-
sions), use of a parallel algorithm (in a library 
called Trilinos) was necessitated. (This was run on 
a Linux cluster consisting of 4,096 dual CPU com-
pute nodes, running on Dell PowerEdge 1850 1U 
Servers with 6GB of RAM.) 
In order to test the precision versus recall of our 
framework, we used translations of the 114 suras 
of the Qu?ran into five languages, Arabic, English, 
French, Russian and Spanish. The number of 
documents used for testing is fairly small, but large 
enough to give comparative results for our pur-
poses which are still highly statistically significant. 
The test set was split into each of the 10 possible 
language-pair combinations: Arabic-English, Ara-
bic-French, English-French, and so on. 
For each language pair and test, 228 distinct 
?queries? were submitted ? each query consisting 
of one of the 228 sura ?documents?. If the highest-
ranking document in the other language of the pair 
was in fact the query?s translation, then the result 
was deemed ?correct?. To assess the aggregate per-
formance of the framework, we used two meas-
ures: average precision at 0 (the maximum 
precision at any level of recall), and average preci-
sion at 1 document (1 if the ?correct? document 
ranked highest, zero otherwise). The second meas-
ure is a stricter one, but we generally found that 
there is a high rate of correlation between the two 
measures anyway. 
4 Results and Discussion 
The following tables show the results of our tests. 
First, we present in Table 2 the overall summary, 
874
with averages across all language pairs used in 
testing. 
 
Average precision No. of 
parallel 
versions
At 0 at 1 doc. 
2 0.706064 0.571491 
3 0.747620 0.649269 
4 0.617615 0.531873 
5 0.744951 0.656140 
6 0.811666 0.732602 
7 0.827246 0.753070 
8 0.824501 0.750000 
9 0.823430 0.746053 
12 0.827761 0.752632 
27 0.825577 0.751316 
28 0.823137 0.747807 
44 0.839346 0.765789 
46 0.839319 0.766667 
47 0.842936 0.774561 
Table 2. Summary results for all language pairs 
 
From the above, the following should be clear: 
as more parallel translations are added to the index, 
the average precision rises considerably at first, 
and then begins to level off after about the seventh 
parallel translation. The results will of course vary 
according to which combination of translations is 
selected for the index. The number of such combi-
nations is generally very large: for example, with 
47 translations available, there are 47! / (40! 7!), or 
62,891,499, possible ways of selecting 7 transla-
tions. Thus, for any particular number of parallel 
versions, we had to use some judgement in which 
parallel versions to select, since there was no way 
to achieve anything like exhaustive coverage of the 
possibilities. 
Further, with more than 7 parallel translations, 
there is certainly no justification for saying that 
adding more translations or languages increases the 
?noise? for languages in the test set, since beyond 7 
the average precision remains fairly level. If any-
thing, in fact, the precision still appears to rise 
slightly. For example, the average precision at 1 
document rises by more than 0.75 percentage 
points between 46 and 47 versions. Given that in 
each of these experiments, we are measuring preci-
sion 228 times per language pair, and therefore 
2,280 times in total, this small rise in precision is 
significant (p ? 0.034). Interestingly, the 47th ver-
sion to be added was parsed New Testament 
Greek. It appears, therefore, that the parsing helped 
in particular; we also have evidence from other 
experiments (not presented here) that overall preci-
sion is generally improved for all languages when 
Arabic wordforms are replaced by their respective 
citation forms (the bare root, or stem) ? also a form 
of morphological parsing. Ancient Greek, like 
Arabic, is morphologically highly complex, so it 
would be understandable that parsing (or stem-
ming) would help when parsing of either language 
is used in training. 
One other point needs to be made here: the three 
versions added after the 44th version were the three 
incomplete versions (the two Greek versions cover 
just the New Testament, while Ancient Hebrew 
covers just the Old Testament). The above-
mentioned increase in precision which resulted 
from the addition of these three versions is clear 
evidence that even in the case where a parallel cor-
pus is defective for some language(s), including 
those languages can still result in the twofold bene-
fit that (1) those languages are now available for 
analysis, and (2) precision is maintained or in-
creased for the remaining languages. 
Finally, precision at 1 document, the stricter of 
the two measures, is by definition less than or 
equal to precision at 0. This taken into account, it 
is also interesting that the gap between the two 
measures seems to narrow as more parallel transla-
tions and parsing are added, as Figure 1 shows. 
For certain applications where it is important 
that the translation is ranked first, not just highly, 
among all retrieved documents, there is thus a par-
ticular benefit in using a ?massively parallel? 
aligned corpus. 
0%
2%
4%
6%
8%
10%
12%
14%
16%
2 3 4 5 6 7 8 9 12 27 28 44 46 47
Number of parallel translations
Di
ffe
re
nt
ial
in
pe
rc
en
tag
ep
oin
ts
Figure 1. Differential between precision at 0 and 
precision at 1 document, by number of languages 
875
Now we move on to look at more detailed re-
sults by language pair. Figure 2 below breaks 
down the results for precision at 1 document by 
language pair. In all tests, the two languages in 
each pair were (naturally) always included in the 
languages used for training. There is more volatil-
ity in the results by language pair than there is in 
the overall results, shown again at the right of the 
graph, which should come as no surprise since the 
averages are based on samples a tenth of the size. 
Generally, however, the pattern is the same for 
particular language pairs as it is overall; the more 
parallel versions are used in training, the better the 
average precision. 
There are some more detailed observations 
which should also be made from Figure 2. First, 
the average precision clearly varies quite widely 
between language pairs. The language pairs with 
the best average precision are those in which two 
of English, French and Spanish are present. Of the  
five languages used for testing, these three cluster 
together genetically, since all three are Western 
(Germanic or Romance) Indo-European languages. 
Moreover, these are the three languages of the five 
which are written in the Roman alphabet. 
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Spanish-
Arabic
Arabic-
French
Russian-
Arabic
English-
Arabic
Spanish-
Russian
Russian-
French
English-
Russian
English-
Spanish
Spanish-
French
English-
French
OVERALL
Language Pair
Pr
ec
isi
on
at
1d
oc
um
en
t
2 3 4 5 6 7 8 9 12 27 28 44 46 47Number of languages  
Figure 2. Chart of precision at 1 doc. by language pair and number of parallel training versions 
 
However, we believe the explanation for the 
poorer results for language pairs involving either 
Arabic, Russian, or both, can be pinned down to 
something more specific. We have already par-
tially alluded to the obvious difference between 
Arabic and Russian on the one hand, and English, 
French and Spanish on the other: that Arabic and 
Russian are highly morphologically rich, while 
English, French and Spanish are generally analytic 
languages. This has a clear effect on the statistics 
for the languages in question, as can be seen in 
Table 3, which is based on selected translations of 
the Bible for each of the languages in question. 
 
Translation Types Tokens 
English (King James) 12,335 789,744 
Spanish (Reina Valera 1909) 28,456 704,004 
Russian (Synodal 1876) 47,226 560,524 
Arabic (Smith Van Dyke) 55,300 440,435 
French (Darby) 20,428 812,947 
Table 3. Statistics for Bible translations in 5 lan-
guages used in test data 
876
Assuming that the respective translations are 
faithful (and we have no reason to believe other-
wise), and based on the statistics in Table 3, it 
should be the case that Arabic contains the most 
?information? per term (in the information theoretic 
sense), followed by Russian, Spanish, English and 
French.3 Again, this corresponds to our intuition 
that much information is contained in Arabic pat-
terns and Russian inflectional morphemes, which 
in English, French and Spanish would be contained 
in separate terms (for example, prepositions). 
Without additional pre-processing, however, 
LSI cannot deal adequately with root-pattern or 
inflectional morphology. Moreover, it is clearly a 
weakness of LSI, or at least the standard log-
entropy weighting scheme as applied within this 
framework, that it makes no adjustment for differ-
ences in information content per word between 
languages. Even though we can assume near-
equivalency of information content between the 
different translations above, according to the stan-
dard log-entropy weighting scheme there are large 
differences between the total entropy of particular 
parallel documents; in general, languages such as 
English are overweighted while those such as Ara-
bic are underweighted. 
Now that this issue is in perspective, we should 
draw attention to another detail in Figure 2. Note 
that the language pairs which benefited most from 
the addition of Ancient Greek and Hebrew into the 
training data were those which included Russian, 
and Russian-Arabic saw the greatest increase in 
precision. Recall also that the 47th version to be 
added was the parsed Greek, so that essentially 
each Greek morpheme is represented by a distinct 
term. From Figure 2, it seems clear that the inclu-
sion of parsed Greek in particular boosted the pre-
cision for Russian (this is most visible at the right-
hand side of the set of columns for Russian-Arabic 
and English-Russian). There are, after all, notable 
similarities between modern Russian and Ancient 
Greek morphology (for example, the nominal case 
system). Essentially, the parsed Greek acts as a 
?clue? to LSI in associating inflected forms in Rus-
 
3 To clarify the meaning of ?term? here: for all languages ex-
cept Chinese, text is tokenized in our framework into terms 
using regular expressions; each non-word character (such as 
punctuation or white space) is assumed to mark the boundary 
of a word. For Chinese, we made the simplifying assumption 
that each character represented a separate term. 
sian with preposition/non-inflected combinations 
in other languages. These results seem to be further 
confirmation of the notion that parsing just one of 
the languages in the mix helps overall; the greatest 
boost is for those languages with morphology re-
lated to that of the parsed language, but there is at 
least a maintenance, and perhaps a small boost, in 
the precision for unrelated languages too. 
Finally, we turn to look at some effects of the 
particular languages selected for training. Included 
in the results above, there were three separate tests 
run in which there were 6 training versions. In all 
three, Arabic, English, French, Russian and Span-
ish were included. The only factor we varied in the 
three tests was the sixth version. In the three tests, 
we used Modern Hebrew (a Semitic language, 
along with Arabic), Hungarian (a Uralic language, 
not closely related to any of the other five lan-
guages), and a second English version respectively. 
The results of these tests are shown in Figure 3, 
with figures for the test in which only 5 versions 
were included for comparative purposes. 
From these results, it is apparent first of all that 
it was generally beneficial to add a sixth version, 
regardless of whether the version added was Eng-
lish, Hebrew or Hungarian. This is consistent with 
the results reported elsewhere in this paper. Sec-
ond, it is also apparent that the greatest benefit 
overall was had by using an additional English ver-
sion, rather than using Hebrew or Hungarian. 
Moreover, perhaps surprisingly, the use of Hebrew 
in training ? even though Hebrew is related to 
Arabic ? was of less benefit to Arabic than either 
Hungarian or an additional English version. It ap-
pears that the use of multiple versions in the same 
language is beneficial because it enables LSI to 
make use of the many different instantiations in the 
expression of a concept in a single language, and 
that this effect can be greater than the effect which 
obtains from using heterogeneous languages, even 
if there is a genetic relationship to existing lan-
guages. 
877
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Russian-
Arabic
Spanish-
Arabic
Arabic-
French
English-
Arabic
Spanish-
Russian
Russian-
French
English-
Russian
English-
Spanish
Spanish-
French
English-
French
OVERALL
Language pair
Pr
ec
isi
on
at
1d
oc
.
Arabic, English, French, Russian, Spanish Arabic, English, French, Hebrew, Russian, Spanish
Arabic, English, French, Hungarian, Russian, Spanish Arabic, English x 2, French, Russian, Spanish
 
Figure 3. Precision at 1 document for 6 training versions, with results of using different mixes of lan-
guages for training 
 
Figure 3 may also shed some additional light on 
one other detail from Figure 2: a perceptible jump 
in precision between 28 and 44 training versions 
for Arabic-English and Arabic-French. It should be 
mentioned that among the 16 additional versions 
were five English versions (American Standard 
Version, Basic English Bible, Darby, Webster?s 
Bible, and Young?s Literal Translation), and one 
French version (Louis Segond 1910). It seems that 
Figure 2 and Figure 3 both point to the same thing: 
that the use of parallel versions or translations in a 
single language can be particularly beneficial to 
overall precision within the LSI framework ? even 
to a greater extent than the use of parallel transla-
tions in different languages. 
5 Conclusion 
In this paper, we have shown how ?massive paral-
lelism? in an aligned corpus can be used to im-
prove the results of cross-language information 
retrieval. Apart from the obvious advantage (the 
ability to automate the processing of a greater vari-
ety of linguistic data within a single framework), 
we have shown that including more parallel trans-
lations in training improves the precision of CLIR 
across the board. This is true whether the addi-
tional translations are in the language of another 
translation already within the training set, whether 
they are in a related language, or whether they are 
in an unrelated language; although this is not to say 
that these choices do not lead to (generally minor) 
variations in the results. The improvement in preci-
sion also appears to hold whether the additional 
translations are complete or incomplete, and it ap-
pears that morphological pre-processing helps, not 
just for the languages pre-processed, but again 
across the board. 
Our work also offers further evidence that the 
supply of useful pre-existing parallel corpora is not 
perhaps as scarce as it is sometimes claimed to be. 
Compilation of the 47-version parallel corpus we 
used was not very time-consuming, especially if 
the time taken to clean the data is not taken into 
878
account, and all the textual material we used is 
publicly available on the World Wide Web. 
While the experiments we performed were on 
non-standard test collections (primarily because 
the Qu?ran was easy to obtain in multiple lan-
guages), it seems that there is no reason to believe 
our general observation ? that more parallelism in 
the training data is beneficial for cross-language 
retrieval ? would not hold for text from other do-
mains. Whether the genre of text used as training 
data affects the absolute rate of retrieval precision 
for text of a different genre (e.g. news articles, 
shopping websites) is a separate question, and one 
we intend to address more fully in future work. 
In summary, it appears that we are able to 
achieve the results we do partly because of the in-
herent properties of LSI. In essence, when the data 
from more and more parallel translations are sub-
jected to SVD, the LSI ?concepts? become more 
and more reinforced. The resulting trend for preci-
sion to increase, despite ?blips? for individual lan-
guages, can be seen for all languages. To put it in 
more prosaic terms, the more different ways the 
same things are said in, the more understandable 
they become ? including in cross-language infor-
mation retrieval. 
Acknowledgement 
Sandia is a multiprogram laboratory operated by 
Sandia Corporation, a Lockheed Martin Company, 
for the United States Department of Energy?s Na-
tional Nuclear Security Administration under con-
tract DE-AC04-94AL85000. 
References  
Lars Asker. 2004. Building Resources: Experiences 
from Amharic Cross Language Information Re-
trieval. Paper presented at Cross-Language Informa-
tion Retrieval and Evaluation: Workshop of the 
Cross-Language Evaluation Forum, CLEF 2004.
Ricardo Baeza-Yates and Berthier Ribeiro-Neto. 1999. 
Modern Information Retrieval. New York: ACM 
Press. 
Michael Berry, Theresa Do, Gavin O?Brien, Vijay 
Krishna, and Sowmimi Varadhan. 1996. 
SVDPACKC (Version 1.0) User?s Guide. Knoxville, 
TN: University of Tennessee. 
Bible Society. 2006. A Statistical Summary of Lan-
guages with the Scriptures. Accessed at 
http://www.biblesociety.org/latestnews/latest341-
slr2005stats.html on Jan. 5, 2007. 
Biola University. 2005-2006. The Unbound Bible. Ac-
cessed at http://www.unboundbible.com/ on Jan. 5, 
2007. 
Peter Chew, Stephen Verzi, Travis Bauer and Jonathan 
McClain. 2006. Evaluation of the Bible as a Re-
source for Cross-Language Information Retrieval. In 
Proceedings of the Workshop on Multilingual Lan-
guage Resources and Interoperability, 68-74. Syd-
ney: Association for Computational Linguistics. 
Susan Dumais. 1991. Improving the Retrieval of Infor-
mation from External Sources. Behavior Research 
Methods, Instruments, and Computers 23(2):229-
236. 
Julio Gonzalo. 2001. Language Resources in Cross-
Language Text Retrieval: a CLEF Perspective. In 
Carol Peters (ed.). Cross-Language Information Re-
trieval and Evaluation: Workshop of the Cross-
Language Evaluation Forum, CLEF 2000: 36-47. 
Berlin: Springer-Verlag.  
Dragos Munteanu and Daniel Marcu. 2006. Improving 
Machine Translation Performance by Exploiting 
Non-Parallel Corpora. Computational Linguistics 
31(4):477-504. 
Jian-Yun Nie and Fuman Jin. 2002. A Multilingual Ap-
proach to Multilingual Information Retrieval. Pro-
ceedings of the Cross-Language Evaluation Forum,
101-110. Berlin: Springer-Verlag. 
Jian-Yun Nie, Michel Simard, Pierre Isabelle, and Rich-
ard Durand. 1999. Cross-Language Retrieval based 
on Parallel Texts and Automatic Mining of Parallel 
Texts from the Web. Proceedings of the 22nd Annual 
International ACM SIGIR Conference on Research 
and Development in Information Retrieval, 74-81, 
August 15-19, 1999, Berkeley, CA.  
Carol Peters (ed.). 2001. Cross-Language Information 
Retrieval and Evaluation: Workshop of the Cross-
Language Evaluation Forum, CLEF 2000. Berlin: 
Springer-Verlag. 
Recherche appliqu?e en linguistique informatique 
(RALI). 2006. Corpus align? bilingue anglais-
fran?ais. Accessed at http://rali.iro.umontreal.ca/ on 
February 22, 2006. 
Philip Resnik, Mari Broman Olsen, and Mona Diab. 
1999. The Bible as a Parallel Corpus: Annotating the 
"Book of 2000 Tongues". Computers and the Hu-
manities, 33: 129-153.  
879
