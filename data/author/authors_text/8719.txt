TIPS: A Translingual Information Processing System
Y. Al-Onaizan, R. Florian, M. Franz, H. Hassan, Y. S. Lee, S. McCarley, K.
Papineni, S. Roukos, J. Sorensen, C. Tillmann, T. Ward, F. Xia
IBM T. J. Watson Research Center
Yorktown Heights
Abstract
Searching online information is
increasingly a daily activity for many
people. The multilinguality of online
content is also increasing (e.g. the
proportion of English web users, which
has been decreasing as a fraction the
increasing population of web users, dipped
below 50% in the summer of 2001). To
improve the ability of an English speaker
to search mutlilingual content, we built a
system that supports cross-lingual search
of an Arabic newswire collection and
provides on demand translation of Arabic
web pages into English. The cross-lingual
search engine supports a fast search
capability (sub-second response for typical
queries) and achieves state-of-the-art
performance in the high precision region
of the result list. The on demand statistical
machine translation uses the Direct
Translation model along with a novel
statistical Arabic Morphological Analyzer
to yield state-of-the-art translation quality.
The on demand SMT uses an efficient
dynamic programming decoder that
achieves reasonable speed for translating
web documents.
Overview
Morphologically rich languages like Arabic
(Beesley, K. 1996) present significant challenges
to many natural language processing applications
as the one described above because a word often
conveys complex meanings decomposable into
several morphemes (i.e. prefix, stem, suffix). By
segmenting words into morphemes, we can
improve the performance of natural language
systems including machine translation (Brown et
al. 1993) and information retrieval (Franz, M.
and McCarley, S. 2002). In this paper, we
present a cross-lingual English-Arabic search
engine combined with an on demand Arabic-
English statistical machine translation system
that relies on source language analysis for both
improved search and translation. We developed
novel statistical learning algorithms for
performing Arabic word segmentation (Lee, Y.
et al2003) into morphemes and morphological
source language (Arabic) analysis (Lee, Y. et al
2003b). These components improve both mono-
lingual (Arabic) search and cross-lingual
(English-Arabic) search and machine
translation. In addition, the system supports
either document translation or convolutional
models for cross-lingual search (Franz, M. and
McCarley, S. 2002).
The overall demonstration has the following
major components:
1. Mono-lingual search: uses Arabic word
segmentation and an okapi-like search
engine for document ranking.
2. Cross-lingual search: uses Arabic word
segmentation and morphological
analysis along with a statistical
morpheme translation matrix in a
convolutional model for document
ranking. The search can also use
document translation into English to
rank the Arabic documents. Both
approaches achieve similar precision in
the high precision region of retrieval.
The English query is also
morphologically analyzed to improve
performance.
3. OnDemand statistical machine
translation: this component uses both
analysis components along with a direct
channel translation model with a fast
dynamic programming decoder
(Tillmann, C. 2003). This system
                                                               Edmonton, May-June 2003
                                                              Demonstrations , pp. 1-2
                                                         Proceedings of HLT-NAACL 2003
achieves state-of-the-art Arabic-English
translation quality.
4. Arabic named entity detection and
translation: we have 31 categories of
Named Entities (Person, Organization,
etc.) that we detect and highlight in
Arabic text and provide the translation
of these entities into English. The
highlighted named entities help the user
to quickly assess the relevance of a
document.
All of the above functionality is available
through a web browser. We indexed the Arabic
AFP corpus about 330k documents for the
demonstration. The resulting search engine
supports sub-second query response. We also
provide an html detagging capability that allows
the translation of Arabic web pages while trying
to preserve the original layout as much as
possible in the on demand SMT component. The
Arabic Name Entity Tagger is currently run as an
offline process but we expect to have it online by
the demonstration time. We aslo include two
screen shots of the demonstration system.
Acknowledgments
This work was partially supported by the
Defense Advanced Research Projects Agency
and monitored by SPAWAR under contract No.
N66001-99-2-8916. The views and findings
contained in this material are those of the authors
and do not necessarily reflect the position of
policy of the Government and no official
endorsement should be inferred.
References
Beesley, K. 1996. Arabic Finite-State
Morphological Analysis and Generation.
Proceedings of COLING-96, pages 89? 94.
Brown, P., Della Pietra, S., Della Pietra, V., and
Mercer, R. 1993. The mathematics of statistical
machine translation: Parameter Estimation.
Computational Linguistics, 19(2): 263?311.
Franz, M. and McCarley, S. 2002. Arabic
Information Retrieval at IBM. Proceedings
of TREC 2002, pages 402?405.
Lee, Y., Papineni, K., Roukos, S.,
Emam, O., and Hassan, H. 2003. Language
Model Based Arabic Word Segmentation.
Submitted for publication.
Lee, Y., Papineni, K., Roukos, S., Emam,
O., and Hassan, H. 2003b. Automatic
Induction of Morphological Analysis for
Statistical Machine Translation. Manuscript in
preparation.
Tillmann, C., 2003. Word Reordering and a
DP Beam Search Algorithm for Statistical
Machine Translation. Computational
Linguistics, 29(1): 97-133.
Proceedings of NAACL HLT 2009: Short Papers, pages 201?204,
Boulder, Colorado, June 2009. c?2009 Association for Computational Linguistics
Improving Coreference Resolution by Using Conversational Metadata
Xiaoqiang Luo and Radu Florian and Todd Ward
IBM T.J. Watson Research Center
Yorktown Heights, NY 10598
{xiaoluo,raduf,toddward}@us.ibm.com
Abstract
In this paper, we propose the use of metadata
contained in documents to improve corefer-
ence resolution. Specifically, we quantify the
impact of speaker and turn information on the
performance of our coreference system, and
show that the metadata can be effectively en-
coded as features of a statistical resolution sys-
tem, which leads to a statistically significant
improvement in performance.
1 Introduction
Coreference resolution aims to find the set of lin-
guistic expressions that refer to a common entity. It
is a discourse-level task given that the ambiguity of
many referential relationships among linguistic ex-
pressions can only be correctly resolved by examin-
ing information extracted from the entire document.
In this paper, we focus on exploiting the struc-
tural information (e.g., speaker and turn in conversa-
tional documents) represented in the metadata of an
input document. Such metadata often coincides with
the discourse structure, and is presumably useful to
coreference resolution. The goal of this study is to
quantify the effect metadata. To this end, informa-
tion contained in metadata is encoded as features in
our coreference resolution system, and statistically
significant improvement is observed.
The rest of the paper is organized as follows.
In Section 2 we describe the data set on which
this study is based. In Section 3 we first show
how to incorporate information carried by metadata
into a statistical coreference resolution system. We
also quantify the impact of metadata when they are
treated as extraneous data. Results and discussions
of the results are also presented in that section.
2 Data Set
This study uses the 2007 ACE data. In the ACE
program, a mention is textual reference to an
object of interest while the set of mentions in a
document referring to the same object is called
entity. Each mention is of one of 7 entity
types: FAC(cility), GPE (Geo-Political Entity),
LOC(ation), ORG(anization), PER(son), VEH(icle),
and WEA(pon). Every entity type has a prede-
fined set of subtypes. For example, ORG sub-
types include commercial,governmental and
educational etc, which reflect different sub-
groups of organizations. Mentions referring to the
same entity share the same type and subtype. A
mention can also be assigned with one of 3 men-
tion types: either NAM(e), NOM(inal), or PRO(noun).
Accordingly, entities have ?levels:? if an entity con-
tains at least one NAM mention, its level is NAM; or
if it does not contain any NAM mention, but contains
at least one NOM mention, then the entity is of level
NOM; if an entity has only PRO mention(s), then its
level is PRO. More information about ACE entity
annotation can be found in the official annotation
guideline (Linguistic Data Consortium, 2008).
The ACE 2007 documents come from a variety of
sources, namely newswire, broadcast conversation,
broadcast news, Usenet, web log and telephone con-
versation. Some of them contain rich metadata, as
illustrated in the following excerpt of one broadcast
conversation document:
<DOC>
<DOCID>CNN_CF_20030303.1900.00</DOCID>
<TEXT>
<TURN>
<SPEAKER> Begala </SPEAKER>
Well, we?ll debate that later on in the
show. We?ll have a couple of experts
come out, ...
201
</TURN>
<TURN>
<SPEAKER> Novak </SPEAKER>
Paul, as I understand your definition
of a political -- of a professional
politician based on that is somebody
who is elected to public office. ...
</TURN>
...
</TEXT>
</DOC>
In this example, SPEAKER and TURN informa-
tion are marked by their corresponding SGML tags.
Such metadata provides structural information: for
instance, the metadata implies that Begala is the
speaker of the utterance ?Well, we?ll debate ..., ?
and Novak the speaker of the utterance ?Paul, as
I understand your definition ...? Intuitively, knowing
the speakers of the previous and current turn would
make it a lot easier to find the right antecedent of
pronominal mentions I and your in the sentence:
?Paul, as I understand your definition ...?
Documents in non-conversational genres (e.g.
newswire documents) also contain speaker and quo-
tation, which resemble conversational utterance, but
they are not annotated. For these documents, we
use heuristics (e.g., existence of double or single
quote, a short list of communication verb lemmas
such as ?say,? ?tell? and ?speak? etc) to determine
the speaker of a direct quotation if necessary.
3 Impact of Metadata
In this section we describe how metadata is used to
improve our statistical coreference resolution sys-
tem.
3.1 Resolution System
The coreference system used in our study is a data-
driven, machine-learning-based system. Mentions
in a document are processed sequentially by men-
tion type: NAM mentions are processed first, fol-
lowed by NOM mentions and then PRO mentions.
The first mention is used to create an initial entity
with a deterministic score 1. The second mention
can be either linked to the first entity, or used to cre-
ate a new entity, and the two actions are assigned a
score computed from a log linear model. This pro-
cess is repeated until all mentions in a document are
processed. During training time, the process is ap-
plied to the training data and training instances (both
positive and negative) are generated. At testing time,
the same process is applied to an input document
and the hypothesis with the highest score is selected
as the final coreference result. At the core of the
coreference system is a conditional log linear model
P (l|e,m) which measures how likely a mention m
is or is not coreferential with an existing entity e.
The modeling framework provides us with the flexi-
bility to integrate metadata information by encoding
it as features.
The coreference resolution system employs a va-
riety of lexical, semantic, distance and syntactic
features(Luo et al, 2004; Luo and Zitouni, 2005).
The full-blown system achieves an 56.2% ACE-
value score on the official 2007 ACE test data,
which is about the same as the best-performing sys-
tem in the Entity Detection and Recognition (EDR)
task (NIST, 2007). So we believe that the resolution
system is fairly solid.
The aforementioned 56.2% score includes men-
tion detection (i.e., finding mention boundaries and
predicting mention attributes) and coreference res-
olution. Since this study is about coreference res-
olution only, the subsequent experiments, are thus
performed on gold-standard mentions. We split the
ACE 2007 data into a training set consisting of 499
documents, and a test set of 100 documents. The
training and test split ratio is roughly the same across
genres. The performance numbers reported in the
subsequent subsections are on the 100-document de-
velopment test set.
3.2 Metadata Features
For conversational documents with speaker and turn
information, we compute a group of binary features
for a candidate referent r and the current mention
m. Feature values are 1 if the conditions described
below hold:
? if r is a speaker, m is a pronominal mention and
r utters the sentence containing m.
? if r is a speaker, m is pronoun and r utters the
sentence one turn before the one containing m.
? if mention r and mention m are seen in the
same turn.
? if mention r and mention m are in two consec-
utive turns.
Note that the first feature is not subsumed by the
third one since a turn may contain multiple sen-
tences. For the same reason, the last feature does not
subsume the second one. For the sample document
in Section 2, the first feature fires if r = Novak and
m = I; the second features fires if r = Begala
202
and m = I; the third feature fires if r = Paul
and m = I; and lastly, the fourth feature fires if
r = We and m = I. For ACE documents that
do not carry turn and speaker information such as
newswire, we use heuristic rules to empirically de-
termine the speaker and the corresponding quota-
tions before computing these features.
To test the effect of the feature group, we trained
two models: a baseline system without speaker and
turn features, and a contrast system by adding the
speaker and turn features to the baseline system. The
contrast results are tabulated in Table 1. We observe
an overall 0.7 point ACE-value improvement. We
also compute the ACE-values at document level for
the two systems, and a paired Wilcoxon (Wilcoxon,
1945) rank-sum test is conducted, which indicates
that the difference between the two systems is statis-
tically significant at level p ? 0.002.
Note that the features often help link pronouns
with their antecedents in conversational documents.
But ACE-value is a weighted metric which heav-
ily discounts pronominal mentions and entities. We
suspect that the effect of speaker and turn informa-
tion could be larger if we weigh all mention types
equally. This is confirmed when we looked at the un-
weighted B3 (Bagga and Baldwin, 1998) numbers
reported by the official ACE08 scorer (column B3
in Table 1): the overall B3 score is improved from
73.8% to 76.4% ? a 2.6 point improvement, which
is almost 4 times as large as the ACE-value change.
System ACE-Value B3
baseline 78.7 73.8
+ Spkr/Turn 79.4 76.4
Table 1: Coreference performance: baseline vs. system
with speaker and turn features.
3.3 Metadata: To Use Or Not to Use?
In the ACE evaluations prior to 2008, mentions in-
side metadata (such as speaker and poster) are anno-
tated and scored as normal mentions, although such
metadata is not part of the actual content of a doc-
ument. An interesting question is: how large an ef-
fect do mentions inside metadata have on the system
performance? If metadata are not annotated as men-
tions, is it still useful to look into them? To answer
this question, we remove speaker mentions in con-
versational documents (i.e., broadcast conversation
and telephone conversation) from both the training
and test data. Then we train two systems:
? System A: the system totally disregards meta-
data.
? System B: the system first recovers speaker
metadata using a very simple rule: all to-
kens within the <SPEAKER> tags are treated
as one PER mention. This rule recovers most
speaker mentions, but it can occasionally re-
sult in errors. For instance, the speaker ?CNN
correspondent John Smith? includes affilia-
tion and profession information and ought to
be tagged as three mentions: ?CNN? as an
ORG(anization) mention, ?correspondent? and
?John Smith? as two PER mentions. With re-
covered speaker mentions, we train a model
and resolve coreference as normal.
After mentions in the test data are chained in Sys-
tem B, speaker mentions are then removed from sys-
tem output so that the coreference result is directly
comparable with that of System A.
The ACE-value comparison between System A
and System B is shown in Table 2. As can be
seen, System B works much better than System A,
which ignores SPEAKER tags. For telephone con-
versations (cts), ACE-value improves as much as 4.6
points. A paired Wilcoxon test on document-level
ACE-values indicates that the difference is statisti-
cally significant at p < 0.016.
System bc cts
A 75.2 66.8
B 76.6 71.4
Abs. Change 1.4 4.6
Table 2: Metadata improves the ACE-value for broadcast
conversation (bc) and telephone conversation (cts) docu-
ments.
The reason why metadata helps is that speaker
mention can be used to localize the coreference pro-
cess and therefore improves the performance. For
example, in the sentences uttered by ?Novak? (cf.
the sample document in Section 2), it is intuitively
straightforward to link mention I with Novak, and
your with Begala ? when speaker mentions are
made present in the coreference system B. On the
other hand, in System A, ?I? is likely to be linked
with ?Paul? because of its proximity of ?Paul? in the
absence of speaker information.
The result of this experiment suggests that, unsur-
prisingly, speaker and turn metadata carry structural
203
information helpful for coreference resolution. Even
if speaker mentions are not annotated (as in System
A), it is still beneficial to make use of it, e.g., by first
identifying them automatically as in System B.
4 Related Work
There is a large body of literature for coreference
resolution based on machine learning (Kehler, 1997;
Soon et al, 2001; Ng and Cardie, 2002; Yang et al,
2008; Luo et al, 2004) approach. Strube and Muller
(2003) presented a machine-learning based pronoun
resolution system for spoken dialogue (Switchboard
corpus). The document genre in their study is simi-
lar to the ACE telephony conversation documents,
and they did include some dialogue-specific fea-
tures, such as an anaphora?s preference for S, VP
or NP, in their system, but they did not use speaker
or turn information. Gupta et al (2007) presents
an algorithm disambiguating generic and referential
?you.?
Cristea et al (1999) attempted to improve coref-
erence resolution by first analyzing the discourse
structure of a document with rhetoric structure the-
ory (RST) (Mann and Thompson, 1987) and then
using the resulted discourse structure in coreference
resolution. Since obtaining reliably the discourse
structure itself is a challenge, they got mixed results
compared with a linear structure baseline.
Our work presented in this paper concentrates on
the structural information represented in metadata,
such as turn or speaker information. Such metadata
provides reliable discourse structure, especially for
conversational documents, which is proven benefi-
cial for enhancing the performance of our corefer-
ence resolution system.
Acknowledgments
This work is partially supported by DARPA GALE
program under the contract number HR0011-06-02-
0001. We?d also like to thank 3 reviewers for their
helpful comments.
References
Amit Bagga and Breck Baldwin. 1998. Algorithms for
scoring coreference chains. In Proceedings of the Lin-
guistic Coreference Workshop at The First Interna-
tional Conference on Language Resources and Eval-
uation (LREC?98), pages 563?566.
Dan Cristea, Nancy lde, Daniel Marcu, Valentin Tablan-
livia Polanyi, and Martin van den Berg. 1999. Dis-
course structure and co-reference: An empirical study.
In Proceedings of ACL Workshop ?The Relation of
Discourse/Dialogue Structure and Reference?. Asso-
ciation for Computational Linguistics.
Surabhi Gupta, Matthew Purver, and Dan Jurafsky. 2007.
Disambiguating between generic and referential ?you?
in dialog. In Proceedings of the 45th ACL(the Demo
and Poster Sessions), pages 105?108, Prague, Czech
Republic, June. Association for Computational Lin-
guistics.
Andrew Kehler. 1997. Probabilistic coreference in infor-
mation extraction. In Proc. of EMNLP.
Linguistic Data Consortium. 2008. ACE (Automatic
Content Extraction) English annotation guidelines
for entities. http://projects.ldc.upenn.edu/ace/docs/
English-Entities-Guidelines v6.5.pdf.
Xiaoqiang Luo and Imed Zitouni. 2005. Multi-
lingual coreference resolution with syntactic fea-
tures. In Proc. of Human Language Technology
(HLT)/Empirical Methods in Natural Language Pro-
cessing (EMNLP).
Xiaoqiang Luo, Abe Ittycheriah, Hongyan Jing, Nanda
Kambhatla, and Salim Roukos. 2004. A mention-
synchronous coreference resolution algorithm based
on the bell tree. In Proc. of ACL.
William C. Mann and Sandra A. Thompson. 1987.
Rhetorical structure theory: A theory of text organiza-
tion. Technical Report RS-87-190, USC/Information
Sciences Institute.
Vincent Ng and Claire Cardie. 2002. Improving ma-
chine learning approaches to coreference resolution.
In Proc. of ACL, pages 104?111.
NIST. 2007. 2007 automatic con-
tent extraction evaluation official results.
http://www.nist.gov/speech/tests/ace/2007/doc/
ace07 eval official results 20070402.html.
Wee Meng Soon, Hwee Tou Ng, and Chung Yong Lim.
2001. A machine learning approach to coreference
resolution of noun phrases. Computational Linguis-
tics, 27(4):521?544.
Michael Strube and Christoph Muller. 2003. A machine
learning approach to pronoun resolution in spoken di-
alogue. In Proceedings of the 41st Annual Meeting of
the Association for Computational Linguistics.
Frank Wilcoxon. 1945. Individual comparisons by rank-
ing methods. Biometrics, I:80?83.
Xiaofeng Yang, Jian Su, Jun Lang, Chew Lim Tan, Ting
Liu, and Sheng Li. 2008. An entity-mention model for
coreference resolution with inductive logic program-
ming. In Proceedings of ACL-08: HLT, pages 843?
851, Columbus, Ohio, June. Association for Computa-
tional Linguistics.
204
BLEU: a Method for Automatic Evaluation of Machine Translation
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing Zhu
IBM T. J. Watson Research Center
Yorktown Heights, NY 10598, USA
{papineni,roukos,toddward,weijing}@us.ibm.com
Abstract
Human evaluations of machine translation
are extensive but expensive. Human eval-
uations can take months to finish and in-
volve human labor that can not be reused.
We propose a method of automatic ma-
chine translation evaluation that is quick,
inexpensive, and language-independent,
that correlates highly with human evalu-
ation, and that has little marginal cost per
run. We present this method as an auto-
mated understudy to skilled human judges
which substitutes for them when there is
need for quick or frequent evaluations.1
1 Introduction
1.1 Rationale
Human evaluations of machine translation (MT)
weigh many aspects of translation, including ade-
quacy, fidelity , and fluency of the translation (Hovy,
1999; White and O?Connell, 1994). A compre-
hensive catalog of MT evaluation techniques and
their rich literature is given by Reeder (2001). For
the most part, these various human evaluation ap-
proaches are quite expensive (Hovy, 1999). More-
over, they can take weeks or months to finish. This is
a big problem because developers of machine trans-
lation systems need to monitor the effect of daily
changes to their systems in order to weed out bad
ideas from good ideas. We believe that MT progress
stems from evaluation and that there is a logjam of
fruitful research ideas waiting to be released from
1So we call our method the bilingual evaluation understudy,
BLEU.
the evaluation bottleneck. Developers would bene-
fit from an inexpensive automatic evaluation that is
quick, language-independent, and correlates highly
with human evaluation. We propose such an evalua-
tion method in this paper.
1.2 Viewpoint
How does one measure translation performance?
The closer a machine translation is to a professional
human translation, the better it is. This is the cen-
tral idea behind our proposal. To judge the quality
of a machine translation, one measures its closeness
to one or more reference human translations accord-
ing to a numerical metric. Thus, our MT evaluation
system requires two ingredients:
1. a numerical ?translation closeness? metric
2. a corpus of good quality human reference trans-
lations
We fashion our closeness metric after the highly suc-
cessful word error rate metric used by the speech
recognition community, appropriately modified for
multiple reference translations and allowing for le-
gitimate differences in word choice and word or-
der. The main idea is to use a weighted average of
variable length phrase matches against the reference
translations. This view gives rise to a family of met-
rics using various weighting schemes. We have se-
lected a promising baseline metric from this family.
In Section 2, we describe the baseline metric in
detail. In Section 3, we evaluate the performance of
BLEU. In Section 4, we describe a human evaluation
experiment. In Section 5, we compare our baseline
metric performance with human evaluations.
                Computational Linguistics (ACL), Philadelphia, July 2002, pp. 311-318.
                         Proceedings of the 40th Annual Meeting of the Association for
2 The Baseline BLEU Metric
Typically, there are many ?perfect? translations of a
given source sentence. These translations may vary
in word choice or in word order even when they use
the same words. And yet humans can clearly dis-
tinguish a good translation from a bad one. For ex-
ample, consider these two candidate translations of
a Chinese source sentence:
Example 1.
Candidate 1: It is a guide to action which
ensures that the military always obeys
the commands of the party.
Candidate 2: It is to insure the troops
forever hearing the activity guidebook
that party direct.
Although they appear to be on the same subject, they
differ markedly in quality. For comparison, we pro-
vide three reference human translations of the same
sentence below.
Reference 1: It is a guide to action that
ensures that the military will forever
heed Party commands.
Reference 2: It is the guiding principle
which guarantees the military forces
always being under the command of the
Party.
Reference 3: It is the practical guide for
the army always to heed the directions
of the party.
It is clear that the good translation, Candidate 1,
shares many words and phrases with these three ref-
erence translations, while Candidate 2 does not. We
will shortly quantify this notion of sharing in Sec-
tion 2.1. But first observe that Candidate 1 shares
"It is a guide to action" with Reference 1,
"which" with Reference 2, "ensures that the
military" with Reference 1, "always" with Ref-
erences 2 and 3, "commands" with Reference 1, and
finally "of the party" with Reference 2 (all ig-
noring capitalization). In contrast, Candidate 2 ex-
hibits far fewer matches, and their extent is less.
It is clear that a program can rank Candidate 1
higher than Candidate 2 simply by comparing n-
gram matches between each candidate translation
and the reference translations. Experiments over
large collections of translations presented in Section
5 show that this ranking ability is a general phe-
nomenon, and not an artifact of a few toy examples.
The primary programming task for a BLEU imple-
mentor is to compare n-grams of the candidate with
the n-grams of the reference translation and count
the number of matches. These matches are position-
independent. The more the matches, the better the
candidate translation is. For simplicity, we first fo-
cus on computing unigram matches.
2.1 Modified n-gram precision
The cornerstone of our metric is the familiar pre-
cision measure. To compute precision, one simply
counts up the number of candidate translation words
(unigrams) which occur in any reference translation
and then divides by the total number of words in
the candidate translation. Unfortunately, MT sys-
tems can overgenerate ?reasonable? words, result-
ing in improbable, but high-precision, translations
like that of example 2 below. Intuitively the prob-
lem is clear: a reference word should be considered
exhausted after a matching candidate word is iden-
tified. We formalize this intuition as the modified
unigram precision. To compute this, one first counts
the maximum number of times a word occurs in any
single reference translation. Next, one clips the to-
tal count of each candidate word by its maximum
reference count,2adds these clipped counts up, and
divides by the total (unclipped) number of candidate
words.
Example 2.
Candidate: the the the the the the the.
Reference 1: The cat is on the mat.
Reference 2: There is a cat on the mat.
Modified Unigram Precision = 2/7.3
In Example 1, Candidate 1 achieves a modified
unigram precision of 17/18; whereas Candidate
2 achieves a modified unigram precision of 8/14.
Similarly, the modified unigram precision in Exam-
ple 2 is 2/7, even though its standard unigram pre-
cision is 7/7.
2Countclip = min(Count,Max Re f Count). In other words,
one truncates each word?s count, if necessary, to not exceed the
largest count observed in any single reference for that word.
3As a guide to the eye, we have underlined the important
words for computing modified precision.
Modified n-gram precision is computed similarly
for any n: all candidate n-gram counts and their
corresponding maximum reference counts are col-
lected. The candidate counts are clipped by their
corresponding reference maximum value, summed,
and divided by the total number of candidate n-
grams. In Example 1, Candidate 1 achieves a mod-
ified bigram precision of 10/17, whereas the lower
quality Candidate 2 achieves a modified bigram pre-
cision of 1/13. In Example 2, the (implausible) can-
didate achieves a modified bigram precision of 0.
This sort of modified n-gram precision scoring cap-
tures two aspects of translation: adequacy and flu-
ency. A translation using the same words (1-grams)
as in the references tends to satisfy adequacy. The
longer n-gram matches account for fluency. 4
2.1.1 Modified n-gram precision on blocks of
text
How do we compute modified n-gram precision
on a multi-sentence test set? Although one typically
evaluates MT systems on a corpus of entire docu-
ments, our basic unit of evaluation is the sentence.
A source sentence may translate to many target sen-
tences, in which case we abuse terminology and re-
fer to the corresponding target sentences as a ?sen-
tence.? We first compute the n-gram matches sen-
tence by sentence. Next, we add the clipped n-gram
counts for all the candidate sentences and divide by
the number of candidate n-grams in the test corpus
to compute a modified precision score, pn, for the
entire test corpus.
pn =
?
C?{Candidates}
?
n-gram?C
Countclip(n-gram)
?
C ??{Candidates}
?
n-gram??C ?
Count(n-gram?) .
4BLEU only needs to match human judgment when averaged
over a test corpus; scores on individual sentences will often vary
from human judgments. For example, a system which produces
the fluent phrase ?East Asian economy? is penalized heavily on
the longer n-gram precisions if all the references happen to read
?economy of East Asia.? The key to BLEU?s success is that
all systems are treated similarly and multiple human translators
with different styles are used, so this effect cancels out in com-
parisons between systems.
2.1.2 Ranking systems using only modified
n-gram precision
To verify that modified n-gram precision distin-
guishes between very good translations and bad
translations, we computed the modified precision
numbers on the output of a (good) human transla-
tor and a standard (poor) machine translation system
using 4 reference translations for each of 127 source
sentences. The average precision results are shown
in Figure 1.
Figure 1: Distinguishing Human from Machine







	



   
