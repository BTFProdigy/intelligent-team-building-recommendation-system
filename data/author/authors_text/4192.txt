Semi-Automatic Generation of Dialogue Applications
in the GEMINI Project ?
Stefan W. Hamerich, Volker Schubert, Volker Schless
TEMIC Speech Dialog Systems, Ulm, Germany
{stefan.hamerich|volker.schubert|volker.schless}@temic-sds.com
Ricardo de Co?rdoba, Jose? M. Pardo, Luis F. d?Haro
Grupo de Tecnolog??a del Habla, Universidad Polite?cnica de Madrid, Madrid, Spain
{cordoba|pardo|lfdharo}@die.upm.es
Basilis Kladis, Otilia Kocsis
Knowledge S.A. (LogicDIS group), Patras, Greece
{bkladis|okocsis}@logicdis.gr
Stefan Igel
Forschungsinstitut fu?r anwendungsorientierte Wissensverarbeitung (FAW), Ulm, Germany
sigel@faw.uni-ulm.de
Abstract
GEMINI (Generic Environment for Multilin-
gual Interactive Natural Interfaces) is an EC
funded research project, which has two main
objectives: First, the development of a flexible
platform able to produce user-friendly interac-
tive multilingual and multi-modal dialogue in-
terfaces to databases with a minimum of hu-
man effort, and, second, the demonstration of
the platform?s efficiency through the develop-
ment of two different applications based on this
platform: EG-Banking, a voice-portal for high-
quality interactions for bank customers, and
CitizenCare, an e-government platform frame-
work for citizen-to-administration interaction
which are available for spoken and web-based
user interaction.
1 Introduction
GEMINI1 exploits experience gained from previous
projects (see e.g. (Ehrlich et al, 1997; Lehtinen et al,
2000)) and from real-world use of similar systems, to
create a generic platform for the development of user-
friendly, natural, high quality, intuitive, platform in-
dependent and multi-modal interactive interfaces to a
wide area of databases employed by information service
providers.
?This work was partly supported by the European Com-
mission?s Information Society Technologies Programme under
contract no. IST-2001-32343. The authors are solely responsi-
ble for the contents of this publication.
1Refer to the GEMINI Project Homepage on
www.gemini-project.org for further details.
The main idea of GEMINI is that, given a database, a
description of its structure and how to access the data as
well as a list of the kinds of requests the user may make,
the system should be able to automatically generate the
necessary dialogue scripts to run the service. In a sense,
this is exactly what a human call center agent does when
being trained for the job. Within the project we strive to
get as close as possible to this ideal.
Specifically, the application generation platform of the
GEMINI project contains generic dialogue components
available for adaptation to new services and languages.
Thus, generation of multilingual and multi-modal inter-
faces is achieved by incorporating the lexical and se-
mantic relations of the databases contents, reducing the
development time and facilitating the system?s mainte-
nance and transportability to different applications and
languages. Furthermore, the platform enables a high de-
gree of personalisation (i.e. user modelling, speaker ver-
ification, etc.).
This paper is organised as follows: First we describe
the application generation platform (AGP) of the GEM-
INI project. Afterwards we introduce the two pilot appli-
cations developed with our platform. Next we compare
our approach with other proposals made by different re-
search groups. Finally we conclude our major findings.
2 Application Generation Platform
The main target of the GEMINI project is the develop-
ment of a platform for generating interactive, multilin-
gual and multi-modal dialogue interfaces to databases
with a minimum of cost and human effort. The AGP is
an integrated set of assistants to generate multi-modal di-
alogue applications in a semi-automatic way. Its open
and modular architecture simplifies the adaptability of
applications designed with the AGP to different use cases.
Connecting to a different database, adding a new modal-
ity or changing a scripting language can be achieved by
adding or replacing the appropriate component without
touching the other aspects of dialogue design again.
The AGP consists of assistants, which are tools (partly
with a GUI) producing models. All these models gen-
erated within the AGP are described in GDialogXML
(GEMINI Dialog XML), which is an object-oriented ab-
stract dialogue modelling language. It was created during
GEMINI for use with the AGP. See Figure 1 for an exam-
ple of the GDialogXML syntax. For a detailed descrip-
tion of GDialogXML refer to (Hamerich et al, 2003).
<Var id = "xPersonName">
<xType><Type refr = "String"/></xType>
</Var>
<Var id = "xPersonList">
<xType><Type refr = "List">
<xItemType>
<Type refr = "ObjEmbed"/>
<xClass><Class refr = "Person"/></xClass>
</xItemType></Type>
</xType>
</Var>
Figure 1: Definition of variables in GDialogXML
All models in the AGP may be saved as libraries for
future applications.
As shown in Figure 2 the AGP is not supposed to com-
plete its task without any human interaction. This is be-
cause there will always be different ways for retrieving
specific information. Consequently, the designer of dia-
logue applications has to select the preferred flow of dia-
logue manually by confirming the proposals of the AGP
components. Most of these operations are simply drag
& drop actions between various windows that contain all
relevant fields, which are automatically created from the
previous tools of the platform.
2.1 AGP Architecture
All components of the AGP are integrated into one frame-
work. This eases the use of the platform and enables the
designer to switch back and forward to different tools in
case she or he wants to add or modify certain dialogues.
In Figure 2 the architecture of the AGP is illustrated.
The whole AGP consists of three layers. These layers are
described in more detail in the following sections.
2.1.1 Framework Layer
The framework layer is the first layer of the AGP (refer
to Figure 2). It includes the application description as-
sistant (ADA), the data modelling assistant (DMA), and
the data connector modelling assistant (DCMA). As indi-
	
	 
		




		



	
