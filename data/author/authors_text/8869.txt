Integrated Feasibility Experiment for Bio-Security: IFE-Bio
A TIDES Demonstration
Lynette Hirschman, Kris Concepcion, Laurie Damianos, David Day, John Delmore, Lisa Ferro,
John Griffith, John Henderson, Jeff Kurtz, Inderjeet Mani, Scott Mardis, Tom McEntee, Keith
Miller, Beverly Nunan, Jay Ponte, Florence Reeder, Ben Wellner, George Wilson, Alex Yeh
The MITRE Corporation
Bedford, Massachusetts, USA and
McLean, Virginia, USA
781-271-7789
lynette@mitre.org
ABSTRACT
As part of MITRE?s work under the DARPA TIDES
(Translingual Information Detection, Extraction and
Summarization) program, we are preparing a series of
demonstrations to showcase the TIDES Integrated Feasibility
Experiment on Bio-Security (IFE-Bio).  The current
demonstration illustrates some of the resources that can be made
available to analysts tasked with monitoring infectious disease
outbreaks and other biological threats.
Keywords
Translation, information extraction, summarization, topic
detection and tracking, system integration.
1. INTRODUCTION
The long-term goal of TIDES is to provide delivery of
information on demand in real-time from live on-line sources. For
IFE-Bio, the resources made available to the analyst include e-
mail, news groups, digital library resources, and eventually (in
later versions), topic-specific segments from broadcast news.
Because of the emphasis on global monitoring, there is a need to
process incoming information in multiple languages.  The system
must deliver the appropriate information content in the
appropriate form and in the appropriate language (taken for now
to be English). This means that the IFE-Bio system will have to
deliver news stories, clusters of relevant documents, threaded
discussions, alerts on new events, tables, summaries (particularly
over document collections), answers to questions, graphs and geo-
spatial  temporal displays of information.
The demonstration system for the Human Language Technology
Conference in March 2001 represents an early stage of the full
IFE-Bio system, with an emphasis on end-to-end processing.
Future demonstrations will make use of MITRE?s Catalyst
architecture, providing an efficient, scalable architecture to
facilitate  integration of multiple stages of linguistic processing.
By June 2001, the IFE-Bio system will provide richer linguistic
processing through the integration of modules contributed by
other TIDES participants. By June 2002, the IFE-Bio system will
include additional functionality, such as real-time broadcast news
feeds, new machine translation components, support for question-
answering, cross-language information retrieval, multi-document
summarization, automatic extraction and normalization of
temporal and spatial information, and automated geospatial and
temporal displays.
2. The IFE-Bio System
The current demonstration (March 2001) highlights the basic
functionality required by an analyst, including:
? Capture of sources, including e-mail, digital library
material, news groups, and web-based resources;
? Categorizing of the sources into multiple orthogonal
hierarchies useful to the analyst, e.g., disease, region, news
source, language;
? Processing of the information through various stages,
including ?zoning? of the text to select the relevant portions
for processing; named entity detection, event detection,
extraction of temporal information, summarization, and
translation from Spanish, Portuguese, and Chinese into
English;
? Access to the information through use of any mail and news
group reader, which allows the analyst to organize, save, and
share the information in a familiar, readily accessible
environment;
? Display of the information in alternate forms, including
color-tagged documents, tables, summaries, graphs, and
geospatial, map-based displays.
Figure 1 below shows the overall functionality envisioned
for the IFE-Bio system, including capture, categorizing,
processing, access and display.
Collection capability for the current IFE-Bio system includes
email, news groups, journals, and Web resources. We have a
complete copy of the ProMED mailings (a moderated source
tracking global infectious disease outbreaks), and are routinely
collecting other information sources from the World Health
Organization and CDC.  In addition, we are collecting several
general global news feeds. Current volume is around 2000
messages per day; we estimate capacity for the current system at
around 4500 messages/day. Once we have integrated a filtering
capability, we expect the volume of messages saved in IFE-Bio
should drop significantly, since many of the global news services
report on a wide range of events and not all need to be passed on
to IFE-Bio analysts.  The categorizing of sources is done based on
the message header. The header is synthesized by extracting key
information about disease name, the country, and other relevant
information such as type of victim and source of information, as
well as date of message receipt.
The processing for the current demonstration system uses a
limited subset of the Catalyst architecture capabilities and a
number of in-house linguistic modules. The linguistic modules in
the current demonstration system include tokenization, sentence
segmentation, part-of-speech tagging, named entity detection,
temporal extraction (Mani and Wilson 2000) and source-specific
event detection.  In addition, we have incorporated the
CyberTrans embedded machine translation system which ?wraps?
available machine translation engines to make them available via
an e-mail or Web interface (Reeder 2000). Single document
summarization is performed by the MITRE WebSumm system
(Mani and Bloedorn 1999).
We carefully chose a light-weight interface mechanism for
delivery of the information to the analyst.  By treating the
incoming streams of data as feeds to a news server, the analyst can
inspect and organize the information using a familiar news and e-
mail browser. The analyst can subscribe to areas of interest, flag
important messages, watch specific threads, and create tailored
filters for monitoring outbreaks. The stories are crossed-posted to
multiple relevant news groups, based on the information in the
header, e.g., a story on Ebola in Africa would be cross posted to
the Africa regional newsgroup and to the Ebola disease
newsgroup. Search by subject and date allow the analyst to select
subsets of the messages for further processing, annotation or
sharing.  The news client provides notification of incoming
messages. In later versions, we plan to integrate topic detection
and tracking capabilities, to provide improved filtering and
routing of messages, as well as detection of new topics.  The use
of this simple delivery mechanism provides a familiar
environment with almost no learning curve, and it avoids issues of
platform and operating system dependence.
Finally, the system makes use of several different devices to
display the information appropriately. Figure 2 shows the layout
of the Netscape news browser interface.  It includes the list of
newsgroups that have been subscribed to (on the left), the list of
messages from the chosen newsgroup (on top), and a particular
message with color-coded named entities (including disease terms
displayed in red, so that they are easy to spot in the message).
What is the status of the
current Ebola outbreak?
The epidemic is contained;
as of 12/22/00, there were 
421 cases with 162 deaths
Interaction
CDC
WHO
Medical
literatureEmail:
ProMed
~ 2500
 stories/day
Internl
News
Sources  Capture
Translingual 
Information 
Detection 
Extraction 
Summarization 
U niden tif ied h emor rhagic  f
U niden tif ied h emor rhagic  f
Ebola hemorr hagic  fever  in
Re :  Ebo la hemorrhagi. ..
R e: Ebola hemo rrha gi...
ProMED
A nnotator
Ja ne Analyst
10 /17/00 1 9:37
10 /17/00 2 0:42
10 /18/00 7 :42
High
Norm al
Normal
read
rep lied
ProMED
10 /18/00 1 2:3 4 High un read
Ebola hemorr hagic  fever  in
Sour ce
D ate
Priority Status
10   99
0   105
1   57
0   10
2   34
0   50
1   1
0   25
5   200
0   45
0   0
0   0
0   0
0   0
0   6
0   32
0   3
0   1
High
Norm al
High
High
Ebola hemorrhagic feve r  -  Ugan da
U nf ilte red
O utbr eak
     C holer a
     D engue  Fe ve r
     Eb ola
I nfras tructure?
N atu ral  Di sas. ..
Spi lls
A cc id en ts
W M D Tra ckin. ..
Sus picious Il ln. ..
Sus picious De.. .
Pos sible  Biol o. ..
Pathogen threa ?
- --- --- ---------------------
W orkspa ce
      E bola
      D ra fts
      Re ports
D isease
R e: Ebola hemo rrha gi...
Location
U NK
U NK
Ebola
Ebola
Ebola
Ebola
Rabies
Rabies
U gan da
U gan da
U gan da
K eny a
U gan da
IHT
ProMED
WHO
Jo e Analyst
D ate
10 /14/00 2 3:06
10 /15/00 1 0:50
10 /16/00 2 1:45
10 /17/00 1 9:12
read
read
read
read
un read
Date: 10/16/00
Disease: Ebo la
Descripto r: hem orrh agic fever
Locatio n:          Ugan da
Disease Date:     10/14/00
Ho spital: mission ary hosp ital  in Gulu
New cases:  at least  7
Total  cases: 51
Total  dead:       31
Ebola hemorr hagic  fever  -
Ugand an M ini stry  ide ntif ies Eb ola  virus as t he c ause of  the outbreak.  KA MP ALA :
The  dreade d Eb ola  virus that struck over 300  peopl e i n Kikwit,  in  t he D emocratic
Rep ub lic  of Con go  in  1995, has ki lled 31  people in northe rn Ugan da.  A  U gandan
M ini s tr y of Heal th  sta tement  said l aboratory test s had r eveale d that  the Ebola vi rus
was  t he caus e of the  epidemi c hemorr hagic feve r whi ch has been r agi ng in the  G ulu
dis trict  since Septe mbe r.   Thr ee  of the dea d wer e s tud ent nur ses , who tre ated the first
Eb ola  patients admitt ed to a  Lac or  mis sionary hosp it al in  Gu lu  tow n.  A  task force
he ade d by G ul u dis trict adm ini str ator, Walte r O ch ora , has bee n se t up to co-or dina te
efforts to control the epi demi c.  F ie ld offic ials i n  Gul u tol d the Ka mpala-based Ne w
H ttp: //ti des2000.mi tre.org/
Pr oM ED /10162000/34n390h.ht ml
U gan da
News Repository
CATALYSTEntity Tagging
Event Extraction
Translation
Summarization
Alerting
Change detection
Threading
Cross-language IR
Topic clustering
Figure 1: Overview of the IFE-Bio Demonstration System
Local,
private
workspace
Documents
automatically
categorized
into shared,
tailorable
hierarchy
Sort by disease, location, source, date, etc.
Associated
meta-data:
header,
event,
summary,
named-entity
Figure 2: Screenshot of IFE-Bio Interface Using News Group Reader
Figure 3: Sample Summarization Automatically Generated by WebSumm
There are multiple display modalities available. The message in
Figure 2 contains a short tabular display in the beginning,
identifying disease, region and victim type. Below that is a URL
to a document summary, created by MITRE?s WebSumm system
(see Figure 3 for a sample summary).   If an incoming message is
in a language other than English, then CyberTrans is called to run
code set and language identification modules, and the language is
translated into English for further processing. Figure 4 below
shows a sample translated message; note that there are a number
of untranslated words, but it is still possible to get the gist of the
message.
In addition, we are working on a mechanism to provide
geographic and eventually, temporal display of outbreak
information. Figure 5 shows the stages of processing involved.
Stage 1 shows onamed entity and temporal tagging to identify the
items of interest. These are combined into disease events by
further linguistic processing; the result is shown in the table in
Stage 2. This spreadsheet of events serves as input for a map-
based display, shown in Stage 3. The graph plots number of new
cases and number of cumulative cases over time.  In the map, the
size of the outer dot represents total number of cases to date, and
the inner dot represents new cases.  This allows the analyst to
visualize spread of the disease, as well as the stage of the outbreak
(spreading or subsiding).
3. REFERENCES
[1] Mani, I. and Bloedorn, E. (1999). "Summarizing
Similarities and Among Related Documents".
Information Retrieval 1(1): 35-67.
[2] Mani, I. and Wilson, G. (2000). "Robust Temporal
Processing of News," Proceedings of the 38th Annual
Meeting of the Association for Computational
Linguistics (ACL'2000), 69-76. New Brunswick, New
Jersey. Association for Computational Linguistics.
[3] Reeder, F.  (2000) "At Your Service:  Embedded MT
as a Service",  NAACL Workshop on Embedded MT,
March, 2000.
Figure 4: Translation from Portuguese to English Produced by CyberTrans
1. Annotate entities of interest via XML
Dise a se Source Country City_na m eDa te Ca se s Ne w _ca se s De a d
Ebola PROM ED Uganda G ula 26-O ct-2000 182 17 64
Ebola PROM ED Uganda G ula 5-Nov-2000 280 14 89
Ebola PROM ED Uganda G ulu 13-O ct-2000 42 9 30
Ebola PROM ED Uganda G ulu 15-O ct-2000 51 7 31
Ebola PROM ED Uganda G ulu 16-O ct-2000 63 12 33
Ebola PROM ED Uganda G ulu 17-O ct-2000 73 2 35
Ebola PROM ED Uganda G ulu 18-O ct-2000 94 21 39
Ebola PROM ED Uganda G ulu 19-O ct-2000 111 17 41
2. Assemble entities into events
0
50
100
150
200
250
300
350
400
10/
13/
200
0
10/
20/
200
0
10/
27/
200
0
11/
3/2
000
11/
10/
200
0
11/
17/
200
0
11/
24/
200
0
T IME
Nu
m
be
r C
as
es
Cases
New_cases
Dead
3. Display events...
   Total Cases   New Cases
Figure 5: Steps in Extraction to Support Temporal and Geospatial Displays of Disease Outbreak
Guidelines for Annotating Temporal Information
Inderjeet Mani, George Wilson
The MITRE Corporation, W640
11493 Sunset Hills Road
Reston, Virginia 20190-5214, USA
+1-703-883-6149
imani@mitre.org
Lisa Ferro
The MITRE Corporation, K329
202 Burlington Road, Rte. 62
Bedford, MA 01730-1420, USA
+1-781-271-5875
lferro@mitre.org
Beth Sundheim
SPAWAR Systems Center, D44208
53140 Gatchell Road, Room 424B
Sand Diego, CA 92152-7420, USA
+1-619-553-4195
sundheim@spawar.navy.mil
ABSTRACT
This paper introduces a set of guidelines for annotating time
expressions with a canonicalized representation of the times they
refer to. Applications that can benefit from such an annotated
corpus include information extraction (e.g., normalizing temporal
references for database entry), question answering (answering
?when? questions), summarization (temporally ordering
information), machine translation (translating and normalizing
temporal references), and information visualization (viewing
event chronologies).
Keywords
Annotation, temporal information, semantics, ISO-8601.
1.
 
INTRODUCTION
The processing of temporal information poses numerous
challenges for NLP. Progress on these challenges may be
accelerated through the use of corpus-based methods. This paper
introduces a set of guidelines for annotating time expressions with
a canonicalized representation of the times they refer to.
Applications that can benefit from such an annotated corpus
include information extraction (e.g., normalizing temporal
references for database entry), question answering (answering
?when? questions), summarization (temporally ordering
information), machine translation (translating and normalizing
temporal references), and information visualization (viewing
event chronologies).
Our annotation scheme, described in detail in [Ferro et al 2000],
has several novel features:
?
 
It goes well beyond the one used in the Message
Understanding Conference [MUC7 1998], not only in terms
of the range of expressions that are flagged, but, also, more
importantly, in terms of representing and normalizing the
time values that are communicated by the expressions.
?
 
In addition to handling fully-specified time expressions [e.g.,
September 3rd, 1997), it also handles context-dependent
expressions. This is significant because of the ubiquity of
context-dependent time expressions; a recent corpus study
[Mani and Wilson 2000] revealed that more than two-thirds
of time expressions in print and broadcast news were
context-dependent ones. The context can be local (within the
same sentence), e.g., In 1995, the months of June and July
were devilishly hot, or global (outside the sentence), e.g., The
hostages were beheaded that afternoon. A subclass of these
context-dependent expressions are ?indexical? expressions,
which require knowing when the speaker is speaking to
determine the intended time value, e.g., now, today,
yesterday, tomorrow, next Tuesday, two weeks ago, etc.
Our scheme differs from the recent scheme of [Setzer and
Gaizauskas 2000] in terms of our in-depth focus on
representations for the values of specific classes of time
expressions, and in the application of our scheme to a variety of
different genres, including print news, broadcast news, and
meeting scheduling dialogs.
The annotation scheme has been designed to meet the
following criteria:
Simplicity with precision: We have tried to keep the scheme
simple enough to be executed confidently by humans, and yet
precise enough for use in various natural language processing
tasks.
Naturalness: We assume that the annotation scheme should reflect
those distinctions that a human could be expected to reliably
annotate, rather than reflecting an artificially-defined smaller set
of distinctions that automated systems might be expected to make.
This means that some aspects of the annotation will be well
beyond the reach of current systems.
Expressiveness:  The guidelines require that one specify time
values as fully as possible, within the bounds of what can be
confidently inferred by annotators. The use of ?parameters? and
the representation of ?granularity? (described below) are tools to
help ensure this.
Reproducibility: In addition to leveraging the [ISO-8601 1997]
format for representing time values, we have tried to ensure
consistency among annotators by providing an example-based
approach, with each guideline closely tied to specific examples.
While the representation accommodates both points and intervals,
the guidelines are aimed at using the point representation to the
extent possible, further helping enforce consistency.
The annotation process is decomposed into two steps: flagging a
temporal expression in a document, and identifying the time value
that the expression designates, or that the speaker intends for it to
designate. The flagging of temporal expressions is restricted to
those temporal expressions which contain a reserved time word
used in a temporal sense, called a ?lexical trigger?, which include
words like day, week, weekend, now, Monday, current, future, etc.
2. SEMANTIC DISTINCTIONS
Three different kinds of time values are represented: points in
time (answering the question ?when??), durations (answering
?how long??), and frequencies (answering ?how often??).
Points in time are calendar dates and times-of-day, or a
combination of both, e.g., Monday 3 pm, Monday next week, a
Friday, early Tuesday morning, the weekend. These are all
represented with values (the tag attribute VAL) in the ISO format,
which allows for representation of date of the month, month of the
year, day of the week, week of the year, and time of day, e.g.,
<TIMEX2 VAL=?2000-11-29-T16:30?>4:30 p.m. yesterday
afternoon</TIMEX2>.
Durations also use the ISO format to represent a period of time.
When only the period of time is known, the value is represented
as a duration, e.g.,
<TIMEX2 VAL=?P3D?>a three-day</TIMEX2> visit.
Frequencies reference sets of time points rather than particular
points.   SET and GRANULARITY attributes are used for such
expressions, with the PERIODICITY attribute being used for
regularly recurring times, e.g., <TIMEX2 VAL=?XXXX-WXX-2?
SET=?YES? PERIODICITY=?F1W?
GRANULARITY=?G1D?>every Tuesday</TIMEX2>. Here
?F1W? means frequency of once a week, and the granularity
?G1D? means the set members are counted in day-sized units.
The annotation scheme also addresses several semantic problems
characteristic of temporal expressions:
Fuzzy boundaries. Expressions like Saturday morning and Fall
are fuzzy in their intended value with respect to when the time
period starts and ends; the early 60?s is fuzzy as to which part of
the 1960?s is included. Our format for representing time values
includes parameters such as FA (for Fall), EARLY (for early,
etc.), PRESENT_REF (for today, current, etc.), among others.
For example, we have <TIMEX2 VAL=?1990-SU?>Summer of
1990</TIMEX2>. Fuzziness in modifiers is also represented, e.g.,
<TIMEX2 VAL=?1990? MOD=?BEFORE?>more than a
decade ago</TIMEX2>. The intent here is that a given
application may choose to assign specific values to these
parameters if desired; the guidelines themselves don?t dictate the
specific values.
Non-Specificity. Our scheme directs the annotator to represent the
values, where possible, of temporal expressions that do not
indicate a specific time.  These non-specific expressions include
generics, which state a generalization or regularity of some kind,
e.g., <TIMEX2 VAL=?XXXX-04?
NON_SPECIFIC=?YES?>April</TIMEX2> is usually wet, and
non-specific indefinites, like <TIMEX2 VAL="1999-06-XX"
NON_SPECIFIC="YES? GRANULARITY="G1D">a sunny day
in <TIMEX2 VAL="1999-06">June</TIMEX2></TIMEX2>.
3. USEFULNESS
Based on the guidelines, we have annotated a small reference
corpus, consisting of 35,000 words of newspaper text and 78,000
words of broadcast news [TDT2 1999]. Portions of this corpus
were used to train and evaluate a time tagger with a reported F-
measure of .83 [Mani and Wilson 2000]; the corpus has also been
used to order events for summarization.
Others have used temporal annotation schemes for the much more
constrained domain of meeting scheduling, e.g., [Wiebe et al
1998], [Alexandersson et al 1997], [Busemann et al 1997]; our
scheme has been applied to such domains as well. In particular,
we have begun annotation of the ?Enthusiast? corpus of meeting
scheduling dialogs used at CMU and by [Wiebe et al 1998]. Only
minor revisions to the guidelines? rules for tag extent have so far
been required for these dialogs.
This annotation scheme is also being leveraged in the Automatic
Content Extraction (ACE) program of the U.S. Department of
Defense, whose focus is on extraction of time-dependent relations
between pairs of ?entities? (persons, organizations, etc.).
Finally, initial feedback from Machine Translation system
grammar writers [Levin, personal communication] indicates that
the guidelines were found to be useful in extending an existing
interlingua for machine translation.
4. CONCLUSION
The annotation scheme we have developed appears applicable to a
wide variety of different genres of text. The semantic
representation used is also highly language-independent. In
Spring 2001, we will be embarking on a large-scale annotation
effort using a merged corpus consisting of Enthusiast data as well
as additional TDT2 data (inter-annotator agreement will also be
measured then). An initial annotation exercise carried out on a
sample of this merged corpus by 20 linguistics students using our
guidelines has been encouraging, with 12 of the students
following the guidelines in a satisfactory manner. In the future, we
expect to extend this scheme to multilingual corpora.
5. ACKNOWLEDGMENTS
Our thanks to Lynn Carlson (Department of Defense), Lori Levin
(Carnegie Mellon University), and Janyce Wiebe (University of
Pittsburgh) for providing the Enthusiast corpus to us.
6. REFERENCES
[1] Alexandersson, J., Riethinger, N. and Maier, E.
Insights into the Dialogue Processing of VERBMOBIL.
Proceedings of the Fifth Conference on Applied Natural
Language Processing, 1997, 33-40.
[2] Busemann, S., Decleck, T., Diagne, A. K., Dini,
L., Klein, J. and Schmeier, S. Natural Language Dialogue
Service for Appointment Scheduling Agents. Proceedings of
the Fifth Conference on Applied Natural Language
Processing, 1997, 25-32.
[3] Ferro, L., Mani, I., Sundheim, B., and Wilson, G.
TIDES Temporal Annotation Guidelines. Draft Version
1.0. MITRE Technical Report MTR 00W0000094, October
2000.
[4] ISO-8601 ftp://ftp.qsl.net/pub/g1smd/8601v03.pdf
1997.
 [5] Mani, I. and Wilson, G. Robust Temporal
Processing of News, Proceedings of the ACL'2000
Conference, 3-6 October 2000, Hong Kong.
[6] MUC-7. Proceedings of the Seventh Message
Understanding Conference, DARPA. 1998.
[7] Setzer, A. and Gaizauskas, R. Annotating Events
and Temporal Information in Newswire Texts. Proceedings
of the Second International Conference On Language
Resources And Evaluation (LREC-2000), Athens, Greece,
31 May- 2 June 2000.
[8] TDT2
http://morph.ldc.upenn.edu/Catalog/LDC99T37.html 1999
[9] Wiebe,  J. M., O?Hara, T. P., Ohrstrom-Sandgren,
T. and McKeever, K. J. An Empirical Approach to
Temporal Reference Resolution. Journal of Artificial
Intelligence Research, 9, 1998, pp. 247-293.
Robust Temporal Processing of News
Inderjeet Mani and George Wilson
The MITRE Corporation, W640
11493 Sunset Hills Road
Reston, Virginia 22090
{imani, gwilson}@mitre.org
Abstract
We introduce an annotation scheme for
temporal expressions, and describe a
method for resolving temporal
expressions in print and broadcast news.
The system, which is based on both
hand-crafted and machine-learnt rules,
achieves an 83.2% accuracy (F-
measure) against hand-annotated data.
Some initial steps towards tagging event
chronologies are also described.
Introduction
The extraction of temporal information from
news offers many interesting linguistic
challenges in the coverage and
representation of temporal expressions. It is
also of considerable practical importance in
a variety of current applications. For
example, in question-answering, it is useful
to be able to resolve the underlined
reference in ?the next year, he won the
Open? in response to a question like ?When
did X win the U.S. Open??.  In multi-
document summarization, providing fine-
grained chronologies of events over time
(e.g., for a biography of a person, or a
history of a crisis) can be very useful. In
information retrieval, being able to index
broadcast news stories by event times allows
for powerful multimedia browsing
capabilities.
Our focus here, in contrast to previous work
such as (MUC 1998),  is on resolving time
expressions, especially indexical expressions
like ?now?, ?today?, ?tomorrow?, ?next
Tuesday?,  ?two weeks ago?, ?20 mins after
the next hour?, etc., which designate times
that are dependent on the speaker and some
?reference? time1. In this paper, we discuss
a temporal annotation scheme for
representing dates and times in temporal
expressions. This is followed by details and
performance measures for a tagger to extract
this information from news sources. The
tagger uses a variety of hand-crafted and
machine-discovered rules, all of which rely
on lexical features that are easily
recognized. We also report on a preliminary
effort towards constructing event
chronologies from this data.  
1 Annotation Scheme
Any annotation scheme should aim to be
simple enough to be executed by humans,
and yet precise enough for use in various
natural language processing tasks. Our
approach (Wilson et al 2000) has been to
annotate those things that a human could be
expected to tag.
Our representation of times uses the ISO
standard CC:YY:MM:DD:HH:XX:SS, with
an optional time zone (ISO-8601 1997). In
other words, time points are represented in
terms of a calendric coordinate system,
rather than a real number line. The standard
also supports the representation of weeks
and days of the week in the format
CC:YY:Wwwd where ww specifies which
week within the year (1-53) and d specifies
the day of the week (1-7). For example, ?last
week? might receive the VAL 20:00:W16.
A time (TIMEX) expression (of type TIME
or DATE) representing a particular point on
the ISO line, e.g., ?Tuesday, November 2,
2000? (or ?next Tuesday?) is represented
with the ISO time  Value (VAL),
20:00:11:02. Interval expressions like ?From
                                                          
1 Some of these indexicals have been called
?relative times? in the (MUC 1998) temporal
tagging task.
May 1999 to June 1999?, or ?from 3 pm to 6
pm? are represented as two separate TIMEX
expressions.
In addition to the values provided by the
ISO standard, we have added several
extensions, including a list of additional
tokens to represent some commonly
occurring temporal units; for example,
?summer of ?69? could be represented as
19:69:SU. The intention here is to capture
the information in the text while leaving
further interpretation of the Values to
applications using the markup.
It is worth noting that there are several kinds
of temporal expressions that are not to be
tagged,  and that other expressions tagged as
a time expression are not assigned a value,
because doing so would violate the
simplicity and preciseness requirements. We
do not tag unanchored intervals, such as
?half an hour (long)? or ?(for) one month?.
Non-specific time expressions like generics,
e.g., ?April? in ?April is usually wet?, or
?today? in ?today?s youth?,  and indefinites,
e.g., ?a Tuesday?, are tagged without a
value. Finally, expressions which are
ambiguous without a strongly preferred
reading are left without a value.
This representation treats points as primitive
(as do (Bennett and Partee 1972), (Dowty
1979), among others); other representations
treat intervals as primitive, e.g., (Allen
1983). Arguments can be made for either
position, as long as both intervals and points
are accommodated. The annotation scheme
does not force committing to end-points of
intervals, and is compatible with current
temporal ontologies such as (KSL-Time
1999); this may help eventually support
advanced inferential capabilities based on
temporal information extraction.
2 Tagging Method
Overall Architecture
The system architecture of the temporal
tagger is shown in Figure 1. The tagging
program takes in a document which has
been tokenized into words and sentences and
tagged for part-of-speech. The program
passes each sentence first to a module that
identifies time expressions, and then to
another module (SC) that resolves self-
contained time expressions. The program
then takes the entire document and passes it
to a discourse processing module (DP)
which resolves context-dependent time
expressions (indexicals as well as other
expressions). The DP module tracks
transitions in temporal focus, uses syntactic
clues, and various other knowledge sources.
The module uses a notion of Reference Time
to help resolve context-dependent
expressions. Here, the Reference Time is the
time a context-dependent expression is
relative to. In our work, the reference time is
assigned the value of either the Temporal
Focus or the document (creation) date. The
Temporal Focus is the time currently being
talked about in the narrative. The initial
reference time is the document date.
2.2 Assignment of time values
We now discuss the modules that assign
values to identified time expressions. Times
which are fully specified are tagged with
their value, e.g, ?June 1999? as 19:99:06 by
the SC module. The DP module uses an
ordered sequence of rules to handle the
context-dependent expressions. These cover
the following cases:
Explicit offsets from reference time:
indexicals like ?yesterday?, ?today?,
?tomorrow?, ?this afternoon?, etc., are
ambiguous between a specific and a non-
specific reading. The specific use
(distinguished from the generic one by
machine learned rules discussed below) gets
assigned a value based on an offset from  the
reference time, but the generic use does not.
Positional offsets from reference time:
Expressions like ?next month?, ?last year?
and ?this coming Thursday? use lexical
markers (underlined) to describe the
direction and magnitude of the offset from
the reference time.
Implicit offsets based on verb tense:
Expressions like ?Thursday? in ?the action
taken Thursday?, or bare month names like
?February? are passed to rules that try to
determine the direction of the offset from
the reference time. Once the direction is
determined, the magnitude of the offset can
be computed. The tense of a neighboring
verb is used to decide what direction to look
to resolve the expression. Such a verb is
found by first searching backward to the last
TIMEX, if any, in the sentence, then
forward to the end of the sentence and
finally backwards to the beginning of the
sentence. If the tense is past, then the
direction is backwards from the reference
time. If the tense is future, the direction is
forward. If the verb is present tense, the
expression is passed on to subsequent rules
for resolution. For example, in the following
passage, ?Thursday? is resolved to the
Thursday prior to the reference date because
?was?, which has a past tense tag, is found
earlier in the sentence:
The Iraqi news agency said the first shipment
of 600,000 barrels was loaded Thursday by the
oil tanker Edinburgh.
Further use of lexical markers:  Other
expressions lacking a value are examined for
the nearby presence of a few additional
markers, such as ?since? and ?until?, that
suggest the direction of the offset.
Nearby Dates:  If a direction from the
reference time has not been determined,
some dates, like ?Feb. 14?, and other
expressions that indicate a particular date,
like ?Valentine?s Day?, may still be
untagged because the year has not been
determined.  If the year can be chosen in a
way that makes the date in question less than
a month from the reference date, that year is
chosen. For example, if the reference date is
Feb. 20, 2000 and the expression ?Feb. 14?
has not been assigned a value, this rule
would assign it the value Feb. 14, 2000.
Dates more than a month away are not
assigned values by this rule.
3 Time Tagging Performance
3.1 Test Corpus
There were two different genres used in the
testing: print news and broadcast news
transcripts. The print news consisted of 22
New York Times (NYT) articles from
January 1998. The broadcast news data
consisted of 199 transcripts of Voice of
America  (VOA) broadcasts from January of
1998, taken from the TDT2 collection
(TDT2 1999).  The print data was much
cleaner than the transcribed broadcast data
in the sense that there were very few
typographical errors, spelling and grammar
were good. On the other hand, the print data
also had longer, more complex sentences
with somewhat greater variety in the words
used to represent dates. The broadcast
collection had a greater proportion of
expressions referring to time of day,
primarily due to repeated announcements of
the current time and the time of upcoming
shows.
The test data was marked by hand tagging
the time expressions and assigning value to
them where appropriate. This hand-marked
data was used to evaluate the performance
of a frozen version of the machine tagger,
which was trained and engineered on a
separate body of NYT, ABC News, and
CNN data. Only the body of the text was
included in the tagging and evaluation.
3.2 System performance
The system performance is shown in Table
12. Note that if the human said the TIMEX
had no value, and the system decided it had
a value,  this is treated as  an error. A
baseline of just tagging values of absolute,
fully specified TIMEXs (e.g., ?January 31st,
1999?) is shown for comparison in
parentheses. Obviously, we would prefer a
larger data sample; we are currently engaged
in an effort within the information extraction
community to annotate a large sample of the
TDT2 collection and to conduct an inter-
annotator reliability study.
Error Analysis
Table 2 shows the number of errors made by
the program classified by the type of error.
Only 2 of these 138 errors (5 on TIME, 133
on DATE) were due to errors in the source.
14 of the 138 errors (9 NYT vs. 5 VOA)
                                                          
2 The evaluated version of the system does not
adjust the Reference Time for subsequent
sentences.
were due to the document date being
incorrect as a reference time.
Part of speech tagging: Some errors, both in
the identification of time expressions and the
assignment of values, can be traced to
incorrect part of speech tagging in the
preprocessing; many of these errors should
be easily correctable.
TIMEX expressions
A total of 44 errors were made in the
identification of TIMEX expressions.
Not yet implemented: The biggest source
of errors in identifying time expressions was
formats that had not yet been implemented.
For example, one third (7 of 21, 5 of which
were of type TIME) of all missed time
expressions came from numeric expressions
being spelled out, e.g. ?nineteen seventy-
nine?. More than two thirds (11 of 16) of the
time expressions for which the program
incorrectly found the boundaries of the
expression (bad extent) were due to the
unimplemented pattern ?Friday the 13th?.
Generalization of the existing patterns
should correct these errors.
Proper Name Recognition: A few items
were spuriously tagged as time expressions
(extra TIMEX). One source of this that
should be at least partially correctable is in
the tagging of apparent dates in proper
names, e.g. ?The July 26 Movement?, ?The
Tonight Show?, ?USA Today?. The time
expression identifying rules assumed that
these had been tagged as lexical items, but
this lexicalization has not yet been
implemented.
Values assigned
A total of 94 errors were made in the
assignment of values to time expressions
that had been correctly identified.
Generic/Specific: In the combined data, 25
expressions were assigned a value when
they should have received none because the
expression was a generic usage that could
not be placed on a time line. This is the
single biggest source of errors in the value
assignments.   
 4 Machine Learning Rules
Our approach has been to develop initial
rules by hand, conduct an initial evaluation
on an unseen test set, determine major
errors, and then handling those errors by
augmenting the rule set with additional rules
discovered by machine learning. As noted
earlier, distinguishing between specific use
of a time expression and a generic use (e.g.,
?today?, ?now?, etc.) was and is a
significant source of error. Some of the other
problems that these methods could be
applied to distinguishing a calendar year
reference from a fiscal year one (as in ?this
year?), and distinguishing seasonal from
specific day references. For example,
?Christmas? has a seasonal use (e.g., ?I
spent Christmas visiting European capitals?)
distinct from its reference to a specific day
use as ?December 25th? (e.g., ?We went to a
great party on Christmas?).
Here we discuss machine learning results in
distinguishing specific use of ?today?
(meaning the day of the utterance) from its
generic use meaning ?nowadays?. In
addition to features based on words co-
occurring with ?today? (Said, Will, Even,
Most, and Some features below), some other
features (DOW and CCYY) were added
based on a granularity hypothesis.
Specifically, it seems possible that ?today?
meaning the day of the utterance sets a scale
of events at a day or a small number of days.
The generic use, ?nowadays?, seems to have
a broader scale. Therefore, terms that might
point to one of these scales such as the
names of days of the week, the word ?year?
and four digit years were also included in
the training features.  To summarize, the
features we used for the ?today? problem are
as follows (features are boolean except for
string-valued POS1 and POS2):
Poss: whether ?today? has a possessive
inflection
Qcontext: whether ?today? is inside a
quotation
Said: presence of ?said? in the same sentence
Will: presence of ?will? in the same sentence
Even: presence of ?even? in the same sentence
Most: presence of ?most? in the same sentence
Some: presence of ?some? in the same
sentence
Year: presence of ?year? in the same sentence
CCYY: presence of a four-digit year in the
same sentence
DOW: presence of a day of the week
expression (?Monday? thru ?Sunday?) in the
same sentence
FW:  ?today? is the first word of the sentence
POS1: part-of-speech of the word before
?today?
POS2: part-of-speech of the word after
?today?
Label: specific or non-specific (class label)
Table 3 shows the performance of different
classifiers in classifying occurrences of
?today? as generic versus specific. The
results are for 377 training vectors and 191
test vectors,  measured in terms of Predictive
Accuracy (percentage test vectors correctly
classified).
We  incorporated some of the rules learnt by
C4.5 Rules (the only classifier which
directly output rules) into the current version
of the program. These rules included
classifying ?today? as generic based on (1)
feature Most being true (74.1% accuracy) or
(2) based on feature FW being true and
Poss, Some and Most being false (67.4%
accuracy). The granularity hypothesis was
partly borne out in that C4.5 rules also
discovered that the mention of a day of a
week (e.g. ?Monday?), anywhere in the
sentence predicted specific use (73.3%
accuracy).
5 Towards Chronology Extraction
Event Ordering
Our work in this area is highly preliminary.
To extract temporal relations between
events, we have developed an event-
ordering component, following (Song and
Cohen 1991). We encode the tense
associated with each verb using their
modified Reichenbachian (Reichenbach
1947) representation based on the tuple
 <si, lge, ri, lge, ei>. Here si is an index for
the speech time, ri for the reference time,
and ei for the event time, with lge being the
temporal  relations precedes, follows, or
coincides. With each successive event, the
temporal focus is either maintained or
shifted, and a temporal ordering relation
between the event and the focus is asserted,
using heuristics defining coherent tense
sequences; see (Song and Cohen 1991) for
more details. Note that the tagged TIME
expressions aren't used in determining these
inter-event temporal relations, so this event-
ordering component could be used to order
events which don't have time VALs.
Event Time Alignment
In addition, we have also investigated the
alignment of events on a calendric line,
using the tagged TIME expressions. The
processing, applied to documents tagged by
the time tagger, is in two stages. In the first
stage, for each sentence, each ?taggable verb
occurrence? lacking a time expression is
given the VAL of the immediately previous
time expression in the sentence. Taggable
verb occurrences are all verb occurrences
except auxiliaries, modals and verbs
following  ?to?, ?not?, or specific modal
verbs. In turn, when a time expression is
found, the immediately previous verb
lacking a time expression is given that
expression's VAL as its TIME. In the second
stage, each taggable verb in a sentence
lacking a time expression is given the TIME
of the immediately previous verb in the
sentence which has one, under the default
assumption that the temporal focus is
maintained.
Of course, rather than blindly propagating
time expressions to events based on
proximity, we should try to represent
relationships expressed by temporal
coordinators like ?when?, ?since?, ?before?,
as well as  explicitly temporally anchored
events, like ?ate at 3 pm?. The event-aligner
component uses a very simple method,
intended to serve as a baseline method, and
to gain an understanding of the issues
involved. In the future, we expect to
advance to event-alignment algorithms
which rely on a syntactic analysis, which
will be compared against this baseline.
Assessment
An example of the chronological tagging of
events offered by these two components is
shown in Figure 2, along with the TIMEX
tags extracted by the time tagger. Here each
taggable verb is given an event index, with
the precedes attribute indicating one or more
event indices which it precedes temporally.
(Attributes irrelevant to the example aren't
shown). The information of the sort shown
in Figure 2 can be used to sort and cluster
events temporally, allowing for various
time-line based presentations of this
information in response to specific queries.
The event-orderer has not yet been
evaluated. Our evaluation of the event-
aligner checks the TIME of all correctly
recognized verbs (i.e., verbs recognized
correctly by the part-of-speech tagger). The
basic criterion for event TIME annotation is
that if the time of the event is obvious, it is
to be tagged as the TIME for that verb. (This
criterion excludes interval specifications for
events, as well as event references involving
generics, counterfactuals, etc. However, the
judgements are still delicate in certain
cases.) We score Correctness as number of
correct TIME fills for correctly recognized
verbs over total number of correctly
recognized verbs. Our total correctness
scores on a small sample of 8505 words of
text is 394 correct event times out of 663
correct verb tags, giving a correctness score
of 59.4%. Over half the errors were due to
propagation of spreading of an incorrect
event time to neighboring events; about 15%
of the errors were due to event times
preceding the initial TIMEX expression
(here the initial reference time should have
been used); and at least 10% of the errors
were due to explicitly marked tense
switches. This is a very small sample, so the
results are meant to be illustrative of the
scope and limitations of this baseline event-
aligning technique rather than present a
definitive result.
6 Related Work
The most relevant prior work is (Wiebe et
al. 98), who dealt with meeting scheduling
dialogs (see also (Alexandersson et al 97),
(Busemann et al 97)), where the goal is to
schedule a time for the meeting. The
temporal references in meeting scheduling
are somewhat more constrained than in
news, where (e.g., in a historical news piece
on toxic dumping) dates and times may be
relatively unconstrained. In addition, their
model requires the maintenance of a focus
stack. They obtained roughly .91 Precision
and .80 Recall on one test set, and .87
Precision and .68 Recall on another.
However, they adjust the reference time
during processing, which is something that
we have not yet addressed.
More recently, (Setzer and Gaizauskas
2000) have independently developed an
annotation scheme which represents both
time values and more fine-grained inter-
event and event-time temporal relations.
Although our work is much more limited in
scope, and doesn't exploit the internal
structure of events, their annotation scheme
may be leveraged in evaluating aspects of
our work.
 The MUC-7 task (MUC-7 98) did not
require VALs, but did test TIMEX
recognition accuracy. Our 98 F-measure on
NYT can be compared for just TIMEX with
MUC-7 (MUC-7 1998) results on similar
news stories, where the best performance
was .99 Precision and .88 Recall. (The MUC
task required recognizing a wider variety of
TIMEXs, including event-dependent ones.
However, at least 30% of the dates and
times in the MUC test were fixed-format
ones occurring in document headers, trailers,
and copyright notices. )
Finally, there is  a large body of work, e.g.,
(Moens and Steedman 1988), (Passoneau
1988), (Webber 1988), (Hwang 1992),
(Song and Cohen 1991), that has focused on
a computational analysis of tense and aspect.
While the work on event chronologies is
based on some of the notions developed in
that body of work, we hope to further
exploit insights from previous work.
Conclusion
We have developed a temporal annotation
specification, and an algorithm for resolving
a class of time expressions found in news.
The algorithm, which is relatively
knowledge-poor, uses a mix of hand-crafted
and machine-learnt rules and obtains
reasonable results.
In the future, we expect to improve the
integration of various modules, including
tracking the temporal focus in the time
resolver, and interaction between the event-
order and the event-aligner. We also hope to
handle a wider class of time expressions, as
well as further improve our extraction and
evaluation of event chronologies. In the long
run, this could include representing event-
time and inter-event relations expressed by
temporal coordinators, explicitly temporally
anchored events, and nominalizations.
Figure 1.  Time Tagger
Source
articles
number
of words
Type Human
Found
(Correct)
System
Found
System
Correct
PrecisionRecall F-
measure
NYT
22
35,555
TIMEX 302 302 296 98.0 98.0 98.0
Values 302 302 249 (129)82.5
(42.7)
82.5
(42.7)
82.5
(42.7)
Broadcast
199
42,616
TIMEX 426 417 400 95.9 93.9 94.9
Values 426 417 353 (105)84.7
(25.1)
82.9
(24.6)
83.8
(24.8)
Overall
221
78,171
TIMEX 728 719 696 96.8 95.6 96.2
Values 728 719 602 (234)83.7
(32.5)
82.7
(32.1)
83.2
(32.3)
Table 1. Performance of Time Tagging Algorithm
Print Broadcast Total
Missing Vals 10 29 39
Extra Vals 18 7 25
Wrong Vals 19 11 30
Missing
TIMEX
6 15 21
Extra
TIMEX
2 5 7
Bad TIMEX
extent
4 12 16
TOTAL 59 79 138
Table 2. High Level Analysis of Errors
Driver
Resolve
Self-contained
Identify
Expressions
Discourse
Processor
Context
Tracker
Algorithm Predictive Accuracy
MC4 Decision Tree3 79.8
C4.5 Rules 69.8
Na?ve Bayes 69.6
Majority Class (specific) 66.5
Table 3.  Performance of  ?Today? Classifiers
In the last step after years of preparation, the countries <lex eindex=?9?
precedes=?10|? TIME=?19981231?>locked</lex> in the exchange rates of
their individual currencies to the euro, thereby <lex eindex=?10?
TIME=?19981231?>setting</lex> the value at which the euro will begin <lex
eindex=?11? TIME=?19990104?>trading</lex> when financial markets open
around the world on <TIMEX VAL=?19990104?>Monday</TIMEX>??.
Figure 2.  Chronological Tagging
                                                          
3 Algorithm from the MLC++ package (Kohavi and Sommerfield 1996).
References
J. Alexandersson, N. Riethinger, and E. Maier.
Insights into the Dialogue Processing of
VERBMOBIL. Proceedings of the Fifth
Conference on Applied Natural Language
Processing, 1997, 33-40.
J. F.  Allen. Maintaining Knowledge About
Temporal Intervals. Communications of the
ACM, Volume 26, Number 11, 1983.
M. Bennett and B. H. Partee.  Towards the Logic
of Tense and Aspect in English, Indiana
University Linguistics Club, 1972.
S. Busemann, T. Decleck, A. K. Diagne, L. Dini,
J. Klein, and S. Schmeier. Natural Language
Dialogue Service for Appointment Scheduling
Agents. Proceedings of the Fifth Conference
on Applied Natural Language Processing,
1997, 25-32.
D. Dowty. ?Word Meaning and Montague
Grammar?, D. Reidel, Boston, 1979.
C. H. Hwang. A Logical Approach to Narrative
Understanding. Ph.D. Dissertation,
Department of Computer Science, U. of
Alberta, 1992.
ISO-8601
ftp://ftp.qsl.net/pub/g1smd/8601v03.pdf 1997.
R. Kohavy and D. Sommerfield. MLC++:
Machine Learning Library in C++.
http://www.sgi.com/Technology/mlc 1996.
KSL-Time 1999.
http://www.ksl.Stanford.EDU/ontologies/time/
1999.
M. Moens and M. Steedman. Temporal Ontology
and Temporal Reference. Computational
Linguistics, 14, 2, 1988, pp. 15-28.
MUC-7. Proceedings of the Seventh Message
Understanding Conference, DARPA. 1998.
R. J. Passonneau. A Computational Model of the
Semantics of Tense and Aspect. Computational
Linguistics, 14, 2, 1988, pp. 44-60.
H. Reichenbach. Elements of Symbolic Logic.
London, Macmillan. 1947.
A. Setzer and R. Gaizauskas. Annotating Events
and Temporal Information in Newswire Texts.
Proceedings of the Second International
Conference On Language Resources And
Evaluation (LREC-2000), Athens, Greece, 31
May- 2 June 2000.
F. Song and R. Cohen. Tense Interpretation in
the Context of Narrative. Proceedings of the
Ninth National Conference on Artifical
Intelligence (AAAI'91), pp.131-136. 1991.
TDT2
http://morph.ldc.upenn.edu/Catalog/LDC99T3
7.html 1999
B. Webber. Tense as Discourse Anaphor.
Computational Linguistics, 14, 2, 1988, pp.
61-73.
J. M. Wiebe, T. P. O?Hara, T. Ohrstrom-
Sandgren, and K. J. McKeever. An Empirical
Approach to Temporal Reference Resolution.
Journal of Artificial Intelligence Research, 9,
1998, pp. 247-293.
G. Wilson, I. Mani, B. Sundheim, and L. Ferro.
Some Conventions for Temporal Annotation of
Text. Technical Note (in preparation). The
MITRE Corporation, 2000.
A Multilingual Approach to Annotating
and Extracting Temporal Information1
George Wilson
Inderjeet Mani2
The MITRE Corporation,
W640
11493 Sunset Hills Road
Reston, VA 20190-5214
USA
gwilson@mitre.org
imani@mitre.org
Beth Sundheim
SPAWAR Systems Center,
D44208, 53140 Gatchell Rd.
San Diego, CA 92152-7420
USA
sundheim@spawar.navy.mil
Lisa Ferro
The MITRE Corporation,
K329, 202 Burlington Road
Bedford, MA 01730-1420
USA
lferro@mitre.org
                                                          
1 This work has been funded by DARPA?s Translingual Information Detection, Extraction, and Summarization (TIDES)
research program, under contract number DAA-B07-99-C-C201 and ARPA Order H049.
2 Also at the Department of Linguistics, Georgetown University, Washington, DC 20037.
Abstract
This paper introduces a set of
guidelines for annotating time
expressions with a canonicalized
representation of the times they refer
to, and describes methods for
extracting such time expressions from
multiple languages.
1 Introduction
The processing of temporal information poses
numerous challenges for NLP. Progress on these
challenges may be accelerated through the use
of corpus-based methods. This paper introduces
a set of guidelines for annotating time
expressions with a canonicalized representation
of the times they refer to, and describes methods
for extracting such time expressions from
multiple languages. Applications that can
benefit include information extraction (e.g.,
normalizing temporal references for database
entry), question answering (answering ?when?
questions), summarization (temporally ordering
information), machine translation (translating
and normalizing temporal references), and
information visualization (viewing event
chronologies).
Our annotation scheme, described in
detail in (Ferro et al 2000), has several novel
features, including the following:
It goes well beyond the one used in the Message
Understanding Conference (MUC7 1998), not
only in terms of the range of expressions that are
flagged, but, also, more importantly, in terms of
representing and normalizing the time values
that are communicated by the expressions.
In addition to handling fully-specified time
expressions (e.g., September 3rd, 1997), it also
handles context-dependent expressions. This is
significant because of the ubiquity of context-
dependent time expressions; a recent corpus
study (Mani and Wilson 2000) revealed that
more than two-thirds of time expressions in print
and broadcast news were context-dependent
ones. The context can be local (within the same
sentence), e.g., In 1995, the months of June and
July were devilishly hot, or global (outside the
sentence), e.g., The hostages were beheaded that
afternoon. A subclass of these context-
dependent expressions are ?indexical?
expressions, which require knowing when the
speaker is speaking to determine the intended
time value, e.g., now, today, yesterday,
tomorrow, next Tuesday, two weeks ago, etc.
The annotation scheme has been
designed to meet the following criteria:
? Simplicity with precision: We have tried to
keep the scheme simple enough to be
executed confidently by humans, and yet
precise enough for use in various natural
language processing tasks.
? Naturalness: We assume that the annotation
scheme should reflect those distinctions that
a human could be expected to reliably
annotate, rather than reflecting an
artificially-defined smaller set of
distinctions that automated systems might
be expected to make. This means that some
aspects of the annotation will be well
beyond the reach of current systems.
? Expressiveness:  The guidelines require that
one specify time values as fully as possible,
within the bounds of what can be
confidently inferred by annotators. The use
of ?parameters? and the representation of
?granularity? (described below) are tools to
help ensure this.
? Reproducibility: In addition to leveraging
the (ISO-8601 1997) format for representing
time values, we have tried to ensure
consistency among annotators by providing
an example-based approach, with each
guideline closely tied to specific examples.
While the representation accommodates
both points and intervals, the guidelines are
aimed at using the point representation to
the extent possible, further helping enforce
consistency.
The annotation process is decomposed into two
steps: flagging a temporal expression in a
document (based on the presence of specific
lexical trigger words), and identifying the time
value that the expression designates, or that the
speaker intends for it to designate. The flagging
of temporal expressions is restricted to those
temporal expressions which contain a reserved
time word used in a temporal sense, called a
?lexical trigger?, which include words like day,
week, weekend, now, Monday, current, future,
etc.
2 Interlingual Representation
2.1 Introduction
Although the guidelines were developed with
detailed examples drawn from English (along
with English-specific tokenization rules and
guidelines for determining tag extent), the
semantic representation we use is intended for
use across languages. This will permit the
development of temporal taggers for different
languages trained using a common annotation
scheme.
It will also allow for new methods for
evaluating machine translation of temporal
expressions at the level of interpretation as well
as at the surface level. As discussed in
(Hirschman et al 2000), time expressions
generally fall into the class of so-called named
entities, which includes proper names and
various kinds of numerical expressions.  The
translation of named entities is less variable
stylistically than the translation of general text,
and once predictable variations due to
differences in transliteration, etc. are accounted
for, the alignment of the machine-translated
expressions with a reference translation
produced by a human can readily be
accomplished. A variant of the word-error
metric used to evaluate the output of automatic
speech transcription can then be applied to
produce an accuracy score. In the case of our
current work on temporal expressions, it will
also be possible to use the normalized time
values to participate in the alignment and
scoring.
2.2 Semantic Distinctions
Three different kinds of time values are
represented: points in time (answering the
question ?when??), durations (answering ?how
long??), and frequencies (answering ?how
often??).
? Points in time are calendar dates and times-
of-day, or a combination of both, e.g.,
Monday 3 pm, Monday next week, a Friday,
early Tuesday morning, the weekend. These
are all represented with values (the tag
attribute VAL) in the ISO format, which
allows for representation of date of the
month, month of the year, day of the week,
week of the year, and time of day, e.g.,
<TIMEX2 VAL=?2000-11-
29T16:30?>4:30 p.m. yesterday afternoon
</TIMEX2>.
? Durations also use the ISO format to
represent a period of time. When only the
period of time is known, the value is
represented as a duration, e.g., <TIMEX2
VAL=?P3D?>a three-day </TIMEX2>
visit.
? Frequencies reference sets of time points
rather than particular points.  SET and
GRANULARITY attributes are used for
such expressions, with the PERIODICITY
attribute being used for regularly recurring
times, e.g., <TIMEX2 VAL=?XXXX-WXX-
2? SET=?YES? PERIODICITY=?F1W?
GRANULARITY=?G1D?>every
Tuesday</TIMEX2>.
Here ?F1W? means frequency of once a week,
and the granularity ?G1D? means the set
members are counted in day-sized units.
The annotation scheme also addresses several
semantic problems characteristic of temporal
expressions:
? Fuzzy boundaries. Expressions like
Saturday morning and Fall are fuzzy in their
intended value with respect to when the time
period starts and ends; the early 60?s is
fuzzy as to which part of the 1960?s is
included. Our format for representing time
values includes parameters such as FA (for
Fall), EARLY (for early, etc.),
PRESENT_REF (for today, current, etc.),
among others. For example, we have
<TIMEX2 VAL=?1990-SU?>Summer of
1990</TIMEX2>. Fuzziness in modifiers is
also represented, e.g., <TIMEX2
VAL=?1990? MOD=?BEFORE?>more
than a decade ago</TIMEX2>. The intent
here is that a given application may choose
to assign specific values to these parameters
if desired; the guidelines themselves don?t
dictate the specific values.
? Non-Specificity. Our scheme directs the
annotator to represent the values, where
possible, of temporal expressions that do not
indicate a specific time.  These non-specific
expressions include generics, which state a
generalization or regularity of some kind,
e.g., <TIMEX2 VAL=?XXXX-04?
NON_SPECIFIC=?YES?>April</TIMEX>
is usually wet, and non-specific indefinites,
like <TIMEX2 VAL="1999-06-XX"
NON_SPECIFIC="YES? GRANULARITY=
"G1D">a sunny day in <TIMEX2
VAL="199906">June</TIMEX2>
</TIMEX2>.
3 Reference Corpus
Based on the guidelines, we have arranged for 6
subjects to annotate an English reference corpus,
consisting of 32,000 words of a telephone dialog
corpus ? English translations of the ?Enthusiast?
corpus of Spanish meeting scheduling dialogs
used at CMU and by (Wiebe et al 1998), 35,000
words of New York Times newspaper text and
120,000 words of broadcast news (TDT2 1999).
This corpus will soon be made available to the
research community.
4 Time Tagger System
4.1 Architecture
The tagging program takes in a document which
has been tokenized into words and sentences and
tagged for part-of-speech. The program passes
each sentence first to a module that flags time
expressions, and then to another module (SC)
that resolves self-contained (i.e., ?absolute?)
time expressions. Absolute expressions are
typically processed through a lookup table that
translates them into a point or period that can be
described by the ISO standard.
The program then takes the entire
document and passes it to a discourse processing
module (DP) which resolves context-dependent
(i.e., ?relative?) time expressions (indexicals as
well as other expressions). The DP module
tracks transitions in temporal focus, using
syntactic clues and various other knowledge
sources.
The module uses a notion of Reference
Time to help resolve context-dependent
expressions. Here, the Reference Time is the
time a context-dependent expression is relative
to. The reference time (italicized here) must
either be described (as in ?a week from
Wednesday?) or implied (as in ?three days ago
[from today]?). In our work, the reference time
is assigned the value of either the Temporal
Focus or the document (creation) date. The
Temporal Focus is the time currently being
talked about in the narrative. The initial
reference time is the document date.
4.2 Assignment of Time Values
We now discuss the assigning of values to
identified time expressions. Times which are
fully specified are tagged with their value, e.g,
?June 1999? as 1999-06 by the SC module. The
DP module uses an ordered sequence of rules to
handle the context-dependent expressions. These
cover the following cases:
? Explicit offsets from reference time:
indexicals like ?yesterday?, ?today?,
?tomorrow?, ?this afternoon?, etc., are
ambiguous between a specific and a non-
specific reading. The specific use
(distinguished from the generic one by
machine learned rules discussed in (Mani
and Wilson 2000)) gets assigned a value
based on an offset from the reference time,
but the generic use does not. For example, if
?fall? is immediately preceded by ?last? or
?next?, then ?fall? is seasonal  (97.3%
accurate rule). If ?fall? is followed 2 words
after by a year expression, then ?fall? is
seasonal (86.3% accurate).
? Positional offsets from reference time:
Expressions like ?next month?, ?last year?
and ?this coming Thursday? use lexical
markers (underlined) to describe the
direction and magnitude of the offset from
the reference time.
? Implicit offsets based on verb tense:
Expressions like ?Thursday? in ?the action
taken Thursday?, or bare month names like
?February? are passed to rules that try to
determine the direction of the offset from
the reference time, and the magnitude of the
offset. The tense of a neighboring verb is
used to decide what direction to look to
resolve the expression.
? Further use of lexical markers:  Other
expressions lacking a value are examined
for the nearby presence of a few additional
markers, such as ?since? and ?until?, that
suggest the direction of the offset.
? Nearby Dates:  If a direction from the
reference time has not been determined,
some dates, like ?Feb. 14?, and other
expressions that indicate a particular date,
like ?Valentine?s Day?, may still be
untagged because the year has not been
determined.  If the year can be chosen in a
way that makes the date in question less
than a month from the reference date, that
year is chosen. Dates more than a month
away are not assigned values by this rule.
4.3 Time Tagging Performance
The system performance on a test set of 221
articles from the print and broadcast news
section of the reference corpus (the test set had a
total of 78,171 words) is shown in Table 13.
Note that if the human said the tag had no value,
and the system decided it had a value,  this is
treated as  an error. A baseline of just tagging
values of absolute, fully specified expressions
(e.g., ?January 31st, 1999?) is shown for
comparison in parentheses.
Type Human
Found
Correct
System
Found
System
Correct
F-
measure
TIMEX2 728 719 696 96.2
VAL 728 719 602
(234)
83.2
(32.3)
Table 1: Performance of Time Tagger
(English)
5 Multilingual Tagging
The development of a tagging program for other
languages closely parallels the process for
English and reuses some of the code. Each
language has its own set of lexical trigger words
that signal a temporal expression. Many of
these, e.g. day, week, etc., are simply
translations of English words.
Often, there will be some additional
triggers with no corresponding word in English.
For example, some languages contain a single
lexical item that would translate in English as
?the day after tomorrow?. For each language,
the triggers and lexical markers must be
identified.
As in the case of English, the SC
module for a new language handles the case of
absolute expressions, with the DP module
                                                          
3 The evaluated version of the system does not adjust the
Reference Time for subsequent sentences.
handling the relative ones. It appears that in
most languages, in the absence of other context,
relative expressions with an implied reference
time are relative to the present. Thus, tools built
for one language that compute offsets from a
base reference time will carry over to other
languages.
As an example, we will briefly describe
the changes that were needed to develop a
Spanish module, given our English one. Most of
the work involved pairing the Spanish surface
forms with the already existing computations,
e.g. we already computed ?yesterday? as
meaning ?one day back from the reference
point?. This had to be attached to the new
surface form ?ayer?. Because not all computers
generate the required character encodings, we
allowed expressions both with and without
diacritical marks, e.g., ma?ana and manana.
Besides the surface forms, there are a
few differences in conventions that had to be
accounted for. Times are mostly stated using a
24-hour clock. Dates are usually written in the
European form day/month/year rather than the
US-English convention of month/day/year.
A difficulty arises because of the use of
multiple calendric systems. While the Gregorian
calendar is widely used for business across the
world, holidays and other social events are often
represented in terms of other calendars. For
example, the month of Ramadan is a regularly
recurring event in the Islamic calendar, but
shifts around in the Gregorian4.
Here are some examples of tagging of
parallel text from Spanish and English with a
common representation.
<TIMEX2 VAL="2001-04-
01">hoy</TIMEX2>
<TIMEX2 VAL="2001-04-
01">today</TIMEX2>
<TIMEX2 VAL="1999-03-13">el trece de
marzo de 1999</TIMEX2>
<TIMEX2 VAL="1999-03-13">the thirteenth of
March, 1999</TIMEX2>
                                                          
4 Our annotation guidelines state that a holiday name is
markable but should receive a value only when that value
can be inferred from the context of the text, rather than
from cultural and world knowledge.
<TIMEX2 VAL="2001-W12">la semana
pasada</TIMEX2>
<TIMEX2 VAL="2001-W12">last
week</TIMEX2>
6 Related Work
Our scheme differs from the recent scheme of
(Setzer and Gaizauskas 2000) in terms of our in-
depth focus on representations for the values of
specific classes of time expressions, and in the
application of our scheme to a variety of
different genres, including print news, broadcast
news, and meeting scheduling dialogs. Others
have used temporal annotation schemes for the
much more constrained domain of meeting
scheduling, e.g., (Wiebe et al 1998),
(Alexandersson et al 1997), (Busemann et al
1997).  Our scheme has been applied to such
domains as well, our annotation of the
Enthusiast corpus being an example.
7 Conclusion
In the future, we hope to extend our English
annotation guidelines into a set of multilingual
annotation guidelines, which would include
language-specific supplements specifying
examples, tokenization rules, and rules for
determining tag extents. To support
development of such guidelines, we expect to
develop large keyword-in-context concordances,
and would like to use the time-tagger system as
a tool in that effort.  Our approach would be (1)
to run the tagger over the desired text corpora;
(2) to run the concordance creation utility over
the annotated version of the same corpora, using
not only TIMEX2 tags but also lexical trigger
words as input criteria; and (3) to partition the
output of the creation utility into entries that are
tagged as temporal expressions and entries that
are not so tagged.  We can then review the
untagged entries to discover classes of cases that
are not yet covered by the tagger (and hence,
possibly not yet covered by the guidelines), and
we can review the tagged entries to discover any
spuriously tagged cases that may correspond to
guidelines that need to be tightened up.
We also expect to create and distribute
multilingual corpora annotated according to
these guidelines. Initial feedback from machine
translation system grammar writers (Levin
2000) indicates that the guidelines were found to
be useful in extending an existing interlingua for
machine translation. For the existing English
annotations, we are currently carrying out inter-
annotator agreement studies of the work of the 6
annotators.
References
J. Alexandersson, N. Reithinger, and E. Maier.
Insights into the Dialogue Processing of
VERBMOBIL. Proceedings of the Fifth
Conference on Applied Natural Language
Processing, 1997, 33-40.
S. Busemann, T. Declerck, A. K. Diagne, L. Dini, J.
Klein, and S. Schmeier. Natural Language
Dialogue Service for Appointment Scheduling
Agents. Proceedings of the Fifth Conference on
Applied Natural Language Processing, 1997, 25-
32.
L. Ferro, I. Mani, B. Sundheim, and G. Wilson.
TIDES Temporal Annotation Guidelines. Draft
Version 1.0. MITRE Technical Report MTR
00W0000094, October 2000.
L. Hirschman, F. Reeder, J. Burger, and K. Miller,
Name Translation as a Machine Translation
Evaluation Task. Proceedings of LREC?2000.
ISO-8601 ftp://ftp.qsl.net/pub/g1smd/8601v03.pdf
1997.
L. Levin. Personal Communication.
I. Mani and G. Wilson. Robust Temporal Processing
of News, Proceedings of the ACL'2000
Conference, 3-6 October 2000, Hong Kong.
MUC-7. Proceedings of the Seventh Message
Understanding Conference, DARPA. 1998.
http://www.itl.nist.gov/iad/894.02/related_projects/muc/
A. Setzer and R. Gaizauskas. Annotating Events and
Temporal Information in Newswire Texts.
Proceedings of the Second International
Conference On Language Resources And
Evaluation (LREC-2000), Athens, Greece, 31
May- 2 June 2000.
TDT2
http://morph.ldc.upenn.edu/Catalog/LDC99T37.ht
ml 1999
J. M. Wiebe, T. P. O?Hara, T. Ohrstrom-Sandgren,
and K. J. McKeever. An Empirical Approach to
Temporal Reference Resolution. Journal of
Artificial Intelligence Research, 9, 1998, pp. 247-
293.
Appendix 1: Annotated
Corpus: Enthusiast Dialog
Example (one utterance)
Transcript of Spanish source:
EL LUNES DIECISIETE IMAGINO QUE
QUIERE DECIR EL DIECISIETE TENGO UN
SEMINARIO DESDE LAS DIEZ HASTA LAS
CINCO
Annotated English translation:
<TIMEX2 VAL=?2000-05-17?>MONDAY
THE SEVENTEENTH</TIMEX2> I IMAGINE
YOU MEAN <TIMEX2 VAL=?2000-05-
17?>THE SEVENTEENTH</TIMEX2> I
HAVE A SEMINAR FROM <TIMEX2
VAL=?2000-05-17T10?>TEN </TIMEX2>
UNTIL <TIMEX2 VAL=?2000-05-
17T17?>FIVE
</TIMEX2>
Note:  Elements of range expressions are tagged
separately.  The VAL includes date as well as
time because of the larger context.  The
annotator has confidently inferred that the
seminar is during the daytime, and has coded the
time portion of the VAL accordingly.
Appendix 2: Annotated
Corpus: New York Times
Article (excerpt)
   Dominique Strauss-Kahn, France's finance
minister, said: "<TIMEX2 VAL=?1999-01-01?>
Today</TIMEX2> is clearly <TIMEX2
NON_SPECIFIC=?YES?>a historic day for the
European enterprise</TIMEX2>. Europe will be
strong, stronger than in <TIMEX2
VAL=?PAST_REF?>the past</TIMEX2>,
because it will speak with a single monetary
voice."
   But even on <TIMEX2 VAL=?1998-12-31?>
Thursday </TIMEX2>, there were signs of
potential battles ahead.
   One hint came from Duisenberg, a former
Dutch central banker who was named president
of the European Central Bank only after a bitter
political fight <TIMEX2 VAL=?1998-05?>last
May</TIMEX2> between France and Germany.
Duisenberg, a conservative on monetary policy,
was favored by Helmut Kohl, who was
<TIMEX2 VAL=?1998-05?>then</TIMEX2>
chancellor of Germany. But President Jacques
Chirac of France insisted on the head of the
Bank of France, Jean-Claude Trichet.
   Germany and France eventually cut a deal
under which Duisenberg would become
president of the new European bank, but
"voluntarily" agree to step down well ahead of
<TIMEX2 VAL=?P8Y? MOD=?END?>the end
of his eight-year term</TIMEX2>.
