Mul t i l i ngua l i ty  in a Text  Generat ion  System 
For Three  Slavic Languages  
Geert-Jan Kruijff a, Elke Teich t', John Bateman ~, Ivana Kruijit;Korbayovfi", 
Hana Skoumalovg ~,Serge Sharoff 'l, Lena Sokolova d, Tony Hartley ~, 
Kamenka Staykova/, Ji~'~ Hana" 
?Charles University, Prague; ~University of the Saarland; ~University of Bremen; 
aRRIAI, Moscow; ?University of Brighton; /IIT, BAS, Sofia 
http://www.itri.brighton.ac.uk/projects/agile/ 
Abstract 
This paper describes a lnultilingual text generation 
system in the domain of CAD/CAM software in-- 
structions tbr Bulgarian, Czech and l:\[ussian. Start- 
ing from a language-independent semantic represen- 
tation, the system drafts natural, continuous text 
as typically found in software inammls. The core 
modules for strategic and tactical gene,'ation are im- 
plemented using the KPML platform for linguistic 
resource development and generation. Prominent 
characteristics of the approach implemented a.re a 
treatment of multilinguality that makes maximal use 
of the cominonalities between languages while also 
accounting for their differences and a common repre- 
sentational strategy for both text planning and sen- 
tence generation. 
1 In t roduct ion  
This paper describes the Agile system I tbr the 
multilingual generation of instructional texts as 
found in soft;ware user-manuals in Bulgarian, 
Czech and Russian. The current prototype fo- 
cuses on the automatic drafting of CAD/CAM 
software documentation; routine passages as 
found in the AutoCAD user-manual have been 
taken as target texts. The application sce- 
nario of the Agile system is as follows. First, 
a user constructs, with the help of a GUI, 
language-independent task models that spec- 
ify the contents of the documentation to be 
generated. The user additionally specifies the 
language (currently Bulgarian, Czech or Rus- 
sian) and the register of the text to be gen- 
erated. The Agile system then produces con- 
tinuous instructional texts realizing the speci- 
fied content and conforming to the style of soft- 
ware user-manuals. The texts produced are 
1EU Inco-Copernicus project PL961004: 'Automatic 
Generation of Instructional Texts in the Languages of 
Eastern Europe' 
intended to serve as drafts for final revision; 
this ~drafting' scenario is therefbre analogous to 
that first explored within the Drafter project. 
Within the Agile project, however, we have ex- 
plored a more thoroughly nmltilingual architec- 
ture, making substantial use of existing linguis- 
tic resources and components. 
The design of the Agile system overall re, sts 
on the following three assumI)tions. 
First, the input of the system should be spec- 
ified irrespective of any particular output lan- 
guage. This means that the user must be able to 
express the content that she wants the texts to 
convey, irrespective of what natural language(s) 
she masters and in what language(s) the out- 
put text shouM be realized. Such language- 
independent content specification can take the 
form of some knowledge representation pertain- 
ing to the application domain. 
Second, the texts generated as the outtmt of 
the system should be well-formulated with re- 
spect to the expectations of natiw. ? speakers of 
each particular language covered by the system. 
Since differences among languages may appear 
at any level, language-sensitive d cisions about 
the realization of the specified content must be 
possible throughout he generation process. 
And third, the notion of multilinguality em- 
ployed in the system should be recursive, in 
the sense that the modules responsible tbr the 
generation should themselves be multilingual. 
The text generation tasks which are common 
to the languages under consideration should be 
pertbrmed only once. Ideally, there should be 
one process of generation yielding output in 
multiple languages rather than a sequence of 
monolingual processes. This view of 'intrin- 
sic multilinguality' builds on the approach set 
out in Bateman et al (1999). Each module of 
the system is fnlly multilingual in that it simul- 
474 
taneously enables both integration of linguistic 
resources, defining commonalities bel;ween lan- 
guages, and resource integrity, in |;bat the in- 
dividuality of each of the language-speeitic re- 
sources of a multilingnM ensemble is always pre- 
served. 
We consider these assuml)l;ions an(l the view 
of multilinguality entailed by |;hem to be cru- 
cial for the design of efli;ctive multilingual text 
generation systems. The results so far a(:hicved 
by the Agile system SUl)port this and also ofl'er 
a ~soli(l experiential basis tbr the develot)mcnt of 
fllrther multilingnal generation systems. 
The overall operation of 1;t1(; Agile sysl;em is 
as tbllows. Al/tcr the us(u' has Sl)ecilied some 
inl;en(led text (;OlltenI; (described in Section 2) 
via the Agile GUI, the system i)ro(:eeds to gen- 
eral;e the texts required. To do this, a text 
t)lammr (Section 3) first assigns parts of the, 
task model to text elements and arranges l;h(;m 
in a hierarchical fashion a text t)lan. Then, a 
sentence plammr organizes I;he content of the 
text elements into sentence-sized elml~ks and 
ere~,tes the corresponding input fin' l;he tacti- 
ca,1 generator, expressed in standard sentence 
l)lamfing language (SPI,) lbrmulae. Finally, 1;11(; 
tactical g(meral;or generates t;he linguistic real- 
izations corresponding 1;o these Sl)l~s the text 
(Sect;ion 4). In the stage of the l)rojccI; rt}l)orte(l 
here, we, conceal;rated i)arl;icularly on \])roccdu- 
ral texts. These otlhr sl;el)-by-st;e t) des(:rit)t;ions 
of how to perlbrm domain tasks using the given 
software tools. A simplified version of one such 
procedural text is given (tbr English) in Fig- 
ure 1. This architectm:e mirrors the reference 
architecture for generation diseusse(t in I/,eiter 
8z Dale (1.997). The modules of the system are 
1)ipelined so that a continuous text is generated 
realizing the intended meaning of the inlmt se- 
mantic representation without backtracking or 
revision. 
Several important properties have ('haracter- 
ized the method of development leading to the 
Agile system. These are to a large extent re- 
sponsible for the eflhetiveness of the system. 
These include: 
Re-use  and  adaptat ion  o f  ava i lab le  re-  
sources .  We have re-used snt)stantial bodics 
of e, xisting linguistic resources at all levels rel- 
evant for the system; this t)laye(l a (:rueial role 
in achieving the Sol)histieatcd generation capa- 
7b d~nw a polylinc 
First start the PLINE command using one of these meth- 
ods: 
Windows From the Polylinc tlyout on the, l)raw tool~ 
lmr, choose Polylinc. 
DOS and UNIX  lqom the Draw menu, choose Poly- 
line. 
1.. Spccit~y the start point of the polyline. 
2. S1)ecil~y tim next point of the 1)olylinc. 
3. Press ll,cturn t;o end the polyline. 
Figure l: Example "To draw a polyline" 
bilities now displayed by the system in each of 
its languages of expertise prior to the project 
t\]m'l.'e were 11o substantial ~mtomatic generation 
systenls fi)r any of the languages covered. The 
core modules for strategic and ta(:ti('al gener- 
ation were all imt)lemcnted using the Kernel- 
Penman Multilingual system (KPML: ef Bate- 
man et al, \]999) a Common l,isp base(t gram- 
mar development environment, in addition, 
we adopted the Pemnan Upt)er Model as used 
within Pemnan/KPMl~ as the basis tbr our 
linguistic semantics; a more rcstri(:ted domain 
model (DM) rclewmt o the CAD/CAM-domain 
was &',lined as a st)e('ialization of l;he UM con- 
(:epts. The I)M was iuspired by the domain 
me(tel of the Drafter l)rojet:t, but l)res(ml;s a 
g(m(',ralizati()n ()f the latter in that it allows for 
eml)(;d(ling t:asks and illsLrut'|;ions t:o any arlfi- 
l;rm:y re(:ursive depth (i.e., more complex l;cxt; 
plans). Ah'eady existing lexical resom:ces and 
morphological modules availabh; to the 1)ro.j(',ct 
were re-used tbr Bulgarian, Czech and l~.ussian: 
the Czech and Bulgarian components were mo(t- 
ules written in C (e.g., IIaji(: L; Hla(lk~, 1997, 
tbr Czech) that were interfimed with KPMI, us- 
ing a standard set of API-methods (of. Bate- 
man & Sharoff, 1998). Finally, because no 
grammars uitable for generation in Bulgarian, 
Czech and l/.ussia,n existed, a grammar tbr En- 
glish (NIGEL: Mann & Matthiessen, 1985) was 
re-used to lmild them; tbr the theoretical basis 
of this technique see Teich (1995). 
Combinat ion  o f  two  methods  o f  resources  
deve lopment .  Two methods  were com- 
bined to enable us to develop basic general- 
language grammars and sublanguage grammars 
fin: CAD/CAM instructional texts at; |;11(; same 
time. One nmthod is the system-oriented one 
aimed at lmildiug a computational resource 
475 
with a view of the whole language system: this 
is a method strongly supported by the KPML 
development environment. The other method 
is instance-oriented, and is guided by a detailed 
register analysis. The latter method was partic- 
ularly important given the Agile goal of being 
able to generate texts belonging to rather di- 
verse text types- -  e.g., impersonal vs. personal; 
procedural, flmetional descriptions, overviews 
etc. 
Cross-linguistic resource-sharing. A cross- 
linguistic approach to linguistic specifications 
and implementation was taken by maximizing 
resource sharing, i.e. taking into account sim- 
ilarities and differences among the treated lan- 
guages o that development tasks have been dis- 
tributed across different languages and re-used 
wherever possible. 
2 Language- independent  Content 
Specif icat ions 
The content constructed by a user via the Ag- 
ile GUI is specified in terms of Assertion-bozes 
or A-boxes. These A-boxes are considered to 
be entirely neutral with respect o the language 
that will be used to express the A-box's con- 
tent. Thus individual A-boxes can be used for 
generating multiple languages. A-boxes spec- 
i(y content by instantiating concepts from ~,he 
DM or UM, and placing these concepts in rela- 
tion to one another by means of configurational 
concepts. The configurational concepts define 
adnfissible ways in which content can be struc- 
tured. Figure 2 gives the configurational con- 
cepts distinguished within Agile. 
Procedure A procedure has three slots: 
(i) GOAL (obligatory,filled by a USER-AcTION), 
(ii) METIIODS (optional, filled by a METHOD-LIsT), 
(iii) SIDE-EPFECT (optional, filled by a USER- 
EVENT). 
Method A method has three slots: 
(i) CONSTRAINT (optionM, filled by an OPERATING- 
SYSTEM), 
(ii) PaEeONDITION (optional, filled by a PROCE- 
DURE), 
(iii) SUUSTEPS (obligatory, filled by a PI~OCEDUI/E- 
LIST). 
Method-List A METIIOD-LIST is a list of h/IETIIOD'S. 
Procedure-List A PROCEI)URE-LIST is a list of 
PROCEDURE:S. 
Figure 2: Configurational concepts 
Configurational concepts are devoid of actual 
content. Tile content is provided by inst, antia- 
tions of concepts that represent various user ac- 
tions, interface events, and interface modalities 
and functions. Taken together, these instanti- 
ations provide the basic propositional content 
tbr instructional texts and are taken as input 
tbr the text planning process. 
3 Strategic Generat ion: From 
Content  Specif icat ions to Sentence 
Plans 
To realize an A-box as a text, we go through suc- 
cessive stages of text planning, sentence plan- 
ning, and lexico-grammatical generation (cf 
also Reiter & Dale, 1997). At each stage there 
is an increase in sensitivity to, or dependency 
on, the target language in which output will 
be generated. Although the text planner itself 
is language-independent, the text; plamfing re- 
sources may (lifter fl'om language to language 
as much as is required. This is exactly analo- 
gous to the situation we find within the individ- 
ual language grammars as represented within 
KPML: we therefore represent the text planning 
resources in the same fashion. For the text type 
and languages of concern here, however, w~ria- 
lion across languages at the text planning stage 
turned out to be minimal. 
The organization of an A-box is used to guide 
the text planning process. Itere, we draw a dis- 
tinction between text structure elements (TSEs) 
as the elements from which a (task-oriented) 
text, is built ut), and text templates', which con- 
dition the way TSEs are to be realized linguis- 
tically. We locus on the relation between con- 
cepts on the one hand, and TSEs on the other. 
We are specifically interested in the configura- 
tional concepts that are used to configure the 
content specified in an A-box because we want 
to maintain a close connection between how the 
content can be defined in an A-box and how 
that content is to be spelled out in text. 
3.1 Structuring and Styling 
A text structure element is a predefined com- 
ponent that needs to be filled by one or more 
specific parts of the user's content definition. 
Using the reader-oriented terminology common 
in technical authoring guides, we distinguish 
a small (recursively defined) set of text TSEs; 
these are listed in Figure 3. 
476 
Task-Docmnent  A TASK-\])OCUMFNT has tWO slots: 
(i) TASK-TFI'I,E (ol)ligatory), 
(ii) TASK-INSTI{U(ITIONS (obligatory), being a list 
of" at least one ~\[NSTRUCTION. 
Instruction An INSTRUCTION has three slots: 
(i) TASKS (obligatory), being a list of at least one 
TASK~ 
(ii) CONSTRAINT (optional), 
(iii) Pm,ZCONDITION (optional). 
Task  A TASK has two slots: 
(i) INSTRUCTIONS (ol)tional), 
(ii) SII)I';-EI,'I"I,:C'I' (ol)tional). 
Figure 3: Text Structure Elements (TSEs) 
The TSEs are placed in correspondence with 
the configurational concet)ts of the DM (cf. Fig- 
ure 2); this enat)les us to lmild a text stru('ture 
l;hat folh)ws the structuring of the content in an 
A-1)ox (cf. Figure 4). 
Orthogonal to the notion of text structure l- 
ement is the notion of text temt)late. Whereas 
TSEs capture what needs to be realized, the 
text template (:al)tures how that content is to 
1)e realized. Thus, a feint)late defines a style 
for expressing the content. Am we discuss be- 
low, we define text templates in terms of con- 
straints on the realization of si)e(:iti(" (in(tivid- 
ual) TSEs. D)r examt)le, whereas in Bulgarian 
and Czech headings (to which the '\]'ASK-TITLE 
element corresponds: of. Figure 4) are usually 
realized as nominal groups, in the Russian Au- 
toCAD ulallnal headings are realized as nonii- 
nile purpose clauses as they are ill English. 
3.2 Tex~ P lann ing  g~ Sentence  P lann ing  
The major component of the text pbmner is 
fi)rnmd by a systemic network fi)r text struc- 
turing; this network, called the text structur- 
ing region, defines an additional level of linguis- 
tic resources for the level of genre. This region 
constructs text structures in a way that is very 
similar to the way in which the systemic net- 
works of the grammars of the tactical genera- 
|or build up grammatical structures. In fact, 
by using KPML to implement his means for 
text structuring, the interaction between global 
level text generation (strategic generation) and 
lexico-grammatical expression (tactical genera- 
tion) is greatly facilitated. Moreover, this al)- 
t)roach has the advantage |;tint constraints on 
output realization can 1)e easily accmnulated 
and propagated: for example, the text plan- 
ner can iml)ose constraints on the output lexico- 
grammatical realization of particular text t)lan 
elements, such am the realization of text head- 
ings by a nominalization ill Czech and Bulgar- 
|an or by an infinite purpose clause in Rus- 
sian. This is one contribution to overcoming the 
notorious generation gap prol)leln caused when 
a text planning module lacks control over the 
line-grained istinctions that m'e available in a 
grmmnar. Ill our case, both text plamfing and 
sentence planning are integrated into one and 
the same system and are distinguished by strat- 
ification. 
TASK-TITLE ~-} GOAl, of topmost  PROCEDURE 
TASK-INSTRUCTIONS ~-} METIIODS of PROCEDUI/E 
Sll)E-EIq,'ECT ~ SIDhl-EFFI~CT of PROCEDUII.I\] 
TASK /-~ GOAL of PROCEI)IHtI,; 
(-JONSTRA1NT <-} CONSTRAINT of ~41,VI'IIO1) 
PRECONI)ITION ~ PIH?COND1TION of ~,4ETI1OI) 
1NSTIIUCTI(IN-TAsKS 1--} SUBSTH)S of a METIIOD 
INST1HJCTION +5 MI,TI'IIOD 
Figure 4: Mapping TSEs and configurational 
concepts defined in the DM 
Following on from the orthogomflity of text 
t/;mplates and text structure elements, the text 
structuring region consists of two parts. One 
1)arl; deals wil;h interpreting the A-box in terms 
of TSEs: traversing l;he network of this part of 
the region produces a text structure for the A- 
b/lx contbrufing to the definitions above. The 
second part of the region imposes constraints 
on the realization of the TSEs introduced by 
the first part. Divers(; constraints can be ira- 
posed depending on the user's choice of style, 
e.g., personal (featuring ppredominantly imper- 
atives) vs. impersonal (tbaturing indicatives). 
Tile result of text plmming is a text plan. 
This can be thought of as a hierarchical struc- 
ture (built by TSEs) with lilts of A-box content 
at; its leaves together with additional constraints 
imposed by the text planning process: e.g., that 
the Title segment of the document should not be 
realized as a full (:lause but; rather as a nominal 
phrase or a lmrt)osive det)endent clause. The 
text plan may also include constraints on pre- 
ferred layout of the docmnent elements: this 
ilflbrmation is passed on via HTML annotations. 
The sentence plmmer then takes this text plan 
as intmt, and creates SPL tbrmulae to express 
477 
the content identified by the text plan's leaves. 
The resulting SPLs can also group one or more 
leaves together (aggregation) det)ending on de- 
cisions taken by the text planner concerning dis- 
course relations. Furthennore, constraints on 
realization that were introduced by the text- 
planner are also included into the SPLs at this 
stage. 
Of particular interest multilingually is the 
way concepts may require different kinds of re- 
alizations ill different languages. For example, 
languages need not of course realize concepts 
as single words: in Czech the concept Mcn,t 
gets realized as "menu" but the interface modal- 
ity Dialogboz is realized as a multiword expres- 
sion "dialogovd okno" (whose compofients i.e., 
an adjective and a nominal head may undergo 
various grammatical operations independently). 
The Agile system sentence plammr handles uch 
cases by inserting SPL fbrms corresponding to 
the literal semantics of the complex expressions 
required; these are then expressed via the tac- 
tical generator in the usual way. The result- 
ing SPL formulas thus represent the language- 
specitic semantics of the sentences to be gener- 
ated. Otherwise, if a concept maps to a single 
word, the sentence planner leaves the fnrther 
specification of how the concept should be re- 
alized to the lexico-grammar nd its concept- 
to-word mapI)ings. More extensive diflb.rences 
between languages are handled by conditional- 
izing the text and sentence planner resources 
fltrther according to language. 
4 Tactical Generat ion:  From 
Sentence P lans  to Sentences 
The tactical generation component hat colt- 
structs sentences (and other grammatical units) 
fl'om the SPL tbrmulae specified in the text 
plan relies on linguistic resources tbr Bulgarian, 
Czech and Russian. The necessary grammars 
and lexicons have been constrncted employing 
the methods described in Section 1. As ,toted 
there, the crucial characteristic of this model 
of nmltilingual representation is that it allows 
tbr the representation f both, commonalities and 
differences between languages, as required to 
cover the observable ontrastive-linguistic phe- 
nomena. This can be applied even among typo- 
logically rather distant languages. 
We first illustrate this with respect o some 
of the contrastive-linguistic t)henomena that are 
covered by this model employing exami)les ti'om 
English, Bulgarian, Czech and Russian. We 
then show the organization of the lexicons and 
briefly describe lexical dloice. 
4.1 Semantic and grammatical 
cross-linguistic variation 
One. of the tenets of our model of cross-linguistic 
variation is that languages have a rather high 
degree of similarity semantically attd tend to 
differ syntactically. We can thus expect o have 
identical SPL expressions for Bulgarian, Czech 
and Russian in many cases, although these may 
be realized by diverging syntactic structures. 
However, we also allow for the case in which 
there is no commonality at; this level and even 
the SPL expressions diverge. 2 Example 1 illus- 
trates the latter case (high semantic divergence, 
plus grammatical divergence), and example 2 
the former (semantic ommonality, plus gram- 
matical divergence). 
Example 1: English and Russian spa- 
tial PPs .  The major lexico-grammatical d i f  
ference l)etween English and Russian preposi- 
tional phrases is that the relation expressed by 
the PP is realized by the choice of the prepo- 
sition in English, whereas in Russian, it; is in 
addition realized by case-government. In the 
are.a of spatial PPs, the choice of a particular 
preI)osition in English corresl)onds to a distinc- 
tion in the dimensionality of the object that re- 
alizes the range of the relation expressed by the 
PP. For both PPs expressing a location and PPs 
expressing movement, English distinguishes be- 
tween three-dimensional objects (in, into), one- 
or-two-dimensional objects (on, onto) and zero- 
dimensional objects (at, to). 
In Russian, in contrast, zero-or-three dimen- 
sional objects (preposition: v) are opposed 
to one-or-two-dimensional objects (preposition: 
ha). A fnrther difference between the expres- 
sion of static location vs. movement is expressed 
by case selection: na/v+locative case expresses 
static location, v/na+accusative case expresses 
inovement (entering or reaching an object) and 
the preposition k+dative case expresses move- 
inent towards an object (,lot quite reaching or 
2This distinguishes our approach fl'om interlingua- 
based systems, which typically require a common seman- 
tic (or conceptual) input. 
478 
entering it). In the {-onverse relation, motion 
away from an object, s is sele, eted tbr move- 
ment from within an oh.joel;, and ot fbr move- 
men| away from the vicinity of an ot).jeet. Her(;, 
both prel)ositions govern genitive case. The di- 
mensionality of the object is only relevant for 
the distinction between v/na and s/ot, 1)ut not 
for h. Since the concel)tualizations of spatial re- 
lations are ditf'erent across \]'3nglish and Russian, 
the input SPL expressions diverge, as shown in 
Figure 5); rather than using domain model con- 
cepts, these SPL ext)ressions restrict hemselves 
to Ut)pe, r Model concepts in order to highlight 
the cross-linguistic contrast. This examl)le illus- 
trates well how it is (}ften ne{:e, ssary t{} 'semanti- 
{:ize,' eve, nts differently in (tilt'ere|d; languages in 
order 1;o achieve the most natural results. Not;{; 
that Cze, ch is here very similar to l/nssian. 
a. SPL Russian 
(example 
:name DO-Textl-Ku 
:targetform "Pomestite fragment v bufer." 
:logicalform 
(s / dispositive-material-action 
:lex pomestitj 
:speech-act-id command 
:actee (a / object :lex fragment) 
:destination (d / THREE-D-0BJECT 
:lex bufer))) 
1}. SPL Rn: English 
(example  
:name D0-Textl-En 
:targetform "Put the selection on the clipboard." 
:iogicalform 
(s / dispositive-material-action 
:lex put 
:speech-act-id command 
:actee (a / object :lex selection) 
:destination (d / ONE-0R-TW0-D-0BJECT 
:lex clipboard))) 
Figure 5: SPI, ext}ressions 
Example 2: English, Bulgar ian and Czech 
headers in CAD/CAM texts. Grammatical 
ullits (1) (4) below show all ex~?tIllt, e of ,:r,,ss- 
linguistic commonality at the level of sen|anti{: 
int}ut and divergence at the le, vel of grammar. 
These units all time|ion as selfsutficient Task- 
titles tbr the deseril}tions of particular actions 
that can be t)erformed with the given s{}t'tware. 
(1) En: T{} draw a polyline 
(2) BU: qepTaene na IlOJII4MI4IIFIH 
Drawing- of polylineqNDEF 
NOMINAL  
(3) Cz: Kreslenl kf'ivky 
drawing-NOMINAL \]ine-GEN 
(d) \]/,ll: LIwo6I,I Hal)I4COBaTI, IIO,KHJIIIIIHIO 
in-order draw-INF l)olyline-AcC 
There are two major dit  re,,,ces (:,) (4) 
that need to 1)e accounte, d for: (i) they exhibit 
divergent grammatieal  ranks in that (1) and 
(4) are clauses (uontinite), while (2) and (3) are 
nomil,al groul,s (nominalizations); and ( i i )they 
show divergent syntact ic realizations: (2) 
and (3) ditl'er in that in Bulgarian, wlfich does 
not have (:as(',, the relation 1)etween the syntactic 
head Met)q_'aelte (ch, crtacnc) and the modifier lie- 
:mamma (polilinia) is (;xt)ressed by a t)re, position 
na (ha), whereas in Cze, ch, which has cast, this 
relation is expressed by genitive case, (k?ivky). 
\])espite these (litferen(:es, only the first diver- 
gen(:e has any (;onsequen(:{;s for the S\])L ext)res- 
sions rcquir(;d; I;hc l)asie semantic ommona\]- 
ity among (1)(4)  is 1)reserve, d. This is shown 
in Figm:e 6 t)y me, ans of the standard linguis- 
tic conditionalization 1)rovided 1)y KPML l'or all 
levels of linguistic des(:ription. The COll(tition- 
alization shows that both the English (1.) and 
the Russian (4) ar(' nontinite clauses while, the 
\]hdgarian (2) and the Czech (3) are nominM- 
izations. These S\])l, ext)ressions also show the 
use of (lom~dn ('onc(;1)ts as i)rodu('e(l by the text 
tfl~mner rathe, r than Ut)lmr model concepts as in 
the SPLs in Figure, 5. 
(example 
:name DO-Textl 
:logicalform 
(s / DM::draw 
:en :ru :PROPOSAL-Q & PROPOSAL 
:bu :cz :EXIST-SPEECHACT-Q & NOSPEECHACT 
:actee (d / DM::polyline))) 
Figure 6: Multilingual SPL e, xpression tbr the 
header examlfles 
The second differen('e is handled by the gener- 
ation grmmnars internally. Here, Bulgarian and 
Czech share the basic tractional-grammatical 
description of t)ostmotlifie, rs tbr nomilmlizati(ms 
(Figm:e 7). The ditl'erence in structure only 
479 
shows in syntagmatic realization and is separate 
from the functional description: For Bulgarian, 
the postmodifier marker Ha (ha: %f') is inserted, 
and tbr Czech, the nominal group realizing the 
Postmodifier is attr ibuted genitive ease. a
(gate 
:name MEDIUM-QUALIFIER 
:inputs processual-mediated 
:outputs 
((i.0 medium-qualifier 
(:bu :cz preselect Medium nominal-group) 
(:cz preselect Medium noun-gen-case) 
(:bu insert Mediumqualifiermarker) 
(:bu lexify Mediumqualifiermarker na))) 
:region QUALIFICATION) 
Figure 7: Shared system tbr Bulgarian and 
Czech 
4.2 Lexical choice and lexicons 
The lexical items tbr each language are selected 
from the lexicon via the domain model. A DM 
concept is annotated with one or more lexical 
items from each language. If there is more than 
one item per language, the choice is constrained 
by features imposed by the gralnmar. 
For example the concept DN::draw is anno- 
tated with two lexical items which are the im- 
perfective and perfective forms of the verb draw 
in Czech, Bulgarian and Russian. If the gram- 
mar selects imperfective aspect, tim first is cho- 
sen; if the grammar selects perfective aspect, 
the second is chosen. This mechanism is used 
also fbr the choice between a verb and its nom- 
inalization, among others. With the help of the 
lexicon, the inflectional properties collected tbr 
a particular lexical item during generation are 
translated into a format suitable tbr external 
morphological modules, which are then called. 
The result of the external module, the inflected 
tbrm, is passed back to the KPML system and 
inserted into the grammatical structure. 
5 Eva luat ion  and Conc lus ions  
A first round of evaluation has been carried 
out on the Agile prototype. This directly as- 
sessed the ability of users to control multilin- 
3This description is also valid for Russian, which has a 
nominal group structure similar to Czech. The 13ulgarian 
one is more like English. 
gual generation in tile three languages, as well 
as the design and robustness of the system eom- 
1}onents. Groups of users were given a brief 
training period and then asked to construct 
A-boxes expressing iven content. Texts were 
cross-generated: i.e., the languages were w~ried 
across the A-boxes independently of the native 
languages of the subjects who created them. Er- 
rors were then classified and recommendations 
for the next and final Agile prototype collected. 
The generated texts were then evaluated by ex- 
pert technical authors. They were generally 
judged to be of a broadly similar quality to 
the texts originating from manuals, and both 
kinds of texts received similar criticism. The 
main source of criticism and errors was the de- 
sign of the GUI which is now being improved 
for the final prototype. The overall design of 
the system has theretbre shown itself to offer an 
etfective approach tbr multilingual generation. 
We are now extending the system to cover a 
broader ange of text types as well as the further 
grammatical and semantic variation required by 
the evaluators as well as by the additional text 
types. 
Re ferences  
Bateman, J. A., Matthiessen, C. M. I. M., & Zeng, L. 
(1999). Multilingual natural anguage generation 
for multilingual software: a flmctional inguistic 
approach. Applied Artificial hdelligencc, 13(6), 
607-639. 
Bateman, J. A. & Sharoff, S. (1998). Mult, ilingual 
grammars and multilingual lexicons for nmltilin- 
gual text; generation. In Mnltilinguality in the Icz- 
icon II, ECAI'98 Workshop 13, (pp. 1-8). 
Hajie, J. 8; Hladk?, B. (1997). Probabilistic and 
rule-based tagger of an inflective language a 
comparison. In Proceedings of ANLP'97, (pp. 
111-118). 
Mmm, W. C. & Matthiessen, C. M. I. M. (1985). 
Demonstration of the Nigel text generation com- 
puter progrmn. In J. D. Benson 8: W. S. Greaves 
(Eds.), Systemic Perspectives on Discourse, Vol- 
ume 1 (pp. 50-83). Ablex. 
Reiter, E. & Dale, R. (1997). Building applied natu- 
ral language generation systems. Journal of Nat- 
ural Language Engineering, 3, 57-87. 
Tcich, E. (1995). Towards a methodology for the 
construction of multilingual resources tbr multi- 
lingual text generation. In Proceedings of the I J- 
CAI'95 workshop on multilingual generation, (pp. 
136-148). 
480 
The Chinese Aspect System and its Semantic Interpretation  
Guowen Yang and  John A. Bateman 
FB10, Sprach und Literaturwissenschaften 
Bremen University, 28334 Germany 
gwyang@uni-bremen.de  bateman@uni-bremen.de 
 
Abstract: Motivated by a systematic 
representation of the Chinese aspect forms 
that explores their intrinsic semantics and 
temporal logical relations, we are constructing 
a Chinese aspect system network based on 
systemic functional grammar and 
implemented using the multilingual generator 
KPML. In this paper, we introduce the basic 
simple primary aspect forms and a set of 
secondary types of the unmarked-durative 
aspect in our Chinese aspect system, describe 
the semantic temporal relations of complex 
aspect in terms of temporal logic theories, and 
propose principled semantic conditions for 
aspect combination. Finally, we give a brief 
explanation of the system implementation.  
1.  Motivation 
Chinese aspect is a traditional area of research 
that has always brought up questions and 
confusion for both theoretical and 
computational linguists. Our own practical 
motivation for  exploring  this area addresses 
two concerns. First, most existing research 
achievements in Chinese aspect have 
interpreted the semantics of Chinese aspect in 
intuitive and general terms rather than in 
terms of temporal logic theories1; the latter is 
however crucial for computational imple-
mentation. Second, Chinese linguists 
traditionally focus their attention on simple 
primary aspect (simple aspect) forms, but 
make no efforts either theoretically or 
computationally to deal with the large variety 
of complex aspects. Although the frequency 
of appearance of complex aspects is not as 
high as that of simple primary aspect types, 
they nevertheless play an important role in the 
Chinese aspect system and cannot be ignored. 
To meet these problems, we are constructing 
a  complete  Chinese  aspect  system in which  
                                                 
1 Exception to this are Smith (1991) and Dai Y-J 
(1997) who have investigated Chinese aspect in 
terms of temporal logic theories. Their studies 
have focused particularly on simple aspect forms 
however. 
all aspect expressions, including both simple 
primary aspect forms and complex aspect 
forms,  are systematically organized. We are 
implementing the system using the KPML 
multilingual generator (Bateman, 1997), 
interpreting the intrinsic semantics of each 
aspect  form   in  terms  of  existing   temporal 
logic  theories. In  this  paper  we  focus on 
the generation of complex aspect.  
2.  The overview of Chinese  
complex aspect 
Both Chinese and English have complex 
aspect forms. Halliday (1976) describes forty 
eight possible forms of English tense and 
elaborates the ways in which the complex 
tense forms are combined. In Halliday?s tense 
theory, the complex tense forms of English 
are recursively built up from primary tense to 
secondary tense, to tertiary tense, etc. 
Compared with English, the Chinese aspect 
system 2  is rather different. In the Chinese 
aspect system, the combination of individual 
aspects is much more semantically restricted 
and much less grammatically regular than that 
in English.  As a consequence, it gives rise to 
more difficulties in both theoretical 
explanation and practical implementation.   
We look into the details of this below. 
We propose that the Chinese aspect system 
has basically seventeen simple primary aspect 
forms3. They are shown diagrammatically in 
Figure 1. 
                                                 
2  Chinese has no morphological tense markers. 
Tense in Chinese is realized lexically. 
3 It is our opinion that the Chinese aspect system 
is actually composed of both aspect morphemes   
(-le, -zhe, -guo4, etc.) and aspect adverbials (Yang, 
1999, 2001). 
 
              name              form               name               form 
unmarked-perfect ??(yi3jing1)+V+?(le) unmarked-realized V+?(le) 
marked-perfect ??(yi3jing1)+V 
unmarked-remote-
experiential 
??(ceng2jing1)+V+?(guo) unmarked-
experiential 
V+?(guo) 
marked-remote-
experiential  
??(ceng2jing1)+V 
recent-past-existing V+ (N) + ??
(lai2zhe) 
unmarked-durative V+?(zhe) 
activity-durative ?(zai4)+V long-durative ??(yi1zhi2)+V 
activity-progressive ??(zheng4zai4)+V unmarked-
progressive 
?(zheng4)+V 
start-and-continue V+??(qi3lai2) continue-to-future V+??(xia4qu4) 
written-imminent-
future-existing 
??/??
(jiang1yao4/ji2jiang1) 
+V 
unmarked-future-
existing 
?(jiang1)+V 
spoken-imminent-
future-existing 
??/?(jiu4yao4/kuai4)+V 
Figure 1. The simple primary aspect forms 
 
                         name & form                                example 
long-and-unmarked-durative 
??(yi1zhi2)+V+?(zhe) 
?????????? 
nuo4ke4si1 hao4 yi1zhi2 hang2xing2 zhe 
(The Knox has been sailing all along.) 
marked-remote-experiential-unmarked-
durative 
??(ceng2jing1)+V+?(zhe) 
??????????? 
na4 fu2 hua4 ceng2jing1 zai4 zhe4er gua4 zhe 
(That picture was once hanging here.) 
recent-past-existing-unmarked-durative 
V+?(zhe)+??(lai2zhe) 
????????????? 
na4 fu2 hu4 gang1cai2 zai4 zhe4er gua4 zhe lai2zhe   
(That picture was hanging here just now.) 
unmarked-realized-unmarked-durative 
V+?(zhe)+?(le) 
????????????? 
ming2tian1 na4 fu2 hua4 jiu4 zai4 zhe4er gua4 zhe le  
(That picture  will be hanging here from tomorrow.) 
unmarked-perfect-unmarked-durative 
??(yi3jing1)+V+?(zhe)+?(le) 
?????????????? 
na4 fu2 hua4 xian4zai4 yi3jing1 zai4 zhe4er gua4 zhe le 
(That picture is already hanging here now.) 
unmarked-future-existing-unmarked-durative 
?(jiang1)+V+?(zhe) 
???????????? 
ming2tian1 na4 fu2 hua4 jiang1 zai4 zhe4er gua4 zhe  
(That picture will be hanging here tomorrow.) 
unmarked-progressive-unmarked-durative 
?(zheng4)+V+?(zhe) 
???????????? 
na4 fu2 hua4 xian4zai4 zheng4 zai4 zhe4er gua4 zhe  
(That picture is hanging here now.) 
Figure 2. The secondary types of unmarked-durative aspect 
The ?V? in the aspect forms denotes ?verb?; 
the ?/? shows disjunction; the name of each 
individual aspect was  chosen based on its 
intuitive semantic function. The unmarked-
perfect aspect ??+V+? (yi3jing1+V+le) is 
regarded as a simple aspect because it has the 
same function as the marked-perfect aspect  
? ? +V (yi3jing1+V). They differ only 
lexically. The situation is the same for the 
unmarked-remote-experiential aspect ? ?
+V+? (ceng2jing1+V+guo) and the marked-
remote-experiential aspect ?? +V (ceng2 
 jing1+V). The seventeen simple primary 
aspect forms belong to the three subsystems 
of perfective, imperfective (Comrie, 1976) or 
future-existing 4  according to the semantic 
properties in individual cases. Some simple 
primary aspect forms can combine to form 
various kinds of complex aspect. We call a 
combination involving two types of simple 
primary aspect an aspect of secondary type; 
the combination with three types of simple 
primary aspect  is an aspect of tertiary type. 
By analogy, we also have an aspect of 
quaternary type; this is the maximum 
possibility: no further types are attested (Yang, 
1999, 2001). The combination capacities of 
different simple primary aspect forms differ. 
For example, the simple primary aspect 
unmarked-durative V+ ?  (V+zhe), which 
belongs to the subsystem of  imperfective, 
combines with several other types of simple 
primary aspect to construct complex  aspect 
forms as shown in Figure 2. Some simple 
primary aspect forms, e.g. the simple primary 
aspect unmarked-experiential V+? (V+guo), 
have a very restricted capacity to combine 
with other simple aspect forms  to build 
complex aspect forms. 
 
3.  The semantic interpretation of 
Chinese complex aspect 
We briefly look into the profile of tense, 
aspect, and situation type, before examining 
closely the semantic temporal relations of 
complex aspect forms. We adopt Comrie?s 
theoretical framework of tense and aspect.   
?As far as tense is concerned, then, the 
reference point is typically the present 
moment, and tenses locate situations either at 
the same time as the present moment, or prior 
to the present moment, or subsequent to the 
present moment?? (Comrie, 1985, p.14). 
?Aspects are different ways of viewing the 
                                                 
4 It is controversial whether to include ?futurity? 
within the aspect category. We favor Halliday?s 
tense theory (Halliday, 1976). We also agree with 
Bache?s viewpoint ?it seems to me not only 
convenient but also legitimate to accept future 
TEMPORALITY as a genuine member of the 
metacategory of tense? (Bache, 1995, p. 266). 
Compatible claims are also made by Dahl (Dahl, 
1985, p.102-112). Also see Gong Q-Y (1995). 
 
internal temporal constituency of a situation?. 
(Comrie, 1976, p.3) Aspect is determined by 
the type of process 5  (in terms of systemic 
linguistics), the type of object, and the 
specific allocation of event initial time, 
speaking time and  reference time. The 
aspectual properties of different kinds of 
event may be generalized in terms of 
Vendler?s four situation types: states, 
activities, accomplishments, and achieve-
ments (Vendler, 1967). Situation types have 
nothing to do with the referential time of the 
event and are influenced only by process, 
object, and the time point or time interval 
over which the event holds. 
We define several predicates to be used to 
express temporal relations based on and 
slightly altering those of Allen (1984). The 
important ones are: 
PRECEDE(t1, t2) ? (t1<t2) 
SAME(t1, t2) ? (t1=t2) 
FAR-PRECEDE(t1, t2) ? (t1?t2) 
SHORTLY-PRECEDE(t1, t2) ? (t1^t2) 
NEARLY-EQUAL(t1, t2) ? (t1?t2) 
The predicates PRECEDE(t1, t2) and 
SAME(t1, t2) correspond to Allen?s predicates 
BEFORE(t1, t2) and EQUAL(t1, t2) respec-
tively. The difference between Allen?s predi-
cates and ours is that we use time points for 
definitions rather than time intervals.  The 
reason for this slight change is that when the 
system is going to generate an aspect 
expression, either a simple aspect or a 
complex aspect, the breakdown into the 
relevant time points is often needed.  
The predicate PRECEDE(t1, t2) indicates that 
the time point t1 precedes the time point t2 on 
the time axis. The predicate SAME(t1, t2) 
indicates that the time point t1 equals the time 
point t2 on the time axis. Three additional 
predicates are defined to meet the particular 
needs of expressing the temporal relations 
entailed by Chinese aspects. The predicate 
FAR-PRECEDE(t1, t2) indicates that the time 
point t1 precedes the time point t2 con-
siderably on the time axis. The predicate 
SHORTLY-PRECEDE(t1, t2) indicates that 
                                                 
5  ?A process consists potentially of three 
components: (i) the process itself; (ii) participants 
in the process; (iii) circumstances associated with 
the process.? (Halliday, 1985, p.101) 
 the time point t1 only shortly precedes the 
time point t2. The predicate NEARLY-
EQUAL(t1, t2) indicates that the time point t1 
lies close to the time point t2. We define ti, tf6, 
tr, and ts as the event initial time, the event 
finishing time, the reference time, and the 
speaking time respectively. 
From a theoretical point of view, to generate 
complex aspect forms not only must the 
temporal relations of individual  aspect forms 
and the complex aspect forms be correctly 
represented, but the semantic requirements for 
the combination must also be met. What 
determines the combining possibility between 
different  aspect forms is their  own intrinsic 
logical temporal attributes. When the intrinsic 
logical temporal attributes of each aspect type 
are in harmony, the two aspect forms can 
combine; otherwise they cannot. We have 
observed the following principled conditions 
for this. First, it is feasible to express the 
process in each individual aspect form before 
the combination is made. Second, each 
individual aspect form has its own semantic 
function which is different from that of others. 
Third, in a specific situation, when two 
different aspect forms combine, the reference 
time points of each aspect type may move 
according to the temporal attributes of the 
combined aspect?however, no matter how 
reference time points change, the event initial 
time must remain unique, i.e. there must only 
be a single event initial time to which the 
complex aspect refers. If there is any conflict 
over this, the two aspects are incompatible 
with each other  and the combination cannot 
be made. Finally, the combination must be in 
a proper order. This means that the selection 
of the aspect which is to serve as primary 
aspect has important consequences. We take 
two complex aspect forms as examples to 
illustrate these points. 
The first example is the secondary aspect  
long-and-unmarked-durative ? ? +V+ ?
(yi1zhi2+V+zhe). The combination is com-
posed of two simple primary aspect forms: 
the unmarked-durative aspect V+?(V+zhe) 
                                                 
6 The tf here not only refers to the event intrinsic 
terminating point, which  an event of accomplish-
ment situation type usually has, but it also refers to 
the time point at which an event of other situation 
types  is terminated by some kind of outside force. 
(UDR) and the long-durative aspect ??+V 
(yi1zhi2+V) (LDR). Examples 1, 2 and 3 
illustrate the two simple primary aspect forms 
and the complex aspect respectively.                                      
1 ??? ? ?? ? 
 nuo4ke4si1 hao4 hang2xin2 zhe 
 the Knox number sail UDR 
     (The Knox is sailing.) 
The simple primary aspect of unmarked-
durative is realized lexically by the marker 
? ? (zhe)?. The unmarked-durative aspect 
indicates either a dynamic or static durative 
state of the situation; it means that the 
situation begins before the reference time and  
is continuing at the reference time point. The 
temporal relations of the unmarked-durative 
aspect V+? (V+zhe) are: ti<tr and tr<tf. We 
presume further  here, for present purpose, 
that tr=ts. Both ti and tf are unspecific time 
points: ti can be any time point before tr, and tf 
can be any time point after tr. This is 
represented graphically in Figure 3. 
 
               ti                   tr=ts,             tf 
Figure 3. The temporal relations of the unmarked-
durative aspect V+? (V+zhe) 
 
2  ??? ? ?? ?? 
 nuo4ke4si1 hao4 yi1zhi2 hang2xing2 
 the Knox number LDR sail 
 (The Knox kept sailing until now.) 
The simple primary aspect long-durative, 
which is realized lexically by the marker ??
? (yi1zhi2)?, indicates a relatively long 
durative state of the situation; it means that 
the process holds over a relatively long time 
duration from the event initial time to the 
event finishing time and that the event 
finishing time equals the reference time. The 
temporal relations of the long-durative aspect 
??+V (yi1zhi2+V) are: ti?tf, and tr=tf=ts.  
This is represented graphically in Figure 4. 
The dotted line denotes the long duration. 
 
 
 
  
          ti                                                 tr=ts=tf                                                     
Figure 4. The temporal relations of the long-
durative aspect ??+V (yi1zhi2+V) 
3  ??? ? ?? 
 nuo4ke4si1 hao4 yi1zhi2 
 the Knox number LDR 
 ?? ?  
 hang2xing2 zhe  
 sail UDR  
    (The Knox has been sailing all along.)
In example 3, because the event initial time ti 
of the unmarked-durative aspect V+? (V+ 
zhe) precedes the reference time point and it 
is an unfixed time point which can at any 
point precede the reference time, it can also 
be identical to the event initial time of the 
long-durative aspect ?? +V (yi1zhi2+V). 
The two individual aspect forms can share a 
unique event initial time so that a specific 
framework of temporal relations for the 
complex aspect can be established. In this 
case, we say that the two individual aspect 
forms are compatible; the combination can be 
made. The complex aspect indicates a long 
existing and continuing state of affairs with 
respect to the reference time. The temporal 
relations of the long-and-unmarked-durative 
??+V+? (yi1zhi2+V+zhe) are then: ti?tr, 
tr=ts and tr<tf. This is represented graphically 
in Figure 5. 
 
 
        ti                           tr=ts               tf   
Figure 5. The temporal relations of the complex 
aspect long-and-unmarked-durative ??+V+? 
Comparing Figure 5 with Figure 3 and Figure 
4, we can see that for the unmarked-durative 
aspect V+? (V+zhe), the event initial time 
after the combination  comes to ?far precede? 
the reference time. For the long-durative 
aspect ? ? +V (yi1zhi2+V), the event 
finishing time does not equal the reference 
time any more, which means that the situation 
is continuing.  
The simple aspect forms differ in terms of 
how restricted they are in their usage with 
particular situation types or process types. In 
the design of the system network, it is 
necessary to arrange the logical dependencies 
such that less restricted aspect forms are made 
dependent on more restricted aspect forms. 
This avoids potentially incompatible logical 
conditions being required. For example, 
compared with other simple primary aspect 
forms, the unmarked-durative aspect V+? 
(V+zhe) (Figure 3) has more restricted 
requirements in its usage, therefore, it should 
be selected first; then it combines with the 
long-durative aspect ??+V (yi1zhi2+V) to 
form the complex aspect long-and-unmarked-
durative ??+V+? (yi1zhi2+V+zhe). 
The secondary aspect long-and-unmarked-
durative ?? +V+? (yi1zhi2+V+zhe) can 
further combine with another primary aspect, 
e.g. the unmarked-future-existing aspect 
(UFT) which is realized lexically by ?
(jiang1), to form a tertiary aspect type: ?+?
?+V+? (jiang1+yi1zhi2+V+zhe). We take 
this as another example to illustrate the aspect 
combining conditions; see  example 4 below.   
4.   ???            ?          ?          ?? 
    nuo4ke4si1      hao4      jiang1    yi4zhi2      
     the Knox       number   UFT         LDR      
         ??                    ? 
      hang2xing2           zhe 
           sail                  UDR 
    (The Knox will keep sailing all along.) 
The unmarked-future-existing aspect ? +V 
(jiang1+V) means that the process will hold 
sometime in the future. The temporal 
relations of the unmarked-future-existing 
aspect are: tr<ti, (ti<tf or ti?tf). In example 4, 
the temporal relation between ti and tf is ti<tf 
but not ti?tf which corresponds to an 
achievement situation. This is represented 
graphically in Figure 6. 
 
 
             tr=ts          ti                                tf 
Figure 6. The temporal relations of the unmarked-
future-existing aspect ?+V (jiang1+V) 
When any aspect form combines with the 
unmarked-future-existing aspect, its own 
internal temporal relations as a whole will not 
be modified. The only change is that the event 
initial time may move. So when the long-and-
unmarked-durative aspect ??+V+?  (yi1 
 zhi2+V+zhe) combines with the unmarked-
future-existing aspect ?+V (jiang1+V), the 
temporal relations of the long-and-unmarked-
durative aspect ??+V+? (yi1zhi2+V+zhe) 
(Figure 5) become:  ts<ti,  ti?tr, and tr<tf. This 
is represented graphically in Figure 7.  
 
 
           ts             ti                     tr                tf 
Figure 7. The temporal relations of the long-and-
unmarked-durative aspect 
Compared with Figure 5, we can see that the 
reference time of the long-durative-
unmarked-durative aspect ?? +V+? (yi1 
zhi2+V+zhe) has moved, from tr=ts to ts<tr,  
and the event initial time correspondingly 
changes from ti<ts to   ts<ti.  
Because the event initial time ti, which is 
inherited from the long-and-unmarked-
durative aspect ??+V+? (yi1zhi2+V+zhe), 
is unique, and the reference time tr equals the 
speaking time ts, the tertiary aspect ?+??
+V+ ? (jiang1+yi1zhi2+V+zhe) has the 
following temporal relations:  ti?tf and tr<ti 
and tr=ts. This is represented graphically in 
Figure 8.                                                     
 
             tr=ts       ti                                    tf                                                             
Figure 8. The temporal relations of the tertiary 
aspect unmarked-future-existing-long-durative-
unmarked-durative ?+??+V+? 
(jiang1+yi1zhi2+V+zhe) 
We can see from Figure 8 that although the 
viewpoint of the situation changes after the 
combination,  a unique event initial time can 
nevertheless be established. The event initial 
time of the long-and-unmarked-durative 
aspect  ??+V+?  (yi1zhi2+V+zhe) still 
functions in the complex aspect. 
Now let us look into one further example to 
see the situation when two aspect forms 
cannot combine. The simple primary aspect 
long-durative ??+V (yi1zhi2+V) and the 
simple primary aspect activity-progressive 
(APG), which is lexically realized by the 
marker ??(zheng4zai4), are not compatible. 
The two aspect forms cannot combine. 
Example 5 is unacceptable.  
5.  * ???             ?          ?? 
      nuo4ke4si1       hao4      yi1zhi2 
      the Knox       number    LDR 
           ??                       ?? 
        zheng4zai4            hang2xing2 
           APG                        sail 
    (* The Knox has been being sailing all   
along.) 
The activity-progressive aspect ? ? +V 
(zheng4zai4+V) indicates a dynamic pro-
gressive state of the situation holding since a 
specific time point (event initial time ti). Its 
temporal relations are: ti=tr and ti<tf. This is 
represented graphically in Figure 9. 
 
              ti=tr=ts                          tf                                                     
Figure 9. The temporal relations of  the unmarked-
progressive aspect ??+V (zheng4zai4+V) 
Comparing the temporal relations of the long-
durative aspect ? ? +V (yi1zhi2+V) in 
Figure 4 with the temporal relations of 
activity-progressive aspect ??+V (zheng4 
zai4+V) in Figure 9, we can see that the two 
aspect forms have obviously different event 
initial time points. One has an event initial 
time which precedes the reference time;  
another has an event initial time which equals 
the reference time. A unique event initial time 
cannot be found. Therefore the two types of 
aspect  are incompatible and cannot combine.  
4. The implementation of the system 
To generate a specific aspect expression, 
temporal relations as described in the last 
section must be taken. Semantic inputs 
representing the temporal relations are a set of 
time points ti, tf, tr, and ts. Each of the time 
points is expressed in a specific concept, 
which could correspond to a specific time 
value,  showing its relative position on the 
time axis; e.g. at-past, at-present, or at-future. 
The semantic inputs are represented in the 
form of a set of examples making up a test-
suite. Using the predicates described in 
section 3, appropriate temporal relations can 
be automatically built by the system. Then the 
system traverses a grammar network and 
chooses appropriate grammatical features by 
use of relevant inquiries and choosers  
(Matthiessen & Bateman, 1991, Teich & 
 Henschel, 1991). The main function of 
choosers is to guide traversal of the grammar 
and choose grammatical features by asking 
the relevant inquiries and testing all the 
required conditions  that they give. An inquiry 
contains a set of conditions to test whether the 
given inputs meet some set of semantic 
requirements. For example, the inquiry used 
to test the unmarked-durative aspect V+? 
(V+zhe) contains the following conditions: ti 
precedes tr, tr precedes tf, tr same as ts, the 
process is not of intensive-relational type with 
verbs like ?  (shi4, be) or adjectives 
describing properties, and not of possessive 
type with verb  ?  (you3, have). Once a 
feature is chosen, realization rules attached to 
the feature place constraints on lexical 
selection and syntactic structure. Following 
traversal of the grammar the combined lexical 
and grammatical constraints are resolved in 
order to give the final lexicalized grammatical 
structure.  
                        5. Conclusion 
In this paper, we have introduced the basic 
simple primary aspect forms and a set of 
secondary types of the unmarked-durative 
aspect V+? (V+zhe) in our Chinese aspect 
system, described the semantic temporal 
relations of complex aspect forms in terms of 
temporal logic theories, and proposed 
principled semantic conditions required for 
aspect combination. In respect of aspect, 
English and Chinese are semantically rather 
different. As future work we are now 
investigating potential applications of our 
description in several areas. In addition to the 
generation of Chinese texts per se, we are also 
considering the use of multilingual generation 
in, for example, contrastive reference 
grammars, and language teaching. 
                                References 
Allen, J.F. (1984) Towards a General Theory of 
Action and Time, Artificial Intelligence, 1984, 
23, p.123-154 
Bache, C. (1995) The Study of Aspect, Tense and 
Action: Towards a Theory of the Semantics of 
Grammatical Categories.  Frankfurt/M.: Lang. 
Bateman, J.A. (1997) Enabling technology for 
multilingual natural language generation: the 
KPML development environment, Natural 
Language Engineering, 3(1), p.15-55      
Comrie, B. (1976) Aspect, Cambridge, England: 
Cambridge University Press. 
Comrie, B. (1985) Tense, Cambridge, England: 
Cambridge University Press. 
Dahl, ?. (1985) Tense and Aspect Systems, Oxford: 
Blackwell. 
Dai, Y-J. (1997) ???????? (A Study of 
Chinese Aspect), Zhejiang Education Publisher.  
Gong, Q-Y. (1995) ??????????? 
(Phase, Tense and Aspect in Chinese), Beijing: 
Commercial Press. 
Halliday, M.A.K. (1976) System and Function in 
Language, Oxford University press. 
Halliday, M.A.K. (1985, first edition) (1994, 
second adition) An Introduction to Functional 
Grammar, Edward Arnold, London. 
Matthiessen, M.I.M. & Bateman, John A. (1991) 
Text Generation and Systemic-Functional 
Linguistics, Pinter Publishers, London 
Smith, C.S. (1991) The Parameter of Aspect, 
Dordrecht: Kluwer Academic. 
Teich, E. & Henschel, R. (1991) Aspect choice in 
a fragment of a systemic grammar of Russian, 
GMD-IPSI, Germany. 
Vendler, Z. (1967) Linguistics in Philosophy, 
Ithaca: Cornell University Press. 
Yang, G-W. (1999) ????????????
?????????? (The semantic relation 
types of complex aspect and the directional 
requirements in  generation), in Proceedings of 
the 5th Chinese Conference on Computational 
Linguistics, Tsinghua University Press, Beijing, 
p.21-26 
Yang, G-W. (2001) ????????????
?   (The Generation of Chinese Complex 
Aspect), Zhong1Guo2 Yu3Wen2, 2001 No 5, 
p.418-427 
Keeping the initiative: an empirically-motivated approach to predicting
user-initiated dialogue contributions in HCI
Kerstin Fischer and John A. Bateman
Faculty of Linguistics and Literary Sciences and SFB/TR8
University of Bremen
Bremen, Germany
{kerstinf,bateman}@uni-bremen.de
Abstract
In this paper, we address the problem
of reducing the unpredictability of user-
initiated dialogue contributions in human-
computer interaction without explicitly re-
stricting the user?s interactive possibili-
ties. We demonstrate that it is possible to
identify conditions under which particular
classes of user-initiated contributions will
occur and discuss consequences for dia-
logue system design.
1 Introduction
It is increasingly recognised that human-computer
dialogue situations can benefit considerably from
mixed-initiative interaction (Allen, 1999). Interac-
tion where there is, or appears to be, little restric-
tion on just when and how the user may make a di-
alogue contribution increases the perceived natu-
ralness of an interaction, itself a valuable goal, and
also opens up the application of human-computer
interaction (HCI) to tasks where both system and
user are contributing more equally to the task be-
ing addressed.
Problematic with the acceptance of mixed-
initiative dialogue, however, is the radically in-
creased interpretation load placed on the dialogue
system. This flexibility impacts negatively on
performance at all levels of system design, from
speech recognition to intention interpretation. In
particular, clarification questions initiated by the
user are difficult to process because they may ap-
pear off-topic and can occur at any point. But pre-
venting users from posing such questions leads to
stilted interaction and a reduced sense of control
over how things are proceeding.
In this paper we pursue a partial solution to the
problem of user-initiated contributions that takes
its lead from detailed empirical studies of how
such situations are handled in human-human inter-
action. Most proposed computational treatments
of this situation up until now rely on formalised
notions of relevance: a system attempts to inter-
pret a user contribution by relating it to shared
goals of the system and user. When a connection
can be found, then even an apparently off-topic
clarification can be accomodated. In our approach,
we show how the search space for relevant connec-
tions can be constrained considerably by incorpo-
rating the generic conversation analytic principle
of recipient design (Sacks et al, 1974, p727). This
treats user utterances as explicit instructions for
how they are to be incorporated into the unfold-
ing discourse?an approach that can itself be ac-
comodated within much current discourse seman-
tic work whereby potential discourse interpreta-
tion is facilitated by drawing tighter structural and
semantic constraints from each discourse contri-
bution (Webber et al, 1999; Asher and Lascarides,
2003). We extend this here to include constraints
and conditions for the use of clarification subdia-
logues.
Our approach is empirically driven through-
out. In Section 2, we establish to what extent
the principles of recipient design uncovered for
natural human interaction can be adopted for the
still artificial situation of human-computer inter-
action. Although it is commonly assumed that re-
sults concerning human-human interaction can be
applied to human-computer interaction (Horvitz,
1999), there are also revealing differences (Amal-
berti et al, 1993). We report on a targetted com-
parison of adopted dialogic strategies in natural
human interaction (termed below HHC: human-
human communication) and human-computer in-
teraction (HCI). The study shows significant and
reliable differences in how dialogue is being man-
aged. In Section 3, we interpret these results with
respect to their implications for recipient design.
The results demonstrate not only that recipient de-
sign is relevant for HCI, but also that it leads to
specific and predictable kinds of clarification dia-
logues being taken up by users confronted with an
artificial dialogue system. Finally, in Section 4, we
discuss the implications of the results for dialogic
185
system design in general and briefly indicate how
the required mechanisms are being incorporated in
our own dialogue system.
2 A targetted comparison of HHC and
HCI dialogues
In order to ascertain the extent to which tech-
niques of recipient design established on the ba-
sis of human-human natural interaction can be
transferred to HCI, we investigated comparable
task-oriented dialogues that varied according to
whether the users believed that that they were in-
teracting with another human or with an artificial
agent. The data for our investigation were taken
from three German corpora collected in the mid-
1990s within a toy plane building scenario used
for a range of experiments in the German Collab-
orative Research Centre Situated Artificial Com-
municators (SFB 360) at the University of Biele-
feld (Sagerer et al, 1994). In these experiments,
one participant is the ?constructor? who actually
builds the model plane, the other participant is the
?instructor?, who provides instructions for the con-
structor.
The corpora differ in that the constructor in the
HHC setting was another human interlocutor; in
the other scenario, the participants were seated in
front of a computer but were informed that they
were actually talking to an automatic speech pro-
cessing system (HCI).1 In all cases, there was no
visual contact between constructor and instructor.
Previous work on human-human task-
oriented dialogues going back to, for example,
Grosz (1982), has shown that dialogue structure
commonly follows task structure. Moreover,
it is well known that human-human interaction
employs a variety of dialogue structuring mech-
anisms, ranging from meta-talk to discourse
markers, and that some of these can usefully be
employed for automatic analysis (Marcu, 2000).
If dialogue with artificial agents were then to be
structured as it is with human interlocutors, there
would be many useful linguistic surface cues
available for guiding interpretation. And, indeed,
a common way of designing dialogue structure in
HCI is to have it follow the structure of the task,
since this defines the types of actions necessary
and their sequencing.
1In fact, the interlocutors were always humans, as the ar-
tificial agent in the HCI conditions was simulated employing
standard Wizard-of-Oz methods allowing tighter control of
the linguistic responses received by the user.
Figure 1: Contrasting dialogue structures for HHC
and HCI conditions
Previous studies have not, however, addressed
the issue of dialogue structure in HCI system-
atically, although a decrease in framing signals
has been noted by Hitzenberger and Womser-
Hacker (1995)?indicating either that the dis-
course structure is marked less often or that there
is less structure to be marked. A more precise
characterisation of how task-structure is used or
expressed in HCI situations is then critical for fur-
ther design. For our analysis here, we focused
on properties of the overall dialogue structure and
how this is signalled via linguistic cues. Our re-
sults show that there are in fact significant differ-
ences in HCI and HHC and that it is not possi-
ble simply to take the human-human interaction
results and transpose results for one situation to
the other.
The structuring devices of the human-to-human
construction dialogues can be described as fol-
lows. The instructors first inform their communi-
cation partners about the general goal of the con-
struction. Subsequently, and as would be expected
for a task-oriented dialogue from previous stud-
ies, the discourse structure is hierarchical. At the
top level, there is discussion of the assembly of
the whole toy airplane, which is divided into in-
dividual functional parts, such as the wings or
the wheels. The individual constructional steps
then usually comprise a request to identify one or
more parts and a request to combine them. Each
step is generally acknowledged by the communi-
cation partner, and the successful combination of
the parts as a larger structure is signalled as well.
All the human-to-human dialogues were similar in
these respects. This discourse structure is shown
graphically in the outer box of Figure 1.
Instructors mark changes between phases with
signals of attention, often the constructor?s first
name, and discourse particles or speech routines
that mark the beginning of a new phase such as
186
goal discourse marker explicit marking
usage HHC HCI HHC HCI HHC HCI
none 27.3 100 0 52.5 13.6 52.5
single 40.9 0 9.1 25.0 54.5 27.5
frequent 31.8 0 90.9 22.5 31.8 20.0
Percentage of speakers making no,
single or frequent use of a particular
structuring strategy.
HCI: N=40; HHC: N=22. All differ-
ences are highly significant (ANOVA
p<0.005).
Table 1: Distribution of dialogue structuring devices across experimental conditions
also [so] or jetzt geht?s los [now]. This structur-
ing function of discourse markers has been shown
in several studies and so can be assumed to be
quite usual for human-human interaction (Swerts,
1998). Furthermore, individual constructional
steps are explicitly marked by means of als er-
stes, dann [first of all, then] or der erste Schritt
[the first step]. In addition to the marking of the
construction phases, we also find marking of the
different activities, such as description of the main
goal versus description of the main architecture,
or different phases that arise through the address-
ing of different addressees, such as asides to the
experimenters.
Speakers in dialogues directed at human inter-
locutors are therefore attending to the following
three aspects of discourse structure:
? marking the beginning of the task-oriented
phase of the dialogue;
? marking the individual constructional steps;
? providing orientations for the hearer as to the
goals and subgoals of the communication.
When we turn to the HCI condition, however,
we find a very different picture?indicating that a
straightforward tuning of dialogue structure for an
artificial agent on the basis of the HHC condition
will not produce an effective system.
These dialogues generally start as the HHC di-
alogues do, i.e., with a signal for getting the com-
munication partner?s attention, but then diverge by
giving very low-level instructions, such as to find
a particular kind of component, often even before
the system has itself given any feedback. Since
this behaviour is divorced from any possible feed-
back or input produced by the artificial system, it
can only be adopted because of the speaker?s ini-
tial assumptions about the computer. When this
strategy is successful, the speaker continues to use
it in following turns. Instructors in the HCI condi-
tion do not then attempt to give a general orienta-
tion to their hearer. This is true of all the human-
computer dialogues in the corpus. Moreover, the
dialogue phases of the HCI dialogues do not cor-
respond to the assembly of an identifiable part of
the airplane, such as a wing, the wheels, or the
propeller, but to much smaller units that consist
of successfully identifying and combining some
parts. The divergent dialogue structure of the HCI
condition is shown graphically in the inner dashed
box of Figure 1.
These differences between the experimental
conditions are quantified in Table 1, which shows
for each condition the frequencies of occurrence
for the use of general orienting goal instructions,
describing what task the constructor/instructor is
about to address, the use of discourse markers,
and the use of explicit signals of changes in task
phase. These differences prove (a) that users are
engaging in recipient design with respect to their
partner in these comparable situations and (b) that
the linguistic cues available for structuring an in-
terpretation of the dialogue in the HCI case are
considerably impoverished. This can itself obvi-
ously lead to problems given the difficulty of the
interpretation task.
3 Interpretation of the observed
differences in terms of recipient design
Examining the results of the previous section more
closely, we find signs that the concept of the com-
munication partner to which participants were ori-
enting was not the same for all participants. Some
speakers believed structural marking also to be
useful in the HCI situation, for example. In this
section, we turn to a more exact consideration of
the reasons for these differences and show that di-
rectly employing the mechanisms of recipient de-
sign developed by Schegloff (1972) is a beneficial
strategy. The full range of variation observed, in-
cluding intra-corpus variation that space precluded
us describing in detail above, is seen to arise from
a single common mechanism. Furthermore, we
show that precisely the same mechanism leads to
a predictive account of user-initiated clarificatory
dialogues.
187
The starting point for the discussion is the
conversation analytic notion of the insertion se-
quence. An insertion sequence is a subdialogue
inserted between the first and second parts of an
adjacency pair. They are problematic for artificial
agents precisely because they are places where the
user takes the initiative and demands information
from the system. Clarificatory subdialogues are
regularly of this kind. Schegloff (1972) analyses
the kinds of discourse contents that may constitute
insertion sequences in human-to-human conversa-
tions involving spatial reference. His results im-
ply a strong connection between recipient design
and discourse structure. This means that we can
describe the kind of local sequential organisation
problematic for mixed-initiative dialogue interpre-
tation on the basis of more general principles.
Insertion sequences have been found to address
the following kinds of dialogue work:
Location Analysis: Speakers check upon spa-
tial information regarding the communica-
tion partners, such as where they are when on
a mobile phone, which may lead to an inser-
tion sequence and is also responsible for one
of the most common types of utterances when
beginning a conversation by mobile phone:
i.e., ?I?m just on the bus/train/tram?.
Membership Analysis: Speakers check upon
information about the recipient because the
communication partner?s knowledge may
render some formulations more relevant than
others. As a ?member? of a particular class of
people, such as the class of locals, or of the
class of those who have visited the place be-
fore, the addressee may be expected to know
some landmarks that the speaker may use for
spatial description. Membership groups may
also include differentiation according to ca-
pabilities (e.g., perceptual) of the interlocu-
tors.
Topic or Activity Analysis: Speakers attend to
which aspects of the location addressed are
relevant for the given topic and activity. They
have a number of choices at their disposal
among which they can select: geographical
descriptions, e.g. 2903 Main Street, descrip-
tions with relation to members, e.g. John?s
place, descriptions by means of landmarks,
or place names.
These three kinds of interactional activity each
give rise to potential insertion sequences; that is,
they serve as the functional motivation for par-
ticular clarificatory subdialogues being explored
rather than others. In the HCI situation, however,
one of them stands out. The task of membership
analysis is extremely challenging for a user faced
with an unknown artificial agent. There is little ba-
sis for assigning group membership; indeed, there
are not even grounds for knowing which kind of
groups would be applicable, due to lack of experi-
ence with artificial communication partners.
Since membership analysis constitutes a pre-
requisite for the formulation of instructions, recip-
ient design can be expected to be an essential force
both for the discourse structure and for the motiva-
tion of particular types of clarification questions in
HCI. We tested this prediction by means of a fur-
ther empirical study involving a scenario in which
the users? task was to instruct a robot to measure
the distance between two objects out of a set of
seven. These objects differed only in their spatial
position. The users had an overview of the robot
and the objects to be referred to and typed their in-
structions into a notebook. The relevant objects
were pointed at by the instructor of the experi-
ments. The users were not given any information
about the system and so were explicitly faced with
a considerable problem of membership analysis,
making the need for clarification dialogues partic-
ularly obvious. The results of the study confirmed
the predicted effect and, moreover, provide a clas-
sification of clarification question types. Thus, the
particular kinds of analysis found to initiate inser-
tion sequences in HHC situations are clearly active
in HCI clarification questions as well.
21 subjects from varied professions and with
different experience with artificial systems partic-
ipated in the study. The robot?s output was gener-
ated by a simple script that displayed answers in
a fixed order after a particular ?processing? time.
The dialogues were all, therefore, absolutely com-
parable regarding the robot?s linguistic material;
moreover, the users? instructions had no impact on
the robot?s linguistic behaviour. The robot, a Pio-
neer 2, did not move, but the participants were told
that it could measure distances and that they were
connected to the robot?s dialogue processing sys-
tem by means of a wireless LAN connection. The
robot?s output was either ?error? (or later in the
dialogues a natural language variant) or a distance
188
usr11-1 hallo# [hello#]
sys ERROR
usr11-2 siehst du was [do you see anything?]
sys ERROR
usr11-3 was siehst du [what do you see?]
sys ERROR 652-a: input is invalid.
usr11-4 mi? den abstand zwischen der vordersten tasse und
der linken tasse [measure the distance between
the frontmost cup and the left cup]
Figure 2: Example dialogue extract showing
membership analysis clarification questions
in centimeters. This forced users to reformulate
their dialogue contributions?an effective method-
ology for obtaining users? hypotheses about the
functioning and capabilities of a system (Fischer,
2003). In our terms, this leads directly to an ex-
plicit exploration of a user?s membership analysis.
As expected in a joint attention scenario, very
limited location analysis occurred. Topic analysis
is also restricted; spatial formulations were chosen
on the basis of what users believed to be ?most un-
derstandable? for the robot, which also leads back
to the task of membership analysis.
In contrast, there were many cases of member-
ship analysis. There was clearly great uncertainty
about the robot?s prerequisites for carrying out the
spatial task and this was explicitly specified in the
users? varied formulations. A simple example is
given in Figure 2.
The complete list of types of questions related
to membership analysis and which digress from
the task instructions in our corpus is given in Ta-
ble 2. Each of these instances of membership anal-
ysis constitutes a clarification question that would
initiate an off-topic subdialogue if the robot had
reacted to it.
4 Consequences for system design
So far our empirical studies have shown that there
are particular kinds of interactional problems that
will regularly trigger user-initiated clarification
subdialogues. These might appear off-topic or
out of place but when understood in terms of
the membership and topic/activity analysis, it be-
comes clear that all such contributions are, in a
very strong sense, ?predictable?. These results can,
and arguably should,2 be exploited in the follow-
ing ways. One is to extend dialogue system de-
sign to be able to meet these contingently rele-
2Doran et al (2001) demonstrate a negative relationship
between number of initiative attempts and their success rate.
vant contributions whenever they occur. That is,
we adapt dialogue manager, lexical database etc.
so that precisely these apparently out-of-domain
topics are covered. A second strategy is to de-
termine discourse conditions that can be used to
alert the dialogue system to the likely occurrence
or absence of these kinds of clarificatory subdia-
logues (see below). Third, we can design explicit
strategies for interaction that will reduce the like-
lihood that a user will employ them: for example,
by providing information about the agent?s capa-
bilities, etc. as listed in Table 2 in advance by
means of system-initiated assertions. That is, we
can guide, or shape, to use the terminology intro-
duced by Zoltan-Ford (1991), the users? linguistic
behaviour. A combination of these three capabil-
ities promises to improve the overall quality of a
dialogue system and forms the basis for a signifi-
cant part of our current research.
We have already ascertained empirically dis-
course conditions that support the second strat-
egy above, and these follow again directly from
the basic notions of recipient design and mem-
bership analysis. If a user already has a strong
membership analysis in place?for example, due
to preconceptions concerning the abilities (or,
more commonly, lack of abilities) of the artifi-
cial agent?then this influences the design of that
user?s utterances throughout the dialogue. As a
consequence, we have been able to define distinc-
tive linguistic profiles that lead to the identifica-
tion of distinct user groups that differ reliably in
their dialogue strategies, particularly in their ini-
tiation of subdialogues. In the human-robot dia-
logues just considered, for example, we found that
eight out of 21 users did not employ any clarifica-
tion questions at all and an additional four users
asked only a single clarification question. Provid-
ing these users with additional information about
the robot?s capabilities is of limited utility because
these users found ways to deal with the situation
without asking clarification questions. The sec-
ond group of participants consisted of nine users;
this group used many questions that would have
led into potentially problematic clarification dia-
logues if the system had been real. For these users,
the presentation of additional information on the
robot?s capabilities would be very useful.
It proved possible to distinguish the members
of these two groups reliably simply by attend-
ing to their initial dialogue contributions. This is
189
domain example (translation)
perception VP7-3 [do you see the cups?]
readiness VP4-25 [Are you ready for another task?]
functional capabilities VP19-11 [what can you do?]
linguistic capabilities VP18-7 [Or do you only know mugs?]
cognitive capabilities VP20-15 [do you know where is left and right of you?]
Table 2: Membership analysis related clarification questions
use of task-oriented greetings
clarification beginnings
none 58.3 11.1
single 25.0 11.1
frequent 16.7 77.8
N = 21; average number of clarification questions
for task-oriented group: 1.17 clarification ques-
tions per dialogue; average number for ?greeting?-
group 3.2; significance by t-test p<0.01
Table 3: Percentage of speakers using no, a sin-
gle, or frequent clarification questions depending
on first utterance
where their pre-interaction membership analysis
was most clearly expressed. In the human-robot
dialogues investigated, there is no initial utterance
from the robot, the user has to initiate the inter-
action. Two principally different types of first ut-
terance were apparent: whereas one group of users
begins the interaction with task-instructions, a sec-
ond group begins the dialogue by means of a greet-
ing, an appeal for help, or a question with regard
to the capabilities of the system. These two dif-
ferent ways of approaching the system had sys-
tematic consequences for the dialogue structure.
The dependent variable investigated is the num-
ber of utterances that initiate clarification subdia-
logues. The results of the analysis show that those
who greet the robot or interact with it other than
by issuing commands initiate clarificatory subdi-
alogues significantly more often than those who
start with an instruction (cf. Table 3). Thus,
user modelling on the basis of the first utterance
in these dialogues can be used to predict much
of users? linguistic behaviour with respect to the
initiation of clarification dialogues. Note that for
this type of user modelling no previous informa-
tion about the user is necessary and group assign-
ment can be carried out unobtrusively by means of
simple key word spotting on the first utterance.
Whereas the avoidance of clarificatory user-
initiated subdialogues is clearly a benefit, we can
also use the results of our empirical investigations
to motivate improvements in the other areas of in-
teractive work undertaken by speakers. In particu-
lar topic and activity analysis can become prob-
lematic when the decompositions adopted by a
user are either insufficient to structure dialogue ap-
propriately for interpretation or, worse, are incom-
patible with the domain models maintained by the
artificial agent. In the latter case, communication
will either fail or invoke rechecking of member-
ship categories to find a basis for understanding
(e.g., ?do you know what cups are??). Thus, what
can be seen on the part of a user as reducing the
complexity of a task can in fact be removing in-
formation vital for the artificial agent to effect suc-
cessful interpretation.
The results of a user?s topic and activity analy-
sis make themselves felt in the divergent dialogue
structures observed. As shown above in Figure 1,
the structure of the dialogues is thus much flatter
than the one found in the corresponding HHC dia-
logues, such that goal description and marking of
subtasks is missing, and the only structure results
from the division into selection and combination
of parts. In our second study, precisely the same
effects are observed. The task of measuring dis-
tances between objects is often decomposed into
?simpler? subtasks; for example, the complexity of
the task is reduced by achieving reference to each
of the objects first before the robot is requested to
measure the distance between them.
This potential mismatch between user and sys-
tem can also be identified on the basis of the inter-
action. Proceeding directly to issuing low-level in-
structions rather than providing background gen-
eral goal information is a clear linguistically
recognisable cue that a nonaligned topic/activity
analysis has been adopted. A successful dialogue
system can therefore rely on this dialogue tran-
sition as providing an indication of problems to
come, which can again be avoided in advance by
explicit system-initiated assertions of information.
190
Our main focus in this paper has been on setting
out and motivating some generic principles for di-
alogue system design. These principles could find
diverse computational instantiations and it has not
been our aim to argue for any one instantation
rather than another. However, to conclude, we
summarise briefly the approach that we are adopt-
ing to incorporating these mechanisms within our
own dialogue system (Ross et al, 2005).
Our system augments an information-state
based approach with a distinguished vocabulary
of discourse transitions between states. We attach
?conceptualisation-conditions? to these transitions
which serve to post discourse goals whose partic-
ular function is to head off user-initiated clarifi-
cation. The presence of a greeting is one such
condition; the immediate transition to basic-level
instructions is another. Recognition and produc-
tion of instructions is aided by treating the seman-
tic types that occur (?cups?, ?measure?, ?move?,
etc.) as elements of a domain ontology. The di-
verse topic/activity analyses then correspond to
the specification of the granularity and decom-
position of activated domain ontologies. Sim-
ilarly, location analyses correspond to common
sense geographies, which we model in terms simi-
lar to those of ontologies now being developed for
Geographic Information Systems (Fonseca et al,
2002).
The specification of conceptualisation-
conditions triggered by discourse transitions
and classifications of the topic/activity analysis
given by the semantic types provided in user ut-
terances represents a direct transfer of the implicit
strategies found in conversation analyses to the
design of our dialogue system. For example, in
our case many simple clarifications like ?do you
see the cups?,? ?how many cups do you see?? as
well as ?what can you do?? are prevented by pro-
viding information in advance on what the robot
can perceive to those users that use greetings.
Similarly, during a scene description where the
system has the initiative, the opportunity is taken
to introduce terms for the objects it perceives as
well as appropriate ways of describing the scene,
e.g., by means of ?There are two groups of cups.
What do you want me to do?? a range of otherwise
necessary clarificatory questions is avoided. Even
in the case of failure, users will not doubt those
capabilities of the system that it has displayed it-
self, due to alignment processes also observable in
human-to-human dialogical interaction (Pickering
and Garrod, 2004). After a successful interaction,
users expect the system to be able to process
parallel instructions because they reliably expect
the system to behave consistently (Fischer and
Batliner, 2000).
5 Conclusions
In this paper, the discourse structure initiated by
users in HCI situations has been investigated and
the results have been three-fold. The structures
initiated in HCI are much flatter than in HHC; no
general orientation with respect to the aims of a
sub-task are presented to the artificial communica-
tion partner, and marking is usually reduced. This
needs to be accounted for in the mapping of the
task-structure onto the discourse model, irrespec-
tive of the kind of representation chosen. Sec-
ondly, the contents of clarification subdialogues
have also been identified as particularly depen-
dent on recipient design. That is, they concern
the preconditions for formulating utterances par-
ticularly for the respective hearer. Here, the less
that is known about the communication partner,
the more needs to be elicited in clarification dia-
logues: however, crucially, we can now state pre-
cisely which kinds of elicitations will be found
(cf. Table 2). Thirdly, users have been shown to
differ in the strategies that they take to solve the
uncertainty about the speech situation and we can
predict which strategies they in fact will follow in
their employment of clarification dialogues on the
basis of their initial interaction with the system (cf.
Table 3).
Since the likelihood for users to initiate such
clarificatory subdialogues has been found to be
predictable, we have a basis for a range of implicit
strategies for addressing the users? subsequent lin-
guistic behaviour. Recipient design has therefore
been shown to be a powerful mechanism that, with
the appropriate methods, can be incorporated in
user-adapted dialogue management design.
Information of the kind that we have uncovered
empirically in the work reported in this paper can
be used to react appropriately to the different types
of users in two ways: either one can adapt the
system or one can try to adapt the user (Ogden
and Bernick, 1996). Although techniques for both
strategies are supported by our results, in general
we favour attempting to influence the user?s be-
haviour without restricting it a priori by means
191
of computer-initiated dialogue structure. Since the
reasons for the users? behaviour have been shown
to be located on the level of their conceptualisation
of the communication partner, explicit instruction
may in any case not be useful?explicit guidance
of users is not only often impractical but also is
not received well by users. The preferred choice is
then to influence the users? concepts of their com-
munication partner and thus their linguistic be-
haviour by shaping (Zoltan-Ford, 1991). In par-
ticular, Schegloff?s analysis shows in detail the
human interlocutors? preference for those location
terms that express group membership. Therefore,
in natural dialogues the speakers constantly signal
to each other who they are, what the other per-
son can expect them to know. Effective system
design should therefore provide users with pre-
cisely those kinds of information that constitute
their most frequent clarification questions initially
and in the manner that we have discussed.
Acknowledgement
The authors gratefully acknowledge the support of
the Deutsche Forschungsgemeinschaft (DFG) for
the work reported in this paper.
References
Christine Doran, John Aberdeen, Laurie Damianos and
Lynette Hirschman. 2001. Comparing Several As-
pects of Human-Computer and Human-Huamn Di-
alogues. Proceedings of the 2nd SIGdial Workshop
on Discourse and Dialogue, Aalborg, Denmark.
James Allen. 1999. Mixed-initiative interaction. IEEE
Intelligent Systems, Sept./Oct.:14?16.
R. Amalberti, N. Carbonell, and P. Falzon. 1993.
User representations of computer systems in human-
computer speech interaction. International Journal
of Man-Machine Studies, 38:547?566.
Nicholas Asher and Alex Lascarides. 2003. Logics
of conversation. Cambridge University Press, Cam-
bridge.
Kerstin Fischer and Anton Batliner. 2000. What
makes speakers angry in human-computer conver-
sation. In Proceedings of the Third Workshop on
Human-Computer Conversation, Bellagio, Italy.
Kerstin Fischer. 2003. Linguistic methods for in-
vestigating concepts in use. In Thomas Stolz and
Katja Kolbe, editors, Methodologie in der Linguis-
tik. Frankfurt a.M.: Peter Lang.
Frederico T. Fonseca, Max J. Egenhofer, Peggy
Agouris, and Gilberto Ca?mara. 2002. Using ontolo-
gies for integrated geographic information systems.
Transactions in GIS, 6(3).
Barbara J. Grosz. 1982. Discourse analysis. In
Richard Kittredge and John Lehrberger, editors,
Sublanguage. Studies of Language in Restricted Se-
mantic Domains, pages 138?174. Berlin, New York:
De Gruyter.
L. Hitzenberger and C. Womser-Hacker. 1995.
Experimentelle Untersuchungen zu multimodalen
natu?rlichsprachigen Dialogen in der Mensch-
Computer-Interaktion. Sprache und Datenverar-
beitung, 19(1):51?61.
Eric Horvitz. 1999. Uncertainty, action, and interac-
tion: In pursuit of mixed-initiative computing. IEEE
Intelligent Systems, Sept./Oct.:17?20.
Daniel Marcu. 2000. The rhetorical parsing of unre-
stricted texts: a surface-based approach. Computa-
tional Linguistics, 26(3):395?448, Sep.
W.C. Ogden and P. Bernick. 1996. Using natural lan-
guage interfaces. In M. Helander, editor, Handbook
of Human-Computer Interaction. Elsevier Science
Publishers, North Holland.
Martin J. Pickering and Simon Garrod. 2004. Towards
a mechanistic psychology of dialogue. Behavioural
and Brain Sciences, 27(2):169?190.
R.J. Ross, J. Bateman, and H. Shi. 2005. Applying
Generic Dialogue Models to the Information State
Approach. In Proceedings of Symposium on Dia-
logue Modelling and Generation. Amsterdam.
H. Sacks, E. Schegloff, and G. Jefferson. 1974. A sim-
plest systematics for the organisation of turn-taking
for conversation. Language, 50:696?735.
Gerhard Sagerer, Hans-Ju?rgen Eikmeyer, and Gert
Rickheit. 1994. ?Wir bauen jetzt ein Flugzeug?:
Konstruieren im Dialog. Arbeitsmaterialien. Report
SFB 360, University of Bielefeld.
E. A. Schegloff. 1972. Notes on a conversational prac-
tice: formulating place. In D. Sudnow, editor, Stud-
ies in Social Interaction, pages 75?119. The Free
Press, New York.
Marc Swerts. 1998. Filled pauses as markers of dis-
course structure. Journal of Pragmatics, 30:485?
496.
Bonnie Webber, Alistair Knott, Matthew Stone, and
Aravind Joshi. 1999. Discourse relations: a struc-
tural and presuppositional account using lexicalized
TAG. In Proceedings of the 37th. Annual Meeting
of the American Association for Computational Lin-
guistics (ACL?99), pages 41?48, University of Mary-
land. American Association for Computational Lin-
guistics.
Elizabeth Zoltan-Ford. 1991. How to get people to
say and type what computers can understand. Inter-
national journal of Man-Machine Studies, 34:527?
647.
192
Towards Constructive Text, Diagram, 
and Layout Generation for 
Information Presentation 
John Bateman* 
Bremen University 
JOrg Kleinz t 
GMD-IPSI, Darmstadt 
Thomas Kamps t
Intelligent Views, Darmstadt 
Klaus Reichenberger t 
Intelligent Views, Darmstadt 
Combining elements appropriately within a coherent page layout is a well-recognized and crucial 
aspect of sophisticated information presentation. The precise function and nature of layout has 
not, however, been sufficiently addressed within computational pproaches; attention is often 
restricted to relatively local issues of typography and text-formatting, leaving broader issues of 
layout unaddressed. In this paper we focus on the selection and function of layout in pages that 
appropriately combine textual and graphical representation styles to yield coherent presentation 
designs. We demonstrate hat layout offers a rich resource for achieving presentational coherence, 
alongside more traditional resources such as text-formatting and the text-internal marking of 
discourse connections. We also introduce an integrated approach to layout, text, and diagram 
generation. Our approach is developed on the basis of a preliminary empirical investigation 
of professionally produced layouts, followed by implementation within a prototype information 
system in the area of art history. 
1. Introduction 
The desirability of combining text, layout, graphics, diagrams, punctuation, and type- 
setting in order to present information most effectively is uncontroversial--indeed, in 
traditional graphic design and publishing, they could scarcely be conceived of as sep- 
arate. It is therefore natural that computational ttempts to synthesize texts, diagrams, 
and layout automatically should also now converge. In this paper, we argue that effec- 
tive and coherent information presentation is best supported by adopting a common 
framework for physical ayout and language/diagram generation. Whereas previous 
research as made this point convincingly for graphical and textual representations-- 
particularly, for example, in the WIP (Andr4 et al 1993), COMET (Feiner and McK- 
eown 1993), and SAGE (Kerpedjiev et al 1997; Green, Carenini, and Moore 1998) 
systems--we take this further and demonstrate that the same commonalities extend 
to include overall page layout, an area that has not previously received sufficient 
attention. 
? FBIO, Sprach-und Literaturwissenschaften, University of Bremen, 28334 Breman, Germany, E-mail: 
bateman@uni-bremen.de. 
t Intelligent Views GmbH, Julius-Reiber-Str. 17G423 Darmstadt, Germany, E-mail: {t.kamps, j.kleinz, 
k.reichenberger}@i-views.de. 
(~) 2001 Association for Computational Linguistics 
Computational Linguistics Volume 27, Number 3 
The paper focuses on two aspects of automatic information presentation new in 
our work: 
? a general mechanism for organizing presentations around informational 
regularities in the data to be expressed--the r gularities then inform the 
presentational strategies used for natural anguage, diagrarn, and layout 
generation; 
? the construction of an indirect relationship between structured 
communicative intentions (typically represented in both mono- and 
multimodal work by some kind of rhetorical structure) and their 
expression in page layout. 
The former allows us to ensure broad consistency of perspective and informational 
organization across elements presented using different media e.g., across diagram 
and text; the latter allows us to draw closer to the kind of sophisticated layout that is 
observable in human-produced presentations. 
We organize the paper as follows. We first introduce the mechanism for data- 
driven aggregation that we have developed, since this underlies our approach to both 
natural anguage generation and diagram design (Section 2). We then sketch the place 
of layout as an organizing framework within our approach as a whole (Section 3), 
setting out by means of examples ome of the issues focused upon in the empirical in- 
vestigation (Section 4). We then summarize the results of the empirical study in terms 
of an abstract specification for performing page layout (Section 5) and provide a first il- 
lustration of its application within the prototype multimodal information-presentation 
system DArtbio (Dictionary of Art: biographies) (Section 6). We conclude by summa- 
rizing the main contributions of our work and some of the follow-up research and 
development to which it is now leading (Section 7). 
2. Data-driven Aggregation for Visualization and Natural Language Generation 
It is commonly recognized in work on multimodal information presentation that much 
of the true value of such presentations lies in appropriate juxtapositions of non- 
identical but overlapping information. Textual presentations and graphical presen- 
tations have differing strengths and weaknesses and so their combination can achieve 
powerful synergies. Conversely, simply placing textual and graphical information to- 
gether is no guarantee that one view is supportive of another: if the perspective on the 
data taken in a graphic and that taken in a text have no relation (or, worse, even clash), 
then the result is incoherence rather than synergy--cf, the discussions by authors uch 
as Arens, Hovy, and Vossers (1993), Fasciano and Lapalme (1996), Green et al (1998), 
and Fasciano and Lapalme (2000). 
One means of ensuring mutually compatible presentations across modes is to 
drive both the language and the graphic generation from the same communicative 
intentions. If an automatic natural anguage generator and an automatic graphic gen- 
erator both receive the task of expressing broadly similar, or compatible, intentions 
then there is a good chance that the resulting presentations will also be perceived to 
be compatible and mutually supportive. This has been used to good affect in systems 
such as CGS (Caption Generation System) of Mittal et al (1998), where it is clearly 
crucial that the text and the graphic be in close correspondence. Another, in some 
ways related, approach is to derive both the graphic and textual elements from dif- 
ferent components of a single presentation plan: thus, for example, one part of the 
410 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
presentation plan might express textually an instruction that must be carried out (turn 
the dial), while another part of the plan elaborates on that instruction by showing a 
diagram in which the location of the action to be performed is identified graphically. 
This has been explored extensively in systems uch as WIP (Andr~ et al 1993), PPP 
(AndrG Rist, and Mfiller 1998), and COMET (Feiner and McKeown 1993). 
While both of these approaches are essentially top-down, or goal driven, effective 
presentations can also be produced by responding to regularities found in the data 
to be presented. Such regularities are difficult to predict as they are strongly contin- 
gent on what set of data happens to have been selected. "Data-driven" methods of 
this kind are commonly found in automatic visualization, where the goal is to present 
users with some comprehensible view of large collections of data. Utilizing regularities 
in the data is essential for effective visualization. In previous work (Reichenberger, 
Kamps, and Golovchinsky 1995), a set of techniques for generative diagram design 
were developed for precisely this task, i.e., for presenting overviews of datasets. We 
subsequently recognized that this approach also has applications to the task of ag- 
gregation in natural anguage generation, and we thus adapted it for use across both 
textual and graphical presentation modes. This provides a further technique for en- 
suring consistency between graphical and textual presentations--if both the graphical 
and textual presentations express the same regularities, or redundancies, that have 
been found in a dataset, then they are necessarily compatible in this respect. This al- 
lows us to use contingent data-driven organizations for generating information while 
nevertheless preserving coherent and mutually supportive views across presentation 
modalities. 
2.1 Data-driven Aggregation: the Mechanism 
The original generative diagram-design algorithms developed by Reichenberger, 
Kamps, and Golovchinsky (1995) built on the landmark work of Mackinlay (1986). 
Here, a data-classification algorithm flexibly links relational data with elements of a 
graphical language. These elements are allocated particular degrees of expressiveness 
so that appropriate graphical resources can be selected as required to capture the data 
being described. Reichenberger t al. extended this approach by employing a general 
type hierarchy of data properties to determine algorithmically the most specific property 
subtype (e.g., transitive, acyclic directed graph, inclusion, etc.) that accurately describes 
a dataset to be visualized. This subtype allows in turn selection of the particular forms 
of diagrammatic representation (e.g., trees, nested boxes, directed arrows, etc.) that are 
expressively adequate, but not over-expressive, for that dataset. 
The theoretical basis of these methods is given in detail in Kamps (1997; 1998). 
They rest on a new application of Formal Concept Analysis (FCA) (Wille 1982). FCA is 
an applied mathematical discipline based on a formal notion of concepts and concept 
hierarchies and allowing the exploitation of mathematical reasoning for conceptual 
data analysis and processing. In particular, FCA permits the efficient construction of 
dependency lattices that effectively represent the functional and set-valued ependen- 
cies established among the domains of some data relation. Such dependency lattices 
can then motivate the differential selection of appropriate graphical presentations. 
FCA starts from the notion of a formal context (G,M,I) representing a dataset 
in which G is a set of objects, M is a set of attributes, and I establishes a binary re- 
lation between the two sets. I(g, m) is read object g has property m where g c G and 
m E M. Such a context is called a one-valued context. For illustration, we draw on 
the domain of the DArtbio system that we discuss below: an example of a one-valued 
context corresponding to the attribute Profession for a set of artists is shown in the 
table to the left of Figure 1. Concepts in FCA are defined in accordance with the 
411 
Computational Linguistics Volume 27, Number 3 
Urban 
Architect Designer Planner 
Gropius X 
Breuer X 
A. Albers 
J. Albers 
Moholy-Nagy 
Hilberseimer X 
X 
X 
X 
X 
X 
({Groplus, Breuer, A. Albers,J.Albers, 
Moholy-Nagy,Hllberselmer}, 0) 
{Gropius, Breuer, 
( Hilberseimer} / ~ ({A. Albers}, 
\[Architect\] ) .AI 
({Groplus, K / 
Breuer}, - ~ / 
\[Architect, ~ . ~  
Urban Planner\] ) 
(0, \[Architect, 
Designer, 
Urban Planner\] ) 
Figure 1 
Example of a one-valued context and its corresponding lattice. 
traditional theory of concepts, and consist of an extension and an intension. The 
extension is a subset A of the set of objects G and the intension is a subset B of 
the set of attributes M. We call the pair (A,B) a formal concept if each object of 
the extension has all the properties of the intension. Thus, for the data shown in 
Figure 1, the pair ({Gropius, Breuer}, {Urban Planner, Architect}) represents a for- 
mal concept: each of the members of the extension possesses all the attributes men- 
tioned in the intension. The set of all concepts for some formal context can be com- 
puted effectively using the Next Closure algorithm developed by Ganter and Wille 
(1996). 
The main theorem of concept analysis then shows that the set of concepts for a 
formal context can be organized into a complete lattice structure under the follow- 
ing definition of the subconcept relation: a concept (A,B) is a subconcept of (A*,B*) 
if and only if A c A* ~ B* _c B (Wille 1982). The concept lattice may be con- 
structed by starting from the top concept (the one that has no superconcepts) and 
proceeding top-down recursively. In each step we compute the set of direct subcon- 
cepts and link them to the respective superconcept until we reach the greatest lower 
bound of the lattice itself (the existence of which is always guaranteed for finite-input 
data structures). An efficient implementation f this algorithm is given in Kamps 
(1997). The lattice corresponding to our example one-valued context is given to the 
right of Figure 1. This lattice shows the full labeling of formal concepts in order 
to ease comparison with the originating table. Much of this information is redun- 
dant, however, and so we generally use variations on the abbreviated, more concise, 
form shown in Figure 2. Such lattices naturally capture similarities and differences 
between the values of the specified attributes of objects: each concept of the lattice 
indicates objects with some set of values in common. Moreover, the generalizations 
are organized by subsumption, which supports the selection of most-specific sub- 
types. 
When considering datasets in general, we typically need to express more informa- 
tion than that of single attributes and for this we require mult i -valued contexts. An 
example of a multi-valued context is shown in Table 1, which includes our previous 
one-valued context as one of its columns; for ease of discussion, however, we will 
for the present restrict he Profession attribute so that each artist has only one profes- 
sion. The table shows the subject areas/professions, institutions, and time periods in 
which the indicated artists were active. Formally, a multivalued context is a general- 
isation of a one-valued context and may be represented as a quadruple (G,M,W,I) 
where G, M, and I are as before, and W represents he set of values of the attributes-- 
412 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
Architect 
Hilberseimer 
 
__ Designer 
Breuer ~ 
Figure 2 
Concept lattice example, more succinctly labeled. Here, the extension label for each node 
consists of just those elements which are added at that node moving up the lattice; conversely 
the members of the intensions are shown moving down the lattice, again adding just those 
elements that are new for that node. For example, the node labeled simply Gropius, Breuer 
corresponds to the full form ({Gropius, Breuer}, {Architect, Urban Planner}) since both 
Gropius and Breuer are newly added to the extension at that node, while no new elements are 
added to the intension--'Architect' and 'Urban Planner' are both inherited from above. 
Table 1 
A collection of facts concerning artists and their professions drawn from the frame-based 
domain model used for the Dictionary of Art: biographies and re-expressed asa table of facts 
and attributes. (The facts are for illustrative purposes only and should not be taken as reliable 
statements of art history!) 
Person Profession School Workperiod 
gl Gropius Architect Harvard 1937-1951 
g2 Breuer Architect Harvard 1937-1946 
g3 A. Albers Designer Black Mountain College 1933-1949 
g4 J. Albers Urban Planner Black Mountain College 1933-1949 
g5 Moholy-Nagy Urban Planner New Bauhaus 1937-1938 
g6 Hilberseimer Architect Illinois Institute of Technology 1938-1967 
which are, in contrast o the one-valued-context case, not trivially either true or false, 
applicable or not. To identify the value w c W of attribute m E M for an object 
g E G, we adopt the notation rn(g) = w and read this as attribute m of object g has 
value w. 
Kamps (1997) renders multivalued contexts amenable to the techniques for depen- 
dency-lattice construction by deriving a one-valued context that captures the func- 
tional dependencies of the original multivalued context. To see how this works, we 
first note that a functional dependency in a relation table is established when the fol- 
lowing implication is always true: for two arbitrary objects g, h E G and two domain 
sets D,D* E M, then D(g) = D(h) ~ D*(g) = D*(h). This implication suggests the 
following construction for an appropriate one-valued ependency context: for the set 
of objects take the set of subsets of two elements of the given multi-valued context 
P2(G); for the set of attributes take the set of domains M; and for the connecting inci- 
dence relation take IN( {g,h}, m) :~=~ m(g) = m(h). The required dependency context is 
then represented by the triple (P2(G),M, IN). This is illustrated in the table to the left 
of Figure 3, which shows the one-valued context corresponding to the multivalued 
context of Table 1. An entry here indicates that the identified attribute has the same 
413 
Computational Linguistics Volume 27, Number 3 
Person Profession School Workperiod ~ Profession 
Scho m(gl)=m(g6) 
glg2 X X m(g4)=m(gS) m(g2)=m(g6) 
glg6 X 
gag6 x Period \]_ \[ m(gl):m(g2) 
g3g4 X X m(g3)=m(g4) ~ '~L  _ 
g4g5 X t 'erson 
Figure 3 
Example dependency ontext and corresponding lattice. 
value for both the facts identified in the object labels of the leftmost column: for exam- 
ple, gl and g2 share the values of their Profession and School attributes. This provides 
a wholistic view of the dependency structure of the original data and is, moreover, 
computationally simple to achieve. 
It is then straightforward toconstruct a dependency lattice as described above; this 
is shown to the right of Figure 3. The arcs in this lattice now represent the functional 
dependencies between the involved domains, and the equalities (e.g., m(gl)=m(g2)) 
represent the redundancies present in the data. For example, the lower left node labeled 
Period indicates not only that the third- and fourth-row entries under Period (g3 and 
g4) are identical but also, following the upward arc, that these entries are equal with 
respect o School; similarly, following upward arcs, the middle node (m(gl)=m(g2)) 
indicates that the first- and second-row entries (e.g., gl and g2) are equal with respect 
to both School and Profession. The lattice as a whole indicates that there are functional 
relationships from the set of persons into the set of professions, the set of periods, and 
the set of schools. A further functional relationship exists from the set of periods into 
the set of schools. 
Once such a lattice has been constructed, we also have as a consequence a set 
of classifications of the original relational input, or dataset. This can directly drive 
visualization as follows. For graphics generation, it is important hat all domains of 
the relation become graphically encoded: this means the encoding is complete. Kamps 
(1997) proposes a corresponding graphical encoding algorithm that starts encoding the 
bottom domain and walks up the lattice employing a bottom-up/left-to-right strategy 
for encoding the upper domains. The idea of this model, much abbreviated, is that 
the cardinality of the bottom domain is the largest, whereas the domains further up 
in the lattice contain fewer elements. Thus, the bottom domain is graphically encoded 
using so-called graphical elements (rectangle, circle, line, etc.), whereas the upper 
domains are encoded using graphical attributes (color, width, radius) and set-valued 
attributes that must be attached to graphical elements. In general, it is preferable 
to maximize graphical attributes over set-valued attributes as this keeps graphical 
complexity moderate. 
Figure 4 shows two example diagrams that are produced from the dataset of 
Table 1 via the dependency lattice shown to the right of Figure 3. Informally, from 
the lattice we can see directly that artists (Person) can be classified on the one hand 
according to work period (following the lefthand arc upwards) and, on the other hand, 
jointly according to school and profession (following the vertical arc). The algorithm first 
allocates the attribute Person, indicated in the lowest node of the lattice, to the basic 
graphical element rectangle; the individual identities of the set members are given by 
a graphical attachment: a string giving the artist's name. The functional relationship 
between the set of persons and the set of time periods is then represented by the further 
414 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
', \[ \[ a.Albers i E l  Uan'ard 
'_ . . . . . . . .  . . . . . . . . . . . . . . . . . . . . . .  
..................... ~_ _~_..p.q~_ _ _  \[Z3 ~,c 
\[- . I J.Aibe~ l ib ,rr 
\ [ \ ]  Mohoiy-Nagy 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  : a rc t~mcts  . . . . . . . . . .  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  
\[ J Breuer 
I I Gropius 
Hiiberseir~r 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  
(a) 
Figure 4 
J.Albers i \ [ \ ]  ~F  .~  
,. ~_ ,  .~o,y~.g.L. _: 
193Q 1940 Z950 I~  19/0 
(b) 
Example diagrams generated for the example data. Alternatives are produced by two distinct 
traversals of the aggregation lattice. 
graphical attribute of the length of the rectangle. This is motivated by the equivalence 
of the properties of temporal intervals in the data and the properties of the graphical 
relationship of spatial intervals on the page. Two paths are then open: following the 
functional relationship first to either a set of schools or to a set of professions. Diagram (a) 
in Figure 4 adopts the first path and encodes the school relationship by means of the 
further graphical attribute of the color of the rectangle, followed by a nesting rectangle 
for the relationship to Professions; diagram (b) illustrates the second path, in which 
the selection of graphical encodings is reversed. Both the selection of color and of 
nesting rectangles are again motivated by the correspondence b tween the formal 
properties of the graphical relations and those of the dependencies observed in the 
data. Reinstating the multiple professions of Gropius and Breuer mentioned in Figure 1 
gives rise to a rather different dependency lattice in which the second solution is no 
longer possible. 
All of these mechanisms were implemented and used extensively for visualization 
in the context of an Editor's Workbench for supporting editorial decisions during the 
design of large-scale publications uch as encyclopedias (Rostek, M6hr, and Fischer 
1994; Kamps et al 1996). 1
2.2 The Partial Equivalence of Diagram Design and Text Design 
A selection of particular graphical elements entails the expression of particular func- 
tional dependencies. This is similar to decisions that need to be made when generating 
text. For instance, the equality rn(gl) = re(g2) in the lattice of Figure 3 above can also 
motivate a particular grouping of information in a corresponding linguistic presenta- 
tion. That is, whereas graphically the equality motivates an association of both Gropius 
and Breuer with the graphical attributes allocated to Professions and Schools, textually 
we may connect both artists in a single sentence: i.e., gl (concerning Gropius) and g2 
(concerning Breuer) can be compactly expressed by collapsing their (identical) school 
and profession attributes: 
Both Gropius and Breuer were architects and taught at Harvard. 
A similar phenomenon holds for the grouping re(g3) = rn(g4); here, g3 (concerning A. 
Albers) and g4 (concerning J. Albers) may be succinctly expressed by collapsing their 
identical period and school attributes. 
1 Init ia l ly  deve loped w i th in  the European Un ion  Research  and  Deve lopment  in Advanced 
Communicat ions  Techno logy  in Europe  (RACE) pro ject  2042 EUROPUBLISHING (H( iser  et al 1995). 
415 
Computational Linguistics Volume 27, Number 3 
Combining these considerations motivates the following approximate textual re- 
rendering of diagram (b): 
Anni Albers (who was a designer) and J. Albers (who was an urban planner) 
both taught at the BMC from 1933 until 1949. Moholy-Nagy (who was also an 
urban planner) taught from 1937 until 1938 at the New Bauhaus. Gropius and 
Breuer (both architects) were, at partially overlapping times (1937-1951 and 
1937-1946 respectively), at Harvard. Hilberseimer (who was an architect too) 
taught at the IIT from 1938 until 1967. 
A textual re-rendering of diagram (a) would reflect he contrasting roupings entailed 
there: i.e., Breuer, Gropius, and Hilberseimer would be grouped at top level whereas 
the two Albers would not. 
A dependency lattice extracts partial commonalities that remain constant over 
subsets of the data to be presented and this is closely related to the problem of ag- 
gregation in NLG (cf., Dalianis \[1999\]). The functional redundancies captured by the 
lattice construction are precisely those redundancies that indicate opportunities for 
structurally induced aggregation. Selecting a particular graphical element or attribute 
to realize some aspect of the data is in fact an aggregation step. In Bateman et al 
(1998), we have shown this in terms more familiar to NLG by re-interpreting in de- 
pendency lattice terms some of the standard examples of aggregation discussed in 
the literature. Below, we show that mutual consistency between textual fragments 
produced by our NLG component and graphical elements produced by the automatic 
visualization component can be enforced by driving both from a common dependency 
lattice. 
3. Preliminaries for Layout: Inputs and Outputs for the Layout Determination Task 
Page layout, more properly termed typographic design, is usually divided into three 
levels: microtypography, macrotypography (layout proper), and style. Here we are 
most concerned with macrotypography--the segmentation of a page of information 
into more or less closely related "visual blocks." Macrotypography is a central com- 
ponent of professional document design; indeed, 
Every designer knows that how elements are put together on a page 
communicates a powerful message (Adobe Inc., InDesign product in- 
formation sheet). 
Unfortunately, with some valuable exceptions (cf., for example Schriver \[1996\], Waller 
\[1988\] and Bernhardt \[1985\]), the professionals do not then go on to tell us just what 
that message might be. 
Our starting point for investigating layout and its message rests on the fact that 
layout is not a fixed property of information presentation; i.e., similar information can 
be subjected to diverse layouts. We then assume, following Schriver (1996) and others, 
that layout decisions should be functionally motivated in terms of a presentation's 
communicative purposes. We illustrate this further, while at the same time setting 
the scene for our empirical investigation, by briefly considering the kinds of layout 
variation that are commonly found. We do this in two steps. First, we characterize 
more finely the notion of layout as such; then, we consider how selections among 
possible layouts may be motivated. 
416 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
3.1 Layout structure 
Issues of layout were already present within the visualization framework discussed 
above. For example, the relationship of the graphical blocks representing particular 
artists, or the positioning of the diagrams' legends with respect o the diagrams them- 
selves, all involve decisions of layout. The solution developed as part of the automatic 
visualization component used in the Editor's Workbench was to consider layout itself 
as a particular class of diagrams, with their own particular properties and concerns. 
An automatic page-layout component (APALO) was accordingly implemented as a 
specialization of the general visualization task. 
Fully specified layout diagrams pecify the physical placement and appearance of
elements on a page. In order to generalize across such layouts we define an abstract 
level of representation called Layout Structure. Layout structure abstracts across the 
precise details of physical layouts to focus on classes of layouts that are visually 
"equivalent." Visually equivalent layouts suggest he same page blocks, with similar 
inter-block relationships of perceived prominence and similarity. 
Our view of layout structure draws heavily on Southall (1992), who defines a re- 
stricted set of typographical relation types. These include: containment, i.e. recursive 
block structure; reading order, i.e., generally left-to-right, op-to-bottom reading paths 
in Western cultures; similarity, describing blocks that share some visual properties 
such as size, typeface selection, structure, etc.; and reference, where a connection be- 
tween visual blocks is suggested by physical proximity. We represent layout structures 
in terms of a tree structure (representing containment) augmented by a restricted set 
of possible additional annotations corresponding to the remaining typographical rela- 
tion types. The annotations thus serve either to further constrain the possible physical 
layouts that may render the layout structure, or to place mutual constraints on the ren- 
dering possibilities--for example, a type-equivalence annotation requires consistency 
in rendering decisions across the units declared to be type-equivalent. 
A simple example of layout structure and its correspondence to a physical layout is 
shown in Figure 5. Here we see that annotations also provide a numerical summary of 
the information to be displayed in any layout element (which may be either descriptive 
or denote a target): for example, node 2.3.2 in the figure is annotated 403w+3p:50, 
indicating that it consists of a block of text with 403 words and 3 pictures, and is 
allocated an importance score of 50%. 2 These scores impose target visual weights for 
corresponding page elements (i.e., more important nodes should be more prominent, 
which can be achieved by larger surface area combined with less but more heavy type, 
by use of prominent colors, etc.). More information concerning layout structure and 
its motivation is given in Reichenberger t al. (1996). 
Given a fully specified layout structure as input, APALO renders it as a physical 
page by mapping constituency to nested boxes (i.e., inclusion diagrams), and strength 
of connection and sequence to spatial displacement: the boxes included within an en- 
closing box are arrayed two-dimensionally to influence reading order. Typographic 
attributes, such as type size, specific type face within the family (bold, italic etc.), 
arrangement of the type (ragged right, flush matter, etc.), leading, coloring and orien- 
tation, are all assigned at this stage, respecting any constraints on presentation given 
in the abstract layout structure. Since it is rarely the case that a layout structure is 
so tightly specified that only one physical ayout is possible, the implementation uses 
progressive refinement and allows a user either to stop the process at any point or 
2 The numbering ofthe nodes tarts with 2.3 to maintain ready comparability with the discussion i
Reichenberger et al (1996). 
417 
Computational Linguistics Volume 27, Number 3 
typeequivalence I \] nonterminal 
\]J" ..... "\ refers to 
follows %_~)  terminal 
2.3 
Figure 5 
Example layout structure and its correspondence to a segment of page layout (adapted from 
Reichenberger t al. 1996). The "follows" annotation requires a page rendition where the reader 
will encounter 2.3.1 before 2.3.2, and the "refers to" links attract he type equivalent units 2.3.3 
and 2.3.4 towards 2.3.1 without establishing a further visual block contrasting with 2.3.2. 
to continue searching for better layouts until a stable state is achieved. The rendering 
aspect of APALO corresponds broadly to other components that have been designed 
for page layout (e.g., Feiner \[1988\] or Graf \[1995\]), but differs from these in that it is 
not restricted to any particular page model (e.g., a grid system). 
Our subsequent considerations of layout motivation adopt fully specified layout 
structures as their target. Such structures will include presentation content as produced 
by the natural-language-generation and automatic-diagram-generation components in
their terminal elements, and are responsible for enforcing communicatively effective 
layouts. 
3.2 Communicative-Functional Structure and its Relationship to Layout Structure 
For automatic information presentation we also require a representation f the com- 
municative intentions to be fulfilled by a presentation. For this, we adopt "standard" 
rhetorical structure theory (RST) as set out in Mann and Thompson (1986). RST is se- 
lected for two reasons: first, it is one of the most elaborated and widely used forms of 
analysis of communicative intentions and has been applied to a wide variety of texts; 
and second, it is well established in NLG and has already been applied to multimodal 
information presentation (cf., Andr6 and Rist \[1993\]). 
Originally, RST sought to describe the recursive structure of any text in terms 
of rhetorical relations which hold between the segments (called spans) of the text. 
Rhetorical relations are either symmetric (multinuclear), in which case the text spans 
related are considered of equal importance for the text, or assymetric, in which case one 
text segment among those related by a relation is singled out as being more essential 
to the writer's purposes (the nucleus) than the others (the satellites). RST defines 
itself as a functional theory, in that the segments related are functional rather than 
textual--i.e., a rhetorical relation need not have any specific grammatical or lexical 
418 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
\[1\] There are many reasons that the Bauhaus 
movement spread to the U.S. \[2\] For example, 
more people became aware of their work in mag- 
azines. \[3\] Also, Bauhaus-designed objects came 
onto the market in increasing numbers. \[4\] But 
there were two main reasons. \[5\] First, many ex- 
Bauhaus members emigrated to the U.S. \[6\] And 
second, they started teaching Bauhaus methods 
in U.S. colleges. 
1-6 
I-3 
\[1\] 2-3 
_A 
\[2\] \[31 
4-6 
\[4\] 5-6 
_A 
\[51 \[6\] 
Figure 6 
An example text representing both itself and its underlying propositions, and the 
corresponding communicative-intentional text plan represented in terms of RST. 
realization. RST's functional orientation supported a further re-interpretation f RST 
in which rhetorical relations become plan operators for text construction (cf., Moore 
and Paris \[1993\]; Hovy \[1993\]). From this perspective, rhetorical structures represent a 
plan for achieving some goal via linguistic means. The information maintained at the 
leaves of such RST text plan structures i thus not pre-existing text, but rather chunks 
of information that are to receive textual realizations. 
If, as is common in NLG, we consider the information-presentation ask to involve 
the expression, or realization, of a text plan expressed according to RST and, further, we 
see the layout used in that information presentation as one of the decisions that needs 
to be made, then we face the question as to whether the text plan can also motivate 
the necessary layout decisions. In Figure 6, we show a simple invented text fragment 
and a corresponding RST analysis. We will use this text in two ways: First, it stands 
as a shorthand for a set of propositions from the knowledge base or domain mode l - -  
during NLG, and following text planning, the rhetorical structure is as shown but the 
leaves identify the propositions indicated rather than textual elements. Second, the text 
stands as one possible result of the subsequent NLG process, where the propositions 
grouped in the text plan have already received their linguistic realization. This double 
use is harmless because we do not use the textual version to motivate any of the 
decisions taken during the NLG process whose task it is to produce it. 
The RST structure states that the text divides into two main segments, span (1-3) 
and span (4--6), and that these are related by the rhetorical relation concession. This 
indicates that the main allegiance and point of the writer lies with the nucleus (span 4- 
6), but that, at the same time, the writer does not claim that the seemingly contradictory 
information in the satellite (span 1-3) does not hold. The principal purpose of using an 
RST-concession relationship is to strengthen one's own argument by showing that one 
is aware of a possible objection but are already able to dismiss it. Common linguistic 
markers of concession are however, although and, as adopted here, but. In the embedded 
trees, the satellite tree involves an RST justify relationship between a (relative) nucleus 
(1) and the span (2-3), the nucleus tree involves an elaboration relationship between 
a (relative) nucleus (4) and the span (5-6). Both spans (2-3) and (5-6) are examples 
of the RST joint schema: this simply combines the connected propositions into a set 
without assigning any difference in nuclearity among them. A justify relationship 
holds when the satellite gives information intended to justify the writer's right to 
419 
Computational Linguistics Volume 27, Number 3 
present he information in the nucleus (i.e., in this case, the claim that there are many 
reasons for the Bauhaus preading is backed up by the examples offered in (2) and (3)); 
and the elaboration relationship holds when further specifying information concerning 
some aspect of the nucleus is given. There are approximately 25 RST relations in the 
standard set and space precludes giving more details of them here: their definitions 
and examples of use are given, however, in numerous places in both the computational 
and (text-)linguistic literature. 
The realization of an RST structure as a natural language text involves many 
important issues which we will also not address here. Instead, we focus on the rela- 
tionship between an RST-style presentation plan, and layout decisions; in particular, 
given our goal of determining a layout structure that can then be rendered as a physi- 
cal page layout, we ask how the information in a rhetorical structure may be placed in 
correspondence with appropriate layout structures. In the text of the previous figure, 
for example, one layout decision that could be made is that there is no particular lay- 
out to be done--this is then equivalent to a straightforward, monomodal NLG system 
producing text only. The text in the figure is already an example. Another possible 
decision, lying at the opposite extreme, is to say that every node of the RST structure 
should find some direct correspondence in a node of the layout structure. This would 
be to require that the entire constituency structure of the RST tree be signaled visually 
in the layout. While both options are possible, it should be clear that there are many 
others. For example, span (1-3) could be represented as a single layout element (i.e., a 
single visual block consisting of a text paragraph) with span (4-6) breaking down into, 
perhaps, a single layout element for the nucleus (6) and two further layout elements, 
one for each of the members of the satellite. 
The situation is made yet more complex by the presence of a steady trade-off 
between information expressed via layout and information expressed via text. For 
example, if the spans (1-3) and (4-6) are allocated to distinct layout units, allowing 
them to vary independently of one another in terms of microtypography and physical 
placement, hen it is considerably less likely that the RST concession relationship will 
be preserved linguistically. Similar considerations arise within the two spans: the more 
the RST structure is decomposed, resulting in typographical distinctions, the less use 
is made of explicit linguistic discourse marking. A compelling illustration of this can 
be seen in the complex graphic-text combination discussed in Kerpedjiev et al (1998) 
in which a text fragment is re-expressed graphically. 
This variability needs to be brought under motivated control. Information pre- 
sented together, or in similar styles, is perceived as related regardless of whether this 
was intended by the page designer or not; conversely, information presented in differ- 
ent styles, or separated widely on the page, is interpreted as unrelated. Critical work 
in professional document design demonstrates that failure to respect such entailments 
of layout makes a page or diagram difficult to interpret and possibly misleading: see, 
for example, Schriver (1996) and the numerous references cited there. But it is also well 
known that not all of the possible details of document structure are normally presented 
in layout: the relationship is substantially more flexible. This presents a problem for 
any approach to multimodal presentation that adopts too close a relationship between 
presentation-plan elements and layout--as most previous ystems have in fact done. 
4. A Methodology for the Empirical Investigation of Communicative-Functional 
Page Layout 
Given our goal of understanding more precisely what can happen between a specifi- 
cation of communicative intentions--expressed in terms of a presentation plan using 
420 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
a representation such as RST--and a fully specified layout structure that passes on 
intention-appropriate constraints o a page-rendering engine, we embarked on an em- 
pirical investigation ofthe kinds of variability that occur in real documents. For this, we 
developed a methodology for exploring the functional basis of page layout in general. 
Two caveats are required here: first, our experimental method was exploratory--as 
one of the first studies of its kind, we needed to respond with flexibility to the results 
of the analysis; and second, since our aim was to move quickly from first analysis 
results to prototype system in order to evaluate the feasibility and value of the entire 
scenario in practice, the study was deliberately restricted in scope. 
4.1 Method of Analysis 
The provision of appropriate multimedia corpora for supporting the kind of empirical 
analysis we required is still, several years later, very much in its infancy. 3 The main 
criteria for the selection of pages for our investigation were (a) that the entire page 
be concerned with a single topic, while nevertheless presenting various aspects of 
that topic by means of varied text structuring and typographical nd layout decisions, 
and (b) that the page demonstrate "interesting" layout. This led us to consider pages 
drawn from popular magazines, ince these exhibit highly varied typographical nd 
layout decisions in the hope of being eye-catching and maintaining interest. 
The detailed structure of our study was as follows. We took a set of pages selected 
according to criteria (a) and (b), and asked for each page why it was set out as it was. 
We answered this question by: 
? 
2. 
. 
. 
. 
providing a layout structure representation for each page; 
constructing a single "text" out of the entire "content" of the page 
(including headings, picture captions, pictures, etc.) that captured as far 
as possible the perceived purpose of the page; 
performing a "functional text structure analysis" of the constructed text 
respecting the perceived purpose of the page (and therefore of the 
constructed text); 
considering whether the page-layout s ructure could be derived 
straightforwardly from the text structure; 
deriving and informally evaluating alternative "possible" layouts on the 
basis of a progressively refined set of layout principles. 
We illustrate our approach by setting out in detail one round of analysis concerning 
a single illustrated page. The page used is shown in Figure 7 and is drawn from 
the German illustrated sport and health magazine Fit for Fun (1995 (5), 92). The article 
describes various aspects of the game Unihoc, presenting background information con- 
cerning how the game is played, where it is popular, and why it is popular, as well 
as some pointers to further information and the equipment needed to play it. The 
page was typical of a series of feature articles being run in the magazine at that time. 
Particular elements expressed using layout in the page are indicated in the figure: 
significant here is solely the physical layout of the page, not the content. 
3 Two projects currently involved with gathering and annotating such data re ICONOCLAST 
(Bouayad-Agha, Scott, and Power 1996) and GEM (Delin, Bateman, and Allen, forthcoming). Corio 
and Lapalme (1998) have also presented results of a corpus tudy. 
421 
Computational Linguistics Volume 27, Number 3 
. . . . . . . . . . .  
Feature , .;- ;~;. ,,; ; : . :  - ' .  . . . . . . . . . . . . . .  : 
Title 
Playing 
Possibiliti, 
. . . . . .  
~Sp el mit Ball und Bande 
Bei de. Schwcden ist n die tt ?~en 5ic~ 5~?h$?I. M~n n. 
I b?l~ (~ ~t  = ~ bck=nnt~= arl~Kem Y r~tem Totw=. 
spoon D~ 2.ee t .  re .  SeS~be ISpLe=?Jt: =w~,=~ ? 
I fnnelt~ndy t Ima~t.  Oiu? h=h ~.  ~ l  p=~tl~ i~ Spid , 
MZ~r  a= H~kcy =rid EIs~ V?~hf laut '~  ?~tm kt~m ~ ? 
/~l t  lnK~, Seit Mine d~ ~h(-  du  d~? Sple~e .m?se.d- - 
. I Ig~ Jah~ wlrd dl~r dy= Fol$ ~ tcht Amw~h=~ 
m ~ae Ma v,t~chu~spe~ a ~h pm TcamL O l~ Vartlnt~ 
' tn IK-~Ichl=~ i~uptdt, dcr kommt I~4 in??~on~len 
b~,~r. Un~b~? ffl,~et. Je ~cb  ID~J~he Untk~ vcf~n~ 
I ] 
I 
| , Al le Formen sind miiglich "N '~- - - -~- . . .~ . ' :~ .~ 
d--T~;~t,?laeSp~. ~henr?ld*Lcd,tli?hdie ": {81o(1~ ek~ U l l ' ,~ .  
I ~ =ktltcht~ V?.?andms er[or, spostn~#,rca Vt .ft~ 
L de.,hezweltral:er~v?, h~b~ScJ.,~acnk~qae . 
p.T.m.plusT.~a~ .ftl*ienMl~pltttru.ddt. Tcrmlne 
. . . . . . .  Author 
. . . . . .  Lead-in 
Information 
~ Equipment 
~ Events 
Figure 7 
An original page for analysis. Source: 'Fit for Fun' 5:p92 (1995). The page is annotated here to 
show the major layout units. 
4.2 An Illustrative Round of Analysis: Preparation 
The starting point for our analysis was provided by our initial page-selection criteria, 
i.e., that there is some body of material that the author(s) of the page wish to present. 
It is then relevant (and necessary) to ask how this information is to be broken up 
for effective presentation. To do this, we set out the content of each page as a single 
constructed text: The constructed text for the Unihoc page is given in Figure 8. Note 
that this text already reflects our understanding of the function of the page in its 
context of use: we assume that the page has the main functions of informing readers 
about a game that they might not be familiar with and telling them that the game is 
in fact finding increasing support both internationally and nationally. 
This approximate, "pre-analytic" understanding of the page's communicative func- 
tion is then made more explicit by providing a detailed functional text-structure analy- 
sis using RST. The RST structure offers a plausible presentation plan that can serve as a 
starting point for considering possible and contrasting realizations of this information 
as a two-dimensional page. The constructed text has to then be viewed in a similar 
way to the example fragment concerning the Bauhaus that we used in Section 3,2. 
In many respects, it is not a text at all, in that it overcommits to particular forms of 
linguistic expression and linear ordering. NLG uses of RST do not (in general) allow 
the RST structure to specify particular relative orderings between nuclei and their re- 
spective satellites. The ordering needs to be decided during generation so that issues 
of textual fluency can be addressed appropriately. The same then holds for our con- 
422 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
\[0\] Astrid Frula, captain of the German National Unihoc team, writes: \[1\] 
Among the Swedes it is the most popular and best-known branch of sport. 
\[2\] We are talking about Unihoc, also called Floorball or Indoor Bandy. \[3\] 
This mixture of hockey and ice hockey is attracting ever more supporters. 
\[4a\] Since the middle of the eighties, this dynamic team sport has also been 
played in Germany and \[4b\] the step to becoming a school sport is imminent. 
\[5\] Unihoc can be played in the gym as well as outside, on grass or ice. \[6a\] 
Because the ball can be played with both sides of the stick, \[6b\] it is much 
easier to master than normal hockey. \[7\] One can continue playing behind 
the goal (four metres up to the board) and \[8\] there is no offside rule. \[9\] 
Stopping the ball with the stick and the foot is allowed, as well as playing 
via the board. \[10\] Raising the blade of the stick above knee height, or lifting, 
hitting, or holding the opponent's stick is not allowed. \[11\] Entering the goal 
area, playing the ball while lying or kneeling, moving the stick between the 
legs of the opponent, or engaging in hard body contact is also prohibited. \[12\] 
Unihoc allows many alternatives in how it is played. \[13\] One possibility: \[14\] 
each team has six players, and no goalie. \[15a\] In front of the goal there is a no- 
go area - \[15b\] no players are allowed within a semicircle of almost 2 meters 
in radius. \[16\] The second alternative requires more tactical insight: \[17\] here 
there are 6 players per team, plus a goalie. \[18\] Each receives a clear function, 
which determines their effective playing area. \[19a\] The two defenders may 
only act within their own half; \[19b\] in contrast, the two attackers may only 
play within their opponents' half. \[20\] Only the midfield players can run 
as they wish over the entire playing field. \[21\] In this exciting variant solo 
artists have no chance. \[22\] Spotting a free team member and passing the 
ball on are essential. \[23\] Two variants have become dominant. \[24\] On the 
large field (forty metres long, twenty metres wide) two six-person teams with 
fixed goalie oppose each other (Playing time: two times twenty minutes). \[25a\] 
A board keeps the ball continuously in play; \[25b\] rest periods hardly ever 
occur. \[26\] As in ice hockey, a player substituting for another does not lead 
to an interruption of play (up to eight substitute players per team). \[27\] This 
is the variant that is used in international matches. \[28\] The German Unihoc 
Union (0421/4984255) frequently goes back to the small field variant: \[29\] 
where mixed 4-person teams play without a goalie. \[30\] The playing field is 
only thirty metres long and sixteen metres wide, while the playing time is 
halved. \[31\] The goals are also smaller than on the large field. \[32\] The goals 
(60 x 90 centimeters) are collapsible. \[33\] In the gym, light holed plastic balls 
(20 grams, 8 centimeter diameter) are used. \[34\] The sticks (Kevlar 95 Mark, 
plastic 10 Mark) are 100 to 120 centimeters in length. \[35\] Complete sets of 
Unihoc equipment cost around 450 Marks. \[36\] Info: 05357/18181. \[37\] 05.- 
07.5., D~isseldorf, \[38\] 09.-11.6., Clausthal~Zellerfeld, \[39\] 16.-18.6., Mfinchen, 
\[40\] 23.-25.6., Halle/Saale, \[41\] 03.-05.11., Bremen, \[42\] 10.-21.11., GOteborg, \[43\] 
17.-19.11., Bremen, Deutsche Meisterschaften. \[44\] Further Info: 0421/23 94 01. 
Additional graphical material: 
A: Astrid Frula (photograph): 'authorial voice' 
B: Player positions (diagram): two variations, B1 and B2 
C: Unihoc equipment (photograph) 
D: Unihoc being played on ice (photograph) 
E: Unihoc being played in the gym (photograph) 
Figure 8 
Constructed Unihoc text and graphical material used. Independent clauses (or major 
information units) are numbered for ease of reference and the graphical content of the page is 
also summarized. 
423 
Computational Linguistics Volume 27, Number 3 
structed text. Text spans corresponding to sibling nuclei and satellites are considered 
unordered; any ordering in the text is only partial, as given by the RST presentation 
plan. 
This is doubly appropriate here because we cannot generally provide a unique 
linear text that re-expresses precisely the information that is given in an original two- 
dimensional page, and so this is not the constructed text's function here. The text 
simply provides a shorthand for the content hat must necessarily be presumed to un- 
derlie the page's production. Moreover, it is necessary in any case to reconstruct the 
intended content of the page because the page itself is unsuited to stand as the basis 
for an RST analysis. A page's most salient features are visual--i.e., typographical-- 
and part of our claim is that this is not directly indicative of rhetorical organization: 
relationships between visual blocks on the page are at a different level of abstraction 
than rhetorical relations. Assuming an equivalence of levels would probably lead to 
rhetorical analyses that primarily involve joint schemas conjoining the (many) top- 
level visual blocks of any page such as the Unihoc page; and at the same time it 
would leave the alternations across differing but communicatively similar layouts un- 
explained. 
The RST analysis for the constructed Unihoc text, and hence of the page, is shown 
in Figure 9. The RST analyses that we use were arrived at following the standard tech- 
niques of cross-coder checking, consultation and consensus. The RST diagram follows 
the conventions illustrated above in Figure 6 but uses considerably more rhetorical 
relations. Again, space precludes listing the definitions of the RST relations found in 
the analysis, but the definitions employed are exactly as given in the literature. The 
analysis in the figure also includes the information presented in the original page as 
photographs or diagrams. These have been labeled alphabetically (A, B, etc.) as iden- 
tified in Figure 8 and have been anchored into the RST-tree at appropriate places with 
plausible relations. 4 
The RST analysis makes our interpretation of the function of the text/page fully 
explicit. The central nucleus for the page as a whole is unit \[3\], i.e., This mixture of 
hockey and ice hockey is attracting ever more supporters. We are therefore considering the 
primary purpose of the page to be a statement that Unihoc is becoming very popular 
(and so the reader should be well up on it). The segments immediately following 
the nuclear span, \[5\] and \[6\], give some of the reasons why the sport is becoming so 
popular (with rhetorical relation volitional cause), and then segment \[7-11\] gives an 
overview of the do's and don'ts of the game. The main bulk of the constructed text 
consists of a concession that, although Unihoc allows many alternatives in how it is played 
\[12\], two variants have become dominant \[23\]. The existence of alternatives i supported 
by the two possibilities presented in segments \[13-15\] and \[16-22\], both related by 
the relation evidence to the nuclear \[12\]; the two main alternatives are elaborated in the 
explicit contrast drawn in segments \[24-27\] and \[28-31\]. Finally, the segments \[32-36\] 
and \[37-44\] provide additional elaborating material concerning where and when the 
game can be seen and what equipment is necessary to play it. 
A page such as this presents a considerable challenge for models of automatic 
layout. A closer indication of this complexity is provided by Table 2, which shows the 
correspondence b tween informational segments identified in the RST presentation 
4 The analysis as shown is not a correct RST structure because it admits differing relations as satellites of
a single nucleus: a strictly correct structure would need to show more intermediate s gments in order 
to have one type of relation apply within each segment. Since this would have complicated the 
diagram even further, we have simplified for purposes of exposition, although the existence offurther 
structure simplifies the task of the layout-structure construction specification we give below. 
424 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
..~,~aboration 
? ~ x'~ lab?rati?n ~ 
circumstance elaboration ba?~ / - '~KA_~"~__  orati?n NNN . ~ 
1 2 3-4 12-31 32-36 5 6 7-11 
..~ ~t 1 /c~trast 
6a 6b 7-9 I0-II 
"'*? 
4 
7 8 9 10 11 
circu m$1~ concession 
4a 4b 12-22 
12 13-22 
13-15 bac~ back~o~ 6-22 
BI ~t ion  B2 
14 15 
15a 15b 
16-22 elaboration 
16 17-20 21-22 
I 21 22 
elaboration 
17 18-20 ~ ration 
18 19-20 
//~ontrast 
19 20 
COI~t~ 
19a 19b 
Figure 9 
32-34 35 36 
32 33 34 
23-31 
...2~.~ rati?n 
23 24-31 
24-27 28-31 
elaboration I ~ \[ elaboration 
L backgr?u~ i?n 
24 25 26 27 28 29 39 31 
I volitiwrlol- ...2,~'~ esult 
25a 25b 
37-44 
37-43 44 
37 38 3940 41 42 43 
Rhetorical structure theory analysis of the constructed Unihoc text. 
plan and the layout elements identifiable in the page)  We do not believe that it will 
be possible in general to predict precisely which aspects of a presentation plan will be 
rendered as distinctions in layout and which will be passed on for linguistic or graphi- 
5 For the purposes of the present paper, we will continue to use informal descriptions of the typefaces 
and formatting options taken up; standard typographical terminology ismore appropriate however. 
425 
Computational Linguistics Volume 27, Number 3 
Table 2 
Distribution of information and layout forms for the original ayout. Here: "flowing" with 
respect to a bullet or other list item indicates that items are run on within single lines and do 
not form separate paragraphs; relative font sizes are indicated by +. All text units are 
left-justified and right-ragged. 
discriminations 
page-layout nit text segments typeface  formatting size 
Intro \[1\]-\[6\] + \[23\]-\[31\] neutral 2-column neutral 
Rules \[7\]-\[11\] bold bullet-list, neutral 
flowing, 
wrapping picture 
Variants \[12\]-\[22\] italics 2-column neutral 
Equipment \[32\]-\[36\] bold enumeration + small 
summary, 
wrapping picture, 
arrow links 
Events \[37\]-\[44\] sans serif enumeration- neutral 
by-date + trailer, 
separate items, 
boxed 
Author \[0\] italic neutral smaller++ 
Caption for Intro \[1\]-\[6\] + \[23\]-\[31\] bold typewriter larger 
Caption for Rules \[7\]-\[11\] narrow typewriter larger 
Caption for Events \[37\]-\[44\] bold further larger+ 
distinct face 
Page Title \[0-44\] hollow larger++ 
Caption for D and E \[5\] bold caption small 
cal presentation. The purpose of our empirical investigation was therefore a somewhat 
different one: we sought to constrain this process of producing layout structures as 
far as possible, and to examine whether certain allocations of informational units to 
layout units could be ruled out on general principles. 
4.3 Alternative Renderings of the Constructed Text and their Evaluation 
In order to probe the limits of the flexibility suggested above, we next considered alter- 
native page-layout realizations of the communicative-functional i tent represented in
the rhetorically organized presentation plan. Our initial hypothesis was that, since the 
RST analysis represents a statement of the varying degrees of centrality attributed to 
the text segments present on the page, then these nuclearity assignments should also 
be reflected in the organization of any page layouts selected. Concretely, this hypothe- 
sis means relating text spans to nodes in the layout structure, with the nucleus of any 
span assigning higher weight to its corresponding layout structure node. This requires 
that the units found in the layout structure correspond only to proper subtrees within 
the RST structure and that elements grouped in the layout also be grouped within 
the RST tree. We refer to such a layout structure as respecting the "natural divisions" 
of the RST structure. Our investigation then evaluated this hypothesis by considering 
successively more complex "possible" layouts. 
426 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
~e~msspor t  un~,o~ 
Ga' r~v~and l~ 
Figure 10 
(a) 
event:s: 05...07.5~ D( . iS~ ? 
09.-11.6., CtausthabZel lerfeld 
? 16.-18.6., MOnchen * 23 . -  
25,6..  HalleSaale ? 03. -05.11. ,  
Bremen ? 10.-21.11. C _ ~  
? 17.-19.11., Bremen, 
Deut :s~ Me~ter.-schaften ?
Weitere In~,s: 0421/ '23 94 01 
G&M[ WlFH BALL ANO BOARDS 
Jn cor~ast. U'e t'~o atmc~rs rnay 
On~ me mlar~eu p~TS Cm 
vaiant s~ ~rdsts I~e no 
~ S~j  ~re rre~ t  
(b) 
Contrasting page layouts decomposing the source text: (a) Page rendition with minimal layout 
decisions, (b) Page rendition with random layout decisions. 
First, for example, we can note that if the aim of the author/editor/multimodal 
presentation system were not to present an interesting page design, then a layout such 
as that shown in Figure 10(a) might suffice. This presentation contains almost no lay- 
out decisions that subdivide the text into segments or establish relations of similarity 
and difference among those segments. The only subdivisions are the heading, text- 
body, and author divisions; the pictures of the original have been inset into the main 
text block approximately where their content is touched upon in the text. Neverthe- 
less, this would seem a perfectly possible (if, by current astes, dull) rendering of the 
material to be presented. It could be appropriate, for example, in an extremely densely 
presented lexicon or encyclopedia where space constraints and tradition suppress lay- 
out variation. This layout therefore serves to represent one endpoint in a continuum 
of possible layouts that need to be accommodated in any general account. It is also a 
further illustration of the trade-off between information that is expressed linguistically 
through explicit textual realization and information that is carried by the layout: our 
constructed Unihoc text needs to do more explicit linguistic signalling of discourse re- 
lations and communicative function than does the version employing layout. A reader 
should be able to recover this information from reading the text but it is not supported 
by an explicit layout encoding; we return to this issue below. 
We consider this case to emphasize that layout is concerned with choice. This is 
very similar to the state of a fairs in NLG: the main principle is that a speaker/writer 
has to choose how to present information and, whenever there is choice, there is meaning: 
that is, the choice is not free and some choices will be more appropriate than others 
in particular contexts. Moreover, the layout decomposition that is selected should be 
in some way coherent with respect o the communicative functions of the page. The 
next example layout, shown in Figure 10(b), illustrates this by presenting a layout 
427 
Computational Linguistics Volume 27, Number 3 
i T 'ii 
J 
Figure 11 
Example of a "non-natural" division of an RST structure. 
in which choices, we would argue, have not been made coherently. The unmotivated 
decisions that make this layout incomprehensible include: the Unihoc variants section 
breaks down into two parts of differing visual appearance; additional information 
(events) becomes excessively important due to its prominent position and font size; 
and the information about he author is related only to the first textblock and not to the 
entire article. Such problems are identical to those arising in the NLG task: when more 
flexibility of expression/presentation is made available---for example, by considering 
generation with respect o a grammar with broader coverage--it s essential to control 
this flexibility appropriately in order to avoid wrong decisions. 
The problematic nature of the layout of Figure 10(b) can be succinctly stated: it 
violates our initial hypothesis concerning the desired correspondence b tween RST 
structure and layout structure: the constituency structure of the layout and that of the 
RST tree are in direct opposition at several points. For example, there is no distinc- 
tion drawn in type face between page elements introducing the game and describing 
the rules (which are relatively more nuclear), and elements describing some of the 
variants, whereas other variants are presented as a separate lement with a larger, 
more prominent ype face; these decisions are not, therefore, motivatable on the basis 
of the RST structure. Most serious, however, is the way in which the division into 
two elements describing the game variants has been done: these elements involve 
segments which do not correspond to RST-subtrees at all. Indeed, the second segment 
(corresponding to \[19a\]-\[22\] in the RST tree) goes further and breaks the RST structure 
at two points: segment \[19a\]-\[20\] is related by elaboration to unit \[18\] while segment 
\[21\]-\[22\] is related, also by elaboration, to unit \[16\]. The combined segment, \[19a\]-\[22\], 
is therefore composed of two completely disjoint and unrelated parts of the RST tree; 
we show this graphically in Figure 11. In general, such layout structures are indeed 
found to be difficult to interpret coherently (cf., Schriver \[1996\]). 
The simplest strategy for producing an appropriate layout is therefore to restrict 
layout decomposition and constituency to the "natural divisions" established in the 
RST analysis. Any subtree is then, at least in principle, a candidate for selection as a 
layout unit. Accordingly, we suggest hat the constructed layout shown in Figure 12 
does fulfill the tasks of rendering the communicative intentions of the original page 
quite well. A relatively large number of layout decisions have been taken--for instance, 
the most important statements form a block of their own at the top of the page, 
additional peripheral information is placed in a vertical gray margin bar, and the main 
text is divided in two sections: The rules and Unihoc variants. Despite this diversity, the 
page remains coherent by virtue of the congruence of its layout structure with the RST 
structure; this is summarized in Table 3. 
While this rendering of the RST structure is perhaps acceptable as a simple layout, 
we must observe that it still does not approach the complexity and diversity of the 
428 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
wedes i~ is t te  mo~ popular and besr4~own 
xr-  We a-e ta! , ,k~ abo~ L~oc ,  atso caaecl 
Fk~i~ ~r k~rx~r Bardy. Tl~s rnixt~e or 
I ~  am te  hm:~y m ama:Urm emr  
m0re ~ ~nce the n~le  o f  t te  
~,t~s~ 
tJmm Sl~rt has also 
tram rm~, c~many 
and me s t~ to be~o- 
~ spcct m m+ltmerm 
++ ~ayed in l+e ~+n as 
I~ en ~ass  er ic~ 
al and 
~ xeliarls ~oc  am, win rn~y ~mU+m 
d+.ye~ told Im g~,  tn fir++t a tae ~ denp ~+. 
?;~de ~r a~,z  2 r,~'e~ rar~u~ "I've ~t  ahprna~. 
~ "n m P..~ dc~l~,m n my + +mt Wl~+ tlmA- 
owl Jlam m +~ltra~ die t-~+ m may m+ it=.y 
i i~ ~ tJ~ e,mre lJay~ 0ekl ~) 
nm ~r++~nm On tke ~lg+ Plc~ 
{rrmy,+~ Imlp, t~  .~ 
++ m+ m.m tem+m v~lth ~xod 
im)~- lv.~ tmtm.s t.....~ i,~ ~m::st A
a I~.~P++ mJ~m~?~ anc~Pr dc~ nm k.~d to an 
?~.  T I~ ~ dm ~ ttlat is u~d tn b~'r~uol~ 
~ Tt'~ c ~  ~ Un~+ ~ z W~PA2r~ 
In~ ~d m mtly If~y nm I~g ard ~,.~,gre~ m-:res 
~ ~ e=m ~ tie ~a~e P.dd 
Figure 12 
An example constructed page layout respecting natural divisions in the rhetorical structure. 
Table 3 
Distribution of information for a simple, coherent layout. 
page layout unit text segments discriminations nuclearity 
lead-in [1]-[5] larger type face x/ 
rules [6a]-[11] neutral 
variants [12]-[31] neutral 
equipment info [32]-[36] small, sans seriL on margin bar x 
events [37]-[44] small, sans serif, on margin bar x 
authorship [A+0] small, italic, on margin bar x 
natural layouts produced for the kind of magazine from which the original page was 
taken. Therefore, while conformance to the RST structure may prove itself a necessary 
(or at least, very desirable) condition, it is by no means ufficient for the construc- 
tion of appropriate layouts. The layout decisions taken in the original Unihoc page 
included both significantly more variety in the layout and typeface resources allo- 
cated, and a greater degree of decomposition. Moreover, although most of the design 
decisions appear coherent with respect o the notion of natural division developed 
so far, it is not the case that all of the layout decompositions are covered--in fact, 
rather more decompositions and discriminations are being made. This is shown graph- 
429 
Computational Linguistics Volume 27, Number 3 
Figure 13 
Correspondence b tween layout units and rhetorical structure in the original page. All of the 
blocks shown end up as siblings in the top-level layout structure because they are all visually 
quite distinct and variably moveable: they adopt differing typefaces, have no common left or 
right margins, are more or less evenly distributed over the page, etc. 
ically in Figure 13 where the layout decomposition is explicitly contrasted with the 
RST structure; here we can see that, although the decomposition generally respects 
RST subtrees, it is not the case that we can transparently map this to a corresponding 
recursive layout structure. This rather common situation led us to accept hat render- 
ing the information in an RST-structure is not a simple decomposition, but is itself 
a planned activity. Information is taken from the RST-structure for various purposes 
and, as a consequence, both differing degrees of detail and varying decompositions 
must be supported. 
5. Towards Automatic Page Layout: An Algorithm for Communicatively Motivated 
Layout 
We have shown that an RST-analysis of the desired content for a page can be used to 
argue that a layout structure is more, or less, appropriate, and can indicate possible 
points of decomposition i to layout units. We now go one step further and set out 
a procedure for the mapping of RST-style presentation plans into layout structures. 
Mapping is generally achieved by placing parts of the RST-structure in correspondence 
with particular nodes in a layout structure. This proceeds recursively down through 
the RST tree. As we have now seen, however, the correspondence is complicated by 
the fact the layout structure and the RST tree need not remain congruent. 
430 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
We divide the mapping procedure into a core component, which supports the full 
range of layout options that appear possible given our corpus tudy, and a set of further 
heuristics that guide the translation process in particular cases. Most of the heuristics 
are concerned with the question of whether decomposition f the RST structure should 
stop at some point or continue to produce amore specific layout structure. In contrast, 
the core component is straightforward--mostly because the layouts observed exhibit 
such flexibility that few hard constraints seem to apply. 
5.1 Core Translation Procedure: Recursive Descent 
At any point in an RST structure, we can consider the correspondence b tween the 
RST subtree descending from that point and an appropriate layout structure. The 
translation procedure assumes trong locality in that, when decomposing a subtree, 
it does not look outside of that tree to make its decisions. As the layout structure is 
constructed, layout units can be either open, in which case they are still accepting 
additional material from the RST structure as recursive descent continues, or closed, 
in which case the extent of their content has been fixed. Translation begins by positing 
a single layout unit that will hold all of the content of the RST-subtree, and a single, 
at that point empty, open descendant layout unit. If the mapping process decides that 
there is no need for any further layout decomposition--as in a monomodal, traditional 
NLG environment with neither graphics nor headings--then the open layout unit 
is closed off containing the entire RST tree being considered. This content (and its 
rhetorical organization) would then be passed off to the natural anguage generator 
in the usual way. 
In most documents, however, layout decomposition occurs, and so the layout 
structure has to be grown further. This is achieved by partitioning the set of RST- 
structure segments available at the current level of RST structure (segments are indi- 
cated in RST diagrams by the horizontal lines: cf., Figures 6 and 9) into those that are 
to be accepted into the current layout unit and those that are not. When any segment 
is not accepted, the RST relational link is cut at that point, the accepted segments are 
added to the current layout unit (which remains open), and the cut segment is added 
to a new, closed layout unit inserted parallel to the original ayout unit. The accepted 
partition must include at least the nucleus at that level of RST structure; this means 
that it is not possible to include satellites in the current layout unit and then exclude 
the nucleus--this would correspond to the unnatural division shown in Figure 11 
above. Crucially, it is quite possible for all of the segments to be accepted and for 
recursive descent o continue without having closed the current layout unit. Both closed 
and open layout units are then further developed according to the recursive structure 
of their respective RST segments. 
When a decision is made to cut an RST link, and the segments to be partitioned 
belong to a multinuclear relation or joint schema, then all the related segments are 
extracted and associated with sibling layout units. The layout units thus introduced 
are also annotated with type-equivalence links, while reference annotations are added 
between pictures and text within single RST-structure segments. The weight annota- 
tions are allocated in direct proportion to the nucleus and satellite distinctions: the 
nucleus receives the highest weight, with the remaining distributed over the satellites 
(see Section 3). We have not yet been able to explore appropriate weightings in any 
sophisticated manner, and so their effect on alternative layouts remains a subject for 
further investigation. 
In summary, the process of recursive descent of the RST tree can be seen broadly 
as one of deciding where to break RST links. Breaking a link (either a span-to-nucleus 
link or a nucleus-to-satellite link) causes the material thus separated from the tree 
431 
Computational Linguistics Volume 27, Number 3 
A If-  
B C 
recursive descent 
/~ .--- t.o(1) initial 
..... ~"'"I" (2) state 
layout structure state ~ ? \[--"~?(open~ 
after cutting at C \ [ ~  
.r~.~ . ~  sed) 
Copen  I U I 
Figure 14 
Construction of correspondence b tween rhetorical structure and layout structure assuming a 
decision is made to cut the RST structure between segment B and C. Uncut material is added 
into the currently open layout unit and so can contribute to the current op-level layout; cut 
material is added into closed units and so cannot hus contribute. 
to be allocated its own layout unit, standing in a sibling relationship to the current 
layout unit, i.e., that unit corresponding tothe RST material from which the span was 
broken. Material that is not separated in this way remains part of the information 
content o be expressed by the current layout unit. This means that RST subtrees 
related hierarchically in the RST tree may be assigned to sibling layout units. The 
process is shown graphically in Figure 14. 
This can therefore lead to a significant loss of structure resulting from the fact 
that the dominance relations holding in the RST structure are not maintained in the 
layout structure. The core translation procedure thus results in a steady reduction 
in the complexity of the structure being constructed compared to the RST structure 
from which it derives. In the Unihoc original page, this is the situation with the seg- 
ment \[12-22\] (Unihoc variants): this satellite is broken out of its potential embedding 
within the dominating segment \[1-6\]+\[12-31\] and appears instead as a layout sibling 
of the remaining Intro unit that realizes \[1-6\]+\[23-31\]. This action has two common 
consequences: first, the layout weight of the broken-out unit is reduced and, second, 
the fact that a layout unit has been severed from its functionally motivated parent 
(i.e., the nucleus) appears in many text types sufficient grounds for introducing a
further layout unit that has the task of explicitly signalling what the relation was. 
This additional layout unit appears as a header or title (e.g., the AIIe Formen sind 
m?~glich--(all forms are possible--of the original page). A header is then the layout 
equivalent of a discourse marker. However, since headers cannot ypically function 
as relationally as discourse markers (because they cannot readily point back to their 
point of origin), they tend instead to give sufficient information for the reader to make 
a connection--for example, by summarizing the nucleus of their segments. While we 
currently attribute the reduction in layout weight to the core translation, the provi- 
sion of headers again appears to be a genre-specific concern and so we keep this as a 
heuristic. 
Removing structure can, if unconstrained, lead to some very undesirable layouts: 
for example, we could take the entire RST structure of the Unihoc constructed text 
apart from the last satellite of the Equipment subtree to produce two parallel ayout 
units: the rest of the text and the fact that one can get information about the Equip- 
ment by telephoning the given number. Our translation process partially avoids this 
situation by employing media-allocation (i.e., whether layout units are to be realized 
textually, graphically, pictorially, etc.) to force partitions whenever there is a difference 
432 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
in medium. For example, if one segment of a partition is to be realized as a photo- 
graph and another as a textblock, then it is not possible to accept both of these into the 
open layout unit. This is motivated by the fact that we do not have a means of com- 
bining the content of photographs and text other than by allocating them to distinct 
layout units and positioning them in appropriate proximity; we return to the issue of 
media allocation below. The rule serves to avoid insignificant satellites being giving 
a prominent layout status by increasing the likelihood that prior decomposition will 
have already taken place. 
Moreover, we have observed two further forces that restrict objectionable ayouts 
of this kind: first, whenever a collection of layout units are constructed as siblings, 
their relative weights need to be ascertained--the further down (vertically and in 
terms of nucleus-satellite status) in the RST structure, the lower relative weight an 
associated layout unit receives. 6 Second, we add a heuristic that disprefers isolating 
relatively insignificant satellites that lack substantial substructure of their own. The 
strength of this heuristic appears to vary significantly according to the genre of the 
information being presented: for example, newspapers now appear to be considerably 
more willing to promote lower subtrees to the status of layout siblings than are the 
pages that were the subject of our empirical investigation. We will return to this aspect 
of layout variation in the conclusion. 
Finally, although we cannot pursue this theme further here, the gradual reduc- 
tion in structural complexity proposed has several suggestive similarities with what 
happens when monomodal, linear text is produced from an underlying RST-like struc- 
ture. There too, structural complexity is replaced by explicit linguistic oding operating 
linearly from one clause or utterance to the next. The linguistic encoding must give 
sufficient clues for a reader/hearer to make an attempt at recovering the intended 
structure, but does not itself appear to exhibit that structure. In this respect, one- 
dimensional text and two-dimensional layout may not be as different as might have 
been thought. 
5.2 Layout Units and Layout Forms: Bottoming Out 
When the decision has been made not to continue decomposition of an RST subtree 
into further layout units, the entire content associated with the subtree, as well as its 
rhetorical organization, is placed in correspondence with a terminal layout unit. That 
layout unit is then allocated a layout form. Layout forms can be either graphical (e.g., 
diagram, photograph, etc.), or textual. Examples of textual layout forms are textblocks 
consisting of paragraphs, enumerated lists, itemized lists, and the like. The broad 
choice between graphical and textual ayout forms is made by the media-allocation 
decision described below. 
Significantly, some textual ayout forms have substructure of their own. We con- 
sider them complex forms within a single layout unit (rather than conjoined layout 
units), because they appear to have rather limited scope for independently flexible 
layout within their enclosing layout units--it is unusual to format distinct elements 
in an enumerated list with different ype families, type sizes, or colors, etc. When a 
layout form requires further structure, we talk of layout elements extending the orig- 
6 This may even occur in the Unihoc page. On the righthand edge towards the bottom there is a very 
small piece of text citing the source of the photographs. Since this information can be seen as 
elaborations of the photographs, we have an example of a situation where avery insignificant segment 
(for the content) isbroken out and given its own layout unit. The consequence is, predictably, that it 
receives very little visual weight. 
433 
Computational Linguistics Volume 27, Number 3 
Table 4 
Distribution of information to layout elements within a layout unit, depending on the 
selection of layout form. 
RST configuration rendered in layout unit~element 
span\[32-36\] "N 
joint(\[32\],\[33\],\[34\]) "N 
enablement(\[35\],\[36\]) "N 
layout form: itemized-list 
itemization: by number 
\[32\] "N numbered item 
\[33\] "N numbered item 
\[34\] "N numbered item 
list-trailer 
\[36\] "N trailer 
inal layout structure downwards: for example, the textual layout form itemized list 
introduces layout elements for each of its items. We have considered modeling this in 
two ways: first, by allowing the textual ayout-form textblock to include formatting 
similar to that provided in HTML or  I~TEX; 7 and, second, by simply allowing the RST- 
to-layout ranslation process to recurse further with a restricted range of allowable 
layout forms. 
While the first approach is straightforward to implement and is closer to exist- 
ing approaches to punctuation and formatting in NLG (Sefton 1990; Hovy and Arens 
1991; White 1995; Pascual 1996), the latter appears to offer more scope for investigating 
the trade-offs between layout and linguistic realization mentioned above. It may also 
prove necessary for more aggressively graphical documents hat include traditionally 
graphical elements (e.g., pictures, icons, etc.) within the confines of traditionally tex- 
tual elements (e.g., items in itemized lists). A textual layout form is still most often, 
however, a site of relative textual stability and will generally enforce linguistic and 
layout (e.g., style, punctuation) uniformity on the content hat is expressed: for ex- 
ample, rendering all items of a list as nominal phrases, verb phrases, sentences, etc., 
as considered appropriate. This occurs in several places within the Unihoc page: in 
the case of the Equipment segment, for example, we have the correspondences indi- 
cated in Table 4. The Events segment is similar, with enumeration by date followed 
by a textblock as the enumeration trailer. In both cases, typographical constraints are 
selected for the overall layout unit and these are then enforced for each constituent 
layout element. 
At present, we consider the motivations for distinct textual forms only very 
straightforwardly: if there are diverse RST relations present in the content correspond- 
ing to a layout unit, then we favor generating running text for that content; if there 
is a strong multinuclear RST organization (as, in the present example, the sequence 
seen in \[37-44\] or the joints in \[7-11\]), then we favor an itemized list of some kind. 
Exhaustive presentation combined with strict sequencing leads us to favor an enu- 
meration; less exhaustivity or lack of strict sequencing moves us through bulleted lists 
to simple sequences of offset paragraphs. These heuristics are currently enforced by 
simple calculations concerning depth of RST relation, ratio of relation types to number 
of segments, etc. 
7 This would appear to correspond closely to the level of representation called a DocRep (Document 
Representation) in the reference model for generation architectures that have been proposed within the 
RAGS project (RAGS Project 1999). 
434 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
5.3 Media Allocation 
During the construction of layout structure, the translation process attempts to de- 
termine appropriate media allocations for the layout units introduced. Although, in 
general, this needs to be a motivated selection of presentation mode using criteria 
such as those discussed by Arens and Hovy (1990), Arens, Hovy, and Vossers (1993), 
Feiner and McKeown (1993), and others, for our current purposes we have restricted 
this decision to information that can be gained from a dependency-lattice analysis 
of the information content associated with segments from the RST tree. Thus, when 
considering the partition of segments at some point in the recursive descent through 
the RST tree, the translation process requests a dependency lattice for each segment 
and, depending on the result, assigns a likely medium choice. The currently possible 
allocations are diagram, photo, text, and complex. The main choice, however, is be- 
tween diagram and text; the photo option is self-selecting--i.e., if information is only 
available as a picture then that is what will be slotted into the layout structure, and 
the complex option is selected whenever there are self-selecting segments deeper in 
the RST subtree being considered. 
The heuristic that we employ for allocation assumes that the more simultaneous 
dimensions of regularity are present, the more likely it is that a diagram will be 
the more perspicuous representation. The rationale for this can be readily seen from 
the suggested text version of the diagrams in Figure 4. The text version does not 
read fluently precisely because it struggles to express imultaneously the co-varying 
dimensions of school, profession and time period. The fact that there are so many co- 
varying dimensions i , however, readily available from the dependency lattice: when 
a dataset has extensive and simultaneous regularities then these are present as nodes 
in the lattice. Thus, when there are co-varying dimensions of potential aggregation, a 
medium allocation of diagram is made, when not, text is selected. These allocations 
are then employed in the decision of whether to cut an RST relational link as described 
above. 
The dependency lattices used for media selection are maintained as additional 
information that is drawn on during both natural language and diagram generation. 
Moreover, and depending on the rhetorical relation, there can be co-ordination such 
that a satellite must re-use the dependency lattice already calculated for its nucleus. 
This is shown concretely in our DArtbio discussion below. 
5.4 The Unihoc Pages 
With the translation process described so far, we can come close to producing arealistic 
layout structure for the Unihoc RST structure. Beginning at the top of the RST structure 
in Figure 9, our first set of segments o partition is {\[A+0\], [1--44\]}: both have a complex 
medium allocation and so we cut the RST structure at this point. The satellite \[A+0\] 
is associated with a closed layout unit and the nucleus \[1--44\] with a sibling open 
unit. Whereas both segments have further ecursive structure, their treatment is now 
different: because the satellite unit is closed, its rhetorical substructure now contributes 
to embedded layout units (i.e., the process recurses here); in contrast, the nucleus unit 
is open, which means that its rhetorical structure may still contribute top-level sibling 
layout units. And this is what happens. The next set of segments to be partitioned 
is {\[1\], \[2\], \[3-4\], \[5+D,E\], \[6\], \[7-11\], \[12-31\], \[32-36\], \[37-44\]}; the nucleus is \[3- 
4\] and so the decision concerns which satellites, if any, are to be grouped with the 
nucleus and which are not. Our heuristic concerning regular substructure (ratio of 
relation types to segments) picks out \[5\], \[7-11\], \[32-36\] and \[37-44\] as good candidates 
for their own layout units; moreover, the units \[5\] and \[32-36\] are also complex by 
virtue of the fact that tbey include photographs. This leaves the segments {\[1\], \[2\], 
435 
Computational Linguistics Volume 27, Number 3 
~ \[i'-8\]+\[23-31\] 
j . . . . . .  \[->itemize\] /~..,~ 
\[->text\] \[->photo\] \[->text\] \[->text\] \[->text\] 
Figure 15 
Layout structure for the original Unihoc page. 
\[3-4\], \[6\], \[12-31\]} for inclusion within the current open layout unit, while the others 
are each added as sibling closed units. The process continues in this fashion, eventually 
adding all of the material under \[3-4\] to the open unit, as well as the nucleus of \[12- 
31\]. The satellite of \[12-31\] is cut, however, and is therefore added as a closed layout 
unit. Note that since we are still adding material to the original open layout unit, this 
latter satellite also ends up as a top-level sibling. An indication of the entire layout 
structure of the original page is shown in Figure 15. In addition to the constituency 
relationships we have discussed so far, the layout structure includes reference links 
introduced between pictures and text related within single RST structure segments, as 
well as equivalence links introduced between units associated with members of RST 
joint schemas. 
When rendered as a page, the layout structure does not indicate any type-equiva- 
lence links between the top level units; so, apart from the prominence that should be 
accorded to the main-line, nuclear textblock, there is no clear relationship of similarity 
between any of the remaining decomposed units. We can therefore xpect either the 
same form to be used for all of them (for a "quieter" page layout) or differing forms 
to be used for each (for a "louder" page layout). 8 Probably unsurprisingly, given 
its intended audience and function, the page as published adopts the latter option, 
yielding the diversity that we saw displayed in Table 2. 
The same RST structure also stands as a starting point for the production of lay- 
out structures corresponding to the alternative layouts hown in Figures 10(a) and 12 
above--although some questions are raised concerning the adequacy of our proposed 
"simplest" layout in Figure 10(a). To produce the simplest layout, we simply refuse to 
cut any RST relational links until the occurrence of a photograph or a diagram forces 
us to. This yields one layout unit for the photograph of the author and associated text, 
one layout unit for the rest of the text (with a 2-column textblock layout form), and 
8 Thanks to Judy Delin for suggesting the volume control metaphor. 
436 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
layout units for the remaining photographs and diagrams. However, given our RST 
analysis, it is then impossible to motivate the disappearance of the equipment call 
outs because the photograph is nuclear. This may either indicate that the RST analysis 
is incorrect at this point or, more likely, that the layout is not a faithful representation. 
In fact, just distributing pictures liberally around the page does not appear to yield an 
effective layout, and thus, this "simplest" rendering is in fact too simple: it no longer 
communicates the intended meaning; either the picture of the equipment has to go, 
or the individual equipment descriptions have to be reinstated. This is done in Fig- 
ure 12, where the layout divisions are similar to the original page, with two important 
exceptions: first, the RST segments \[1-6\] are maintained as a single layout unit with a 
substructure consisting of one textblock and the two photographs as referring sibling 
layout units; 9second, the RST segment \[12-31\] is maintained as a single layout unit 
without further decomposition. Finally, it should also be clear why the unacceptable 
layout shown in Figure 10(b) cannot be produced according to the translation pro- 
cedure we have described since; for example, it is not possible to accumulate such 
wildly displaced segments of the RST tree into single layout units. 
5.5 Interim Conclusion 
This section has set out a procedure for producing layout structures from rhetorical 
structures. However, the mapping remains highly nondeterministic. Further sources 
of constraint will be required before it will be possible to let the procedure simply run 
and produce layouts. Part of this indeterminacy lies in the fact that many fine-grained 
decisions in the microtypography of real publications (e.g., what typeface to select, 
whether text in a layout unit is typeset ragged or justified, etc.) are not motivated 
by the communicative-functional intentions as captured by the RST-analysis of single 
texts, but are instead fixed by higher level decisions concerning a magazine's intended 
style and feel (cf., Reichenberger t al. \[1996\] and the conclusion below for further 
discussion). Another part of the indeterminacy arises out of the fact that layout is 
genuinely very flexible. Considerably more investigation will be required before the 
parameters and limits of that flexibility are charted. Nevertheless, armed with this first 
mapping specification, we now turn to a particular application to see how it functions 
with rather simpler tasks than the world of Unihoc pages. 
6. Page Generation within the Prototype Information System 
The application scenario described in this section was a natural outgrowth of the 
Editor's Workbench (see Section 2.1), moving from its original conception as a tool 
for editors, to take on more of a role of an information system for general use. Prior 
interface-design studies investigating beneficial applications ofthe Editor's Workbench 
suggested a usage scenario in which the information system provides "overinforma- 
tive" responses to information retrieval requests. In this scenario, the user is assumed 
to be browsing rather than posing focused queries. The overinformative r sponse 
avoids burdening the user with unwanted ata by presenting the information as a 
coherently organized multimodal page: the user can quickly scan the information on 
offer in the same way as he or she would scan a newspaper or magazine page. For 
this to be effective, the layout must correctly communicate which information is cen- 
tral and which information is more peripheral--i.e., it must signal the communicative 
9 This is in fact he layout structure shown in Figure 5 above; nodes 2.3.1, 2.3.2, 2.3.3, and 2.3.4 in the 
figure correspond to the RST spans \[1-6\], [12-31\]--D and E, respectively. 
437 
Computational Linguistics Volume 27, Number 3 
intentions of the page as a whole. The resulting DArtbi0 system aimed specifically at 
providing pages that present artists' biographical information: the Editor's Workbench 
domain model had already accumulated information of this kind for several thousand 
artists and so offered a solid basis for prototype construction. Finally, for something 
of a local connection, we concentrated on the Bauhaus. 
There are many aspects of the design and implementation of the complete DArtbio 
system that space precludes us giving here. Moreover, the system remains an initial 
testbed for our approach--many considerations crucial for a practical system have 
not been addressed. Our focus centers on just those aspects relevant for our claims 
concerning layout and the mechanisms by which it is realized--and even here the 
presentation will sometimes need to be schematic. The central components that are 
relevant are the automatic visualization engine (AVE: Section 2.1 and Kamps \[1998\]), 
the automatic page-layout component (APALO: Section 3), the natural anguage gen- 
erator (KOMET: Bateman and Teich \[1995\] and Bateman, Teich, and Alexa \[1998\]), and 
the very large domain model (ca. 500,000 objects) of the Editor's Workbench (Rostek, 
M6hr, and Fischer 1994). The slice through the system that we describe lies between 
the goal-driven establishment of a rhetorically structured presentation plan on the 
one hand, and the construction of a fully specified layout structure on the other. To 
achieve this transformation we apply the general mapping procedure described in the 
previous ection augmented by application-specific decision heuristics. As with most 
multimodal information systems, the terminal elements of our layout structure receive 
particular media allocations that determine the means employed for their production; 
but, in contrast o previous systems, we detail the new role played by dependency 
lattices in both media-allocation and media-coordination a d then some of the conse- 
quences of adopting a flexible rhetorical structure to layout-structure mapping. 
6.1 Abstract Page Specification 
We begin by setting up some closely related presentation plans. Our examples revolve 
around possible answers to questions art historians typically ask in discussing the 
spread of art movements: for example, How did the Bauhaus pread to the United States? 
The interaction style supported by the Editor's Workbench--and hence by its further 
incarnation as DArtbio--is described in Kamps et al (1996); users explore the database 
progressively by following proposed links. Asking for information about the Bauhaus 
retrieves, amongst other objects, the set of all artists classified as Bauhaus artists. The 
Workbench also includes preset question types for distinct ypes of object; these ques- 
tion types were established through consultation with editors expert in the domain. 
One such question for the object ype art movement is spread of influence. The domain 
knowledge representation for art history includes a range of conditions that are known 
to contribute to a spread of influence: for example, artists moving to the country be- 
ing influenced. Following the link spread of influence and cross-classifying this against a 
country, such as U.S.A., then restricts the former set of Bauhaus artists down to those 
that are known to the system to have moved to the U.S. This information then needs 
to be presented to the user. 
At this point, DArtbio must construct presentation plans. Presentation plans are 
composed by appealing to knowledge of how particular kinds of texts are structured. 
For example, biographies as a text type, or genre, have certain regularly reoccuring 
features of organization and content. The NLG component of the system, KOMET, is 
strongly genre-based: generation proceeds first and foremost by receiving a request o 
generate a text belonging to a specific genre, e.g., a biography. The linguistic details of 
the texts required are established by prior corpus studies. This use of genre as a pre- 
structuring device for texts resembles schemas as introduced into NLG by McKeown 
438 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
1-10 
L... Summary: varying 
i 
. . . . . .  -7 bio bio bio bio 
pic 4-7 ' " I Elaboration Elaboration 
\[ Elaboration 
Artist: Born/Died Education Career 
Name 
Figure 16 
Page presentation plan for a set of biographies with summary. Downward arrows indicate 
points of further efinement. The biographies are filled in the same way as the biography that 
is shown, following the linguistic genre constraints for biographies. The summary is filled in 
using a dependency lattice for information extraction. 
(1985), but is grounded linguistically more in notions of generic text structure (Hasan 
1996); there is also a clear relationship to domain communication knowledge (Kit- 
tredge, Korelsky, and Rambow 1991). We extended this genre-based view to include 
all of the information offerings of the DArtbio system. Presentation plans therefore be- 
gin their life as partially specified generic structures, defined as incomplete rhetorical 
structures. 
We consider two styles of presentation arising from this scenario: in the first, the 
user is simply presented with information about the list of selected artists; in the 
second, the information focuses more on the movement of those artists to the U.S. 
Both presentations use a common generic presentation style and were motivated by 
user/editor consultations within the earlier phases of the Dictionary of Art project-- 
the main information content of the communicative move is allocated to the nucleus 
of a summary rhetorical structure. The initial presentation plan is then grown further 
by recursive descent. The contents of the satellite are filled in according to the def- 
inition of summary as given below. The contents of the nucleus were provided by 
the information-retrieval request--in our first presentation plan, this is a set of artists 
combined by a joint rhetorical schema. Each of these is then expanded further: since 
the default presentational style adopted for an artist within DArtbio is the biography 
genre, the NLG component constructs a rhetorical fragment conforming to the struc- 
ture of this text type, collecting information from the domain model as required. The 
particular model of biography adopted here also includes the use of a photograph if
the Editor's Workbench domain model includes one for the artist in question. 
This results in a presentation plan of the form shown in Figure 16. While all of 
the biographies are filled in in the same way, employing standard NLG-techniques, 
the summary is more interesting. DArtbio distinguishes between two subtypes of sum- 
mary: a summary giving an overview of shared properties with varying attributes 
(summary-varying), and a summary giving an overview of shared properties only 
(summary-shared). In the current presentation plan, the former is used. Our approach 
to summaries relies heavily on the dependency lattice-mechanism; regularities are as- 
439 
Computational Linguistics Volume 27, Number 3 
sumed to provide useful summaries of the data being presented. The information 
content of the summary is therefore produced by constructing a dependency-lattice 
of the information to be summarized--i.e., the list of propositions contained in the 
nucleus--and picking out regularities (i.e., nodes higher in the lattice). 1? Performing 
this for the information in the biographies picks out and partially orders the informa- 
tion that recurs: i.e., name, date and place of birth and death, and profession (which 
always occur), and then certain contingent aspects of education and career depending 
on the particular artists selected. The highest scoring facts are selected for inclusion 
in the summary (which may either occur immediately by some preset cut-off point or, 
more interestingly, be left for later when space constraints may determine how much 
information to give). This set of information is not organized further rhetorically. 
6.2 Determining Page Layout 
If, for the sake of concreteness, we now assume that the user has restricted his or her 
attention to a selection of just five artists: Gropius, Hilberseimer, Anni Albers, Josef 
Albers, and Breuer--again we emphasize that the names and information presented 
here are for illustrative purposes only--we can apply the layout mechanism of the pre- 
vious section to the presentation plan in order to produce a corresponding page. The 
presentation plan is much simpler than the Unihoc case and so the options are some- 
what more restricted. Beginning at the top of the plan, we may either decompose the 
plan or not. We consider the media allocations for the possible partitions, which are 
initially comprised of the nucleus to the summary as well as the satellite. The nucleus 
can only be allocated a complex medium-status ( ince it is structurally complex and 
includes subtrees with pictorial content), while the satellite can be allocated either 
text or diagram status. Given this choice, DArtbio selects diagram as preferable on 
the grounds discussed above. The members of the partition therefore receive different 
media-allocations and so a layout decomposition is introduced. The summary-satellite 
is a leaf of the presentation plan and so there is no further layout decomposition to 
be considered. The layout element is allocated a diagram-layout form and the content 
is passed on directly to the visualization component for diagram generation. 
Layout decomposition then proceeds with the nucleus, which consists of the joint 
schema. The decision is whether to stop decomposition at this point or whether to 
continue. Each member of the joint schema still has a complex medium-status and 
so our heuristics favor decomposition. The core layout mechanism does not allow us 
to break just one member of a multinuclear configuration off from the presentation 
plan and thus all the sibling biographies must be taken. This introduces a further 
five layout elements into the layout structure, each corresponding to a biography. 
Moreover, these five are linked by equivalence annotations and, because they are 
nuclear in the presentation plan, their combined weight must remain greater than that 
of the diagram. Since subtrees have now been cut from the presentation plan, the layout 
mechanism also has the option of introducing additional layout elements as headers. 
In the DArtbio case, we set up our heuristics, rather arbitrarily, to give headers to 
textblocks only; a more realistic decision-making process here can only be constructed 
after considerably more empirical investigation. Thus, since the individual biography 
layout units are still complex, we do not immediately construct a header element but 
pass this option down so that it may be picked up by the first nuclear textblock that 
10 Other, more sophisticated approaches tosummarization can, of course, be considered; moreover, it may 
not be necessary to consider all of the propositions in the nucleus. RST suggests that only nuclei need 
be considered, while Cristea, Ide, and Romary (1998) refine this further and suggest that some nuclei 
plus a specified set of their satellites (those that are vein heads) is preferable. 
440 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
f I 
. . . . . . . . . . . . . . . . . . . . .  diagram for 
type-equivalent layout units for the biographies summary 
Figure 17 
Partial layout structure following decomposition f the presentation plan according to 
summary and biographies. 
is encountered. The state of the layout structure following these decisions is shown 
graphically in Figure 17. 
The constraints on layout and presentation that are being accumulated in the lay- 
out structure now begin to bite, restricting possibilities for further layout-structure d - 
velopment. First, as specified by the layout mechanism, when the visualization engine 
attempts to design a diagram, it must construct a dependency lattice for the informa- 
tion that is to be expressed. It is now constrained, however, to taking the dependency 
lattice that has already been constructed for the nucleus to which the summary is con- 
nected. This guarantees that the grouping and graphical-attribute allocations deployed 
in the diagram will be consistent with the regularities observable in the information 
presented in the set of biographies. Second, when the layout structure is decomposed 
further, the equivalence r lation will require that the same layout decisions be made for 
all the biographies. This then guarantees that regardless of precise physical placement, 
the typographical message will be that these biographies have the same status. 
Decomposition of the biography layout units is straightforward. The only partition 
is in terms of the photograph and the biographical information: the medium-allocation 
of the photograph is self-selecting, and that of the biographical information is text be- 
cause of the few co-varying dimensions of information revealed by the dependency 
lattice. Therefore, the layout unit is decomposed, and the picture receives a refers to 
link. The remaining biographical information can either be grouped within another 
single layout unit, or decomposed further. Our heuristics do not bother to decompose 
when there is little content o be expressed; and as each of the satellites in the biogra- 
phy contains only a few propositions (rarely more than four with most artists in the 
Editor's Workbench knowledge base), we do not decompose further here, selecting a
single layout unit with a textblock layout form. However, since we have the option of 
inserting a header layout element from above, we discharge this here, giving a layout 
structure as shown to the left of Figure 18. A page-rendering solution for this struc- 
ture is shown in the upper right of the figure: layout elements have been mapped to 
rectangles with particular dimensions and locations on the page. The contents of the 
layout elements are produced according to the layout forms allocated: the picture is 
simply inserted (with an appropriate scaling for the layout unit as a whole); a text is 
generated by the NLG component (conforming to the generic text constraints of bi- 
ographies); and a header is selected (a domain-specific process). When these contents 
are filled in, the results is page fragments uch as that shown in the lower right of the 
figure. Similar solutions are provided for all of the biographies because of the specified 
type-equivalence. 
441 
Computational Linguistics Volume 27, Number 3 
b io  ,, I 
54w:70  
~mer ic~n,  and he was an 
~: ia l  designer 8nd a teacher, 
~flih~on 1~) Msy 1883, and he 
~'5 July 1989, He t rsined 8t the 
in 190El. In 1934 he wentto 
!~g~7 he emkjrat~d to the USA. 
Figure 18 
Segment of the layout structure for the layout unit corresponding toa single biography, 
together with the resulting segment layout and the filled-in page extract. 
6.3 Page Rendering: Examples 
The layout structure for the current presentation plan is now complete. An exam- 
ple of a complete generated page that renders the layout structure is shown in Fig- 
ure 19. The individual biographies are each as described above; we can see that the 
generic onstraint that a photograph of the artist be presented has not been satisfied 
in all cases, but this does not affect the general ayout forms applied to the set as 
a whole. More significantly, the regularities expressed in the diagram are precisely 
the regularities that are expressed in the text parts of the biographies. The diagram 
picks out artists as the basic graphical elements and allocates to these elements at- 
tributes of color (for profession) and extent (for lifespan). In addition, time and place 
of birth and death are added as icon graphical attributes, again color coded. Confor- 
mity and consistency in design has therefore been achieved for the page as a whole 
even when there are minor deviations in available information in some of the page 
elements. 
The layout process is very flexible in terms of the solutions that it pursues. The 
apparent resemblance of the page to a grid-based layout is in fact simply a by-product 
of the constraint-resolution process and its attempt o fit 7 boxes (the 5 biography 
layout units, the diagram, and the diagram's key) into a limited space. For compari- 
son, some other solutions offered by the layout process are shown in the alternative 
thumbnail ayouts of Figure 20. These give a graphical sense of the notion of layout 
unit: we can see that layout units are maintained as persistent visual groupings re- 
gardless of their precise placement. Since all of the top-level layout units are siblings 
in the layout structure, the layout process must also work to avoid suggesting any 
grouping among them. This is achieved by spreading the units evenly over the page 
as a whole. 
The co-ordination of text, diagram, and layout demonstrated in the Figure 19 
can be further illustrated very briefly by considering our second presentation plan: 
442 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
mc 
~ ~ ~ 
e; - I  
~ c z  ~bc 
: . c . -  c ,  
~ = m  c~m ~ ,~ i  ?  
I 
~ ~ 
Figure 19 
Example screenshot of a generated page from the art history system. 
here, the main nucleus of the generic rhetorical structure is not a set of artists but 
instead a set of propositions, each describing the movement o the U.S. and subsequent 
professional activity of an artist; such facts are readily retrieved from the Editor's 
Workbench knowledge base and result in relations of the form (cf., Kamps et al [1996]): 
migrate(A.Albers,fromTo(Germany,USA),1933) 
facultyAt(A.Albers,Blagk Mountain College,betweenAnd([1933,1949])) 
443 
Computational Linguistics Volume 27, Number 3 
I 
Figure 20 
"Thumbnail" views showing screenshots ofa range of different solutions to the 
layout-constraint resolution process. 
Page generation with this information can proceed in exactly the same way as for 
the previous example. There is, however, less information under the main nucleus, as 
there are no longer full biographies to generate but rather text elements of the form: 
Albers settled in the USA in 1933. In 1933-1949 she taught at Black 
Mountain College in North Carolina. 
These may be allocated either to distinct layout units as in the previous example 
which would distribute them about the page as shown--or to a single layout unit 
as a textblock, in which case the aggregations illustrated in Section 2.2 apply. When, 
however, the summary is produced, the visualization component receives a very dif- 
ferent dependency lattice than that used for the diagram in the previous example, one 
that is almost identical to that used as an example in Section 2.1 above. The diagram 
produced in this case is therefore also quite different and focuses instead on the reg- 
ularities of teaching (i.e., profession, workperiod, and school), as shown in Figure 4. 
The text and diagram are therefore again appropriately coordinated. 
6.4 Summary 
The DArtbio prototype can produce similar pages to the one shown in Figure 19 for 
any set of artists selected by the user in the course of interaction with the system. The 
presentation environment is implemented in Smalltalk, the visualization and layout 
engines in C, and the text generation component in Common Lisp; page generation is
in real-time. The overanswering present in any page is balanced by the use of a page 
to set out the information in a way that does not commit he user to reading it all. 
The layout process is flexible within the limits that are compatible with the goal of 
presenting a fixed amount of information on a page, but would require substantially 
more work to be sufficiently robust for a real-world system. The question of evalua- 
tion has not, therefore, been relevant: sufficiently fine-grained heuristics are in place 
to prevent layout disasters, but considerably more empirical work is now required 
in order to generalize these heuristics across differing domains and iffering target 
document types. 
7. Conclusions and Outlook 
In this paper we have argued that many of the decisions that need to be made for 
an effective diagram are also found in the construction of an effective text. Making 
both sets of decisions dependent on a single, shared representation f regularities in 
a dataset provides a straightforward way of achieving consistency in the perspec- 
444 
Bateman, Karnps, Kleinz and Reichenberger Constructive Page Generation 
tives presented in the differing media: diagrams and texts then mutually reinforce 
one another by applying common information groupings. We have also argued that 
a message is provided by the physical layout of information on a page: relations 
of similarity, difference, and connection are commonly expressed by layout. In de- 
signing a page, therefore, layout relations must be made consistent with the overall 
communicative intent of the page. We have shown how consistency between layout 
and communicative intent can be achieved by deriving the former (layout structure) 
from a representation f the latter (rhetorically organized presentation plan). We have 
discussed both how such a derivation can be motivated and how it can be used for 
automatic page generation. 
Our study of the relationship between the communicative structure of a page of in- 
formation and the coherent layout of that information demonstrates that layout needs 
to be treated as an integral and complex part of the overall generation process; it can in 
no way be treated as a final piece of postprocessing. Many of the decisions required for 
segmenting a text effectively (e.g., into thematic paragraphs, into rhetorically related 
segments, etc.) also have correlates in the decisions that produce a coherent layout 
structure. This entails several areas of trade-off between layout and text: segmentation 
and grouping information may be expressed in language, in layout, or in some mixture 
of the two. By treating language xpressions and layout as arising ultimately from a 
common source, we expect hat potentially costly constraint-resolution at a local level 
(i.e., between arbitrary segments) can be avoided, or reduced, by enforcing consistent 
layout-language d cisions for the layout structure of a page as a whole. 
The last five years have seen rapid growth in the awareness of the importance 
of consistent and functional style selections: notions of style sheets from professional 
publishing have made their way into the mainstream of web-based ocument design-- 
including consistent presentation formatting using Cascaded Style Sheets and flexible 
document rendering using, for example, the Document Style Semantics and Specifi- 
cation Language (DSSSL, ISO/IEC 10179) and the Extensible Stylesheet Language's 
Formatting Objects (XSL:FO; W3C). Professional bodies concerned with the closely 
related theme of Information Design--the application of processes of design (that is, plan- 
ning) to the communication ofinformation (its content and language as well as its form) (Waller 
1996)--have also grown considerably both in number and membership. Moreover, 
the importance of some notion of rhetoric for professional design and layout is in- 
creasingly accepted (cf., Schriver \[1996\]). Less clear in such work is precisely how to 
characterize and teach useful notions of rhetoric. Our work on the rhetorical basis of 
layout interfaces directly with these developments, and establishes a new bridge be- 
tween options for consistent microtypography at one end, right through to high-level 
communicative goal-based text design at the other. 
Concretely, our work has highlighted the importance of further rounds of de- 
tailed empirical investigation, interlocked with critical evaluation. Our general mech- 
anism for assigning the material of a rhetorical structure to a layout is highly non- 
deterministic--at virtually all points we need to appeal to heuristics to make a final 
decision. Our investigations so far indicate, however, that this is not a weakness in our 
formulation: the nondeterminism arises instead from the fact that the layout process is 
just as flexible as we describe it. The further restriction of the process o as to produce 
"appropriate" layouts can only proceed by establishing more motivated heuristics-- 
and these heuristics will depend crucially on the particular applications, document 
types, target audiences, and informational content concerned. The rather heteroge- 
neous set of heuristics currently adopted withIn the DArtbio system, for example, will 
need to be replaced by a framework of empirically motivated constraints; some of 
this work has now been started (Bateman, Delin, and Allen 2000; Delin, Bateman, and 
445 
Computational Linguistics Volume 27, Number 3 
Allen, forthcoming). The layouts produced will then need detailed evaluation--both 
from design experts and from users--as Schriver et al (1996) should be the case for 
human-designed documents. Only in this way will it be possible to start refining the 
model of layout we have developed so as to even begin to cover the diversity and 
flexibility of layouts observable in professionally produced documents. 
Acknowledgments 
The work in this paper was carried out in 
the context of the J~OMET-PAvE multimedia 
page-generation experiment (GMD-IPSI, 
1994-1996). KOMET (Knowledge-oriented 
production of multimodal documents) and 
PAVE (Publication and advanced 
visualization environments) were two 
departments of the German National 
Research Center for Information 
Technology's (GMD) institute for Integrated 
Publication and Information Systems (IPSI) 
in Darmstadt that cooperated closely on this 
work. The authors of the present paper 
would therefore like to thank all the 
members of those departments who 
contributed, and particularly Lothar Rostek, 
Melina Alexa, Elke Teich, Wiebke MOhr and 
Christoph Htiser. A preliminary discussion 
presenting some background and 
explanatory material for Section 4 appeared 
as Reichenberger t al. (1996); we 
additionally thank Klaas Jan Rondhuis for 
his contribution to that work. The final form 
of this paper has been improved 
significantly by the detailed comments of 
three anonymous reviewers, whom we thank 
for their close reading and criticisms. 
References 
Andr6, Elizabeth, Wolfgang Finkler, Winfried 
Graf, Thomas Rist, Anne Schauder, and 
Wolfgang Wahlster. 1993. WIP: the 
automatic synthesis of multimodal 
presentations. In Mark T. Maybury, editor, 
Intelligent Multimedia Interfaces. AAAI 
Press/The MIT Press, Menlo Park, CA, 
Cambridge, MA, London, pages 75-93. 
Andr6, Elisabeth and Thomas Rist. 1993. The 
design of illustrated ocuments as a 
planning task. In Mark T. Maybury, editor, 
Intelligent Multimedia Interfaces. AAAI 
Press/The MIT Press, Menlo Park, CA, 
Cambridge, MA, London, pages 94-116. 
Andr6, Elisabeth, Thomas Rist, and Jochen 
Mtiller. 1998. Guiding the user through 
dynamically generated hypermedia 
presentations with a life-like character. In 
Proceedings ofthe 1998 International 
Conference on Intelligent User Interfaces 
(IUI'98), pages 21-28. Association for 
Computing Machinery. 
Arens, Yigal and Eduard Hovy. 1990. How 
to describe what? towards a theory of 
modality utilization. In The Twelfth Annual 
Conference ofthe Cognitive Science Society. 
Lawrence Erlbaum Associates, Hillsdale, 
NJ, pages 487-494. 
Arens, Yigal, Eduard Hovy, and Mira 
Vossers. 1993. On the knowledge 
underlying multimedia presentations. In 
Mark T. Maybury, editor, Intelligent 
Multimedia Interfaces. AAAI Press/The 
MIT Press, Menlo Park, CA, Cambridge, 
MA, London, pages 280-306. 
Bateman, John, Judy Delin, and Patrick 
Allen. 2000. Constraints on layout in 
multimodal document generation. In
Proceedings ofthe First International Natural 
Language Generation Conference, Workshop 
on Coherence in Generated Multimedia, 
Mitzpe Ramon, Israel. Association for 
Computational Linguistics. 
Bateman, John, Thomas Kamps, J6rg Kleinz, 
and Klaus Reichenberger. 1998. 
Communicative goal-driven NL 
generation and data-driven graphics 
generation: an architectural synthesis for 
multimedia page generation. In
Proceedings ofthe 1998 International 
Workshop on Natural Language Generation, 
pages 8-17. Niagara-on-the-Lake, Canada. 
Bateman, John and Elke Teich. 1995. 
Selective information presentation i  an 
integrated publication system: an 
application of genre-driven text 
generation. Information Processing and 
Management, (Special Issue on 
Summarizing Text), 31(5):753-768, 
September. 
Bateman, John, Elke Teich, and Melina 
Alexa. 1998. Generic technologies for 
selective information presentation: an 
application of computational linguistic 
methods. In Peter Fankhauser and 
Marlies Ockenfeld, editors, Integrated 
Publication and Information Systems: 10 years 
of research and development. GMD, 
Forschungszentrum Informationstechnik, 
Sankt Augustin, Germany, pages 237-258. 
Bernhardt, Stephen. 1985. Text structure and 
graphic design: the visible design. In 
James D. Benson and William S. Greaves, 
editors, Systemic Perspectives on Discourse, 
446 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
Volume 1. Ablex, Norwood, NJ, pages 
18-38. 
Bouayad-Agha, Nadjet, Donia Scott, and 
Richard Power. 1996. Integrating content 
and style in documents: a case study of 
patient information leaflets. Information 
Design Journal, 9(2):161-176. 
Corio, Marc and Guy Lapalme. 1998. 
Integrated generation of graphics and text: 
a corpus study. In M. T. Maybury and 
J. Pustejovsky, editors, Proceedings ofthe 
COLING-ACL Workshop on Content 
Visualization and intermedia Representations 
(CVIR'98), pages 63-68, Montr4al, August. 
Cristea, Dan, Nancy Ide, and Laurent 
Romary. 1998. Veins theory: a model of 
global discourse cohesion and coherence. 
In Coling-ACL '98, pages 281-285, 
Montr6al. 
Dalianis, Hercules. 1999. Aggregation i  
natural anguage generation. Journal of 
Computational Intelligence, 15(4):384-414, 
November. 
Delin, Judy, John Bateman, and Patrick 
Allen. forthcoming. A model of genre in 
document layout. Information Design 
Journal. 
Fasciano, Massimo and Guy Lapalme. 1996. 
PostGraphe: a system for the generation of 
statistical graphics and text. In Proceedings 
of the Eighth International Workshop on 
Natural Language Generation (INLG '96), 
pages 51-60, Herstmonceux, England, 
June. 
Fasciano, Massimo and Guy Lapalme. 2000. 
Intentions in the coordinated generation of 
graphics and text from tabular data. 
Knowledge and Information Systems, 
2(3):310--339, August. URL: 
http: //www.iro.umontreal.ca / scrip- 
tum/IntentionsKAIS.ps.gz. 
Feiner, Steven K. 1988. A grid-based 
approach to automating display layout. In 
Proceedings ofthe Graphics Interface, pages 
192-197, Morgan Kaufman, Los Angeles, 
CA. 
Feiner, Steven K. and Kathleen R. McKeown. 
1993. Automating the generation of 
coordinated multimedia explanations. In
Mark T. Maybury, editor, Intelligent 
Multimedia Interfaces. AAAI Press/The MIT 
Press, Menlo Park, CA, Cambridge, MA, 
London, pages 117-138. 
Ganter, Bernhard and Rudolf Wille. 1996. 
Formale Begriffsanalyse--Mathematische 
Grundlagen. Springer-Verlag, 
Berlin/Heidelberg. 
Graf, Winfried H. 1995. The constraint-based 
layout framework laylab and its 
applications. In Proceedings ofACM 
Workshop on Effective Abstractions in 
Multimedia, Layout and Interaction, San 
Francisco, California. ACM. URL: 
http://www.cs.tufts.edu/ 
~isabel/mmwsproc.html 
Green, Nancy, Guiseppe Carenini, Stephen 
Kerpedjiev, Stephen F. Roth, and 
Johanna D. Moore. 1998. A 
media-independent content language for 
integrated text and graphics generation. 
In Proceedings ofthe Workshop on Content 
Visualization and Intermedia Representations 
(CVIR'98) of the 17th International 
Conference on Computational Linguistics 
(COLING'98) and the 36th Annual Meeting of 
the Association for Computational Linguistics 
(ACL'98), Montreal. Association for 
Computational Linguistics. 
Green, Nancy, Guiseppe Carenini, and 
Johanna D. Moore. 1998. A principled 
representation f attributive descriptions 
for generating integrated text and 
information graphics presentations. In 
Ninth INLG, pages 18-27, 
Niagara-on-the-Lake, Canada. 
Hasan, Ruqaiya. 1996. The nursery tale as a 
genre. In C. Cloran, D. Butt, and 
G. Williams, editors, Ways of saying, ways 
of meaning: selected papers of Ruqaiya Hasan. 
Cassell, London, pages 51-72. 
Hovy, Eduard H. 1993. Automated 
discourse generation using discourse 
relations. Artificial Intelligence, 
63(1-2):341-385. 
Hovy, Eduard H. and Yigal Arens. 1991. 
Automatic generation of formatted text. 
In Proceedings ofthe Eighth Conference ofthe 
American Association for Artificial 
Intelligence, pages 92-96, Anaheim, CA. 
Hiiser, Christoph, Klaus Reichenberger, 
Lothar Rostek, and Norbert Streitz. 1995. 
Knowledge-based iting and 
visualization for hypermedia 
encyclopedias. Communications of the ACM, 
38(4):49-51, April. 
Kamps, Thomas. 1997. A constructive theory 
for diagram design and its algorithmic 
implementation. Ph.D. thesis, Darmstadt 
University of Technology, Darmstadt, 
Germany. 
Kamps, Thomas. 1998. A constructive 
approach to automatic diagram design. In 
Peter Fankhauser and Marlies Ockenfeld, 
editors, Integrated Publication and 
Information Systems: 10 years of research and 
development, GMD, Forschungszentrum 
Informationstechnik, Sankt Augustin, 
Germany, pages 223-236. 
Kamps, Thomas, Christoph H(iser, Wiebke 
M6hr, and Ingrid Schmidt. 1996. 
Knowledge-based information access for 
hypermedia reference works: exploring 
the spread of the bauhaus movement. In
447 
Computational Linguistics Volume 27, Number 3 
Maristella Agosti and Alan F. Smeaton, 
editors, Information retrieval nd hypertext. 
Kluwer Academic Publishers, 
Boston/London/Dordrecht, pages 
225-255. 
Kerpedjiev, Stephan, Guiseppe Carenini, 
Nancy Green, Johanna D. Moore, and 
Steven Roth. 1998. Saying it in graphics: 
from intentions to visualizations. In IEEE 
Symposium on Information Visualization 
(InfoVis'98), pages 97-101, Research 
Triangle Park, NC, October. IEEE. 
Kerpedjiev, Stephan, Guiseppe Carenini, 
Steven Roth, and Johanna D. Moore. 1997. 
Integrating planning and task-based 
design for multimedia presentation. I  
Proceedings oflUI-97. 
Kittredge, Richard, Tanya Korelsky, and 
Owen Rainbow. 1991. On the need for 
domain communication k owledge. 
Computational Intelligence, 7(4):305-314. 
Mackinlay, Jock D. 1986. Automatic design of 
graphical presentations. Ph.D. thesis, 
Computer Science Department, University 
of Stanford, Stanford, CA. 
Mann, William C. and Sandra A. Thompson. 
1986. Relational propositions in discourse. 
Discourse Processes, 9(1):57-90, 
January-March. Also available as 
ISI/RR-83-115. 
McKeown, Kathleen R. 1985. Text Generation: 
Using Discourse Strategies and Focus 
Constraints o Generate Natural Language 
Text. Cambridge University Press, 
Cambridge, England. 
Mittal, Vibhu O., Johanna D. Moore, 
Giuseppe Carenini, and Steven Roth. 1998. 
Describing complex charts in natural 
language: a caption generation system. 
Computational Linguistics, 24(3):431-468, 
September. 
Moore, Johanna D. and C6cile L. Paris. 1993. 
Planning texts for advisory dialogs: 
capturing intentional and rhetorical 
information. Computational Linguistics, 
19(4):651-694, December. 
Pascual, Elsa. 1996. Integrating text 
formatting and text generation. In
G. Adorni and M. Zock, editors, Trends in 
Natural Language Generation: an artificial 
intelligence perspective, number 1036 in 
Lecture Notes in Artificial Intelligence. 
Springer-Verlag, Berlin, New York, pages 
205-221. (Selected Papers from the fourth 
European Workshop on Natural Language 
Generation, Pisa, Italy, 28-30 April 1993). 
RAGS Project. 1999. Towards a reference 
architecture for natural anguage 
generation systems. Technical Report 
ITRI-99-14 and HCRC/TR-102, 
Information Technology Research Institute 
(U. Brighton) and Division of 
Informatics/Human Communication Research 
Centre (U. Edinburgh), Brighton and 
Edinburgh, March. Contributors: Lynne 
Cahill, Christy Doran, Roger Evans, Chris 
Mellish, Daniel Paiva, Mike Reape, Donia 
Scott and Neil Tipper. 
Reichenberger, Klaus, Thomas Kamps, and 
Gene Golovchinsky. 1995. Towards a 
generative theory of diagram design. In 
Proceedings of1995 IEEE Symposium on 
Information Visualization, pages 217-223, 
Los Alamitos, USA. IEEE Computer 
Society Press. 
Reichenberger, Klaus, Klaas Jan Rondhuis, 
JOrg Kleinz, and John A. Bateman. 1996. 
Effective presentation f information 
through page layout: a 
linguistically-based approach. In 
Proceedings ofACM Workshop on Effective 
Abstractions inMultimedia, Layout and 
Interaction, Association for Computing 
Machinery. November 1995, San 
Francisco, CA. URL: http://www.cs.tufts. 
edu/ \  ~isabel/mmwsproc.html. 
Rostek, Lothar, Wiebke M6hr, and 
Dietrich H. Fischer. 1994. Weaving a web: 
The structure and creation of an object 
network representing an electronic 
reference network. In C. Hiiser and W. 
M6hr and V. Quint, editor, Proceedings of
Electronic Publishing (EP) "94. Wiley, 
Chichester, pages 495-506. (Special issue 
of the International Journal of Electronic 
publishing-origination, dissemination a d 
design, Volume 6(4).) 
Schriver, Karen A. 1996. Dynamics in 
document design: creating texts for readers. 
John Wiley and Sons, New York. 
Sefton, Petie M. 1990. Making plans for 
Nigel (or defining interfaces between 
computational representations of 
linguistic structure and output systems: 
Adding intonation, punctuation and 
typography systems to the PENMAN 
system). B.A. Honours Thesis. Technical 
report, Linguistic Department, University 
of Sydney, Sydney, Australia, November. 
Southall, Richard. 1992. Presentation rules 
and rules of composition i the formatting 
of complex text. In C. Vanoirbeek and 
G. Coray, editors, Electronic Publishing '92, 
pages 275-290. Cambridge University 
Press, Cambridge, England. 
Waller, Robert. 1988. The typographical 
contribution tolanguage: towards amodel of 
typographic genres and their underlying 
structures. Ph.D. thesis, Department of
Typography and Graphic 
Communicatoin, University of Reading, 
Reading, U.K. 
Waller, Robert. 1996. The origins of the 
Information Design Association. In The 
448 
Bateman, Kamps, Kleinz and Reichenberger Constructive Page Generation 
1996 Annual Report of the IDA. Information 
Design Association. 
White, Michael. 1995. Presenting 
punctuation. In Proceedings ofthe Fifth 
European Workshop on Natural Language 
Generation, pages 107-125, Faculty of 
Social and Behavioural Sciences, 
University of Leiden, Leiden, the 
Netherlands, 20-22 May 1995. 
Wille, Rudolf. 1982. Restructuring lattice 
theory: an approach based on hierarchies 
of concept. In I. Rival, editor, Ordered Sets. 
Reidel, Dordecht/Boston, pages 445--470. 
449 
Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 629?637,
Suntec, Singapore, 2-7 August 2009. c?2009 ACL and AFNLP
The Chinese Aspect Generation Based on Aspect Selection Functions 
 
 
 
Guowen Yang   
The Institute of linguistics  
Chinese Academy of Social Sciences                             
5 Jianguomennei Dajie, 100732 Beijing 
P.R.China  
John A. Bateman 
FB10, Sprach und Literaturwissenschaften 
Bremen University  
28334 Germany  
bateman@uni-bremen.de 
kybeijing@yahoo.com 
 
 
Abstract 
 
 
This paper describes our system for generating 
Chinese aspect expressions. In the system, the 
semantics of different aspects is characterized 
by specific temporal and conceptual features. 
The semantic applicability conditions of each 
individual aspect are theoretically represented 
by an aspect selection function (ASF). The 
generation is realized by evaluating 
implemented inquiries which formally define 
the ASFs, traversing the grammatical network, 
and making aspect selections.   
1   Introduction 
 
Aspect is one of the most controversial topics 
among linguists and philosophers. Unlike the 
function of tense, which relates the time of 
situation to a deictic center, aspects are different 
ways of viewing the states of a situation with 
respect to the situation?s internal temporal 
constituency (Yang, 2007). This paper describes 
our system for generating Chinese aspect 
expressions. The aspect forms covered in the 
present research were derived from a corpus 
analysis. The main task of the aspect research 
from a computational perspective is to 
implement computationally both the semantic 
interpretations and the grammatical realizations 
of aspects as formulated in theoretical work. The 
theoretical principle of this is, to a large extent, 
based on Montague?s intensional logic 
(Montague, 1970; Dowty, 1979; Bestougeff and  
Ligozat, 1992, Portner and Partee, 2002). It is 
held that the goal of semantics is to present the 
truth conditions for each well formed sentence.  
In previous studies there are some fruitful 
experiments on computationally processing 
temporal information in Chinese, e.g. Lee and 
Hsu?s Chinese to English machine translation  
 
 
 
 
system (1990), Li, Wong, and Yuan?s temporal  
information-extraction system (2001), Xue?s 
machine learning system (2008), and Xue, Zhong 
& Chen?s tense annotation system (2008). 
However, a systematic investigation, including 
the implementation of the semantics of aspects, 
has rarely been carried out before and is one of 
the main contributions of the present research. 
Aspects are determined by both situation types, 
which build specific situation structures, and 
particular viewpoints that construct specific 
temporal relations between the viewing points 
and the internal temporal constituencies of 
situations. These two kinds of factors, which 
influence aspect selections, can be characterized 
by aspectual features. This makes it possible for 
us to use a function which takes relevant time 
points and concepts as its parameters and 
?calculates? the truth value of the semantic 
applicability conditions of a specific aspect in 
order to make a corresponding aspect selection in 
language generation. We term this function the 
Aspect Selection Function (ASF). The ASFs are 
used for the theoretical descriptions of the 
aspects and, at the same time, they are the basis 
for our computational implementation of the 
semantics of the aspects.   
Our system has been implemented as a 
grammar for the KPML multilingual generator 
(Bateman, 1997a, 1997b) which is equipped with 
a large systemic grammar and all the technical 
components required in generation, including an 
input component, a traversal component, a 
realization component, and so on. This brings 
direct benefits for us in both theoretical and 
implementational respects since we could then 
focus on the linguistic treatment of  the Chinese 
aspects. 
The paper is organized into five sections. In 
the next three sections the semantic features of 
the aspects, the aspect selection functions, and 
the detailed description of the generation of the 
629
aspects will be given. Finally in Section 5, we 
make a brief conclusion. 
 
2   The semantic features of the aspects 
 
One of the methods adopted in aspect studies is 
to use semantic features to characterize different 
situations (cf. Comrie, 1976; Smith, 1991, 1997; 
Olsen, 1997; and Dai, 1997). This is also taken 
as the basic principle in the present research. For 
the purpose of characterizing the semantics of an 
aspect, the features needed are not only those 
reflecting the properties of situation types, but 
also those reflecting the temporal relations 
between the viewing points and the internal 
temporal constituencies of the situations. When 
we establish a system of aspects, we say that the 
features used are necessary and sufficient if 
different aspects included can be distinguished 
from each other by means of these features. 
Consequently, the more aspect expressions are 
involved, the more aspectual features are needed.   
Two kinds of aspectual features are proposed 
in the present research. One kind of aspectual 
feature can be directly represented in terms of 
relations holding over time points. These are 
termed features of temporal relations (FTR). For 
example, the feature durative, which is used for 
situations extended in time, can be represented 
with the temporal relation t1<t2 where t1 and t2 
denote two time points bounding the situation. 
Similarly, the feature punctual (momentary), 
which is used for situations theoretically taking a 
moment, can be formally represented by the 
temporal relation t1=t2.  
There is then a further kind of aspectual 
feature which cannot be directly represented by 
temporal relations, although they may also 
concern temporal properties of situations. This 
kind of feature can only be represented by 
parameters which serve to provide a conceptual 
classification of the situations involved; therefore, 
they are termed features of conceptual type 
(FCP), such as dynamic and repeatable.  
In addition, there is a special kind of aspectual 
feature which reflects qualitative properties of 
temporal relations: far-precede and shortly-
precede. These two features indicate qualitative 
distances between time points; the former means 
that one time point is linearly much before 
another time point on the time axis; the latter 
means that one time point is only a little before 
another time point. In specific context, these 
kinds of qualitative properties are reflected 
relatively in comparative or inclusive relations 
between temporal and spatial scopes of situations.  
Aspectual features are the basic elements to be 
used for aspect descriptions. The range of 
aspectual features is not held to be cross-
linguistically valid. In the present research, the 
following aspectual features are used to describe 
Chinese aspects. The states of relational type 
formed by the verbs like ? (sh?, be), ?(y?u, 
have), ??(d?ngy?, equal) etc. are associated 
with relational processes   (Halliday, 1985) and 
therefore not included in the features listed. In 
the following feature definitions, ti refers to the 
initial time of a situation, tt the terminating time 
of a situation, and tr the reference time of an 
aspect. In the present research, we define the 
reference time as the time from which the state 
of a situation with respect to the situation?s 
internal temporal constituency is contextually 
examined. 
 
(1) durative (FTR): describes situations 
which take time. It is represented by the 
temporal relation ti<tt. 
(2) punctual (FTR): describes situations 
which theoretically take only a moment 
of time. It is formally represented by the 
temporal relation ti=tt. 
(3) realized (FTR): describes situations 
which have occurred, have existed, or 
have shown the property of reality by 
some specific time. It is represented by 
the temporal relation tt?tr.  
(4) dynamic-state (FCP): describes a 
durative changing situation. 
(5) stative-state (FCP): describes a durative 
unchanging situation associated with the 
activity meaning of an activity verb.  
(6) change-of-state (FCP): indicates either 
the inception or termination of a 
situation.  
(7) event (FCP): describes a dynamic 
situation viewed as a complete whole 
(Comrie, 1976, p.13) and is aspectually 
associated with the occurrence, taking 
place, or completion of the situation.  
(8) repeatable (FCP): describes situations 
which can occur repeatedly.  
(9) specific (FCP): when a time point is 
specific, it has a particular position on 
the time axis which can be determined 
from context. 
(10) unspecific (FCP): when a time point is   
unspecific, its position on the time axis 
is unknown. 
630
(11) far-precede (FCP): indicates a 
qualitative distance, one end point of 
which is linearly much before another 
end point.   
(12) shortly-precede (FCP): indicates a 
qualitative distance, one end point of 
which is linearly a little before another 
end point.  
(13) excluded (FCP): when one of the end 
points of a time interval has the feature 
excluded, the time interval is open at 
that point. 
(14) included (FCP): when one of the end 
points of a time interval has the feature 
included, the time interval is closed at 
that point.  
 
Concerning the opening and closure of a time 
interval at its end points, two principles are 
proposed by the present research. The opening 
and closure of a time interval at its end points 
can be determined according to the following 
principles, which we term exclusiveness 
principles (ELPs):  
 
ELP (1) For the initial time ti: when the 
initial time ti of the situation is specific, 
then the time interval at the initial time ti 
is considered closed; when the initial 
time ti of the situation is unspecific, then 
the time interval at the initial time ti is 
considered open.  
ELP (2) For the terminating time tt: 
when the situation does not hold at the 
terminating time tt, the time interval is 
considered closed at the terminating 
time; when the situation still holds at the 
terminating time tt, the time interval is 
considered open at the terminating time. 
As far as the temporal structures of 
aspects are concerned, there is an 
extreme case: when the terminating time 
tt precedes the reference time tr, in which 
case the time period of the situation is 
definitely closed at the terminating time 
tt.  
 
The semantic feature telicity indicating that the 
situation referred to has an internal end point (cf. 
Vendler, 1967; Comrie, 1976) is not used in the 
present research for the Chinese aspect 
descriptions. The feature telicity is not an 
effective feature for characterizing Chinese 
aspects from a language generation point of 
view because there is no single aspect of the 
present aspect system that absolutely requires 
that the situations expressed be telic or atelic. 
 
3  The aspect selection functions 
 
Specific features of temporal relations and the 
conceptual features together build semantic 
applicability conditions for each individual 
aspect. The semantic applicability conditions are 
represented by the aspect selection function 
(ASF) of the aspect. The ASF of a specific aspect 
assumed by the present research is, therefore, 
principally composed of two sets of predicates: 
one set of predicates for testing temporal 
relations (Allen, 1984; Yang & Bateman, 2002), 
another for testing the values, i.e. conceptual 
features, of parameters associated with the aspect. 
All the predicates are connected with 
conjunctions at the top level. At the lower levels, 
the logical relations among the predicates can be 
a conjunction and, a disjunction or and a 
negation not. To evaluate the truth condition of 
the ASF for a specific aspect, the values of all 
relevant temporal relations and parameters are 
evaluated. When all the predicates are true, i.e., 
all of the required conditions are met, the value 
of the ASF is true; otherwise, the value of the 
ASF is false. 
In the predicates of the ASFs, there are two 
kinds of parameters: temporal parameters 
associated with the time points involved in the 
temporal structures of the aspects and conceptual 
parameters associated with the specific 
conceptual features of the aspects. The 
conceptual features will be taken as values of the 
corresponding parameters and represented by 
EQUAL(p, c), in which ?p? refers to a parameter 
and ?c? refers to the conceptual feature associated 
with that parameter. Some of the parameters are 
given as follows: 
 
(1) STATE-ACTION-PROPERTYp (SAPp): 
this parameter indicates whether the 
property of the situation is dynamic-
state, stative-state, state, or event. The 
subscript p denotes Process.  
(2) CHANGEABILITYp (CBp): this 
parameter indicates whether the 
situation has the feature change-of-state. 
(3) REPEATABILITYp: this parameter 
indicates whether the situation is 
repeatable.      
(4) RETRIEVALt (RTt): this parameter 
indicates whether the time point t is 
specific or unspecific.  
631
(5) POSITIONt1-t2: this parameter indicates 
whether the time point t1, which 
precedes another time point t2, is much 
before (far-precede) or a little before 
(shortly-precede) time point t2.  
(6) EXCLUSIVENESSt (EXLt): this 
parameter indicates whether the time 
point t, which is one of the end points of 
a time interval, has the feature excluded 
or included. 
 
We now take the unmarked-realized (URE) 
aspect V+? (V+le) as an example to illustrate 
the structure of the ASF. The URE aspect V+? 
(V+le) is one of the perfective aspects, serving to 
indicate  that the occurrence, development, or 
change of the situation is realized (not 
necessarily complete) by some specific time. The 
temporal structure of the aspect is shown in 
Figure 1. 
 
 
                ti                               tt=tr   
Figure 1 The temporal structure of the URE 
aspect V+?(V+le): 
{ti, tt}, (ti<tt or ti=tt), tt=tr, RTtr=specific 
  
The temporal structure in Figure 1 is explained 
as follows: The situations expressed in the URE 
aspect can be either punctual, i.e. ti=tt, or 
durative, i.e. ti<tt. The time interval of the 
situation defined by ?{ti, tt}? is either closed or 
open at its ends.  The feature realized is 
represented by specifying that the terminating 
time equals the reference time, i.e. tt=tr, rather 
than that the terminating time either equals or 
precedes the reference time, i.e. tt?tr ? the latter 
is the general condition for all perfective aspects. 
In Figure 1, the case of a punctual situation, i.e. 
ti=tt, is theoretically taken as a very short time 
period and not explicitly represented. RTtr 
indicates that the reference time tr is a specific 
time point. 
In addition to the temporal relations explained 
above, the URE aspect V+ ?  (V+le) has 
prominently three characteristics associated with 
the situation properties. When the URE aspect 
V+?(V+le) expresses a durative situation, the 
situation can be either a state or an event. When 
the process is of relational type, a change of state 
should be emphasized. When a change of state is 
involved in the situation, the URE aspect V+?
(V+le) focuses on the realization of the event, 
rather than the resultative state, unless current 
relevance is indicated in context. These three 
characteristics can be respectively represented by 
corresponding conceptual features associated 
with the parameters SAPp, CBp, and PROCESS 
involved in the predicates of the ASF of the URE 
aspect as shown in Figure 2. The ASFs are used 
for the purpose of theoretical descriptions, but 
also, as we shall see in the next section, give the 
basis for the implementation of the semantics of 
the aspects. 
 
Fure(ti, tt, tr, RTtr, CBp, SAPp, PROCESS,  
        EXLti, EXLtt) ?  
 (AND(OR(SAME(ti, tt)) 
                   (PRECEDE(ti, tt))) 
            (SAME(tt, tr)) 
            (EQUAL(RTtr, specific)) 
            (OR(EQUAL(EXLti, included)) 
                   (EQUAL(EXLti, excluded))) 
            (OR(EQUAL(EXLtt, included)) 
                   (EQUAL(EXLtt, excluded)))       
            (AND(PRECEDE(ti, tt)) 
                      (OR(EQUAL(SAPp, state)) 
                             (EQUAL(SAPp, event)))) 
            (OR(NOT(EQUAL(PROCESS,  
                                            relational-process))) 
                   (AND(EQUAL(PROCESS,  
                                             relational-process))   
                             (EQUAL(CBp, change-of-  
                                             state)))) 
            (OR(EQUAL(CBp, not-change-of-state)) 
                   (AND(EQUAL(CBp, change-of- 
                                             state)) 
                             (EQUAL(SAPp, event))))) 
 
Figure 2 The ASF of the URE aspect  
V+?(V+le)  
 
4 The generation of the aspect expressions 
 
4.1  Inquiries, choosers, and the input  specifi- 
cations 
 
The present research uses the multilingual 
generator KPML as its implementation platform 
and takes Systemic Functional Grammar (SFG) 
as its theoretical basis. Fourteen primary simple 
aspects,  and twenty-six complex aspects are 
organized into a hierarchical system network. In 
a system network, grammatical units are 
constructed by corresponding traversals of that 
network. Each path through the network from the 
root to an end node corresponds to a specific 
language expression.  If we need to produce a 
specific expression, semantically appropriate 
choices need to be made so as to follow a path 
632
leading to the creation of that expression. The 
system is guided by the joint actions of the 
inquiries and choosers of the system (Fawcett, 
1987; Matthiessen and Bateman, 1991; Bateman, 
2000; Yang & Bateman, 2002). ?A chooser is 
straightforwardly represented as a ?decision tree? 
with a particular kind of inquiry, called a 
branching inquiry, forming the decision points? 
(Bateman 1997c, p.20). Inquiries are responsible 
for finding the answers required by choosers by 
accessing semantic information represented in 
input specifications, written in the form of the 
Sentence Plan Language (SPL) (Kasper, 1989; 
Bateman, 1997a), and in the knowledge base of 
the system.  
The semantics of an aspect associated with a 
sentence to be generated is represented in the 
input specification. The time points involved in 
the temporal structure of the aspect to be 
generated, i.e. the initial time, the terminating 
time, and the reference time(s), are presented 
with specific time values in the input 
specification. The speaking time has a default 
value corresponding to the present moment. All 
the parameters characterizing the conceptual 
features of the aspect to be generated are also 
included in the input specification.  
The implemented inquiries, written in LISP, 
play a crucial role in the generation of the aspect 
expressions. The implemented inquiries 
associated with different types of aspects 
formally define the semantic applicability 
conditions represented by the ASFs of the 
aspects. Each implemented inquiry has a set of 
parameters with specific values to represent 
temporal relations and conceptual features of a 
specific aspect. The inquiry is composed of a set 
of predicates which will have the value T when 
the conditions defined are satisfied. The truth 
condition of an inquiry will be met only when all 
the predicates involved have the value T. Hence, 
evaluating an implemented inquiry refers to the 
process of testing the truth conditions of all the 
predicates  involved in  the  inquiry according  to 
the semantic information represented in the 
corresponding input specification.  
In the implemented inquiries, two basic 
predicates PRECEDE(t1, t2) and SAME(t1, t2) are 
used to test temporal relations involved in the 
semantic applicability conditions of different 
aspects. In the generation, the parameters t1 and 
t2, are replaced with the values of the initial time 
ti, the terminating time tt, or the reference time tr, 
which are given in the input specifications. 
Logically, given a specific context, the 
precedence of two points can be determined in 
terms of concepts PAST, PRESENT, and 
FUTURE with reference to a relative deictic 
center. To evaluate the precedence between two 
time points,  nine different time values are 
defined on the time axis as shown in Figure 3. In 
Figure 3, the values at-past-present, at-present, 
and at-future-present correspond to three time 
points. The other six values correspond to 
specific intervals on the time axis. The time 
points within each interval are given a specific 
time value, as shown below, where ?-?? stands 
for the infinite past, and ?+?? stands for the 
infinite future: 
 
(-?, at-present) = at-past; 
(at-present, +?) = at-future; 
(-?, at-past-present) = at-past-past; 
(at-past-present, at-present) = at-past-future; 
(at-present, at-future-present) = at-future-past; 
(at-future-present, +?) = at-future-future. 
 
The nine qualitative time values defined above 
build a calculating system for time comparison in 
the present research. To generate a specific 
aspect, i.e., from semantics to the surface 
expression of the aspect, what we need to do is to 
distribute each time point involved in the 
temporal structure of the aspect with one of the 
qualitative time values and to establish 
appropriate temporal relations between them as 
to be illustrated in the next section.  
 
 
                                                    at-past                                at-future 
 
                      at-past-past            at-past-future             at-future-past            at-future-future 
 
 
                                    at-past-present              at-present             at-future-present 
 
Figure 3 Nine qualitative values of time on the time axis 
 
633
4.2 An example of generating the aspect 
expressions 
 
In this section we illustrate the generation 
process with an example. We focus on the 
generation of the aspect expressions and ignore 
the generation process for the other sentence 
constituents. Because of the limitation of input 
associated with relevant files in the 
implementation, we use numbers 1, 2, 3, and 4 to 
refer to the four tones of Chinese characters in all 
the realization statements. For instance, wang1, 
wang2, wang3, and wang4 refer to w?ng, w?ng, 
w?ng, and w?ng respectively. The neutral tone is 
not marked by numbers.  
In the present case, the semantics represented 
in the input specification is set for the situation 
that ?zhe4 sou1 chuan2 jin1tian1 zhuang1yun4 le 
yi1 liang4 you3 gu4zhang4 de ka3che1? (The 
ship loaded an inoperative truck today). The 
situation happened at a specific time today 
(jin1tian1) and was finished before the speaking 
time, i.e., the present moment. The situation 
refers to an event rather than a state. The process 
of loading the truck took a period of time; and 
the realization of the situation is focused. Our 
aim now is to generate an appropriate aspect 
expression for this particular loading situation by 
applying the semantic information represented in 
the input specification.  
The aspect-related semantic information in the 
input specification is as follows. Because the 
situation was finished before the present moment, 
we can consider that both the initial time ti and 
the terminating time tt precede the present 
moment. Because the situation took a period of 
time, the initial time ti is regarded as preceding 
the terminating time tt. Because the realization of 
the situation is focused, the reference time tr is 
considered as being located at the terminating 
time. Representing these temporal relations with 
our qualitative time values illustrated in Figure 3, 
we have the following: SPEAKINGTIME has 
the value at-present which is a default value. 
REFERENCETIME has the value at-past-future 
and is a specific time point. INITIALTIME, with 
respect to other relevant times, has the value at-
past-past, indicating the occurrence time of the 
situation. The value of TERMINATINGTIME 
equals that of REFERENCETIME, i.e. at-past-
future. This means that the state of the situation 
indicated by the aspect to be generated is viewed 
from the terminating time. Theoretically, the 
reference time of an aspect, i.e., the viewing 
point of the aspect, establishes specific temporal 
relations with the internal temporal constituency 
of the situation reflecting what the speaker 
focuses on when s/he views the state of a 
situation. In our present case, the reference time 
is placed at the terminating time of the situation, 
indicating that the speaker?s focus is on the 
termination or completion of the situation. If 
REFERENCE-TIME has other values, e.g., at-
present, which is after the terminating time, it 
indicates that the focus of the speaker is on either 
the recent past or experiential meaning of the 
situation, rather than on the termination  or 
completion of the situation. Correspondingly, 
they show temporal structures of different 
aspects. 
In the input specification, several parameters 
are also used to represent the conceptual features 
of the aspect. The conceptual features and the 
corresponding parameters define the space of 
possible aspect-related semantic variation: this 
shows precisely which facets of aspectual 
semantics are grammaticised in the language; the 
particular grammatical consequences are then 
distributed over the grammatical choice points 
defined in the grammatical component. When 
using this for generation, any given situation to 
be expressed must be ?re-conceptualized? in 
terms of parameters provided. This should be 
done by the user interested in investigating the 
grammatical realizations of distinct temporal 
relations. The parameter CHANGEABLITY has 
the value change-of-state, indicating the 
completion of  the situation. The value of the 
parameter STATE-ACTION-PROPERTY is 
event, indicating that the situation is not of type 
state and can be viewed as a whole. Both the 
parameter EXCLUSIVENESS-TI and the 
parameter EXCLUSIVENESS-TT have the value 
included, indicating that the time interval over 
which the situation holds is closed at its two end 
points. This means that the situation occurred at 
some specific time and finished. The parameter 
REPEATABILITY has the value irrelevant, 
indicating not being related to any particular 
conceptual feature. 
Referring to the semantics above, we follow 
the system traversal to generate an aspect 
expression by evaluating the relevant inquiries. 
The traversal starts from the system of WITH-
ASPECT-MARKER-TYPE and needs to make a 
choice among its three options: imperfective, 
perfective, and imminent. Corresponding to the 
definition of aspect in the present research, 
perfective, imperfective, and imminent aspects 
are interpreted in the following ways: perfective 
634
is the way of viewing the states of a situation 
with respect to its internal temporal constituency 
from outside the situation structure: the viewing 
point of the aspect is after or equal to the 
terminating time, i.e., tt?tr; imperfective is the 
way of viewing the states of a situation with 
respect to its internal temporal constituency 
inside the situation structure: the viewing point 
of the aspect ranges from the initial time, 
including the initial time, to the terminating time 
of the situation, i.e., ti?tr<tt; imminent is the way 
of viewing the occurrence of a situation from 
outside the situation structure and with the 
viewing point shortly before the initial time of 
the situation, i.e., tr<ti and Ptr-ti=shortly-precede. 
The temporal relations of the perfective,  
imperfective, and imminent aspects are captured 
by specifying appropriate values for the inquiries 
named perfective-q-code, imperfective-q-code, 
and imminent-q-code respectively. When 
operating within the context of a full generation 
system, these values would generally be 
provided via the results of text planning in the 
usual manner.  
The with-aspect-marker-type chooser, 
which takes the form of a decision tree as 
described in section 4.1, is in charge of 
making the selection by asking relevant 
inquiries to see what type of aspect has the 
semantic applicability conditions which 
match the semantic inputs represented in the 
input specification. The fine classification 
and distinct semantic descriptions of 
different aspects are sufficient to constrain 
choice regardless of their particular order of 
application. Therefore, alternative 
implementations of the choosers, such as 
specifications of feature vectors, could be 
envisioned. Possible consequences of such 
changes for the other components of the 
generation architecture would then need to 
be considered, however. Because in the 
present case both the terminating time tt and 
the reference time tr have the value at-past-
future that meets the temporal condition 
required by the perfective aspects, the option 
perfective is chosen and the system of 
PERFECTIVE-PRIMARY-TYPE is entered. 
After entering the system of PERFECTIVE-
PRIMARY-TYPE, a selection among three 
options recent-past (the REP aspect 
V+(NP)+lai2zhe), experiential (the unmarked-
experiential aspect V+guo and the marked-
experiential aspect ceng2jing1+V+(guo)), and 
realized (the URE aspect V+le and the perfect 
aspect yi3jing+V+(le)) has to be made. The 
perfective-primary-type chooser is responsible 
for making this choice. Accordingly, the chooser 
firstly evaluates the inquiries named recent-past-
q-code and experiential-q-code respectively. The 
recent-past (REP) aspect V+(NP)+lai2zhe serves 
to indicate that a durative situation existed not 
long ago. The semantic applicability conditions 
represented by the ASF of the REP aspect 
V+(NP)+lai2zhe include the following: the 
situation expressed by the aspect shows the 
feature durative which can be represented in the 
temporal relation ti<tt; the terminating time of the 
situation precedes the reference time, i.e., tt<tr; 
and the reference time tr is a specific time point. 
A further condition required is represented by the 
parameter Ptt-tr with the value shortly-precede, 
indicating the qualitative distance from tt to tr. 
The parameter EXL has the value excluded and 
included for the initial time ti and the terminating 
time tt respectively.  
After evaluating the inquiry of recent-past-q-
code, the perfective-primary-type chooser gives a 
negative result, indicating that the semantics 
presented by the input specification does not 
match the semantic applicability conditions of 
the REP aspect. One obvious mismatch is 
reflected in the temporal relation between the 
terminating time tt and the reference time tr. The 
condition given by the input specification is tt=tr, 
while the condition required by the REP aspect is 
tt<tr.   
After failing to select the REP aspect, the 
perfective-primary-type chooser continues to 
evaluate the inquiry associated with the 
experiential aspects. The experiential aspects 
include the unmarked-experiential (UEX) aspect 
V+guo and the marked-experiential (MEX) 
aspect ceng2jing1+V+(guo). Although the two 
experiential aspects have some differences in 
usage (cf. Yang, 2007), they have the same 
aspectual function to indicate that a situation 
existed at least once in the past and was over, not 
having current relevance. The semantic 
applicability conditions shared by the two 
experiential aspects are: the terminating time tt 
precedes the reference time tr; the situation 
referred to has the feature repeatable; the 
parameter EXLti has the value either excluded or 
included;  the parameter EXLtt has the value 
included.  
Similarly to the failure of selecting the REP 
aspect elaborated above, the evaluation of the 
635
inquiry of experiential-q-code will also fail 
because the semantic applicability conditions of 
the experiential aspects do not meet the semantic 
information shown in the input specification. 
Except for the mismatch of the temporal 
relations, the conceptual feature repeatable 
required by the experiential aspects is also absent 
in the input specification.  
When both the REP aspect and the 
experiential aspects have been excluded, the 
perfective-primary-type chooser selects aspects 
of realized type, and then the traversal enters the 
system of REALIZED-TYE, then a further 
selection between the URE aspect V+le and the 
PEF aspect yi3jing+V+(le) has to be made. The 
realized-type chooser is responsible for making 
this selection. To make the selection, the 
realized-type chooser firstly evaluates the inquiry 
unmarked-realized-q-code to check whether the 
semantic applicability conditions of the URE 
aspect V+le can be met. The inquiry unmarked-
realized-q-code is defined according to the ASF 
of the URE aspect as shown in Figure 2. The 
realized-type chooser evaluates the inquiry 
unmarked-realized-q-code by comparing the 
input semantics with the semantic applicability 
conditions of the URE aspect. The evaluation of 
the unmarked-realized inquiry succeeds because 
all the predicates of the unmarked-realized-q-
code give the value T (Due to the space limit, we 
will not describe the whole process of evaluation 
in detail here). Hence, according to the algorithm 
of the realized-type chooser, the URE aspect 
V+le should be chosen and the perfect-q-code 
does not need to be evaluated. The generated 
sentence, marked up to show its constituency, is 
then as follows: 
 
((zhe4/?)(sou1/?)(chuan2/?)) ((jin1tian1/??)) 
      this           CL           ship                  today                
(zhuang1yun4/??) (le/?) ((yi1/?) (liang4/?) 
              load              URE        one           CL         
((you3 gu4zhang4/???)(de/?)) 
          have    problem             of        
(ka3che1/??.))    
         truck 
(The ship loaded an inoperative truck today.) 
 
5  Conclusion 
 
With the method elaborated above, a test-bed of 
forty aspect expressions of the Chinese aspect 
system has been correctly generated in the forms 
of both Chinese phonetic alphabet and characters. 
In the present research the application of the 
ASFs provides a formal way to represent 
semantic applicability conditions of the aspects; 
the grammatical network built on the basis of 
systemic functional grammar systematically 
organizes and distinguishes semantic functions 
of different aspects. The computational 
implementation verifies both grammatical 
organization and semantic descriptions of the 
Chinese aspects. The complete system files  and 
the sentences generated are available on the 
website: ?http://www.fb10.uni- 
bremen.de/anglistik/langpro/kpml/
genbank/chinese.htm?. 
 
Acknowledgement 
 
We thank Peter Lang Publisher for allowing us to 
use the relevant contents of the book (Yang, 
2007) in this article. We also thank the 
anonymous reviewers for their valuable 
comments and revision suggestions for the 
manuscript. 
                  
References 
 
Allen, J.F. (1984) Towards a General Theory of 
Action and Time, Artificial Intelligence, 1984, 23, 
p.123-154 
Bateman, J.A. 1997a. Enabling technology for 
multilingual natural language generation: the 
KPML development. Natural Language 
Engineering, 3(1), pp.15-55.  
Bateman, J.A. 1997b. KPML Development 
Environment: multilingual linguistic resource  
development and sentence generation. (Release 
1.1). GMD-Studie Number 304. German National 
Center for Information Technology (GMD), Sankt 
Augustin, Germany. 
Bateman, J.A. 1997c. Sentence generation and 
systemic grammar: an introduction. English draft 
written for: Iwanami Lecture Series: Language 
Sciences, Volume 8. Tokyo: Iwanami Shoten 
Publisher (in Japanese). 
Bateman, J.A. 2000. Multilinguality and 
multifunctionality in linguistic description and 
some possible applications. Sprachtypol. Univ. 
Forsch. (STUF), Berlin 53 (2000) 2, pp.131-154. 
Bestougeff, H. and G. Ligozat. Translator: I.D. 
Alexander-Craig. 1992. Logical Tools for 
Temporal Knowledge Representation. Ellis 
Horwood Limited. England. 
Comrie, Bernard. 1976. Aspect.  Cambridge, England: 
Cambridge University Press. 
636
Dai, Yaojing. 1997. ?????????? (The 
Study of Chinese Aspect). Zhejiang Education 
Press. 
Dowty, David R. 1979. Word Meaning and Montague 
Grammar. Dordrecht: Reidel.  
Fawcett, R.P. 1987. System networks in the lexical-
grammar. In Halliday, M.A.K., and Fawcett, R.P. 
(eds.) New developments in systemic linguistics Vol 
1: Theory and description. London: Pinter.   
Halliday, M.A.K. 1994 (second edition of 1985). An 
Introduction to Functional Grammar (second 
edition). London: Edward Arnold.  
Kasper, Robert T. 1989. A flexible interface for 
linking applications to PENMAN?s sentence 
generator. In Proceedings of the DARPA Workshop 
on Speech and Natural Languages. Available from 
USC/Information Sciences Institute, Marina del 
Rey, CA.  
Lee, Hsi-Jian and Hsu, Ren-Rong. 1990. An ERS 
model for tense and aspect information in Chinese 
sentences. In Proceedings of ROCLING III, R.O.C. 
Computational Linguistics Conference III. Taipei: 
Tsing Hua University. pp.213-234. 
Li, Wenjie, Kam-Fai Wong, and Chunfa Yuan. 2001. 
A model for processing temporal references in 
Chinese. In Proceedings of ACL?2001 Workshop 
on Temporal and Spatial  Information Processing, 
Toulouse, France. pp.33-40. 
Matthiessen, M.I.M. and Bateman, J.A. 1991. Text 
generation and Systemic-Functional Linguistics, 
Experiences from English and Japanese. Pinter 
Publishers, London. 
Montague, R. 1970. English as a formal language. In 
Richmond H. Thomason (ed.) 1974. Formal 
Philosophy, Selected Paper of Richard Montague. 
Yale University Press. New Haven and London. 
pp.188-221. 
Olsen, Mari B. 1997. A Semantic and Pragmatic 
Model of Lexical and Grammatical Aspect. 
Garland Publishing, Inc. 
Portner, P. and B.H. Partee. 2002. Formal Semantics. 
Blackwell Publishers Ltd. 
Smith, C.S. 1997 (second edition of 1991). The 
Parameter of Aspect. Kluwer Academic Publishers.  
Vendler, Zeno. 1967. Linguistics in Philosophy. 
Ithaca: Cornell University Press. 
Xue, Nianwen. 2008. Automatic inference of the 
temporal location of situations in Chinese text. In 
Proceedings of EMNLP-2008. Waikiki, Honolulu, 
Hawaii. 
Xue, Nianwen, Hua Zhong, and Kai-Yun Chen. 2008. 
Annotating ?tense? in a tense-less language. In 
Proceedings of LREC 2008. Marrakesh. Morocco.  
Yang, Guowen and J.A. Bateman. 2002. The Chinese 
aspect system and its semantic interpretation. In 
Shu-Chuan Tseng (ed.) Proceedings of the 19th 
International Conference on Computational 
Linguistics (COLING-2002). August 26-30, Taipei. 
ISBN 1-55860-894-X, Morgan Kaufmann 
Publishers, Vol. 2, pp. 1128-1134. 
Yang, Guowen 2007 The Semantics of Chinese 
Aspects ? Theoretical Descriptions and a 
Computational  Implementation. Peter Lang. 
Frankfurt am Main. 
 
 
 
 
 
 
 
 
637
Linear order as higher-level decision:
Information Structure in strategic and tactical generation
Geert-Jan M. Kruijff,
Ivana Kruijff-Korbayova?
Computational Linguistics
University of the Saarland
Saarbru?cken, Germany
 
gj,korbay  @coli.uni-sb.de 
John Bateman
Applied Linguistics
University of Bremen
Bremen, Germany
 
bateman@uni-bremen.de 
Elke Teich
Applied Linguistics
University of the Saarland
Saarbru?cken, Germany
 
E.Teich@mx.uni-saarland.de 
Abstract
We propose a multilingual approach to
characterizing word order at the clause
level as a means to realize informa-
tion structure. We illustrate the prob-
lem with three languages which differ
in the degree of word order freedom
they exhibit: Czech, a free word or-
der language in which word order vari-
ation is pragmatically determined; En-
glish, a fixed word order language in
which word order is primarily gram-
matically determined; and German, a
language which is between Czech and
English on the scale of word order free-
dom. Our work is theoretically rooted
in previous work on information struc-
turing and word order in the Prague
School framework as well as on the
systemic-functional notion of Theme.
The approach we present has been im-
plemented in KPML.
1 Introduction
The aim of this paper is to describe an architecture
that addresses how information structure can be
integrated into strategic and tactical generation.
We focus primarily here on the tactical aspect of
how word order (henceforth: WO) may function
as a means of realizing information structure. The
approach we take is multilingually applicable. It
is implemented in KPML (Bateman, 1997b; Bate-
man, 1997a) and has been tested for Czech, Bul-
garian and Russian as three Slavonic languages
with different WO properties, as well as for En-
glish. The algorithm itself is not KPML-specific:
it combines the idea of WO constraints posed by
the grammar, with a complementary mechanism
of default ordering based on information struc-
ture. The algorithm could thus be applied in other
systems wich allow multiple sources of ordering
constraints.
Information structure is a means that a speaker
employs to indicate that some parts of a sen-
tence meaning are context-dependent (?given?),
and that others are context-affecting (?new?). In-
formation structure is therefore an inherent aspect
of sentence meaning, and it contributes in an im-
portant way to the overall coherence of a text.
While it is commonly accepted that information
structuring is a major source of constraints for the
organization of a given content in a particular lin-
ear order in many languages, there is very little
work in Natural Language Generation that explic-
itly models this relation.
From a practical perspective, in the most com-
monly employed generation systems such as
KPML, FUF (Elhadad, 1993; Elhadad and Robin,
1997) or REALPRO (Lavoie and Rambow, 1997),
linear ordering comes as a by-product of other
grammatical choices. This is fine for tactical
generation components and it is sufficient for
languages with grammatically determined WO
(?fixed? WO languages), such as English or Chi-
nese. However, most languages have some WO
variability and this variation usually reflects infor-
mation structure. When languages in which linear
order is primarily pragmatically determined are
involved, such as the Slavonic languages we have
dealt with, a number of problems become imme-
diately apparent.
A comprehensive account of WO variation for
natural language generation that is reusable across
languages is thus required. Such an account needs
to represent linearization as an explicit decision-
making process that involves both the representa-
tion of the language-specific linear ordering pos-
sibilites and the representation of the language-
specific (and possibly cross-linguistically valid)
motivations for particular linearizations. Again,
while the former is catered for in most tactical
generation systems, only selected aspects of the
latter have been dealt with and only for selected
languages (e.g., (Hoffman, 1994; Hoffman, 1995;
Hakkani et al, 1996)).
For example, (Hoffman, 1994) proposes a
treatment of WO in Turkish using a categorial
grammar framework (CCG, (Steedman, 2000))
and relating this to Steedman?s (earlier) account
of information structure (Steedman, 1991). How-
ever, the most important issue, that of providing
an integrated account of how information struc-
ture guides the choice of (or, is realized by) linear
ordering, is left unsolved (Kruijff, 2001).
Given that in many languages, information
structure is the major driving force for WO vari-
ation, it is indeed the most straighforward idea to
couple an account of information structure with
the choice of linear ordering. However, for mul-
tilingual application, the particular challenge is to
develop a solution that can be applied, no mat-
ter at which point on the free-to-fixed WO cline a
language is located.
The approach to WO proposed in this paper is a
move in exactly this direction. We start in  2 with
presenting data from Czech, German and English
that motivate the perspective we take on informa-
tion structure, and its role in generating coher-
ent discourse. In  3 we introduce the linguistic
notions employed in the present account. In  4
we discuss how information structure fits into a
general system architecture, and we discuss the
implementation of the strategic generation com-
ponent on the basis of KPML. We continue with
an elaboration of the role of information structure
in tactical generation, presenting an algorithm for
generating contextually appropriate linearization,
given a sentence?s information structure, and il-
lustrate its implementation on Czech and English
examples (  5). We conclude the paper with a
summary (  6).
2 Linguistic motivation
There are a number of factors commonly ac-
knowledged to play an important role in express-
ing a given content in a specific linear form.
The inventory of these factors contains at least
the following: information structure, syntactic
structure, intonation, rhythm and style. Cross-
linguistically, these factors may be involved in
constraining linear ordering to varying degrees.
English, for instance, is an example of a lan-
guage in which WO is rather rigid, i.e., strongly
constrained by syntactic structure. In such lan-
guages, differences in information structure are
often reflected by varying the intonation pat-
tern or by the choice of particular types of
grammatical constructions, such as clefting and
pseudo-clefting, or definiteness/indefiniteness of
the nominal group. Czech, in contrast, which has
a rich case system and no definite or indefinite
article, belongs to the so-called ?free word order?
languages, where the same effects are achieved by
varying WO. Finally, German lies between En-
glish and Czech in the spectrum between fixed
and free WO. We illustrate the general point that
WO selections are related to information structure
by appropriateness judgements of some examples
of instructions in Czech, German and English.1
(1) Otevr?eme
open-1PL
pr???kazem
command-INS
Open
Open
soubor.
file-ACC
Sie
You
o?ffnen
open
eine
a
Datei
file
mit
with
dem
the
Befehl
command
Open.
Open.
Open a file with the Open command.
The ordering in (1) is neutral in that no partic-
ular contextual constraints hold with respect to
the newsworthiness of any of the elements ex-
pressed in this clause. This kind of ordering can
1The English examples use imperative mood, while the
Czech and the German examples use indicative mood as
the most common way of conveying instructions of the dis-
cussed type. Alternatively, both Czech and German can use
also imperatives or infinitives for instructions, but these are
considered less polite than the indicative versions. Last but
not least, instructions can also be formulated in indicative
mood with passive voice in both Czech and German.
be elicited by the question What should we do?.2
We follow Prague School accounts (Firbas, 1992;
Sgall et al, 1986) in calling this neutral ordering
the systemic ordering (cf. also  5). Alternatively,
(1) could be used in a context characterized by
the question What should we open by the Open
command?, when the Open command is not be-
ing contrasted with some other entity.
(2) Otevr?eme
open-1PL
soubor
file-ACC
pr???kazem
command-INS
Open.
Open
Sie
you
o?ffnen
open
die
the
Datei
file
mit
with
dem
the
Befehl
command
Open.
Open.
?Open the file with the Open command.?
(3) Soubor
file-ACC
otevr?eme
open-1PL
pr???kazem
command-INS
Open.
Open
Die
the
Datei
file
o?ffnen
open
Sie
you
mit
with
dem
the
Befehl
command
Open.
Open.
?Open the file with the Open command.?
The word order variants illustrated in (2) and (3)
are appropriate when some file is active in the
context (Chafe, 1976), for instance when the user
is working with a file. In (2), the action of open-
ing is also active; in (3) it can, but does not have
to be active, too. The contexts in which (2) and
(3) can be appropriately used can be character-
ized by the questions What should we do with the
file? or How should we open the file?. Unlike
(2), example (3) can be used if file is contrasted
with another entity. In German, this contrast is
required, whereas in Czech it is optional. In En-
glish, intonation could mark whether contrast is
required.
(4) Pr???kazem
command-INS
Open
Open
otevr?eme
open-1PL
soubor.
file-ACC
Mit
with
dem
the
Befehl
command
Open
Open
o?ffnen
open
Sie
you
eine
a
Datei.
file.
With the Open command, open a file.
(5) Pr???kazem
command-INS
Open
Open
soubor
fileACC
otevr?eme.
open-1PL
Mit
with
dem
the
Befehl
command
Open
Open
o?ffnen
open
Sie
you
die
a
Datei.
file.
With the Open command, open the file.
2We use questions for presentational purposes to indicate
which contexts would be appropriate for uttering sentences
with particular WO variants. Such question-answer pairs are
known as question tests (Sgall et al, 1986).
The contexts in which (4) can be used are char-
acterized by What should we do with the Open
command?. While (4) does not refer to a spe-
cific file, in (5) an activated file is presumed. (5)
is appropriate in contexts characterized by What
should we do to the file with the Open command?.
It is also possible to use (4) in a context charac-
terized by What should we do?, and (5) in a con-
text characterized by What should we do to the
file?, if it is presumed that we are talking about
using various commands (or various means or in-
struments) to do various things. In the latter type
of context, the Open command does not have to
be activated.
(6) Soubor
file-ACC
pr???kazem
command-INS
Open
Open
otevr?ete.
open-I2PL
Die
the
Datei
file
o?ffnen
open
Sie
you
mit
with
dem
the
Befehl
command
Open.
Open
Open the file with the Open command.
Example (6) is like (5) in that it is appropriate
when both a file and the Open command are acti-
vated. The contexts in which (6) can be appropri-
ately used can be characterized by What should
we do to the file with the Open command?. Un-
like (5), (6) can also be used when file is con-
trasted with another entity. In German, there is
no difference in word order between (6) and (3)
(they differ only in intonation). This is a result of
the strong ordering constraint in German to place
the finite verb as second (in independent, declara-
tive clauses). In Czech verb secondness also plays
a role, but it is much weaker.
Analogous judgements concerning contextual
appropriateness apply to WO variants in differ-
ent mood and/or voice (when available in the in-
dividual languages). The orders in which the verb
is first do not presume the activation of either a
file or a command. The orders in which ?file?
precedes the verb appear to presume an active
file, the orders in which ?command? precedes the
verb appear to presume the activation of a com-
mand. When both ?file? and ?command? precede
the verb, the activation of both a file and a com-
mand appears to be presumed.
These judgements show that differences in WO
(in languages with a more flexible WO then En-
glish, e.g., Czech and German) very often corre-
spond to differences in how the speaker presents
the information status of the entities and pro-
cesses that are referred to in a text, in particu-
lar, whether they are assumed to be already fa-
miliar or not, and whether they are assumed to
be activated in the context. Note that in English,
the same distinction is expressed by the use of a
definite vs. an indefinite nominal expression, i.e.
?a  the file?.
To summarize: Since sentences which differ
only in WO (and not in the syntactic realizations
of clause elements) are not freely interchangable
in a given context, we have to be able to gen-
erate contextually appropriate WOs. In order to
achieve this, we need to be able to capture not
only the structural restrictions specific to individ-
ual languages, but also the restrictions reflecting
the information status of the entities (and pro-
cesses) being referred to.
3 Underlying notions
In order to provide constraints for WO decisions
within our generation architecture, we require
mechanisms through which particular patterns of
information structuring can constrain the choice
among the WO variants available. These patterns
are provided by our text planning component. We
have found two complementary approaches to the
relationship between aspects of information struc-
turing and WO to be ripe for application in the
generation of extended texts; these approaches are
briefly introduced below.
In order to clarify the complementary nature of
the approaches that we have adopted, it is neces-
sary first to distinguish between two dimensions
of organization that are often confused or whose
difference is contested: in his Systemic Func-
tional Grammar (SFG), (Halliday, 1970; Hall-
iday, 1985) distinguishes between the thematic
structure of a clause and its information struc-
ture: Whereas the Theme is ?the starting point
for the message, it is the ground from which the
clause is taking off? (Halliday, 1985, 38), infor-
mation structure concerns the distinction between
the Given as ?what is presented as being already
known to the listener? (Halliday, 1985, 59), and
the New as ?what the listener is being invited to
attend to as new, or unexpected, or important?
(ibid).
3.1 Information structure and ordering
In Halliday?s original approach (Halliday, 1967),
the basic assumption for English and also for
other languages is that ordering, apart from being
grammatically constrained, is iconic with respect
to ?newsworthiness?. So on a scale from Given
to New information, the ?newer? elements would
come towards the end of the information unit, the
?newest? element bearing the nuclear stress. This
approach relies on the possibility of giving a com-
plete ordering of all clause elements with respect
to their newsworthiness.
The notion of ordering by newsworthiness in
Halliday?s approach is parallel to the notion of
communicative dynamism (CD) introduced in the
early works of Firbas (for a recent formulation
see (Firbas, 1992)) and used also within the Func-
tional Generative Description (FGD, (Sgall et al,
1986)). Also from the viewpoint of CD, the pro-
totypical ordering of clause elements from left
to right respects newsworthiness: In prototypical
cases, WO corresponds to CD. However, textu-
ally motivated thematization or grammatical con-
straints may force WO to diverge from CD.
The FGD approach differs from Halliday?s in
that, in addition to CD, it works with a de-
fault (canonical) ordering, called systemic order-
ing (SO). SO is the language specific canonical
ordering of clause elements (complements and
adjuncts), as well as of elements of lower syntac-
tic levels, with respect to one another.
For the current purposes we concentrate on the
SO for a subset of the clause elements that are dis-
cerned in FGD. We use the following SOs for the
Slavonic languages and for English and German:3
SO for Czech, Russian, Bulgarian:
Actor  TemporalLocative  Purpose  Space-
Locative  Means  Addressee  Patient 
Source  Destination
SO for English: Actor  Addressee  Pa-
tient  SpaceLocative  TemporalLocative 
Means  Source  Destination  Purpose-
dependent
SO for German: Actor  TemporalLocative
 SpaceLocative  Means  Addressee  Pa-
tient  Source  Destination  Purpose
3The labels we use for the various types of elements are
a mixture of FGD and SFG terminology.
The SO for the Slavonic languages is based on
the one for Czech (Sgall et al, 1986); the only
difference is that we have placed Patient before
Source (?from where?). We follow (Sgall et al,
1986) in considering the SOs for the main types
of complementations in Russian and Bulgarian to
be similar to the Czech one, though there can be
slight differences (cf. the observations reported in
(Adonova et al 1999)). The SO for English com-
bines the suggestions made by (Sgall et al, 1986)
and the ordering defaults of the NIGEL grammar
of English (cf. Section 5.2). The SO for German
is based on (Heidolph et al, 1981, p.704).
The informational status of elements is estab-
lished through deviation of CD from the SO. This
leads us to the distinction FGD makes between
contextually bound (CB) and contextually non-
bound (NB) items in a sentence (Sgall et al,
1986). A CB item is assumed to convey some
content that bears on the preceding discourse con-
text. It may refer to an entity already explic-
itly referred to in the discourse, or an ?implicitly
evoked? entity. At each level of syntactic struc-
ture, CB items are ranked lower than NB items in
the CD ordering. The motivation behind and the
meaning of the CB/NB distinction in FGD cor-
responds to those underlying the Given/New di-
chotomy in SFG.
Contextual boundness can be used to constrain
WO (at the clause level) as follows:
 The CB elements (if there are any) typically
precede the NB elements.
 The mutual ordering of multiple CB items in
a clause corresponds to communicative dy-
namism, and the mutual ordering of mul-
tiple NB items in a clause follows the SO
(with the exceptions required by grammati-
cally constrained ordering as described be-
low). The default for communicative dy-
namism is SO.
 The main verb of a clause is ordered at the
boundary between the CB elements and the
NB elements, unless the grammar specifies
otherwise (verb secondness).
It is the above abstract ordering principles that
underly the algorithm we present in  5.
3.2 Thematic structure
In all languages we looked at so far, there are also
orders we cannot explain solely on the basis of
the CB/NB distinction along with SO and gram-
matical constraints. On the one hand, it has been
claimed that the ordering of CB elements follows
CD rather than SO, and that CD is determined
by contextual factors (Sgall et al, 1986). On the
other hand, cases where an NB element appears at
the beginning of a clause are far from rare. While
we currently do not have more to add to the for-
mer issue, the latter can be readily addressed us-
ing the notion of Theme. For illustration, consider
(8) in Czech, German and English, appearing in a
context where it is preceded only by (7).
(7) First open the Multiline styles dialog box using one
of the following methods.
(8) Z
From Data
menu
menu
Data
choose 	

vybereme
Style.
Style.
Im
In
Menu?
menu
Data
Data
wa?hlen
choose
Sie
you
Style.
Style.
In the Data menu, choose Style.
The preceding context does not refer to the ?Data
menu? or make it active in any way. Working
only with the notion of information structure dis-
cerning CB (Given) and NB (New) elements, one
is thus unable to explain this ordering. On the
other hand, the notion of thematic structure as
a reflection of a global text organization strategy
makes such explanation possible. In Halliday?s
approach, Theme has a particular textual function,
that of signposting the intended development or
?scaffolding? that a writer employs for structuring
an extended text. In software instruction manuals,
for example, we encounter regular thematization
of (i) the location where actions are performed,
(ii) the particular action that the user is instructed
to perform, or (iii) the goal that the user wants to
achieve (cf. (Kruijff-Korbayova? et al, in prep) for
a more detailed discussion).
4 Information structure and strategic
planning
In this section we briefly describe how we in-
tegrate information structure into strategic gen-
eration, i.e. text- and sentence-planning. The
Figure 1: A text plan. In our system, a text plan organizes content into a linear fashion, showing
where (and how) content might be aggregated syntactically (e.g. conjunction) or discursively (e.g.
RST-relations). In the example above, the text plan specifies a text consisting of an overall goal (the
title) and five substeps to resolve that goal (the tasks). The first task is a simple one, the second task
is a complex formed around an RST-purpose relation, after which follows a conjunction of tasks. (The
CONJOINED-INSTRUCTION-TASKS nodes indicate that the left-daughter node (a task) and the task
dominated by the immediate non-terminal node above a CONJOINED-INSTRUCTION-TASKS node,
are to be related by a conjunction.) The content to be realized is identified by the leaves of the text
plan. Whenever a leaf is introduced in the text plan, the discourse model is updated with the content?s
(A-box) concepts. The sentence planner decends through the text plan depth-first. Thereby it gathers
the leaves? content into sentence-specifications, following any indications of aggregation. It makes use
of the discourse model to specify whether content should be realized as contextually bound (or not).
principle idea is that during text-planning, a dis-
course model is built that is then used in sentence-
planning to determine a sentence?s information
structure.
We have developed a system using KPML. In
KPML, generation resources are divided into in-
teracting modules called regions. For the purpose
of text-planning we have constructed a region that
defines an additional level of linguistic resources
for the level of genre. The region facilitates the
composition of text structures in a way that is very
similar to the way the lexico-grammar builds up
grammatical structures. This enables us to have a
close interaction between global level text gener-
ation and lexico-grammatical expression, with the
possibility to accommodate and propagate con-
straints on output realization. While constructing
a text plan, the text planner constructs a (rudimen-
tary) discourse model that keeps track of the dis-
course entities introduced.
Text planning results in a text plan and a dis-
course model that serve as input to the sentence
planner. The text plan is a hierarchical structure,
organizing the content into a more linear fashion
(see Figure 3.2). The sentence planner creates
the input to the tactical generation phase as for-
mulas of the Sentence planning Language (SPL,
(Kasper, 1989)). The SPL formulas express the
bits of content identified by the text plan?s leaves,
and can also group one or more leaves together
(aggregation) depending on decisions taken by
the text planner concerning discourse relations.
Most importantly, during this phase of planning
what content is to be realized by a sentence, the
underlying information structure of that content
is determined: Whenever the sentence planner
encounters a piece of content that the discourse
model notes as previously used, it marks the cor-
responding item in the SPL formula as contextu-
ally bound (note that we are hereby making a sim-
plifying assumption that in the current version of
the sentence planner we equate contextual bound-
ness with previous mention).
The text planner can also choose a particular
textual organization and determine the element
which should become the Theme. If no particu-
lar element is chosen as the Theme, the grammar
chooses some element as the default Theme. This
can be the Subject (as in English), the least com-
municatively dynamic element (as in Czech); the
choice of the default Theme in German is freer
than in English, but more restricted than in Czech
(cf. (Steiner and Ramm, 1995) for a discussion).
The Theme is then placed at the beginning of the
clause, although not necessarily at the very first
position, as this might be occupied, e.g., by a con-
nective. The placement of the Theme is also re-
solved by the grammar.
5 Realizing information structure
through linearization
It is in the setting described in  4 that the issue of
generating contextually appropriate sentences re-
ally arises. In this section we describe the word
ordering algorithm (  5.1) and its application to
Czech and English (  5.2).
5.1 Flexible word order algorithm
As discussed, constraints from various sources
need to be combined in order to determine gram-
matically well-formed and contextually appropri-
ate WO. Contextual boundness is used to con-
strain WO at the clause level as specified above.
We combine the following two phases in which
information structure (CB/NB) is taken into ac-
count during tactical generation:
 information structure can determine partic-
ular realization choices made in the gram-
mar; for example, when inserting and plac-
ing the particle of a phrasal verb, when in-
serting and ordering the Source and Destina-
tion for a motion process;
 information structure can determine the or-
dering of elements whose placement has not
been sufficiently constrained by the gram-
mar.
For a multilingual resource, this allows each
language to establish its own balance between the
two phases. To show our approach in a nutshell,
we present an abstract WO algorithm in Figure 2.
Given:
a set GC of ordering constraints
imposed by the grammar
a list L1 of constituents
that are to be ordered,
a list D giving ordering of CB
constituents (default is SO)
Create two lists LC and LN of de-
fault orders:
Create empty lists LC (for CB items)
and LN (for NB items)
Repeat for each element E in L1
if E is CB,
then add E into LC,
else add E into LN.
Order all elements in LC
according to D
Order all elements in LN
according to SO
if the Verb is yet unordered then
Order the Verb at
the beginning of LN
Order the elements of L1
if GC is not empty then
use the contraints in GC, and
if the contraints in GC are
insufficient,
apply first the default
orders in LC and then those in LN
Figure 2: Abstract ordering algorithm
The ordering constraints posed by the gram-
mar have the highest priority. Note that this in-
cludes the ordering of the textually determined
Theme. Then, elements which are not ordered by
the grammar are subject to the ordering according
to information structure, i.e. systemic ordering in
combination with the CB/NB distinction. The or-
dering of the NB elements (i) is restricted by the
syntactic structure or (ii) follows SO. The order-
ing of the CB elements can be (i) specified on the
basis of the context, (ii) restricted by the syntactic
structure, or (iii) follow SO.
The ordering algorithm as such is not language
specific, and could be usefully applied in the gen-
eration of any language. What differs across lan-
guages is first of all the extent to which the gram-
mar of a particular language constrains ordering,
i.e. which elements are subject to ordering re-
quirements posed by the syntactic structure, and
which elements can be ordered according to infor-
mation structure. Also, it is desirable (and our al-
gorithm allows it) to specify different systemic or-
derings for different languages. And, even within
a single language, our algorithm allows the spec-
ification of different systemic orderings in differ-
ent grammatical contexts (just by adding a real-
ization statement that (partially) defines the SO
during strategic generation).
The algorithm is applicable in platforms other
than KPML. In the first place, any grammar
can modify its decisions to take information
structure into account. In addition, those tacti-
cal generators allows multiple sources of order-
ing constraints, e.g., a combination of grammar-
determined choices and defaults, as long as such
that the default ordering based on information
structure can be applied.
5.2 Algorithm application
The algorithm described above has been imple-
mented and used for generation of Czech and En-
glish instructional texts. The Czech grammar re-
sources used in tactical generation have been built
up along with Bulgarian and Russian grammar
resources as described in (Kruijff et al, 2000),
reusing the NIGEL grammar for English. The
original NIGEL grammar itself already combines
the specification of ordering constraints in the
grammar with the application of defaults. If an or-
dering is underspecified by the grammar, the de-
faults are applied. The defaults are ?static?, i.e.
specified once and for all. The algorithm we have
described replaces these ?static? defaults with a
?dynamic? construction of ordering constraints.
Two separate sets of ?dynamic? defaults are com-
puted on the basis of the SO for the CB and the
NB elements in each sentence/clause.
We use the SOs for Czech and English
specified above (cf.  3.1). For each ele-
ment in the input SPL we specify whether it
is CB (:contextual-boundness yes) or
NB (:contextual-boundness no); in ad-
dition, we can specify the textual Theme in the
SPL (theme <id>). The SPL in Figure 3 illus-
trates this.
Note that the information structure distinction
between CB vs. NB elements on the one hand,
and the informational status of referents as iden-
tifiable vs. non-identifiable on the other hand, are
orthogonal. Whereas CB/NB has to do with the
(R / RST-purpose
:speechact assertion
:DOMAIN (ch/DM::choose
:actor (a1/DM::user
:identifiability-q identifiable
:contextual-boundness yes)
:actee (a2/object :name gui-open
:identifiability-q identifiable
:contextual-boundness no)
:instrumental (mea/DM::mouse
:identifiability-q identifiable
:contextual-boundness no)
:spatial-locating (loc/DM::menu
:identifiability-q identifiable
:contextual-boundness yes
:class-ascription (label/object
:name gui-file))
:RANGE (open/DM::open
:contextual-boundness no
:actee (f/DM::file
:contextual-boundness no)))
:theme open)
Generated output:
Pro
for
otevr?en??
opening-GEN
souboru
file-GEN
uz?ivatel
user-NOM
v
in
menu
menu-LOC
vybere
choose-3SG
mys???
mouse-INS
Open.
Open
To open a file, the user chooses Open in the menu with the
mouse.
Figure 3: Sample input SPL for English and
Czech and generated outputs
speaker?s presenting an element as either bearing
on the context or context-affecting, identifiability
reflects whether the speaker assumes the hearer
to pick out the intended referent. These two di-
mensions are independent, though correlated (cf.
the discussion of activation vs. identifiability in
(Lambrecht, 1994)). What is encountered most
often is the correlation of CB with identifiable
and NB with non-identifiable. The correlation of
NB with identifiable corresponds is found, e.g., in
cases of ?reintroducing? an element talked about
before, or in cases like There is a square and a
circle. Delete the circle. ?in the second sentence,
the same ordering would be used also in German
(Lo?schen Sie den Kreis) and in Czech (Vymaz?te
kruh.).
What is hard to find is the correlation of CB
with non-identifiable, but it is the way we would
analyze a dollar bill in example (9) (Gregory
Ward, p.c.)4
(9) (What do you do if you see money laying on the
ground?)
Dolarovou
Dollar
bankovku
note
bych
would 	
zvedla.
pick-up 	
Eine
a
Dollarnote
dollarnote
wu?rde
would
ich
I
aufheben.
pick-up
A dollar bill I would pick up.
The CB/NB assignments can be varied to ob-
tain different WO variants. The examples below
show some of the CB/NB assignment combina-
tions and the outputs generated using the Czech
and English grammars.
(10) user
Actor-NB
Uz?ivatel
choose
(Finite-Verb)
vybere
Open
Purpose-NB
pro
menu
SpaceLoc.-NB
otevr?en??
mouse
Means-NB
souboru
open file
Patient-NB
v
The user chooses Open in the menu with the mouse
to open a file.
(11) user
Actor-CB
Uz?ivatel
choose
v
Open
SpaceLoc.-CB
menu
menu
(Finite-Verb)
vybere
mouse
Purpose-NB
pro
open file
Means-NB
otevr?en??
Patient-NB
souboru mys???
The user chooses Open in the menu with the mouse
to open a file.
(12) user
Purpose-CB
Pro
choose
otevr?en??
Open
Actor-CB
souboru
menu
SpaceLoc.-CB
uz?ivatel
mouse
Means-CB
v
open file
(Finite-Verb)
menu
Patient-NB
mys??? vybere
To open a file the user chooses Open in the menu
with the mouse.
As mentioned above, we preserve the notion of
textual Theme. An SPL can contain a specifica-
tion of a Theme, and the corresponding element
is then ordered at the front of the sentence, as de-
termined by the grammar. The WO of the rest of
the sentence is determined as described.
4Regarding intonation: in English, there are two into-
nation phrases, the first containing dollar bill with a L+H*
pitch accent on dollar, and the second with a H* pitch accent
on pick up. In Czech and German it seems that a contrastive
pitch accent on dolarovou bankovku is optional, and the rest
can have neutral intonation with nuclear stress on the last
word.
6 Summary and conclusions
We have presented a flexible word ordering al-
gorithm for natural language generation. The
novel contribution consists in offering one way
of implementing information structure as the ma-
jor source of constraints on word order varia-
tion for languages with pragmatically-determined
word order. Apart from that, the special feature of
the word order algorithm proposed is that it can
also be applied to languages with grammatically-
determined word order. We have illustrated the
application of the algorithm for Czech and En-
glish, Czech being a language in which word or-
der is primarily pragmatically determined and En-
glish being a grammatically-determined word or-
der language. We have thus provided evidence
that the algorithm can flexibly be applied to ?free?
word order languages as well as ?fixed? word or-
der languages.
From a linguistic theoretical point of view, the
most important precondition for achieving this
has been to take seriously the linguistic observa-
tion that in many languages information structure
is the driving force for word order variation. For
the modeling of information structure for strate-
gic generation, we have drawn upon two well es-
tablished linguistic frameworks, in both of which
the discourse-linguistic and pragmatic constraints
on grammatical realization are a focal interest, the
Prague School and Systemic Functional Linguis-
tics. From a technical point of view, we have
based the implementation on the KPML system,
integrating the proposed word order algorithm
with existing multilingual grammatical resources
and re-using KPML?s mechanisms for word or-
der realization as well as its systemic-functionally
based notion of Theme. The algorithm is not
KPML-specific, though, and could be applied in
other frameworks as well, especially if they allow
the combination of linearization constraints com-
ing from different sources.
Acknowledgements
The work presented here folows up on our
earlier work carried out partially within AG-
ILE (Automatic Generation of Instructions
in Languages of Eastern Europe), a project
funded by the European Community within
the INCO-COPERNICUS programme (grant
No. PL96114). We would also like to thank
the anonymous reviewers of this workshop for
valuable comments.
References
John A. Bateman. 1997a. Enabling technology for multilin-
gual natural language generation: The kpml development
environment. Natural Language Engineering, 3:15 ? 55.
John A. Bateman. 1997b. KPML Development Environ-
ment: multilingual linguistic resource development and
sentence generation. Darmstadt, Germany, March. (Re-
lease 1.0).
Wallae Chafe. 1976. Givenness, contrastiveness, definite-
ness, subjects, topics and point of view. Subject and
Topic. Charles Li (ed.). New York: Academic Press. p.
25 ? 56.
Michael Elhadad and Jacques Robin. 1997. Surge: A com-
prehensive plug-in syntactic realisation component for
text generation. Technical report, Department of Com-
puter Science, Ben Gurion University, Beer Shava, Israel.
Michael Elhadad. 1993. Fuf: The universal unifier user
manual 5.2. Technical report, Department of Computer
Science, Ben Gurion University, Beer Shava, Israel.
Jan Firbas. 1992. Functional Sentence Perspective in Writ-
ten and Spoken Communication. Studies in English Lan-
guage. Cambridge University Press, Cambridge.
Dilek Zeynep Hakkani, Kemal Oflazer, and Ilyas Cicekli.
1996. Tactical generation in a free constituent order lan-
guage. In Proceedings of the International Workshop on
Natural Language Generation, Herstmonceux, Sussex,
UK.
Michael A. K. Halliday. 1967. Notes on transitivity and
theme in English ? parts 1 and 2. Journal of Linguistics,
3(1 and 2):37?81 and 199?244.
Michael A.K. Halliday. 1970. A Course in Spoken English:
Intonation. Oxford Uniersity Press, Oxford.
Michael A.K. Halliday. 1985. Introduction to Functional
Grammar. Edward Arnold, London, U.K.
K. Heidolph, W. Fla?mig, and W. Motsch. 1981. Grundzu?ge
einer deutschen Grammatik. Akademie-Verlag.
Beryl Hoffman. 1994. Generating context-appropriate
word orders in turkish. In Proceedings of the Internati-
nal Workshop on Natural Language Generation, Kenneb-
unkport, Maine.
Beryl Hoffman. 1995. Integrating ?free? word order syntax
and information structure. In Proceedings of the Euro-
pean Chapter of the Association for computational Lin-
guistics (EACL), Dublin, Ireland.
Robert T. Kasper. 1989. A flexible interface for linking
applications to PENMAN?s sentence generator. In Pro-
ceedings of the DARPA Workshop on Speech and Natural
Language.
Geert-Jan M. Kruijff. 2001. A Categorial-Modal Logi-
cal Architecture of Informativity: Dependency Grammar
Logic & Information Structure. Ph.D. thesis, Faculty
of Mathematics and Physics, Charles University, Prague,
Czech Republic, April.
Geert-Jan M. Kruijff, Elke Teich, John Bateman, Ivana
Kruijff-Korbayova?, Hana Skoumalova?, Serge Sharoff,
Lena Sokolova, Tony Hartley, Kamy Staykova and Jir???
Hana. 2000. Multilingual generation for three slavic lan-
guages. In Proceedings COLING 2000.
Ivana Kruijff-Korbayova?, John Bateman, and Geert-Jan M.
Kruijff. in prep. Generation of contextually appropriate
word order. In Kees van Deemter and Rodger Kibble,
editors, Information Sharing, Lecture Notes. CSLI.
Knud Lambrecht. 1994. Information Structure and Sen-
tence Form. Cambridge Studies in Linguistics. Cam-
bridge University Press.
Benoit Lavoie and Owen Rambow. 1997. A fast and
portable realizer for text generation. In Proceedings of
the Fifth Conference on Applied Natural Language Pro-
cessing (ANLP), Washington DC.
Petr Sgall, Eva Hajic?ova?, and Jarmila Panevova?. 1986.
The Meaning of the Sentence in Its Semantic and Prag-
matic Aspects. D. Reidel Publishing Company, Dor-
drecht, Boston, London.
Mark J. Steedman. 1991. Structure and intonation. Lan-
guage, 68:260 ? 296.
Mark Steedman. 2000. The Syntactic Process. The MIT
Press, Cambridge Massachusetts.
Erich Steiner and Wiebke Ramm. 1995. On Theme as a
grammatical notion for German. Functions of Language,
2(1):57?93.
A brief introduction to the GeM annotation schema for complex
document layout
John Bateman
University of Bremen
Bremen, Germany
bateman@uni-bremen.de
Renate Henschel
University of Stirling
Stirling, Scotland
rhenschel@uni-bremen.de
Judy Delin
University of Stirling and
Enterprise IDU
Newport Pagnell, England
judy.delin@enterpriseidu.com
Abstract
In this paper we sketch the design, motivation
and use of the GeM annotation scheme: an
XML-based annotation framework for prepar-
ing corpora involving documents with complex
layout of text, graphics, diagrams, layout and
other navigational elements. We set out the
basic organizational layers, contrast the techni-
cal approach with some other schemes for com-
plex markup in the XML tradition, and indicate
some of the applications we are pursuing.
1 Introduction
In the GeM project (?Genre and Multimodal-
ity?: http://www.purl.org/net/gem)
1
we are
investigating the relationship between different
document genres and their potential realiza-
tional forms in combinations of text, layout,
graphics, pictures and diagrams. The central fo-
cus of the project is to develop a theory of visual
and textual page layout in electronic and paper
documents that includes adequate attention to
local and expert knowledge in information de-
sign. By analysing resources across visual and
verbal modes, we aim to reveal the purpose of
each in contributing to the message and struc-
ture of the communicative artefact as a whole.
We see it as crucial, however, that research of
this nature be placed on as solid an empirical
basis as has become common in other areas of
linguistic inquiry. The data basis for many of
the claims made in this area hitherto has been
far too narrow: the provision of suitable corpus
materials is therefore fundamental.
For such an enterprise to succeed, it is es-
sential to obtain or construct a structured set
1
The GeM project is funded by the British Economic
and Social Research Council, whose support we grate-
fully acknowledge. We also thank the anonymous review-
ers for this workshop for some very useful comments.
of data on which to base the analysis; that
is, in the words of Gunther Kress, a leading
researcher in the area of multimodal meaning
(cf., e.g., Kress and Van Leeuwen (2001)): we
need ?to turn stuff into data?. In our case,
the ?stuff? consists of raw paged-based infor-
mation presentations, such as illustrated books,
newspapers (print and online versions), instruc-
tional texts, manuals, and so on; the ?data?
is then highly structured re-representations of
these documents that bring out parallel but in-
terrelated dimensions of organization crucial for
the total effect, or meaning, of the ?page?.
Although it is (a) widely accepted that data
for designing and improving natural language
processing can best be made available in the
form of structured, standardized annotated cor-
pora and (b) increasingly accepted that such
data should stretch to include more than the
traditional concerns of linguistics?i.e., speech
and plain text data?and take in more visu-
ally challenging presentations, movements in
this direction have to date been very limited.
The GeM annotation scheme is being devel-
oped in order to support analyses of the broader
range of layout-text-graphical interactions that
is commonplace in professionally designed doc-
uments. We are currently annotating an ex-
ploratory corpus in order to bring out the com-
plex interrelationships that can be observed
within page-based information delivery.
2 Annotation content
The starting basis for our annotation draws
on some detailed non-computational ac-
counts of the organization of multimodal
pages/documents?most specifically, the seminal
account of constraints on document design
by Waller (1987)?and exploratory computa-
tional accounts?such as the layout structures
introduced by Bateman et al (2001). This
organization reflects both artefact-internal
considerations such as the layout, text and
graphics, as well as artefact-external consid-
erations such as design decisions, production
constraints (e.g., cost), and artefact constraints
(i.e., the limited size of a piece of paper
contrasted with the theoretically unbounded
scrollable window on a computer screen). These
external considerations are often connected.
The ?ideal? layout of information on a page
might as a consequence never occur: it must
be ?folded in? to the structures afforded by the
artefact, and labelled and arranged according
to the structures required for access.
In order to pick apart and explicitly repre-
sent the strands of meaning that we believe play
a crucial role in multimodal page-based docu-
ment design, we require several orthogonal lay-
ers of annotation. We claim that these levels are
the minimum necessary for revealing accounts
of the operation of the kinds of visual artifacts
being gathered in our corpus?we expect further
layers to be added. Indeed, we consider it a
crucial design feature that the annotation lay-
ers adopted be additive and open rather than
excluding and closed. The layers at the focus of
attention within the current phase of the GeM
enterprise are:
? Rhetorical structure: the rhetorical rela-
tionships between content elements; how
the content is ?argued?;
? Layout structure: the nature, appearance
and position of communicative elements on
the page;
? Navigation structure: the ways in which
the intended mode(s) of consumption of the
document is/are supported.
We then need in addition to these layers, ex-
plicit representation of constraints that range
freely over the layers and which relate design
decisions to document types, or genres. Further
constraints that are known to determine docu-
ment design include: canvas constraints, arising
out of the physical nature of the object being
produced (e.g., page or screen, fold-geometry in
leaflets, and so on), production constraints, aris-
ing out of the production technology, and con-
sumption constraints, arising out of the time,
place, and manner of acquiring and consuming
the document. Further details and background
for our approach to document design and de-
scription are given in Delin et al (2002).
Our corpus needs to contain information
about each of these contributing sources of con-
straint in a way that supports empirical in-
vestigation. Our hypothesis, following Waller
(1987), is that not only is it possible to find
systematic correspondences between these lay-
ers, but also that those correspondences them-
selves will depend on specifiable aspects of their
context of use. But to verify (or otherwise) this
hypothesis, the data gathering and annotation
must come first. And this leads directly to some
important technical issues, since the structures
induced by these layers of constraint can be
highly divergent and need to be mapped onto
one another with extreme flexibility. The well-
known corpus annotation problem of intersect-
ing hierarchies therefore arises here with consid-
erable force.
3 Technical approach
Our approach to implementing the required
multiple layer annotation scheme is to adopt
multiple level ?stand-off? or ?remote? annota-
tions similar to those suggested by Thompson
and McKelvie (1997) or the Corpus Encoding
Standard (e.g., CES, 1999: Annex 10). For
each document to be included in the corpus,
therefore, we create a ?base level? document
whose purpose is provide a common set of units
to which all subsequent stand-off levels refer.
These base level units range over textual, graph-
ical and layout elements and give a comprehen-
sive account of the material on the page, i.e.
they comprise everything which can be seen on
the page/pages of the document, including: or-
thographic sentences, sentence fragments initi-
ating a list, headings, titles, headlines, photos,
drawings, diagrams, figures (without caption),
captions of photos, drawings, diagrams, tables,
text in photos, drawings, diagrams, icons, tables
cells, list headers, list items, list labels (itemiz-
ers), items in a menu, page numbers, footnotes
(without footnote label), footnote labels, run-
ning heads, emphasized text, horizontal or ver-
tical lines which function as delimiters between
columns or rows, lines, arrows, and polylines
which connect other base units. Each such el-
ement is marked as a base unit and receives a
unique base unit identifier.
The more abstract annotation levels may
then group base units as required; these group-
ings must again be very flexible?for exam-
ple, it is quite possible that non-consecutive
basic units need to be grouped (and that
differing non-consecutive basic units will be
grouped within differing annotation layers).
Each of the more abstract layers is repre-
sented formally as a further structured XML
specification whose precise informational con-
tent and form is in turn defined by an ap-
propriate Document Type Definition (DTD).
2
Each layer defines a particular structural view
of the original document. The markup
for a single document then consists mini-
mally of the following four inter-related layers:
Name content
GeM base base units
RST base rhetorical structure
Layout base layout properties and
structure
Navigation base navigation elements
and structure
All information apart from that of the base
level is expressed in terms of pointers to the rel-
evant units of the base level. This stand-off ap-
proach to annotation readily supports the nec-
essary range of intersecting, overlapping hierar-
chical structures commonly found in even the
simplest documents.
The relationships of the differing annotation
levels to the base level units is depicted graph-
ically in Figure 1. This shows that base units
(the central column) provide the basic vocabu-
lary for all other kinds of units and can, further,
be cross-classified.
Space precludes a detailed account of the or-
ganization of all the levels of the annotation
scheme. Instead we select some examples of an
annotated document at each layer of annotation
to give an indication of the annotation scheme in
action. For further technical details and spec-
ifications of the annotation scheme, the inter-
ested reader is referred to the technical manual
(Henschel, 2002). For ease of exposition, we will
draw most of our examples from the annotation
of the page shown in Figure 2. This page has
2
For the DTDs themselves, as well as further infor-
mation and examples, see the GeM corpus webpages.
base unitsLayout
Semantic
Content
RST
segments
navigational
elements
layout units
Figure 1: The distribution of base elements to
layout, rhetorical and navigational elements
Figure 2: Example page: Flegg, J. (1999)
Collins Gem Birds. Italy: Harper Collins. p21.
Used by kind permission of the publisher.
the advantage that it is relatively straightfor-
ward; more complex examples can be found on
the corpus webpages.
The base unit annotation (GemBase) for an
extract from the centre of the page is as follows:
<unit id="u-21.5">---------------</unit>
<unit id="u-21.6"
src="gannet.jpg" alt="gannet-photo"/>
<unit id="u-21.7">
Huge (90cm) unmistakable seabird.
</unit>
<unit id="u-21.8">
Watch for white, cigar-shaped body and
long straight, slender, black-tipped wings.
</unit>
<unit id="u-21.9">
In summer, yellow head of
adult inconspicuous. </unit>
<unit id="u-21.10">
Plunges spectacularly for fish.</unit>
<unit id="u-21.11">Sexes similar.</unit>
Although the base annotation generally has a
flat structure, in certain cases, we diverge from
this and allow nested markup, i.e., base units
inside base units. This is used in the following
situations: emphasized text portions in a sen-
tence/heading, icons or similar pictorial signs in
a sentence, text pieces in a diagram or picture,
arrows and other graphical signs in a diagram
or picture, and document deictic expressions oc-
curring in a sentence.
The layout base then consists of three main
parts: (a) layout segmentation?identification of
the minimal layout units, (b) realization infor-
mation ? typographical and other layout prop-
erties of the basic layout units, and (c) the lay-
out structure information?the grouping of the
layout units into more complex layout entities.
Whereas in typography, the minimal layout el-
ement (in text) is the glyph, here we are con-
cerned with groupings of base units that have
a visual coherence and unity with respect to
the organisation of the page: these groupings
are termed layout units and, unlike the base
units, are organized into a non-trivial hierarchi-
cal structure as required to describe the page.
Again, each layout-unit has an id attribute,
which carries an identifying symbol; in addition,
however, the stand-off annotation is achieved
via an attribute xref which points to the base
units which belong to that layout unit. It is
possible, but not necessary, to store the corre-
sponding text portions of the original text file
between the start and end tag of a layout-unit
for mnemonic purposes; this text information is
not used in any further processing. The follow-
ing extract shows the layout unit corresponding
to the main block of text underneath the gannet
photo.
<layout-unit id="lay-flegg-text"
xref="u-21.7 u-21.8 u-21.9
u-21.10 u-21.11">
Huge (90cm) unmistakable seabird.
Watch for white, cigar-shaped body
and long straight, slender,
black-tipped wings. In summer, yellow
head of adult inconspicuous. Plunges
spectacularly for fish. Sexes similar.
</layout-unit>
The second part of the layout base is the re-
alization. Each layout unit specified in the lay-
out segmentation has a visual realization. The
most apparent difference is which mode has
been used ? the verbal or the visual mode. Fol-
lowing this distinction, the layout base differen-
tiates between two kinds of elements: textual
elements and graphical elements marked with
the tags <text> and <graphics> respectively.
These two elements have a differing sets of at-
tributes describing their layout properties. The
attributes are generally consistent with the lay-
out attributes defined for XSL formatting ob-
ject and CSS layout models. The id of each
layout unit of the segmentation part of the lay-
out base has to occur exactly once under xref
in the realization part: either in a <text> or
a <graphics> element. In the following cod-
ing example, we have five layout units which
share typographical characteristics. These cor-
respond to the five table cells in the first column
of the table on the page shown in Figure 2.
<text xref="lay-21.12 lay-21.14 lay-21.16
lay-21.18 lay-21.20"
font-family="sans-serif"
font-size="10" font-style="normal"
font-weight="bold"
case="mixed" justification="right"
color="black"/>
The third part of the layout base then serves
to represent the hierarchical layout structure.
Generally we assume that the layout structure
of a document is tree-like with the entire docu-
ment being the root; this will certainly be prob-
lematic for some document types but also has
sufficient applicability to enable us to make con-
siderable headway. Each layout chunk is a node
in the tree, and the basic layout units, which
have been identified in the segmentation part of
the layout base, are the terminal nodes of that
tree. In our annotation, we use several different
tags for the nodes in the layout tree. The three
most common are: <layout-root>, the ele-
ment describing the entire document, <layout-
chunk>, all non-terminal nodes in the layout
tree except for the root, and <layout-leaf>,
the terminal nodes. A slightly simplified (i.e.,
some further substructure is ommitted) extract
of the layout structure for our example page is
depicted graphically in Figure 3; it is described
by the following XML annotation:
page-21
header-21 body-21 page-no-21
lay-21.2 lay-21.3
Figure 3: Example page layout structure shown
graphically
<layout-root id="page-21">
<layout-leaf xref="header-21"/>
<layout-chunk id="body-21">
<layout-leaf xref="lay-21.2"/>
<layout-leaf xref="lay-21.3"/>
</layout-chunk>
<layout-leaf xref="page-no-21"/>
</layout-root>
Whereas the annotations so far specify the
hierarchical structuring of a page into visually
distinguishable and groupable layout units, we
need also to record specific information about
how layout units are placed on their pages: the
page or page segment layout is not fully deter-
mined by grouping layout units into a tree struc-
ture since further information is required about
the actual position of each unit in the docu-
ment (on or within its page). For this, we in-
troduce an area model, which serves to deter-
mine the position of each layout-chunk/layout-
leaf in an abstract, but fully explicit, way. The
area model is a generalization of common no-
tions of ?page models?. Each page usually par-
titions its space into sub-areas and these can be
used for positioning or aligning layout units or
subtrees of the layout structure. For instance,
a page is often designed in three rows ? the
area for the running head (row-1), the area for
the page body (row-2), and the area for the
page number (row-3) ? which are arranged ver-
tically. The page body space can itself consist
of two columns arranged horizontally. These
rows/columns need not to be of equal size. For
the present, we restrict ourselves to rectangular
areas and sub-areas, and allow recursive area
subdivision. The partitioning of the space of
the entire document is defined in the area-root,
which structures the document (page) into rect-
angular sub-areas in a table-like fashion.
The tag to represent the area root is <area-
root>. The tag to represent the division of
a sub-area into smaller rectangles is <sub-
area>, this shares the attributes of the root
but adds a location attribute so that subareas
are positioned relative to their parent. Loca-
tions are indicated with respect to a logical grid
defining rows and columns. The area model for
our example page therefore contains a single col-
umn with 5 rows (the header, the photograph,
the text block, the table, and the footer), in
which the fourth row, the table, is itself made
up of a subarea corresponding to the rows and
columns of a virtual table. This is captured by
the following annotation:
<area-root id="page-frame" cols="1" rows="5"
hspacing="100" vspacing="5 40 15 45 5"
height="16cm" width="14cm">
<sub-area id="table-frame" location="row-4"
cols="2" rows="5" hspacing="10 90"
vspacing="100"/>
</area-root>
The attribute vspacing=??5 40 15 45 5??
means that the area for the running head takes
5% of the entire page height, the area for the
next row 40%, etc. The area model then pro-
vides logical names for the precise positioning
of the layout units identified in the hierarchi-
cal layout structure. This makes it straightfor-
ward to indicate, for example, that collections
of siblings in the layout structure share (or fail
to share) some particular alignment properties
within the page.
The RST base presents the rhetorical struc-
ture of the document. The rhetorical structure
is annotated following the Rhetorical Structure
Theory (RST) of Mann and Thompson (1988).
The relation between rhetorical structure and
layout is currently an important area of study
in multimodal document description and so its
inclusion in the GeM annotation scheme is es-
sential. Several annotation schemes for RST
have been proposed in the literature (cf. Daniel
Marcu and Mick O?Donnell?s proposals, e.g.,
www.sil.org/?mannb/rst/toolnote.htm and the
RAGS rhetorical level: Cahill et al (2001)).
The precise GeM notation differs from these
in certain respects, but the main principles of
representation remain similar. Since many of
the details of the rhetorical annotation presume
some familiarity with the decomposition of texts
according to RST, we will note here simply that
this annotation layer again represents a hierar-
chical decomposition in which the leaves of the
tree can correspond to both textual and graph-
ical base units.
Finally, the navigation base captures those
parts of the document/page which tell the
reader where the current text, or ?document
thread?, is continued or which point to an al-
ternative continuation or continuations. These
make up the navigation layer of annotation.
The addresses used by such pointers are either
names of RST spans or names of layout chunks.
For long-distance navigation, typical nodes in
the RST structure and in the layout structure
have been established for use in pointers; in
particular, chapter/section headings are names
for RST spans and page numbers are names
for page-sized layout-chunks. This structure
imposed by the navigational elements is thus
quite different from the preceding layers and
can freely cross-cut the hierarchicies expressed
there. Again, for further details, the reader is
refered to the documentation manual.
4 Comparison with other
XML-based approaches
It is useful to consider other approaches to
representing ?overlapping hierarchies? that have
been proposed in the XML literature; since
these are early days in the construction of such
annotation schemes, it is likely that the expe-
rience gained with differing schemes will prove
highly beneficial for further development.
The first examples of extensive overlapping
hierarchies within markup for NLP are proba-
bly to be found in speech corpora. It is clear
that intonational phenomena, for example, may
or may not respect grammatical or other kinds
of structure and so need to be maintained sep-
arately. Speech-oriented corpora generally use
the time line as a basic reference method since
speech events are necessarily strictly ordered
in time. This is quite different in the GeM
case where we have found the non-linearity and
the non-consecutive nature of the units grouped
within our annotation scheme as presenting a
major problem for annotation models that have
been developed in the speech processing tradi-
tion where contiguity of units is the expected
case. Whereas the speech signal can be encoded
by means of time-stamps, in the GeM model we
need to use the layout structure (or even the
area model within the layout structure) instead
for placing elements within the physical docu-
ment.
One of the most detailed general considera-
tions of the range of XML-based solutions to
the multiple, overlapping hierarchies problem,
as well as an extensive listing of further litera-
ture, is given by Durusau and O?Donnell (sub-
mitted). After reviewing several requirements
and approaches to the problem, Durusau and
O?Donnell propose a Bottom-Up Virtual Hier-
archy approach which (i) creates multiple in-
stances of the source document, each with its
own consistent XML-defined hierarchy and (ii)
creates one further document instance called the
?base file?, in which each basic element of the
document is linked via XPath expressions to its
position in each of the separately defined hier-
archy documents. The position in each separate
hierarchy is captured as the value of a distinct
attribute to a base element tag. This means
that the base file becomes extremely complex,
although Durusau and O?Donnell envisage that
this file could in future be automatically con-
structed and maintained.
The similarity of this approach to the inde-
pendently developed GeM approach argues to
a certain extent for the necessity of proceeding
in this direction. The differences between the
approaches arise from the different tasks that
are being considered and the corresponding dif-
ferences in emphasis. Durusau and O?Donnell
are considering the task from the perspective of
differing ?interpretations? of a text in the sense
more commonly pursued in text corpus markup:
it is, therefore, natural to consider each hier-
archy as an autonomous marked-up document.
We are concerned with linguistic analyses of
documents, where the structure of the analy-
ses themselves is itself a major focus of atten-
tion. It is then no longer so important that
each level of analysis transparently represents
a ?view of the text?. When querying the cor-
pus for structural and realizational regularities,
we are free to do this across any set of the an-
notation layers present, using the full power of
properly parsed XPath expressions, and with-
out the need to always decompose such queries
into the terms of the elements of the base file.
This is the XML reflex of the linguistic strategy
of stratification of linguistic information across
the linguistic system.
Single structured text views can, of course,
be created out of the GeM markup by following
the indirection links present in any individual
GeM annotation layer. This requires that that
layer be interpreted with respect to the corre-
sponding base level document and is not then
?locally? complete. This (formally slight) com-
plexity is, we feel, more than balanced by the
fact that we need neither any additional com-
plexity in our base level markup nor the double
coding of the position of nodes in hierarchies
and base elements. It is also straightforward
to introduce intermediate levels of structural
analysis?as, for example, already done in our se-
lection of base units as units relevant to layout
rather than ?words? or other more straightfor-
ward formal units. Indeed, when the more tra-
ditional linguistic levels of annotation (syntax,
semantics) are added into the complete scheme,
many of the GeM annotation layers will con-
tinue not to access the leaves of these structures
at all, and will continue to work with the base
units illustrated here; this variable granularity
may prove to be a general requirement for lin-
guistically complex analyses. And, finally, we
also need not recompile our base level document
whenever an additional layer of annotation is
added to the scheme, thereby simplifying main-
tenance. Further comparison of the approaches
will, however, require more detailed evaluation
in use.
Finally, we can consider the GeM approach
as contrasted with directions within the XML
community itself since there, too, there are pro-
posals for capturing distinctions of content, lay-
out (e.g., in terms of formatting objects: XSL-
FO) and navigational elements (e.g., in terms of
Xlink). Whereas we are attempting to make the
GeM description as compatible with these con-
structs as possible?for example, as noted above
with respect to the realizational possibilities for
the layout units?it is important to understand
the very different aims involved. The purpose
of the GeM project is to analyse the multimodal
decisions made in a wide range of document
types and it is not yet clear which theoretical
levels and which theoretical constructs within
those levels will prove appropriate. The format-
ting object description is only suited to a certain
class of layout types (which excludes, for exam-
ple, newspapers) and so is in many respects too
specific for our more exploratory purposes. We
are also searching for effective levels of abstrac-
tion at which to characterize our data: effective
here meaning that these will be the constructs
over which canvas constraints, production con-
straints and consumption constraints are most
appropriately expressed. Perhaps, to offer an
NLP analogy: whereas the XML modelling de-
cisions correspond to a fine-scaled phonetic de-
scription of a language event, we are in the
GeM project searching for the higher levels of
abstraction corresponding to the grammar, se-
mantics and pragmatics of the language events.
We expect this to give us a substantially better
theoretical grasp of the meaning-making poten-
tial of layout decisions and their control by ex-
ternal constraints.
5 Applications of the annotated
corpus
A number of uses are currently being made of
the annotated GeM corpus. While our empiri-
cal study will need considerably more data to be
encoded before we can make reliable statements
concerning the patterning of various constraints
with document decisions, we have already been
struck by the rather wide variation that exists
within single documents between selected lay-
out structures on the one hand and rhetorical
organization on the other. In surprisingly many
cases, this variation goes beyond what might
be considered ?good? design: in fact, we would
argue that most such designs are flawed and
would be improved by a more explicit attention
to the rhetorical force communicated by partic-
ular layout decisions. This represents the use of
the corpus for document critique and improve-
ment (cf. Delin and Bateman (2002)).
We are also using the data gathered so far to
inform the design of a prototype automatic doc-
ument generation system capable of producing
the kinds of variation and layout forms seen in
our corpus. In this work, the annotation scheme
provides skeletal data structures that define tar-
get formats of various stages of the generation
process. Thus, for example, layout planning
needs to produce a structure that is an instan-
tiated version of a layout structure as we have
defined it above. Some first results are reported
in Henschel et al (to appear) which describes a
prototype implemented as a set of XSLT trans-
formations that convert a content representa-
tion into an XSL-FO document. The transfor-
mations are conditionalized so as to respond to
various features of the content, the modes of the
available material, and the rhetorical structure;
so far pages generated include further examples
of the kind used as an example in this paper as
well as pages from instructional texts such as
telephone user guides.
Conditionalization is expressed in terms of
XPath specifications that check the presence or
absence of particular configurations within any
of the GeM annotation layers as required. Such
specifications are, however, somewhat cumber-
some for more complex queries. Whether fur-
ther developments such as XQL or XQuery will
bring benefits is not yet clear. Somewhat dis-
appointing was the unsuitability of the previous
generation of linguistic-oriented corpus tools,
which, despite considerable investment, seem to
have been outstripped by the very rapid devel-
opments seen in the mainstream XML commu-
nity. Most of our current work is done directly
with XMLSpy and XLST tools such as Xalan.
The final goal of our corpus collection work
and the prototype document generation systems
is to place the commonly quoted aim of using
XML markup for document ?repurposing? on a
solid theoretical foundation. Thus, for example,
the ability automatically to generate very dif-
ferent presentational forms for the instructional
texts or bird pages mentioned above is an in-
herent feature of the GeM model. More impor-
tant for us is to uncover as precisely as possi-
ble the conditions which make certain presen-
tational selections more appropriate than oth-
ers. In general, we relate the need for present-
ing information in different forms to the kinds
of constraints we introduced above: very differ-
ent canvas constraints are imposed, for exam-
ple, depending on whether the delivery medium
is across the telephone, on a palmtop, or as a
display on a big screen. However, it is not sim-
ply a matter of the differing affordances of the
display device. The selection of particular infor-
mation and information display modes is also a
matter of established document types. These
document types change over time, due both to
changing production constraints and to the es-
tablishment of new genres. It is not possible to
deploy inappropriate realizations for established
genres; a newspaper that changed its presenta-
tion style to that of birdbooks would quickly be
out of business?and vice versa. Mapping out
these possibilities and showing what larger pat-
terns hold is then our eventual goal. And for
this, extensive and detailed empirical studies of
the kind we hope the GeM corpus and annota-
tion scheme will support are crucial.
References
John A. Bateman, Thomas Kamps, Jo?rg Kleinz, and
Klaus Reichenberger. 2001. Constructive text, di-
agram and layout generation for information pre-
sentation: the DArt
bio
system. Computational
Linguistics, 27(3):409?449.
Lynne Cahill, Roger Evans, Chris Mellis, Daniel
Paiva, Mike Reape, and Donia Scott. 2001. Intro-
duction to the RAGS architecture . Available at
http://www.itri.brighton.ac.uk/projects/rags.
Corpus Encoding Standard. 2000. Corpus En-
coding Standard. Version 1.5. Available at:
http://www.cs.vassar.edu/CES.
Judy L. Delin and John A. Bateman. 2002. Describ-
ing and critiquing multimodal documents. Docu-
ment Design, 3(2). Amsterdam: John Benjamins.
Judy Delin, John Bateman, and Patrick Allen. 2002.
A model of genre in document layout. Informa-
tion Design Journal.
Patrick Durusau and Matthew Brook O?Donnell.
submitted. Implementing concurrent markup in
XML. Markup Languages: Theory and Practice.
Renate Henschel, John Bateman, and Judy Delin.
to appear. Automatic genre-driven layout gener-
ation. In Proceedings of the 6. Konferenz zur Ver-
arbeitung natu?rlicher Sprache (KONVENS 2002),
University of the Saarland, Saarbru?cken.
Renate Henschel. 2002. GeM annotation manual.
Gem project report, University of Bremen and
University of Stirling, Bremen and Stirling. Avail-
able at http://purl.org/net/gem.
Gunther Kress and Theo Van Leeuwen. 2001. Mul-
timodal discourse: the modes and media of con-
temporary communication. Arnold, London.
William C. Mann and Sandra A. Thompson. 1988.
Rhetorical structure theory: Toward a functional
theory of text organization. Text, 8(3):243?281.
Henry S. Thompson and D. McKelvie. 1997. Hyper-
link semantics for standoff markup of read-only
documents. In Proceedings of SGML Europe ?97.
Robert Waller. 1987. The typographical contribution
to language: towards a model of typographic gen-
res and their underlying structures. Ph.D. thesis,
Department of Typography and Graphic Commu-
nication, University of Reading, Reading, U.K.
Proceedings of the Workshop on Frontiers in Linguistically Annotated Corpora 2006, pages 86?93,
Sydney, July 2006. c?2006 Association for Computational Linguistics
Corpus annotation by generation
Elke Teich
TU Darmstadt
Darmstadt, Germany
teich@linglit.tu-darmstadt.de
John A. Bateman
Universita?t Bremen
Bremen, Germany
bateman@uni-bremen.de
Richard Eckart
TU Darmstadt
Darmstadt, Germany
eckart@linglit.tu-darmstadt.de
Abstract
As the interest in annotated corpora is
spreading, there is increasing concern with
using existing language technology for
corpus processing. In this paper we ex-
plore the idea of using natural language
generation systems for corpus annotation.
Resources for generation systems often fo-
cus on areas of linguistic variability that
are under-represented in analysis-directed
approaches. Therefore, making use of
generation resources promises some sig-
nificant extensions in the kinds of anno-
tation information that can be captured.
We focus here on exploring the use of
the KPML (Komet-Penman MultiLingual)
generation system for corpus annotation.
We describe the kinds of linguistic infor-
mation covered in KPML and show the
steps involved in creating a standard XML
corpus representation from KPML?s gener-
ation output.
1 Introduction
Many high-quality, theory-rich language process-
ing systems can potentially be applied to corpus
processing. However, the application of exist-
ing language technology, such as lexical and/or
grammatical resources as well as parsers, turns out
not to be as straightforward as one might think
it should be. Using existing computational lexi-
cons or thesauri, for instance, can be of limited
value because they do not contain the domain-
specific vocabulary that is needed for a partic-
ular corpus. Similarly, most existing grammat-
ical resources for parsing have restricted cover-
age in precisely those areas of variation that are
now most in need of corpus-supported investiga-
tion (e.g., predicate-argument structure, informa-
tion structure, rhetorical structure). Apart from
limited coverage, further issues that may impede
the ready application of parsers in corpus process-
ing include:
? Annotation relevance. Specialized, theory-
specific parsers (also called ?deep parsers?;
e.g., LFG or HPSG parsers) have been built
with theoretical concerns in mind rather than
appliability to unrestricted text. They may
thus produce information that is not annota-
tionally relevant (e.g., many logically equiv-
alent readings of a single clause).
? Usability. Deep parsers are highly complex
tools that require expert knowledge. The ef-
fort in acquiring this expert knowledge may
be too high relative to the corpus processing
task.
? Completeness. Simple parsers (commonly
called ?shallow parsers?), on the other
hand, produce only one type of anno-
tationally relevant information (e.g., PoS,
phrase/dependency structure). Other desir-
able kinds of information are thus lack-
ing (e.g., syntactic functions, semantic roles,
theme-rheme).
? Output representation. Typically, a parsing
output is represented in a theory-specific way
(e.g., in the case of LFG or HPSG parsers,
a feature structure). Such output does not
conform to the common practices in corpus
representation.1 Thus, it has to be mapped
onto one of the standardly used data mod-
els for corpora (e.g., annotation graphs (Bird
and Liberman, 2001) or multi-layer hier-
archies (Sperberg-McQueen and Huitfeldt,
2001; Teich et al, 2001)) and transformed
to a commonly employed format, typically
XML.
1This is in contrast to the output representation of shal-
low parsers which have often been developed with the goal
of corpus processing.
86
In spite of these difficulties, there is a general
consensus that the reward for exploring deep pro-
cessing techniques to build up small to medium-
scale corpus resources lies in going beyond the
kinds of linguistic information typically covered
by treebanks (cf. (Baldwin et al, 2004; Cahill et
al., 2002; Frank et al, 2003)).
In this paper, we would like to contribute to this
enterprise by adding a novel, yet complementary
perspective on theory-rich, high-quality corpus an-
notation. In a reappraisal of the potential contribu-
tion of natural language generation technology for
providing richly annotated corpora, we explore the
idea of annotation by generation. Although this
may at first glance seem counter-intuitive, in fact a
generator, similar to a parser, creates rather com-
plex linguistic descriptions (which are ultimately
realized as strings). In our current investigations,
we are exploring the use of these complex linguis-
tic descriptions for creating annotations. We be-
lieve that this may offer a worthwhile alternative
or extension of corpus annotation methods which
may alleviate some of the problems encountered
in parsing-based approaches.
The generation system we are using is the KPML
(Komet-Penman MultiLingual; (Bateman, 1997))
system. One potential advantage of KPML over
other generation systems and over many parsing
systems is its multi-stratal design. The kinds
of linguistic information included in KPML range
from formal-syntactic (PoS, phrase structure) to
functional-syntactic (syntactic functions), seman-
tic (semantic roles/frames) and discoursal (e.g.,
theme-rheme, given-new). Also, since KPML has
been applied to generate texts from a broad spec-
trum of domains, its lexicogrammatical resources
cover a wide variety of registers?another poten-
tial advantage in the analysis of unrestricted text.
As well as our general concern with investigat-
ing the possible benefits of applying generation
resources to the corpus annotation task, we are
also more specifically concerned with a series of
experiments involving the KPML system as such.
Here, for example, we are working towards the
construction of ?treebanks? based on the theory of
Systemic-Functional Linguistics (SFL; (Halliday,
2004)), so as to be able to empirically test some of
SFL?s hypotheses concerning patterns of instantia-
tion of the linguistic system in authentic texts. An-
notating the variety of linguistic categories given
in SFL manually is very labor-intensive and an au-
tomated approach is clearly called for. We are also
working towards a more detailed comparison of
the coverage of the lexicogrammatical resources
of KPML with those of parsing systems that are
similarly theoretically-dedicated (e.g., the HPSG-
based English Resource Grammar (ERG) (Copes-
take and Flickinger, 2002) contained in LinGO
(Oepen et al, 2002)). Thus, the idea presented
here is also motivated by the need to provide a ba-
sis for comparing grammar coverage across pars-
ing and generation systems more generally.
The remainder of the paper is organized as fol-
lows. First, we present the main features of the
KPML system (Section 2). Second, we describe the
steps involved in annotation by generation, from
the generation output (KPML internal generation
record) to an XML representation and its refine-
ment to an XML multi-layer representation (Sec-
tion 3). Section 4 concludes the paper with a criti-
cal assessment of the proposed approach and a dis-
cussion of the prospects for application in the con-
struction of corpora comparable in size and qual-
ity to existing treebanks (such as, for example, the
Penn Treebank for English (Marcus et al, 1993)
or the TIGER Treebank for German (Brants et al,
2002)). Since our description here has the status
of a progress report of work still in its beginning
stages, we cannot yet provide the results of de-
tailed evaluation. In the final section, therefore, we
emphasize the concrete steps that we are currently
taking in order to be able carry out the detailed
evaluations necessary.
2 Natural language generation with
KPML
The KPML system is a mature grammar devel-
opment environment for supporting large-scale
grammar engineering work for natural language
generation using multilingual systemic-functional
grammars (Bateman et al, 2005). Grammars
within this framework consist of large lattices of
grammatical features, each of which brings con-
straints on syntactic structure. The features are
also linked back to semantic configurations so that
they can be selected appropriately when given a
semantic specification as input. The result of gen-
erating with a systemic-functional grammar with
KPML is then a rich feature-based representation
distributed across a relatively simple structural
backbone. Each node of the syntactic represen-
tation corresponds to an element of structure and
87
typically receives on the order of 50-100 linguistic
features, called the feature selection. Since within
systemic-functional grammars, it is the features
of the feature selection that carry most of the de-
scriptive load, we can see each feature selection as
an exhaustive description of its associated syntac-
tic constituent. Generation within KPML normally
proceeds on the basis of a semantic input specifi-
cation which triggers particular feature selections
from the grammar via a mediating linguistic ontol-
ogy.
The features captured in a systemic-functional
generation resource are drawn from the four com-
ponents of functional meaning postulated within
systemic-functional grammar: the ideational, ex-
pressing content-related decisions, the logical, ex-
pressing logical dependencies, the interpersonal,
expressing interactional, evaluative and speech act
information, and the textual, expressing how each
element contributes to an unfolding text. It is in
this extremely rich combination of features that
we see significant value in exploring the re-use of
such grammars for annotation purposes and cor-
pus enrichment.
For annotation purposes, we employ some
of the alternative modes of generation that
are provided by the full grammar development
environment?it is precisely these that allow for
ready incorporation and application within the cor-
pus annotation task. One of the simplest ways in
which generation can be achieved during grammar
development, for example, is by directly select-
ing linguistic features from the grammar. This can
therefore mimic directly the task of annotation: if
we consider a target sentence (or other linguistic
unit) to be annotated, then selecting the necessary
features to generate that unit is equivalent to anno-
tating that unit in a corpus with respect to a very
extensive set of corpus annotation features.
Several additional benefits immediately acrue
from the use of a generator for this task. First,
the generator actually constructs the sentence (or
other unit) as determined by the feature selection.
This means that it is possible to obtain immedi-
ate feedback concerning the correctness and com-
pleteness of the annotation choices with respect to
the target. A non-matching structure can be gener-
ated if: (a) an inappropriate linguistic feature has
been selected, (b) the linguistic resources do not
cover the target to be annotated, or (c) a combina-
tion of these. In order to minimise the influence
of (b), we only work with large-scale grammatical
resources whose coverage is potentially sufficient
to cover most of the target corpus. Further cor-
pus instances that lie beyond the capabilities of the
generation grammar used are an obvious source of
requirements for extensions to that grammar.
Second, the architecture of the KPML system
also allows for other kinds of annotation support.
During grammar development it is often required
that guidance is given directly to the semantics-
grammar linking mappings: this is achieved by
providing particular ?answers? to pre-defined ?in-
quiries?. This allows for a significantly more
abstract and ?intention?-near interaction with the
grammatical resource that can be more readily
comprehensible to a user than the details of the
grammatical features. This option is therefore also
available for annotation.
Moreover, the semantic specifications used rely
on a specified linguistic ontology that defines par-
ticular semantic types. These types can also be
used directly in order to constrain whole collec-
tions of grammatical features. Providing this kind
of guidance during annotation can also, on the one
hand, simplify the process of annotation while, on
the other, produce a semantic level of annotation
for the corpus.
In the following sections, we see a selection of
these layers of information working in annotation
in more detail, showing that the kinds of informa-
tion produced during generation corresponds ex-
tremely closely to the kinds of rich annotations
currently being targetted for sophisticated corpus
presentation.
3 Creating corpus annotations from
KPML output
3.1 KPML output
The output produced by KPML when being used
for generation is a recursive structure with the cho-
sen lexical items at the leaves. Figure 1 shows the
output tree for the sample sentence ?However they
will step up their presence in the next year?.
The nodes of this structure may be freely an-
notated by the user or application system to con-
tain further information: e.g., for passing through
hyperlinks and URLs directly with the semantics
when generating hypertext. Most users simply see
the result of flattening this structure into a string:
the generated sentence or utterance.
This result retains only a fraction of the in-
88
Figure 1: Tree generated by KPML
formation that is employed by the generator dur-
ing generation. Therefore, since we are using
the grammar development environment rather than
simply the generator component, we also have the
possibility of working directly with the internal
structures that KPML employs for display and de-
bugging of resources during development. These
internal structures contain a complete record of
the information provided to the generation pro-
cess and the generator decisions (including which
grammatical features have been selected) that have
been made during the construction of each unit.
This internal record structure is again a recursive
structure corresponding directly to the syntactic
structure of the generated result and with each
node having the information slots:
constituent:
{identifier, \\ unique id for the unit
concept, \\ link to the semantic concept expressed
spelling, \\ the substring for this portion of structure
gloss, \\ a label for use in inter-lineal glosses
features, \\ the set of grammatical features for this unit
lexeme, \\ the lexeme chosen to cover this unit (if any)
annotation, \\ user-specified information
functions \\ the grammatical functions the unit expresses
}
An extract from such an internal record structure
encoded in XML is given in the Appendix (5.1).
To support annotation, we make use of the XML-
export capabilities of KPML (cf. (Bateman and
Hartley, 2000)) in order to provide these com-
pleted structures in a form suitable for passing on
to the next stage of corpus annotation within an
XML-based multi-layer framework.
3.2 XML multi-layer representation
Systemic-functional analysis is inherently multi-
dimensional in that SFL adopts more than one view
on a linguistic unit. Here, we focus on three anno-
tationally relevant dimensions: axis (features and
functions), unit (clause, group/phrase, word, mor-
pheme) and metafunction (ideational, logical, in-
terpersonal and textual). Each metafunction may
chunk up a given string (e.g., a clause unit) in
Figure 2: Generation output viewed as multi-layer
annotation
<sfglayer metafunction="IDEATIONAL">
However,
<segment functions="AGENT">they</segment>
will step up
<segment functions="DIRECTCOMPLEMENT GOAL MEDIUM">
their presence
</segment>
<segment functions="TIMELOCATIVE">
in the next year
</segment>
.
</sfglayer>
Figure 3: Metafunction+Function layers
different ways, thus potentially creating overlap-
ping hierarchies. This is depicted schematically
for the running example in Figure 2. For instance,
in this example, according to the textual meta-
function, ?however they? constitutes a segment
(Theme) and according to the interpersonal meta-
function, ?they will? constitutes another segment
(Mood).
In order to be able to use the KPML output for
annotation purposes, we adopt a multi-layer model
that allows the representation of these different de-
scriptional dimensions as separate layers superim-
posed on a given string (cf. (Teich et al, 2005)).
The transformation from the KPML output to the
concrete multi-layer model adopted is defined in
XSLT.
From the KPML internal record structure we
use the information slots of identifier, spelling,
features, and functions. Each entry in the func-
tion slot is associated with one metafunctional as-
pect. For each metafunctional aspect, an annota-
tion layer is created for each constituent unit (e.g.,
a clause) holding all associated functions together
with the substrings they describe (see Figure 3 for
the ideational functions contained in the clause in
the running example).
An additional layer holds the complete con-
stituent structure of the clause (cf. Figure 4 for the
corresponding extract from the running example),
89
<constituent unit="-TOP-"
selexp="LEXICAL-VERB-TERM-RESOLUTION...">
<token features="HOWEVER">However,</token>
<constituent unit="TOPICAL"
selexp="THEY-PRONOUN...">
<token features="THEY PLURAL-FORM">they</token>
</constituent>
<token features="OUTCLASSIFY-REDUCED...">will</token>
<token features="DO-VERB...">step up</token>
<constituent unit="DIRECTCOMPLEMENT"
selexp="NOMINAL-TERM-RESOLUTION OBLIQUE...">
<constituent unit="DEICTIC"
selexp="THEIR GENITIVE NONSUPERLATIVE...">
<token features="THEIR PLURAL-FORM">their</token>
</constituent>
<token features="...COMMON-NOUN...">presence</token>
</constituent>
<constituent unit="TIMELOCATIVE"
selexp="IN STRONG-INCLUSIVE UNORDERED...">
<token features="IN">in</token>
<constituent unit="MINIRANGE"
selexp="NOMINAL-TERM-RESOLUTION...">
<token features="THE">the</token>
<constituent unit="STATUS"
selexp="QUALITY-TERM-RESOLUTION...">
<token features="...ADJECTIVE">next</token>
</constituent>
<token features="...COMMON-NOUN...">year .</token>
</constituent>
</constituent>
</constituent>
Figure 4: Constituent+Feature layer
i.e., the phrasal constituents and their features:
<constituent unit="..." selexp="...">
</constituent>
and the tokens and their (lexical) features:
<token features="..."> ... </token>
Thus, the KPML generation output, which di-
rectly reflects the trace of the generation process,
is reorganized into a meaningful corpus represen-
tation. Information not relevant to annotation can
be ignored without loss of information concerning
the linguistic description. The resulting represen-
tation for the running example is shown in the Ap-
pendix (5.2).2
4 Discussion
Although it is clear that the kind of informational
structures produced during generation with more
developed KPML grammars align quite closely
with that targetted by sophisticated corpus anno-
tation, there are several issues that need to be ad-
dressed in order to turn this process into a prac-
tical annotation alternative. Those which we are
currently investigating centre around usability and
coverage.
2To improve readability, we provide the integrated repre-
sentation rather than the stand-off representation which aligns
the different layers by using character offsets.
Usability/effort. Users need to be trained in pro-
viding information to guide the generation pro-
cess. This guidance is either in the form of di-
rect selections of grammatical features, in which
case the user needs to know when the features ap-
ply, or in the form of semantic specifications, in
which case the user needs information concerning
the appropriate semantic classification according
to the constructs of the linguistic ontology. One of
the methods by which the problem of knowing the
import of grammatical features may be alleviated
is to link each feature with sets of already anno-
tated/generated corpus examples. Thus, if a user
is unsure concerning a feature, she can call for
examples to be displayed in which the particular
linguistic unit carrying the feature is highlighted.
Even more useful is a further option which shows
not only examples containing the feature, but con-
trasting examples showing where the feature has
applied and where it has not. This provides users
with online training during the use of the system
for annotation. The mechanisms for showing ex-
amples and contrasting sets of generated sentences
for each feature were originally provided as part
of a teaching aid built on top of KPML: this allows
students to explore a grammar by means of the ef-
fects that each set of contrasting features brings
for generated structures. For complex grammars
this appears to offer a viable alternative to precise
documentation?especially for less skilled users.
Coverage. When features have been selected, it
may still be the case that the correct target string
has not been generated due to limited coverage
of grammar and/or semantics. This is indicative
of the need to extend the grammatical resources
further. A further alternative that we are explor-
ing is to allow users to specify the correspondence
between the units generated and the actual target
string more flexibly. This is covered by two cases:
(i) that additional material is in the target string
that was not generated, and (ii) that the surface
order of constituents is not exactly that produced
by the generator. In both cases we can refine the
stand-off annotation so that the structural result
of generation can be linked to the actual string.
Thus manual correction consists of minor align-
ment statements between generated structure and
string.
Certain other information that may not be avail-
able to the generator, such as lexical entries, can be
constructed semi-automatically on-the-fly, again
90
using the information produced in the generation
process (i.e., by collecting the lexical classifica-
tion features and adding lexemes containing those
features). This method can be applied for all open
word classes.
Next steps. In our future work, we will be car-
rying out an extensive annotation experiment with
the prediction that annotation time is not higher
than for interactive annotation from a parsing per-
spective. TIGER, for example, reports 10 min-
utes per sentence as an average annotation time.
We expect an experienced KPML user to be sig-
nificantly faster because the process of generation
or feature selection explicitly leads the annotator
through precisely those features that are relevant
and possible given the connectivity of the feature
lattice defined by the grammar. Annotation then
proceeds first by selecting the features that apply
and then by aligning the generated structure with
the corpus instance: both potentially rather rapid
stages. Also, we would expect to achieve similar
coverage as reported by (Baldwin et al, 2004) for
ERG when applied to a random 20,000 string sam-
ple of the BNC due to the coverage of the existing
grammars.
The results of such investigations will be SFL-
treebanks, analogous to such treebanks produced
using dependency approaches, LFG, HPSG, etc.
These treebanks will then support the subsequent
learning of annotations for automatic processing.
Acknowledgment. This work was partially supported
by Hessischer Innovationsfond of TU Darmstadt and PACE
(Partners for the Advancement of Collaborative Engineering
Education: www.pacepartners.org).
References
T. Baldwin, E. M. Bender, D. Flickinger, A. Kim, and
S. Oepen. 2004. Road-testing the EnglishResource
Grammar over the British National Corpus. In
Proceedings of the 4th International Conference on
Language Resources and Evaluation (LREC) 2004,
Lisbon, Portugal.
J. A. Bateman and A. F. Hartley. 2000. Target
suites for evaluating the coverage of text generators.
In Proceedings of the 3rd International Conference
on Language Resources and Evaluation (LREC),
Athens, Greece.
J. A. Bateman, I. Kruijff-Korbayova?, and G.-J. Krui-
jff. 2005. Multilingual resource sharing across
both related and unrelated languages: An imple-
mented, open-source framework for practical natu-
ral language generation. Research on Language and
Computation, 3(2):191?219.
J. A. Bateman. 1997. Enabling technology for multi-
lingual natural language generation: the KPML de-
velopment environment. Journal of Natural Lan-
guage Engineering, 3(1):15?55.
S. Bird and M. Liberman. 2001. A formal framework
for linguistic annotation. Speech Communication,
33(1-2):23?60.
S. Brants, S. Dipper, S. Hansen, W. Lezius, and
G. Smith. 2002. The TIGER treebank. In Proceed-
ings of the Workshop on Treebanks and Linguistic
Theories, Sozopol.
A. Cahill, M. McCarthy, J. van Genabith, and A. Way.
2002. Automatic annotation of the Penn-Treebank
with LFG f-structure information. In Proceedings of
the 3rd International Conference on Language Re-
sources and Evaluation (LREC) 2002, Las Palmas,
Spain.
A. Copestake and D. Flickinger. 2002. An open-source
grammar development environment and broad cov-
erage English grammar using HPSG. In Proceed-
ings of the 2nd International Conference on Lan-
guage Resources and Evaluation (LREC), Athens,
Greece.
A. Frank, L. Sadler, J. van Genabith, and A. Way.
2003. From treebank resources to LFG f-structures.
Automatic f-structure annotation of treebank trees
and CFGs extracted from treebanks. In A. Abeille,
editor, Treebanks. Building and using syntactically
annotated corpora, pages 367?389. Kluwer Aca-
demic Publishers, Dordrecht, Boston, London.
MAK Halliday. 2004. Introduction to Functional
Grammar. Arnold, London.
M. P. Marcus, B. Santorini, and M. A. Marcinkiewicz.
1993. Building a large annotated corpus of En-
glish: the Penn Treebank. Computational Linguis-
tics, 19(2):313?330.
S. Oepen, E. Callahan, D. Flickinger, C. D. Manning,
and K. Toutanova. 2002. LinGO Redwoods. A rich
and dynamic treebank for HPSG. In Workshop on
Parser Evaluation, 3rd International Conference on
Language Resources and Evaluation (LREC), Las
Palmas, Spain.
C.M. Sperberg-McQueen and C. Huitfeldt. 2001.
GODDAG: A Data Structure for Overlapping Hi-
erarchies. In Proceedings of PODDP?00 and
DDEP?00, New York.
E. Teich, S. Hansen, and P. Fankhauser. 2001. Rep-
resenting and querying multi-layer corpora. In
Proceedings of the IRCS Workshop on Linguistic
Databases, University of Pennsylvania, Philadel-
phia.
E. Teich, P. Fankhauser, R. Eckart, S. Bartsch, and
M. Holtz. 2005. Representing SFL-annotated cor-
pus resources. In Proceedings of the 1st Computa-
tional Systemic Functional Workshop, Sydney, Aus-
tralia.
91
5 Appendix
5.1 Extract from generation record (clause level)
<example>
<name>REUTERS29</name>
<generatedForm>However, they will step up their presence in the next year.</generatedForm>
<targetForm>But they will step up their presence in the next year.</targetForm>
<structures><constituent id="G3324" semantics="STEP-3278">
<functions>
<function metafunction="UNKNOWN">SENTENCE</function></functions>
<features/>
<subconstituents><constituent id="G3308" semantics="RR62-3289">
<functions>
<function metafunction="TEXTUAL">TEXTUAL</function>
<function metafunction="TEXTUAL">CONJUNCTIVE</function></functions>
<features>
<f>HOWEVER</f></features>
<subconstituents><string>However,</string></subconstituents>
</constituent><constituent id="G3310" semantics="PERSON-3291">
<functions>
<function metafunction="TEXTUAL">TOPICAL</function>
<function metafunction="INTERPERSONAL">SUBJECT</function>
<function metafunction="UNIFYING">ACTOR</function>
<function metafunction="IDEATIONAL">AGENT</function></functions>
<features/>
<subconstituents><constituent id="G3309" semantics="PERSON-3291">
<functions>
<function metafunction="LOGICAL">THING</function></functions>
<features>
<f>THEY</f>
<f>PLURAL-FORM</f></features>
<subconstituents><string>they </string></subconstituents>
</constituent>
</subconstituents>
</constituent><constituent id="G3311" semantics="ST59-3280-3297-3302">
<functions>
<function metafunction="LOGICAL">TEMPO0</function>
<function metafunction="INTERPERSONAL">FINITE</function></functions>
<features>
<f>OUTCLASSIFY-REDUCED</f>
<f>OUTCLASSIFY-NEGATIVE-AUX</f>
<f>FUTURE-AUX</f>
<f>PLURAL-FORM</f>
<f>THIRDPERSON-FORM</f></features>
<subconstituents><string>will </string></subconstituents>
</constituent><constituent id="G3312" semantics="STEP-3278">
<functions>
<function metafunction="UNIFYING">AUXSTEM</function>
<function metafunction="LOGICAL">VOICE</function>
<function metafunction="LOGICAL">LEXVERB</function>
<function metafunction="LOGICAL">PROCESS</function></functions>
<features>
<f>DO-VERB</f>
<f>EFFECTIVE-VERB</f>
<f>DISPOSAL-VERB</f>
<f>STEM</f></features>
<subconstituents><string>step up </string></subconstituents>
</constituent><constituent id="G3316" semantics="PRESENCE-3292-3306">
<functions>
<function metafunction="IDEATIONAL">DIRECTCOMPLEMENT</function>
<function metafunction="IDEATIONAL">GOAL</function>
<function metafunction="IDEATIONAL">MEDIUM</function></functions>
</constituent></subconstituents></constituent></structures>
<selectionexpressions>
<selexp sem="STEP-3278"><unit>-TOP-</unit><f>LEXICAL-VERB-TERM-RESOLUTION</f>
<f>DO-NEEDING-VERBS</f><f>AUXSTEM-VOICE</f><f>REAL</f><f>NON-MOTION-CLAUSE</f>
<f>PLURAL-FINITE</f><f>PLURAL-SUBJECT</f><f>TOPICAL-INSERT</f> ...
</selexp>
<selexp>...</selexp>
...
</selectionexpressions>
</example>
5.2 Multi-layer representation of generation record
Metafunction+Function layers
<sfglayer metafunction="UNKNOWN">
<segment functions="SENTENCE">
However, they will step up their presence in the next year .
</segment>
</sfglayer>
<sfglayer metafunction="UNIFYING">
However,
<segment functions="ACTOR">they</segment>
will
<segment functions="AUXSTEM">step up</segment>
their presence in the next year .
</sfglayer>
<sfglayer metafunction="TEXTUAL">
<segment functions="TEXTUAL CONJUNCTIVE">However,</segment>
<segment functions="TOPICAL">they</segment>
will step up their presence in the next year .
</sfglayer>
92
<sfglayer metafunction="LOGICAL">
However,
<segment functions="THING">they</segment>
<segment functions="TEMPO0">will</segment>
<segment functions="VOICE LEXVERB PROCESS">step up</segment>
<segment functions="THING">their</segment>
<segment functions="THING">presence</segment>
in the
<segment functions="QUALITY">next</segment>
<segment functions="THING">year .</segment>
</sfglayer>
<sfglayer metafunction="INTERPERSONAL">
However,
<segment functions="SUBJECT">they</segment>
<segment functions="FINITE">will</segment>
step up
<segment functions="DEICTIC">their</segment>
presence in
<segment functions="DEICTIC">the</segment>
next year .
</sfglayer>
<sfglayer metafunction="IDEATIONAL">
However,
<segment functions="AGENT">they</segment>
will step up
<segment functions="DIRECTCOMPLEMENT GOAL MEDIUM">
their presence
</segment>
<segment functions="TIMELOCATIVE">
<segment functions="MINORPROCESS">in</segment>
<segment functions="MINIRANGE">
the
<segment functions="STATUS">next</segment>
year .
</segment>
</segment>
</sfglayer>
Constituent+Feature layer
<constituent id="G3324" unit="-TOP-"
selexp="LEXICAL-VERB-TERM-RESOLUTION DO-NEEDING-VERBS AUXSTEM-VOICE REAL NON-MOTION-CLAUSE TOPICAL-INSERT ...">
<token features="HOWEVER">However,</token>
<constituent id="G3310" unit="TOPICAL"
selexp="THEY-PRONOUN NONDEMONSTRATIVE-SPECIFIC-PRONOUN NOMINATIVE NONSUPERLATIVE NONREPRESENTATION NONPARTITIVE ...">
<constituent id="G3309" unit="TOPICAL">
<token features="THEY PLURAL-FORM">they</token>
</constituent>
</constituent>
<token
features="OUTCLASSIFY-REDUCED OUTCLASSIFY-NEGATIVE-AUX FUTURE-AUX PLURAL-FORM THIRDPERSON-FORM">
will
</token>
<constituent id="G3312" unit="-TOP-">
<token features="DO-VERB EFFECTIVE-VERB DISPOSAL-VERB STEM">
step up
</token>
</constituent>
<constituent id="G3316" unit="DIRECTCOMPLEMENT"
selexp="NOMINAL-TERM-RESOLUTION OBLIQUE NONSUPERLATIVE NONREPRESENTATION NONPARTITIVE NONQUANTIFIED NOMINAL-GROUP ...">
<constituent id="G3314" unit="DEICTIC"
selexp="THEIR GENITIVE NONSUPERLATIVE NONREPRESENTATION NONPARTITIVE NONQUANTIFIED NOMINAL-GROUP ...">
<constituent id="G3313" unit="DEICTIC">
<token features="THEIR PLURAL-FORM">their</token>
</constituent>
</constituent>
<constituent id="G3315" unit="DIRECTCOMPLEMENT">
<token
features="OUTCLASSIFY-PROPERNOUN NOUN COMMON-NOUN COUNTABLE SINGULAR-FORM NOUN">
presence
</token>
</constituent>
</constituent>
<constituent id="G3323" unit="TIMELOCATIVE"
selexp="IN STRONG-INCLUSIVE UNORDERED TEMPORAL-PROCESS LOCATION-PROCESS SPATIO-TEMPORAL-PROCESS PREPOSITIONAL-PHRASE ...">
<token features="IN">in</token>
<constituent id="G3322" unit="MINIRANGE"
selexp="NOMINAL-TERM-RESOLUTION OBLIQUE NONSUPERLATIVE NONREPRESENTATION NONPARTITIVE NONQUANTIFIED NOMINAL-GROUP ...">
<token features="THE">the</token>
<constituent id="G3320" unit="STATUS"
selexp="QUALITY-TERM-RESOLUTION SIMPLEX-QUALITY NOTINTENSIFIED NONSCALABLE CONGRUENT-ADJECTIVAL-GROUP ...">
<constituent id="G3319" unit="STATUS">
<token features="OUTCLASSIFY-DEGREE-ADJ ADJ-NEUTRAL-FORM ADJECTIVE">
next
</token>
</constituent>
</constituent>
<constituent id="G3321" unit="MINIRANGE">
<token features="OUTCLASSIFY-PROPERNOUN NOUN COMMON-NOUN COUNTABLE SINGULAR-FORM NOUN">
year .
</token>
</constituent>
</constituent>
</constituent>
</constituent>
93
