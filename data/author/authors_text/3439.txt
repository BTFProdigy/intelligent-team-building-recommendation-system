Automatic Segmentation of Multiparty Dialogue
Pei-Yun Hsueh
School of Informatics
University of Edinburgh
Edinburgh, EH8 9LW, GB
p.hsueh@ed.ac.uk
Johanna D. Moore
School of Informatics
University of Edinburgh
Edinburgh, EH8 9LW, GB
J.Moore@ed.ac.uk
Steve Renals
School of Informatics
University of Edinburgh
Edinburgh, EH8 9LW, GB
s.renals@ed.ac.uk
Abstract
In this paper, we investigate the prob-
lem of automatically predicting segment
boundaries in spoken multiparty dialogue.
We extend prior work in two ways. We
first apply approaches that have been pro-
posed for predicting top-level topic shifts
to the problem of identifying subtopic
boundaries. We then explore the impact
on performance of using ASR output as
opposed to human transcription. Exam-
ination of the effect of features shows
that predicting top-level and predicting
subtopic boundaries are two distinct tasks:
(1) for predicting subtopic boundaries,
the lexical cohesion-based approach alone
can achieve competitive results, (2) for
predicting top-level boundaries, the ma-
chine learning approach that combines
lexical-cohesion and conversational fea-
tures performs best, and (3) conversational
cues, such as cue phrases and overlapping
speech, are better indicators for the top-
level prediction task. We also find that
the transcription errors inevitable in ASR
output have a negative impact on models
that combine lexical-cohesion and conver-
sational features, but do not change the
general preference of approach for the two
tasks.
1 Introduction
Text segmentation, i.e., determining the points at
which the topic changes in a stream of text, plays
an important role in applications such as topic
detection and tracking, summarization, automatic
genre detection and information retrieval and ex-
traction (Pevzner and Hearst, 2002). In recent
work, researchers have applied these techniques
to corpora such as newswire feeds, transcripts of
radio broadcasts, and spoken dialogues, in order
to facilitate browsing, information retrieval, and
topic detection (Allan et al, 1998; van Mulbregt
et al, 1999; Shriberg et al, 2000; Dharanipragada
et al, 2000; Blei and Moreno, 2001; Christensen
et al, 2005). In this paper, we focus on segmenta-
tion of multiparty dialogues, in particular record-
ings of small group meetings. We compare mod-
els based solely on lexical information, which are
common in approaches to automatic segmentation
of text, with models that combine lexical and con-
versational features. Because tasks as diverse as
browsing, on the one hand, and summarization, on
the other, require different levels of granularity of
segmentation, we explore the performance of our
models for two tasks: hypothesizing where ma-
jor topic changes occur and hypothesizing where
more subtle nested topic shifts occur.
In addition, because we do not wish to make the
assumption that high quality transcripts of meet-
ing records, such as those produced by human
transcribers, will be commonly available, we re-
quire algorithms that operate directly on automatic
speech recognition (ASR) output.
2 Previous Work
Prior research on segmentation of spoken ?docu-
ments? uses approaches that were developed for
text segmentation, and that are based solely on
textual cues. These include algorithms based on
lexical cohesion (Galley et al, 2003; Stokes et
al., 2004), as well as models using annotated fea-
tures (e.g., cue phrases, part-of-speech tags, coref-
erence relations) that have been determined to cor-
relate with segment boundaries (Gavalda et al,
1997; Beeferman et al, 1999). Blei et al (2001)
273
and van Mulbregt et al (1999) use topic lan-
guage models and variants of the hidden Markov
model (HMM) to identify topic segments. Recent
systems achieve good results for predicting topic
boundaries when trained and tested on human
transcriptions. For example, Stokes et al (2004)
report an error rate (Pk) of 0.25 on segmenting
broadcast news stories using unsupervised lexical
cohesion-based approaches. However, topic seg-
mentation of multiparty dialogue seems to be a
considerably harder task. Galley et al (2003) re-
port an error rate (Pk) of 0.319 for the task of pre-
dicting major topic segments in meetings.1
Although recordings of multiparty dialogue
lack the distinct segmentation cues commonly
found in text (e.g., headings, paragraph breaks,
and other typographic cues) or news story segmen-
tation (e.g., the distinction between anchor and
interview segments), they contain conversation-
based features that may be of use for automatic
segmentation. These include silence, overlap rate,
speaker activity change (Galley et al, 2003), and
cross-speaker linking information, such as adja-
cency pairs (Zechner and Waibel, 2000). Many
of these features can be expected to be compli-
mentary. For segmenting spontaneous multiparty
dialogue into major topic segments, Galley et
al. (2003) have shown that a model integrating lex-
ical and conversation-based features outperforms
one based on solely lexical cohesion information.
However, the automatic segmentation models
in prior work were developed for predicting top-
level topic segments. In addition, compared to
read speech and two-party dialogue, multi-party
dialogues typically exhibit a considerably higher
word error rate (WER) (Morgan et al, 2003).
We expect that incorrectly recognized words will
impair the robustness of lexical cohesion-based
approaches and extraction of conversation-based
discourse cues and other features. Past research
on broadcast news story segmentation using ASR
transcription has shown performance degradation
from 5% to 38% using different evaluation metrics
(van Mulbregt et al, 1999; Shriberg et al, 2000;
Blei and Moreno, 2001). However, no prior study
has reported directly on the extent of this degra-
dation on the performance of a more subtle topic
segmentation task and in spontaneous multiparty
dialogue. In this paper, we extend prior work by
1For the definition of Pk and Wd, please refer to section
3.4.1
investigating the effect of using ASR output on the
models that have previously been proposed. In ad-
dition, we aim to find useful features and models
for the subtopic prediction task.
3 Method
3.1 Data
In this study, we used the ICSI meeting corpus
(LDC2004S02). Seventy-five natural meetings of
ICSI research groups were recorded using close-
talking far field head-mounted microphones and
four desktop PZM microphones. The corpus in-
cludes human transcriptions of all meetings. We
added ASR transcriptions of all 75 meetings which
were produced by Hain (2005), with an average
WER of roughly 30%.
The ASR system used a vocabulary of 50,000
words, together with a trigram language model
trained on a combination of in-domain meeting
data, related texts found by web search, conver-
sational telephone speech (CTS) transcripts and
broadcast news transcripts (about 109 words in to-
tal), resulting in a test-set perplexity of about 80.
The acoustic models comprised a set of context-
dependent hidden Markov models, using gaussian
mixture model output distributions. These were
initially trained on CTS acoustic training data, and
were adapted to the ICSI meetings domain using
maximum a posteriori (MAP) adaptation. Further
adaptation to individual speakers was achieved us-
ing vocal tract length normalization and maximum
likelihood linear regression. A four-fold cross-
validation technique was employed: four recog-
nizers were trained, with each employing 75% of
the ICSI meetings as acoustic and language model
training data, and then used to recognize the re-
maining 25% of the meetings.
3.2 Fine-grained and coarse-grained topics
We characterize a dialogue as a sequence of top-
ical segments that may be further divided into
subtopic segments. For example, the 60 minute
meeting Bed003, whose theme is the planning of
a research project on automatic speech recognition
can be described by 4 major topics, from ?open-
ing? to ?general discourse features for higher lay-
ers? to ?how to proceed? to ?closing?. Depending
on the complexity, each topic can be further di-
vided into a number of subtopics. For example,
?how to proceed? can be subdivided to 4 subtopic
segments, ?segmenting off regions of features?,
274
?ad-hoc probabilities?, ?data collection? and ?ex-
perimental setup?.
Three human annotators at our site used a tai-
lored tool to perform topic segmentation in which
they could choose to decompose a topic into
subtopics, with at most three levels in the resulting
hierarchy. Topics are described to the annotators
as what people in a meeting were talking about.
Annotators were asked to provide a free text la-
bel for each topic segment; they were encour-
aged to use keywords drawn from the transcrip-
tion in these labels, and we provided some stan-
dard labels for non-content topics, such as ?open-
ing? and ?chitchat?, to impose consistency. For
our initial experiments with automatic segmenta-
tion at different levels of granularity, we flattened
the subtopic structure and consider only two levels
of segmentation?top-level topics and all subtopics.
To establish reliability of our annotation proce-
dure, we calculated kappa statistics between the
annotations of each pair of coders. Our analy-
sis indicates human annotators achieve ? = 0.79
agreement on top-level segment boundaries and
? = 0.73 agreement on subtopic boundaries. The
level of agreement confirms good replicability of
the annotation procedure.
3.3 Probabilistic models
Our goal is to investigate the impact of ASR er-
rors on the selection of features and the choice of
models for segmenting topics at different levels of
granularity. We compare two segmentation mod-
els: (1) an unsupervised lexical cohesion-based
model (LM) using solely lexical cohesion infor-
mation, and (2) feature-based combined models
(CM) that are trained on a combination of lexical
cohesion and conversational features.
3.3.1 Lexical cohesion-based model
In this study, we use Galley et al?s (2003)
LCSeg algorithm, a variant of TextTiling (Hearst,
1997). LCSeg hypothesizes that a major topic
shift is likely to occur where strong term repeti-
tions start and end. The algorithm works with two
adjacent analysis windows, each of a fixed size
which is empirically determined. For each utter-
ance boundary, LCSeg calculates a lexical cohe-
sion score by computing the cosine similarity at
the transition between the two windows. Low sim-
ilarity indicates low lexical cohesion, and a sharp
change in lexical cohesion score indicates a high
probability of an actual topic boundary. The prin-
cipal difference between LCSeg and TextTiling is
that LCSeg measures similarity in terms of lexical
chains (i.e., term repetitions), whereas TextTiling
computes similarity using word counts.
3.3.2 Integrating lexical and
conversation-based features
We also used machine learning approaches that
integrate features into a combined model, cast-
ing topic segmentation as a binary classification
task. Under this supervised learning scheme, a
training set in which each potential topic bound-
ary2 is labelled as either positive (POS) or neg-
ative (NEG) is used to train a classifier to pre-
dict whether each unseen example in the test set
belongs to the class POS or NEG. Our objective
here is to determine whether the advantage of in-
tegrating lexical and conversational features also
improves automatic topic segmentation at the finer
granularity of subtopic levels, as well as when
ASR transcriptions are used.
For this study, we trained decision trees (c4.5)
to learn the best indicators of topic boundaries.
We first used features extracted with the optimal
window size reported to perform best in Galley et
al. (2003) for segmenting meeting transcripts into
major topical units. In particular, this study uses
the following features: (1) lexical cohesion fea-
tures: the raw lexical cohesion score and proba-
bility of topic shift indicated by the sharpness of
change in lexical cohesion score, and (2) conver-
sational features: the number of cue phrases in
an analysis window of 5 seconds preceding and
following the potential boundary, and other inter-
actional features, including similarity of speaker
activity (measured as a change in probability dis-
tribution of number of words spoken by each
speaker) within 5 seconds preceding and follow-
ing each potential boundary, the amount of over-
lapping speech within 30 seconds following each
potential boundary, and the amount of silence be-
tween speaker turns within 30 seconds preceding
each potential boundary.
3.4 Evaluation
To compare to prior work, we perform a 25-
fold leave-one-out cross validation on the set of
25 ICSI meetings that were used in Galley et
2In this study, the end of each speaker turn is a potential
segment boundary. If there is a pause of more than 1 second
within a single speaker turn, the turn is divided at the begin-
ning of the pause creating a potential segment boundary.
275
al. (2003). We repeated the procedure to eval-
uate the accuracy using the lexical cohesion and
combined models on both human and ASR tran-
scriptions. In each evaluation, we trained the au-
tomatic segmentation models for two tasks: pre-
dicting subtopic boundaries (SUB) and predicting
only top-level boundaries (TOP).
3.4.1 Evaluation metrics
In order to be able to compare our results di-
rectly with previous work, we first report our re-
sults using the standard error rate metrics of Pk
and Wd. Pk (Beeferman et al, 1999) is the prob-
ability that two utterances drawn randomly from a
document (in our case, a meeting transcript) are in-
correctly identified as belonging to the same topic
segment. WindowDiff (Wd) (Pevzner and Hearst,
2002) calculates the error rate by moving a sliding
window across the meeting transcript counting the
number of times the hypothesized and reference
segment boundaries are different.
3.4.2 Baseline
To compute a baseline, we follow Kan (2003)
and Hearst (1997) in using Monte Carlo simu-
lated segments. For the corpus used as training
data in the experiments, the probability of a poten-
tial topic boundary being an actual one is approxi-
mately 2.2% for all subtopic segments, and 0.69%
for top-level topic segments. Therefore, the Monte
Carlo simulation algorithm predicts that a speaker
turn is a segment boundary with these probabilities
for the two different segmentation tasks. We exe-
cuted the algorithm 10,000 times on each meeting
and averaged the scores to form the baseline for
our experiments.
3.4.3 Topline
For the 24 meetings that were used in training,
we have top-level topic boundaries annotated by
coders at Columbia University (Col) and in our lab
at Edinburgh (Edi). We take the majority opinion
on each segment boundary from the Col annota-
tors as reference segments. For the Edi annota-
tions of top-level topic segments, where multiple
annotations exist, we choose one randomly. The
topline is then computed as the Pk score compar-
ing the Col majority annotation to the Edi annota-
tion.
4 Results
4.1 Experiment 1: Predicting top-level and
subtopic segment boundaries
The meetings in the ICSI corpus last approxi-
mately 1 hour and have an average of 8-10 top-
level topic segments. In order to facilitate meet-
ing browsing and question-answering, we believe
it is useful to include subtopic boundaries in or-
der to narrow in more accurately on the portion
of the meeting that contains the information the
user needs. Therefore, we performed experiments
aimed at analysing how the LM and CM seg-
mentation models behave in predicting segment
boundaries at the two different levels of granular-
ity.
All of the results are reported on the test set.
Table 1 shows the performance of the lexical co-
hesion model (LM) and the combined model (CM)
integrating the lexical cohesion and conversational
features discussed in Section 3.3.2.3 For the task
of predicting top-level topic boundaries from hu-
man transcripts, CM outperforms LM. LM tends
to over-predict on the top-level, resulting in a
higher false alarm rate. However, for the task of
predicting subtopic shifts, LM alone is consider-
ably better than CM.
Error Rate Transcript ASR
Models Pk Wd Pk Wd
LM SUB 32.31% 38.18% 32.91% 37.13%
(LCSeg) TOP 36.50% 46.57% 38.02% 48.18%
CM SUB 36.90% 38.68% 38.19% n/a
(C4.5) TOP 28.35% 29.52% 28.38% n/a
Table 1: Performance comparison of probabilistic
segmentation models.
In order to support browsing during the meeting
or shortly thereafter, automatic topic segmentation
will have to operate on the transcriptions produced
by ASR. First note from Table 1 that the prefer-
ence of models for segmentation at the two differ-
ent levels of granularity is the same for ASR and
human transcriptions. CM is better for predicting
top-level boundaries and LM is better for predict-
ing subtopic boundaries. This suggests that these
3We do not report Wd scores for the combined model
(CM) on ASR output because this model predicted 0 segment
boundaries when operating on ASR output. In our experi-
ence, CM routinely underpredicted the number of segment
boundaries, and due to the nature of the Wd metric, it should
not be used when there are 0 hypothesized topic boundaries.
276
are two distinct tasks, regardless of whether the
system operates on human produced transcription
or ASR output. Subtopics are better characterized
by lexical cohesion, whereas top-level topic shifts
are signalled by conversational features as well as
lexical-cohesion based features.
4.1.1 Effect of feature combinations:
predicting from human transcripts
Next, we wish to determine which features in
the combined model are most effective for predict-
ing topic segments at the two levels of granularity.
Table 2 gives the average Pk for all 25 meetings
in the test set, using the features described in Sec-
tion 3.3.2. We group the features into four classes:
(1) lexical cohesion-based features (LF): including
lexical cohesion value (LCV) and estimated pos-
terior probability (LCP); (2) interaction features
(IF): the amount of overlapping speech (OVR),
the amount of silence between speaker segments
(GAP), similarity of speaker activity (ACT); (3)
cue phrase feature (CUE); and (4) all available fea-
tures (ALL). For comparison we also report the
baseline (see Section 3.4.2) generated by Monte
Carlo algorithm (MC-B). All of the models us-
ing one or more features from these classes out-
perform the baseline model. A one-way ANOVA
revealed this reliable effect on the top-level seg-
mentation (F (7, 192) = 17.46, p < 0.01) as well
as on the subtopic segmentation task (F (7, 192) =
5.862, p < 0.01).
TRANSCRIPT Error Rate(Pk)
Feature set SUB TOP
MC-B 46.61% 48.43%
LF(LCV+LCP) 38.13% 29.92%
IF(ACT+OVR+GAP) 38.87% 30.11%
IF+CUE 38.87% 30.11%
LF+ACT 38.70% 30.10%
LF+OVR 38.56% 29.48%
LF+GAP 38.50% 29.87%
LF+IF 38.11% 29.61%
LF+CUE 37.46% 29.18%
ALL(LF+IF+CUE) 36.90% 28.35%
Table 2: Effect of different feature combinations
for predicting topic boundaries from human tran-
scripts. MC-B is the randomly generated baseline.
As shown in Table 2, the best performing model
for predicting top-level segments is the one us-
ing all of the features (ALL). This is not surpris-
ing, because these were the features that Galley
et al (2003) found to be most effective for pre-
dicting top-level segment boundaries in their com-
bined model. Looking at the results in more de-
tail, we see that when we begin with LF features
alone and add other features one by one, the only
model (other than ALL) that achieves significant4
improvement (p < 0.05) over LF is LF+CUE,
the model that combines lexical cohesion features
with cue phrases.
When we look at the results for predicting
subtopic boundaries, we again see that the best
performing model is the one using all features
(ALL). Models using lexical-cohesion features
alone (LF) and lexical cohesion features with cue
phrases (LF+CUE) both yield significantly better
results than using interactional features (IF) alone
(p < 0.01), or using them with cue phrase features
(IF+CUE) (p < 0.01). Again, none of the interac-
tional features used in combination with LF sig-
nificantly improves performance. Indeed, adding
speaker activity change (LF+ACT) degrades the
performance (p < 0.05).
Therefore, we conclude that for predicting both
top-level and subtopic boundaries from human
transcriptions, the most important features are the
lexical cohesion based features (LF), followed
by cue phrases (CUE), with interactional features
contributing to improved performance only when
used in combination with LF and CUE.
However, a closer look at the Pk scores in Ta-
ble 2, adds further evidence to our hypothesis that
predicting subtopics may be a different task from
predicting top-level topics. Subtopic shifts oc-
cur more frequently, and often without clear con-
versational cues. This is suggested by the fact
that absolute performance on subtopic prediction
degrades when any of the interactional features
are combined with the lexical cohesion features.
In contrast, the interactional features slightly im-
prove performance when predicting top-level seg-
ments. Moreover, the fact that the feature OVR
has a positive impact on the model for predicting
top-level topic boundaries, but does not improve
the model for predicting subtopic boundaries re-
veals that having less overlapping speech is a more
prominent phenomenon in major topic shifts than
4Because we do not wish to make assumptions about the
underlying distribution of error rates, and error rates are not
measured on an interval level, we use a non-parametric sign
test throughout these experiments to compute statistical sig-
nificance.
277
in subtopic shifts.
4.1.2 Effect of feature combinations:
predicting from ASR output
Features extracted from ASR transcripts are dis-
tinct from those extracted from human transcripts
in at least three ways: (1) incorrectly recognized
words incur erroneous lexical cohesion features
(LF), (2) incorrectly recognized words incur erro-
neous cue phrase features (CUE), and (3) the ASR
system recognizes less overlapping speech (OVR).
In contrast to the finding that integrating conver-
sational features with lexical cohesion features is
useful for prediction from human transcripts, Ta-
ble 3 shows that when operating on ASR output,
neither adding interactional nor cue phrase fea-
tures improves the performance of the model using
only lexical cohesion features. In fact, the model
using all features (ALL) is significantly worse than
the model using only lexical cohesion based fea-
tures (LF). This suggests that we must explore new
features that can lessen the perplexity introduced
by ASR outputs in order to train a better model.
ASR Error Rate(Pk)
Feature set SUB TOP
MC-B 43.41% 45.22%
LF(LCV+LCP) 36.83% 25.27%
IF(ACT+OVR+GAP) 36.83% 25.27%
IF+CUE 36.83% 25.27%
LF+GAP 36.67% 24.62%
LF+IF 36.83% 28.24%
LF+CUE 37.42% 25.27%
ALL(LF+IF+CUE) 38.19% 28.38%
Table 3: Effect of different feature combinations
for predicting topic boundaries from ASR output.
4.2 Experiment 2: Statistically learned cue
phrases
In prior work, Galley et al (2003) empirically
identified cue phrases that are indicators of seg-
ment boundaries, and then eliminated all cues that
had not previously been identified as cue phrases
in the literature. Here, we conduct an experiment
to explore how different ways of identifying cue
phrases can help identify useful new features for
the two boundary prediction tasks.
In each fold of the 25-fold leave-one-out cross
validation, we use a modified5 Chi-square test to
5In order to satisfy the mathematical assumptions under-
calculate statistics for each word (unigram) and
word pair (bi-gram) that occurred in the 24 train-
ing meetings. We then rank unigrams and bigrams
according to their Chi-square scores, filtering out
those with values under 6.64, the threshold for the
Chi-square statistic at the 0.01 significance level.
The unigrams and bigrams in this ranked list are
the learned cue phrases. We then use the occur-
rence counts of cue phrases in an analysis window
around each potential topic boundary in the test
meeting as a feature.
Table 4 shows the performance of models that
use statistically learned cue phrases in their feature
sets compared with models using no cue phrase
features and Galley?s model, which only uses cue
phrases that correspond to those identified in the
literature (Col-cue). We see that for predicting
subtopics, models using the cue word features
(1gram) and the combination of cue words and bi-
grams (1+2gram) yield a 15% and 8.24% improve-
ment over models using no cue features (NOCUE)
(p < 0.01) respectively, while models using only
cue phrases found in the literature (Col-cue) im-
prove performance by just 3.18%. In contrast, for
predicting top-level topics, the model using cue
phrases from the literature (Col-cue) achieves a
4.2% improvement, and this is the only model that
produces statistically significantly better results
than the model using no cue phrases (NOCUE).
The superior performance of models using statis-
tically learned cue phrases as features for predict-
ing subtopic boundaries suggests there may exist a
different set of cue phrases that serve as segmen-
tation cues for subtopic boundaries.
5 Discussion
As observed in the corpus of meetings, the lack
of macro-level segment units (e.g., story breaks,
paragraph breaks) makes the task of segmenting
spontaneous multiparty dialogue, such as meet-
ings, different from segmenting text or broadcast
news. Compared to the task of segmenting expos-
itory texts reported in Hearst (1997) with a 39.1%
chance of each paragraph end being a target topic
boundary, the chance of each speaker turn be-
ing a top-level or sub-topic boundary in our ICSI
corpus is just 2.2% and 0.69%. The imbalanced
class distribution has a negative effect on the per-
lying the test, we removed cases with an expected value that
is under a threshold (in this study, we use 1), and we apply
Yate?s correction, (|ObservedV alue?ExpectedV alue| ?
0.5)2/ExpectedV alue.
278
NOCUE Col-cue 1gram 2gram 1+2gram MC-B Topline
SUB 38.11% 36.90% 32.39% 36.86% 34.97% 46.61% n/a
TOP 29.61% 28.35% 28.95% 29.20% 29.27% 48.43% 13.48%
Table 4: Performance of models trained with cue phrases from the literature (Col-cue) and cue phrases
learned from statistical tests, including cue words (1gram), cue word pairs (2gram), and cue phrases
composed of both words and word pairs (1+2gram). NOCUE is the model using no cue phrase features.
The Topline is the agreement of human annotators on top-level segments.
0 10 20 30 40 50 60 70 80
0.26
0.28
0.3
0.32
0.34
0.36
0.38
0.4
0.42
0.44
Training Set Size (In meetings)
E
rr
or
 R
at
e 
(P
k)
TRAN?ALL
TRAN?TOP
ASR?ALL
ASR?TOP
Figure 1: Performance of the combined model
over the increase of the training set size.
formance of machine learning approaches. In a
pilot study, we investigated sampling techniques
that rebalance the class distribution in the train-
ing set. We found that sampling techniques pre-
viously reported in Liu et al(2004) as useful for
dealing with an imbalanced class distribution in
the task of disfluency detection and sentence seg-
mentation do not work for this particular data set.
The implicit assumption of some classifiers (such
as pruned decision trees) that the class distribution
of the test set matches that of the training set, and
that the costs of false positives and false negatives
are equivalent, may account for the failure of these
sampling techniques to yield improvements in per-
formance, when measured using Pk and Wd.
Another approach that copes with the im-
balanced class prediction problem but does not
change the natural class distribution is to increase
the size of the training set. We conducted an ex-
periment in which we incrementally increased the
training set size by randomly choosing ten meet-
ings each time until all meetings were selected.
We executed the process three times and averaged
the scores to obtain the results shown in Figure 1.
However, increasing training set size adds to the
perplexity in the training phase. We see that in-
creasing the size of the training set only improves
the accuracy of segment boundary prediction for
predicting top-level topics on ASR output. The
figure also indicates that training a model to pre-
dict top-level boundaries requires no more than fif-
teen meetings in the training set to reach a reason-
able level of performance.
6 Conclusions
Discovering major topic shifts and finding nested
subtopics are essential for the success of speech
document browsing and retrieval. Meeting records
contain rich information, in both content and con-
versation behavioral form, that enable automatic
topic segmentation at different levels of granular-
ity. The current study demonstrates that the two
tasks ? predicting top-level and subtopic bound-
aries ? are distinct in many ways: (1) for pre-
dicting subtopic boundaries, the lexical cohesion-
based approach achieves results that are com-
petitive with the machine learning approach that
combines lexical and conversational features; (2)
for predicting top-level boundaries, the machine
learning approach performs the best; and (3) many
conversational cues, such as overlapping speech
and cue phrases discussed in the literature, are
better indicators for top-level topic shifts than
for subtopic shifts, but new features such as cue
phrases can be learned statistically for the subtopic
prediction task. Even in the presence of a rela-
tively higher word error rate, using ASR output
makes no difference to the preference of model for
the two tasks. The conversational features also did
not help improve the performance for predicting
from ASR output.
In order to further identify useful features for
automatic segmentation of meetings at different
levels of granularity, we will explore the use of
279
multimodal, i.e., acoustic and visual, cues. In ad-
dition, in the current study, we only extracted fea-
tures from within the analysis windows immedi-
ately preceding and following each potential topic
boundary; we will explore models that take into
account features of longer range dependencies.
7 Acknowledgements
Many thanks to Jean Carletta for her invaluable
help in managing the data, and for advice and
comments on the work reported in this paper.
Thanks also to the AMI ASR group for produc-
ing the ASR transcriptions, and to the anonymous
reviewers for their helpful comments. This work
was supported by the European Union 6th FWP
IST Integrated Project AMI (Augmented Multi-
party Interaction, FP6-506811).
References
J. Allan, J.G. Carbonell, G. Doddington, J. Yamron,
and Y. Yang. 1998. Topic detection and tracking pi-
lot study: Final report. In Proceedings of the DARPA
Broadcast News Transcription and Understanding
Workshop.
D. Beeferman, A. Berger, and J. Lafferty. 1999. Statis-
tical models for text segmentation. Machine Learn-
ing, 34:177?210.
D. M. Blei and P. J. Moreno. 2001. Topic segmentation
with an aspect hidden Markov model. In Proceed-
ings of the 24th Annual International ACM SIGIR
Conference on Research and Development in Infor-
mation Retrieval. ACM Press.
H. Christensen, B. Kolluru, Y. Gotoh, and S. Renals.
2005. Maximum entropy segmentation of broad-
cast news. In Proceedings of the IEEE International
Conference on Acoustic, Speech, and Signal Pro-
cessing, Philadelphia, USA.
S. Dharanipragada, M. Franz, J.S. McCarley, K. Pap-
ineni, S. Roukos, T. Ward, and W. J. Zhu. 2000.
Statistical methods for topic segmentation. In Pro-
ceedings of the International Conference on Spoken
Language Processing, pages 516?519.
M. Galley, K. McKeown, E. Fosler-Lussier, and
H. Jing. 2003. Discourse segmentation of multi-
party conversation. In Proceedings of the 41st An-
nual Meeting of the Association for Computational
Linguistics.
M. Gavalda, K. Zechner, and G. Aist. 1997. High per-
formance segmentation of spontaneous speech using
part of speech and trigger word information. In Pro-
ceedings of the Fifth ANLP Conference, pages 12?
15.
T. Hain, J. Dines, G. Garau, M. Karafiat, D. Moore,
V. Wan, R. Ordelman, and S. Renals. 2005. Tran-
scription of conference room meetings: an investi-
gation. In Proceedings of Interspeech.
M. Hearst. 1997. Texttiling: Segmenting text into mul-
tiparagraph subtopic passages. Computational Lin-
guistics, 25(3):527?571.
M. Kan. 2003. Automatic text summarization as
applied to information retrieval: Using indicative
and informative summaries. Ph.D. thesis, Columbia
University, New York USA.
Y. Liu, E. Shriberg, A. Stolcke, and M. Harper. 2004.
Using machine learning to cope with imbalanced
classes in natural sppech: Evidence from sentence
boundary and disfluency detection. In Proceedings
of the Intl. Conf. Spoken Language Processing.
N. Morgan, D. Baron, S. Bhagat, H. Carvey,
R. Dhillon, J. Edwards, D. Gelbart, A. Janin,
A. Krupski, B. Peskin, T. Pfau, E. Shriberg, A. Stol-
cke, , and C. Wooters. 2003. Meetings about meet-
ings: research at icsi on speech in multiparty conver-
sations. In Proceedings of the IEEE International
Conference on Acoustic, Speech, and Signal Pro-
cessing.
L. Pevzner and M. Hearst. 2002. A critique and im-
provement of an evaluation metric for text segmen-
tation. Computational Linguistics, 28(1):19?36.
E. Shriberg, A. Stolcke, D. Hakkani-tur, and G. Tur.
2000. Prosody-based automatic segmentation of
speech into sentences and topics. Speech Commu-
nications, 31(1-2):127?254.
N. Stokes, J. Carthy, and A.F. Smeaton. 2004. Se-
lect: a lexical cohesion based news story segmenta-
tion system. AI Communications, 17(1):3?12, Jan-
uary.
P. van Mulbregt, J. Carp, L. Gillick, S. Lowe, and
J. Yamron. 1999. Segmentation of automatically
transcribed broadcast news text. In Proceedings of
the DARPA Broadcast News Workshop, pages 77?
80. Morgan Kaufman Publishers.
Klaus Zechner and Alex Waibel. 2000. DIASUMM:
Flexible summarization of spontaneous dialogues in
unrestricted domains. In Proceedings of COLING-
2000, pages 968?974.
280
Proceedings of NAACL HLT 2007, pages 25?32,
Rochester, NY, April 2007. c?2007 Association for Computational Linguistics
What Decisions Have You Made: Automatic Decision Detection in
Conversational Speech
Pei-Yun Hsueh
School of Informatics
University of Edinburgh
Edinburgh EH9 8WL, UK
p.hsueh@ed.ac.uk
Johanna Moore
School of Informatics
University of Edinburgh
Edinburgh EH9 8WL, UK
J.Moore@ed.ac.uk
Abstract
This study addresses the problem of au-
tomatically detecting decisions in conver-
sational speech. We formulate the prob-
lem as classifying decision-making units
at two levels of granularity: dialogue acts
and topic segments. We conduct an em-
pirical analysis to determine the charac-
teristic features of decision-making dia-
logue acts, and train MaxEnt models using
these features for the classification tasks.
We find that models that combine lexi-
cal, prosodic, contextual and topical fea-
tures yield the best results on both tasks,
achieving 72% and 86% precision, respec-
tively. The study also provides a quantita-
tive analysis of the relative importance of
the feature types.
1 Introduction
Making decisions is an important aspect of conver-
sations in collaborative work. In the context of meet-
ings, the proposed argumentative models, e.g., in
Pallotta et al (2005) and Rienks et al (2005), have
specified decisions as an essential outcome of meet-
ings. Whittaker et al (2005) have also described
how reviewing decisions is critical to the re-use of
meeting recordings. For example, a new engineer
who just get assigned to a project will need to know
what major decisions have been made in previous
meetings. Unless all decisions are recorded in meet-
ing minutes or annotated in the speech recordings, it
is difficult to locate the decision points by the brows-
ing and playback utilities alone.
Banerjee and Rudnicky (2005) have shown that
it is easier for users to retrieve the information
they seek if the meeting record includes information
about topic segmentation, speaker role, and meet-
ing state (e.g., discussion, presentation, briefing). To
assist users in identifying or revisiting decisions in
meeting archives, our goal is to automatically iden-
tify the dialogue acts and segments where decisions
are made. Because reviewing decisions is indis-
pensable in collaborative work, automatic decision
detection is expected to lend support to computer-
assisted meeting tracking and understanding (e.g.,
assisting in the fulfilment of the decisions made in
the meetings) and the development of group infor-
mation management applications (e.g., constructing
group memory).
2 Related Work
Spontaneous face-to-face dialogues in meetings vi-
olate many assumptions made by techniques pre-
viously developed for broadcast news (e.g., TDT
and TRECVID), telephone conversations (e.g.,
Switchboard), and human-computer dialogues (e.g.,
DARPA Communicator). In order to develop
techniques for understanding multiparty dialogues,
smart meeting rooms have been built at several insti-
tutes to record large corpora of meetings in natural
contexts, including CMU (Waibel et al, 2001), LDC
(Cieri et al, 2002), NIST (Garofolo et al, 2004),
ICSI (Janin et al, 2003), and in the context of the
IM2/M4 project (Marchand-Mailet, 2003). More
recently, scenario-based meetings, in which partic-
25
ipants are assigned to different roles and given spe-
cific tasks, have been recorded in the context of
the CALO project (the Y2 Scenario Data) (CALO,
2003) and the AMI project (Carletta et al, 2005).
The availability of meeting corpora has enabled
researchers to begin to develop descriptive models
of meeting discussions. Some researchers are mod-
elling the dynamics of the meeting, exploiting dia-
logue models previously proposed for dialogue man-
agement. For example, Niekrasz et al (2005) use
the Issue-Based Information System (IBIS) model
(Kunz and Ritte, 1970) to incorporate the history
of dialogue moves into the Multi-Modal Discourse
(MMD) ontology. Other researchers are modelling
the content of the meeting using the type of struc-
tures proposed in work on argumentation. For ex-
ample, Rienks et al (2005) have developed an ar-
gument diagramming scheme to visualize the rela-
tions (e.g., positive, negative, uncertain) between ut-
terances (e.g., statement, open issue), and Marchand
et al (2003) propose a schema to model different ar-
gumentation acts (e.g., accept, request, reject) and
their organization and synchronization. Decisions
are often seen as a by-product of these models.
Automatically extracting these argument mod-
els is a challenging task. However, researchers
have begun to make progress towards this goal.
For example, Gatica et al (2005) and Wrede and
Shriberg (2003) automatically identify the level of
emotion in meeting spurts (e.g., group level of in-
terest, hot spots). Other researchers have developed
models for detecting agreement and disagreement
in meetings, using models that combine lexical fea-
tures with prosodic features (e.g., pause, duration,
F0, speech rate) (Hillard et al, 2003) and struc-
tural information (e.g., the previous and following
speaker) (Galley et al, 2004). More recently, Purver
et al (2006) have tackled the problem of detecting
one type of decision, namely action items, which
embody the transfer of group responsibility. How-
ever, no prior work has addressed the problem of au-
tomatically identifying decision-making units more
generally in multiparty meetings. Moreover, no pre-
vious research has provided a quantitative account
of the effects of different feature types on the task of
automatic decision detection.
3 Research Goal
Our aim is to develop models for automatically de-
tecting segments of conversation that contain deci-
sions directly from the audio recordings and tran-
scripts of the meetings, and to identify the feature
combinations that are most effective for this task.
Meetings can be viewed at different levels of
granularity. In this study, we first consider how to
detect the dialogue acts that contain decision-related
information (DM DAs). Since it is often difficult
to interpret a decision without knowing the current
topic of discussion, we are also interested in detect-
ing decision-making segments at a coarser level of
granularity: topic segments. The task of automatic
decision detection can therefore be divided into two
subtasks: detecting DM DAs and detecting decision-
making topic segments (DM Segments).
In this study we propose to first empirically
identify the features that are most characteristic of
decision-making dialogue acts and then computa-
tionally integrate the characteristic features to locate
the DM DAs in meeting archives. For the latter task,
previous research on automatic meeting understand-
ing and tracking has commonly utilized a classifica-
tion framework, in which variants of generative and
conditional models are computed directly from data.
In this study, we use a Maximum Entropy (MaxEnt)
classifier to combine the decision characteristic fea-
tures to predict DM DAs and DM Segments.
4 Data
4.1 Decision Annotation
In this study, we use a set of 50 scenario-driven
meetings (approximately 37,400 dialogue acts) that
have been segmented into dialogue acts and anno-
tated with decision information in the AMI meet-
ing corpus. These meetings are driven by a sce-
nario, wherein four participants play the role of
Project Manager, Marketing Expert, Industrial De-
signer, and User Interface Designer in a design team
in a series of four meetings. Each series of meet-
ing recordings uses four distinctive speakers differ-
ent from other series. The corpus includes manual
transcripts for all meetings. It also comes with in-
dividual sound files recorded by close-talking head-
mounted microphones and cross-talking sound files
recorded by desktop microphones.
26
4.1.1 Decision-Making Dialogue Acts
In fact, it is difficult to determine whether a di-
alogue act contains information relevant to any de-
cision point without knowing what decisions have
been made in the meeting. Therefore, in this study
DM DAs are annotated in a two-phase process:
First, annotators are asked to browse through the
meeting record and write an abstractive summary
directed to the project manager about the decisions
that have been made in the meeting. Next, another
group of three annotators are asked to produce ex-
tractive summaries by selecting a subset (around
10%) of dialogue acts which form a summary of this
meeting for the absent manager to understand what
has transpired in the meeting.
Finally, this group of annotators are asked to go
through the extractive dialogue acts one by one and
judge whether they support any of the sentences in
the decision section of the abstractive summary; if a
dialogue act is related to any sentence in the decision
section, a ?decision link? from the dialogue act to
the decision sentence is added. For those extracted
dialogue acts that do not have any closely related
sentence, the annotators are not obligated to specify
a link. We then label the dialogue acts that have one
or more decision links as DM DAs.
In the 50 meetings we used for the experiments,
the annotators have on average found four decisions
per meeting and specified around two decision links
to each sentence in the decision summary section.
Overall, 554 out of 37,400 dialogue acts have been
annotated as DM DAs, accounting for 1.4% of all di-
alogue acts in the data set and 12.7% of the orginal
extractive summary (which is consisted of the ex-
tracted dialogue acts). An earlier analysis has es-
tablished the intercoder reliability of the two-phase
process at the level of kappa ranging from 0.5 to
0.8. In this round of experiment, for each meeting
in the 50-meeting dataset we randomly choose the
DM DA annotation of one annotator as the sourec of
its ground truth data.
4.1.2 Decision-Making Topic Segments
Topic segmentation has also been annotated for
the AMI meeting corpus. Annotators had the free-
dom to mark a topic as subordinated (down to two
levels) wherever appropriate. As the AMI meetings
are scenario-driven, annotators are expected to find
that most topics recur. Therefore, they are given a
standard set of topic descriptions that can be used
as labels for each identified topic segment. Annota-
tors will only add a new label if they cannot find a
match in the standard set. The AMI scenario meet-
ings contain around 14 topic segments per meeting.
Each segment lasts on average 44 dialogue acts long
and contains two DM DAs.
DM Segments are operationalized as topic seg-
ments that contain one or more DM DAs. Over-
all, 198 out of 623 (31.78%) topic segments in the
50-meeting dataset are DM Segments. As the meet-
ings we use are driven by a predetermined agenda,
we expect to find that interlocutors are more likely
to reach decisions when certain topics are brought
up. Analysis shows that some topics are indeed more
likely to contain decisions than others. For example,
80% of the segments labelled as Costing and 58%
of those labelled Budget are DM Segments, whereas
only 7% of the Existing Product segments and none
of the Trend-Watching segments are DM Segments.
Functional segments, such as Chitchat, Opening and
Closing, almost never include decisions.
4.2 Features Used
To provide a qualitative account of the effect of dif-
ferent feature types on the task of automatic decision
detection, we have conducted empirical analysis on
four major types of features: lexical, prosodic, con-
textual and topical features.
4.2.1 Lexical Features
Previous research has studied lexical differences
(i.e., occurrence counts of N-grams) between var-
ious aspects of speech, such as topics (Hsueh and
Moore, 2006), speaker gender (Boulis and Osten-
dorf, 2005), and story-telling conversation (Gordon
and Ganesan, 2005). As we expect that lexical dif-
ferences also exist in DM conversations, we gener-
ated language models from the DM Dialogue Acts in
the corpus. The comparison of the language models
generated from the DM dialogue Acts and the rest of
the conversations shows that some differences exist
between the two models: (1) decision making con-
versations are more likely to contain we than I and
You; (2) in decision-making conversations there are
more explicit mentions of topical words, such as ad-
vanced chips and functional design; (3) in decision-
27
Type Feature
Duration Number of words spoken in current, previous and next subdialogue
Duration (in seconds) of current, previous and next subdialogue
Pause Amount of silence (in seconds) preceding a subdialogue
Amount of silence (in seconds) following a subdialogue
Speech rate Number of words spoken per second in current, previous and next subdialogue
Number of syllables per second in current, previous and next subdialogue
Energy Overall energy level
Average energy level in the first, second, third, and fourth quarter of a subdialogue
Pitch Maximum and minimum F0, overall slope and variance
Slope and variance at the first 100 and 200 ms and last 100 and 200 ms,
at the first and second half, and at each quarter of the subdialogue
Table 1: Prosodic features used in this study.
making conversations, there are fewer negative ex-
pressions, such as I don?t think and I don?t know.
In an exploratory study using unigrams, as well as
bigrams and trigrams, we found that using bigrams
and trigrams does not improve the accuracy of clas-
sifying DM DAs, and therefore we include only uni-
grams in the set of lexical features in the experiments
reported in Section 6.
4.2.2 Prosodic Features
Functionally, prosodic features, i.e., energy, and
fundamental frequency (F0), are indicative of seg-
mentation and saliency. In this study, we follow
Shriberg and Stolcke?s (2001) direct modelling ap-
proach to manifest prosodic features as duration,
pause, speech rate, pitch contour, and energy level.
We utilize the individual sound files provided in the
AMI corpus. To extract prosodic features from the
sound files, we use the Snack Sound Toolkit to com-
pute a list of pitch and energy values delimited by
frames of 10 ms, using the normalized cross correla-
tion function. Then we apply a piecewise linearisa-
tion procedure to remove the outliers and average the
linearised values of the units within the time frame
of a word. Pitch contour of a dialogue act is ap-
proximated by measuring the pitch slope at multi-
ple points within the dialogue act, e.g., the first and
last 100 and 200 ms. The rate of speech is calcu-
lated as both the number of words spoken per sec-
ond and the number of syllables per second. We
use Festival?s speech synthesis front-end to return
phonemes and syllabification information. An ex-
ploratory study has shown the benefits of including
immediate prosodic contexts, and thus we also in-
clude prosodic features of the immediately preced-
ing and following dialogue acts. Table 1 contains
a list of automatically generated prosodic features
used in this study.
4.2.3 Contextual Features
From our qualitative analysis, we expect that con-
textual features specific to the AMI corpus, such as
the speaker role (i.e., PM, ME, ID, UID) and meet-
ing type (i.e., kick-off, conceptual design, functional
design, detailed design) to be characteristic of the
DM DAs. Analysis shows that (1) participants as-
signed to the role of PM produce 42.5% of the DM
DAs, and (2) participants make relatively fewer de-
cisions in the kick-off meetings. Analysis has also
demonstrated a difference in the type, the reflexiv-
ity1 and the number of addressees, between the DM
DAs and the non-DM DAs. For example, dialogue
acts of type inform, suggest, elicit assessment and
elicit inform are more likely to be DM DAs.
We have also found that immediately preceding
and following dialogue acts are important for iden-
tifying DM DAs. For example, stalls and frag-
ments preceding and fragments following a DM
DA are more likely than for non-DM DAs.2 In
1According to the annotation guideline, the reflexivity re-
flects on how the group is carrying on the task. In this case, the
interlocutors pause to evaluate the group performance less often
when it comes to decision making.
2STALL is where people start talking before they are ready,
or keep speaking when they haven?t figured out what to say;
FRAGMENT is the segment which is not really speech or is
unclear enough to be transcribed, or where the speaker did not
28
contrast, there is a lower chance of seeing sug-
gest and elicit-type DAs (i.e., elicit-inform, elicit-
suggestion, elicit-assessment) in the preceding and
following DM DAs.
4.2.4 Topical Features
As reported in Section 4.1.2, we find that inter-
locutors are more likely to reach decisions when cer-
tain topics are brought up. Also, we expect decision-
making conversations to take place towards the end
of a topic segment. Therefore, in this study we in-
clude the following features: the label of the current
topic segment, the position of the DA in a topic seg-
ment (measured in words, in seconds, and in %), the
distance to the previous topic shift (both at the top-
level and sub-topic level)(measured in seconds), the
duration of the current topic segment (both at the
top-level and sub-topic level)(measured in seconds).
5 Experiment
5.1 Classifying DM DAs
Detecting DM DAs is the first step of automatic de-
cision detection. For this purpose, we trained Max-
Ent models to classify each unseen sample as ei-
ther DM DA (POS) or non-DM DA (NEG). We per-
formed a 5-fold cross validation on the set of 50
meetings. In each fold, we trained MaxEnt mod-
els from the feature combinations in the training
set, wherein each of the extracted dialogue acts has
been labelled as either POS or NEG. Then, the
models were used to classify unseen instances in
the test set as either POS or NEG. In Section 4.2,
we described the four major types of features used
in this study: unigrams (LX1), prosodic (PROS),
contextual (CONT), and topical (TOPIC) features.
For comparison, we report the naive baseline ob-
tained by training the models on the prosodic fea-
tures alone, since the prosodic features can be gen-
erated fully automatically. The different combina-
tions of features we used for training models can
be divided into the following four groups: (A) us-
ing prosodic features alone (BASELINE), (B) us-
ing lexical, contextual and topical features alone
(LX1, CONT, TOPIC); (C) using all available fea-
tures except one of the four types of features (ALL-
LX1, ALL-PROS, ALL-CONT, ALL-TOPIC); and
get far enough to express the intention.
(D) using all available features (ALL).
6 Results
6.1 Classifying DM Segments
Detecting DM segments is necessary for interpret-
ing decisions, as it provides information about the
current topic of discussion. Here we combine the
predictions of the DM DAs to classify each unseen
topic segment in the test set as either DM Segment
(POS) or non-DM Segment (NEG). Recall that we
defined a DM Segment as a segment that contains
one or more hypothesized DM DAs. The task of de-
tecting DM Segments can thus be viewed as that of
detecting DM Dialogue Acts in a wider window.
6.2 EXP1: Classifying DM DAs
Table 2 reports the performance on the test set. The
results show that models trained with all features
(ALL), including lexical, prosodic, contextual and
topical features, yield substantially better perfor-
mance than the baseline on the task of detecting DM
DAs. We carried out a one-way ANOVA to exam-
ine the effect of different feature combinations on
overall accuracy (F1). The ANOVA suggests a reli-
able effect of feature type (F (9, 286) = 3.44; p <
0.001). Rows 2-4 in Table 2 report the performance
of models in Group B that are trained with a sin-
gle type of feature. Lexical features are the most
predictive features when used alone. We performed
sign tests to determine whether there are statistical
differences among these models and the baseline.
We find that when used alone, only lexical features
(LX1) can train a better model than the baseline
(p < 0.001). However, none of these models yields
a comparable performance to the ALL model.
To study the relative effect of the different fea-
ture types, Rows 5-8 in the table report the perfor-
mance of models in Group C, which are trained with
all available features except LX1, PROS, CONT and
TOPIC features respectively. The amount of degra-
dation in the overall accuracy (F1) of each of the
models in relation to that of the ALL model indi-
cates the contribution of the feature type that has
been left out of the model. We performed sign tests
to examine the differences among these models and
the ALL model. We find that the ALL model out-
performs all of these models (p < 0.001) except
29
Exact Match Lenient Match
Accuracy Precision Recall F1 Precision Recall F1
BASELINE(PROS) 0.32 0.06 0.1 0.32 0.1 0.15
LX1 0.53 0.3 0.38 0.6 0.43 0.5
CONT 0 0 0 0 0 0
TOPIC 0.49 0.11 0.17 0.57 0.11 0.17
ALL-PROS 0.63 0.47 0.54 0.71 0.57 0.63
ALL-LX1 0.61 0.34 0.44 0.65 0.43 0.52
ALL-CONT 0.66 0.62 0.64 0.69 0.68 0.69
ALL-TOPIC 0.72 0.54 0.62 0.7 0.52 0.59
ALL 0.72 0.54 0.62 0.76 0.64 0.7
Table 2: Effects of different combinations of features on detecting DM DAs.
the model trained by leaving out contextual features
(ALL-CONT). A closer investigation of the preci-
sion and recall of the ALL-CONT model shows that
the contextual features are detrimental to recall but
beneficial for precision. The mixed result is due to
the fact that models trained with contextual features
are tailored to recognize particular types of DM di-
alogue acts. Therefore, using these contextual fea-
tures improves the precision for these types of DM
DAs but reduces the overall recognition accuracy.
The last three columns of Table 2 are the results
obtained using a lenient match measure, allowing a
window of 10 seconds preceding and following a hy-
pothesized DM DA for recognition. The better re-
sults show that there is room for ambiguity in the
assessment of the exact timing of DM DAs.
6.3 EXP2: Classifying DM Segments
As expected, the results in Table 3 are better than
those reported in Table 2, achieving at best 83%
overall accuracy.The model that combines all fea-
tures (ALL) yields significantly better results than
the baseline. The ANOVA shows a reliable effect of
different feature types on the task of detecting DM
Segments (F (11, 284) = 2.33; p <= 0.01). Rows
2-4 suggest that lexical features are the most pre-
dictive in terms of overall accuracy. Sign tests con-
firm the advantage of using lexical features (LX1)
over the baseline (PROS) (p < 0.05). Interest-
ingly, the model that is trained with topical features
alone (TOPIC) yields substantially better precision
(p < 0.001). The increase from 49% precision for
the task of detecting DM DAs (in Table 2) to 91%
for that of detecting DM Segments stems from the
fact that decisions are more likely to occur in certain
types of topic segments. In turn, training models
with topical features helps eliminate incorrect pre-
dictions of DM DAs in these types of topic seg-
ments. However, the accuracy gain of the TOPIC
model on detecting certain types of DM Segments
does not extend to all types of DM Segments. This is
shown by the significantly lower recall of the TOPIC
model over the baseline (p < 0.001).
Finally, Rows 5-8 report the performance of the
models in Group (C) on the task of detecting DM
Segments. Sign tests again show that the model that
is trained with all available features (ALL) outper-
forms the models that leave out lexical, prosodic,
or topical features (p < 0.05). However, the ALL
model does not outperform the model that leaves out
contextual features. In addition, the contextual fea-
tures degrade the recall but improve the precision
on the task of detecting DM Segments. Calculat-
ing how much the overall accuracy of the models in
Group C degrades from the ALL model shows that
the most predictive features are the lexical features,
followed by the topical and prosodic features.
7 Discussion
As suggested by the mixed results obtained by the
model that is trained without the contextual features,
the two-phase decision annotation procedure (as de-
scribed in Section 4.1) may have caused annota-
tors to select dialogue acts that serve different func-
tional roles in a decision-making process in the set
of DM DAs. For example, in the dialogue shown
30
Exact Match
Accuracy Precision Recall F1
BASELINE(PROS) 0.67 0.39 0.49
LX1 0.69 0.69 0.69
CONT 0 0 0
TOPIC 0.91 0.17 0.29
ALL-PROS 0.82 0.76 0.79
ALL-LX1 0.79 0.64 0.7
ALL-CONT 0.79 0.86 0.83
ALL-TOPIC 0.75 0.73 0.74
ALL 0.86 0.8 0.82
Table 3: Effects of different combinations of features
on detecting DM Segments.
in Figure 1, the annotators have marked dialogue
act (1), (5), (8), and (11) as the DM DAs related
to this decision: ?There will be no feature to help
find the remote when it is misplaced?. Among the
four DM DAs, (1) describes the topic of what this
decision is about; (5) and (8) describe the arguments
that support the decision-making process; (11) in-
dicates the level of agreement or disagreement for
this decision. Yet these DM DAs which play dif-
ferent functional roles in the DM process may each
have their own characteristic features. Training one
model to recognize DM DAs of all functional roles
may have degraded the performance on the classifi-
cation tasks. Developing models for detecting DM
DAs that play different functional roles requires a
larger scale study to discover the anatomy of gen-
eral decision-making discussions.
8 Conclusions and Future Work
This is the first study that aimed to detect segments
of the conversation that contain decisions. We have
(1) empirically analyzed the characteristic features
of DM dialogue acts, and (2) computational devel-
oped models to detect DM dialogue acts and DM
topic segments, given the set of characteristic fea-
tures. Empirical analysis has provided a qualitative
account of the DM-characteristic features, whereas
training the computational models on different fea-
ture combinations has provided a quantitative ac-
count of the effect of different feature types on
the task of automatic decision detection. Empiri-
cal analysis has exhibited demonstrable differences
(1) A: but um the feature that we considered for it
not getting lost.
(2) B: Right. Well
(3) B: were talking about that a little bit
(4) B: when we got that email
(5) B: and we think that each of these are so
distinctive, that it it?s not just like another piece of
technology around your house.
(6) B: It?s gonna be somewhere that it can be seen.
(7) A: Mm-hmm.
(8) B: So we?re we?re not thinking that it?s gonna
be as critical to have the loss
(9) D: But if it?s like under covers or like in a couch
you still can?t see it.
. . .
(10) A: Okay , that?s a fair evaluation.
(11) A: Um we so we do we?ve decided not to
worry about that for now.
Figure 1: Example decision-making discussion
in the words (e.g., we), the contextual features (e.g.,
meeting type, speaker role, dialogue act type), and
the topical features. The experimental results have
suggested that (1) the model combining all the avail-
able features performs substantially better, achiev-
ing 62% and 82% overall accuracy on the task of
detecting DM DAs and that of detecting DM Seg-
ments, respectively, (2) lexical features are the best
indicators for both the task of detecting DM DAs and
that of detecting DM Segments, and (3) combining
topical features is important for improving the pre-
cision for the task of detecting DM Segments.
Many of the features used in this study require hu-
man intervention, such as manual transcriptions, an-
notated dialogue act segmentations and labels, anno-
tated topic segmentations and labels, and other types
of meeting-specific features. Our ultimate goal is to
identify decisions using automatically induced fea-
tures. Therefore, studying the performance degra-
dation when using the automatically generated ver-
sions of these features (e.g., ASR words) is essen-
tial for developing a fully automated component on
detecting decisions immediately after a meeting or
even for when a meeting is still in progress. An-
other problem that has been pointed out in Section 6
and in Section 7 is the different functional roles of
DM dialogue acts in current annotations. Purver et
al. (2006) have suggested a hierarchical annotation
scheme to accommodate the different aspects of ac-
tion items. The same technique may be applicable
31
in a more general decision detection task.
9 Acknowledgement
This work was supported by the European Union In-
tegrated Project AMI (Augmented Multi-party Inter-
action, FP6-506811, publication AMI-204).
References
S. Banerjee, C. Rose, and A. I. Rudnicky. 2005. The
necessity of a meeting recording and playback system,
and the benefit of topic-level annotations to meeting
browsing. In Proceedings of the Tenth International
Conference on Human-Computer Interaction.
C. Boulis and M. Ostendorf. 2005. A quantitative anal-
ysis of lexical differences between genders in tele-
phone conversation. In Proceedings of the 42nd An-
nual Meeting of the Association for Computational
Linguistics. ACM Press.
CALO. 2003. http://www.ai.sri.com/project/calo.
J. Carletta, S. Ashby, S. Bourban, M. Flynn, M. Guille-
mot, T. Hain, J. Kadlec, V. Karaiskos, W. Kraaij,
M. Kronenthal, G. Lathoud, M. Lincoln, A. Lisowska,
I. McCowan, W. Post, D. Reidsma, and P. Wellner.
2005. The ami meeting corpus: A pre-announcement.
In Proceedings of 2nd Joint Workshop on Multi-
modal Interaction and Related Machine Learning Al-
gorithms.
C. Cieri, D. Miller, and K. Walker. 2002. Research
methodologies, observations and outcomes in conver-
sational speech data collection. In Proceedings of the
Human Language Technologies Conference (HLT).
M. Galley, J. McKeown, J. Hirschberg, and E. Shriberg.
2004. Identifying agreement and disagreement in con-
versational speech: Use of bayesian networks to model
pragmatic dependencies. In Proceedings of the 42nd
Annual Meeting of the ACL.
J. S. Garofolo, C. D. Laprun, M. Michel, V.M. Stanford,
and E. Tabassi. 2004. The nist meeting room pilot
corpus. In Proceedings of LREC04.
D. Gatica-Perez, I. McCowan, D. Zhang, and S. Bengio.
2005. Detecting group interest level in meetings. In
IEEE Int. Conf. on Acoustics, Speech, and Signal Pro-
cessing (ICASSP).
Andrew S. Gordon and Kavita Ganesan. 2005. Auto-
mated story extraction from conversational speech. In
Proceedings of the Third International Conference on
Knowledge Capture (K-CAP 05).
D. Hillard, M. Ostendorf, and E. Shriberg. 2003. Detec-
tion of agreement vs. disagreement in meetings: Train-
ing with unlabeled data. In Proc. HLT-NAACL.
P. Hsueh and J. Moore. 2006. Automatic topic segmen-
tation and lablelling in multiparty dialogue. In the first
IEEE/ACM workshop on Spoken Language Technol-
ogy (SLT). IEEE/ACM.
A. Janin, D. Baron, J. Edwards, D. Ellis, D. Gelbart,
N. Morgan, B. Peskin, T. Pfau, E. Shriberg, A. Stol-
cke, and C. Wooters. 2003. The icsi meeting corpus.
In Proceedings of ICASSP-2003, Hong Kong.
W. Kunz and H. W. J. Ritte. 1970. Issue as elements
of information system. Technical Report Working Pa-
per 131, Institute of Urban and Regional Development
Research, University of California, Berkeley.
S. Marchand-Mailet. 2003. Meeting record modeling for
enhanced browsing. Technical report, Computer Vi-
sion and Multimedia Lab, Computer Centre, Univer-
sity of Geneva, Switzerland.
J. Niekrasz, M. Purver, J. Dowding, and S. Peters. 2005.
Ontology-based discourse understanding for a persis-
tent meeting assistant. In Proc. of the AAAI Spring
Symposium.
V. Pallotta, J. Niekrasz, and M. Purver. 2005. Collab-
orative and argumentative models of meeting discus-
sions. In Proceeding of CMNA-05 workshop on Com-
putational Models of Natural Arguments in IJCAI 05.
M. Purver, P. Ehlen, and J. Niekrasz. 2006. Shallow
discourse structure for action item detection. In the
Workshop of HLT-NAACL: Analyzing Conversations in
Text and Speech. ACM Press.
R. J. Rienks, D. Heylen, and E. van der Weijden. 2005.
Argument diagramming of meeting conversations. In
Multimodal Multiparty Meeting Processing Workshop
at the ICMI.
E. Shriberg and A. Stolcke. 2001. Direct modeling of
prosody: An overview of applications in automatic
speech processing.
A. Waibel, M. Bett, F. Metze, K. Ries, T. Schaaf amd
T. Schultz, H. Soltau, H. Yu, and K. Zechner. 2001.
Advances in automatic meeting record creation and ac-
cess. In Proceedings of ICASSP.
S. Whittaker, R. Laban, and S. Tucker. 2005. Analysing
meeting records: An ethnographic study and techno-
logical implications. In Proceedings of MLMI 2005.
B. Wrede and E. Shriberg. 2003. Spotting hot spots in
meetings: Human judgements and prosodic cues. In
Proceedings of EUROSPEECH 2003.
32
NAACL HLT Demonstration Program, pages 9?10,
Rochester, New York, USA, April 2007. c?2007 Association for Computational Linguistics
Automatic Segmentation and Summarization of Meeting Speech
Gabriel Murray, Pei-Yun Hsueh, Simon Tucker
Jonathan Kilgour, Jean Carletta, Johanna Moore, Steve Renals
University of Edinburgh
Edinburgh, Scotland
fgabriel.murray,p.hsuehg@ed.ac.uk
1 Introduction
AMI Meeting Facilitator is a system that per-
forms topic segmentation and extractive sum-
marisation. It consists of three components: (1)
a segmenter that divides a meeting into a num-
ber of locally coherent segments, (2) a summa-
rizer that selects the most important utterances
from the meeting transcripts. and (3) a com-
pression component that removes the less im-
portant words from each utterance based on the
degree of compression the user specied. The
goal of the AMI Meeting Facilitator is two-fold:
rst, we want to provide sucient visual aids for
users to interpret what is going on in a recorded
meeting; second, we want to support the devel-
opment of downstream information retrieval and
information extraction modules with the infor-
mation about the topics and summaries in meet-
ing segments.
2 Component Description
2.1 Segmentation
The AMI Meeting Segmenter is trained using a
set of 50 meetings that are seperate from the in-
put meeting. We rst extract features from the
audio and video recording of the input meeting
in order to train the Maximum Entropy (Max-
Ent) models for classifying topic boundaries and
non-topic boundaries. Then we test each utter-
ance in the input meeting on the Segmenter to
see if it is a topic boundary or not. The features
we use include the following ve categories: (1)
Conversational Feature: These include a set
of seven conversational features, including the
amount of overlapping speech, the amount of
silence between speaker segments, the level of
similarity of speaker activity, the number of cue
words, and the predictions of LCSEG (i.e., the
lexical cohesion statistics, the estimated poste-
rior probability, the predicted class). (2) Lex-
ical Feature: Each spurt is represented as a
vector space of uni-grams, wherein a vector is 1
or 0 depending on whether the cue word appears
in the spurt. (3) Prosodic Feature: These
include dialogue-act (DA) rate-of-speech, max-
imum F0 of the DA, mean energy of the DA,
amount of silence in the DA, precedent and sub-
sequent pauses, and duration of the DA. (4)
Motion Feature: These include the average
magnitude of speaker movements, which is mea-
sured by the number of pixels changed, over the
frames of 40 ms within the spurt. (5) Contex-
tual Feature: These include the dialogue act
types and the speaker role (e.g., project man-
ager, marketing expert). In the dialogue act an-
notations, each dialogue act is classied as one
of the 15 types.
2.2 Summarization
The AMI summarizer is trained using a set of
98 scenario meetings. We train a support vec-
tor machine (SVM) on these meetings, using 26
features relating to the following categories: (1)
Prosodic Features: These include dialogue-
act (DA) rate-of-speech, maximum F0 of the
DA, mean energy of the DA, amount of silence
in the DA, precedent and subsequent pauses,
9
and duration of the DA. (2) Speaker Fea-
tures: These features relate to how dominant
the speaker is in the meeting as a whole, and
they include percentage of the total dialogue
acts which each speaker utters, percentage of
total words which speaker utters, and amount
of time in meeting that each person is speak-
ing. (3) Structural Features: These features
include the DA position in the meeting, and the
DA position in the speaker's turn. (4) Term
Weighting Features: We use two types of
term weighting: tf.idf, which is based on words
that are frequent in the meeting but rare across
a set of other meetings or documents, and a sec-
ond weighting feature which relates to how word
usage varies between the four meeting partici-
pants.
After training the SVM, we test on each meet-
ing of the 20 meeting test set in turn, ranking
the dialogue acts from most probable to least
probable in terms of being extract-worthy. Such
a ranking allows the user to create a summary
of whatever length she desires.
2.3 Compression
Each dialogue act has its constituent words
scored using tf.idf, and as the user compresses
the meeting to a greater degree the browser
gradually removes the less important words from
each dialogue act, leaving only the most infor-
mative material of the meeting.
3 Related Work
Previous work has explored the eect of lexi-
cal cohesion and conversational features on char-
acterizing topic boundaries, following Galley et
al.(2003). In previous work, we have also studied
the problem of predicting topic boundaries at
dierent levels of granularity and showed that a
supervised classication approach performs bet-
ter on predicting a coarser level of topic segmen-
tation (Hsueh et al, 2006).
The amount of work being done on speech
summarization has accelerated in recent years.
Maskey and Hirschberg(September 2005) have
explored speech summarization in the domain
of Broadcast News data, nding that combin-
ing prosodic, lexical and structural features yield
the best results. On the ICSI meeting corpus,
Murray et al(September 2005) compared apply-
ing text summarization approaches to feature-
based approaches including prosodic features,
while Galley(2006) used skip-chain Conditional
Random Fields to model pragmatic dependen-
cies between meeting utterances, and ranked
meeting dialogue acts using a combination or
prosodic, lexical, discourse and structural fea-
tures.
4 acknowledgement
This work was supported by the European
Union 6th FWP IST Integrated Project AMI
(Augmented Multi- party Interaction, FP6-
506811)
References
M. Galley, K. McKeown, E. Fosler-Lussier, and
H. Jing. 2003. Discourse segmentation of multi-
party conversation. In Proceedings of the 41st An-
nual Meeting of the Association for Computational
Linguistics.
M. Galley. 2006. A skip-chain conditional ran-
dom eld for ranking meeting utterances by im-
portance. In Proceedings of EMNLP-06, Sydney,
Australia.
P. Hsueh, J. Moore, and S. Renals. 2006. Automatic
segmentation of multiparty dialogue. In the Pro-
ceedings of the 11th Conference of the European
Chapter of the Association for Computational Lin-
guistics.
S. Maskey and J. Hirschberg. September 2005. Com-
paring lexial, acoustic/prosodic, discourse and
structural features for speech summarization. In
Proceedings of the 9th European Conference on
Speech Communication and Technology, Lisbon,
Portugal.
G. Murray, S. Renals, and J. Carletta. Septem-
ber 2005. Extractive summarization of meeting
recordings. In Proceedings of the 9th European
Conference on Speech Communication and Tech-
nology, Lisbon, Portugal.
10
Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 1016?1023,
Prague, Czech Republic, June 2007. c?2007 Association for Computational Linguistics
Combining Multiple Knowledge Sources for Dialogue Segmentation in
Multimedia Archives
Pei-Yun Hsueh
School of Informatics
University of Edinburgh
Edinburgh, UK EH8 9WL
p.hsueh@ed.ac.uk
Johanna D. Moore
School of Informatics
University of Edinburgh
Edinburgh, UK EH8 9WL
J.Moore@ed.ac.uk
Abstract
Automatic segmentation is important for
making multimedia archives comprehensi-
ble, and for developing downstream infor-
mation retrieval and extraction modules. In
this study, we explore approaches that can
segment multiparty conversational speech
by integrating various knowledge sources
(e.g., words, audio and video recordings,
speaker intention and context). In particu-
lar, we evaluate the performance of a Max-
imum Entropy approach, and examine the
effectiveness of multimodal features on the
task of dialogue segmentation. We also pro-
vide a quantitative account of the effect of
using ASR transcription as opposed to hu-
man transcripts.
1 Introduction
Recent advances in multimedia technologies have
led to huge archives of audio-video recordings of
multiparty conversations in a wide range of areas
including clinical use, online video sharing ser-
vices, and meeting capture and analysis. While it
is straightforward to replay such recordings, find-
ing information from the often lengthy archives is a
more challenging task. Annotating implicit seman-
tics to enhance browsing and searching of recorded
conversational speech has therefore posed new chal-
lenges to the field of multimedia information re-
trieval.
One critical problem is how to divide unstructured
conversational speech into a number of locally co-
herent segments. The problem is important for two
reasons: First, empirical analysis has shown that an-
notating transcripts with semantic information (e.g.,
topics) enables users to browse and find information
from multimedia archives more efficiently (Baner-
jee et al, 2005). Second, because the automatically
generated segments make up for the lack of explicit
orthographic cues (e.g., story and paragraph breaks)
in conversational speech, dialogue segmentation
is useful in many spoken language understanding
tasks, including anaphora resolution (Grosz and Sid-
ner, 1986), information retrieval (e.g., as input for
the TREC Spoken Document Retrieval (SDR) task),
and summarization (Zechner and Waibel, 2000).
This study therefore aims to explore whether a
Maximum Entropy (MaxEnt) classifier can inte-
grate multiple knowledge sources for segmenting
recorded speech. In this paper, we first evaluate the
effectiveness of features that have been proposed in
previous work, with a focus on features that can be
extracted automatically. Second, we examine other
knowledge sources that have not been studied sys-
tematically in previous work, but which we expect
to be good predictors of dialogue segments. In ad-
dition, as our ultimate goal is to develop an infor-
mation retrieval module that can be operated in a
fully automatic fashion, we also investigate the im-
pact of automatic speech recognition (ASR) errors
on the task of dialogue segmentation.
2 Previous Work
In previous work, the problem of automatic dia-
logue segmentation is often considered as similar to
the problem of topic segmentation. Therefore, re-
search has adopted techniques previously developed
1016
to segment topics in text (Kozima, 1993; Hearst,
1997; Reynar, 1998) and in read speech (e.g., broad-
cast news) (Ponte and Croft, 1997; Allan et al,
1998). For example, lexical cohesion-based algo-
rithms, such as LCSEG (Galley et al, 2003), or its
word frequency-based predecessor TextTile (Hearst,
1997) capture topic shifts by modeling the similarity
of word repetition in adjacent windows.
However, recent work has shown that LCSEG is
less successful in identifying ?agenda-based conver-
sation segments? (e.g., presentation, group discus-
sion) that are typically signalled by differences in
group activity (Hsueh and Moore, 2006). This is
not surprising since LCSEG considers only lexical
cohesion. Previous work has shown that training a
segmentation model with features that are extracted
from knowledge sources other than words, such as
speaker interaction (e.g., overlap rate, pause, and
speaker change) (Galley et al, 2003), or partici-
pant behaviors, e.g., note taking cues (Banerjee and
Rudnicky, 2006), can outperform LCSEG on similar
tasks.
In many other fields of research, a variety of fea-
tures have been identified as indicative of segment
boundaries in different types of recorded speech.
For example, Brown et al (1980) have shown that
a discourse segment often starts with relatively high
pitched sounds and ends with sounds of pitch within
a more compressed range. Passonneau and Lit-
man (1993) identified that topic shifts often occur
after a pause of relatively long duration. Other
prosodic cues (e.g., pitch contour, energy) have been
studied for their correlation with story segments in
read speech (Tur et al, 2001; Levow, 2004; Chris-
tensen et al, 2005) and with theory-based discourse
segments in spontaneous speech (e.g., direction-
given monologue) (Hirschberg and Nakatani, 1996).
In addition, head and hand/forearm movements are
used to detect group-action based segments (Mc-
Cowan et al, 2005; Al-Hames et al, 2005).
However, many other features that we expect to
signal segment boundaries have not been studied
systematically. For instance, speaker intention (i.e.,
dialogue act types) and conversational context (e.g.,
speaker role). In addition, although these features
are expected to be complementary to one another,
few of the previous studies have looked at the ques-
tion how to use conditional approaches to model the
correlation among features.
3 Methodology
3.1 Meeting Corpus
This study aims to explore approaches that can in-
tegrate multimodal information to discover implicit
semantics from conversation archives. As our goal
is to identify multimodal cues of segmentation in
face-to-face conversation, we use the AMI meeting
corpus (Carletta et al, 2006), which includes audio-
video recordings, to test our approach. In particu-
lar, we are using 50 scenario-based meetings from
the AMI corpus, in which participants are assigned
to different roles and given specific tasks related to
designing a remote control. On average, AMI meet-
ings last 26 minutes, with over 4,700 words tran-
spired. This corpus includes annotation for dialogue
segmentation and topic labels. In the annotation pro-
cess, annotators were given the freedom to subdi-
vide a segment into subsegments to indicate when
the group was discussing a subtopic. Annotators
were also given a set of segment descriptions to be
used as labels. Annotators were instructed to add a
new label only if they could not find a match in the
standard set. The set of segment descriptions can
be divided to three categories: activity-based (e.g.,
presentation, discussion), issue-based (e.g., budget,
usability), and functional segments (e.g., chitchat,
opening, closing).
3.2 Preprocessing
The first step is to break a recorded meeting into
minimal units, which can vary from sentence chunks
to blocks of sentences. In this study, we use spurts,
that is, consecutive speech with no pause longer than
0.5 seconds, as minimal units.
Then, to examine the difference between the set
of features that are characteristic of segmentation at
both coarse and fine levels of granularity, this study
characterizes a dialogue as a sequence of segments
that may be further divided into sub-segments. We
take the theory-free dialogue segmentation annota-
tions in the corpus and flatten the sub-segment struc-
ture and consider only two levels of segmentation:
top-level segments and all sub-level segments.1 We
1We take the spurts which the annotators choose as the be-
ginning of a segment as the topic boundaries. On average,
1017
observed that annotators tended to annotate activity-
based segments only at the top level, whereas they
often included sub-topics when segmenting issue-
based segments. For example, a top-level interface
specialist presentation segment can be divided into
agenda/equipment issues, user requirements, exist-
ing products, and look and usability sub-level seg-
ments.
3.3 Intercoder Agreement
To measure intercoder agreement, we employ three
different metrics: the kappa coefficient, PK, and
WD. Kappa values measure how well a pair of an-
notators agree on where the segments break. PK is
the probability that two spurts drawn randomly from
a document are incorrectly identified as belonging
to the same segment. WindowDiff (WD) calculates
the error rate by moving a sliding window across the
transcript counting the number of times the hypoth-
esized and reference segment boundaries are differ-
ent. While not uncontroversial, the use of these met-
rics is widespread. Table 1 shows the intercoder
agreement of the top-level and sub-level segmenta-
tion respectively.
It is unclear whether the kappa values shown here
indicate reliable intercoder agreement.2 But given
the low disagreement rate among codings in terms
of the PK and WD scores, we will argue for the reli-
ability of the annotation procedure used in this study.
Also, to our knowledge the reported degree of agree-
ment is the best in the field of meeting dialogue seg-
mentation.3
Intercoder Kappa PK WD
TOP 0.66 0.11 0.17
SUB 0.59 0.23 0.28
Table 1: Intercoder agreement of annotations at the
top-level (TOP) and sub-level (SUB) segments.
the annotators marked 8.7 top-level segments and 14.6 sub-
segments per meeting.
2In computational linguistics, kappa values over 0.67
point to reliable intercoder agreement. But Di Eugenio and
Glass (2004) have found that this interpretation does not hold
true for all tasks.
3For example, Gruenstein et al(2005) report kappa
(PK/WD) of 0.41(0.28/0.34) for determining the top-level and
0.45(0.27/0.35) for the sub-level segments in the ICSI meeting
corpus.
3.4 Feature Extraction
As reported in Section 2, there is a wide range of
features that are potentially characteristic of segment
boundaries, and we expect to find some of them use-
ful for automatic recognition of segment boundaries.
The features we explore can be divided into the fol-
lowing five classes:
Conversational Features: We follow Galley et
al. (2003) and extracted a set of conversational fea-
tures, including the amount of overlapping speech,
the amount of silence between speaker segments,
speaker activity change, the number of cue words,
and the predictions of LCSEG (i.e., the lexical co-
hesion statistics, the estimated posterior probability,
the predicted class).
Lexical Features: We compile the list of words
that occur more than once in the spurts that have
been marked as a top-level or sub-segment boundary
in the training set. Each spurt is then represented as
a vector space of unigrams from this list.
Prosodic Features: We use the direct modelling
approach proposed in Shriberg and Stolcke (2001)
and include maximum F0 and energy of the spurt,
mean F0 and energy of the spurt, pitch contour (i.e.,
slope) and energy at multiple points (e.g., the first
and last 100 and 200 ms, the first and last quarter,
the first and second half) of a spurt. We also include
rate of speech, in-spurt silence, preceding and sub-
sequent pauses, and duration. The rate of speech is
calculated as both the number of words and the num-
ber of syllables spoken per second.
Motion Features: We measure the magnitude
of relevant movements in the meeting room using
methods that detect movements directly from video
recordings in frames of 40 ms. Of special interest are
the frontal shots as recorded by the close up cameras,
the hand movements as recorded by the overview
cameras, and shots of the areas of the room where
presentations are made. We then average the magni-
tude of movements over the frames within a spurt as
its feature value.
Contextual Features: These include dialogue act
type4 and speaker role (e.g., project manager, mar-
4In the annotations, each dialogue act is classified as one
of 15 types, including acts about information exchange (e.g.,
Inform), acts about possible actions (e.g., Suggest), acts whose
primary purpose is to smooth the social functioning (e.g., Be-
positive), acts that are commenting on previous discussion (e.g.,
1018
keting expert). As each spurt may consist of multiple
dialogue acts, we represent each spurt as a vector of
dialogue act types, wherein a component is 1 or 0
depending on whether the type occurs in the spurt.
3.5 Multimodal Integration Using Maximum
Entropy Models
Previous work has used MaxEnt models for sentence
and topic segmentation and shown that conditional
approaches can yield competitive results on these
tasks (Christensen et al, 2005; Hsueh and Moore,
2006). In this study, we also use a MaxEnt clas-
sifier5 for dialogue segmentation under the typical
supervised learning scheme, that is, to train the clas-
sifier to maximize the conditional likelihood over
the training data and then to use the trained model
to predict whether an unseen spurt in the test set
is a segment boundary or not. Because continuous
features have to be discretized for MaxEnt, we ap-
plied a histogram binning approach, which divides
the value range intoN intervals that contain an equal
number of counts as specified in the histogram, to
discretize the data.
4 Experimental Results
4.1 Probabilistic Models
The first question we want to address is whether
the different types of characteristic multimodal fea-
tures can be integrated, using the conditional Max-
Ent model, to automatically detect segment bound-
aries. In this study, we use a set of 50 meet-
ings, which consists of 17,977 spurts. Among these
spurts, only 1.7% and 3.3% are top-level and sub-
segment boundaries. For our experiments we use
10-fold cross validation. The baseline is the re-
sult obtained by using LCSEG, an unsupervised ap-
proach exploiting only lexical cohesion statistics.
Table 2 shows the results obtained by using the
same set of conversational (CONV) features used
in previous work (Galley et al, 2003; Hsueh and
Moore, 2006), and results obtained by using all the
available features (ALL). The evaluation metrics PK
and WD are conventional measures of error rates in
segmentation (see Section 3.3). In Row 2, we see
Elicit-Assessment), and acts that allow complete segmentation
(e.g., Stall).
5The parameters of the MaxEnt classifier are optimized us-
ing Limited-Memory Variable Metrics.
TOP SUB
Error Rate PK WD PK WD
BASELINE(LCSEG) 0.40 0.49 0.40 0.47
MAXENT(CONV) 0.34 0.34 0.37 0.37
MAXENT(ALL) 0.30 0.33 0.34 0.36
Table 2: Compare the result of MaxEnt models
trained with only conversational features (CONV)
and with all available features (ALL).
that using a MaxEnt classifier trained on the conver-
sational features (CONV) alone improves over the
LCSEG baseline by 15.3% for top-level segments
and 6.8% for sub-level segements. Row 3 shows
that combining additional knowledge sources, in-
cluding lexical features (LX1) and the non-verbal
features, prosody (PROS), motion (MOT), and con-
text (CTXT), yields a further improvement (of 8.8%
for top-level segmentation and 5.4% for sub-level
segmentation) over the model trained on conversa-
tional features.
4.2 Feature Effects
The second question we want to address is which
knowledge sources (and combinations) are good
predictors for segment boundaries. In this round of
experiments, we evaluate the performance of differ-
ent feature combinations. Table 3 further illustrates
the impact of each feature class on the error rate
metrics (PK/WD). In addition, as the PK and WD
score do not reflect the magnitude of over- or under-
prediction, we also report on the average number of
hypothesized segment boundaries (Hyp). The num-
ber of reference segments in the annotations is 8.7 at
the top-level and 14.6 at the sub-level.
Rows 2-6 in Table 3 show the results of models
trained with each individual feature class. We per-
formed a one-way ANOVA to examine the effect
of different feature classes. The ANOVA suggests
a reliable effect of feature class (F (5, 54) = 36.1;
p < .001). We performed post-hoc tests (Tukey
HSD) to test for significant differences. Analysis
shows that the model that is trained with lexical
features alone (LX1) performs significantly worse
than the LCSEG baseline (p < .001). This is
due to the fact that cue words, such as okay and
now, learned from the training data to signal seg-
1019
TOP SUB
Hyp PK WD Hyp PK WD
BASELINE 17.6 0.40 0.49 17.6 0.40 0.47
(LCSEG)
LX1 61.2 0.53 0.72 65.1 0.49 0.66
CONV 3.1 0.34 0.34 2.9 0.37 0.37
PROS 2.3 0.35 0.35 2.5 0.37 0.37
MOT 96.2 0.36 0.40 96.2 0.38 0.41
CTXT 2.6 0.34 0.34 2.2 0.37 0.37
ALL 7.7 0.29 0.33 7.6 0.35 0.38
Table 3: Effects of individual feature classes and
their combination on detecting segment boundaries.
ment boundaries, are often used for non-discourse
purposes, such as making a semantic contribution to
an utterance.6 Thus, we hypothesize that these am-
biguous cue words have led the LX1 model to over-
predict. Row 7 further shows that when all avail-
able features (including LX1) are used, the com-
bined model (ALL) yields performance that is sig-
nificantly better than that obtained with individual
feature classes (F (5, 54) = 32.2; p < .001).
TOP SUB
Hyp PK WD Hyp PK WD
ALL 7.7 0.29 0.33 7.6 0.35 0.38
ALL-LX1 3.9 0.35 0.35 3.5 0.37 0.38
ALL-CONV 6.6 0.30 0.34 6.8 0.35 0.37
ALL-PROS 5.6 0.29 0.31 7.4 0.33 0.35
ALL-MOTION 7.5 0.30 0.35 7.3 0.35 0.37
ALL-CTXT 7.2 0.29 0.33 6.7 0.36 0.38
Table 4: Performance change of taking out each
individual feature class from the ALL model.
Table 4 illustrates the error rate change (i.e., in-
creased or decreased PK and WD score)7 that is
incurred by leaving out one feature class from the
ALL model. Results show that CONV, PROS, MO-
TION and CTXT can be taken out from the ALL
model individually without increasing the error rate
significantly.8 Morevoer, the combined models al-
6Hirschberg and Litman (1987) have proposed to discrimi-
nate the different uses intonationally.
7Note that the increase in error rate indicates performance
degradation, and vice versa.
8Sign tests were used to test for significant differences be-
tween means in each fold of cross validation.
ways perform better than the LX1 model (p < .01),
cf. Table 3.
This suggests that the non-lexical feature classes
are complementary to LX1, and thus it is essential
to incorporate some, but not necessarily all, of the
non-lexical classes into the model.
TOP SUB
Hyp PK WD Hyp PK WD
LX1 61.2 0.53 0.72 65.1 0.49 0.66
MOT 96.2 0.36 0.40 96.2 0.38 0.41
LX1+CONV 5.3 0.27 0.30 6.9 0.32 0.35
LX1+PROS 6.2 0.30 0.33 7.3 0.36 0.38
LX1+MOT 20.2 0.39 0.49 24.8 0.39 0.47
LX1+CTXT 6.3 0.28 0.31 7.2 0.33 0.35
MOT+PROS 62.0 0.34 0.34 62.1 0.37 0.37
MOT+CTXT 2.7 0.33 0.33 2.3 0.37 0.37
Table 5: Effects of combining complementary fea-
tures on detecting segment boundaries.
Table 5 further illustrates the performance of dif-
ferent feature combinations on detecting segment
boundaries. By subtracting the PK or WD score in
Row 1, the LX1 model, from that in Rows 3-6, we
can tell how essential each of the non-lexical classes
is to be combined with LX1 into one model. Results
show that CONV is the most essential, followed by
CTXT, PROS and MOT. The advantage of incorpo-
rating the non-lexical feature classes is also shown
in the noticeably reduced number of overpredictions
as compared to that of the LX1 model.
To analyze whether there is a significant interac-
tion between feature classes, we performed another
round of ANOVA tests to examine the effect of LX1
and each of the non-lexical feature classes on de-
tecting segment boundaries. This analysis shows
that there is a significant interaction effect on de-
tecting both top-level and sub-level segment bound-
aries (p < .01), suggesting that the performance of
LX1 is significantly improved when combined with
any non-lexical feature class. Also, among the non-
lexical feature classes, combining prosodic features
significantly improves the performance of the model
in which the motion features are combined to detect
top-level segment boundaries (p < .05).
1020
4.3 Degradation Using ASR
The third question we want to address here is
whether using the output of ASR will cause sig-
nificant degradation to the performance of the seg-
mentation approaches. The ASR transcripts used in
this experiment are obtained using standard technol-
ogy including HMM based acoustic modeling and
N-gram based language models (Hain et al, 2005).
The average word error rates (WER) are 39.1%. We
also applied a word alignment algorithm to ensure
that the number of words in the ASR transcripts is
the same as that in the human-produced transcripts.
In this way we can compare the PK and WD metrics
obtained on the ASR outputs directly with that on
the human transcripts.
In this study, we again use a set of 50 meetings
and 10-fold cross validation. We compare the per-
formance of the reference models, which are trained
on human transcripts and tested on human tran-
scripts, with that of the ASR models, which are
trained on ASR transcripts and tested on ASR tran-
scripts. Table 6 shows that despite the word recogni-
tion errors, none of the LCSEG, the MaxEnt models
trained with conversational features, and the Max-
Ent models trained with all available features per-
form significantly worse on ASR transcripts than on
reference transcripts. One possible explanation for
this, which we have observed in our corpus, is that
the ASR system is likely to mis-recognize different
occurences of words in the same way, and thus the
lexical cohesion statistic, which captures the similar-
ity of word repetition between two adjacency win-
dows, is also likely to remain unchanged. In addi-
tion, when the models are trained with other features
that are not affected by the recognition errors, such
as pause and overlap, the negative impacts of recog-
nition errors are further reduced to an insignificant
level.
5 Discussion
The results in Section 4 show the benefits of includ-
ing additional knowledge sources for recognizing
segment boundaries. The next question to be ad-
dressed is what features in these sources are most
useful for recognition. To provide a qualitative ac-
count of the segmentation cues, we performed an
analysis to determine whether each proposed feature
TOP SUB
Error Rate PK WD PK WD
LCSEG(REF) 0.45 0.57 0.42 0.47
LCSEG(ASR) 0.45 0.58 0.40 0.47
MAXENT-CONV(REF) 0.34 0.34 0.37 0.37
MAXENT-CONV(ASR) 0.34 0.33 0.38 0.38
MAXENT-ALL(REF) 0.30 0.33 0.34 0.36
MAXENT-ALL(ASR) 0.31 0.34 0.34 0.37
Table 6: Effects of word recognition errors on de-
tecting segments boundaries.
discriminates the class of segment boundaries. Pre-
vious work has identified statistical measures (e.g.,
Log Likelihood ratio) that are useful for determin-
ing the statistical association strength (relevance) of
the occurrence of an n-gram feature to target class
(Hsueh and Moore, 2006). Here we extend that
study to calculate the LogLikelihood relevance of all
of the features used in the experiments, and use the
statistics to rank the features.
Our analysis shows that people do speak and be-
have differently near segment boundaries. Some
of the identified segmentation cues match previous
findings. For example, a segment is likely to start
with higher pitched sounds (Brown et al, 1980; Ay-
ers, 1994) and a lower rate of speech (Lehiste, 1980).
Also, interlocutors pause longer than usual to make
sure that everyone is ready to move on to a new dis-
cussion (Brown et al, 1980; Passonneau and Lit-
man, 1993) and use some conventional expressions
(e.g., now, okay, let?s, um, so).
Our analysis also identified segmentation cues
that have not been mentioned in previous research.
For example, interlocutors do not move around a lot
when a new discussion is brought up; interlocutors
mention agenda items (e.g., presentation, meeting)
or content words more often when initiating a new
discussion. Also, from the analysis of current di-
alogue act types and their immediate contexts, we
also observe that at segment boundaries interlocu-
tors do the following more often than usual: start
speaking before they are ready (Stall), give infor-
mation (Inform), elicit an assessment of what has
been said so far (Elicit-assessment), or act to smooth
social functioning and make the group happier (Be-
positive).
1021
6 Conclusions and Future Work
This study explores the use of features from mul-
tiple knowledge sources (i.e., words, prosody, mo-
tion, interaction cues, speaker intention and role) for
developing an automatic segmentation component
in spontaneous, multiparty conversational speech.
In particular, we addressed the following questions:
(1) Can a MaxEnt classifier integrate the potentially
characteristic multimodal features for automatic di-
alogue segmentation? (2) What are the most dis-
criminative knowledge sources for detecting seg-
ment boundaries? (3) Does the use of ASR tran-
scription significantly degrade the performance of a
segmentation model?
First of all, our results show that a well perform-
ing MaxEnt model can be trained with available
knowledge sources. Our results improve on previous
work, which uses only conversational features, by
8.8% for top-level segmentation and 5.4% for sub-
level segmentation. Analysis of the effectiveness of
the various features shows that lexical features (i.e.,
cue words) are the most essential feature class to
be combined into the segmentation model. How-
ever, lexical features must be combined with other
features, in particular, conversational features (i.e.,
lexical cohesion, overlap, pause, speaker change), to
train well performing models.
In addition, many of the non-lexical feature
classes, including those that have been identified as
indicative of segment boundaries in previous work
(e.g., prosody) and those that we hypothesized as
good predictors of segment boundaries (e.g., mo-
tion, context), are not beneficial for recognizing
boundaries when used in isolation. However, these
non-lexical features are useful when combined with
lexical features, as the presence of the non-lexical
features can balance the tendency of models trained
with lexical cues alone to overpredict.
Experiments also show that it is possible to seg-
ment conversational speech directly on the ASR out-
puts. These results encouragingly show that we
can segment conversational speech using features
extracted from different knowledge sources, and in
turn, facilitate the development of a fully automatic
segmentation component for multimedia archives.
With the segmentation models developed and dis-
criminative knowledge sources identified, a remain-
ing question is whether it is possible to automat-
ically select the discriminative features for recog-
nition. This is particularly important for prosodic
features, because the direct modelling approach we
adopted resulted in a large number of features. We
expect that by applying feature selection methods
we can further improve the performance of auto-
matic segmentation models. In the field of machine
learning and pattern analysis, many methods and se-
lection criteria have been proposed. Our next step
will be to examine the effectiveness of these meth-
ods for the task of automatic segmentation. Also, we
will further explore how to choose the best perform-
ing ensemble of knowledge sources so as to facili-
tate automatic selection of knowledge sources to be
included.
Acknowledgement
This work was supported by the EU 6th FWP IST In-
tegrated Project AMI (Augmented Multi-party Inter-
action, FP6-506811). Our special thanks to Wessel
Kraaij, Stephan Raaijmakers, Steve Renals, Gabriel
Murray, Jean Carletta, and the anonymous review-
ers for valuable comments. Thanks also to the AMI
ASR group for producing the ASR transcriptions,
and to our research partners in TNO for generating
motion features.
References
M. Al-Hames, A. Dielmann, D. GaticaPerez, S. Reiter,
S. Renals, and D. Zhang. 2005. Multimodal integra-
tion for meeting group action segmentation and recog-
nition. In Proc. of MLMI 2005.
J. Allan, J. Carbonell, G. Doddington, J. Yamron, and
Y. Yang. 1998. Topic detection and tracking pilot
study: Final report. In Proc. of the DARPA Broadcast
News Transcription and Understanding Workshop.
G. M. Ayers. 1994. Discourse functions of pitch range in
spontaneous and read speech. In Jennifer J. Venditti,
editor, OSU Working Papers in Linguistics, volume 44,
pages 1?49.
S. Banerjee and A. Rudnicky. 2006. Segmenting meet-
ings into agenda items by extracting implicit supervi-
sion from human note-taking. In Proc. of IUI 2006.
S. Banerjee, C. Rose, and A. I. Rudnicky. 2005. The
necessity of a meeting recording and playback system,
and the benefit of topic-level annotations to meeting
1022
browsing. In Proc. of the Tenth International Confer-
ence on Human-Computer Interaction.
G. Brown, K. L. Currie, and J. Kenworthe. 1980. Ques-
tions of Intonation. University Park Press.
J. Carletta et al 2006. The AMI meeting corpus: A pre-
announcement. In Steve Renals and Samy Bengio, ed-
itors, Springer-Verlag Lecture Notes in Computer Sci-
ence, volume 3869. Springer-Verlag.
H. Christensen, B. Kolluru, Y. Gotoh, and S. Renals.
2005. Maximum entropy segmentation of broadcast
news. In Proc. of ICASP, Philadelphia USA.
B. Di Eugenio and M. G. Glass. 2004. The kappa
statistic: A second look. Computational Linguistics,
30(1):95?101.
M. Galley, K. McKeown, E. Fosler-Lussier, and H. Jing.
2003. Discourse segmentation of multi-party conver-
sation. In Proc. of ACL 2003.
B. Grosz and C. Sidner. 1986. Attention, intentions, and
the structure of discourse. Computational Linguistics,
12(3).
A. Gruenstein, J. Niekrasz, and M. Purver. 2005. Meet-
ing structure annotation: Data and tools. In Proc. of
the SIGdial Workshop on Discourse and Dialogue.
T. Hain, J. Dines, G. Garau, M. Karafiat, D. Moore,
V. Wan, R. Ordelman, and S. Renals. 2005. Tran-
scription of conference room meetings: An investiga-
tion. In Proc. of Interspeech 2005.
M. Hearst. 1997. TextTiling: Segmenting text into multi-
paragraph subtopic passages. Computational Linguis-
tics, 25(3):527?571.
J. Hirschberg and D. Litman. 1987. Now let?s talk about
now: identifying cue phrases intonationally. In Proc.
of ACL 1987.
J. Hirschberg andC. H. Nakatani. 1996. A prosodic anal-
ysis of discourse segments in direction-giving mono-
logues. In Proc. of ACL 1996.
P. Hsueh and J.D. Moore. 2006. Automatic topic seg-
mentation and lablelling in multiparty dialogue. In the
first IEEE/ACM workshop on Spoken Language Tech-
nology (SLT) 2006.
H. Kozima. 1993. Text segmentation based on similarity
between words. In Proc. of ACL 1993.
I. Lehiste. 1980. Phonetic characteristics of discourse.
In the Meeting of the Committee on Speech Research,
Acoustical Society of Japan.
G. Levow. 2004. Prosody-based topic segmentation for
mandarin broadcast news. In Proc. of HLT 2004.
I. McCowan, D. Gatica-Perez, S. Bengio, G. Lathoud,
M. Barnard, and D. Zhang. 2005. Automatic analysis
of multimodal group actions in meetings. IEEE Trans-
actions on Pattern Analysis and Machine Intelligence
(PAMI), 27(3):305?317.
R. Passonneau and D. Litman. 1993. Intention-based
segmentation: Human reliability and correlation with
linguistic cues. In Proc. of ACL 1993.
J. Ponte and W. Croft. 1997. Text segmentation by topic.
In Proc. of the Conference on Research and Advanced
Technology for Digital Libraries 1997.
J. Reynar. 1998. Topic Segmentation: Algorithms and
Applications. Ph.D. thesis, UPenn, PA USA.
E. Shriberg and A. Stolcke. 2001. Direct modeling of
prosody: An overview of applications in automatic
speech processing. In Proc. International Conference
on Speech Prosody 2004.
G. Tur, D. Hakkani-Tur, A. Stolcke, and E. Shriberg.
2001. Integrating prosodic and lexical cues for auto-
matic topic segmentation. Computational Linguistics,
27(1):31?57.
K. Zechner and A. Waibel. 2000. DIASUMM: Flexi-
ble summarization of spontaneous dialogues in unre-
stricted domains. In Proc. of COLING-2000.
1023
Proceedings of the NAACL HLT Workshop on Active Learning for Natural Language Processing, pages 27?35,
Boulder, Colorado, June 2009. c?2009 Association for Computational Linguistics
Data Quality from Crowdsourcing:
A Study of Annotation Selection Criteria
Pei-Yun Hsueh, Prem Melville, Vikas Sindhwani
IBM T.J. Watson Research Center
1101 Kitchawan Road, Route 134
Yorktown Heights, NY 10598, USA
Abstract
Annotation acquisition is an essential step in
training supervised classifiers. However, man-
ual annotation is often time-consuming and
expensive. The possibility of recruiting anno-
tators through Internet services (e.g., Amazon
Mechanic Turk) is an appealing option that al-
lows multiple labeling tasks to be outsourced
in bulk, typically with low overall costs and
fast completion rates. In this paper, we con-
sider the difficult problem of classifying sen-
timent in political blog snippets. Annotation
data from both expert annotators in a research
lab and non-expert annotators recruited from
the Internet are examined. Three selection cri-
teria are identified to select high-quality anno-
tations: noise level, sentiment ambiguity, and
lexical uncertainty. Analysis confirm the util-
ity of these criteria on improving data quality.
We conduct an empirical study to examine the
effect of noisy annotations on the performance
of sentiment classification models, and evalu-
ate the utility of annotation selection on clas-
sification accuracy and efficiency.
1 Introduction
Crowdsourcing (Howe, 2008) is an attractive solu-
tion to the problem of cheaply and quickly acquir-
ing annotations for the purposes of constructing all
kinds of predictive models. To sense the potential of
crowdsourcing, consider an observation in von Ahn
et al (2004): a crowd of 5,000 people playing an
appropriately designed computer game 24 hours a
day, could be made to label all images on Google
(425,000,000 images in 2005) in a matter of just 31
days. Several recent papers have studied the use
of annotations obtained from Amazon Mechanical
Turk, a marketplace for recruiting online workers
(Su et al, 2007; Kaisser et al, 2008; Kittur et al,
2008; Sheng et al, 2008; Snow et al, 2008; Sorokin
and Forsyth, 2008).
With efficiency and cost-effectiveness, online re-
cruitment of anonymous annotators brings a new set
of issues to the table. These workers are not usually
specifically trained for annotation, and might not be
highly invested in producing good-quality annota-
tions. Consequently, the obtained annotations may
be noisy by nature, and might require additional val-
idation or scrutiny. Several interesting questions im-
mediately arise in how to optimally utilize annota-
tions in this setting: How does one handle differ-
ences among workers in terms of the quality of an-
notations they provide? How useful are noisy anno-
tations for the end task of creating a model? Is it pos-
sible to identify genuinely ambiguous examples via
annotator disagreements? How should these consid-
erations be treated with respect to intrinsic informa-
tiveness of examples? These questions also hint at a
strong connection to active learning, with annotation
quality as a new dimension to the problem.
As a challenging empirical testbed for these is-
sues, we consider the problem of sentiment classi-
fication on political blogs. Given a snippet drawn
from a political blog post, the desired output is a
polarity score that indicates whether the sentiment
expressed is positive or negative. Such an analysis
provides a view of the opinion around a subject of
interest, e.g., US Presidential candidates, aggregated
across the blogsphere. Recently, sentiment analy-
27
sis is emerging as a critical methodology for social
media analytics. Previous research has focused on
classifying subjective-versus-objective expressions
(Wiebe et al, 2004), and also on accurate sentiment
polarity assignment (Turney, 2002; Yi et al, 2003;
Pang and Lee, 2004; Sindhwani and Melville, 2008;
Melville et al, 2009).
The success of most prior work relies on the qual-
ity of their knowledge bases; either lexicons defin-
ing the sentiment polarity of words around a topic
(Yi et al, 2003), or quality annotation data for sta-
tistical training. While manual intervention for com-
piling lexicons has been significantly lessened by
bootstrapping techniques (Yu and Hatzivassiloglou,
2003; Wiebe and Riloff, 2005), manual intervention
in the annotation process is harder to avoid. More-
over, the task of annotating blog-post snippets is
challenging, particularly in a charged political at-
mosphere with complex discourse spanning many
issues, use of cynicism and sarcasm, and highly
domain-specific and contextual cues. The downside
is that high-performance models are generally dif-
ficult to construct, but the upside is that annotation
and data-quality issues are more clearly exposed.
In this paper we aim to provide an empirical basis
for the use of data selection criteria in the context
of sentiment analysis in political blogs. Specifically,
we highlight the need for a set of criteria that can be
applied to screen untrustworthy annotators and se-
lect informative yet unambiguous examples for the
end goal of predictive modeling. In Section 2, we
first examine annotation data obtained by both the
expert and non-expert annotators to quantify the im-
pact of including non-experts. Then, in Section 3,
we quantify criteria that can be used to select anno-
tators and examples for selective sampling. Next, in
Section 4, we address the questions of whether the
noisy annotations are still useful for this task and
study the effect of the different selection criteria on
the performance of this task. Finally, in Section 5
we present conclusion and future work.
2 Annotating Blog Sentiment
This section introduces the Political Blog Snippet
(PBS) corpus, describes our annotation procedure
and the sources of noise, and gives an overview of
the experiments on political snippet sentiments.
2.1 The Political Blog Snippet Corpus
Our dataset comprises of a collection of snippets ex-
tracted from over 500,000 blog posts, spanning the
activity of 16,741 political bloggers in the time pe-
riod of Aug 15, 2008 to the election day Nov 4,
2008. A snippet was defined as a window of text
containing four consecutive sentences such that the
head sentence contained either the term ?Obama?
or the term ?McCain?, but both candidates were
not mentioned in the same window. The global
discourse structure of a typical political blog post
can be highly complicated with latent topics ranging
from policies (e.g., financial situation, economics,
the Iraq war) to personalities to voting preferences.
We therefore expected sentiment to be highly non-
uniform over a blog post. This snippetization proce-
dure attempts to localize the text around a presiden-
tial candidate with the objective of better estimat-
ing aggregate sentiment around them. In all, we ex-
tracted 631,224 snippets. For learning classifiers, we
passed the snippets through a stopword filter, pruned
all words that occur in less than 3 snippets and cre-
ated normalized term-frequency feature vectors over
a vocabulary of 3,812 words.
2.2 Annotation Procedure
The annotation process consists of two steps:
Sentiment-class annotation: In the first step, as
we are only interested in detecting sentiments re-
lated to the named candidate, the annotators were
first asked to mark up the snippets irrelevant to the
named candidate?s election campaign. Then, the an-
notators were instructed to tag each relevant snippet
with one of the following four sentiment polarity la-
bels: Positive, Negative, Both, or Neutral.
Alignment annotation: In the second step, the
annotators were instructed to mark up whether each
snippet was written to support or oppose the target
candidate therein named. The motivation of adding
this tag comes from our interest in building a classi-
fication system to detect positive and negative men-
tions of each candidate. For the snippets that do
not contain a clear political alignment, the annota-
tors had the freedom to mark it as neutral or simply
not alignment-revealing.
In our pilot study many bloggers were observed
to endorse a named candidate by using negative ex-
28
pressions to denounce his opponent. Therefore, in
our annotation procedure, the distinction is made
between the coding of manifest content, i.e., sen-
timents ?on the surface?, and latent political align-
ment under these surface elements.
2.3 Agreement Study
In this section, we compare the annotations obtained
from the on-site expert annotators and those from the
non-expert AMT annotators.
2.3.1 Expert (On-site) Annotation
To assess the reliability of the sentiment annota-
tion procedure, we conducted an agreement study
with three expert annotators in our site, using 36
snippets randomly chosen from the PBS Corpus.
Overall agreement among the three annotators on
the relevance of snippets is 77.8%. Overall agree-
ment on the four-class sentiment codings is 70.4%.
Analysis indicate that the annotators agreed better
on some codings than the others. For the task of
determining whether a snippet is subjective or not1,
the annotators agreed 86.1% of the time. For the
task of determining whether a snippet is positive or
negative, they agreed 94.9% of the time.
To examine which pair of codings is the most dif-
ficult to distinguish, Table 1 summarizes the confu-
sion matrix for the three pairs of annotator?s judge-
ments on sentiment codings. Each column describes
the marginal probability of a coding and the prob-
ability distribution for this coding being recognized
as another coding (including itself). As many blog-
gers use cynical expressions in their writings, the
most confusing cases occur when the annotators
have to determine whether a snippet is ?negative?
or ?neutral?. The effect of cynical expressions on
% Neu Pos Both Neg
Marginal 21.9 20.0 10.5 47.6
Neutral (Neu) 47.8 14.3 9.1 16.0
Positive (Pos) 13.0 61.9 18.2 6.0
Both (Both) 4.4 9.5 9.1 14.0
Negative (Neg) 34.8 14.3 63.6 64.0
Table 1: Summary matrix for the three on-site annotators?
sentiment codings.
1This is done by grouping the codings of Positive, Negative,
and Both into the subjective class.
sentiment analysis in the political domain is also re-
vealed in the second step of alignment annotation.
Only 42.5% of the snippets have been coded with
alignment coding in the same direction as its senti-
ment coding ? i.e., if a snippet is intended to support
(oppose) a target candidate, it will contain positive
(negative) sentiment. The alignment coding task has
been shown to be reliable, with the annotators agree-
ing 76.8% of the time overall on the three-level cod-
ings: Support/Against/Neutral.
2.3.2 Amazon Mechanical Turk Annotation
To compare the annotation reliability between
expert and non-expert annotators, we further con-
ducted an agreement study with the annotators re-
cruited from Amazon Mechanical Turk (AMT). We
have collected 1,000 snippets overnight, with the
cost of 4 cents per annotation.
In the agreement study, a subset of 100 snippets
is used, and each snippet is annotated by five AMT
annotators. These annotations were completed by
25 annotators whom were selected based on the ap-
proval rate of their previous AMT tasks (over 95%
of times).2 The AMT annotators spent on average
40 seconds per snippet, shorter than the average of
two minutes reported by the on-site annotators. The
lower overall agreement on all four-class sentiment
codings, 35.3%, conforms to the expectation that the
non-expert annotators are less reliable. The Turk an-
notators also agreed less on the three-level alignment
codings, achieving only 47.2% of agreement.
However, a finer-grained analysis reveals that they
still agree well on some codings: The overall agree-
ment on whether a snippet is relevant, whether a
snippet is subjective or not, and whether a snippet
is positive or negative remain within a reasonable
range: 81.0%, 81.8% and 61.9% respectively.
2.4 Gold Standard
We defined the gold standard (GS) label of a snip-
pet in terms of the coding that receives the major-
ity votes.3 Column 1 in Table 2 (onsite-GS predic-
2Note that we do not enforce these snippets to be annotated
by the same group of annotators. However, Kappa statistics
requires to compute the chance agreement of each annotator.
Due to the violation of this assumption, we do not measure the
intercoder agreement with Kappa in this agreement study.
3In this study, we excluded 6 snippets whose annotations
failed to reach majority vote by the three onsite annotators.
29
onsite-GS prediction onsite agreement AMT-GS prediction AMT agreement
Sentiment (4-class) 0.767 0.704 0.614 0.353
Alignment (3-level) 0.884 0.768 0.669 0.472
Relevant or not 0.889 0.778 0.893 0.810
Subjective or not 0.931 0.861 0.898 0.818
Positive or negative 0.974 0.949 0.714 0.619
Table 2: Average prediction accuracy on gold standard (GS) using one-coder strategy and inter-coder agreement.
tion) shows the ratio of the onsite expert annotations
that are consistent with the gold standard, and Col-
umn 3 (AMT-GS prediction) shows the same for the
AMT annotations. The level of consistency, i.e., the
percentage agreement with the gold standard labels,
can be viewed as a proxy of the quality of the an-
notations. Among the AMT annotations, Columns
2 (onsite agreement) and 4 (AMT agreement) show
the pair-wise intercoder agreement in the on-site ex-
pert and AMT annotations respectively.
The results suggest that it is possible to take one
single expert annotator?s coding as the gold standard
in a number of annotation tasks using binary clas-
sification. For example, there is a 97.4% chance
that one expert?s coding on the polarity of a snip-
pet, i.e., whether it is positive or negative, will be
consistent with the gold standard coding. However,
this one-annotator strategy is less reliable with the
introduction of non-expert annotators. Take the task
of polarity annotation as an example, the intercoder
agreement among the AMT workers goes down to
61.9% and the ?one-coder? strategy can only yield
71.4% accuracy. To determine reliable gold stan-
dard codings, multiple annotators are still necessary
when non-expert annotators are recruited.
3 Annotation Quality Measures
Given the noisy AMT annotations, in this section we
discuss some summary statistics that are needed to
control the quality of annotations.
3.1 Annotator-level noise
To study the question of whether there exists a group
of annotators who tend to yield more noisy annota-
tions, we evaluate the accumulated noise level intro-
duced by each of the annotators. We define the noise
level as the deviation from the gold standard labels.
Similar to the measure of individual error rates pro-
posed in (Dawid and Skene, 1979), the noise level of
a particular annotator j, i.e., noise(annoj), is then
estimated by summing up the deviation of the an-
notations received from this annotator, with a small
sampling correction for chance disagreement. Anal-
ysis results demonstrate that there does exist a subset
of annotators who yield more noisy annotations than
the others. 20% of the annotators (who exceed the
noise level 60%) result in annotations that have 70%
disagreement with the gold standard.
In addition, we also evaluate how inclusion of
noisy annotators reduces the mean agreement with
Gold Standard. The plot (left) in Figure 1 plots the
mean agreement rate with GS over the subset of an-
notators that pass a noise threshold. These results
show that the data quality decreases with the inclu-
sion of more untrustworthy annotators.
3.2 Snippet-level sentiment ambiguity
We have observed that not all snippets are equally
easy to annotate, with some containing more am-
biguous expressions. To incorporate this concern in
the selection process, a key question to be answered
is whether there exist snippets whose sentiment is
substantially less distinguishable than the others.
We address this question by quantifying ambigu-
ity measures with the two key properties shown as
important in evaluating the controversiality of anno-
tation snippets (Carenini and Cheung, 2008): (1) the
strength of the annotators? judgements and (2) the
polarity of the annotations. The measurement needs
to satisfy the constraints demonstrated in the follow-
ing snippets: (1) An example that has received three
positive codings are more ambiguous than that has
received five, and (2) an example that has received
five positive codings is more ambiguous than the one
that has received four positive and one negative cod-
ing. In addition, as some snippets were shown to
30
Annotator noise level
Predictio
n Accur
acy
0.0 0.2 0.4 0.6 0.80.
0
0.2
0.4
0.6
0.8
1.0
Annotator Noise
0.0 0.2 0.4 0.6 0.8 1.00.
0
0.2
0.4
0.6
0.8
1.0
Sentiment Ambigity
Lexical Uncertainty
Predictio
n Accur
acy
0.0 0.2 0.4 0.6 0.8 1.00.
0
0.2
0.4
0.6
0.8
1.0
Lexical Uncertainty
Figure 1: Data quality (consistency with GS) as a function of noise level (left), sentiment ambiguity (middle), and
lexical uncertainty (right).
be difficult to tell whether they contain negative or
neutral sentiment, the measure of example ambigu-
ity has to go beyond controversiality and incorporate
codings of ?neutral? and ?both?.
To satisfy these constraints, we first enumerated
through the codings of each snippet and counted
the number of neutral, positive, both, and negative
codings: We added (1) one to the positive (nega-
tive) category for each positive (negative) coding,
(2) 0.5 to the neutral category with each neutral cod-
ing, and (3) 0.5 to both the positive and negative
categories with each both coding. The strength of
codings in the three categories, i.e., str+(snipi),
strneu(snipi), and str?(snipi), were then summed
up into str(snipi). The distribution were parame-
terized with
?+(snipi) = str+(snipi)/str(snipi)
?neu(snipi) = strneu(snipi)/str(snipi)
??(snipi) = str?(snipi)/str(snipi)
We then quantify the level of ambiguity in the an-
notator?s judgement as follows:
H(?(snipi)) = ??+(snipi)log(?+(snipi))
??neu(snipi)log(?neu(snipi))
???(snipi)log(??(snipi))
Amb(snipi) = str(snipi)strmax ?H(?(snipi)),
where strmax is the maximum value of str among
all the snippets in the collection. The plot (middle)
in Figure 1 shows that with the inclusion of snip-
pets that are more ambiguous in sentiment disam-
biguation, the mean agreement with Gold Standard
decreases as expected.
3.3 Combining measures on multiple
annotations
Having established the impact of noise and senti-
ment ambiguity on annotation quality, we then set
out to explore how to integrate them for selection.
First, the ambiguity scores for each of the snippets
are reweighed with respect to the noise level.
w(snipi) =
?
j
noise(annoj)? (1e )
?(ij)
Conf(snipi) = w(snipi)?
iw(snipi)
?Amb(snipi),
where ?(ij) is an indicator function of whether a
coding of snipi from annotator j agrees with its gold
standard coding. w(expi) is thus computed as the
aggregated noise level of all the annotators who la-
beled the ith snippet.
To understand the baseline performance of the se-
lection procedure, we evaluate the the true predic-
tions versus the false alarms resulting from using
each of the quality measures separately to select an-
notations for label predictions. In this context, a true
prediction occurs when an annotation suggested by
our measure as high-quality indeed matches the GS
label, and a false alarm occurs when a high quality
annotation suggested by our measure does not match
the GS label. The ROC (receiver operating charac-
teristics) curves in Figure 2 reflect all the potential
operating points with the different measures.
We used data from 2,895 AMT annotations on
579 snippets, including 63 snippets used in the
agreement study. This dataset is obtained by filter-
ing out the snippets with their GS labels as 1 (?ir-
relevant?) and the snippets that do not receive any
coding that has more than two votes.
31
0.0 0.2 0.4 0.6 0.8 1.0
0.0
0.2
0.4
0.6
0.8
1.0
False Alarm Rate
True P
redict
ion Ra
te
lllll
l
l
l
ll
0.1.20.30.40.50.6
0.7
0.8
0.91
(a) Match Prediction Before Removing Divisive Snippets
1?confusion1?ambiguity1?noise
0.0 0.2 0.4 0.6 0.8 1.0
0.0
0.2
0.4
0.6
0.8
1.0
False Alarm Rate
True P
redict
ion Ra
te
lllll
l
l
l
l
l
0.10.20.30.40.50.6
0.7
0.8
0.9
1
(b) Match Prediction After Removing Divisive Snippets
1?confusion(all4codings)1?confusion(pos/neg)1?ambiguity(all4codings)1?ambiguity(pos/neg)1?noise
Figure 2: Modified ROC curves for quality measures: (a) before removing divisive snippets, (b) after removing divisive
snippets. The numbers shown with the ROC curve are the values of the aggregated quality measure (1-confusion).
Initially, three quality measures are tested: 1-
noise, 1-ambiguity, 1-confusion. Examination of the
snippet-level sentiment codings reveals that some
snippets (12%) result in ?divisive? codings, i.e.,
equal number of votes on two codings.
The ROC curves in Figure 2 (a) plot the base-
line performance of the different quality measures.
Results show that before removing the subset of di-
visive snippets, the only effective selection criteria
is obtained by monitoring the noise level of anno-
tators. Figure 2 (b) plots the performance after re-
moving the divisive snippets. In addition, our am-
biguity scores are computed under two settings: (1)
with only the polar codings (pos/neg), and (2) with
all the four codings (all4codings). The ROC curves
reveal that analyzing only the polar codings is not
sufficient for annotation selection.
The results also demonstrate that confusion, an in-
tegrated measure, does perform best. Confusion is
just one way of combining these measures. One may
chose alternative combinations ? the results here pri-
marily illustrate the benefit of considering these dif-
ferent dimensions in tandem. Moreover, the differ-
ence between plot (a) and (b) suggests that removing
divisive snippets is essential for the quality measures
to work well. How to automatically identify the di-
visive snippets is therefore important to the success
of the annotation selection process.
3.4 Effect of lexical uncertainty on divisive
snippet detection
In search of measures that can help identify the di-
visive snippets automatically, we consider the inher-
ent lexical uncertainty of an example. Uncertainty
Sampling (Lewis and Catlett, 1994) is one common
heuristic for the selection of informative instances,
which select instances that the current classifier is
most uncertain about. Following on these lines we
measure the uncertainty on instances, with the as-
sumption that the most uncertain snippets are likely
to be divisive.
In particular, we applied a lexical sentiment clas-
sifier (c.f. Section 4.1.1) to estimate the likelihood of
an unseen snippet being of positive or negative sen-
timent, i.e., P+(expi), P?(expi), by counting the
sentiment-indicative word occurrences in the snip-
pet. As in our dataset the negative snippets far ex-
ceed the positive ones, we also take the prior proba-
bility into account to avoid class bias. We then mea-
sure lexical uncertainty as follows.
Deviation(snipi) =
1
C ? |(log(P (+))?log(P (?)))
+(log(P+(snipi))?log(P?(snipi)))|,
Uncertainty(snipi) =1?Deviation(snipi),
where class priors, P (+) and P (?), are estimated
with the dataset used in the agreement studies, and
C is the normalization constant.
We then examine not only the utility of lexical un-
certainty in identifying high-quality annotations, but
32
Classifier Accuracy AUC
LC 49.60 0.614
NB 83.53 0.653
SVM 83.89 0.647
Pooling 84.51 0.700
Table 3: Accuracy of sentiment classification methods.
also the utility of such measure in identifying divi-
sive snippets. Figure 1 (right) shows the effect of
lexical uncertainty on filtering out low-quality anno-
tations. Figure 3 demonstrates the effect of lexical
uncertainty on divisive snippet detection, suggesting
the potential use of lexical uncertainty measures in
the selection process.
Lexical Uncertainty
Divisive 
Snippet D
etection 
Accuracy
0.0 0.2 0.4 0.6 0.8 1.00.0
0.2
0.4
0.6
0.8
1.0
Figure 3: Divisive snippet detection accuracy as a func-
tion of lexical uncertainty.
4 Empirical Evaluation
The analysis in Sec. 3 raises two important ques-
tions: (1) how useful are noisy annotations for sen-
timent analysis, and (2) what is the effect of online
annotation selection on improving sentiment polar-
ity classification?
4.1 Polarity Classifier with Noisy Annotations
To answer the first question raised above, we train
classifiers based on the noisy AMT annotations to
classify positive and negative snippets. Four dif-
ferent types of classifiers are used: SVMs, Naive
Bayes (NB), a lexical classifier (LC), and the lexi-
cal knowledge-enhanced Pooling Multinomial clas-
sifier, described below.
4.1.1 Lexical Classifier
In the absence of any labeled data in a domain,
one can build sentiment-classification models that
rely solely on background knowledge, such as a lex-
icon defining the polarity of words. Given a lexi-
con of positive and negative terms, one straightfor-
ward approach to using this information is to mea-
sure the frequency of occurrence of these terms in
each document. The probability that a test document
belongs to the positive class can then be computed
as P (+|D) = aa+b ; where a and b are the numberof occurrences of positive and negative terms in the
document respectively. A document is then classi-
fied as positive if P (+|D) > P (?|D); otherwise,
the document is classified as negative. For this study,
we used a lexicon of 1,267 positive and 1,701 nega-
tive terms, as labeled by human experts.
4.1.2 Pooling Multinomials
The Pooling Multinomials classifier was intro-
duced by the authors as an approach to incorpo-
rate prior lexical knowledge into supervised learn-
ing for better text classification. In the context
of sentiment analysis, such lexical knowledge is
available in terms of the prior sentiment-polarity of
words. Pooling Multinomials classifies unlabeled
examples just as in multinomial Na??ve Bayes clas-
sification (McCallum and Nigam, 1998), by predict-
ing the class with the maximum likelihood, given by
argmaxcjP (cj)
?
i P (wi|cj); where P (cj) is the
prior probability of class cj , and P (wi|cj) is the
probability of word wi appearing in a snippet of
class cj . In the absence of background knowledge
about the class distribution, we estimate the class
priors P (cj) solely from the training data. However,
unlike regular Na??ve Bayes, the conditional prob-
abilities P (wi|cj) are computed using both the la-
beled examples and the lexicon of labeled features.
Given two models built using labeled examples and
labeled features, the multinomial parameters of such
models can be aggregated through a convex combi-
nation, P (wi|cj) = ?Pe(wi|cj)+(1??)Pf (wi|cj);
where Pe(wi|cj) and Pf (wi|cj) represent the proba-
bility assigned by using the example labels and fea-
ture labels respectively, and ? is the weight for com-
bining these distributions. The weight indicates a
level of confidence in each source of information,
and can be computed based on the training set accu-
racy of the two components. The derivation and de-
tails of these models are not directly relevant to this
paper, but can be found in (Melville et al, 2009).
33
Q1 Q2 Q3 Q4
Accuracy AUC Accuracy AUC Accuracy AUC Accuracy AUC
Noise 84.62% 0.688 74.36% 0.588 74.36% 0.512 79.49% 0.441
Ambiguity 84.21% 0.715 78.95% 0.618 68.42% 0.624 84.21% 0.691
Confusion 82.50% 0.831 82.50% 0.762 80.00% 0.814 80.00% 0.645
Table 4: Effect of annotation selection on classification accuracy.
4.1.3 Results on Polarity Classification
We generated a data set of 504 snippets that had
3 or more labels for either the positive or negative
class. We compare the different classification ap-
proaches using 10-fold cross-validation and present
our results in Table 3. Results show that the Pool-
ing Multinomial classifier, which makes predictions
based on both the prior lexical knowledge and the
training data, can learn the most from the labeled
data to classify sentiments of the political blog snip-
pets. We observe that despite the significant level
of noise and ambiguity in the training data, using
majority-labeled data for training still results in clas-
sifiers with reasonable accuracy.
4.2 Effect of Annotation Selection
We then evaluate the utility of the quality measures
in a randomly split dataset (with 7.5% of the data in
the test set). We applied each of the measures to rank
the annotation examples and then divide them into
4 equal-sized training sets based on their rankings.
For example, Noise-Q1 contains only the least noisy
quarter of annotations and Q4 the most noisy ones.
Results in Table 4 demonstrate that the classi-
fication performance declines with the decrease of
each quality measure in general, despite exceptions
in the subset with the highest sentiment ambiguity
(Ambiguity-Q4), the most noisy subset Q4 (Noise-
Q4), and the subset yielding less overall confusion
(Confusion-Q2). The results also reveal the benefits
of annotation selection on efficiency: using the sub-
set of annotations predicted in the top quality quar-
ter achieves similar performance as using the whole
training set. These preliminary results suggest that
an active learning scheme which considers all three
quality measures may indeed be effective in improv-
ing label quality and subsequent classification accu-
racy.
5 Conclusion
In this paper, we have analyzed the difference be-
tween expert and non-expert annotators in terms of
annotation quality, and showed that having a single
non-expert annotator is detrimental for annotating
sentiment in political snippets. However, we con-
firmed that using multiple noisy annotations from
different non-experts can still be very useful for
modeling. This finding is consistent with the sim-
ulated results reported in (Sheng et al, 2008). Given
the availability of many non-expert annotators on-
demand, we studied three important dimensions to
consider when acquiring annotations: (1) the noise
level of an annotator compared to others, (2) the in-
herent ambiguity of an example?s class label, and
(3) the informativeness of an example to the current
classification model. While the first measure has
been studied with annotations obtained from experts
(Dawid and Skene, 1979; Clemen and Reilly, 1999),
the applicability of their findings on non-expert an-
notation selection has not been examined.
We showed how quality of labels can be improved
by eliminating noisy annotators and ambiguous ex-
amples. Furthermore, we demonstrated the quality
measures are useful for selecting annotations that
lead to more accurate classification models. Our re-
sults suggest that a good active learning or online
learning scheme in this setting should really con-
sider all three dimensions. The way we use to in-
tegrate the different dimensions now is still prelimi-
nary. Also, our empirical findings suggest that some
of the dimensions may have to be considered sepa-
rately. For example, due to the divisive tendency of
the most informative examples, these examples may
have to be disregarded in the initial stage of anno-
tation selection. Also, the way we use to combine
these measures is still preliminary. The design and
testing of such schemes are avenues for future work.
34
References
Giuseppe Carenini and Jackie C. K. Cheung. 2008. Ex-
tractive vs. NLG-based abstractive summarization of
evaluative text: The effect of corpus controversiality.
In Proceedings of the Fifth International Natural Lan-
guage Generation Conference.
R.T. Clemen and T. Reilly. 1999. Correlations and cop-
ulas for decision and risk analysis. Management Sci-
ence, 45:208?224.
A. P. Dawid and A. .M. Skene. 1979. Maximum likli-
hood estimation of observer error-rates using the em
algorithm. Applied Statistics, 28(1):20?28.
Jeff Howe. 2008. Crowdsourcing: Why the Power of
the Crowd Is Driving the Future of Business. Crown
Business, 1 edition, August.
Michael Kaisser, Marti Hearst, and John B. Lowe. 2008.
Evidence for varying search results summary lengths.
In Proceedings of ACL 2008.
Aniket Kittur, Ed H. Chi, and Bongwon Suh. 2008.
Crowdsourcing user studies with mechanical turk. In
Proceedings of CHI 2008.
David D. Lewis and Jason Catlett. 1994. Heterogeneous
uncertainty sampling for supervised learning. pages
148?156, San Francisco, CA, July.
Andrew McCallum and Kamal Nigam. 1998. A com-
parison of event models for naive Bayes text classifi-
cation. In AAAI Workshop on Text Categorization.
Prem Melville, Wojciech Gryc, and Richard Lawrence.
2009. Sentiment analysis of blogs by combining lexi-
cal knowledge with text classification. In KDD.
Bo Pang and Lillian Lee. 2004. A sentiment education:
Sentiment analysis using subjectivity summarization
based on minimum cuts. In Proceedings of ACL 2004.
Victor Sheng, Foster Provost, and G. Panagiotis Ipeiro-
tis. 2008. Get another label? Improving data quality
and data mining using multiple, noisy labelers. In Pro-
ceeding of KDD 2008, pages 614?622.
Vikas Sindhwani and Prem Melville. 2008. Document-
word co-regularization for semi-supervised sentiment
analysis. In Proceedings of IEEE International Con-
ference on Data Mining (ICDM), pages 1025?1030,
Los Alamitos, CA, USA. IEEE Computer Society.
R. Snow, B. O?Connor, D. Jurafsky, and A. Ng. 2008.
Cheap and fast?but is it good? evaluating non-expert
annotations for natural language tasks. In Proceedings
of EMNLP 2008.
Alexander Sorokin and David Forsyth. 2008. Utility
data annotation via amazon mechanical turk. In IEEE
Workshop on Internet Vision at CVPR 08.
Qi Su, Dmitry Pavlov, Jyh-Herng Chow, and Wendell
C.Baker. 2007. Internet-scale collection of human-
reviewed data. In Proceedings of WWW 2007.
Peter D. Turney. 2002. Thumbs up or thumbs down:
Semantic orientation applied to unsupervised classifi-
cation of reviews. In Proceedings of ACL 2002.
Luis von Ahn and Laura Dabbish. 2004. Labeling im-
ages with a computer game. In Proceedings of CHI
2004, pages 319?326.
Janyce Wiebe and E. Riloff. 2005. Creating subjec-
tive and objective sentence classifiers from unanno-
tated texts. In Proceedings of CICLing 2005.
Janyce Wiebe, Theresa Wilson, Rebecca Bruce, Matthew
Bell, and Melanie Martin. 2004. Learning subjective
language. Computational Linguistics, 30 (3).
Jeonghee Yi, Tetsuya Nasukawa, Razvan Bunescu, and
Wayne Niblack. 2003. Sentiment analyzer: Extract-
ing sentiments about a given topic using natural lan-
guage processing technique. In Proceedings of the
International Conference on Data Mining (ICDM),
pages 427?434.
Hong Yu and Vasileios Hatzivassiloglou. 2003. Towards
answering opinion questions: Separating facts from
opinions and identifying the polarity of opinion sen-
tences. In Proceedings of EMNLP 2003.
35
