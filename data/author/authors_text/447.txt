Grammar and Lexicon in the Robust Parsing of Italian 
Towards a Non-Na?ve Interplay 
 
Roberto  
BARTOLINI 
Istituto di Linguistica 
Computazionale CNR 
Area della Ricerca 
Via Moruzzi 1 
56100 PISA (Italy) 
Alessandro  
LENCI 
Universit? di Pisa 
Via Santa Maria 36 
56100 PISA (Italy) 
Simonetta  
MONTEMAGNI 
Istituto di Linguistica Com-
putazionale CNR 
Area della Ricerca 
Via Moruzzi 1 
56100 PISA (Italy) 
Vito  
PIRRELLI 
Istituto di Linguistica 
Computazionale CNR 
Area della Ricerca 
Via Moruzzi 1 
56100 PISA (Italy) 
 
{roberto.bartolini, alessandro.lenci, simonetta.montemagni, vito.pirrelli}@ilc.cnr.it 
 
Abstract 
In the paper we report a qualitative evalua-
tion of the performance of a dependency 
analyser of Italian that runs in both a non-
lexicalised and a lexicalised mode. Results 
shed light on the contribution of types of 
lexical information to parsing.    
Introduction 
It is widely assumed that rich computational 
lexicons form a fundamental component of reli-
able parsing architectures and that lexical infor-
mation can only have beneficial effects on 
parsing. Since the beginning of work on broad-
coverage parsing  (Jensen 1988a, 1988b), the 
key issue has been how to make effective use of 
lexical information. In this paper we put these 
assumptions to the test by addressing the follow-
ing questions: to what extent should a lexicon be 
trusted for parsing? What is the neat contribution 
of lexical information to overall parse success? 
We present here the results of a preliminary 
evaluation of the interplay between lexical and 
grammatical information in parsing Italian using 
a robust parsing system based on an incremental 
approach to shallow syntactic analysis. The sys-
tem can run in both a non-lexicalised and a lexi-
calised mode. Careful analysis of the results 
shows that contribution of lexical information to 
parse success is more selective than commonly 
assumed,  thus raising the parallel issues of how 
to promote a more effective integration between 
parsers and lexicons and how to develop better 
lexicons for parsing.  
1 Syntactic parsing lexicons 
Syntactic lexical information generally feeds 
parsing systems distilled in subcategorization 
frames. Subcategorization is a formal specifica-
tion of a predicate phrasal context in terms of the 
type of arguments syntactically selected by the 
predicate entry (e.g. the verb hit selects for a 
subject NP and an object NP). Lexical frames 
commonly include: i.) number of selected argu-
ments, ii.) syntactic categories of their possible 
realization (NP, PP, etc.), iii.) lexical constraints 
on the argument realization (e.g. the preposition 
heading a PP complement), and iv.) the argu-
ment functional role. Other types of syntactic in-
formation that are also found in syntactic 
lexicons are: argument optionality, verb control, 
auxiliary selection, order constraints, etc. On the 
other hand, collocation-based lexical informa-
tion is only rarely provided by computational 
lexicons, a gap often lamented in robust parsing 
system development. 
A number of syntactic computational lexi-
cons are nowadays available to the NLP com-
munity. Important examples are LDOCE 
(Procter 1987), ComLex (Grishman et al 1994), 
PAROLE (Ruimy et al 1998). These lexicons 
are basically hand-crafted by expert lexicogra-
phers, and their natural purpose is to provide 
general purpose, domain-independent syntactic 
information, covering the most frequent entries 
and frames. On the other hand, parsing systems 
often complement general lexicons with corpus-
driven, automatically harvested syntactic infor-
mation (Federici et al 1998b, Briscoe 2001, 
Korhonen 2002). Automatic acquisition of sub-
categorization frames allows systems to access 
highly context dependent constructions, to fill in 
possible lexical gaps and eventually rely on fre-
quency information to tune the relative impact of 
specific frames (Carroll et al 1998). 
Lexicon coverage is usually regarded as the 
main parameter affecting use of lexical informa-
tion for parsing. However, the real comparative 
impact of the type (rather than the mere quan-
tity) of lexical information has been seldom dis-
cussed. Our results show that the contribution of 
various lexical information types to parse suc-
cess is not uniform. The experiment focuses on a 
particular subset of the information available in 
syntactic lexicons - the representation of PP 
complements in lexical frames - tested on the 
task of PP-attachment. The reason for this 
choice is that this piece of information occupies 
a central and dominant position in existing lexi-
cons. For instance in the Italian PAROLE lexi-
con, more than one third of verb frames contain 
positions realized by a PP, and this percentage 
raises up to the near totality noun-headed 
frames. 
2 Robust Parsing of Italian 
The general architecture of the Italian parsing 
system used for testing adheres to the following 
principles: 1) modular approach to parsing, 2) 
underspecified output (whenever required), 3) 
cautious use of lexical information, generally re-
sorted to in order to refine and/or further specify 
analyses already produced on the basis of 
grammatical information. These principles un-
derlie other typical robust parsing architectures 
(Chanod 2001, Briscoe and Carroll 2002). 
The system consists of i.) CHUNK-IT 
(Federici et al 1998a), a battery of finite state 
automata for non-recursive text segmentation 
(chunking), and ii.) IDEAL (Lenci et al 2001), a 
dependency-based analyser of the full range of 
intra-sentential functional relations (e.g. subject, 
object, modifier, complement, etc.). CHUNK-IT 
requires a minimum of lexical knowledge: 
lemma, part of speech and morpho-syntactic fea-
tures. IDEAL includes in turn two main compo-
nents: (i.) a Core Dependency Grammar of 
Italian; (ii.) a syntactic lexicon of ~26,400 sub-
categorization frames for nouns, verbs and ad-
jectives derived from the Italian PAROLE 
syntactic lexicon (Ruimy et al 1998). The 
IDEAL Core Grammar is formed by ~100 rules 
(implemented as finite state automata) covering 
major syntactic phenomena,1 and organized into 
structurally-based rules and lexically-based 
rules. IDEAL adopts a slightly simplified ver-
sion of the FAME annotation scheme (Lenci et 
al. 2000), where functional relations are head-
based and hierarchically organised to make pro-
vision for underspecified representations of 
highly ambiguous functional analyses. This fea-
ture allows IDEAL to tackle cases where lexical 
information is incomplete, or where functional 
relations cannot be disambiguated conclusively 
(e.g. in the case of the argument vs. adjunct dis-
tinction). A ?confidence score? is associated 
with some of the identified dependency relations 
to determine a plausibility ranking among dif-
ferent possible analyses. 
In IDEAL, lexico-syntactic information inter-
venes only after possibly underspecified de-
pendency relations have been identified on the 
basis of structural information only. At this sec-
ond stage, the lexicon is accessed to provide ex-
tra conditions on parsing, so that the first stage 
parse can be non-monotonically altered in vari-
ous ways (see section 3.3). This strategy mini-
mises the impact of lexical gaps (whether at the 
level of lemma or of the associated subcategori-
zation frames) on the system performance (in 
particular on its coverage). 
3 The Experiment 
3.1 The Test Corpus (TC) 
The test corpus contains a selection of sentences 
extracted from the balanced partition of the Ital-
ian Syntactic Semantic Treebank (ISST, Mon-
temagni et al 2000), including articles from 
 
1 Adjectival and adverbial modification; negation; (non-
extraposed) sentence arguments (subject, object, indirect 
object); causative and modal constructions; predicative 
constructions; PP complementation and modification; em-
bedded finite and non-finite clauses; control of infinitival 
subjects; relative clauses (main cases); participial construc-
tions; adjectival coordination; noun-noun coordination 
(main cases); PP-PP coordination (main cases); cliticiza-
tion. 
contemporary Italian newspapers and periodicals 
covering a high variety of topics (politics, econ-
omy, culture, science, health, sport, leisure, etc.). 
TC consists of 23,919 word tokens, correspond-
ing to 721 sentences (with a mean sentence 
length of 33.18 words, including punctuation to-
kens). The mean number of grammatical rela-
tions per sentence is 18. 
3.2 The Baseline Parser (BP) 
The baseline parser is a non-lexicalised version 
of IDEAL including structurally-based rules 
only. The mean number of grammatical relations 
per sentence detected by BP in TC is 15. 
The output of the baseline parser is shallow in 
different respects. First, it contains underspeci-
fied analyses, resorted to whenever available 
structural information does not allow for a more 
specific syntactic interpretation: e.g. at this level, 
no distinction is made between arguments and 
modifiers, which are all generically tagged as 
?complements?. Concerning attachment, the sys-
tem tries all structurally-compatible attachment 
hypotheses and ranks them according to a confi-
dence score. Strong preference is given to 
rightmost attachments: e.g. a prepositional com-
plement is attached with the highest confidence 
score (50) to the closest, or rightmost, available 
lexical head. In the evaluation reported in section 
4, we consider top-ranked dependents only, i.e. 
those enforcing rightmost attachment. Moreover, 
in matching the relations yielded by the parser 
with the ISST relations in TC we make allowance 
for one level of subsumption, i.e. a BP relation can 
be one level higher than its ISST counterpart in 
the hierarchy of dependency relations. Finally, the 
BP output is partial with respect to those depend-
encies (e.g. a that-clause or a direct object) that 
would be very difficult to identify with a suffi-
cient degree of confidence through structurally-
based rules only.  
3.3 The Lexically-Augmented Parser (LAP) 
The lexically-augmented version of IDEAL in-
cludes both structurally-based and lexically-
based rules (using the PAROLE lexicon). In this 
lexically-augmented configuration, IDEAL first 
tries to identify as many dependencies as possi-
ble with structural information. Lexically-based 
rules intervene later to refine and/or complete 
structurally-based analyses. Those structurally-
based hypotheses that find support in the lexicon 
are assigned the highest score (60). The contri-
bution of lexically-based rules is non-monotonic:
old relations can eventually be downgraded, as 
they happen to score, in the newly ranked list of 
possible relations, lower than their lexically-
based alternatives. Furthermore, specification of 
a former underspecified relation is always ac-
companied by a re-ranking of the relations iden-
tified for a given sentence; from this re-ranking, 
restructuring (e.g. reattachment of complements) 
of the final output may follow. 
LAP output thus includes: 
a) fully specified dependency relations: e.g. an 
underspecified dependency relation such as 
?complement? (COMP), identified by a struc-
turally-based rule, is rewritten, when lexi-
cally-supported, as ?indirect object? (OBJI) 
and assigned a higher confidence value; 
b) new dependency relations: this is the case, 
for instance, of that-clauses, direct objects 
and other relation types whose identification 
is taken to be too difficult and noisy without 
support of lexical evidence; 
c) underspecified dependency relations, for 
those cases that find no lexical support. 
The mean number of grammatical relations per 
sentence detected by LAP in TC is 16. In the 
evaluation of section 4, we consider top-ranked 
dependents only (confidence score  50), corre-
sponding to either lexically-supported dependency 
relations or ? in their absence ? to rightmost at-
tachments. Again, in matching the relations 
yielded by the parser with the ISST relations in 
TC we make allowance for one level of subsump-
tion. 
4 Analysis of Results 
The parsing outputs of BP and LAP were com-
pared and projected against ISST annotation to 
assess the contribution of lexical information to 
parse success. In this paper, we focus on the 
evaluation of how and to which extent lexico-
syntactic information contributes to identifica-
tion of the proper attachment of prepositional 
complements. For an assessment of the role and 
impact of lexical information in the analysis of 
dependency pairs headed by specific words, the 
interested reader is referred to Bartolini et al
(2002). 
4.1 Quantitative Evaluation 
Table 1 summarises the results obtained by the 
two different parsing configurations (BP and 
LAP) on the task of attaching prepositional 
complements (PC). Prepositional complements 
are classified with respect to the governing head: 
PC_VNA refers to all prepositional comple-
ments governed by V(erbal), N(ominal) or 
A(djectival) heads. PC_V is the subset with a 
V(erbal) head and PC_N the subset with a 
N(ominal) head. For each PC class, precision, 
recall and f score figures are given for the differ-
ent parsing configurations. Precision is defined 
as the ratio of correctly identified dependency 
relations over all relations found by the parser 
(prec = correctly identified relations / total num-
ber of identified relations); recall refers to the ra-
tio of correctly identified dependency relations 
over all relations in ISST (recall = correctly 
identified relations / ISST relations). Finally, the 
overall performance of the parsing systems is 
described in terms of the f score, computed as 
follows: 2 prec recall / prec + recall. 
 
BP LAP ISST 
Prec recall F score Prec recall f score 
PC_VNA 3458 75,53 57,40 65,23 74,82 61,02 67,22
PC_V 1532 75,43 45,50 56,76 74,23 49,50 61,22
PC_N 1835 73,53 80,82 77,00 72,76 81,36 76,82
Table 1. Prepositional complement attachment in BP and LAP 
 
Table 2. Lexicalised attachments 
 
To focus on the role of the lexicon in either con-
firming or revising structure-based dependen-
cies, lexically-supported attachments are singled 
out for evaluation in Table 2. Their cumulative 
frequency counts are reported in the first three 
columns of Table 2 (?Lexicalised attachments?), 
together with their distribution per head catego-
ries. Lexicalised attachments include both those 
structure-based attachments that happen to be 
confirmed lexically (?Confirmed attachments?), 
and restructured attachments, i.e. when a prepo-
sitional complement previously attached to the 
closest available head to its left is eventually re-
assigned as the dependent of a farther head, on 
the basis of lexicon look-up (?Restructured at-
tachments?). Table 2 thus shows the impact of 
lexical information on the task of PP attachment. 
In most cases, 89% of the total of lexicalised at-
tachments, LAP basically confirms dependency 
relations already assigned at the previous stage. 
Newly discovered attachments, which are de-
tected thanks to lexicon look-up and re-ranking,  
amount to only 11% of all lexicalised attach-
ments, less than 3% of all PP attachments 
yielded by LAP.  
4.3 Discussion 
4.3.1 Recall and precision on noun and verb 
heads 
Let us consider the output of BP first. The strik-
ing difference in the recall of noun-headed vs 
verb-headed prepositional attachments (on com-
parable levels of precision, rows 2 and 3 of Ta-
ble 1) prompts the suggestion that the typical 
context of use of a noun is more easily described 
in terms of local, order-contingent criteria (e.g. 
rightmost attachment) than a verb context is. We 
can give at least three reasons for that. First, 
frame bearing nouns tend to select fewer argu-
 Lexicalised atts Confirmed atts Restructured atts 
total OK prec Total OK prec total OK prec 
PP_VNA 919 819 89,12 816 771 94,49 103 65 63,11
PP_V 289 244 84,43 201 194 96,52 88 61 69,32
PP_N 629 575 91,41 614 577 93,97 15 4 26,67
ments than verbs do. In our lexicon, 1693 verb-
headed frames out of 6924 have more than one 
non subject argument (24.4%), while there being 
only 1950 noun-headed frames out of 15399 
with more than one argument (12.6%). In TC, of 
2300 head verb tokens, 328 exhibit more than 
one non subject argument (14%). Rightmost at-
tachment trivially penalises such argument 
chains, where some arguments happen to be 
overtly realised in context one or more steps re-
moved from their heads. The second reason is 
sensitive to language variation: verb arguments 
tend to be dislocated more easily than noun ar-
guments, as dislocation heavily depends on sen-
tence-level (hence main verb-level) phenomena 
such as shift of topic or emphasis. In Italian, 
topic-driven argument dislocation in preverbal 
position is comparatively frequent and repre-
sents a problem for the baseline parser, which 
works on a head-first assumption. Thirdly, verbs 
are typically modified by a wider set of syntactic 
satellites than nouns are, such as temporal and 
circumstantial modifiers (Dik 1989). For exam-
ple, deverbal nouns do not inherit the possible 
temporal modifiers of their verb base (I run the 
marathon in three hours, but *the run of the 
marathon in three hours). Modifiers of this sort 
tend to be distributed in the sentence much more 
freely than ordinary arguments.  
4.3.2 Impact of the lexicon on recall 
Of the three above mentioned factors, only the 
first one has an obvious lexical character. We 
can provide a rough estimate of the impact of 
lexical information on the performance of LAP. 
The lexicon filter contributes a 9% increase of 
recall on verb complements (4% over 45.5%), 
by correctly reattaching to the verbal head those 
arguments (61) that were wrongly attached to 
their immediately preceding constituent by BP. 
This leads to an overall 49.5% recall. All re-
maining false negatives (about 48%) are i) either 
verb modifiers or ii) proper verb arguments ly-
ing out of the reach of structure-based criteria, 
due to syntactic phenomena such as complement 
dislocation, complex coordination, parenthetic 
constructions and ellipsis. We shall return to a 
more detailed analysis of false negatives in sec-
tion 4.3.4. In the case of noun complements, use 
of lexical information produces a negligible in-
crease of recall: 0.6% ( 0.5% over 80.8%). This 
is not surprising, as our test corpus contains very 
few cases of noun-headed argument chains, 
fewer than we could expect if the probability of 
their occurrence reflected the (uniform) type dis-
tribution of noun frames in the lexicon. The vast 
majority of noun-headed false negatives, as we 
shall see in more detail in a moment, is repre-
sented by modifiers. 
4.3.3 Impact of the lexicon on precision 
Reattachment is enforced by LAP when the 
preposition introducing a candidate complement 
in context is found in the lexical frame of its 
head. Table 2 shows that ~37% of the 103 re-
structured attachments proposed by the lexicon 
are wrong. Even more interestingly, there is a 
strong asymmetry between nouns and verbs. 
With verb heads, precision of lexically-driven 
reattachments is fairly high (~70%), nonetheless 
lower than precision of rightmost attachment 
(~75%). In the case of noun heads, the number 
of lexically reattached dependencies is instead 
extremely low. The percentage of mistakes is  
high, with precision dropping to 26.6%. 
The difference in the total number of restruc-
tured attachment may be again due to the richer 
complementation patterns exhibited by verbs in 
the lexicon. However, while in the case of verbs 
lexical information produces a significant im-
provement on restructured attachment precision, 
this contribution drops considerably for nouns. 
The main reason for this situation is that nouns 
tend to select semantically vacuous prepositions 
such as of much more often than verbs do. In our 
lexicon, out of 4157 frames headed by a noun, 
4015 contain the preposition di as an argument 
introducer (96.6%). Di is in fact an extremely 
polysemous preposition, heading, among others, 
also possessive phrases and other kinds of modi-
fiers. This trivially increases the number of cases 
of attachment ambiguity and eventually the pos-
sibility of getting false positives. Conversely, as 
shown by the number of confirmed attachments 
in Table 2, the role of lexical information in fur-
ther specifying an attachment with no restructur-
ing is almost uniform across nouns and verbs. 
4.3.4 False negatives  
The vast majority of undetected verb comple-
ments (80.6%) are modifiers of various kind. 
The remaining set of false negatives consists of 
48 complements (7.7%), 30 indirect objects 
(4.8%) and 43 oblique arguments (6.9%). Most 
such complements are by-phrases in passive 
constructions which are not as such very diffi-
cult to detect but just happen to fall out of the 
current coverage of LAP. More interestingly, 2/3 
of the remaining false negatives elude LAP be-
cause they are overtly realised far away from 
their verb head, often to its left. Most of these 
constructions involve argument dislocation and 
ellipsis. We can thus preliminarily conclude that 
argument dislocation and ellipsis accounts for 
about 14% of false negatives (7% over 50%). 
Finally, the number of false negatives due to at-
tachment ambiguity is almost negligible in the 
case of verbal heads. 
On the other hand, the impact of undetected 
modifiers of a verbal head on attachment recall 
is considerable. The most striking feature of this 
large subset is the comparative sparseness of 
modifiers introduced by di (of): 31 out of 504 
(6.2%). At a closer scrutiny, the majority of 
these di-phrases are either phraseological adver-
bial modifiers (di recente ?of late?, del resto ?be-
sides? etc.) or quasi-arguments headed by 
participle forms. Notably, 227 undetected modi-
fiers (45% of the total) are selected by semanti-
cally heavy and complex (possibly 
discontinuous) prepositions (davanti a ?in front 
of?, in mezzo a ?amid?, verso ?towards?, intorno 
a ?around?, contro ?against?, da ... a ?from ... to? 
etc.). As to the remaining 241 undetected modi-
fiers (48%), they are introduced by ?light? 
prepositions such as a ?to?, in ?in? and da ?from?. 
Although this 48% contains a number of diffi-
cult attachments, one can identify subsets of 
fairly reliable modifiers by focusing on the noun 
head introduced by the preposition, which usu-
ally gives a strong indication of the nature of the 
modifier, especially in the case of measure, tem-
poral and locative expressions.  
4.3.5 False positives 
Table 2 shows a prominent asymmetry in the 
precision of confirmed and restructured attach-
ments. Wrong restructured attachments are 
mainly due to a misleading match between the 
preposition introducing a PC and that introduc-
ing a slot in the lexical frame of its candidate 
head (~85%). This typically occurs with ?light? 
prepositions (e.g. di, a, etc.). Most notably, in a 
relevant subset of these mistakes, the verb or 
noun head belongs to an idiomatic multi-word 
expression. In the case of confirmed attach-
ments, about one third of false positives (~5%) 
involve multi-word expressions, in particular 
compound terms such as presidente del consig-
lio ?prime minister?, where the rightmost ele-
ment of the compound is wrongly selected as the 
head of the immediately following PP. In both 
restructured and confirmed attachments, the re-
maining cases (on average ~4%) are due to 
complex syntactic structures (e.g. appositive 
constructions, complex coordination, ellipsis 
etc.) which are outside the coverage of the cur-
rent grammar.  
Conclusion 
Larger lexicons are not necessarily better for 
parsing. The issue of the interplay of lexicon and 
grammar, although fairly well understood at the 
level of linguistic theory, still remains to be fully 
investigated at the level of parsing. In this paper, 
we tried to scratch the surface of the problem 
through a careful analysis of the performance of 
an incremental dependency analyser of Italian, 
which can run in both a non-lexicalised and a 
lexicalised mode.  
The contribution of lexical information to 
parse success is unevenly distributed over both 
part of speech categories and frame types. For 
reasons abundantly illustrated in section 4, the 
frames of noun heads are not quite as useful as 
those of verb heads, especially when available 
information is only syntactic. Moreover, while 
information on verb transitivity or clause em-
bedding is crucial to filter out noisy attachments, 
information on the preposition introducing the 
oblique complement or the indirect object of a 
verb can be misleading, and should thus be used 
for parsing with greater care. The main reason is 
that failure to register in the lexicon all possible 
prepositions actually found in real texts may 
cause undesired over-filtering of genuine 
arguments (false negatives). In many cases, 
argument prepositions are actually selected by 
the lexical head of the subcategorised argument, 
rather than by its subcategorising verb. Simi-
larly, while information about argument option-
ality vs obligatoriness is seldom confirmed in 
real language use, statistical preferences on the 
order of argument realisation can be very useful. 
Most current lexicons say very little about 
temporal and circumstantial modifiers, but much 
more can be said about them that is useful to 
parsing. First, some prepositions only occur to 
introduce verb modifiers. These semantically 
heavy prepositions, often consisting of more 
than one lexical item, play a fundamental role in 
the organization of written texts, and certainly 
deserve a special place in a parsing-oriented 
lexicon. Availability of this type of lexical in-
formation could pave the way to the develop-
ment of specialised ?mini-parsers? of those 
satellite modifiers whose structural position in 
the sentence is subject to considerable variation. 
These mini-parsers could benefit from informa-
tion about semantically-based classes of nouns, 
such as locations, measure terms, or temporal 
expressions, which should also contain indica-
tion of the preposition they are typically intro-
duced by. Clearly, this move requires 
abandoning the prejudice that lexical informa-
tion should only flow from the head to its 
dependents. Finally, availability of large 
repertoires of multi word units (both complex 
prepositions and compound terms) appears to 
have a large impact on improving parse preci-
sion.  
There is no doubt that harvesting such a wide 
range of lexical information in the quantity 
needed for accurate parsing will require exten-
sive recourse to bootstrapping methods of lexi-
cal knowledge acquisition from real texts.     
References  
Bartolini R., Lenci A., Montemagni S, Pirrelli V. 
(2002) The Lexicon-Grammar Balance in Robust 
Parsing of Italian, in Proceedings of the 3rd Inter-
national Conference on Language Resources and 
Evaluation, Las Palmas, Gran Canaria. 
Briscoe, E.J. (2001) From dictionary to corpus to 
self-organizing dictionary: learning valency asso-
ciations in the face of variation and change, in 
Proceedings of Corpus Linguistics 2001, Lancaster 
University, pp. 79-89. 
Briscoe T., Carroll J., (2002) Robust Accurate Statis-
tical Annotation of General Text, in Proceedings of 
the 3rd International Conference on Language Re-
sources and Evaluation, Las Palmas, Gran Canaria. 
Carroll, J., Minnen G., Briscoe E.J. (1998) Can sub-
categorisation probabilities help a statistical 
parser?, in Proceedings of the 6th ACL/SIGDAT 
Workshop on Very Large Corpora, Montreal, Can-
ada. 118-126. 
Chanod J.P. (2001) Robust Parsing and Beyond, in 
J.C. Junqua and G. van Noord (eds.) Robustness in 
Language and Speech Technology, Dordrecht, 
Kluwer, pp. 187-204. 
Federici, S., Montemagni, S., Pirrelli, V. (1998a) 
Chunking Italian: Linguistic and Task-oriented 
Evaluation, in Proceedings of the LREC Workshop 
on ?Evaluation of Parsing Systems?, Granada, 
Spain. 
Federici, S., Montemagni, S., Pirrelli, V., Calzolari, 
N. (1998b) Analogy-based Extraction of Lexical 
Knowledge from Corpora: the SPARKLE Experi-
ence, in Proceedings of the 1st International Con-
ference on Language resources and Evaluation, 
Granada, Spain. 
Grishman, R., Macleod C., Meyers A. (1994) 
COMLEX Syntax: Building a Computational Lexi-
con, in Proceedings of Coling 1994, Kyoto. 
Jensen K. (1988a) Issues in Parsing, in A. Blaser 
(ed.), Natural Language at the Computer, Springer 
Verlag, Berlin, pp. 65-83. 
Jensen K. (1988b) Why computational grammarians 
can be skeptical about existing linguistic theories,
in Proceedings of COLING-88, pp. 448-449. 
Lenci, A., Bartolini, R., Calzolari, N., Cartier, E. 
(2001) Document Analysis, MLIS-5015 MUSI, De-
liverable D3.1,. 
Lenci, A., Montemagni, S., Pirrelli, V., Soria, C. 
(2000) Where opposites meet. A Syntactic Meta-
scheme for Corpus Annotation and Parsing 
Evaluation, in Proceedings of the 2nd International 
Conference on Language Resources and Evalua-
tion, Athens, Greece. 
Montemagni S., Barsotti F., Battista M., Calzolari N., 
Corazzari O., Zampolli A., Fanciulli F., Massetani 
M., Raffaelli R., Basili R., Pazienza M.T., Saracino 
D., Zanzotto F., Mana N., Pianesi F., Delmonte R. 
(2000) The Italian Syntactic-Semantic Treebank: 
Architecture, Annotation, Tools and Evaluation, in 
Proceedings of the COLING Workshop on ?Lin-
guistically Interpreted Corpora (LINC-2000)?, 
Luxembourg, 6 August 2000, pp. 18-27. 
Procter, P. (1987) Longman Dictionary of Contempo-
rary English, Longman, London. 
Ruimy, N., Corazzari, O., Gola, E., Spanu, A., Cal-
zolari, N., Zampolli, A. (1998) The European LE-
PAROLE Project: The Italian Syntactic Lexicon, in 
Proceedings of the 1st International Conference on 
Language resources and Evaluation, Granada, 
Spain, 1998. 
 
Proceedings of the 6th Workshop on Ontologies and Lexical Resources (Ontolex 2010), pages 1?10,
Beijing, August 2010
KYOTO: an open platform for mining facts
Piek Vossen
VU University Amsterdam
p.vossen@let.vu.nl
German Rigau
Eneko Agirre
Aitor Soroa
University of the Basque 
Country
german.rigau/e.a-
girre/a.soroa@ehu.es
Monica Monachini
Roberto Bartolini
Istituto di Linguistica 
Computazionale, CNR
monica.monachini/r
oberto.bartolin-
i@ilc.cnr.it
Abstract
This  document  describes  an  open 
text-mining  system  that  was  developed 
for the Asian-European project KYOTO. 
The  KYOTO system uses  an  open text 
representation format and a central onto-
logy to  enable  extraction  of  knowledge 
and facts  from large volumes of text  in 
many different languages. We implemen-
ted a semantic tagging approach that per-
forms off-line reasoning. Mining of facts 
and  knowledge  is  achieved  through  a 
flexible pattern matching module that can 
work in much the same way for different 
languages,  can  handle  efficiently  large 
volumes of documents and is not restric-
ted to a specific domain. We applied the 
system to an English database on estuar-
ies.
1 Introduction
Traditionally, Information Extraction (IE) is the 
task of filling template information from previ-
ously unseen text which belongs to a predefined 
domain (Peshkin & Pfeffer 2003). Most systems 
in  the  Message  Understanding  Conferences 
(MUC,  1987-1998)  and the  Automatic  Content 
Extraction  program  (ACE)1 use  a  pipeline  of 
tools to achieve this, ranging from sophisticated 
NLP tools (like deep parsing) to shallower text-
processing (e.g. FASTUS (Appelt 1995)).
Standard  IE  systems  are  based  on  lan-
guage-specific  pattern  matching  (Kaiser  & 
1http://www.itl.nist.gov/iad/mig//tests/ace  
Miksch 2005), where each pattern consists of a 
regular  expression  and  an  associated  mapping 
from syntactic to logical form. In general, the ap-
proaches can be categorized into two groups: (1) 
the Knowledge Engineering approach (Appelt et 
al.1995), and (2) the learning approach, such as 
AutoSlog  (Appelt  et  al.  1993),  SRV  (Freitag 
1998), or RAPIER (Califf & R. Mooney 1999). 
Another  important  system  is  GATE (Cunning-
ham et al2002), which is a platform for creating 
IE systems. It uses regular expressions, but it can 
also  use  ontologies  to  perform semantic  infer-
ences  to  constrain  linguistic  patterns  semantic-
ally. The use of ontologies in IE is an emerging 
field (Bontcheva & Wilks 2004): linking text in-
stances with elements belonging to the ontology, 
instead of consulting flat gazetteers.
The major disadvantage of traditional IE sys-
tems is that they focus on satisfying precise, nar-
row, pre-specified requests from small homogen-
eous corpora (e.g., extract information about ter-
rorist events). Likewise, they are not flexible, are 
limited to specific types of knowledge and need 
to be built by knowledge engineers for each spe-
cific application and language. In fact most text 
mining  systems are  developed for  a  single  do-
main and a single language, and are not able to 
handle  knowledge  expressed  in  different  lan-
guages  or  expressed  and conceptualized  differ-
ently across cultures.
In this paper we describe an open platform for 
text-mining  or  IE that  can  be applied  to many 
different  languages  in  the  same  way  using  an 
open text representation system and a central on-
1
tology that  is  shared across  languages.  Ontolo-
gical implications are inserted in the text through 
off-line  reasoning and ontological  tagging.  The 
events and facts are extracted from large amounts 
of text using a flexible pattern-matching module, 
as specified by profiles  which comprise  ontolo-
gical and shallow linguistic patterns. The system 
is  developed  in  the  Asian-European  project 
KYOTO2.
In the next section,  we describe the general 
architecture of the KYOTO system. In section 3, 
we specify the knowledge structure that is used. 
Section  4,  describes  the  off-line  reasoning  and 
ontological tagging. In section 5, we describe the 
module for mining knowledge from the text that 
is enriched with ontological  statements.  Finally 
in section 6, we describe the first results of ap-
plying the system to databases on Estuaries.
2 KYOTO overview
The  KYOTO  project  allows  communities  to 
model terms and concepts in their domain and to 
use this knowledge to apply text mining on docu-
ments. The knowledge cycle in the KYOTO sys-
tem starts  with a set  of  source  documents pro-
duced by the community, such as PDFs and web-
sites.  Linguistic  processors  apply  tokenization, 
segmentation, morpho-syntactic analysis and  se-
mantic  processing  to  the  text  in  different  lan-
guages. The semantic processing involves the de-
tection of named-entities (persons, organizations, 
places,  time-expressions)  and  determining  the 
meaning of  words  in  the  text  according to  the 
given wordnet.  
The  output  of  the  linguistic  processors is 
stored in an XML annotation format that  is the 
same for  all  the languages,  called  the KYOTO 
Annotation  Format  (KAF,  Bosma  et  al  2009). 
This format incorporates standardized proposals 
for the linguistic annotation of text and represents 
them in an easy-to-use layered structure, which is 
compatible with the Linguistic Annotation Frame-
work  (LAF,  Ide  and  Romary  2003).  In  KAF, 
words, terms, constituents and syntactic depend-
encies  are  stored  in  separate  layers  with  refer-
ences across the structures. This makes it easier 
to harmonize the output of  linguistic processors 
2 Http://www.kyoto-project.eu
for different languages and to add new semantic 
layers to the basic output, when needed (Bosma 
et al 2009, Vossen et al 2010). All modules in 
KYOTO draw their input from these structures. 
In fact, the word-sense disambiguation process is 
carried out to the same KAF annotation in differ-
ent languages and is therefore the same for all the 
languages (Agirre et al 2009). In the current sys-
tem,  there  are  processors  for  English,  Dutch, 
Italian, Spanish, Basque, Chinese and Japanese.
The KYOTO system proceeds in 2 cycles (see 
Figure 1). In the 1st cycle, the Tybot (Term Yield-
ing Robot) extracts the most relevant terms from 
the documents. The Tybot is another generic pro-
gram that  can  do  this  for  all  the  different  lan-
guages in much the same way. The terms are or-
ganized as a structured hierarchy and, wherever 
possible,  related  to  generic  semantic  databases, 
i.e. wordnets for each language. In the left part of 
Figure 1, we show those terms in the input docu-
ment and their classification in wordnet. Terms in 
italics are present in the original wordnet, while 
underlined terms correspond to terms which were 
not in the original wordnet but were automatic-
ally discovered and linked to wordnet by Tybots. 
Straight  terms  correspond  to hyperonyms  in 
wordnet that do not necessarily occur in the text 
but are linked to ontological classes. The result of 
this  1st cycle  is a domain wordnet  for the target 
language.
The 2nd cycle of the system involves the actu-
al extraction of factual knowledge from the docu-
ments by the Kybots  (Knowledge Yielding Ro-
bots). Kybots use a collection of profiles that rep-
resent patterns of information of interest. In the 
profile, conceptual relations are expressed using 
ontological  and morpho-syntactic linguistic pat-
terns. Since the semantics is defined through the 
ontology,  it  is  possible  to  detect  similar  data 
across documents in different languages, even if 
expressed differently. In Figure 1, we give an ex-
ample of a conceptual pattern that relates organ-
isms that live in habitats. The Kybot can combine 
morpho-syntactic and semantic patterns. When a 
match is detected, the instantiation of the pattern 
is saved in a formal representation, either in KAF 
or in RDF. Since the wordnets in different lan-
guages are mapped to the same ontology and the 
text in these languages is represented in the same 
KAF,  similar  patterns  can  easily  be  applied  to 
multiple languages.
2
3 Ontological  and  lexical  background 
knowledge
As a semantic background model, we defined a 
3-layered  knowledge  architecture  following the 
principle  of  the  division  of  labour  (Putnam 
1975). In this model, the ontology does not need 
to be the central hub for all terms in a domain in 
all  languages.  Following the division  of labour 
principle, we can state that a computer does not 
need  to  distinguish  between  instances  of  a 
European Tree Frog and a Glass Tree frog. We 
assume  that  rigid  concepts  (as  defined  by 
Guarino and Welty 2002) are known to the do-
main experts and do not need to be defined form-
ally in the ontology but can remain in the avail-
able  background  resources,  such  as   databases 
with millions of species.  Terms in the documents 
are mostly non-rigid, e.g.  endangered frogs,  in-
vasive  frogs.  Such  non-rigid  terms  refer  to  in-
stances  of  species  in  contextual  circumstances. 
The processes and states are the important pieces 
of  information  that  matter  to the users  and are 
useful for mining text. The model therefore dis-
tinguishes between background vocabularies, do-
main terms,  wordnets and the central  ontology. 
The  background  vocabularies  are  automatically 
aligned  to  wordnet,  where  we  assume  that 
hyponymy relations to rigid synsets in wordnet 
declare those subconcepts as rigid subtypes too, 
without the necessity to include them in the onto-
logy.  For  non-rigid  terms,  we  defined  a  set  of 
mapping relations to the ontology through which 
we express their non-rigid involvement in these 
processes and states. Likewise, the ontology has 
been extended with processes and states for the 
domain  and  verbs  and  adjectives  have  been 
mapped to be able to detect expressions in text.
The  3-layered  knowledge  model  combines  the 
efforts from 3 different communities:
1.Domain  experts  in  social  communities  that 
continuously build background vocabularies;
2.Wordnet  specialists  that  define  the  basic  se-
mantic model for general concepts for a lan-
guage
3.Semantic Web specialists that define top-level 
and domain-specific ontologies that capture 
formal definitions of concepts;
We formalized the relations between these repos-
itories so that they can developed separately but 
combined within KYOTO to form a coherent and 
formal model.
3.1 Ontology
The KYOTO ontology currently consists of 1149 
classes divided over three layers. The top layer is 
based  on  DOLCE  (DOLCE-Lite-Plus  version 
3.9.7,  Masolo  et  al  2003)  and  OntoWordNet. 
This layer of the ontology has been modified for 
our purposes (Herold et. al. 2009).  The second 
layer consists of so-called Base Concepts (BCs) 
derived  from various  wordnets  (Vossen  1998, 
Izquierdo  et  al. 2007).  Examples  of  BCs  are: 
building,  vehicle,  animal,  plant,  change,  move,  
size, weight. The BCs are those synsets in Word-
Net 3.0 that have the most relations with other 
synsets in the wordnet hierarchies and are selec-
ted in a way that ensures complete coverage of 
the nominal and verbal part of WordNet. This has 
been  completed  for  the  nouns  (about  500 
synsets).  The ontology has also been adapted to 
include important concepts in the domain. Spe-
cial attention has been paid to represents the pro-
cesses  (perdurants)  in  which  objects  (endur-
ants)  of  the domain are  involved and qualities 
they may have. This is typically the information 
that is found in documents on the environment. 
We thus added 40 new event classes for repres-
enting  important  verbs  (e.g.  pollute, absorb, 
damage, drain) and 115 new qualities and qual-
ity-regions for representing important adjectives 
(e.g. airborne, acid, (un)healthy, clear). The full 
Figure 1: Two Cycles of processing in KYOTO
3
ontology can be downloaded from the KYOTO 
website, free for use. A considerable set of gener-
al verbs and adjectives (relevant for for the do-
main)  have  then  been  mapped  to  ontological 
classes: 189  verbal  synsets  and  222  adjectival 
synsets.
The  500  nominal  BCs  are  connected  to  the 
complete  WordNet  hierarchy,  whereas  the  189 
verbs represent 5,978 more specific verbal syn-
sets and the 222 adjectives represent  1,081 ad-
jectival synsets through the wordnet relations.
This basic ontology and the mapping to Word-
Net  are  used  to  model  the  shared  and  lan-
guage-neutral  concepts  and  relations  in the do-
main. Instances are excluded from the ontology. 
Instances will be detected in the documents and 
will be mapped to the ontology through instance 
to ontology relations (see below).  Likewise, we 
make a clear separation between the ontological 
model and the instantiation of the model as de-
scribed in the text.
3.2 Wordnet to ontology mappings
In addition to the ontology, we have wordnets for 
each language in the domain. In addition to the 
regular synset to synset relations in the wordnet, 
we will have a specific set of relations for map-
ping the synsets  to the ontology,  which are  all 
prefixed with sc_ standing for synset-to-concept. 
We differentiate between rigid and non-rigid con-
cepts in the wordnets through the mapping rela-
tions:
? sc_equivalenceOf: the synset is fully equi-
valent to the ontology Type & inherits all proper-
ties; the synset is Rigid
? sc_  subclassOf: the synset is a proper sub-
class of the ontology Type & inherits all proper-
ties; the synset is Rigid
? sc_domainOf: the synset is not a proper sub-
class  of  the  ontology  Type  &  is  not  disjoint 
(therefore orthogonal) with other synsets that are 
mapped to the same Type either through sc_sub-
classOf or sc_domainOf; the synset is non-Rigid 
but still inherits all properties of the target onto-
logy Type;  the synset  is  also related to a Role 
with a sc_playRole relation
? sc_playRole:  the  synset  denotes  instances 
for  which  the  context  of  the  Role  applies  for 
some period of time but this is not essential for 
the existence of the instances, i.e. if the context 
ceases to exist then the instances may still exist 
(Mizoguchi et al 2007).3
? sc_participantOf:  instances of the concept 
(denoted by the synset) participate in some en-
durant, where the specific role relation is indic-
ated by the playRole mapping. 
? sc_hasState: instances of the concept are in 
a particular state which is not essential and can 
be changed. There is no need to represent the role 
for a stative perdurant.
This model  extends  existing  WordNet  to  onto-
logy mappings.  For  instance,  in  the  SUMO to 
Wordnet mapping (Niles and Pease 2003), only 
the  sc_equivalenceOf and  sc_subclassOf rela-
tions  are  used,  represented  by  the symbols  ?=? 
and ?+? respectively. The SUMO-Wordnet map-
ping likewise does not systematically distinguish 
rigid from non-rigid  synsets.  In our  model,  we 
separate the linguistically and culturally specific 
vocabularies from the shared ontology while us-
ing the ontology  to interface  the concepts used 
by the various communities.
Using these mapping relations, we can express 
that the synset for  duck (which has a hypernym 
relation to the synset  bird, which, in its turn, has 
an  equivalence  relation  to  the  ontology  class 
bird) is  thus  a  proper  subclassOf  the  ontology 
class bird:
wn:duck hypernym wn:bird
wn:bird  sc_equivalenceOf ont:bird
For a concept such as migratory bird, which is 
also  a  hyponym of  bird in  wordnet  but  not  a 
proper subclass as a non-rigid concept, we thus 
create the following mapping:
wn:migratory bird 
? sc_domainOf ont:bird
? sc_playRole ont:done-by
? sc_participantOf ont:migration
This mapping indicates that the synset is used to 
refer to instances of endurants (not subclasses!), 
where the domain is restricted to birds. Further-
more, these instances participate in the process of 
3 Some terms involve more than one role,  e.g.  gas-
powered-vehicle.  Secondary  participants  are  related 
through  sc_hasCoParticipant and sc_playCoRole 
mappings.
4
migration in the role of  done-by. The properties 
of  the  process  migration are  further  defined  in 
the  ontology,  which  indicates  that  it  is  a  act-
ive-change-of-location  done-by  some  endurant, 
going from a source, via a path to some destina-
tion. The mapping relations from the wordnet to 
the ontology, need to satisfy the constraints of the 
ontology, i.e. only roles can be expressed that are 
compatible with the role-schema of the process 
in which they participate.
For  implied  non-essential  states,  we  use  the 
sc_hasState relation to express that a synset such 
as wild dog refers to instances of dogs that life in 
the wild but can stop being wild:
wn:wild dog ? sc_domainOf ont:dog
wn:wild dog ? sc_hasState ont:wild
Ideally, all processes and states that can be ap-
plied to endurants should be defined in the onto-
logy. This may hold for most verbs and adject-
ives in languages, which do not tend to extend in 
specific  domains  and  are  part  of  the  general 
vocabulary  (e.g.  to  pollute,  to  reduce,  wild). 
However, domain specific text contain many new 
nominal terms that refer to domain-specific pro-
cesses and states, e.g. air pollution, nitrogen pol-
lution,  nitrogen  reduction.  These  terms  are 
equally relevant as their counter-parts that refer 
to endurants involved in similar  processes, e.g. 
polluted air, polluting nitrogen or reduced nitro-
gen. We therefore use the reverse participant and 
role mappings to be able to define such terms for 
processes  as  subclasses  of  more  general  pro-
cesses  involving  specific  participants  in  a  spe-
cified role:
wn:air pollution
? sc_subcassOf ont:pollution (perdurant)
? sc_hasParticipant ont:air
? sc_hasRole ont:patient
wn:nitrogen pollution
? sc_subcassOf ont:pollution (perdurant)
? sc_hasParticipant ont:nitrogen
? sc_hasRole ont:done-by
 
Further  mapping  relations  are  described  in  the 
documentation on the KYOTO website. Through 
the mapping relations, we can keep the ontology 
relatively small and compact whereas we can still 
define  the  richness  of  the  vocabularies  of  lan-
guages in a precise way. The classes in the onto-
logy can be defined using rich axioms that model 
precise implications for inferencing. The wordnet 
to synset mappings can be used to define rather 
basic relations relative to the given ontology that 
still  captures  the  semantics  of  the  terms. The 
term definitions capture both relevance and per-
spective  (those  relations  that  matter  from  the 
point of the view of the term), on the one hand, 
and some semantics with respect to the concepts 
that are involved and their (role) relation on the 
other  hand.  Likewise,  the  KYOTO  system can 
model the linguistic and cultural diversity of lan-
guages in a domain but at the same time keep a 
firm anchoring to a basic and compact ontology.
3.3 Domain wordnet
We selected 3 representative documents on estu-
aries to extract relevant terms for the domain us-
ing the Tybot module. The terms have been re-
lated  through  structural  relations,  e.g.  nitrogen 
pollution is a hyponym of pollution, and through 
WordNet synsets that are assigned through WSD 
of the text.  We extracted 3950 candidate  terms 
form the KAF representations of the documents. 
Most of these are nouns (2818 terms). The nom-
inal  terms matched for 40% with wordnet syn-
sets, the verbs and adjectives for 98% and 85% 
respectively. For the domain wordnet, we restric-
ted ourselves to the nouns. From the new nomin-
al  terms,  environmentalists selected  390  terms 
that they deem to be important. These terms are 
connected to parent terms, which ultimately are 
connected to wordnet synsets.  The final domain 
wordnet contains 659 synsets: 197 synsets from 
the generic wordnet and 462 new synsets connec-
ted to the former.  The domain wordnet synsets 
got 990 mappings to the ontology, using the rela-
tions described in the previous section. There are 
86 synsets that have a sc_domainOf mapping, in-
dicating  that  they  are  non-rigid.  Note  that 
hyponyms of these synsets are also non-rigid by 
definition. These non-rigid synsets have complex 
mappings to processes and states in which  they 
are involved. The domain wordnet can be down-
loaded from the KYOTO website, free for use.
5
4 Off-line reasoning and ontological tag-
ging 
The ontological tagging represents the last phase 
in the KYOTO Linguistic  Processor  annotation 
pipeline.  It  consists  of  a three-step module  de-
vised to enrich the KAF documents with know-
ledge derived from the ontology. For each synset 
connected to a term, the first step   adds the Base 
Concepts to which the synset is related through 
the wordnet taxonomical relations. Then, through 
the synset to ontology mapping, it  adds the cor-
responding ontology type with appropriate rela-
tions. Once each synset is specified as to its onto-
logy type,  the  last  ontotagging  step  inserts  the 
full  set  of  ontological  implications  that  follow 
from the explicit ontology. The explicit ontology 
is a new data  structure consisting of a table with 
all  ontology nodes and all  ontological  implica-
tions expressed. The main purpose is to optimize 
<term lemma="pollution" pos="N" tid="t13444" type="open">
  <externalReferences>
   <externalRef reference="eng-30-00191142-n" reftype="baseConcept" resource="wn30g"/>
   <externalRef reference="Kyoto#change-eng-3.0-00191142-n" reftype="sc_subClassOf" resource="ontology">
      <externalRef reftype="SubClassOf" reference="DOLCE-Lite.owl#contamination_pollution"/>
      <externalRef reftype="SubClassOf" reference="DOLCE-Lite.owl#accomplishment" status="implied"/>
      <externalRef reftype="SubClassOf" reference="DOLCE-Lite.owl#event" status="implied"/>
      <externalRef reftype="SubClassOf" reference="DOLCE-Lite.owl#perdurant" status="implied"/>
      <externalRef reftype="DOLCE-Lite.owl#part" reference="DOLCE-Lite.owl#perdurant" status="implied"/>
      <externalRef reftype="DOLCE-Lite.owl#specific-constant-constituent" reference="DOLCE-Lite.owl#perdurant" 
status="implied"/>
      <externalRef reftype="DOLCE-Lite.owl#has-quality" reference="DOLCE-Lite.owl#temporal-quality" status="implied"/>
      <externalRef reftype="SubClassOf" reference="DOLCE-Lite.owl#spatio-temporal-particular" status="implied"/>
      <externalRef reftype="DOLCE-Lite.owl#participant" reference="DOLCE-Lite.owl#endurant" status="implied"/>
      <externalRef reftype="DOLCE-Lite.owl#has-quality" reference="DOLCE-Lite.owl#temporal-location_q" status="im-
plied"/>
    <externalRef reftype="SubClassOf" reference="DOLCE-Lite.owl#particular" status="implied"/>
    </externalRef>
  </externalReferences>
</term>
Figure 2: An example of an OntoTagged output
<kprofile>
 <variables>
<var name="x" type="term" pos="N"/>
  <var name="y" type="term" 
       lemma="produce | generate | release | ! create"/>
  <var name="z" type="term"
       reference="DOLCE-Lite.owl#contamination_pollution"
       reftype="SubClassOf"/>
 </variables>
 <relations>
  <root span="y"/>
  <rel span="x" pivot="y" direction="preceding"/>
  <rel span="z" pivot="y" direction="following"/>
 </relations>
 <events>
  <event target="$y/@tid" lemma="$y/@lemma" pos="$y/@pos"/>
  <role target="$x/@tid" rtype="agent" lemma="$x/@lemma"/>
  <role target="$z/@tid" rtype="patient"lemma="$z/@lemma"/>$
 </events>
</kprofile>
Figure 3: An example of a Kybot profile
<kybotOut>
 <doc name="11767.mw.wsd.ne.onto.kaf">
  <event eid="e1" lemma="generate" pos="V" target="t3504"/>
  <role rid="r1" lemma="industry" rtype="agent" target="t3493" pos="N" event="e1"/>
  <role rid="r2" lemma="pollution" rtype="patient" target="t3495" pos="N" event="e1"/>
 </doc>
 <doc name="16266.mw.wsd.ne.onto.kaf">
  <event eid="e2" lemma="release" pos="V" target="t97"/>
  <role rid="r3" lemma="fuel" rtype="agent" target="t96" pos="N" event="e2"/>
  <role rid="r4" lemma="exhaust_gas" rtype="patient" target="t101" pos="V" event="e2"/>
 </doc>
</kybotOut>
Figure 4: An example of a Kybot output
6
the performance of the mining module over large 
quantities of documents. The advantage for Ky-
bots from ontotagging are many. First of all, they 
are  able  to  run  and  apply  pattern-matching  to 
Base  Concepts  and  ontological  classes  rather 
than just to words or synsets. Moreover, by mak-
ing explicit  the  implicit  ontological  statements, 
Kybots are able to find the same relations hidden 
in  different  expressions  with  different  surface 
realizations:  fish migration,  migratory  fish,  mi-
gration of fish, fishes that migrate, that directly 
or indirectly express the same relations. With on-
totagging,  they  share  the  same ontological  im-
plications which will allow Kybots to apply the 
same patterns and perform the extraction of facts. 
The implications will be represented in the same 
way across different languages, thus facilitating 
cross-lingual extraction of facts. Lastly, ontotag-
ging is a kind of off-line ontological reasoning: 
without  doing reasoning over concepts,  Kybots 
substantially  improve their  performance.  Figure 
2 shows the result of onto-tagging for the term 
pollution.
5 Event and fact extraction
Kybots (Knowledge Yielding Robots) are  com-
puter  programs  that  use  the  mined 
concepts and the generic  concepts  already con-
nected to the language wordnets and the KYOTO 
ontology to extract actual concept instances and 
relations in KAF documents. Kybots incorporate 
technology  for  the  extraction  of  relationships, 
either eventual or not, relative to the general or 
domain concepts already captured by the Tybots. 
That is, the extraction of factual knowledge is be-
ing carried out by the Kybot server by processing 
Kybot profiles on the linguistically enriched doc-
uments.
Kybots  are  defined  following  a  declarative 
format,  the  so  called  Kybot  
profiles, which describe general morpho-syntact-
ic  and  semantic  conditions  on  sequences  of 
terms. Profiles are compiled to generate the Ky-
bots, which scan over KAF documents searching 
for the patterns and extract the relevant informa-
tion from each matching.
Linguistic  patterns  include morphologic  con-
straints and also semantic conditions the matched 
terms must hold.  Kybot are thus able to search 
for term lemmas or part-of-speech tags but also 
for terms linked to ontological process and states 
using  the  mappings  described  in  Section  3.2. 
Thus, it is possible to detect similar eventual in-
formation  across  documents  in  different  lan-
guages, even if expressed differently.
5.1 Example of a Kybot Profile
Kybot Profiles are described using XML syn-
tax.  Figure 3 presents an example of a profile. 
Kybot profiles consist of three main parts: 
?Variable  declaration (<variables> element): 
In this section the search entities are defined. The 
example  defines  three  variables:  x (denoting 
terms  whose  part-of-speech is  noun),  y (which 
are  terms whose lemma is ?release?, ?produce? 
or  ?generate?  but   not  ?create?)  and  z (terms 
linked to  the  ontological  endurant  ?DOLCE-L-
ite.owl#contamination_pollution?, meaning ``be-
ing contaminated with harmful  substances''). 
?Declarations  of  the  relations  among  variables 
(<rel> element): specify the relations among the 
previously  defined variables.  The example pro-
file specifies y  as the main pivot, and states that 
variable  x must  be  preceding  variable  y in  the 
same sentence, and that variable  z must be fol-
lowing variable  y.  Thus,  the Kybot will  search 
for patterns like 'x ? y ? z' in a sentence.
?Output template (<events> element): describes 
the output to be produced on every matching. In 
the example, each match generates a new event 
targeting term  y,  which becomes the main term 
of the event. It also fills two roles of the event, 
the 'agent' role filled by term x and 'patient' role, 
filled by z. 
Figure  4  presents  the  output  of  the  Kybot 
when applied against the benchmark documents.
The Kybot output follows the stand-off architec-
ture when producing new information, and it thus 
forms  a  new KAF layer  on  the  original  docu-
ments.
6 Experimental results
We applied the KYOTO system and resources to 
English documents on estuaries. We collected 50 
URLs for two English estuaries: the Humber Es-
tuary in Hull (UK) and the Chesapeake Bay estu-
ary in the US and for background documents on 
bird  migration,  sedimentation,  habitat  destruc-
tion,  and  climate  change.  In  addition  to  the 
webpages, we extracted 815 PDF files from the 
sites. In total, 4625 files have been extracted. All 
7
the documents have been processed by the lin-
guistic  processor  for  English,  which  generated 
KAF representations for all the documents. From 
this  database,  3  documents  were  selected  for 
benchmarking.
The  documents  were  processed  by  applying 
multiword  tagging,  word-sense-disambiguation, 
named-entity-recognition  and  the  ontological 
tagging to the 3 documents and to the complete 
database; This was done twice: once without the 
domain model and once with the domain model. 
We thus created 4 datasets:  3 benchmark docu-
ments  processed  with  and  without  the  domain 
model; the complete database processed with and 
without the domain model.
Furthermore, we created Kybot profiles based 
on the type of information represented in the do-
main model. We applied the Kybots to all 4 data 
sets. We generate the following data files through 
an WN-LMF export of the domain wordnet:
1. a set of domain multiwords for the multi-
word tagger
2. an extension of the lexicon and the graph 
of  concepts  that  is  used  by  the  WSD 
module
3. an extension of the wordnet-to-ontology 
mappings for the ontotagger
In addition, we constructed mapping lists for all 
WordNet 3.0 synsets to Base Concepts and to ad-
jective and verbs that are matched to the onto-
logy.  These mappings provide the generic  con-
ceptual model based on wordnet and on the onto-
logy. 
Table 1 shows the effects of using the domain 
model for the first 3 modules. We can see that the 
domain  model  has  a  clear  effect  on  the multi-
word  detection  in  the  3  evaluation  documents. 
Using the domain model,  600 multiwords have 
been detected, against 145 with just the generic 
wordnet. This is obvious since the terms are ex-
tracted  from  the  same  documents.  However, 
when applying it  to the complete  database,  we 
see that  still  over 2,300 more multiwords have 
been  detected  using  the domain wordnet.  Note 
that the domain wordnet has only 97 multiwords 
and the generic wordnet has 19,126 multiwords. 
So 0.5% of the multiwords in the domain word-
net add 1.5 times more multiword tokens in the 
database. The third row specifies the number of 
synsets that have been assigned. We can see that 
for the domain model almost 400 more synsets 
have been detected. In the case of the full estuary 
database, we see that relatively few more have 
been detected, almost 1,500 while the database is 
80 times as big. If we look more closely at the 
numbers of actual  domain synsets detected,  we 
see the following results. In the benchmark docu-
ments  637 (or 5%) of  the synsets  is  a  domain 
wordnet  synset,  whereas  5,353 synsets  are  do-
main synsets in the full estuary database, which 
is only 0.52%. Note that in KAF multiwords are 
represented both as a single terms and in terms of 
their elements. The WSD module assigns synsets 
to  both.  The  domain  model  can  thus  only  add 
synsets compared to the processing without the 
domain. 
Finally, if we look at the named-entity-recogni-
tion module, we see a slight negative effect for 
the detection of named-entities due to the domain 
model.  The  named-entity-recognition  module 
does not consider the elements of multiwords but 
just  the multiword terms as a whole. Grouping 
terms  as  multiwords  thus  leads  to  less  named-
entities being detected. This is not necessarily a 
bad things, since the detection heavily over-gen-
erates and could have now more precision.
Table 1: Statistics on processing the estuary documents with and without domain model
bench mark documents (3) estuary documents (4742)
No Domain Domain No Domain Domain
terms 22,204 22,204 2,419,839 2,419,839
multiwords 145 600 4,389 6,671
12,526 12,910 1,021,598 1,023,017
158 126 41,681 40,714
67 66 10,288 10,233
synsets
ne location
ne date
8
Table 2 shows the effect of inserting ontologic-
al  implications  into  the  text  representation.For 
the benchmark documents, we see that more than 
half a million ontological implications have been 
inserted.  Of  these, 82% are implied references, 
that are extracted from the explicit ontology on 
the  basis  of  a  direct  mapping to  the  ontology. 
About  8% of  the  mappings  are  synset-to-onto-
logy mappings (sc) and 9.5% are mappings rep-
resenting the subclass hierarchy. The differences 
between using the domain model and not-using 
the domain model are minimal. For the complete 
database, the implications are 80 times as much 
but the proportions are similar.
Table 3 shows the type of sc-relations that oc-
cur.  Obviously,  sc_subClassOf  and  sc_equival-
entOf  are  the  most  frequent.  Nevertheless,  we 
still  find  about  500  mappings  that  present  the 
participation in a process or state. 
 
     30  reftype="sc_playCoRole"
     32  reftype="sc_hasCoParticipant"
     42  reftype="sc_partOf"
     59  reftype="sc_stateOf"
     92  reftype="sc_playRole"
     94  reftype="sc_hasRole"
     97  reftype="sc_participantOf"
   105  reftype="sc_hasParticipant"
   128  reftype="sc_domainOf"
   169  reftype="sc_hasState"
   312  reftype="sc_hasPart"
 3637  reftype="sc_equivalentOf"
42048  reftype="sc_subClassOf"
Table 3: Type of relations for the wordnet to ontology  
mappings using the domain model
The table clearly shows the impact of role rela-
tions  that  are  encoded  in  the  domain  wordnet. 
When  we  extract  the  mappings  for  the  files 
without the domain model (ony using the map-
pings to the generic wordnet), we get only equi-
valence and subclass mappings.
Finally to complete the knowledge cycle, we cre-
ated a few Kybot profiles for extracting events 
from the  onto-tagged  documents.  As  an  initial 
test, 3 profiles have been created:
1. events of destruction
2. destructions of locations
3. destruction of objects
Using  these  profiles,  we  extracted  211  events 
from the 3 benchmark documents with 396 roles. 
The profiles are created to run over the ontolo-
gical  types  inserted  by  the  ontotagger,  e.g.  re-
stricted to events and change_of_integrity.  Des-
pite the generality of the profiles, we still see a 
clear signature of the domain in the output. This 
is a good indication that we will be able to ex-
tract valuable events from the data, even though 
the  ontotagger  generates  a  massive  amount  of 
implications.  Especially  events  that  combine 
multiple  roles  appear  to  give  rich  information. 
For example, the following sentence:
"One of the greatest challenges to restoration is con-
tinued population growth and development, which 
destroys forests, wetlands and other natural areas"
yielded the following output:
   <event target="t1471" lemma="destroy" pos="V" 
eid="e74"/>
   <role target="t1477" rtype="patient" lemma="area" 
pos="N" event="e74" rid="r138"/>
   <role target="t1472" rtype="patient" 
lemma="forest" pos="N" event="e74" rid="r151"/>
   <role target="t1469" rtype="actor" lemma="devel-
opment" pos="N" event="e74" rid="r180"/>
Running the full set of profiles on the complete data-
base with almost 60 million ontological statements 
took about 2 hours. This shows that our approach is 
scalable and efficient.
Table 2: Ontological implications for the four data sets
bench mark documents (3) estuary documents (4272
No Domain Domain Domain
ontology references 555,677 576,432 48,708,300
implied ontology references 457,332 82.30% 474,916 82.39% 40,523,452 83.20%
direct ontology references 53,178 9.57% 54,769 9.50% 4,377,814 8.99%
45,167 8.13% 46,747 8.11% 3,807,034 7.82%domain synset to ontology mappings
9
7 Conclusions
In this paper, we described an open platform for 
text-mining  using wordnets  and a central  onto-
logy.  The  system  can  be  used  across  different 
languages and can be tailored to mine any type of 
conceptual relations. It can handle semantic im-
plications that are expressed in very different lin-
guistic expressions and yield systematic output. 
As future work, we will carry out benchmarking 
and testing of the mining of events, both for Eng-
lish and for the other languages in the KYOTO 
project.
Acknowledgements
The KYOTO project is co-funded by EU - FP7 
ICT Work Programme 2007 under Challenge 4 - 
Digital  libraries  and  Content,  Objective  ICT-
2007.4.2  (ICT-2007.4.4):  Intelligent  Contsent 
and Semantics  (challenge 4.2).  The Asian part-
ners from Tapei and Kyoto are funded from na-
tional funds. This work has been also supported 
by  Spanish  project  KNOW-2 (TIN2009-14715-
C04-01).
References
Agirre, E., & Soroa, A. (2009) Personalizing PageR-
ank for Word Sense Disambiguation. Proceedings 
of the 12th EACL, 2009. Athens, Greece. 
Agirre, E., Lopez de Lacalle, O., & Soroa, A. (2009) 
Knowledge-based WSD and specific domains: per-
forming over supervised WSD. Proceedings of IJ-
CAI. Pasadena, USA. http://ixa.si.ehu.es/ukb
?lvez J., Atserias J., Carrera J., Climent S., Laparra 
E., Oliver A. and Rigau G. (2008) Complete and 
Consistent  Annotation of  WordNet  using the Top 
Concept Ontology. Proceedings of LREC'08, Mar-
rakesh, Morroco. 2008.
Appelt Douglas E., Jerry R. Hobbs, John Bear, David 
Israel, Megumi Kameyama, Andrew Kehler, David 
Martin,  Karen Myers and Mabry Tyson. Descrip-
tion of the FASTUS System Used for MUC-6. In 
Proceedings  of  MUC-6,  pages  237?248.  San 
Mateo, Morgan Kaufmann, 1995.
Auer A., C. Bizer, G. Kobilarov, J. Lehmann, R. Cy-
ganiak and Z. Ives. DBpedia: A Nucleus for a Web 
of  Open  Data.  In  Proceedings  of  the
International  Semantic  Web  Conference  (ISWC), 
volume 4825 of  Lecture Notes  in Computer Sci-
ence, pages 722-735. 2007.
Bosma, W., Vossen, P., Soroa, A. , Rigau, G., Tesconi, 
M., Marchetti, A., Monachini, M., & Apiprandi, C. 
(2009) KAF: a generic semantic annotation format. 
In Proceedings of the 5th International Conference 
on Generative Approaches to the Lexicon Sept 17-
19, 2009, Pisa, Italy.
Fellbaum,  C.  (Ed.)  (1998)  WordNet:  An  Electronic 
Lexical Database. Cambridge, MA: MIT Press.
Freitag, D. (1998) Information extraction from html: 
Application  of  a  general  machine  learning  ap-
proach.  In  Proceedings  of  the  Fifteenth  National 
Conference on Artificial Intelligence, 1998.
Gangemi  A.,  Guarino  N.,  Masolo  C.,  Oltramari  A., 
Schneider  L.  (2002)  Sweetening  Ontologies  with 
DOLCE. Proceedings of EKAW. 2002
Ide, N. and L. Romary. 2003. Outline of the inter- na-
tional standard Linguistic Annotation Framework. 
In Proceedings of ACL 2003 Workshop on Lin-
guistic Annotation: Getting the Model Right, pages 
1?5.
Izquierdo R., Su?rez A. & Rigau G. Exploring the 
Automatic Selection of Basic Level Concepts. Pro-
ceedings of RANLP'07, Borovetz, Bulgaria. 
September, 2007.
Masolo, C., Borgo, S., Gangemi, A.,  Guarino, N. & 
Oltramari, A. (2003) WonderWeb Deliverable D18: 
Ontology Library, ISTC-CNR, Trento, Italy.
Mizoguchi R., Sunagawa E., Kozaki K. & Kitamura 
Y. (2007 A Model of Roles within an Ontology De-
velopment  Tool:  Hozo.  Journal  of  Applied  Onto-
logy, Vol.2, No.2, 159-179.
Niles, I. & Pease, A. (2001) Formal Ontology in In-
formation Systems. Proceedings of the internation-
al Conference on Formal Ontology in Information 
Systems ? Vol. 2001 Ogunquit, Maine,  USA
Niles, I. and A. Pease. Linking lexicons and ontolo-
gies:  Mapping  WordNet  to  the  Suggested  Upper 
Merged Ontology. In Proc. IEEE IKE, pages 412?
416, 2003.
Vossen, P. (Ed.) (1998) EuroWordNet: a multilingual 
database  with  lexical  semantic  networks  for 
European Languages. Kluwer, Dordrecht.
Vossen P., W. Bosma, E. Agirre, G. Rigau, A. Soroa 
(2010) A full Knowledge Cycle for Semantic Inter-
operability.  Proceedings  of  the  5th  Joint  ISO-
ACL/SIGSEM Workshop on Interoperable Semant-
ic Annotation, (ICGL 2010) Hong Kong, 2010.
10
