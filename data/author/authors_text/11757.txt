Proceedings of CLIAWS3, Third International Cross Lingual Information Access Workshop, pages 3?11,
Boulder, Colorado, June 2009. c?2009 Association for Computational Linguistics
Speech Retrieval in Unknown Languages: a Pilot Study?
Xiaodan Zhuang# Jui Ting Huang# Mark Hasegawa-Johnson
Beckman Institute, Department of Electrical and Computer Engineering
University of Illinois at Urbana-Champaign, U.S.A.
{xzhuang2,jhuang29,jhasegaw}@uiuc.edu
Abstract
Most cross-lingual speech retrieval assumes
intensive knowledge about all involved lan-
guages. However, such resource may not ex-
ist for some less popular languages. Some
applications call for speech retrieval in un-
known languages. In this work, we lever-
age on a quasi-language-independent subword
recognizer trained on multiple languages, to
obtain an abstracted representation of speech
data in an unknown language. Language-
independent query expansion is achieved ei-
ther by allowing a wide lattice output for an
audio query, or by taking advantage of dis-
tinctive features in speech articulation to pro-
pose subwords most similar to the given sub-
words in a query. We propose using a re-
trieval model based on finite state machines
for fuzzy matching of speech sound patterns,
and further for speech retrieval. A pilot study
of speech retrieval in unknown languages is
presented, using English, Spanish and Russian
as training languages, and Croatian as the un-
known target language.
1 Introduction
Dramatic increase in recorded speech media calls for
efficient retrieval of audio files. Accessing speech
media of a foreign language is a particularly impor-
tant and challenging task, often referred to as cross-
lingual speech retrieval or cross-lingual spoken doc-
ument retrieval.
?This research is funded by NSF grants 0534106 and
0703624. The authors would like to thank Su-Youn Yoon for
inspiring discussion. #The student authors contribute equally.
Previous work on cross-lingual speech retrieval
mostly leverages on intensive knowledge about all
the languages involved. Most reported work inves-
tigates retrieval in a target language, in response to
audio or text queries given in a different source lan-
guage (Meng et al, 2000; Virga and Khudanpur,
2003). Usually, the speech media in the target lan-
guage, and the audio queries in the source language,
are converted to speech recognition transcripts us-
ing large-vocabulary automatic speech recognizers
(LVASR) trained for the target language and the
source language respectively. The text queries, or
transcribed audio queries, are translated to the tar-
get language. Text retrieval techniques are applied
to retrieve speech, by retrieving the correspond-
ing LVASR transcription in the target language. In
such systems, a large-vocabulary speech recognizer
trained on the target language is essential, which
requires the existence of a dictionary and labeled
acoustic training data in that language.
LVASR currently do not exist for most of the 6000
languages on Earth. In some situations, knowledge
about the target language is limited, and definitely
not sufficient to enable training LVASR. Imagine
an audio database in a target language unknown to
a user, who needs to retrieve spoken content rel-
evant to some audible query in this unknown lan-
guage. For example, the user knows how the name
?Obama? is pronounced in the target language, and
wants to retrieve all spoken documents that contain
the query word, from a database in this unknown
language. A linguist might find himself/herself in
this scenario when he or she tries to collect a large
number of utterances containing some particular
3
phrases in an unknown language. Similarly, an in-
formation analyst might wish to leverage on speech
retrieval in unknown languages to organize critical
information before engaging linguistic experts for
finer analysis. We refer to such retrieval tasks as
speech retrieval in unknown languages, in which lit-
tle knowledge about the target language is assumed.
A human linguist attempting to manually per-
form speech retrieval in an unknown language
would necessarily map the perceived speech (both
database and query) into some cognitive abstraction
or schema, representing, perhaps, the phonetic dis-
tinctions that he or she has been trained to hear.
Matching and retrieval of speech would then be per-
formed based on such an abstraction. Two cog-
nitive processes, assimilation and accommodation,
take place when human brains are to process new
information (Bernstein et al, 2007), such as speech
in an unknown language. In accommodation, the in-
ternal stored knowledge adapts to new information
with which it is confronted. In assimilation, the new
information, e.g., speech in an unknown language, is
mapped to previously stored information, e.g., sub-
words (phones) as defined by knowledge about the
languages known to the listener.
This paper models speech retrieval in unknown
languages using a machine learning model of pho-
netic assimilation. A quasi-language-independent
subword recognizer is trained to capture salient sub-
words and their acoustic distribution in multiple
languages. This recognizer is applied on an un-
known language, therefore mapping segments of the
unknown speech to subwords in the known lan-
guages. Through this machine cognitive process,
the database and queries in the unknown language
are represented as sequences of quasi-language-
independent subwords. Speech retrieval is per-
formed based on such representation. Figure 1 illus-
trates that speech retrieval in an unknown language
can be modeled as a special case of assimilation.
This task differs from the more widely studied
known-language speech retrieval task, in that no lin-
guistic knowledge of the target language is assumed.
We can only leverage on knowledge that can be
applied by assimilation to the multiple known lan-
guages. Therefore, this task is more like a cross-
lingual sound pattern retrieval task, leveraged on
quasi-language-independent subwords, rather than
Figure 1: Automatic speech retrieval in an unknown lan-
guage (below) is modeled as a special case of the cogni-
tive process called assimilation (above).
a translated spoken word/phrase retrieval task us-
ing target language LVASR transcripts, as in most
cross-lingual speech retrieval systems. The quasi-
language-independent subword recognizer is trained
on speech data other than the target language, and
therefore generates much noisier recognition results,
owing to potential mismatch between acoustic distri-
butions, lack of dictionary and lack of a word-level
language model.
To manage the extra difficulty, we adopt a sub-
word lattice representation to encode a wide hypoth-
esis space of recognized speech in the target lan-
guage. Language-independent query expansion is
achieved either by allowing a wide lattice output
for an audio query, or by taking advantage of dis-
tinctive features in speech articulation to propose
quasi-language-independent subwords most similar
to the given subwords in a query. Finite state ma-
chines (FSM) constructed from the speech lattices
are used to allow for fuzzy matching of speech
sound patterns, and further for retrieval in unknown
languages.
We carry out a pilot study of speech retrieval
in unknown languages, using English, Spanish and
Russian as training languages, and Croatian as the
unknown target language. To explain the effect of
additional knowledge about the target language, we
demonstrate the improvements in retrieval perfor-
mance that result by incrementally making available
subword sequence models and acoustic models for
the target language.
2 Quasi-Language-Independent subword
Models
2.1 Deriving a subword set
Based on the assumption that an audible phrase in an
unknown language can be represented as a sequence
4
of subwords, the question is to find an appropriate
set of subword symbols. Schultz and Waibel (2001)
reported that a global unit set for the source
languages based on International Phonetic Alpha-
bet (IPA) symbols outperforms language-dependent
phonetic units in cross-lingual word recognition
tasks, whereas language-dependent phonetic units
are better models for multilingual word recognition
(in which the target language is also one of the
source languages). A multilingual task might ben-
efit from partitioning the feature space according to
language identity, i.e., to have different subsets of
models aiming at different languages. By contrast,
a cross-lingual task calls for one consistent set of
models with language-independent properties in or-
der to maximize portability into the new language.
To capture the necessary distinctions between dif-
ferent phones across languages, we first pool to-
gether individual phone inventories for source lan-
guages, each of which has its phones tagged with
a language identity, and then performed bottom-up
clustering on the phone pool based on pairwise sim-
ilarity between their acoustic models. Each cluster
represents one distinct language-independent sub-
word symbol. Since this set is still derived from
multiple languages, we refer to these subword units
as quasi-language-independent subwords. A quasi-
language-independent subword set is derived by the
following steps:
First, we encode all speech in the known lan-
guages using a language-dependent phone set. Each
symbol in this set is defined by the phone iden-
tity and the language identity. One single-Gaussian
three-state left-to-right HMM is trained for each of
these subword units.
Second, similarity between the language-
dependent phones is estimated by the approximated
KL divergence between corresponding acoustic
models. As shown in (Vihola et al, 2002), KL
divergence between single-Gaussian left-to-right
HMMs can be approximated in closed form by
Equation 1,
KLD(U, V ) =
S?
i=1
ri
S?
j=1
aUij log
(
aUij/aVij
)(1)
+
S?
i=1
riI
(
bUi : bVi
)
, (2)
where aij is the transition probability to hidden state
j, and bi and ri are the observation distribution
and steady-state probability for hidden state i. For
single-Gaussian distribution, I
(
bUi : bVi
)
can be ap-
proximated by,
I(bUi : bVi ) = 12
[
log
???Vi
??
???Ui
??
+ tr
(
?Ui
((?Vi
)?1 ?
(?Ui
)?1))
+ tr
((?Vi
)?1 (?Ui ? ?Vi
) (
?Ui ? ?Vi
)T) ].
Third, we use the Affinity Propagation algorithm
(Frey and Dueck, 2007) to conduct pairwise cluster-
ing of phones based on the approximated KL diver-
gence between acoustic models. The tendency for a
data point (a phone) to be an exemplar of a cluster
is controlled by the preference value assigned to that
phone. The preference of a phone i is set as follows
to favor frequent phones to be cluster centers:
p(i) = k log(Ci), (3)
where Ci is the count of the phone i, and k is a nor-
malization term to control the total number of clus-
ters. To discourage subwords from the same lan-
guage to join a same cluster, pairwise distance be-
tween them are offset by an additional amount, com-
parable to the maximum pairwise distance between
the models.
The resultant subword set is supposed to cap-
ture quasi-language-independent phonetic informa-
tion, and each subword unit has relatively distinctive
acoustic distribution. These subwords are encoded
using the corresponding cluster exemplars as surro-
gates.
2.2 Recognizing subwords
An automatic speech recognition (ASR) system
(Jelinek, 1998) serves to recognize both queries
and speech database, with acoustic models for the
language-independent subwords derived from the
known languages as described in section 2.1. The
front-end features extracted from the speech data
are 39-dimensional features including 12 Perceptual
Linear Prediction (PLP) coefficients and their en-
ergy, as well as the first-order and second order re-
gression coefficients.
5
We create context-dependent models for each
subword, using the same strategy for build-
ing context-dependent triphone models in LVASR
(Woodland et al, 1994). A ?triphone? is a subword
with its context defined as its immediate preceding
and following subwords. Each triphone is repre-
sented by a continuous three-state left-to-right Hid-
den Markov Model (HMM). Additionally, there is a
one-state HMM for silence, two three-state HMMs
for noise and unknown sound respectively. The
number of Gaussian mixtures (9 to 21 Gaussians) is
optimized according to a development set consisting
of speech in the known languages. A standard tree-
based state tying technique is adopted for parameter
sharing between subwords with similar contexts.
The ?language model? (LM), or more precisely
subword sequence model, should generalize from
the known languages to the unknown language. Our
trial experiments showed that unigram statistics of
subwords and their triphones is more transferable
across languages than N-gram statistics. We also as-
sume that infrequent triphones are less likely to be
salient units that would carry the properties of the
unknown language. Thus, we select the top frequent
triphones and map the rest of the triphones to their
center phones, forming a mixed vocabulary of fre-
quent triphones and context-independent subwords.
The frequencies of these vocabulary entries are used
to estimate an unigram LM in the ASR system. Tri-
phones in the ASR output are mapped back to its
center subwords before the retrieval stage.
3 Speech Retrieval through Subword
Indexing
In many cross-lingual speech retrieval systems, the
speech media are processed by a large-vocabulary
automatic speech recognizer (LVASR), which has
access to vocabulary, dictionary, word language
model and acoustic models for the target lan-
guage. With all these resources, state-of-the-art
speech recognition could give reasonable hypoth-
esized word transcript, enabling direct application
of text retrieval techniques. However, this is not
the case in speech retrieval in unknown languages.
Moreover, without the higher level linguistic knowl-
edge, such as a word dictionary, this task aims to
find speech patterns that sound similar, as approxi-
mated by sequences of quasi-language-independent
subwords. Therefore, the sequential information in
the hypothesized subwords is critical.
To deal with the significant noise in the subword
recognition output, and to emphasize the sequential
information, we use the recognizer to obtain sub-
word lattices instead of one-best hypotheses. These
lattices can be represented as weighted automata,
which are compact representations of a large num-
ber of alternative subword sequences, each asso-
ciated with a weight indicating the uncertainty of
the data. Therefore, indexing speech in unknown
language can be achieved by indexing the corre-
sponding weighted automata with quasi-language-
independent subwords associated with the state tran-
sitions.
We adopt the weighted automata indexation algo-
rithm reported in (Allauzen et al, 2004), which is
optimal for searching subword sequences, as it takes
time linear in the sum of the query size and the num-
ber of speech media entries where it appears. The
automata indexation algorithm also preserves the se-
quential information, which is crutial for this task.
We leverage on two kinds of knowledge for query
expansion, namely empirical phone confusion and
knowledge-based phone confusion. An illustration
of our speech retrieval system is presented in Fig-
ure 2. We detail the indexing approaching as well as
query expansion and retrieval in this section.
Figure 2: Framework of speech retrieval through subword
indexing
6
3.1 Subword Finite State Machines as Speech
Indices
We construct a full index that can be used to search
for a query within all the speech utterances ui, i ?
1, ..., n. In particular, this is achieved by construct-
ing a weighted finite-state transducer T , mapping
each query x to the set of speech utterances where
it appears. Each returned speech utterance u is as-
signed a score, which is the negative log of the ex-
pected count of the query x in utterance u.
The subword lattice for speech utterance ui can be
represented as a weighted finite state automata Ai,
whose path weights correspond to the joint proba-
bility of the observed speech and the hypothesized
subword sequence. To get an automata whose path
weights correspond to desired negative log of poste-
rior probabilities, we simply need to apply a general
weight-pushing algorithm to Ai in the log semiring,
resulting in an automata Bi. In this automata Bi,
the probability of a given string x is the sum of the
probability of all paths that contains x.
The key point of constructing the index transducer
Ti for uttereance ui is to introduce new paths that
enable matching between a query and any portions
of the original paths, while properly normalizing the
path weights. This is achieved by factor selection in
(Allauzen et al, 2004). First, null output is intro-
duced to each transition in the automata, converting
the automata into a transducer. Second, a new tran-
sition is introduced from a new unique initial state to
each existing state, with null input and output. The
weight associated with this transition is the negative
log of the forward probability. Similarly, a new tran-
sition is created from each state to a new unique final
state, with null input and output as the label i of the
current utterance ui. The assicated weight is the neg-
ative log of the backward probability. General finite
state machine optimization operations (Allauzen et
al., 2007) of weighted ?-removal, determinization
and minimization over the log semiring can be ap-
plied to the resulting transducer. As shown in (Al-
lauzen et al, 2004), the path with input of string x
and output of label i has a weight corresponding to
the negative log of the expected count of x in utter-
ance ui.
To optimize the retrieval time, we divide all ut-
terances into a few groups. Within each group, the
utterance index transducers are unioned and deter-
minized to get one single index transducer for the
group. It is then feasible to expedite retrieval by
processing each group index transducer in a paral-
lel fashion.
3.2 Query Expansion
While sequential information is important, ex-
act string match is very unplausible in this chal-
lenging task, even when subword lattices encode
many alternative recognition hypotheses. Language-
independent query expansion is therefore critical for
success in retrieval. We carry out query expansion
either by allowing a wide lattice output for an audio
query, or by taking advantage of distinctive features
in speech articulation to propose quasi-language-
independent subwords most similar to the given sub-
words in a query.
In particular, for a spoken query, ASR will gen-
erate a subword lattice instead of a one-best sub-
word sequence hypothesis. With the lattice, the au-
dio query is encoded by the best hypothesis from
ASR and its empirical phone confusion. The lattice
can then be represented as a finite-state automata.
However, when the query is given as a target
language subword sequence, we can no longer use
the recognizer to obtain an expanded query. Fur-
thermore, some target language subwords may not
even exist in the quasi-language-independent sub-
word set in the recognizer. In this case, knowledge-
based phone confusion is engaged via the use of a
set of distinctive features Fj , j ? 1, ...,M for hu-
man speech (Chomsky and Halle, 1968), including
labial, alveolar, post-alveolar, retroflex, voiced, as-
pirated, front, back, etc.
We estimate similarity from phone a to phone b,
or more precisely, substitution tendency as in Equa-
tion 4,
DFsim(a, b) = log NabNa (4)
where
Nab =
M?
j=1
(F aj ? F bj = 1),
Na =
M?
j=1
(F aj 6= 0).
7
The target subword sequence is first mapped to
the derived subword set, by locating the identical
or nearest member phone in the clustering and then
adopting the surrogate for that cluster. This con-
verted sequence of derived subwords is further ex-
panded by adding the most likely alternative quasi-
language-independent subwords, parallel to each
original subword. Transitions to these alternative
subwords are associated with the corresponding sub-
stitution tendency based on distinctive features.
3.3 Search
An expanded query, either obtained from an audio
query or a subword sequence query, is represented
as a weighted finite state automata. Searching this
query in the utterances is achieved by composing the
query automata with the index transducer. This re-
sults in another finite state transducer, which is fur-
ther processed by projection on output, removal of
? arcs and determinization. The output is a list of
retrieved speech utterances, each with the expected
count of the query.
Apparently, the precision and recall of the re-
trieval results vary with the width of the subword
lattices used for indexing as well as how much the
query is expanded. We control the width of the sub-
word lattices via the number of tokens and the max-
imum probability decrease allowed for each step in
the Viterbi decoding. The extend to which a sub-
word sequence query is expanded is determined by
the lowest allowed similarity between the original
phone and an alternative phone. These parameters
are set empirically.
4 Experiments
4.1 Dataset
The known language pool should cover as many lan-
guage families as possible so that the derived sub-
words could better approximate language indepen-
dence. However, as a pilot study, this paper reports
experiments using only languages within the Indo-
European family. Table 1 summarizes the size of
speech data from each language. Croatian is used
as the unknown target language, and the other three
languages are the known languages used for de-
riving and training the quasi-language-independent
subword models. We extracted 80% of all speakers
per language for training, and 10% as a development
set.
Language ID Hours Spks Style
Croatian hrv 21.3 201 Read+answers
English hub 13.6 406 Broadcast
Spanish spa 14.6 120 Read+answers
Russian rus 2.5 63 Read+answers
Table 1: Summary for data: language ID, total length,
number of speakers and speaking style for each language.
4.2 Settings
The speech retrieval task aims to find speech utter-
ances that contain a particular query. We use two
kinds of queries: 1) subword sequence queries, tran-
scribed as a sequence of phonetic symbols in the tar-
get language; 2) audio queries, each being an audio
segment of the speech query in the target language.
Since we aim to match speech patterns that sound
like each other, the queries used in this experiment
are relatively short, about 3 to 5 syllables. This adds
to the challenge in that very limited redundant in-
formation is available for query-utterance matching.
There are totally 40 subword sequences and 40 audio
queries, each occurs in between 18 and 38 utterances
out of a set of 576 utterances.
In addition to a cross-lingual retrieval system built
using only the known languages, we incrementally
augment resource on the target language to build
more knowledgeable systems.
AM0LM0: Both the acoustic model (AM)
and the language model (LM) are quasi-language-
independent, trained using data in multiple known
languages. This happens when no transcribed
speech data or a defined phone set exist for the tar-
get language. Essentially the system has no direct
knowledge about the target language.
AM0LMt: This setting examines the perfor-
mance gap due to the acoustic model mismatch
by using a quasi-language-independent AM, but a
target language LM. Suppose that a word dictio-
nary with phonetic transcription and possibly some
text data from the target language are available,
for training a target language subword LM. To find
the mapping between target triphones and language-
independent source AMs, linguistic knowledge and
phonetic symbol notation are the only information
8
we can use. First, we map each of target mono-
phones to source phone symbols: Any source cluster
that contains a phonetic symbol with the same nota-
tion as the target phonetic symbol becomes a surro-
gate symbol for that target phone. If a target phone
is unseen to the known languages, the most similar
phone will be chosen first. The similarity is based on
the distinctive features, as discussed in Section 3.2.
Second, the target triphones are converted to possi-
ble source triphones for which acoustic models ex-
ist. Each target triphone not modeled in the source
language AM is replaced with the corresponding di-
phone (subword pair) if it exists, otherwise the cen-
ter phone.
AMtLM0: This setting examines the perfor-
mance gap due to the language model mismatch by
using a quasi-language-independent source LM, but
a target language AM. For the source triphones and
monophones that do not exist in the target AM, they
are mapped to target AMs in a way similar as de-
scribed above.
AMtLMt: Both AM and LM are trained for the
target language. This setting provides an upper
bound of the performance for different settings.
4.3 Metrics
We evaluate the performance for both subword
recognition and speech retrieval, measured as fol-
lows.
Recognition Accuracy: The ground truth is en-
coded using subwords in the target language while
the recognition output is encoded using quasi-
language-independent subwords in Section 2. To
measure the recognition accuracy, we label each
quasi-language-independent subword cluster using
the most frequent target language subword that ap-
pears in that cluster. The hypothesis subword se-
quence is then compared against the groundtruth us-
ing a dynamic-programming-based string alignment
procedure. The recognition accuracy is defined as
REC ? ACC = H?IN ? 100%, where H , I , and
N are the numbers of correct labels, insertion errors
and groundtruth labels respectively.
Retrieval Precision: The retrieval performance
is measured using Mean Average Precision (IR ?
MAP ), defined as the mean of the Average Preci-
sion (AP ) for a set of different queries x. Mean
Average Precision (IR ? MAP ) can be defined in
Equation 5. n is the number of ordered retrieved
utterances and R is the total number of relevant ut-
terances. fi is an indicator function whether the ith
retrieved utterance does contain the query. Precision
pm for top m retrieved utterances can be calculated
as pm = 1m
?m
k=1 f(k).
IR?MAP = 1Q
Q?
x=1
AP (x),
AP (x) = 1R(x)
n(x)?
i=1
fi(x)pi(x). (5)
We use IR ? MAPA and IR ? MAPS to denote
the retrieval MAP for audio queries and subword se-
quence queries respectively.
4.4 Results
Table 2 presents a few examples of the derived
quasi-language-independent subwords. As dis-
cussed in Section 2, these subwords are obtained by
bottom-up clustering of all the language-dependent
IPA phones in the multiple known languages. The
same IPA symbol across languages may lie in the
same cluster, e.g., /z/ in Cluster 1, or different clus-
ters, e.g., /j/ in Cluster 3 and 4. Although symbols
within the same language are discouraged to be in
one cluster, it still desirably happens for highly sim-
ilar pairs, e.g., /1/rus and /j/rus in Cluster 4.
Cluster ID Surrogate Other phone members
1 /z/hub /z/spa, /z/rus, /zj/rus
2 /tSj/rus /tS/hub, /tS/spa
3 /j/hub /j/spa
4 /i:/hub /1/rus, /j/rus
Table 2: Examples of quasi-language-independent sub-
words, as clusters of source language IPAs.
Table 3 compares the subword recognition
and retrieval performance for the quasi-language-
independent subwords and IPA phones. We can
Setting REC ? ACC IR?MAPA IR?MAPS
IPA 37.18% 17.90% 31.40%
AM0LM0 42.52% 23.24% 32.62%
Table 3: Performance of quasi-languange-independent
subword and IPA.
9
Setting AMtLMt AMtLM0 AM0LMt AM0LM0
REC ? ACC 73.45% 67.29% 49.88% 42.52%
IR?MAPA 58.82% 52.38% 28.32% 23.24%
IR?MAPS 76.96% 51.86% 34.95% 32.62%
Table 4: Performance of subword recognition and speech
retrieval.
see that on the unknown language Croatian, the de-
rived quasi-language-independent subwords outper-
form the IPA symbol set in both phone recognition
and retrieval using two kinds of queries.
narrow wide
10
20
30
40
50
60
70
80
Query Expansion
IR
?M
AP
(%
)
 
 
AMtLMt
AMtLM0
AM0LMt
AM0LM0
Figure 3: Speech retrieval performance for subword se-
quence queries
narrow wide
15
20
25
30
35
40
45
50
55
60
Query Expansion
IR
?M
AP
(%
)
 
 
AMtLMt
AMtLM0
AM0LMt
AM0LM0
Figure 4: Speech retrieval performance for audio queries
Table 4 presents the subword recognition accu-
racy and retrieval performance with optimal query
width. Figure 3 and Figure 4 presents speech
retrieval performance at varying query widths for
subword sequence queries and audio queries re-
spectively. It is shown that speech retrieval in
completely unknown language achieves MAP of
23.24% and 32.62% while the system trained using
the most available knowledge about the target lan-
guage reaches MAP of 58.82% and 76.96%, for au-
dio queries and subword sequence queries respec-
tively. We also demonstrate access to phone fre-
quency (AM0LMt) and acoustic data (AMtLM0)
both boosts retrieval performance, and the effect is
roughly additive (AMtLMt).
5 Conclusion and Discussion
In this work, we present a speech retrieval approach
in unknown languages. This approach leverages
on speech recognition based on quasi-language-
independent subword models derived from multi-
ple known languages, and finite state machine based
fuzzy speech pattern matching and retrieval. Our
experiments use Croatian as the unknown language
and English, Russian and Spanish as the known lan-
guages. Results show that the derived subwords out-
perform the IPA symbols, and access to the subword
language model and acoustic models in the unknown
language explains the gap between this challenging
task and retrieval with knowledge about the target
language.
The proposed retrieval approach on unknown lan-
guages can be viewed as a machine learning model
of phonetic assimiliation, in which the segments
in an unknown language are mapped to language-
independent subwords learned from the multiple
known languages. However, another important cog-
nitive process, i.e., accomodation, is not yet mod-
eled. We believe the capability to create new sub-
words unseen in the known languages would lead
to improved performance. In particular, speech seg-
ments that are hypothesized by the quasi-language-
independent subword recognizer with very low con-
fidence scores can be clustered to form these new
subwords, accomodating to the unknown language.
The approach in this work can be readily scaled
up to much larger speech corpora. In particular,
larger corpora would make it more practical to im-
plement the accomodation process discussed above.
Besides, that would also enable online adaptation
of the model parameters of the quasi-language-
independent subword recognizer. Both are believed
to promise reduced gap between retrieval perfor-
mance in a known language and an unknown lan-
guage, and are potential future work beyond this pa-
per.
10
References
C. Allauzen, M. Mohri, and M. Saraclar. 2004. Gen-
eral indexation of weighted automata ? application to
spoken utterance retrieval. In Proc. HLT-NAACL.
C. Allauzen, M. Riley, J. Schalkwyk, W. Skut, and
M.Mohri. 2007. Openfst: A general and effi-
cient weighted finite-state transducer library. In Proc.
CIAA.
Bernstein, Penner, Clarke-Stewart, and Roy. 2007. Psy-
chology. Houghton Mifflin Company.
Noam Chomsky and Morris Halle. 1968. The Sound
Pattern of English. New York: Harper and Row.
Brendan J. Frey and Delbert Dueck. 2007. Clustering
by passing messages between data points. Science,
315:972?976.
Frederick Jelinek. 1998. Statistical Methods for Speech
Recognition. The MIT Press.
Helen Meng, Berlin Chen, Erika Grams, Sanjeev Khu-
danpur, Wai-Kit Lo, Gina-Anne Levow, Douglas Oard,
Patrick Schone, Karen Tang, Hsin-Min Wang, and
Jian Qiang Wang. 2000. Mandarin-english informa-
tion (MEI): Investigating translingual speech retrieval.
http://www.clsp.jhu.edu/ws2000/final reports/mei/ws00mei.pdf.
Tanja Schultz and Alex Waibel. 2001. Language inde-
pendent and language adaptive acoustic modeling for
speech recognition. Speech Communication, 35:31?
51.
M. Vihola, M. Harju, P. Salmela, J. Suontausta, and
J. Savela. 2002. Two dissimilarity measures for hmms
and their application in phoneme model clustering. In
Proc. ICASSP, volume 1, pages I?933 ? I?936.
Paola Virga and Sanjeev Khudanpur. 2003. Transliter-
ation of proper names in crosslingual information re-
trieval. In Proc. ACL 2003 workshop MLNER.
P.C. Woodland, J.J. Odell, V. Valtchev, and S.J. Young.
1994. Large vocabulary continuous speech recogni-
tion using HTK. In Proc. ICASSP, volume 2, pages
II/125?II/128.
11
Proceedings of the NAACL HLT Workshop on Semi-supervised Learning for Natural Language Processing, pages 75?83,
Boulder, Colorado, June 2009. c?2009 Association for Computational Linguistics
On Semi-Supervised Learning of Gaussian Mixture Models
for Phonetic Classification?
Jui-Ting Huang and Mark Hasegawa-Johnson
Department of Electrical and Computer Engineering
University of Illinois at Urbana-Champaign
Illinois, IL 61801, USA
{jhuang29,jhasegaw}@illinois.edu
Abstract
This paper investigates semi-supervised learn-
ing of Gaussian mixture models using an uni-
fied objective function taking both labeled and
unlabeled data into account. Two methods
are compared in this work ? the hybrid dis-
criminative/generative method and the purely
generative method. They differ in the crite-
rion type on labeled data; the hybrid method
uses the class posterior probabilities and the
purely generative method uses the data like-
lihood. We conducted experiments on the
TIMIT database and a standard synthetic data
set from UCI Machine Learning repository.
The results show that the two methods be-
have similarly in various conditions. For both
methods, unlabeled data improve training on
models of higher complexity in which the su-
pervised method performs poorly. In addition,
there is a trend that more unlabeled data re-
sults in more improvement in classification ac-
curacy over the supervised model. We also
provided experimental observations on the rel-
ative weights of labeled and unlabeled parts
of the training objective and suggested a criti-
cal value which could be useful for selecting a
good weighing factor.
1 Introduction
Speech recognition acoustic models can be trained
using untranscribed speech data (Wessel and Ney,
2005; Lamel et al, 2002; L. Wang and Woodland,
2007). Most such experiments begin by boostraping
?This research is funded by NSF grants 0534106 and
0703624.
an initial acoustic model using a limited amount of
manually transcribed data (normally in a scale from
30 minutes to several hours), and then the initial
model is used to transcribe a relatively large amount
of untranscribed data. Only the transcriptions with
high confidence measures (Wessel and Ney, 2005;
L. Wang and Woodland, 2007) or high agreement
with closed captions (Lamel et al, 2002) are se-
lected to augment the manually transcribed data, and
new acoustic models are trained on the augmented
data set.
The general procedure described above exactly
lies in the context of semi-supervised learning prob-
lems and can be categorized as a self-training algo-
rithm. Self-training is probably the simplest semi-
supervised learning method, but it is also flexible
to be applied to complex classifiers such as speech
recognition systems. This may be the reason why
little work has been done on exploiting other semi-
supervised learning methods in speech recognition.
Though not incorporated to speech recognizers yet,
there has been some work on semi-supervised learn-
ing of Hidden Markov Models (HMM) for sequen-
tial classification. Inoue and Ueda (2003) treated the
unknown class labels of the unlabeled data as hidden
variables and used the expectation-maximization
(EM) algorithm to optimize the joint likelihood of
labeled and unlabeled data. Recently Ji et al (2009)
applied a homotopy method to select the optimal
weight to balance between the log likelihood of la-
beled and unlabeled data when training HMMs.
Besides generative training of acoustic models,
discriminative training is another popular paradigm
in the area of speech recognition, but only when
75
the transcriptions are available. Wang and Wood-
land (2007) used the self-training method to aug-
ment the training set for discriminative training.
Huang and Hasegawa-Johnson (2008) investigated
another use of discriminative information from la-
beled data by replacing the likelihood of labeled data
with the class posterior probability of labeled data in
the semi-supervised training objective for Gaussian
Mixture Models (GMM), resulting in a hybrid dis-
criminative/generative objective function. Their ex-
perimental results in binary phonetic classification
showed significant improvement in classification ac-
curacy when labeled data are scarce. A similar strat-
egy called ??multi-conditional learning?? was pre-
sented in (Druck et al, 2007) applied to Markov
Random Field models for text classification tasks,
with the difference that the likelihood of labeled data
is also included in the objective. The hybrid dis-
criminative/generative objective function can be in-
terpreted as having an extra regularization term, the
likelihood of unlabeled data, in the discriminative
training criterion for labeled data. However, both
methods in (Huang and Hasegawa-Johnson, 2008)
and (Druck et al, 2007) encountered the same issue
about determining the weights for labeled and un-
labeled part in the objective function and chose to
use a development set to select the optimal weight.
This paper provides an experimental analysis on the
effect of the weight.
With the ultimate goal of applying semi-
supervised learning in speech recognition, this pa-
per investigates the learning capability of algorithms
within Gaussian Mixture Models because GMM is
the basic model inside a HMM, therefore 1) the up-
date equations derived for the parameters of GMM
can be conveniently extended to HMM for speech
recognition. 2) GMM can serve as an initial point
to help us understand more details about the semi-
supervised learning process of spectral features.
This paper makes the following contribution:
? it provides an experimental comparison of hy-
brid and purely generative training objectives.
? it studies the impact of model complexity on
learning capability of algorithms.
? it studies the impact of the amount of unlabeled
data on learning capability of algorithms.
? it analyzes the role of the relative weights of
labeled and unlabeled parts of the training ob-
jective.
2 Algorithm
Suppose a labeled set XL = (x1, . . . , xn, . . . , xNL)
has NL data points and xn ? Rd. YL =
(y1, . . . , yn, . . . , yNL) are the corresponding class
labels, where yn ? {1, 2, . . . , Y } and Y is the num-
ber of classes. In addition, we also have an unla-
beled set XU = (x1, . . . , xn, . . . , xNU ) without cor-
responding class labels. Each class is assigned a
Gaussian Mixture model, and all models are trained
given XL and XU . This section first presents the
hybrid discriminative/generative objective function
for training and then the purely generative objective
function. The parameter update equations are also
derived here.
2.1 Hybrid Objective Function
The hybrid discriminative/generative objective func-
tion combines the discriminative criterion for la-
beled data and the generative criterion for unlabeled
data:
F (?) = logP (YL|XL;?) + ? logP (XU ;?), (1)
and we chose the parameters so that (1) is maxi-
mized:
?? = argmax
?
F (?) . (2)
The first component considers the log posterior
class probability of the labeled set whereas the sec-
ond component considers the log likelihood of the
unlabeled set weighted by ?. In ASR community,
model training based the first component is usually
referred to as Maximum Mutual Information Esti-
mation (MMIE) and the second component Maxi-
mum Likelihood Estimation (MLE), therefore in this
paper we use a brief notation for (1) just for conve-
nience:
F (?) = F (DL)MMI (?) + ?F (DU )ML (?) . (3)
The two components are different in scale. First,
the size of the labeled set is usually smaller than
the size of the unlabeled set in the scenario of semi-
supervised learning, so the sums over the data sets
involve different numbers of terms; Second, the
76
scales of the posterior probability and the likeli-
hood are essentially different, so are their gradients.
While the weight ? balances the impacts of two
components on the training process, it may also im-
plicitly normalize the scales of the two components.
In section (3.2) we will discuss and provide a further
experimental analysis.
In this paper, the models to be trained are Gaus-
sian mixture models of continuous spectral feature
vectors for phonetic classes, which can be further
extended to Hidden Markov Models with extra pa-
rameters such as transition probabilities.
The maximization of (1) follows the techniques
in (Povey, 2003), which uses auxiliary functions for
objective maximization; In each iteration, a strong
or weak sense auxiliary function is maximized, such
that if the auxiliary function converges after itera-
tions, the objective function will be at a local maxi-
mum as well.
The objective function (1) can be rewritten as
F (?) = logP (XL|YL;?)? logP (XL;?)
+ ? logP (XU ;?), (4)
where the term logP (YL;?) is removed because it
is independent of acoustic model parameters.
The auxiliary function at the current parameter
?old for (4) is
G(?, ?(old)) =Gnum(?, ?(old))? Gden(?, ?(old))
+?Gden(?, ?(old);DU ) + Gsm(?, ?(old)),
(5)
where the first three terms are strong-sense auxiliary
functions for the conditional likelihood (referred to
as the numerator(num) model because it appears in
the numerator when computing the class posterior
probability) logP (XL|YL;?) and the marginal like-
lihoods (referred to as the denominator(den) model
likewise) logP (XL;?) and ? log P (XU ;?) respec-
tively. The last term is a smoothing function that
doesn?t affect the local differential but ensures that
the sum of the first three term is at least a convex
weak-sense auxiliary function for good convergence
in optimization.
Maximization of (5) leads to the update equations
for the class j and mixture m given as follows:
??jm = 1?jm
(
xnumjm, ? xdenjm + ?xdenjm(DU ) + Djm?jm
)
(6)
??2jm =
1
?jm
(
snumjm ? sdenjm + ?sdenjm(DU )
+Djm
(
?2jm + ?2jm
))
? ??2jm,
(7)
where for clarity the following substitution is used:
?jm = ?numjm ? ?denjm + ??denjm(DU ) + Djm (8)
and ?jm is the sum of the posterior probabilities of
occupation of mixture component m of class j over
the dataset:
?numjm (X) =
?
xi?X,yi=j
p (m|xi, yi = j)
?denjm(X) =
?
xi?X
p (m|xi)
(9)
and xjm and sjm are respectively the weighted
sum of xi and x2i over the whole dataset with the
weight p (m|xi, yi = j) or p (m|xi), depending on
whether the superscript is the numerator or denomi-
nator model. Djm is a constant set to be the greater
of twice the smallest value that guarantees positive
variances or ?denjm (Povey, 2003). The re-estimation
formula for mixture weights is also derived from the
Extended Baum-Welch algorithm:
c?jm =
cjm
{
?F
?cjm + C
}
?
m? cjm?
{
?F
?cjm + C
} , (10)
where the derivative was approximated (Merialdo,
1988) in the following form for practical robustness
for small-valued parameters :
?FMMI
?cjm
?
?numjm?
m? ?numjm?
?
?denjm?
m? ?denjm?
. (11)
Under our hybrid framework, there is an extra term
?denjm(DU )/
?
m? ?denjm?(DU ) that should exist in (11),
but in practice we found that adding this term to the
approximation is not better than the original form.
Therefore, we keep using MMI-only update for mix-
ture weights. The constant C is chosen such that all
parameter derivatives are positive.
77
2.2 Purely Generative Objective
In this paper we compare the hybrid objective with
the purely generative one:
F (?) = logP (XL|YL;?) + ? logP (XU ;?),
(12)
where the two components are total log likelihood of
labeled and unlabeled data respectively. (12) doesn?t
suffer from the problem of combining two heteroge-
neous probabilistic items, and the weight ? being
equal to one means that the objective is a joint data
likelihood of labeled and unlabeled set with the as-
sumption that the two sets are independent. How-
ever, DL or DU might just be a sampled set of the
population and might not reflect the true proportion,
so we keep ? to allow a flexible combination of two
criteria. On top of that, we need to adjust the relative
weights of the two components in practical experi-
ments.
The parameter update equation is a reduced form
of the equations in Section (2.1):
??jm =
xnumjm, + ?xdenjm(DU )
?numjm + ??denjm(DU )
(13)
??2jm =
snumjm + ?sdenjm(DU )
?numjm + ??denjm(DU )
? ??2jm (14)
3 Results and Discussion
The purpose of designing the learning algorithms
is for classification/recognition of speech sounds,
so we conducted phonetic classification experiments
using the TIMIT database (Garofolo et al, 1993).
We would like to investigate the relation of learning
capability of semi-supervised algorithms to other
factors and generalize our observations to other data
sets. Therefore, we used another synthetic dataset
Waveform for the evaluation of semi-supervised
learning algorithms for Gaussian Mixture model.
TIMIT: We used the same 48 phone classes and
further grouped into 39 classes according to (Lee
and Hon, 1989) as our final set of phone classes to
model. We extracted 50 speakers out of the NIST
complete test set to form the development set. All
of our experimental analyses were on the develop-
ment set. We used segmental features (Halberstadt,
1998) in the phonetic classification task. For each
phone occurrence, a fixed-length vector was calcu-
lated from the frame-based spectral features (12 PLP
coefficients plus energy) with a 5 ms frame rate and
a 25 ms Hamming window. More specifically, we
divided the frames for each phone into three regions
with 3-4-3 proportion and calculated the PLP av-
erage over each region. Three averages plus the
log duration of that phone gave a 40-dimensional
(13? 3 + 1) measurement vector.
Waveform: We used the second versions of
the Waveform dataset available at the UCI reposi-
tory (Asuncion and Newman, 2007). There are three
classes of data. Each token is described by 40 real
attributes, and the class distribution is even.
Forwaveform, because the class labels are equally
distributed, we simply assigned equal number of
mixtures for each class. For TIMIT, the phone
classes are unevenly distributed, so we assigned
variable number of Gaussian mixtures for each class
by controlling the averaged data counts per mixture.
For all experiments, the initial model is an MLE
model trained with labeled data only.
To construct a mixed labeled/unlabeled data set,
the original training set were randomly divided into
the labeled and unlabeled sets with desired ratio, and
the class labels in the unlabeled set are assumed to be
unknown. To avoid that the classifier performance
may vary with particular portions of data, we ran five
folds for every experiment, each fold corresponding
to different division of training data into labeled and
unlabeled set, and took the averaged performance.
3.1 Model Complexity
This section analyzes the learning capability of
semi-supervised learning algorithms for different
model complexities, that is, the number of mix-
tures for Gaussian mixture model. In this experi-
ment, the sizes of labeled and unlabeled set are fixed
(|DL| : |DU | = 1 : 10 and the averaged token
counts per class is around 140 for both data sets),
as we varied the total number of mixtures and eval-
uated the updated model by its classification accu-
racy. For waveform, number of mixtures was set
from 2 to 7; for TIMIT, because the number of mix-
tures per class is determined by the averaged data
counts per mixture c, we set c to 25, 20 and 15 as
the higher c gives less number of mixtures in total.
Figure 3.1 plots the averaged classification accura-
78
Figure 1: Mean classification accuracies vs. ? for different model complexity. The accuracies for the initial MLE
models are indicated in the parentheses. (a) waveform: training with the hybrid objective. (b) waveform: purely
generative objective. (c) TIMIT: training with the hybrid objective. (d) TIMIT: purely generative objective.
 !  !" #! #!" $! 
%&
' 
'#
'$
'(
')
'"
 !"
 
!
"
"
#
$
%
"
&
 
'
(
)
#$#%#&# '()*&+"
#$#%#(# '&)*'+"
#$#%#,# '-)./+"
#$#%#.# '*)-'+"
#$#%#/# 01)/-+"
 2"
 !   ! "  !#  !#"  !$ 
"(
")
""
"*
"%  3"
#
 
!
"
"
#
$
%
"
&
 
'
(
)
#3#%#&.# ..)(,+"
#3#%#&*# ..)(/+"
#3##%#-.# .,)0&+"
 !  !" #! #!" $! 
%&
' 
'#
'$
'(
')
'"
 4"
#
!
"
"
#
$
%
"
&
 
'
(
)
 
#
#$#%#&# '()*&+"
#$#%#(# '&)*'+"
#$#%#,# '-)./+"
#$#%#.# '*)-'+"
#$#%#/# 01)/-+"
 !   ! "  !#  !#"  !$ 
"(
")
""
"*
"%
#
 
#
!
"
"
#
$
%
"
&
 
'
(
)
#3#%#&.# ..)(,+"
#3#%#&*# ..)(/+"
#3#%#-.# .,)0&+"
cies of the updated model versus the value of ? with
different model complexities. The ranges of ? are
different for waveform and TIMIT because the value
of ? for each dataset has different scales.
First of all, the hybrid method and purely gen-
erative method have very similar behaviors in both
waveform and TIMIT; the differences between the
two methods are insignificant regardless of ?. The
hybrid method with ? = 0 means supervised MMI-
training with labeled data only, and the purely gener-
ative method with ? = 0means extra several rounds
of supervised MLE-training if the convergence cri-
terion is not achieved. With the small amount of la-
beled data, most of hybrid curves start slightly lower
than the purely generative ones at ? = 0, but in-
crease to as high as the purely generative ones as ?
increases.
For waveform, the accuracies increase with ? in-
creases for all cases except for the 2-mixture model.
Table 1 summarizes the numbers from Figure 3.1.
Except for the 2-mixture case, the improvement over
the supervised model (? = 0) is positively corre-
lated to the model complexity, as the largest im-
provements occur at the 5-mixture and 6-mixture
model for the hybrid and purely generative method
respectively. However, the highest complexity does
not necessarily gives the best classification accu-
racy; the 3-mixture model achieves the best accu-
racy among all models after semi-supervised learn-
ing whereas the 2-mixture model is the best model
for supervised learning using labeled data only.
Experiments on TIMIT show a similar behavior1 ;
as shown in both Figure 3.1 and Table 2, the im-
provement over the supervised model (? = 0) is
also positively correlated to the model complexity,
1Note that our baseline performance (the initial MLEmodel)
is much worse than benchmark because only 10% of the train-
ing data were used. We justified our baseline model by using
the whole training data and a similar accuracy ( 74%) to other
work (e.g. (Sha and Saul, 2007)) was obtained.
79
Table 1: The accuracies(%) of the initial MLEmodel, the supervised model (? = 0), the best accuracies with unlabeled
data and the absolute improvements (?) over ? = 0 for different model complexities for waveform. The bolded
number is the highest value along the same column.
Hybrid Purely generative
#. mix init. acc. ? = 0 best acc. ? ? = 0 best acc. ?
2 83.02 81.73 83.74 2.01 82.96 83.14 0.18
3 82.08 81.66 84.69 3.03 82.18 84.58 2.40
4 81.56 80.53 83.93 3.40 81.34 84.13 2.79
5 80.18 80.14 83.82 3.68 80.16 83.84 3.68
6 79.61 79.40 83.19 3.79 79.71 83.31 3.60
Table 2: The accuracies(%) of the initial MLEmodel, the supervised model (? = 0), the best accuracies with unlabeled
data and the absolute improvements (?) over ? = 0 for different model complexities for TIMIT. The bolded number
is the highest value along the same column.
Hybrid Purely generative
c init. acc. ? = 0 best acc. ? ? = 0 best acc. ?
25 55.34 55.47 56.58 1.11 55.32 56.7 1.38
20 55.36 55.67 56.72 1.05 55.2 56.25 1.05
15 54.72 53.71 55.39 1.68 53.7 56.09 2.39
as the most improvements occur at c = 25 for both
hybrid and purely generative methods. The semi-
supervised model consistently improves over the su-
pervised model. To summarize, unlabeled data im-
prove training on models of higher complexity, and
sometimes it helps achieve the best performance
with a more complex model.
3.2 Size of Unlabeled Data
In Figure 2, we fixed the size of the labeled set (4%
of the training set) and plotted the averaged classi-
fication accuracies for learning with different sizes
of unlabeled data. First of all, the hybrid method
and purely generative method still behave similarly
in both waveform and TIMIT. For both datasets, the
figures clearly illustrate that more unlabeled data
contributes more improvement over the supervised
model regardless of the value of ?. Generally, a data
distribution can be expected more precisely with a
larger sample size from the data pool, therefore we
expect the more unlabeled data the more precise in-
formation about the population, which improves the
learning capability.
3.3 Discussion of ?
During training, the weighted sum ofFMMI andFML
in equation (15) increases with iterations, however
FMMI and FML are not guaranteed to increase indi-
vidually. Figure 3 illustrates how ? affects the re-
spective change of the two components for a partic-
ular setting for waveform. When ? = 0, the ob-
jective function does not take unlabeled data into
account, so FMMI increases while FML decreases.
FML starts to increase for nonzero ?; ? = 0.01
corresponds to the case where both objectives in-
creases. As ? keeps growing, FMMI starts to de-
crease whereas FML keeps rising. In this partic-
ular example, ? = 0.05 is the critical value at
which FMMI changes from increasing to decreas-
ing. According to our observation, the value of ?
depends on the dataset and the relative size of la-
beled/unlabeled data. Table 3 shows the critical val-
ues for waveform and TIMIT for different sizes of
labeled data (5, 10, 15, 20% of the training set) with
a fixed set of unlabeled data (80%.) The numbers are
very different across the datasets, but there is a con-
sistent pattern within the dataset?the critical value
increases as the size of labeled set increases. One
possible explanation is that ? contains an normal-
80
Figure 2: Mean classification accuracies vs. ? for different amounts of unlabeled data (the percentage in the training
set). The averaged accuracy for the initial MLE model is 81.66% for waveform and 59.41% for TIMIT. (a) waveform:
training with the hybrid objective. (b) waveform: purely generative objective. (c) TIMIT: training with the hybrid
objective. (d) TIMIT: purely generative objective.
 !  !" #! #!" $! 
%#
%$
%&
%'
 
 
!
"
"
#
$
%
"
&
 
'
(
)
 ! " #$%
 ! " &$%
 ! " '$%
 ! " ($%
 !   ! "  !# 
"(!'
"(!)
"(!%
) ! 
) !$
 
 
!
"
"
#
$
%
"
&
 
'
(
)
 ! " )$%
 ! " *$%
 ! " ($%
 !  !" #! #!" $! 
%$
%&
%'
!
"
"
#
$
%
"
&
 
'
(
)
 
 
 
 ! " #$%
 ! " &$%
 ! " '$%
 ! " ($%
 !   ! "  !# 
"(!'
"(!)
"(!%
) ! 
 
 
 
!
"
"
#
$
%
"
&
 
'
(
)
 ! " )$%
 ! " *$%
 ! " ($%
+,-
+.-
+/-
+0-
ization factor with respect to the relative size of la-
beled/unlabeled set. The objective function in (15)
can be rewritten in terms of the normalized objective
with respect to the data size:
F (?) = |DL|F (DL)MMI (?)+?|DU |F (DU )ML (?) . (15)
where F (X) means the averaged value over the data
set X. When the labeled set size increases, ? may
have to scale up accordingly such that the relative
change of the two averaged component remains in
the same scale.
Although ? controls the dominance of the crite-
rion on labeled data or on unlabeled data, the fact
that which dominates the objective or the critical
value does not necessary indicate the best ?. How-
ever, we observed that the best ? is usually close to
or larger than the critical value, but the exact value
varies with different data. At this point, it might still
be easier to find the best weight using a small de-
velopment set. But this observation also provides a
guide about the reasonable range to search the best
? ? searching starting from the critical value and it
should reach the optimal value soon according to the
plots in Figure 3.1.
Table 3: The critical values for waveform and TIMIT
for different sizes of labeled data (percentage of training
data) with a fixed set of unlabeled data (80 %.)
Size of labeled data waveform TIMIT
5% 0.09-0.11 0.03-0.04
10% 0.12-0.14 0.07-0.08
15% 0.5-0.6 0.08-0.09
20% 1-1.5 0.11-0.12
81
Figure 3: Accuracy (left), FMMI (center), and FML (right) at different values of alpha.
 ! " # $ % & '
 (''
 (')
 ('*
 () 
 ()!
 ()"
 ()#
 ()$
 
!
"
"
#
$
%
"
&
 
'
(
)
 !"#$!%&'()*+,"#
( (-(.
( (-(./.0
( (-(./.1
( (-(./1
 ! " # $ % & '
+# 
+" 
+! 
 
 
*
+
,
,
-
 !"#$!%&'()*+,"#
( (-(.
( (-(./.0
( (-(./.1
( (-(./1
 ! " # $ % & '
+!*)
+!*&
+!*$
+!*"
+!* 
+!))
 
*
+
,
.
 
/
 
0
1
1
1
 !"#$!%&'()*+,"#
( (-(.
( (-(./.0
( (-(./.1
( (-(./1
3.4 Hybrid Criterion vs. Purely Generative
Criterion
From the previous experiments, we found that the
hybrid criterion and purely generative criterion al-
most match each other in performance and are able
to learn models of the same complexity. This implies
that the criterion on labeled data has less impact on
the overall training direction than unlabeled data. In
Section 3.2, we mentioned that the best ? is usually
larger than or close to the critical value around which
the unlabeled data likelihood tends to dominate the
training objective. This again suggests that labeled
data contribute less to the training objective function
compared to unlabeled data, and the criterion on la-
beled data doesn?t matter as much as the criterion on
unlabeled data. It is possible that most of the con-
tributions from labeled data have already been used
for training an initial MLE model, therefore little in-
formation could be extracted in the further training
process.
4 Conclusion
Regardless of the dataset and the training objective
type on labeled data, there are some general prop-
erties about the semi-supervised learning algorithms
studied in this work. First, while limited amount of
labeled data can at most train models of lower com-
plexity well, the addition of unlabeled data makes
the updated models of higher complexity much im-
proved and sometimes perform better than less com-
plex models. Second, the amount of unlabeled data
in our semi-supervised framework generally follows
?the-more-the-better? principle; there is a trend that
more unlabeled data results in more improvement in
classification accuracy over the supervised model.
We also found that the objective type on labeled
data has little impact on the updated model, in the
sense that hybrid and purely generative objectives
behave similarly in learning capability. The obser-
vation that the best ? occurs after the MMI criterion
begins to decrease supports the fact that the criterion
on labeled data contributes less than the criterion on
unlabeled data. This observation is also helpful in
determining the search range for the best ? on the
development set by locating the critical value of the
objective as a start point to perform search.
The unified training objective method has a nice
convergence property which self-training methods
can not guarantee. The next step is to extend the
similar framework to speech recognition task where
HMMs are trained and phone boundaries are seg-
mented. It would be interesting to compare it with
self-training methods in different aspects (e.g. per-
formance, reliability, stability and computational ef-
ficiency).
82
References
A. Asuncion and D.J. Newman. 2007. UCI machine
learning repository.
Gregory Druck, Chris Pal, AndrewMcCallum, and Xiao-
jin Zhu. 2007. Semi-supervised classification with hy-
brid generative/discriminative methods. In KDD ?07:
Proceedings of the 13th ACM SIGKDD international
conference on Knowledge discovery and data mining,
pages 280?289, New York, NY, USA. ACM.
J. S. Garofolo, L. F. Lamel, W. M. Fisher, J. G. Fiscus,
D. S. Pallett, and N. L. Dahlgren. 1993. Darpa timit
acoustic phonetic continuous speech corpus.
Andrew K. Halberstadt. 1998. Heterogeneous Acous-
tic Measurements and Multiple Classifiers for Speech
Recognition. Ph.D. thesis, Massachusetts Institute of
Technology.
J.-T. Huang and Mark Hasegawa-Johnson. 2008. Max-
imum mutual information estimation with unlabeled
data for phonetic classification. In Interspeech.
Masashi Inoue and Naonori Ueda. 2003. Exploitation of
unlabeled sequences in hidden markov models. IEEE
Trans. On Pattern Analysis and Machine Intelligence,
25:1570?1581.
Shihao Ji, Layne T. Watson, and Lawrence Carin. 2009.
Semisupervised learning of hidden markov models via
a homotopymethod. IEEE Trans. Pattern Anal. Mach.
Intell., 31(2):275?287.
M.J.F. Gales L. Wang and P.C. Woodland. 2007. Un-
supervised training for mandarin broadcast news and
conversation transcription. In Proc. IEEE Confer-
ence on Acoustics, Speech, and Signal Processing
(ICASSP), volume 4, pages 353?356.
Lori Lamel, Jean-Luc Gauvain, and Gilles Adda. 2002.
Lightly supervised and unsupervised acoustic model
training. 16:115?129.
K.-F. Lee and H.-W. Hon. 1989. Speaker-independent
phone recognition using hidden markov models.
IEEE Transactions on Speech and Audio Processing,
37(11):1641?1648.
B. Merialdo. 1988. Phonetic recognition using hid-
den markov models and maximum mutualinformation
training. In Proc. IEEE Conference on Acoustics,
Speech, and Signal Processing (ICASSP), volume 1,
pages 111?114.
Daniel Povey. 2003. Discriminative Training for Large
Vocabulary Speech Recognition. Ph.D. thesis, Cam-
bridge University.
Fei Sha and Lawrence K. Saul. 2007. Large margin hid-
den markov models for automatic speech recognition.
In B. Scho?lkopf, J. Platt, and T. Hoffman, editors, Ad-
vances in Neural Information Processing Systems 19,
pages 1249?1256. MIT Press, Cambridge, MA.
Frank Wessel and Hermann Ney. 2005. Unsupervised
training of acoustic models for large vocabulary con-
tinuous speech recognition. IEEE Transactions on
Speech and Audio Processing, 13(1):23?31, January.
83
