Proceedings of the 13th Annual Meeting of the Special Interest Group on Discourse and Dialogue (SIGDIAL), pages 108?112,
Seoul, South Korea, 5-6 July 2012. c?2012 Association for Computational Linguistics
Improving Implicit Discourse Relation Recognition
Through Feature Set Optimization
Joonsuk Park
Department of Computer Science
Cornell University
Ithaca, NY, USA
jpark@cs.cornell.edu
Claire Cardie
Department of Computer Science
Cornell University
Ithaca, NY, USA
cardie@cs.cornell.edu
Abstract
We provide a systematic study of previously
proposed features for implicit discourse re-
lation identification, identifying new feature
combinations that optimize F1-score. The re-
sulting classifiers achieve the best F1-scores
to date for the four top-level discourse rela-
tion classes of the Penn Discourse Tree Bank:
COMPARISON, CONTINGENCY, EXPAN-
SION, and TEMPORAL. We further identify
factors for feature extraction that can have a
major impact on performance and determine
that some features originally proposed for the
task no longer provide performance gains in
light of more powerful, recently discovered
features. Our results constitute a new set of
baselines for future studies of implicit dis-
course relation identification.
1 Introduction
The ability to recognize the discourse relations that
exist between arbitrary text spans is crucial for un-
derstanding a given text. Indeed, a number of natu-
ral language processing (NLP) applications rely on it
? e.g., question answering, text summarization, and
textual entailment. Fortunately, explicit discourse
relations ? discourse relations marked by explicit
connectives ? have been shown to be easily identi-
fied by automatic means (Pitler et al, 2008): each
such connective is generally strongly coupled with
a particular relation. The connective ?because?, for
example, serves as a prominent cue for the CONTIN-
GENCY relation.
The identification of implicit discourse relations
? where such connectives are absent ? is much
harder. It has been the subject of much recent re-
search since the release of the Penn Discourse Tree-
bank 2.0 (PDTB) (Prasad et al, 2008), which anno-
tates relations between adjacent text spans in Wall
Street Journal (WSJ) articles, while clearly distin-
guishing implicit from explicit discourse relations.1
Recent studies, for example, explored the utility of
various classes of features for the task, including
linguistically informed features, context, constituent
and dependency parse features, and features that en-
code entity information or rely on language mod-
els (Pitler et al, 2009; Lin et al, 2009; Louis et al,
2010; Zhou et al, 2010).
To date, however, there has not been a systematic
study of combinations of these features for implicit
discourse relation identification. In addition, the re-
sults of existing studies are often difficult to compare
because of differences in data set creation, feature
set choice, or experimental methodology.
This paper provides a systematic study of previ-
ously proposed features for implicit discourse re-
lation identification and identifies feature combina-
tions that optimize F1-score using forward selection
(John et al, 1994). We report the performance of our
binary (one vs. rest) classifiers on the PDTB data
set for its four top-level discourse relation classes:
COMPARISON, CONTINGENCY, EXPANSION, and
TEMPORAL. In each case, the resulting classifiers
achieve the best F1-scores for the PDTB to date. We
1Research on implicit discourse relation recognition prior to
the release of the PDTB instead relied on synthetic data cre-
ated by removing explicit connectives from explicit discourse
relation instances (Marcu and Echihabi, 2002), but the trained
classifiers do not perform as well on real-world data (Blair-
Goldensohn et al, 2007).
108
further identify factors for feature extraction that can
have a major impact performance, including stem-
ming and lexicon look-up. Finally, by document-
ing an easily replicable experimental methodology
and making public the code for feature extraction2,
we hope to provide a new set of baselines for future
studies of implicit discourse relation identification.
2 Data
The experiments are conducted on the PDTB
(Prasad et al, 2008), which provides discourse rela-
tion annotations between adjacent text spans in WSJ
articles. Each training and test instance represents
one such pair of text spans and is classified in the
PDTB w.r.t. its relation type and relation sense.
In the work reported here, we use the relation
type to distinguish examples of explicit vs. implicit
discourse relations. In particular, we consider all in-
stances with a relation type other than explicit as
implicit relations since they lack an explicit con-
nective between the text spans. The relation sense
determines the relation that exists between its text
span arguments as one of: COMPARISON, CONTIN-
GENCY, EXPANSION, and TEMPORAL. For exam-
ple, the following shows an explicit CONTINGENCY
relation between argument1 (arg1) and argument2
(arg2), denoted via the connective ?because?:
The federal government suspended sales of
U.S. savings bonds because Congress hasn?t
listed the ceiling on government debt.
The four relation senses comprise the target classes
for our classifiers.
A notable feature of the PDTB is that the anno-
tation is done on the same corpus as Penn Tree-
bank (Marcus et al, 1993), which provides parse
trees and part-of-speech (POS) tags. This enables
the use of gold standard parse information for some
features, e.g., the production rules feature, one of
the most effective features proposed to date.
3 Features
Below are brief descriptions of features whose ef-
ficacy have been empirically determined in prior
works3, along with the rationales behind them:
2These are available from http://www.joonsuk.org.
3Word Pairs (Marcu and Echihabi, 2002). First-Last-First3
(Wellner et al, 2006). Polarity, Verbs, Inquirer Tags, Modality,
Context (Pitler et al, 2009). Production Rules (Lin et al, 2009).
Word Pairs (cross product of unigrams: arg1 ?
arg2) ? A few of these word pairs may capture in-
formation revealing the discourse relation of the tar-
get spans. For instance, rain-wet can hint at CON-
TINGENCY.
First-Last-First3 (the first, last, and first three
words of each argument) ? The words in this range
may be expressions that function as connectives for
certain relations.
Polarity (the count of words in arg1 and arg2, re-
spectively, that hold negated vs. non-negated posi-
tive, negative, and neutral sentiment) according to
the MPQA corpus (Wilson et al, 2005)) ? The
change in sentiment from arg1 to arg2 could be a
good indication of COMPARISON.
Inquirer Tags (negated and non-negated fine-
grained semantic classification tags for the verbs in
each argument and their cross product) ? The tags
are drawn from the General Inquirer Lexicon (Stone
et al, 1966)4, which provides word level relations
that might be propagated to the target spans? dis-
course relation, e.g., rise:fall.
Verbs (count of pairs of verbs from arg1 and arg2
belonging to the same Levin English Verb Class
(Levin and Somers, 1993)5, the average lengths of
verb phrases as well as their cross product, and the
POS of the main verb from each argument) ? Levin
Verb classes provide a means of clustering verbs
according to their meanings and behaviors. Also,
longer verb phrases might correlate with CONTIN-
GENCY, indicating a justification.
Modality (three features denoting the presence of
modal verbs in arg1, arg2, or both) ? Modal verbs
often appear in CONTINGENCY relations.
Context (the connective and the sense of the im-
mediately preceding and following relations (if ex-
plicit), and a feature denoting if arg1 starts a para-
graph) ? Certain relations co-occur.
Production Rules (three features denoting the pres-
ence of syntactic productions in arg1, arg2 or both,
based on all pairs of parent-children nodes in the ar-
gument parse trees) ? The syntactic structure of an
argument can influence that of the other argument as
4http://www.wjh.harvard.edu/ inquirer/inqdict.txt
5http://www-personal.umich.edu/ jlawler/levin.html
109
well as its relation type.
4 Experiments
We aim to identify the optimal subsets of the afore-
mentioned features for each of the four top-level
PDTB discourse relation senses: COMPARISON,
CONTINGENCY, EXPANSION, and TEMPORAL. In
order to provide a meaningful comparison with ex-
isting work, we carefully follow the experiment
setup of Pitler et al (2009), the origin of the ma-
jority of the features under consideration:
First, sections 0-2 and 21-22 of the PDTB are
used as the validation and test set, respectively.
Then, we randomly down-sample sections 2-20 to
construct training sets for each of the classifiers,
where each set has the same number of positive and
negative instances with respect to the target rela-
tion. Since the composition of the corresponding
training set has a noticeable impact on the classifier
performance we select a down-sampled training set
for each classifier through cross validation. All in-
stances of non-explicit relation senses are used; the
ENTREL type is considered as having the EXPAN-
SION sense.6
Second, Naive Bayes is used not only to duplicate
the Pitler et al (2009) setting, but also because it
equaled or outperformed other learning algorithms,
such as SVM and MaxEnt, in preliminary experi-
ments, while requiring a significantly shorter train-
ing time.7
Prior to the feature selection experiments, the best
preprocessing methods for feature extraction are de-
termined through cross validation. We consider sim-
ple lowercasing, Porter Stemming, PTB-style tok-
enization8, and hand-crafted rules for matching to-
kens to entries in the polarity and General Inquirer
lexicons.
Then, feature selection is performed via forward
selection, in which we start with the single best-
performing feature and, in each iteration, add the
feature that improves the F1-score the most, until
no significant improvement can be made. Once the
6Some prior work uses a different experimental setting. For
instance, Zhou et al (2010) only considers two of the non-
explicit relations, namely Implicit and NoRel.
7We use classifiers from the nltk package (Bird, 2006).
8Stanford Parser (Klein and Manning, 2003).
optimal feature set for each relation sense is deter-
mined by testing on the validation set, we retrain
each classifier using the entire training set and re-
port final performance on the test set.
5 Results and Analysis
Table 5 indicates the performance achieved by em-
ploying the feature set found to be optimal for each
relation sense via forward selection, along with the
performance of the individual features that consti-
tute the ideal subset. The two bottom rows show the
results reported in two previous papers with the most
similar experiment methodology as ours. The no-
table efficacy of the production rules feature, yield-
ing the best or the second best result across all re-
lation senses w.r.t. both F1-score and accuracy, con-
firms the finding of Zhou et al (2010). In contrast
to their work, however, combining existing features
enhances the performance. Below, we discuss the
primary observations gleaned from the experiments.
Word pairs as features. Starting with earlier works
that proposed them as features (Marcu and Echihabi,
2002), some form of word pairs has generally been
part of feature sets for implicit discourse relation
recognition. According to our research, however,
these features provide little or no additional gain,
once other features are employed. This seems sensi-
ble, since we now have a clearer idea of the types of
information important for the task and have devel-
oped a variety of feature types, each of which aims
to represent these specific aspects of the discourse
relation arguments. Thus, general features like word
pairs may no longer have a role to play for implicit
discourse relation identification.
Preprocessing. Preprocessing turned out to impact
the classifier performance immensely, especially for
features like polarity and inquirer tags that rely on
information retrieved from a lexicon. For these fea-
tures, if a match for a given word is not found in the
lexicon, no information is passed on to the classifier.
As an example, consider the General Inquirer lex-
icon. Most of its verb entries are present tense singu-
lar in form; thus, without stemming, dictionary look
up fails for a large portion of the verbs. In our case,
the F1-score increases by roughly 10% after stem-
ming.
Further tuning is possible by a few hand-written
110
Feature Type COMP. vs Rest CONT. vs Rest EXP. vs Rest TEMP. vs RestF1 Acc. F1 Acc. F1 Acc. F1 Acc.
1. Polarity 16.49 46.82 28.47 61.39 64.20 56.80 13.58 50.69
2. First-Last-First3 22.54 53.05 37.64 66.71 62.27 56.40 15.24 51.81
3. Inquirer Tags 18.07 82.14 34.88 69.60 77.76 66.38 21.65 80.04
4. Verbs 18.05 55.29 23.61 78.33 68.33 58.37 18.11 58.44
5. Production Rules 30.04 75.84 47.80 71.90 77.64 69.60 20.96 63.36
Best Combination 2 & 4 & 5 2 & 4 & 5 1 & 3 & 4 & 5 1 & 3 & 531.32 74.66 49.82 72.09 79.22 69.14 26.57 79.32
Pitler ?09 (Best) 21.96 56.59 47.13 67.30 76.42 63.62 16.76 63.49
Zhou ?10 (Best)* 31.79 58.22 47.16 48.96 70.11 54.54 20.30 55.48
* The experiments are conducted under a slightly different setting, as described in Section 4.
Table 1: Summary of Classifier Performance. 4-way classifiers have been tested as well, but their performance is not
as good as that of the binary classifiers shown here. One major difference is that it is harder to balance the number of
instances across all the classes when training 4-way classifiers.
rules to guide lexicon lookup. The word supplied,
for instance, becomes suppli after stemming, which
still fails to match the lexicon entry supply, unless
adjusted accordingly.
Binning. An additional finding regards features
that capture numeric, rather than binary, informa-
tion, such as polarity. Since this feature encodes the
counts of each type of sentiment word (with respect
to each argument and their cross product), and Naive
Bayes can only interpret binary features, we first em-
ployed a binning mechanism with each bin covering
a single value. For instance, if arg1 consists of three
positive words, we included arg1pos1, arg1pos2 and
arg1pos3 as features instead of just arg1pos3.
The rationale behind binning is that it captures
the proximity of related instances. Imagine having
three instances each with one, two, and three pos-
itive words in arg1, respectively. Without binning,
the features added are simply arg1pos1, arg1pos2,
arg1pos3, respectively. From the perspective of the
classifier, the third instance is no more similar to the
second instance than it is to the first instance, even
though having three positive words is clearly closer
to having two positive words than having one posi-
tive word. With binning, this proximity is captured
by the fact that the first instance has just one fea-
ture in common with the third instance, whereas the
second instance has two.
Binning, however, significantly degrades perfor-
mance on most of the classification tasks. One pos-
sible explanation is that these features function as an
abstraction of certain lexical patterns, rather than di-
rectly capturing similarities among instances of the
same class.
6 Conclusion
We employ a simple greedy feature selection ap-
proach to identify subsets of known features for
implicit discourse relation identification that yield
the best performance to date w.r.t. F1-score on the
PDTB data set. We also identify aspects of feature
set extraction and representation that are crucial for
obtaining state-of-the-art performance. Possible fu-
ture work includes evaluating the performance with-
out using the gold standard parses. This will give a
better idea of how the features that rely on parser
output will perform on real-world data where no
gold standard parsing information is available. In
this way, we can ensure that findings in this area of
research bring practical gains to the community.
Acknowledgments
We would like to thank Annie Louis and Yu Xu for help-
ing us reimplement the systems from Louis et al (2010)
and Zhou et al (2010), respectively. We also thank the
anonymous reviewers for their helpful feedback. This
work was supported in part by National Science Founda-
tion Grants IIS-1111176 and IIS-0968450, and by a gift
from Google.
111
References
Steven Bird. 2006. Nltk: the natural language toolkit. In
Proceedings of the COLING/ACL on Interactive pre-
sentation sessions, COLING-ACL ?06, pages 69?72,
Stroudsburg, PA, USA. Association for Computational
Linguistics.
Sasha Blair-Goldensohn, Kathleen McKeown, and Owen
Rambow. 2007. Building and refining rhetorical-
semantic relation models. In HLT-NAACL, pages 428?
435.
G. John, R. Kohavi, and K. Pfleger. 1994. Irrelevant
Features and the Subset Selection Problem. In W. Co-
hen and H. Hirsh, editors, Proceedings of the Eleventh
International Conference on Machine Learning, pages
121?129. Morgan Kaufmann.
Dan Klein and Christopher D. Manning. 2003. Accu-
rate unlexicalized parsing. In IN PROCEEDINGS OF
THE 41ST ANNUAL MEETING OF THE ASSOCIA-
TION FOR COMPUTATIONAL LINGUISTICS, pages
423?430.
Beth Levin and Harold Somers. 1993. English Verb
Classes and Alternations: A Preliminary Investiga-
tion. University Of Chicago Press.
Ziheng Lin, Min-Yen Kan, and Hwee Tou Ng. 2009.
Recognizing implicit discourse relations in the penn
discourse treebank. In EMNLP, pages 343?351.
Annie Louis, Aravind K. Joshi, Rashmi Prasad, and Ani
Nenkova. 2010. Using entity features to classify im-
plicit discourse relations. In SIGDIAL Conference,
pages 59?62.
Daniel Marcu and Abdessamad Echihabi. 2002. An
unsupervised approach to recognizing discourse rela-
tions. In ACL, pages 368?375.
M. Marcus, M. Marcinkiewicz, and B. Santorini. 1993.
Building a Large Annotated Corpus of English:
The Penn Treebank. Computational Linguistics,
19(2):313?330.
Emily Pitler, Mridhula Raghupathy, Hena Mehta, Ani
Nenkovak, Alan Lee, and Aravind K. Joshi. 2008.
Easily identifiable discourse relations. In COLING
(Posters), pages 87?90.
Emily Pitler, Annie Louis, and Ani Nenkova. 2009. Au-
tomatic sense prediction for implicit discourse rela-
tions in text. In ACL/AFNLP, pages 683?691.
Rashmi Prasad, Nikhil Dinesh, Alan Lee, Eleni Milt-
sakaki, Livio Robaldo, Aravind Joshi, and Bon-
nie Webber. 2008. The penn discourse tree-
bank 2.0. In Bente Maegaard Joseph Mariani Jan
Odjik Stelios Piperidis Daniel Tapias Nicoletta Cal-
zolari (Conference Chair), Khalid Choukri, editor,
Proceedings of the Sixth International Conference
on Language Resources and Evaluation (LREC?08),
Marrakech, Morocco, may. European Language
Resources Association (ELRA). http://www.lrec-
conf.org/proceedings/lrec2008/.
P J Stone, D C Dunphy, M S Smith, and D M Ogilvie.
1966. The General Inquirer: A Computer Approach
to Content Analysis, volume 08. MIT Press.
Ben Wellner, Lisa Ferro, Warren R. Greiff, and Lynette
Hirschman. 2006. Reading comprehension tests for
computer-based understanding evaluation. Natural
Language Engineering, 12(4):305?334.
Theresa Wilson, Janyce Wiebe, and Paul Hoffmann.
2005. Recognizing contextual polarity in phrase-level
sentiment analysis. In HLT/EMNLP.
Zhi-Min Zhou, Yu Xu, Zheng-Yu Niu, Man Lan, Jian Su,
and Chew Lim Tan. 2010. Predicting discourse con-
nectives for implicit discourse relation recognition. In
COLING (Posters), pages 1507?1514.
112
Proceedings of the First Workshop on Argumentation Mining, pages 29?38,
Baltimore, Maryland USA, June 26, 2014.
c?2014 Association for Computational Linguistics
Identifying Appropriate Support for Propositions in Online User
Comments
Joonsuk Park
Department of Computer Science
Cornell University
Ithaca, NY, USA
jpark@cs.cornell.edu
Claire Cardie
Department of Computer Science
Cornell University
Ithaca, NY, USA
cardie@cs.cornell.edu
Abstract
The ability to analyze the adequacy of sup-
porting information is necessary for deter-
mining the strength of an argument.
1
This
is especially the case for online user com-
ments, which often consist of arguments
lacking proper substantiation and reason-
ing. Thus, we develop a framework for
automatically classifying each proposition
as UNVERIFIABLE, VERIFIABLE NON-
EXPERIENTIAL, or VERIFIABLE EXPE-
RIENTIAL
2
, where the appropriate type of
support is reason, evidence, and optional
evidence, respectively
3
. Once the exist-
ing support for propositions are identi-
fied, this classification can provide an es-
timate of how adequately the arguments
have been supported. We build a gold-
standard dataset of 9,476 sentences and
clauses from 1,047 comments submitted
to an eRulemaking platform and find that
Support Vector Machine (SVM) classifiers
trained with n-grams and additional fea-
tures capturing the verifiability and expe-
rientiality exhibit statistically significant
improvement over the unigram baseline,
achieving a macro-averaged F
1
of 68.99%.
1 Introduction
Argumentation mining is a relatively new field
focusing on identifying and extracting argumen-
tative structures in documents. An argument is
typically defined as a conclusion with supporting
1
In this work, even unsupported propositions are consider
part of an argument. Not disregarding such implicit argu-
ments allows us to discuss the types of support that can fur-
ther be provided to strengthen the argument, as a form of as-
sessment.
2
Verifiable Experiential propositions are verifiable propo-
sitions about personal state or experience. See Table 1 for
examples.
3
We are assuming that there is no background knowledge
that eliminates the need of support.
premises, which can be conclusions of other argu-
ments themselves (Toulmin, 1958; Toulmin et al.,
1979; Pollock, 1987). To date, much of the argu-
mentation mining research has been conducted on
domains like news articles, parliamentary records
and legal documents, where the documents con-
tain well-formed explicit arguments, i.e. proposi-
tions with supporting reasons and evidence present
in the text (Moens et al., 2007; Palau and Moens,
2009; Wyner et al., 2010; Feng and Hirst, 2011;
Ashley and Walker, 2013).
Unlike documents written by professionals, on-
line user comments often contain arguments with
inappropriate or missing justification. One way
to deal with such implicit arguments is to sim-
ply disregard them and focus on extracting ar-
guments containing proper support (Villalba and
Saint-Dizier, 2012; Cabrio and Villata, 2012).
However, recognizing such propositions as part
of an argument,
4
and determining the appropriate
types of support can be useful for assessing the ad-
equacy of the supporting information, and in turn,
the strength of the whole argument. Consider the
following examples:
How much does a small carton of
milk cost?
1
More children should drink
milk
2
, because children who drink milk
everyday are taller than those who
don?t
3
. Children would want to drink
milk, anyway
4
.
Firstly, Sentence 1 does not need any support,
nor is it part of an argument. Next, Proposition 2
is an unverifiable proposition because it cannot be
proved with objective evidence, due to the value
judgement. Instead, it can be supported by a rea-
son explaining why it may be true. If the rea-
son, Proposition 3, were not true, the whole ar-
4
Not all sentences in user comments are part of an argu-
ment, e.g. questions and greetings. We address this in Sec-
tion 4.1
29
gument would fall apart, giving little weight to
Proposition 2. Thus, an objective evidence sup-
porting Proposition 3, which is a verifiable propo-
sition, could be provided to strengthen the argu-
ment. Lastly, as Proposition 4 is unverifiable, we
cannot expect an objective evidence that proves it,
but a reason as its support. Note that providing
a reason why Proposition 3 might be true is not
as effective as substantiating it with a proof, but
is still better than having no support. This shows
that not only the presence, but also the type of sup-
porting information affects the strength of the ar-
gument.
Examining each proposition in this way, i.e.
with respect to its verifiability, provides a means
to determine the desirable types of support, if
any, and enables the analysis of the arguments
in terms of the adequacy of their support. Thus,
we propose the task of classifying each proposi-
tion (the elementary unit of argumentation in this
work) in an argument as UNVERIFIABLE, VERI-
FIABLE PUBLIC, or VERIFIABLE PRIVATE, where
the appropriate type of support is reason, evidence,
and optional evidence, respectively. To perform
the experiments, we annotate 9,476 sentences and
clauses from 1,047 comments extracted from an
eRulemaking platform.
In the remainder of the paper, we describe the
annotation scheme and a newly created dataset
(Section 2), propose a supervised learning ap-
proach to the task (Section 3), evaluate the ap-
proach (Section 4), and survey related work (Sec-
tion 5). We find that Support Vector Machines
(SVM) classifiers trained with n-grams and other
features to capture the verifiability and experien-
tiality exhibit statistically significant improvement
over the unigram baseline, achieving a macro-
averaged F
1
score of 68.99%.
2 Data
We have collected and manually annotated sen-
tences and (independent) clauses from user com-
ments extracted from an eRulemaking website,
Regulation Room
5
. Rulemaking is the process by
which U.S. government agencies make new reg-
ulations and enact public policy; its digital coun-
terpart ? eRulemaking ? moves the process to
online platforms (see, e.g. (Park et al., 2012)).
By providing platforms in which the public can
discuss regulations that interest them, government
5
http://www.regulationroom.org
agencies hope to enlist the expertise and experi-
ence of participants to create better regulations.
In many rulemaking scenarios, agencies are, in
fact, required to obtain feedback from the pub-
lic on the proposed regulation as well as to ad-
dress all substantive questions, criticisms or sug-
gestions that are raised (Lubbers, 2006). In this
way, public comments can produce changes in the
final rule (Hochschild and Danielson, 1998) that,
in turn, can affect millions of lives. It is crucial,
therefore, for rule makers to be able to identify
credible comments from those submitted.
Regulation Room is an experimental web-
site operated by Cornell eRulemaking Initiative
(CeRI)
6
to promote public participation in the
rulemaking process, help users write more infor-
mative comments and build collective knowledge
via active discussions guided by human moder-
ators. Regulation Room hosts actual regulations
from government agencies, such as the U.S. De-
partment of Transportation.
For our research, we collected and manually an-
notated 9,476 propositions from 1,047 user com-
ments from two recent rules: Airline Passenger
Rights (serving peanuts on the plane, tarmac de-
lay contingency plan, oversales of tickets, baggage
fees and other airline traveller rights) and Home
Mortgage Consumer Protection (loss mitigation,
accounting error resolution, etc.).
2.1 Annotation Scheme
To start, we collected 1,147 comments and ran-
domly selected 100 of them to devise an annota-
tion scheme for identifying appropriate types of
support for propositions and to train annotators.
Initially, we allowed the annotators to define the
span for a propositions, leading to various compli-
cations and a low inter-annotator reliability. Thus,
we introduced an additional step in which com-
ments were manually sliced into propositions (or
non-propositional sentences) before being given to
the annotators. A proposition or sentence found
this way was split further if it consisted of two or
more independent clauses. The sliced comments
were then coded by two annotators into the fol-
lowing four disjoint classes (See Figure 1 for an
overview):
Verifiable Proposition [Experiential(VERIF
EXP
)
and Non-experiential(VERIF
NON
)]. A proposi-
tion is verifiable if it contains an objective asser-
6
http://www.lawschool.cornell.edu/ceri/
30
Figure 1: Flow chart for annotation (It refers to the sentence (or clause) being annotated)
# proposition
V
E
R
I
F
E
X
P
1 I?ve been a physician for 20 years.
2 My son has hypolycemia.
3 They flew me to NY in February.
4 The flight attendant yelled at the passengers.
V
E
R
I
F
N
O
N
5 They can have inhalation reactions.
6 since they serve them to the whole plane.
7 Peanuts do not kill people.
8 Clearly, peanuts do not kill people.
9 I believe peanuts do not kill people.
10 The governor said that he enjoyed it.
11 food allergies are rare
12 food allergies are seen in less than 20% of the
population
U
N
V
E
R
I
F
13 Again, keep it simple.
14 Banning peanuts will reduce deaths.
15 I enjoy having peanuts on the plane.
16 others are of uncertain significance
17 banning peanuts is a slippery slope
N
O
N
A
R
G
18 Who is in charge of this?
19 I have two comments
20 http://www.someurl.com
21 Thanks for allowing me to comment.
22 - Mike
Table 1: Example Sentences.
* Italics is used to illustrate core clause (Section 3.2).
tion, where objective means ?expressing or deal-
ing with facts or conditions as perceived without
distortion by personal feelings, prejudices, or in-
terpretations.?
7
Such assertions have truth values
that can be proved or disproved with objective ev-
idence
8
:
Consider the examples from Table 1. propo-
sitions 1 through 7 are clearly verifiable because
they only contain objective assertions. proposi-
tions 8 and 9 show that adding subjective expres-
sions such as ?Clearly? (e.g. sentence 8) or ?I be-
lieve that? (e.g. sentence 9) to an objectively veri-
fiable proposition (e.g. sentence 7) does not affect
the verifiability of the proposition. Sentence 10 is
considered verifiable because whether or not the
7
http://www.merriam-webster.com/
8
The correctness of the assertion or the availability of the
objective evidence does not matter.
governor said ?he enjoyed the peanuts? can be ver-
ified with objective evidence, even though whether
he really does or not cannot be verified.
For the purpose of identifying an appropriate
type of support, we employ a rather lenient no-
tion of objectivity: an assertion is objectively veri-
fiable if the domain of comparison is free of inter-
pretation. For instance, sentence 11 is regarded as
objectively verifiable, because it is clear, i.e. it is
not open for interpretation, that percentage of the
population is the metric under comparison even
though the threshold is purely subjective
9
. The
rationale is that this type of proposition can be
sufficiently substantiated with objective evidence
(e.g. published statistics showing the percentage
of people suffering from food allergies). Another
way to think about it is that sentence 11 is a loose
way of saying a (more obviously) verifiable sen-
tence 12, where the commenter neglected to men-
tion the threshold. This is fundamentally different
from propositions 13 through 16 for which objec-
tive evidence cannot exist
10
.
A verifiable proposition can further be dis-
tinguished as experiential or not, depending on
whether the proposition is about the writer?s per-
sonal state or experience (VERIF
EXP
) or some-
thing non-experiential (VERIF
NON
). This dif-
ference determines whether objective evidence is
mandatory or optional with respect to the credibil-
ity of the comment. Evidence is optional when the
evidence contains private information or is prac-
tically impossible to be provided: While proposi-
tions 1 through 3 can be proved with pictures of
official documents, for instance, the commenters
may not want to provide them for privacy rea-
sons. Also, the website interface may not al-
9
One may think anything less frequent than the average is
rare and another may have more stricter notion.
10
Objective evidence may exist for propositions that pro-
vide reasons for propositions 13 through 16.
31
Regulation VERIF
NON
VERIF
EXP
UNVERIF Subtotal NONARG Total # of Comments
APR 1106 851 4413 6370 522 6892 820
HMCP 251 416 1733 2400 186 2586 227
Total 1357 1267 6146 8770 708 9476 1047
Table 2: Class Distribution Over Sentences and Clauses
low pictures to be uploaded in comment section,
which is the case with most websites. sentence 4
is practically impossible to prove unless the com-
menter happened to have recorded the conversa-
tion, and the website interface allows multimedia
files to be uploaded. This is different from propo-
sitions 5 through 12, which should be (if valid, that
is) based on non-experiential knowledge the com-
menter acquired through objective evidence avail-
able to the public.
In certain domains, VERIF
EXP
propositions?
sometimes referred to as anectotal evidence?
provide the novel knowledge that readers are seek-
ing. In eRulemaking, for instance, agencies ac-
cept a wide variety of comments from the pub-
lic, including accounts of personal experience with
the problems or conditions the new regulation pro-
poses to address. If these accounts are relevant and
plausible, the agencies may use them, even if they
include no independent substantiation. Taking it
to an extreme, even if the ?experience? is fake, the
?experience? and opinions based on them are valu-
able to the agencies as long as the ?experience? is
realistic.
Unverifiable Proposition (UNVERIF). A propo-
sition is unverifiable if it cannot be proved with ob-
jective evidence. UNVERIF propositions are typi-
cally opinions, suggestions, judgements, or asser-
tions about what will happen in the future. (See
propositions 13 through 17.) Assertions about the
future are typically unverifiable, because there is
no direct evidence that something will happen. A
very prominent exception is a prediction based on
a policy of organizations, i.e. ?The store will be
open this Sunday.? where the policy serves as a di-
rect evidence.
Non-Argumentative (NONARG). A sentence or
clause is in this category if it is not a proposition,
i.e. it cannot be verified with objective evidence
and no supporting reason is required for the pur-
pose of improving the comment quality. Exam-
ples include question, greeting, citation, and URL.
(See sentences 18 through 21.)
2.2 Annotation Results
The resulting distribution of classes is shown in
Table 2. Note that even though we employed
a rather lenient definition of objective proposi-
tions, the distribution is highly skewed towards
UNVERIF propositions. This is expected because
the comments are written by people who want to
express their opinions about a regulation. Also,
NONARG sentences comprise about 7% of the
data, suggesting that most comment propositions
need to be supported with a reason or evidence for
maximal credibility.
The inter-coder reliability checked on 30% of
the data is moderate, yielding an Unweighted Co-
hen?s ? of 0.73. Most of the disagreement oc-
curred in propositions like ?Airlines have to pro-
vide compensation for both fees and lost bags? in
which it is not clear from the context whether it
is an opinion (UNVERIF) or a law (VERIF
NON
).
Also, opinions that may be verifiable (e.g. ?The
problems with passenger experience are not de-
pendant on aircraft size!?) seem to cause disagree-
ment among annotators.
3 Proposition Type Classification
3.1 Learning Algorithm
To classify each proposition in an argument as
VERIF
NON
, VERIF
EXP
, or UNVERIF, we train
multiclass Support Vector Machines (SVM) as for-
mulated by Crammer and Singer (2002), and later
extended by Keerthi et al.(2008). We use the Lib-
Linear (Fan et al., 2008) implementation. We ex-
perimented with other multiclass SVM approaches
such as 1-vs-all and 1-vs-1 (all-vs-all), but the dif-
ferences were statistically insignificant, consistent
with Hsu and Lin?s (2002) empirical comparison
of these methods. Thus, we only report the per-
formance of the Crammer and Singer version of
Multiclass SVM.
3.2 Features
The features are binary-valued, and the feature
vector for each data point is normalized to have
the unit length: ?Presence? features are binary
features indicating whether the given feature is
present in the proposition or not; ?Count? features
32
are numeric counts of the occurrence of each fea-
ture is converted to a set of three binary features
each denoting 0, 1 and 2 or more occurrences.
We first tried a binning method with each digit
as its own interval, resulting in binary features of
the form featCnt
n
, but the three-interval approach
proved to be better empirically, and is consistent
with the approach by Riloff and Shoen (1995).
The features can be grouped into three cate-
gories by purpose: Verifiability-specific (VER),
Experientiality-specific (EXP) and Basic Features,
each designed to capture the given proposition?s
verifiability, experientiality, and both, respec-
tively. Now we discuss the features in more detail.
3.2.1 Basic Features
N-gram Presence A set of binary features de-
note whether a given unigram or bigram occurs
in the proposition. The intuition is that by ex-
amining the occurrence of words or phrases in
VERIF
NON
, VERIF
EXP
, and UNVERIF propo-
sitions, the classes that have close ties to certain
words and phrases can be identified. For instance,
when a proposition contains the word happy, the
proposition tends to be UNVERIF. From this ob-
servation, we can speculate that happy is highly
associated with UNVERIF, and went, VERIF
EXP
.
n-gram presence, rather than the raw or normal-
ized frequency is chosen for its superior perfor-
mance (O?Keefe and Koprinska, 2009).
Core Clause Tag (CCT) To correctly classify
propositions with main or subordinate clauses that
do not affect the verifiability of the proposition
(e.g. propositions 8 through 10 in Table 1, respec-
tively), it is necessary to distinguish features that
appear in the main clause from those that appear in
the subordinate clause. Thus, we employ an auxil-
iary feature that adds clausal information to other
features by tagging them as either core or acces-
sory clause.
Let?s consider propositions 7, 9 and 10 in Ta-
ble 1: In all three examples, the core clause is ital-
icized. In single clause cases like proposition 7,
the entire proposition is the core clause. However,
for proposition 9, the core clause is the subordi-
nate clause introduced by the main clause, i.e. ?I
believe? should be ignored, since the verifiability
of ?peanuts do not kill people? is not dependent on
it. It is the opposite for proposition 10: the main
clause ?The governor said? is the core clause, and
the rest need not be considered. The reason is that
?said? is a speech event, and it is possible to objec-
tively verify whether or not the governor verbally
expressed his appreciation of peanuts.
To realize this intuition, we use syntactic parse
trees generated by the Stanford Parser (De Marn-
effe et al., 2006). In particular, Penn Treebank
2 Tags contain a clause-level tag SBAR denoting
a ?clause introduced by a subordinating conjunc-
tion? (Marcus et al., 1993). The ?that? clause in
proposition 10 spans a subtree rooted by SBAR,
whose left-most child has a lexical value ?that.?
Similarly, the subordinate (non-italicized) clause
in proposition 9 falls in a subtree rooted by SBAR,
whose only child is S. Once the main clause of a
given proposition is identified, all features set off
by the clause are tagged as ?core? and the rest are
tagged as ?accessory.? If a speech event is present,
the tags are flipped.
3.2.2 Verifiability-specific Features (VER)
Parts-of-Speech (POS) Count Rayson et
al. (2001) have shown that the POS distribution
is distinct in imaginative vs. informative writing.
We expect this feature to distinguish UNVERIF
propositions from the rest.
Sentiment Clue Count Wilson et al. (2005) pro-
vides a subjectivity clue lexicon, which is a list of
words with sentiment strength tags, either strong
or weak, along with additional information, such
as the sentiment polarity, Part-of-Speech Count
(POS), etc. We suspect that propositions contain-
ing more sentiment words is more likely to be UN-
VERIF.
Speech Event Count We use the 50 most frequent
Objective-speech-event text anchors crawled from
the MPQA 2.0 corpus (Wilson and Wiebe, 2005)
as a speech event lexicon. The speech event text
anchors refer to words like ?stated? and ?wrote?
that introduce written or spoken propositions at-
tributed to a source. propositions containing
speech events such as proposition 10 in Table 1
are generally VERIF
NON
or VERIF
EXP
, since
whether the attributed source has indeed made the
proposition he allegedly made is objectively veri-
fiable regardless of the subjectivity of the proposi-
tion itself.
Imperative Expression Count Imperatives, i.e.
commands, are generally UNVERIF (e.g. ?Do the
homework now!? that is, we expect there to be
no objective evidence proving that the homework
should be done right away.), unless the sentence
is a law or general procedure (e.g. ?The library
should allow you to check out books.? where the
33
context makes it clear that the writer is claiming
that the library lends out books.) This feature de-
notes whether the proposition begins with a verb
or contains the following: must, should, need to,
have to, ought to.
Emotion Expression Count These features tar-
get specific tokens ?!?, and ?...? as well as fully
capitalized word tokens to capture the emotion in
text. The rationale is that expression of emotion is
likely to be more prevalent in UNVERIF proposi-
tions.
3.2.3 Experientiality-specific Features (EXP)
Tense Count propositions written in past tense
are rarely VERIF
NON
, because even in the case
that the statment is verifiable, they are likely to be
the commenter?s past experience, i.e. VERIF
EXP
.
Future tense are typically UNVERIF because
propositions about what will happen in the fu-
ture are often unverifiable with objective evidence,
with exception being propositions like predictions
based on policy of organizations, i.e. ?Fedex will
deliver on Sunday.? To take advantage of these ob-
servations, three binary features capture each of
three tenses: past, present, and future.
Person Count First person narratives can suggest
that the proposition is UNVERIF or VERIF
EXP
,
except for rare cases like ?We, the passengers,...?
in which the first person pronoun refers to a large
body of individuals. This intuition is captured by
having binary features for: 1st, 2nd and 3rd per-
son.
4 Experiments
4.1 Methodology
A Note on Argument Detection A natural first
step in argumentation mining is to determine
which portions of the given document comprise
an argument. It can also be framed as a binary
classification task in which each proposition in the
document needs to be classified as either argumen-
tative or not. Some authors choose to skip this
step (Feng and Hirst, 2011), while others make
use of various classifiers to achieve high level of
accuracy, as Palau and Moens achieved over 70%
accuracy on Araucaria and ECHR corpus (Reed
and Moens, 2008; Palau and Moens, 2009).
As we have discussed in Section 1, our setup
is a bit unique in that we also consider implicit
arguments, where propositions are not supported
with explicit reason or evidence, as argumentative.
As a result, only about 7%(
NONARG
TOTAL
in Table 2) of
our entire dataset is marked as non-argumentative,
most of which consists of questions and greetings.
By simply searching for specific unigrams, such
as ??? and ?thank?, we achieve over 99% F
1
score
in determining which propositions are part of an
argument.
The remaining experiments were done without
non-argumentative propositions, i.e. NONARG in
Table 2.
Experimental Setup We first randomly selected
292 comments as held-out test set, resulting in the
distribution shown in Table 4. Then, VERIF
NON
and VERIF
EXP
in the training set were oversam-
pled so that the classes are equally distributed.
During training, five fold cross-validation was
done on the training set to tune the C parameter
to 32. Because the micro-averaged F
1
score can
be easily boosted on datasets with highly skewed
class distribution, we optimize for the macro-
averaged F
1
score.
Preprocessing was kept at a minimal level: cap-
ital letters were lowercased after counting fully
capitalized words, and numbers were converted to
a NUM token.
VERIF
NON
VERIF
EXP
UNVERIF Total
Train 987 900 4459 6346
Test 370 367 1687 2424
Total 1357 1267 6146 8770
Table 4: # of propositions in Train and Test Set
4.2 Results & Analysis
Table 3 shows a summary of the classification re-
sults. The best overall performance is achieved
by combining all features (UNI+BI+VER+EXP),
yielding 68.99% macro-averaged F
1
, where the
gain over the baseline is statistically significant
according to the bootstrap method with 10,000
samples (Efron and Tibshirani, 1994; Berg-
Kirkpatrick et al., 2012).
Core Clause Tag (CCT) We do not report the
performance of employing feature sets with Core
Clause Tag (CCT) in Table 3, because the effect
of CCT on each of the six sets of features is sta-
tistically insignificant. This is surprising at first,
given the strong motivation for distinguishing the
core clause from auxiliary clause, as addressed in
the previous section: Subordinate clauses like ?I
believe? should not cause the entire proposition to
be classified as UNVERIF, and clauses like ?He
said? should serve as a queue for VERIF
NON
or
VERIF
EXP
, even if an unverifiable clause follows
34
Feature Set
UNVERIF vs All VERIF
NON
vs All VERIF
EXP
vs All Average F
1
Pre. Rec. F
1
Pre. Rec. F
1
Pre. Rec. F
1
Macro Micro
UNI(base)
85.24 79.43 82.23 42.57 51.89 46.77 61.10 66.76 63.80 64.27 73.31
UNI+BI
82.14 89.69* 85.75* 51.67* 37.57 43.51 73.48* 62.67 67.65* 65.63 77.64*
VER
88.52* 52.10 65.60 28.41 61.35* 38.84 42.41 73.02* 53.65 52.70 56.68
EXP
82.42 4.45 8.44 20.92 76.49* 32.85 31.02 82.83* 45.14 28.81 27.31
VER+EXP
89.40* 49.50 63.72 29.25 71.62* 41.54 50.00 79.56* 61.41 55.55 57.43
UNI+BI+
VER+EXP
86.86* 83.05* 84.91* 49.88* 55.14 52.37* 66.67* 73.02* 69.70* 68.99* 77.27*
Table 3: Three class classification results in % (Crammer & Singer?s Multiclass SVMs)
Precision, recall, and F
1
scores are computed with respect to each one-vs-all classification problem for evaluation purposes,
though a single machine is built for the multi-class classification problem, instead of 3 one-vs-all classifiers. The star (*)
indicates that the given result is statistically significantly better than the unigram baseline.
Fts UNI UNI
CCT
U
N
V
E
R
I
F
+
should, whatever, respon-
sibility
should
C
, should
A
,
understand
C
-
previous, solve, florida,
exposed, reacted, reply,
kinds
exposed
C
, solve
C
,
NUM
C
, florida
C
,
reacted
C
, pool
C
, owed
C
V
E
R
I
F
N
O
N
+
impacted, NUM, solve,
cars, pull, kinds, congress
impacted
C
, solve
C
,
cars
C
, NUM
C
, pool
C
,
writing
C
, death
C
, link
C
-
should, seems, comments should
C
, comments
C
V
E
R
I
F
E
X
P
+
owed, consumed, saw, ex-
pert, interesting, him, re-
acted, refinance
owed
C
, consumed
C
,
expert
C
, reacted
C
,
happened
C
, interesting
C
-
impacted, wo impacted
C
, wo
C
,
concern
C
, died
C
Table 5: Most Informative Features for UNI and UNI
CCT
10 Unigrams with the largest weight (magnitude) with
respect to each class ( + : positive weight / - : negative
weight).
it. Our conjecture turned out to be wrong, mainly
because such distinction can be made for only a
small subset of the data: For instance, over 83%
of the unigrams are tagged as core in the UNI fea-
ture set. Thus, most of the important features for
feature sets with CCT end up being features with
core tag, and the important features for feature sets
with and without CCT are practically the same, as
shown in Table 5, resulting in statistically insignif-
icant performance differences.
Informative Features The most informative fea-
Feature Set UNI+BI+VER+EXP
UNVERIF
+
should,StrSentClue
>2
, VB
>2
-
StrSentClue
0
, VBD
>2
, air, since, no one, al-
lergic, not an
VERIF
NON
+
die, death, reaction, person, allergen, air-
borne, no one, allergies
-
PER
1st
, should
VERIF
EXP
+
VBD
>2
, PER
1st
, i have, his, he, him, time !
-
VBZ
>2
, PER
2nd
Table 6: Most Informative Features for UNI+BI+VER+EXP
10 Features with the largest weight (magnitude) with re-
spect to each class ( + : positive weight / - : negative
weight).
tures reported in Table 6 exhibit interesting differ-
ences among the three classes: Sentiment bearing
words, i.e. ?should? and strong sentiment clues,
are good indicators of UNVERIF, whereas person
and tense information is crucial for VERIF
EXP
.
As expected, the strong indicators of UNVERIF
and VERIF
EXP
, namely ?should? and PER
1st
are
negatively associated with VERIF
NON
. It is in-
triguing to see that the heavily weighted features
of VERIF
NON
are non-verb content words, unlike
those of the other classes. One explanation for this
is that VERIF
NON
are rarely indicated by specific
cues; instead, a good sign of VERIF
NON
is the
absences of cues for the other classes, which are
often function words and verbs. What is remain-
ing, then, are non-verb content words. Also, cer-
tain content words seem to be more likely to bring
about factual discussions. For instance, technical
terms like?allergen? and ?airborne,? appear in ver-
ifiable non-experiential propositions as ?The FDA
requires labeling for the following 8 allergens.?
Non-n-gram Features Table 3 clearly shows that
the three non-n-gram features, VER, EXP, and
VER+EXP, do not perform as well as the n-gram
features. But still, the performance is impressive,
given the drastic difference in the dimensionality
of the features: Even the combined feature set,
VER+EXP, consists of only about 100 features,
when there are over 8,000 unigrams and close to
70,000 bigrams. In other words, the non-n-gram
features are effectively capturing characteristics
of each class. This is very promising, since this
shows that a better understanding of the types of
proposition can potentially lead to a more concise
set of features with equal, or even better, perfor-
mance.
Also notice that VER outperforms EXP for the
most part, even with respect to VERIF
NON
vs All
and VERIF
EXP
vs All, except for recall. This is in-
35
triguing, because VER are mostly from subjectiv-
ity detection domain, intended to capture the sub-
jectivity of words in the propositions leveraging
on pre-built lexia. Simply considering subjectivity
of words should provide no means of distinguish-
ing VERIF
NON
from VERIF
EXP
. One of the rea-
sons for VER?s superior performance over EXP is
that EXP by itself is inadequate for the classifi-
cation task: EXP consists of only 6 (or 12 with
CCT) features denoting the person and tense infor-
mation. Another reason is that VER, in a limited
fashion, does encode experientiality: For instance,
past tense propositions can be identified with the
existence of VBD(verb, past tense) and VBN(verb,
past participle).
5 Related Work
Argumentation Mining The primary goal of ar-
gumentation mining has been to identify and ex-
tract argumentative structures present in docu-
ments, which are often written by profession-
als (Moens et al., 2007; Wyner et al., 2010; Feng
and Hirst, 2011; Ashley and Walker, 2013). In cer-
tain cases, the specific document structure allows
additional means of identify arguments (Mochales
and Moens, 2008). Even the work on online text
data, which are less rigid in structure and often
contain insufficiently supported propositions, fo-
cus on the extraction of arguments (Villalba and
Saint-Dizier, 2012; Cabrio and Villata, 2012). We,
however, are interested in the assessment of the
argumentative structure, potentially providing rec-
ommendations to readers and feedback to the writ-
ers. Thus it is crucial that we also process unsub-
stantiated propositions, which we consider as im-
plicit arguments. Our approach should be valu-
able for processing documents like online user
comment where arguments may not have adequate
support and an automatic means of analysis can be
useful.
Subjectivity Detection Work to distinguish sub-
jective from objective propositions (e.g.(Wiebe
and Riloff, 2005)), often a subtask for sentiment
analysis (Pang and Lee, 2008), is relevant to our
work since we are concerned with the objective
verifiability of propositions. In particular, previ-
ous work attempts to detect certain types of sub-
jective proposition: Conrad et al. (2012) iden-
tify arguing subjectivity propositions and tag them
with argument labels in order to cluster argument
paraphrases. Others incorporate this task as a com-
ponent for solving related problems, such as an-
swering opinion-based questions and determining
the writer?s political stance (Somasundaran et al.,
2007; Somasundaran and Wiebe, 2010). Similarly,
Rosenthal and McKeown (2012) identify opinion-
ated propositions expressing beliefs, leveraging
from previous work in sentiment analysis and be-
lief tagging. While the class of subjective propo-
sitions in subjectivity detection strictly contains
UNVERIF propositions, it also partially overlaps
with the VERIF
EXP
and VERIF
NON
classes of
our work: We want to identify verifiable assertions
within propositions, rather than determine the sub-
jectivity of the proposition as a whole (e.g. propo-
sition 8 in Table 1 is classified as a VERIF
NON
,
though ?Clearly? is subjective.). We also distin-
guish two types of verifiable propositions, which
is necessary for the purpose of identifying appro-
priate types of support.
6 Conclusions and Future Work
We have proposed a novel task of automatically
classifying each proposition as UNVERIFIABLE,
VERIFIABLE NONEXPERIENTIAL, or VERIFI-
ABLE EXPERIENTIAL, where the appropriate type
of support is reason, evidence, and optional evi-
dence, respectively. This classification, once the
existing support relations among propositions are
identified, can provide an estimate of how well the
arguments are supported. We find that Support
Vector Machines (SVM) classifiers trained with
n-grams and other features to capture the verifi-
ability and experientiality exhibit statistically sig-
nificant improvement over the unigram baseline,
achieving a macro-averaged F
1
score of 68.99%.
In the process, we have built a gold-standard
dataset of 9,476 propositions from 1,047 com-
ments submitted to an eRulemaking platform.
One immediate avenue for future work is to in-
corporate the identification of relations among the
propositions in an argument to the system to ana-
lyze the adequacy of the supporting information in
the argument. This, in turn, can be used to recom-
mend comments to readers and provide feedback
to writers so that they can construct better argu-
ments.
Acknowledgments
This work was supported in part by NSF grants
IIS-1111176 and IIS?1314778. We thank our
annotators, Pamela Ijeoma Amaechi and Simon
Boehme, as well as the Cornell NLP Group and
the reviewers for helpful comments.
36
References
Kevin D. Ashley and Vern R. Walker. 2013. From in-
formation retrieval (ir) to argument retrieval (ar) for
legal cases: Report on a baseline study. In JURIX,
pages 29?38.
Taylor Berg-Kirkpatrick, David Burkett, and Dan
Klein. 2012. An empirical investigation of statis-
tical significance in nlp. In Proceedings of the 2012
Joint Conference on Empirical Methods in Natu-
ral Language Processing and Computational Natu-
ral Language Learning, EMNLP-CoNLL ?12, pages
995?1005, Stroudsburg, PA, USA. Association for
Computational Linguistics.
Elena Cabrio and Serena Villata. 2012. Combin-
ing textual entailment and argumentation theory for
supporting online debates interactions. In Proceed-
ings of the 50th Annual Meeting of the Association
for Computational Linguistics (Volume 2: Short Pa-
pers), pages 208?212, Jeju Island, Korea, July. As-
sociation for Computational Linguistics.
Alexander Conrad, Janyce Wiebe, Hwa, and Rebecca.
2012. Recognizing arguing subjectivity and argu-
ment tags. In Proceedings of the Workshop on
Extra-Propositional Aspects of Meaning in Com-
putational Linguistics, ExProM ?12, pages 80?88,
Stroudsburg, PA, USA. Association for Computa-
tional Linguistics.
Koby Crammer and Yoram Singer. 2002. On the algo-
rithmic implementation of multiclass kernel-based
vector machines. J. Mach. Learn. Res., 2:265?292,
March.
Marie-Catherine De Marneffe, Bill Maccartney, and
Christopher D. Manning. 2006. Generating typed
dependency parses from phrase structure parses. In
In Proc. Intl Conf. on Language Resources and Eval-
uation (LREC, pages 449?454.
B. Efron and R.J. Tibshirani. 1994. An Introduction to
the Bootstrap. Chapman & Hall/CRC Monographs
on Statistics & Applied Probability. Taylor & Fran-
cis.
Rong-En Fan, Kai-Wei Chang, Cho-Jui Hsieh, Xiang-
Rui Wang, and Chih-Jen Lin. 2008. Liblinear: A li-
brary for large linear classification. J. Mach. Learn.
Res., 9:1871?1874, June.
Vanessa Wei Feng and Graeme Hirst. 2011. Classi-
fying arguments by scheme. In Proceedings of the
49th Annual Meeting of the Association for Com-
putational Linguistics: Human Language Technolo-
gies - Volume 1, HLT ?11, pages 987?996, Strouds-
burg, PA, USA. Association for Computational Lin-
guistics.
Jennifer L. Hochschild and Michael Danielson, 1998.
Can We Desegregate Public Schools and Subsi-
dized Housing? Lessons from the Sorry History of
Yonkers, New York, chapter 2, pages 23?44. Uni-
versity Press of Kansas, Lawrence KS, edited by
clarence stone edition.
Chih-Wei Hsu and Chih-Jen Lin. 2002. A comparison
of methods for multiclass support vector machines.
Trans. Neur. Netw., 13(2):415?425, March.
S. Sathiya Keerthi, S. Sundararajan, Kai-Wei Chang,
Cho-Jui Hsieh, and Chih-Jen Lin. 2008. A sequen-
tial dual method for large scale multi-class linear
svms. In Proceedings of the 14th ACM SIGKDD in-
ternational conference on Knowledge discovery and
data mining, KDD ?08, pages 408?416, New York,
NY, USA. ACM.
Jeffrey S. Lubbers. 2006. A Guide to Federal Agency
Rulemaking. American Bar Association Chicago,
4th ed. edition.
Mitchell P. Marcus, Beatrice Santorini, and Mary Ann
Marcinkiewicz. 1993. Building a large annotated
corpus of english: The penn treebank. COMPUTA-
TIONAL LINGUISTICS, 19(2):313?330.
Raquel Mochales and Marie-Francine Moens. 2008.
Study on the structure of argumentation in case law.
In Proceedings of the 2008 Conference on Legal
Knowledge and Information Systems: JURIX 2008:
The Twenty-First Annual Conference, pages 11?20,
Amsterdam, The Netherlands, The Netherlands. IOS
Press.
Marie-Francine Moens, Erik Boiy, Raquel Mochales
Palau, and Chris Reed. 2007. Automatic detection
of arguments in legal texts. In Proceedings of the
11th International Conference on Artificial Intelli-
gence and Law, ICAIL ?07, pages 225?230, New
York, NY, USA. ACM.
Tim O?Keefe and Irena Koprinska. 2009. Feature se-
lection and weighting methods in sentiment analy-
sis. In Proceedings of the 14th Australasian Docu-
ment Computing Symposium.
Raquel Mochales Palau and Marie-Francine Moens.
2009. Argumentation mining: The detection, classi-
fication and structure of arguments in text. In Pro-
ceedings of the 12th International Conference on Ar-
tificial Intelligence and Law, ICAIL ?09, pages 98?
107, New York, NY, USA. ACM.
Bo Pang and Lillian Lee. 2008. Opinion mining and
sentiment analysis. Found. Trends Inf. Retr., 2(1-
2):1?135, January.
Joonsuk Park, Sally Klingel, Claire Cardie, Mary
Newhart, Cynthia Farina, and Joan-Josep Vallb?e.
2012. Facilitative moderation for online participa-
tion in erulemaking. In Proceedings of the 13th An-
nual International Conference on Digital Govern-
ment Research, dg.o ?12, pages 173?182, New York,
NY, USA. ACM.
John L. Pollock. 1987. Defeasible reasoning. Cogni-
tive Science, 11:481?518.
Paul Rayson, Andrew Wilson, and Geoffrey Leech.
2001. Grammatical word class variation within the
british national corpus sampler. Language and Com-
puters.
37
Raquel Mochales Palau Rowe Glenn Reed, Chris and
Marie-Francine Moens. 2008. Language resources
for studying argument. In Proceedings of the 6th
conference on language resources and evaluation -
LREC 2008, pages 91?100. ELRA.
Ellen Riloff and Jay Shoen. 1995. Automatically
acquiring conceptual patterns without an annotated
corpus. In In Proceedings of the Third Workshop on
Very Large Corpora, pages 148?161.
Sara Rosenthal and Kathleen McKeown. 2012. De-
tecting opinionated claims in online discussions. In
ICSC, pages 30?37.
Swapna Somasundaran and Janyce Wiebe. 2010. Rec-
ognizing stances in ideological on-line debates. In
Proceedings of the NAACL HLT 2010 Workshop on
Computational Approaches to Analysis and Gener-
ation of Emotion in Text, CAAGET ?10, pages 116?
124, Stroudsburg, PA, USA. Association for Com-
putational Linguistics.
Swapna Somasundaran, Josef Ruppenhofer, and Janyce
Wiebe. 2007. Detecting arguing and sentiment in
meetings. In Proceedings of the SIGdial Workshop
on Discourse and Dialogue.
Stephen E. Toulmin, Richard Rieke, and Allan Janik.
1979. An Introduction to Reasoning. Macmillan
Publishing Company.
S.E. Toulmin. 1958. The Uses of Argument. Cam-
bridge University Press.
Maria Paz Garcia Villalba and Patrick Saint-Dizier.
2012. Some facets of argument mining for opinion
analysis. In COMMA, pages 23?34.
Janyce Wiebe and Ellen Riloff. 2005. Creating subjec-
tive and objective sentence classifiers from unanno-
tated texts. In In CICLing2005, pages 486?497.
Theresa Wilson and Janyce Wiebe. 2005. Annotat-
ing attributions and private states. In Proceedings of
ACL Workshop on Frontiers in Corpus Annotation
II: Pie in the Sky.
Theresa Wilson. 2005. Recognizing contextual po-
larity in phrase-level sentiment analysis. In In Pro-
ceedings of HLT-EMNLP, pages 347?354.
Adam Wyner, Raquel Mochales-Palau, Marie-Francine
Moens, and David Milward. 2010. Semantic pro-
cessing of legal texts. chapter Approaches to Text
Mining Arguments from Legal Cases, pages 60?79.
Springer-Verlag, Berlin, Heidelberg.
38
