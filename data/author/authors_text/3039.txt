Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 330?338,
Jeju, Republic of Korea, 8-14 July 2012. c?2012 Association for Computational Linguistics
A Joint Model for Discovery of Aspects in Utterances
Asli Celikyilmaz
Microsoft
Mountain View, CA, USA
asli@ieee.org
Dilek Hakkani-Tur
Microsoft
Mountain View, CA, USA
dilek@ieee.org
Abstract
We describe a joint model for understanding
user actions in natural language utterances.
Our multi-layer generative approach uses both
labeled and unlabeled utterances to jointly
learn aspects regarding utterance?s target do-
main (e.g. movies), intention (e.g., finding a
movie) along with other semantic units (e.g.,
movie name). We inject information extracted
from unstructured web search query logs as
prior information to enhance the generative
process of the natural language utterance un-
derstanding model. Using utterances from five
domains, our approach shows up to 4.5% im-
provement on domain and dialog act perfor-
mance over cascaded approach in which each
semantic component is learned sequentially
and a supervised joint learning model (which
requires fully labeled data).
1 Introduction
Virtual personal assistance (VPA) is a human to
machine dialog system, which is designed to per-
form tasks such as making reservations at restau-
rants, checking flight statuses, or planning weekend
activities. A typical spoken language understanding
(SLU) module of a VPA (Bangalore, 2006; Tur and
Mori, 2011) defines a structured representation for
utterances, in which the constituents correspond to
meaning representations in terms of slot/value pairs
(see Table 1). While target domain corresponds to
the context of an utterance in a dialog, the dialog
act represents overall intent of an utterance. The
slots are entities, which are semantic constituents at
the word or phrase level. Learning each component
Sample utterances on ?plan a night out? scenario
(I) Show me theaters in [Austin] playing [iron man 2].
(II)I?m in the mood for [indian] food tonight, show me the
ones [within 5 miles] that have [patios].
Extracted Class and Labels
Domain Dialog Act Slots=Values
(I) Movie find Location=Austin
theater Movie-Name= iron man 2
(II) Restaurant find Rest-Cusine=indian
restaurant Location=within 5 miles
Rest-Amenities= patios
Table 1: Examples of utterances with corresponding se-
mantic components, i.e., domain, dialog act, and slots.
is a challenging task not only because there are no
a priori constraints on what a user might say, but
also systems must generalize from a tractably small
amount of labeled training data. In this paper, we
argue that each of these components are interdepen-
dent and should be modeled simultaneously. We
build a joint understanding framework and introduce
a multi-layer context model for semantic representa-
tion of utterances of multiple domains.
Although different strategies can be applied,
typically a cascaded approach is used where
each semantic component is modeled sepa-
rately/sequentially (Begeja et al, 2004), focusing
less on interrelated aspects, i.e., dialog?s domain,
user?s intentions, and semantic tags that can be
shared across domains. Recent work on SLU
(Jeong and Lee, 2008; Wang, 2010) presents joint
modeling of two components, i.e., the domain and
slot or dialog act and slot components together.
Furthermore, most of these systems rely on labeled
training utterances, focusing little on issues such
as information sharing between the discourse and
word level components across different domains,
or variations in use of language. To deal with de-
330
pendency and language variability issues, a model
that considers dependencies between semantic
components and utilizes information from large
bodies of unlabeled text can be beneficial for SLU.
In this paper, we present a novel generative
Bayesian model that learns domain/dialog-act/slot
semantic components as latent aspects of text ut-
terances. Our approach can identify these semantic
components simultaneously in a hierarchical frame-
work that enables the learning of dependencies. We
incorporate prior knowledge that we observe in web
search query logs as constraints on these latent as-
pects. Our model can discover associations between
words within a multi-layered aspect model, in which
some words are indicative of higher layer (meta) as-
pects (domain or dialog act components), while oth-
ers are indicative of lower layer specific entities.
The contributions of this paper are as follows:
(i) construction of a novel Bayesian framework for
semantic parsing of natural language (NL) utter-
ances in a unifying framework in ?4,
(ii) representation of seed labeled data and informa-
tion from web queries as informative prior to design
a novel utterance understanding model in ?3 & ?4,
(iii) comparison of our results to supervised sequen-
tial and joint learning methods on NL utterances in
?5. We conclude that our generative model achieves
noticeable improvement compared to discriminative
models when labeled data is scarce.
2 Background
Language understanding has been well studied in
the context of question/answering (Harabagiu and
Hickl, 2006; Liang et al, 2011), entailment (Sam-
mons et al, 2010), summarization (Hovy et al,
2005; Daume?-III and Marcu, 2006), spoken lan-
guage understanding (Tur and Mori, 2011; Dinarelli
et al, 2009), query understanding (Popescu et al,
2010; Li, 2010; Reisinger and Pasca, 2011), etc.
However data sources in VPA systems pose new
challenges, such as variability and ambiguities in
natural language, or short utterances that rarely con-
tain contextual information, etc. Thus, SLU plays
an important role in allowing any sophisticated spo-
ken dialog system (e.g., DARPA Calo (Berry et al,
2011), Siri, etc.) to take the correct machine actions.
A common approach to building SLU framework
is to model its semantic components separately, as-
suming that the context (domain) is given a pri-
ori. Earlier work takes dialog act identification as
a classification task to capture the user?s intentions
(Margolis et al, 2010) and slot filling as a sequence
learning task specific to a given domain class (Wang
et al, 2009; Li, 2010). Since these tasks are con-
sidered as a pipeline, the errors of each component
are transfered to the next, causing robustness issues.
Ideally, these components should be modeled si-
multaneously considering the dependencies between
them. For example, in a local domain application,
users may require information about a sub-domain
(movies, hotels, etc.), and for each sub-domain, they
may want to take different actions (find a movie, call
a restaurant or book a hotel) using domain specific
attributes (e.g., cuisine type of a restaurant, titles for
movies or star-rating of a hotel). There?s been little
attention in the literature on modeling the dependen-
cies of SLU?s correlated structures.
Only recent research has focused on the joint
modeling of SLU (Jeong and Lee, 2008; Wang,
2010) taking into account the dependencies at learn-
ing time. In (Jeong and Lee, 2008), a triangular
chain conditional random fields (Tri-CRF) approach
is presented to model two of the SLU?s components
in a single-pass. Their discriminative approach rep-
resents semantic slots and discourse-level utterance
labels (domain or dialog act) in a single structure
to encode dependencies. However, their model re-
quires fully labeled utterances for training, which
can be time consuming and expensive to generate for
dynamic systems. Also, they can only learn depen-
dencies between two components simultaneously.
Our approach differs from the earlier work- in
that- we take the utterance understanding as a multi-
layered learning problem, and build a hierarchical
clustering model. Our joint model can discover
domain D, and user?s act A as higher layer latent
concepts of utterances in relation to lower layer la-
tent semantic topics (slots) S such as named-entities
(?New York?) or context bearing non-named enti-
ties (?vegan?). Our work resembles the earlier work
of PAM models (Mimno et al, 2007), i.e., directed
acyclic graphs representing mixtures of hierarchical
topic structures, where upper level topics are multi-
nomial over lower level topics in a hierarchy. In an
analogical way to earlier work, the D and A in our
331
approach represent common co-occurrence patterns
(dependencies) between semantic tags S (Fig. 2).
Concretely, correlated topics eliminate assignment
of semantic tags to segments in an utterance that
belong to other domains, e.g., we can discover that
?Show me vegan restaurants in San Francisco? has
a low probably of outputting a movie-actor slot. Be-
ing generative, our model can incorporate unlabeled
utterances and encode prior information of concepts.
3 Data and Approach Overview
Here we define several abstractions of our joint
model as depicted in Fig. 1. Our corpus mainly
contains NL utterances (?show me the nearest dim-
sum places?) and some keyword queries (?iron man
2 trailers?). We represent each utterance u as a vec-
tor wu of Nu word n-grams (segments), wuj , each
of which are chosen from a vocabulary W of fixed-
size V. We use entity lists obtained from web sources
(explained next) to identify segments in the corpus.
Our corpus contains utterances from KD=4 main
domains:? {movies, hotels, restaurants, events},
as well as out-of-domain other class. Each utterance
has one dialog act (A) associated with it. We assume
a fixed number of possible dialog acts KA for each
domain. Semantic Tags, slots (S) are lexical units
(segments) of an utterance, which we classify into
two types: domain-independent slots that are shared
across all domains, (e.g., location, time, year, etc.),
and domain-dependent slots, (e.g. movie-name,
actor-name, restaurant-name, etc.). For tractability,
we consider a fixed number of latent slot types KS .
Our algorithm assigns domain/dialog-act/slot labels
to each topic at each layer in the hierarchy using la-
beled data (explained in ?4.)
We represent domain and dialog act components
as meta-variables of utterances. This is similar to
author-topic models (Rosen-Zvi et al, 2004), that
capture author-topic relations across documents. In
that case, words are generated by first selecting an
author uniformly from an observed author list and
then selecting a topic from a distribution over words
that is specific to that author. In our model, each
utterance u is associated with domain and dialog
act topics. A word wuj in u is generated by first
selecting a domain and an act topic and then slot
topic over words of u. The domain-dependent slots
in utterances are usually not dependent on the di-
alog act. For instance, while ?find [hugo] trailer?
and ?show me where [hugo] is playing? have both
a movie-name slot (?hugo?), they have different di-
alog acts, i.e., find-trailer and find-movie, respec-
tively. We predict posterior probabilities for domain
P? (d ? D|u) dialog act P? (a ? A|ud) and slots
P? (sj ? S|wuj , d, sj?1) of words wuj in sequence.
To handle language variability, and hence dis-
cover correlation between hierarchical aspects of ut-
terances1, we extract prior information from two
web resources as follows:
Web n-Grams (G). Large-scale engines such as
Bing or Google log more than 100M search queries
each day. Each query in the search logs has an as-
sociated set of URLs that were clicked after users
entered a given query. The click information can
be used to infer domain class labels, and there-
fore, can provide (noisy) supervision in training do-
main classifiers. For example, two queries (?cheap
hotels Las Vegas? and ?wine resorts in Napa?),
which resulted in clicks on the same base URL (e.g.,
www.hotels.com) probably belong to the same do-
main (?hotels? in this case).
movie rest. hotel event other
?
G   
= P(d=hotel|w
j
=?room?)
d|wj
Given query logs, we
compile sets of in-domain
queries based on their
base URLs2. Then, for
each vocabulary item
wj ? W in our corpus, we calculate frequency of
wj in each set of in-domain queries and represent
each word (e.g., ?room?) as a discrete normalized
probability distribution ?jG over KD domains
{?d|jG }? ?
j
G. We inject them as nonuniform priors
over domain and dialog act parameters in ?4.
Entity Lists (E). We limit our model to a set
of named-entity slots (e.g., movie-name, restaurant-
name) and non-named entity slots (e.g., restaurant-
cuisine, hotel-rating). For each entity slot, we ex-
tract a large collection of entity lists through the url?s
on the web that correspond to our domains, such
as movie-names listed on IMDB, restaurant-names
on OpenTable, or hotel-ratings on tripadvisor.com.
1Two utterances can be intrinsically related but contain no
common terms, e.g., ?has open bar? and ?serves free drinks?.
2We focus on domain specific search engines such as
IMDB.com, RottenTomatoes.com for movies, Hotels.com and
Expedia.com for hotels, etc.
332
slot 
transition 
parameters
slot topics
dialog act 
topics 
!
A
domain specific 
act parameters
n-gram 
prior 
from
web query logs
entity 
prior 
from 
web documents
domain topics
domain 
parameters
Utterance
w w
+1
w
uj
movie restaurant hotel
menu 0.02 0.93 0.01
rooms 0.001 0.001 0.98
(?
G
) Web N-Gram Context Prior
(?
E
) Entity List Prior
V?D
w
uj
movie
name
restaurant
name
hotel 
name
hotel california 0.5 0.0 0.5
zucca 0.0 1.0 0.0
S
w
-1
S
+1
S
-1
D
A
!
D
!
S
K
S
?
G
"
S
K
S
topic-word 
parameters
?
E
M
D
M
A
M
S
Figure 1: Graphical model depiction of the MCM. D,A,S are
domain, dialog act and slot in a hierarchy, each consisting of
KD,KA,KS components. Shaded nodes indicate observed
variables. Hyper-parameters are omitted. Sample informative
priors over latent topics ?E and ?G are shown. Blue arrows
indicate frequency of vocabulary terms sampled for each topic.
We represent each entity list as observed nonuniform
priors ?E and inject them into our joint learning pro-
cess as V sparse multinomial distributions over la-
tent topics D, and S to ?guide? the generation of
utterances (Fig. 1 top-left table), explained in ?4.
4 Multi-Layer Context Model - MCM
The generative process of our multi-layer context
model (MCM) (Fig. 1) is shown in Algorithm 1. Each
utterance u is associated with d = 1..KD multino-
mial domain-topic distributions ?dD. Each domain d,
is represented as a distribution over a = 1, ..,KA
dialog acts ?daA (?
d
D ? ?
da
A ). In our MCM model, we
assume that each utterance is represented as a hidden
Markov model with KS slot states. Each state gen-
erates n-grams according to a multinomial n-gram
distribution. Once domain Du and act Aud topics
are sampled for u, a slot state topic Sujd is drawn
to generate each segment wuj of u by considering
the word-tag sequence frequencies based on a sim-
ple HMM assumption, similar to the content models
of (Sauper et al, 2011). Initial and transition prob-
ability distributions over the HMM states are sam-
pled from Dirichlet distribution over slots ?dsS . Each
slot state s generates words according to multino-
mial word distribution ?sS . We also keep track of the
frequency of vocabulary termswj?s in a V ?KD ma-
trixMD. Every time awj is sampled for a domain d,
we increment its count, a degree of domain bearing
words. Similarly, we keep track of dialog act and
slot bearing words in V ?KA and V ?KS matrices,
MA and MS (shown as red arrows in Fig 1). Being
Bayesian, each distribution ?dD, ?
ad
A , and ?
ds
S is sam-
pled from a Dirichlet prior distribution with different
parameters, described next.
Algorithm 1 Multi-Layer Context Model Generation
1: for each domain d? 1, ...,KD
2: draw domain dist. ?dD ? Dir(?
?
D)
?,
3: for each dialog-act a? 1, ...,KA
4: draw dialog act dist. ?daA ? Dir(?
?
A),
5: for each slot type s? 1, ...,KS
6: draw slot dist. ?dsS ? Dir(?
?
S).
7: endfor
8: draw ?sS ? Dir(?) for each slot type s? 1, ...,KS .
9: for each utterance u? 1, ..., |U | do
10: Sample a domain Du?Multi(?dD) and,
11: and act topic Aud?Multi(?daA ).
12: for words wuj , j ? 1, ..., Nu do
13: - Draw Sujd?Multi(?
Du,Su(j?1)d
S )
?.
14: - Sample wuj?Multi(?Sujd ).
15: end for
16: end for
? Dir(??D), Dir(?
?
A), Dir(?
?
S) are parameterized based on prior
knowledge.
? Here HMM assumption over utterance words is used.
In hierarchical topic models (Blei et al, 2003;
Mimno et al, 2007), etc., topics are represented
as distributions over words, and each document ex-
presses an admixture of these topics, both of which
have symmetric Dirichlet (Dir) prior distributions.
Symmetric Dirichlet distributions are often used,
since there is typically no prior knowledge favoring
one component over another. In the topic model lit-
erature, such constraints are sometimes used to de-
terministically allocate topic assignments to known
labels (Labeled Topic Modeling (Ramage et al,
2009)) or in terms of pre-learnt topics encoded as
prior knowledge on topic distributions in documents
(Reisinger and Pas?ca, 2009). Similar to previous
work, we define a latent topic per each known se-
mantic component label, e.g., five domain topics for
five defined domains. Different from earlier work
though, we also inject knowledge that we extract
from several resources including entity lists from
web search query click logs as well as seed labeled
training utterances as prior information. We con-
strain the generation of the semantic components of
our model by encoding prior knowledge in terms of
333
asymmetric Dirichlet topic priors ?=(?m1,...,?mK)
where each kth topic has a prior weight ?k=?mk,
with varying base measure m=(m1,...,mk) 3.
We update parameter vectors of Dirichlet domain
prior ?u?D ={(?D??
u1
D ),..., ?D??
uKD
D }, where ?D is
the concentration parameter for domain Dirichlet
distribution and ?uD={?
ud
D }
KD
d=1 is the base mea-
sure which we obtain from various resources. Be-
cause base measure updates are dependent on prior
knowledge of corpus words, each utterance u gets
a different base measure. Similarly, we update
the parameter vector of the Dirichlet dialog act
and slot priors ?u?A ={(?A??
u1
A ),...,(?A??
uKA
A )} and
?u?S ={(?S ??
u1
S ),...,(?S ??
uKS
S )} using base measures
?uA={?
ua
A }
KA
a=1 and ?Su={?
us
S }
KS
s=1 respectively.
Before describing base measure update for do-
main, act and slot Dirichlet priors, we explain the
constraining prior knowledge parameters below:
? Entity List Base Measure(?jE): Entity fea-
tures are indicative of domain and slots and MCM
utilizes these features while sampling topics. For
instance, entities hotel-name ?Hilton? and location
?New York? are discriminative features in classi-
fying ?find nice cheap double room in New York
Hilton? into correct domain (hotel) and slot (hotel-
name) clusters. We represent entity lists correspond-
ing to known domains as multinomial distributions
?jE , where each ?
d|j
E is the probability of entity-
word wj used in the domain d. Some entities may
belong to more than one domain, e.g., ?hotel Cali-
fornia? can either be a movie, or song or hotel name.
? Web n-Gram Context Base Measure (?jG):
As explained in ?3, we use the web n-grams as ad-
ditional information for calculating the base mea-
sures of the Dirichlet topic distributions. Normal-
ized word distributions ?jG over domains were used
as weights for domain and dialog act base measure.
? Corpus n-Gram Base Measure (?jC): Sim-
ilar to other measures, MCM also encodes n-gram
constraints as word-frequency features extracted
from labeled utterances. Concretely, we cal-
culate the frequency of vocabulary items given
domain-act label pairs from the training labeled ut-
terances and convert there into probability mea-
sures over domain-acts. We encode conditional
3See (Wallach, 2008) Chapter 3 for analysis of hyper-priors
on topic models.
probabilities {?ad|jC }??
j
C as multinomial distribu-
tions of words over domain-act pairs, e.g., ?ad|jC =
P(d=?restaurant?, a=?make-reservation?|?table?).
Base measure update: The ?-base measures are
used to shape Dirichlet priors ?u?D , ?
u?
A and ?
u?
S . We
update the base measures of each sampled domain
Du = d given each vocabulary wj as:
?djD =
{
?d|jE , ?
d|j
E > 0
?d|jG , otherwise
(1)
In (1) we assume that entities (E) are more indica-
tive of the domain compared to other n-grams (G)
and should be more dominant in sampling decision
for domain topics. Given an utterance u, we calcu-
late its base measure ?udD =(
?Nu
j ?
dj
D )/Nu.
Once the domain is sampled, we update the prior
weight of dialog acts Aud = a:
?ajA = ?
ad|j
C ? ?
d|j
G (2)
and slot components Sujd = s:
?sjS = ?
d|j
E (3)
Then we update their base measures for a given u as:
?uaA =(
?Nu
j ?
aj
A )/Nu and ?
us
S =(
?Nu
j ?
sj
S )/Nu.
4.1 Inference and Learning
The goal of inference is to predict the domain, user?s
act and slot distributions over each segment given
an utterance. The MCM has the following set of pa-
rameters: domain-topic distributions ?dD for each u,
the act-topic distributions ?daA for each domain topic
d of u, local slot-topic distributions for each do-
main ?S , and ?sS for slot-word distributions. Pre-
vious work (Asuncion et al, 2009; Wallach et al,
2009) shows that the choice of inference method has
negligible effect on the probability of testing doc-
uments or inferred topics. Thus, we use Markov
Chain Monte Carlo (MCMC) method,specifically
Gibbs sampling, to model the posterior distribution
PMCM(Du, Aud, Sujd|?u?D , ?
u?
A , ?
u?
S , ?) by obtaining
samples (Du, Aud, Sujd) drawn from this distribu-
tion. For each utterance u, we sample a domain Du
and act Aud and hyper-parameters ?D and ?A and
their base measures ?udD , ?
ua
A (from Eq. 1,2):
?dD =
Ndu + ?D?
ud
D
Nu + ?u?D
; ?daA =
Na|ud + ?
A?udD
Nud + ?u?A
(4)
The Ndu is the number of occurrences of domain
topic d in utterance u, Na|ud is the number of occur-
rences of act a given d in u. During sampling of a
334
slot state Sujd, we assume that utterance is generated
by the HMM model associated with the assigned
domain. For each segment wuj in u, we sample a
slot state Sujd given the remaining slots and hyper-
parameters ?S , ? and base measure ?usS (Eq. 3) by:
p(Sujd = s|w,Du,S?(ujd)?
u?
S , ?) ?
Nkujd + ?
Nk(.) + V ?
? (N
Du,Su(j?1)d
s + ?S?
us
S )?
NDu,sSu(j+1)d + I(Suj?1, s) + I(Suj+1, s) + ?S?
us
S
NDu,s(.) + I(Suj?1, s) +KD?
u?
S
(5)
The Nkujd is the number of times segment wuj is
generated from slot state s in all utterances as-
signed to domain topic d, NDu,s1s2 is the num-
ber of transitions from slot state s1 to s2, where
s1 ?{Su(j?1)d,Su(j+1)d}, I(s1, s2)=1 if slot s1=s2.
4.2 Semantic Structure Extraction with MCM
During Gibbs sampling, we keep track of the fre-
quency of draws of domain, dialog act and slot in-
dicating n-grams wj , in MD, MA and MS matri-
ces, respectively. These n-grams are context bearing
words (examples are shown in Fig.1.). For given u
the predicted domain d?u is determined by:
d?u = arg maxd P? (d|u) = arg maxd[?
d
D ?
?Nu
j=1
MjdD
MD
]
and predicted dialog act by arg maxa P? (a|ud
?):
a?u = arg maxa[?
d?a
A ?
?Nu
j=1
MjaA
MA
] (6)
For each segment wuj in u, its predicted slot are de-
termined by arg maxs P (sj |wuj , d
?, sj?1):
s?uj = arg maxs[p(Sujd? = s|.) ?
?Nu
j=1
ZjsS
ZS
] (7)
5 Experiments
We performed several experiments to evaluate our
proposed approach. Before presenting our results,
we describe our datasets as well as two baselines.
5.1 Datasets, Labels and Tags
Our dataset contains utterances obtained from di-
alogs between human users and our personal assis-
tant system. We use the transcribed text forms of
Domain Sample Dialog Acts (DAs) & Slots
movie DAs: find-movie/director/actor,buy-ticket
Slots: name, mpaa-rating (g-rated), date,
director/actor-name, award(oscar winning)...
hotel DAs: find-hotel, book-hotel,
Slots: name, room-type(double), amenities,
smoking, reward-program(platinum elite)...
restaurant DAs: find-restaurant, make-reservation,
Slots: opening-hour, amenities, meal-type,...
event DAs: find-event/ticket/performers, get-info..
Slots: name, type(concert), performer....
Table 2: List of domains, dialog acts and semantic slot
tags of utterance segments. Examples for some slots val-
ues are presented in parenthesis as italicized.
the utterances obtained from (acoustic modeling en-
gine) to train our models 4. Thus, our dataset con-
tains 18084 NL utterances, 5034 of which are used
for measuring the performance of our models. The
dataset consists of five domain classes, i.e, movie,
restaurant, hotel, event, other, 42 unique dialog acts
and 41 slot tags. Each utterance is labeled with a
domain, dialog act and a sequence of slot tags cor-
responding to segments in utterance (see examples
in Table 1). Table 2 shows sample dialog act and
slot labels. Annotation agreement, Kappa measure
(Cohen, 1960), was around 85%.
We pulled a month of web query logs and ex-
tracted over 2 million search queries from the movie,
hotel, event, and restaurant domains. We also used
generic web queries to compile a set of ?other? do-
main queries. Our vocabulary consists of n-grams
and segments (phrases) in utterances that are ex-
tracted using web n-grams and entity lists of ?3. We
extract distributions of n-grams and entities to inject
as prior weights for entity list base (?jE) and web
n-gram context base measures (?jG) (see ?4).
5.2 Baselines and Experiment Setup
We evaluated two baselines and two variants of our
joint SLU approach as follows:
? Sequence-SLU: A traditional approach to SLU
extracts domain, dialog act and slots as seman-
tic components of utterances using three sequential
models. Typically, domain and dialog act detec-
tion models are taken as query classification, where
a given NL query is assigned domain and act la-
bels. Among supervised query classification meth-
4We submitted sample utterances used in our models as ad-
ditional resource. Due to licensing issues, we will reveal the full
train/test utterances upon acceptance of our paper.
335
movie
restaurant
movie, theater, 
ticket, matinee, 
fandango 
menu, table, 
dinner, togo 
kids-friendly
chinese, coffee
D
1
D
2
find-movie
A
1
find-review
A
2
reservation
A
3
check-menu
A
4
movie-name
S
1
actor-name
S
2
iron man 2, 
hugo, muppets
descendants
rest-name
S
3
cuisine
S
4
S
k
tom hanks, 
angelina jolie, 
cameron
reviews, critics 
ratings, mpaa, 
breath-taking
scary, ticket  
iron-man 2, 
oscar winner
kid-friendly 
reserve, table
wait-time
menu, list, 
vine list, 
check, hotpot
nearest, 
city center, 
Vancouver, 
New York
amici, zucca 
new york 
bagel 
starbucks
chinese, 
vietnamese, 
italian, 
fast food
D
O
M
A
I
N
D
I
A
L
O
G
 
A
C
T
S
location
S
L
O
T
S
domain 
in-
dependent 
slots
Figure 2: Sample topics discovered by Multi-Layer Context
Model (MCM). Given samples of utterances, MCM is able to in-
fer a meaningful set of dialog act (A) and slots (S), falling into
broad categories of domain classes (D).
ods, we used the Adaboost, utterance classifica-
tion method that starts from a set of weak classifiers
and builds a strong classifier by boosting the weak
classifiers. Slot discovery is taken as a sequence la-
beling task in which segments in utterances are la-
beled (Li, 2010). For segment labeling we use Semi-
Markov Conditional Random Fields (Semi-CRF)
(Sarawagi and Cohen, 2004) method as a benchmark
in evaluating semantic tagging performance.
? Tri-CRF: We used Triangular Chain CRF (Jeong
and Lee, 2008) as our supervised joint model base-
line. It is a state-of-the art method that learns the
sequence labels and utterance class (domain or dia-
log act) as meta-sequence in a joint framework. It
encodes the inter-dependence between the slot se-
quence s and meta-sequence label (d or a) using a
triangular chain (dual-layer) structure.
? Base-MCM: Our first version injects an informa-
tive prior for domain, dialog act and slot topic dis-
tributions using information extracted from only la-
beled training utterances and inject as prior con-
straints (corpus n-gram base measure ?jC) during
topic assignments.
? WebPrior-MCM: Our full model encodes distri-
butions extracted from labeled training data as well
as structured web logs as asymmetric Dirichlet pri-
ors. We analyze performance gain by the informa-
tion from web sources (?jG and ?
j
E) when injected
into our approach compared to Base-MCM.
We inject dictionary constraints as features
to train supervised discriminative methods, i.e.,
boosting and Semi-CRF in Sequence-SLU, and
Tri-CRF models. For semantic tagging, dictionary
constraints apply to the features between individual
segments and their labels, and for utterance classifi-
cation (to predict domain and dialog acts) they apply
to the features between utterance and its label. Given
a list of dictionaries, these constraints specify which
label is more likely. For discriminative methods,
we use several named entities, e.g., Movie-Name,
Restaurant-Name, Hotel-Name, etc., non-named en-
tities, e.g., Genre, Cuisine, etc., and domain inde-
pendent dictionaries, e.g., Time, Location, etc.
We train domain and dialog act classifiers via
Icsiboost (Favre et al, 2007) with 10K iterations
using lexical features (up to 3-n-grams) and con-
straining dictionary features (all dictionaries). For
feature templates of sequence learners, i.e., Semi-
CRF and Tri-CRF, we use current word, bi-gram
and dictionary features. For Base-MCM and
WebPrior-MCM, we run Gibbs sampler for 2000
iterations with the first 500 samples as burn-in.
5.3 Evaluations and Discussions
We evaluate the performance of our joint model on
two experiments using two metrics. For domain and
dialog act detection performance we present results
in accuracy, and for slot detection we use the F1 pair-
wise measure.
Experiment 1. Encoding Prior Knowledge: A
common evaluation method in SLU tasks is to mea-
sure the performance of each individual semantic
model, i.e., domain, dialog act and semantic tagging
(slot filling). Here, we not only want to demon-
strate the performance of each component of MCM
but also their performance under limited amount of
labeled data. We randomly select subsets of labeled
training data U iL ? UL with different samples sizes,
niL ={? ?nL}, where nL represents the sample size
of UL and ?={10%,25%,..} is the subset percentage.
At each random selection, the rest of the utterances
are used as unlabeled data to boost the performance
of MCM. The supervised baselines do not leverage the
unlabeled utterances.
The results reported in Figure 3 reveal both
the strengths and some shortcomings of our ap-
proach. When the number of labeled data is
small (niL ?25%*nL), our WebPrior-MCM has
a better performance on domain and act predic-
tions compared to the two baselines. Compared to
Sequence-SLU, we observe 4.5% and 3% perfor-
mance improvement on the domain and dialog act
336
10 25 50 75 100
91
92
93
94
95
96
% Labeled Data
A
cc
u
ra
cy
%
Utterance Domain Performance
20 40 60 80 100
82
83
84
85
86
87
88
% Labeled Data
A
cc
u
ra
cy
%
Dialog Act Performance
20 40 60 80 100
65
70
75
80
85
% Labeled Data
F
-
M
ea
su
re
Semantic Tag (Slot) Performance
Sequence-SLU Tri-CRF Base-MCM WebPrior-MCM
Figure 3: Semantic component extraction performance measures for various baselines as well as our approach with different priors.
models, whereas our gain is 2.6% and 1.7% over
Tri-CRF models. As the percentage of labeled ut-
terances in training data increase, Tri-CRF perfor-
mance increases, however WebPrior-MCM is still
comparable with Sequence-SLU. This is because
we utilize domain priors obtained from the web
sources as supervision during generative process as
well as unlabeled utterances that enable handling
language variability. Adding labeled data improves
the performance of all models however supervised
models benefit more compared to MCM models.
Although WebPrior-MCM?s domain and dialog
act performances are comparable (if not better than)
the other baselines, it falls short on the semantic
tagging model. This is partially due to the HMM
assumption compared to the supervised conditional
model?s used in the other baselines, i.e., Semi-CRF
in Sequence-SLU and Tri-CRF). Our work can
be extended by replacing HMM assumption with
CRF based sequence learner to enhance the capa-
bility of the sequence tagging component of MCM.
Experiment 2. Less is More? Being Bayesian,
our model can incorporate unlabeled data at train-
ing time. Here, we evaluate the performance gain on
domain, act and slot predictions as more unlabeled
data is introduced at learning time. We use only 10%
of the utterances as labeled data in this experiment
and incrementally add unlabeled data (90% of la-
beled data are treated as unlabeled).
The results are shown in Table 3. n% (n=10,25,..)
unlabeled data indicates that the WebPrior-MCM
is trained using n% of unlabeled utterances along
with training utterances. Adding unlabeled data has
a positive impact on the performance of all three se-
Table 3: Performance evaluation results of
WebPrior-MCM using different sizes of unlabeled
utterances at learning time.
Unlabeled Domain Dialog Act Slot
% Accuracy Accuracy F-Measure
10% 94.69 84.17 52.61
25% 94.89 84.29 54.22
50% 95.08 84.39 56.58
75% 95.19 84.44 57.45
100% 95.28 84.52 58.18
mantic components when WebPrior-MCM is used.
The results show that our joint modeling approach
has an advantage over the other joint models (i.e.,
Tri-CRF) in that it can leverage unlabeled NL ut-
terances. Our approach might be usefully extended
into the area of understanding search queries, where
an abundance of unlabeled queries is observed.
6 Conclusions
In this work, we introduced a joint approach to
spoken language understanding that integrates two
properties (i) identifying user actions in multiple
domains in relation to semantic units, (ii) utilizing
large amounts of unlabeled web search queries that
suggest the user?s hidden intentions. We proposed a
semi-supervised generative joint learning approach
tailored for injecting prior knowledge to enhance the
semantic component extraction from utterances as a
unifying framework. Experimental results using the
new Bayesian model indicate that we can effectively
learn and discover meta-aspects in natural language
utterances, outperforming the supervised baselines,
especially when there are fewer labeled and more
unlabeled utterances.
337
References
A. Asuncion, M. Welling, P. Smyth, and Y. W. Teh. 2009.
On smoothing and inference for topic models. UAI.
S. Bangalore. 2006. Introduction to special issue of spo-
ken language understanding in conversational systems.
In Speech Conversation, volume 48, pages 233?238.
L. Begeja, B. Renger, Z. Liu D. Gibbon, and
B. Shahraray. 2004. Interactive machine learning
techniques for improving slu models. In Proceedings
of the HLT-NAACL 2004 Workshop on Spoken Lan-
guage Understanding for Conversational Systems and
Higher Level Linguistic Information for Speech Pro-
cessing.
Pauline M. Berry, Melinda Gervasio, Bart Peintner, and
Neil Yorke-Smith. 2011. Ptime: Personalized assis-
tance for calendaring. In ACM Transactions on Intel-
ligent Systems and Technology, volume 2, pages 1?40.
D. Blei, A. Ng, and M. Jordan. 2003. Latent dirichlet
allocation. Journal of Machine Learning Research.
J. Cohen. 1960. A coefficient of agreement for nominal
scales. In Educational and Psychological Measure-
ment, volume 20, pages 37?46.
H. Daume?-III and D. Marcu. 2006. Bayesian query fo-
cused summarization.
M. Dinarelli, A. Moschitti, and G. Riccardi. 2009. Re-
ranking models for spoken language understanding.
Proc. European Chapter of the Annual Meeting of the
Association of Computational Linguistics (EACL).
B. Favre, D. Hakkani-Tu?r, and Sebastien Cuendet.
2007. Icsiboost. http://code.google.come/
p/icsiboost.
S. Harabagiu and A. Hickl. 2006. Methods for using
textual entailment for question answering. pages 905?
912.
E. Hovy, C.Y. Lin, and L. Zhou. 2005. A be-based multi-
document summarizer with query interpretation. Proc.
DUC.
M. Jeong and G. G. Lee. 2008. Triangular-chain con-
ditional random fields. EEE Transactions on Audio,
Speech and Language Processing (IEEE-TASLP).
X. Li. 2010. Understanding semantic structure of noun
phrase queries. Proc. of the Annual Meeting of the
Association of Computational Linguistics (ACL).
P. Liang, M. I. Jordan, and D. Klein. 2011. Learning
dependency based compositional semantics.
A. Margolis, K. Livescu, and M. Osterdorf. 2010. Do-
main adaptation with unlabeled data for dialog act tag-
ging. In Proc. Workshop on Domain Adaptation for
Natural Language Processing at the the Annual Meet-
ing of the Association of Computational Linguistics
(ACL).
D. Mimno, W. Li, and A. McCallum. 2007. Mixtures
of hierarchical topics with pachinko allocation. Proc.
ICML.
A. Popescu, P. Pantel, and G. Mishne. 2010. Semantic
lexicon adaptation for use in query interpretation. 19th
World Wide Web Conference (WWW-10).
D. Ramage, D. Hall, R. Nallapati, and C. D. Man-
ning. 2009. Labeled lda: A supervised topic model
for credit attribution in multi-labeled corpora. Proc.
EMNLP.
J. Reisinger and M. Pas?ca. 2009. Latent variable models
of concept-attribute attachement. Proc. of the Annual
Meeting of the Association of Computational Linguis-
tics (ACL).
J. Reisinger and M. Pasca. 2011. Fine-grained class la-
bel markup of search queries. In Proc. of the Annual
Meeting of the Association of Computational Linguis-
tics (ACL).
M. Sammons, V. Vydiswaran, and D. Roth. 2010. Ask
not what textual entailment can do for you... In Proc.
of the Annual Meeting of the Association of Computa-
tional Linguistics (ACL), Uppsala, Sweden, 7.
S. Sarawagi and W. W. Cohen. 2004. Semimarkov
conditional random fields for information extraction.
Proc. NIPS.
C. Sauper, A. Haghighi, and R. Barzilay. 2011. Content
models with attitude. In Proc. of the Annual Meet-
ing of the Association of Computational Linguistics
(ACL).
G. Tur and R. De Mori. 2011. Spoken language under-
standing: Systems for extracting semantic information
from speech. Wiley.
H. Wallach, D. Mimno, and A. McCallum. 2009. Re-
thinking lda: Why priors matter. NIPS.
H. Wallach. 2008. Structured topic models for language.
Ph.D. Thesis, University of Cambridge.
Y.Y. Wang, R. Hoffman, X. Li, and J. Syzmanski.
2009. Semi-supervised learning of semantic classes
for query understanding from the web and for the
web. In The 18th ACM Conference on Information and
Knowledge Management.
Y-Y. Wang. 2010. Strategies for statistical spoken lan-
guage understanding with small amount of data - an
emprical study. Proc. Interspeech 2010.
338
NAACL-HLT 2012 Workshop on Future directions and needs in the Spoken Dialog Community: Tools and Data, pages 37?40,
Montre?al, Canada, June 7, 2012. c?2012 Association for Computational Linguistics
Mining Search Query Logs for Spoken Language Understanding
Dilek Hakkani-Tu?r, Gokhan Tu?r, Asli Celikyilmaz
Microsoft, Mountain View, CA 94041, USA
dilek|gokhan.tur|asli@ieee.org
Abstract
In a spoken dialog system that can handle nat-
ural conversation between a human and a ma-
chine, spoken language understanding (SLU)
is a crucial component aiming at capturing
the key semantic components of utterances.
Building a robust SLU system is a challeng-
ing task due to variability in the usage of lan-
guage, need for labeled data, and requirements
to expand to new domains (movies, travel, fi-
nance, etc.). In this paper, we survey recent
research on bootstrapping or improving SLU
systems by using information mined or ex-
tracted from web search query logs, which
include (natural language) queries entered by
users as well as the links (web sites) they click
on. We focus on learning methods that help
unveiling hidden information in search query
logs via implicit crowd-sourcing.
1 Introduction
Building a robust spoken dialog system involves hu-
man language technologies to cooperate to answer
natural language (NL) user requests. First user?s
speech is recognized using an automatic speech
recognition (ASR) engine. Then a spoken language
understanding (SLU) engine extracts their meaning
to be sent to dialog manager for taking the appropri-
ate system action.
Three key tasks of an SLU system are domain
classification, intent determination and slot filling
(Tur and Mori, 2011). While the state-of-the-art
SLU systems rely on data-driven methods, collect-
ing and annotating naturally spoken utterances to
train the required statistical models is often costly
and time-consuming, representing a significant bar-
rier to deployment. However, previous work shows
that it may be possible to alleviate this hurdle by
leveraging the abundance of implicitly labeled web
search queries in search engines. Large-scale en-
gines, e.g., Bing or Google, log more than 100M
queries every day. Each logged query has an associ-
ated set of URLs that were clicked after the users en-
tered the query. This information can be valuable for
building more robust SLU components, therefore,
provide (noisy) supervision in training SLU mod-
els. Take domain detection problem: Two users who
enter different queries but click on the same URL
(www.hotels.com) would probably be searching for
concepts in the same domain (?hotels? in this case).
The use of click information obtained through
massive search query click logs has been the fo-
cus of previous research. Specifically, query logs
have been used for building more robust web search
and better information retrieval (Pantel and Fuxman,
2011; Li et al, 2008), improve personalization expe-
rience and understand social networking behaviors
(Wang et al, 2011), etc. The use of query logs in
spoken dialog research is fairly new. In this paper,
we will survey the recent research on utilizing the
search query logs to obtain more accurate and ro-
bust spoken dialog systems, focusing on the SLU.
Later in the discussion section, we will discuss the
implimications on the dialog models.
The paper is organized as follows: In ? 2, we
briefly describe query click logs. We then summa-
rize recent research papers to give a snapshot of how
user search queries are being used in ? 3, and how
information from click-through graphs (queries and
37
movie theaters 
in san bruno
regal sunset 
square cinemas
the majestic 
crest theater
cinema in rosewell
rave cinemas
in eastfield
Queries Clicked URLs
moviefone.com
movies.eventful.com
yelp.com
amctheaters.com
find cheap tickets
for inception
movie ticket deals
watch movie
deals for inception
Queries Clicked URLs
fandango.com
movietickets.com
movie.yahoo.com
ticketmakers.com
movieworld carslton
ticket prices
1783
20
530
32
24
549
46
121
Figure 1: A sample query click graph. The squared queries
are samples from training data which are natural language ut-
terances. Edges include click frequencies from query to link.
clicked links) are exploited to boost the SLU perfor-
mance. Lastly, we discuss possible future directions.
2 What are Query Click Logs (QCL)?
QCL are logs of unstructured text including both the
users queries sent to a search engine and the links
that the users clicked on from the list of sites re-
turned by that search engine. A common representa-
tion of such data is a bi-partite query-click graph as
shown in (Fig 1), where one set of nodes represents
queries, and the other set of nodes represents URLs,
and an edge is placed between two nodes represent-
ing a query q and a URL u, if at least one user who
typed the q clicked on u.
Traditionally, the edge of the click graph is
weighted based on the raw click frequency (number
of clicks) from a query to a URL. Some of the chal-
lenges in extracting useful information from QCL is
that the feature space is high dimensional (there are
thousands of url clicks linked to many queries), and
there are millions of queries logged daily.
3 Exploiting NL Search Queries for SLU
Previous work on web search has benefited from the
use of query click logs for improving query intent
classification. Li et al use query click logs to de-
termine the domain of a query (typically keyword
search queries), and then infer the class member-
ships of unlabeled queries from those of the labeled
search queries using the URLs the users clicked (Li
et al, 2009; Li et al, 2008). QCL have been used to
extract named-entities to improve web search and ad
publishing experience (Hillard and Leggetter, 2010)
using (un)supervised learning methods on keyword
based search queries. Different from previous re-
search, in this paper we focus on recent research that
utilize NL search queries to boost the performance
of SLU components, i.e., domain detection, intent
determination, and slot filling.
In (Hakkani-Tur et al, 2011a), they use the search
query logs for domain classification by integrat-
ing noisy supervision into the semi-supervised la-
bel propagation algorithm, and sample high-quality
query click data. Specifically, they extract a set of
queries, whose users clicked on the URLs that are
related to their target domain categories. Then they
mine query click logs to get al instances of these
search queries and the set of links that were clicked
on by search engine users who entered the same
query. They compare two semi-supervised learn-
ing methods, self-training and label propagation, to
exploit the domain information obtained form the
URLs user have clicked on. The analysis indicate
that query sampling through semi-supervised learn-
ing enables extracting NL queries for use in domain
detection. They also argue that using raw queries
with and without the noisy labels in semi-supervised
learning reduces domain detection error rate by 20%
relative to supervised learning which uses only the
manually labeled examples.
The search queries found in click logs and the NL
spoken utterances are different in the sense that the
search queries are usually short and keyword based
compared to NL utterances that are longer and are
usually grammatical sentences (see Fig. 1). Hence,
in (Hakkani-Tur et al, 2012), they choose a statis-
tical machine translation (SMT) approach to search
query mining for SLU as sketched in Fig. 2. The
assumption is that, users typically have conceptual
intents underlying their requests when they inter-
act with web search engine or use a virtual assis-
tance system with built in SLU engine, e.g., ?avatar
awards? versus ?which awards did the movie avatar
win??. They translate NL queries into search queries
and mine similar search queries in QCL. They also
exploit QCL for bootstrapping domain detection
models, using only the NL queries hitting to seed
domain indicator URLs (Hakkani-Tur et al, 2011c).
Specifically, if one needs to detect a domain detector
for the hotels domain, the queries hitting hotels.com,
or tripadvisor.com, may be used to mine.
Query click logs have been explored for slot fill-
ing models as well. The slot filling models of SLU
38
Figure 2: Using natural language to query language translation
for mining query click logs.
aim to capture semantic components given the do-
main and a common way is to use gazetteer features
(dictionaries specific to domain such as movie-name
or actors in movie domain). In (Hillard et al, 2011),
they propose to mine and weight gazetteer entries
using query click logs. The gazetteer entries are
scored using a function of posterior probabilities for
that entry hitting a URL (compared to others URLs)
and for that URL being related to the target domain.
In such a schema the movie name ?gone with the
wind? gets higher score than the movie ?up?.
In (Tur et al, 2011), an unsupervised approach is
presented to implicitly annotate the training data us-
ing the QCL. Being unsupervised, this method auto-
matically populates gazetteers as opposed to man-
ually crafted gazetteers. Specifically they use an
abundant set of web search query logs with their
click information (see Fig. 1). They start by de-
tecting target URLs (such as imdb.com/title
for the movie names). Then they obtain a list
of entities and their target URLs (for example,
www.imdb.com/title/tt047723 can be the target URL
for the movie ?the count of monte carlo?. Then they
extract all queries hitting those links if they include
that entity. This method enables automatically ob-
taining annotated queries such as: ?review of the
hand? or ?mad men season one synopsis? (bold
terms are automatically discovered entities.)
4 Mining Click Graph Features for SLU
In the previous section, we presented examples of
recent research that use queries obtained from QCL
to bootstrap and improve SLU models. Note that
each query in QCL is linked to one or many web
sites (links), which indicate a certain feature of the
query (queries that the hotels.com linked are clicked
after they are entered might indicate hotels domain).
Such features extracted from QCL data (called click-
through features) has been demonstrated to signifi-
cantly improve the performance of ranking models
for Web search applications (Gao et al, 2009), es-
timating relations between entities and web search
queries (Pantel and Fuxman, 2011), etc.
In SLU research community, only recently the use
of click-through features has shown to improve the
performance of domain and intent of NL user utter-
ances. In one study (Hakkani-Tur et al, 2011b), in-
stead of mining more data to train a domain clas-
sifier with lexical features, they enrich their fea-
tures using the click-through features with the in-
tuition that the queries with similar click patterns
should be semantically similar. They search all the
NL utterances in the training data set amongst the
search queries. Once they obtain search queries,
they pull the list of clicked URLs and their frequen-
cies for each query which represent the click fea-
tures. To reduce the number of features, they ex-
tract only the base URLs (such as opentable.com or
wikipedia.com), as is commonly done in the web
search literature. T use the list of the 1000 most fre-
quently clicked base URLs for extracting classifica-
tion features (QCL features). For each input user
utterance, xj , they compute P (URLi|xj), where
i = 1..1000. They compute the click probability dis-
tribution distance between a query and the queries in
a target domain, Dk, using the KL divergence:
KLk = KL(P (URLi|xj)||P (URLi|Dk)) (1)
Thus, for a given domain Dk, the KLk and the do-
main with the lowest KL divergence are used as ad-
ditional features.
Although the click-through are demonstrated to
be beneficial for SLU models, such benefits, how-
ever, are severely limited by the data sparseness
problem, i.e., many queries and documents have no
or very few clicks. The SLU models thus cannot rely
strongly on click-through features. In (Celikyilmaz
et al, 2011), the sparsity issue of representing the
queries with click-through features are investigated.
They represent each unlabeled query from QCL as
39
a high dimensional sparse vector of click frequen-
cies. Since the true dimensionality of a query is un-
known (the number of clicks are infinitely many),
they utilize an unbounded factor analysis approach
and build an infinite dimensional latent factor anal-
ysis, namely the Indian Buffet Process (IBP) (Grif-
fiths and Ghahramani, 2005), specifically to model
the latent factor structure of the given set of queries.
They implement a graph summarization algorithm
to capture representative queries from a large set of
unlabeled queries that are similar to a rather smaller
set of labeled queries. They capture the latent factor
structure of the labeled queries via IBP and reduce
the dimensionality of the queries to manageable size
and collect additional queries in this latent factor
space. They use the new set of utterances boost the
intent detection performance of SLU models.
5 Discussions and Future Directions
This paper surveyed previous research on the usage
of the query click logs (the click through data) pro-
vide valuable statistics that can potentially improve
performance of the SLU models. We presented sev-
eral methods that has been used to extract infor-
mation in the form of additional vocabulary, unla-
beled utterances and hidden features to represent ut-
terances. The current research is only the beginning,
and most approaches such as query expansion, sen-
tence compression, etc. can be easily adopted for
dialog state update processes. Thus, the state-of-the
art in NL understanding can be improved by:
? clustering of URLs as well as queries for extract-
ing better features as well as to extend ontologies.
The search community has access to vast amounts
of search data that would benefit natural language
processing research,
? mining multi-lingual data for transferring dialog
systems from one language to others,
? mining information from search sessions, for ex-
ample, users rephrasing of their own search queries
for better results.
One issue that has been the topic of recent discus-
sions is the accessibility of QCL data to researchers.
Note that, QCL is not a crowd-source data that only
large web search organizations like Google or Mi-
crosoft Bing can mine and exploit for NL under-
standing, but various other forms may be imple-
mented by interested researchers by using a simple
web service or a mobile app (such as AT&T SpeakIt
or Dragon Go) or using a targeted search engine.
References
A. Celikyilmaz, D. Hakkani-Tur, and G. Tur. 2011.
Leveraging web query logs to learn user intent via
bayesian latent variable model. In ICML?11 - WS on
Combining Learning Strategies to Reduce Label Cost.
J. Gao, J.-Y. Nie, W. Yuan, X. Li, and K. Deng. 2009.
Smoothing clickthrough data for web search ranking.
In SIGIR?09.
T. Griffiths and Z. Ghahramani. 2005. Infinite latent fea-
ture models and the indian buffet process. In NIPS?05.
D. Hakkani-Tur, G. Tur, and L. Heck. 2011a. Exploiting
web search query click logs for utterance domain de-
tection in spoken language understanding. In ICASSP
2011.
D. Hakkani-Tur, G. Tur, L. Heck, A. Celikyilmaz, A. Fi-
dler, D. Hillard, R. Iyer, and S. Parthasarathy. 2011b.
Employing web search query click logs for multi-
domain spoken language understanding. In ASRU?11.
D. Hakkani-Tur, G. Tur, L. Heck, and E. Shriberg. 2011c.
Bootstrapping domain detection using query click logs
for new domains. In Interspeech?11.
D. Hakkani-Tur, G. Tur, R. Iyer, and L. Heck. 2012.
Translating natural language utterances to search
queries for slu domain detection using query click
logs. In ICASSP?12.
D. Hillard and C. Leggetter. 2010. Clicked phrase doc-
ument expansion for sponsored search ad retrieval. In
SIGIR?10.
D. Hillard, A. Celikyilmaz, D. Hakkani-Tur, and G. Tur.
2011. Learning weighted entity lists from web click
logs for slu. In Interspeech?11.
X. Li, Y.-Y. Wang, and A. Acero. 2008. Learning query
intent from regularized click graphs. In SIGIR08.
X. Li, Y.-Y. Wang, and A. Acero. 2009. Extract-
ing structured information from user queries with
semi-supervised conditional random fields. In ACM
SIGIT?09.
P. Pantel and A. Fuxman. 2011. Jigs and lures: Associ-
ating web queries with structured entities. In ACL?11.
G. Tur and R. De Mori, editors. 2011. Spoken Language
Understanding: Systems for Extracting Semantic In-
formation from Speech. John Wiley and Sons.
G. Tur, D. Hakkani-Tur, D. Hillard, and A. Celikyilmaz.
2011. Towards unsupervised spoken language under-
standing: Exploiting query click logs for slot filling.
In Interspeech?11.
C. Wang, R. Raina, D. Fong, D. Zhou, J. Han, and
G. Badros. 2011. Learning relevance from a hetero-
geneous social network and application in online tar-
geting. In SIGIR?11.
40
