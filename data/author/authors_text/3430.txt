Proceedings of ACL-08: HLT, pages 326?334,
Columbus, Ohio, USA, June 2008. c?2008 Association for Computational Linguistics
A Logical Basis for the D Combinator and Normal Form in CCG
Frederick Hoyt and Jason Baldridge
The Department of Linguistics
The University of Texas at Austin
{fmhoyt,jbaldrid}@mail.utexas.edu
Abstract
The standard set of rules defined in Combina-
tory Categorial Grammar (CCG) fails to pro-
vide satisfactory analyses for a number of syn-
tactic structures found in natural languages.
These structures can be analyzed elegantly by
augmenting CCG with a class of rules based
on the combinator D (Curry and Feys, 1958).
We show two ways to derive the D rules:
one based on unary composition and the other
based on a logical characterization of CCG?s
rule base (Baldridge, 2002). We also show
how Eisner?s (1996) normal form constraints
follow from this logic, ensuring that the D
rules do not lead to spurious ambiguities.
1 Introduction
Combinatory Categorial Grammar (CCG, Steedman
(2000)) is a compositional, semantically transparent
formalism that is both linguistically expressive and
computationally tractable. It has been used for a va-
riety of tasks, such as wide-coverage parsing (Hock-
enmaier and Steedman, 2002; Clark and Curran,
2007), sentence realization (White, 2006), learning
semantic parsers (Zettlemoyer and Collins, 2007),
dialog systems (Kruijff et al, 2007), grammar engi-
neering (Beavers, 2004; Baldridge et al, 2007), and
modeling syntactic priming (Reitter et al, 2006).
A distinctive aspect of CCG is that it provides
a very flexible notion of constituency. This sup-
ports elegant analyses of several phenomena (e.g.,
coordination, long-distance extraction, and intona-
tion) and allows incremental parsing with the com-
petence grammar (Steedman, 2000). Here, we argue
that even with its flexibility, CCG as standardly de-
fined is not permissive enough for certain linguistic
constructions and greater incrementality. Following
Wittenburg (1987), we remedy this by adding a set
of rules based on the D combinator of combinatory
logic (Curry and Feys, 1958).
(1) x/(y/z) :f y/w :g ? x/(w/z) :?h.f(?x.ghx)
We show that CCG augmented with this rule im-
proves CCG?s empirical coverage by allowing better
analyses of modal verbs in English and causatives in
Spanish, and certain coordinate constructions.
The D rules are well-behaved; we show this by
deriving them both from unary composition and
from the logic defined by Baldridge (2002). Both
perspectives on D ensure that the new rules are com-
patible with normal form constraints (Eisner, 1996)
for controlling spurious ambiguity. The logic also
ensures that the new rules are subject to modalities
consistent with those defined by Baldridge and Krui-
jff (2003). Furthermore, we define a logic that pro-
duces Eisner?s constraints as grammar internal theo-
rems rather than parsing stipulations.
2 Combinatory Categorial Grammar
CCG uses a universal set of syntactic rules based on
the B, T, and S combinators of combinatory logic
(Curry and Feys, 1958):
(2) B: ((Bf)g)x = f(gx)
T: Txf = fx
S: ((Sf)g)x = fx(gx)
CCG functors are functions over strings of symbols,
so different linearized versions of each of the com-
binators have to be specified (ignoring S here):
326
(3) FA: (>) x/?y y ? x
(<) y x\?y ? x
B: (>B) x/y y/z ? x/z
(<B) y\z x\y ? x\z
(>B?) x/?y y\?z ? x\?z
(<B?) y/?z x\?y ? x/?z
T: (>T) x ? t/i(t\ix)
(<T) x ? t\i(t/ix)
The symbols {?, , ?, ?} are modalities that allow
subtypes of slashes to be defined; this in turn allows
the slashes on categories to be defined in a way that
allows them to be used (or not) with specific subsets
of the above rules. The rules of this multimodal ver-
sion of CCG (Baldridge, 2002; Baldridge and Krui-
jff, 2003) are derived as theorems of a Categorial
Type Logic (CTL, Moortgat (1997)).
This treats CCG as a compilation of CTL proofs,
providing a principled, grammar-internal basis for
restrictions on the CCG rules, transferring language-
particular restrictions on rule application to the lex-
icon, and allowing the CCG rules to be viewed
as grammatical universals (Baldridge and Kruijff,
2003; Steedman and Baldridge, To Appear).
These rules?especially the B rules?allow
derivations to be partially associative: given appro-
priate type assignments, a string ABC can be ana-
lyzed as either A(BC) or (AB)C. This associativity
leads to elegant analyses of phenomena that demand
more effort in less flexible frameworks. One of the
best known is ?odd constituent? coordination:
(4) Bob gave Stan a beer and Max a coke.
(5) I will buy and you will eat a cheeseburger.
The coordinated constituents are challenging be-
cause they are at odds with standardly assumed
phrase structure constituents. In CCG, such con-
stituents simply follow from the associativity added
by the B and T rules. For example, given the cate-
gory assignments in (6) and the abbreviations in (7),
(4) is analyzed as in (8) and (9). Each conjunct is
a pair of type-raised NPs combined by means of the
>B-rule, deriving two composed constituents that
are arguments to the conjunction:1
(6) i. Bob ` s/(s\np)
1We follow (Steedman, 2000) in assuming that type-raising
applies in the lexicon, and therefore that nominals such as Stan
ii. Stan, Max `
((s\np)/np)\(((s\np)/np)/np)
iii. a beer, a coke ` (s\np)\((s\np)/np)
iv. and ` (x\?x)/?x
v. gave ` ((s\np)/np)/np
(7) i. vp = s\np
ii. tv = (s\np)/np
iii. dtv = ((s\np)/np)/np
(8) Stan a beer and Max a coke
tv\dt vp\tv (x\?x)/?x tv\dt vp\tv
<B <B
vp\dt vp\dt
>
(vp\dt)\(vp\dt)
<
vp\dt
(9) Bill gave Stan a beer and Max a coke
s/vp dt vp\dt
<vp
>s
Similarly, I will buy is derived with category s/np
by assuming the category (6i) for I and composing
that with both verbs in turn.
CCG?s approach is appealing because such con-
stituents are not odd at all: they simply follow from
the fact that CCG is a system of type-based gram-
matical inference that allows left associativity.
3 Linguistic Motivation for D
CCG is only partially associative. Here, we discuss
several situations which require greater associativity
and thus cannot be given an adequate analysis with
CCG as standardly defined. These structures have
in common that a category of the form x|(y|z) must
combine with one of the form y|w?exactly the con-
figuration handled by the D schemata in (1).
3.1 Cross-Conjunct Extraction
In the first situation, a question word is distributed
across auxiliary or subordinating verb categories:
(10) . . .what you can and what you must not base
your verdict on.
We call this cross-conjunct extraction. It was noted
by Pickering and Barry (1993) for English, but to the
best of our knowledge it has not been treated in the
have type-raised lexical assignments. We also suppress seman-
tic representations in the derivations for the sake of space.
327
CCG literature, nor noted in other languages. The
problem it presents to CCG is clear in (11), which
shows the necessary derivation of (10) using stan-
dard multimodal category assignments. For the to-
kens of what to form constituents with you can and
you must not, they must must combine directly. The
problem is that these constituents (in bold) cannot be
created with the standard CCG combinators in (3).
(11) s
s/(vp/np)
s/(vp/np)
s/(s/np)
what
s/vp
you can
(s/(vp/np))\(s/(vp/np))
(x\?x)/?x
and
s/(vp/np)
s/(s/np)
what
s/vp
you must not
vp/np
base your verdict on
The category for and is marked for non-associativity
with ?, and thus combines with other expressions
only by function application (Baldridge, 2002). This
ensures that each conjunct is a discrete constituent.
Cross-conjunct extraction occurs in other lan-
guages as well, including Dutch (12), German (13),
Romanian (14), and Spanish (15):
(12) dat
that
ik
I
haar
her
wil
want
en
and
dat
that
ik
I
haar
her
moet
can
helpen.
help
?. . . that I want to and that I can help her.?
(13) Wen
who
kann
can
ich
I
und
and
wen
who
darf
may
ich
I
noch
still
w?hlen?
choose
?Whom can I and whom may I still chose??
(14) Gandeste-te
consider.imper.2s-refl.2s
cui
who.dat
?e
what
vrei,
want.2s
s?i
and
cui
who.dat
?e
what
pot?i,
can.2s
sa?
to
dai.
give.subj.2s
?Consider to whom you want and to whom you
are able to give what.?
(15) Me
me
lo
it
puedes
can.2s
y
and
me
me
lo
it
debes
must.2s
explicar
ask
?You can and should explain it to me.?
It is thus a general phenomenon, not just a quirk
of English. While it could be handled with extra cat-
egories, such as (s/(vp/np))/(s/np) for what, this is
exactly the sort of strong-arm tactic that inclusion of
the standard B, T, and S rules is meant to avoid.
3.2 English Auxiliary Verbs
The standard CCG analysis for English auxiliary
verbs is the type exemplified in (16) (Steedman,
2000, 68), interpreted as a unary operator over sen-
tence meanings (Gamut, 1991; Kratzer, 1991):
(16) can ` (s\np)/(s\np) : ?P et?x.?P (x)
However, this type is empirically underdetermined,
given a widely-noted set of generalizations suggest-
ing that auxiliaries and raising verbs take no subject
argument at all (Jacobson, 1990, a.o.).
(17) i. Lack of syntactic restrictions on the subject;
ii. Lack of semantic restrictions on the subject;
iii. Inheritance of selectional restrictions from the
subordinate predicate.
Two arguments are made for (16). First, it is nec-
essary so that type-raised subjects can compose with
the auxiliary in extraction contexts, as in (18):
(18) what I can eat
s/(s/np) s/vp vp/vp tv
>B
s/vp
>B
s/np
>s
Second, it is claimed to be necessary in order to ac-
count for subject-verb agreement, on the assumption
that agreement features are domain restrictions on
functors of type s\np (Steedman, 1992, 1996).
The first argument is the topic of this paper, and,
as we show below, is refuted by the use of the D-
combinator. The second argument is undermined by
examples like (19):
(19) There appear to have been [ neither [ any catas-
trophic consequences ], nor [ a drastic change in
the average age of retirement ] ] .
In (19), appear agrees with two negative-polarity-
sensitive NPs trapped inside a neither-nor coordi-
nate structure in which they are licensed. Ap-
pear therefore does not combine with them directly,
showing that the agreement relation need not be me-
diated by direct application of a subject argument.
We conclude, therefore, that the assignment of the
vp/vp type to English auxiliaries and modal verbs is
unsupported on both formal and linguistic grounds.
Following Jacobson (1990), a more empirically-
motivated assignment is (20):
328
(20) can ` s/s : ?pt .?p
Combining (20) with a type-raised subject presents
another instance of the structure in (1), where that
question words are represented as variable-binding
operators (Groenendijk and Stokhof, 1997):
(21) what I can
s/(s/np) : ?Qet?yQy s/vp : ?P et .P i? s/s : ?pt .?p
? ? ? >B ? ??
3.3 The Spanish Causative Construction
The schema in (1) is also found in the widely-
studied Romance causative construction (Andrews
and Manning, 1999, a.m.o), illustrated in (22):
(22) Nos
cl.1p
hizo
made.3s
leer
read
El
the
Se?or
Lord
de
of
los
the
Anillos.
Rings
?He made us read The Lord of the Rings.?
The aspect of the construction that is relevant here
is that the causative verb hacer appears to take an
object argument understood as the subject or agent
of the subordinate verb (the causee). However, it has
been argued that Spanish causative verbs do not in
fact take objects (Ackerman and Moore, 1999, and
refs therein). There are two arguments for this.
First, syntactic alternations that apply to object-
taking verbs, such as passivization and periphrasis
with subjunctive complements, do not apply to hacer
(Luj?n, 1980). Second, hacer specifies neither the
case form of the causee, nor any semantic entail-
ments with respect to it. These are instead deter-
mined by syntactic, semantic, and pragmatic factors,
such as transitivity, word order, animacy, gender, so-
cial prestige, and referential specificity (Finnemann,
1982, a.o). Thus, there is neither syntactic nor se-
mantic evidence that hacer takes an object argument.
On this basis, we assign hacer the category (23):
(23) hacer ` (s\np)/s : ?P?x.cause?Px
However, Spanish has examples of cross-conjunct
extraction in which hacer hosts clitics:
(24) No
not
solo
only
le
cl.dat.3ms
ordenaron,
ordered.3p
sino que
but
le
cl.dat.3ms
hicieron
made.3p
barrer
sweep
la
the
verada.
sidewalk
?They not only ordered him to, but also made him
sweep the sidewalk.?
This shows another instance of the schema in (1),
which is undefined for any of the combinators in (3):
(25) le hicieron barrer la verada
(s\np)/((s\np)/np) (s\np)/s (s|np)
? ? ? >B ? ??
3.4 Analyses Based on D
The preceding data motivates adding D rules (we re-
turn to the distribution of the modalities below):
(26) >D x/(y/z) y/w ? x/(w/z)
>D? x/?(y/?z) y\?w ? x\?(w/?z)
>D? x/(y\?z) y/?w ? x/(w\?z)
>D? x/?(y\z) y\?w ? x\?(w\z)
(27) <D y\w x\(y\z) ? x\(w\z)
<D? y/?w x\?(y\?z) ? x/?(w\?z)
<D? y\?w x\(y/?z) ? x\(w/?z)
<D? y/?w x\?(y/z) ? x/?(w/z)
To illustrate with example (10), one application of
>D allows you and can to combine when the auxil-
iary is given the principled type assignment s/s, and
another combines what with the result.
(28) what you can
s/(s/np) s/(s\?np) s/?s
>D?
s/(s\?np)
>D
s/((s\?np)/np)
The derivation then proceeds in the usual way.
Likewise, D handles the Spanish causative con-
structions (29) straightforwardly :
(29) lo hice dormir
(s\np)/((s\np)/np) (s\np)/s s/np
>D
(s\np)/(s/np)
>
s\np
The D-rules thus provide straightforward analy-
ses of such constructions by delivering flexible con-
stituency while maintaining CCG?s committment to
low categorial ambiguity and semantic transparency.
4 Deriving Eisner Normal Form
Adding new rules can have implications for parsing
efficiency. In this section, we show that the D rules
fit naturally within standard normal form constraints
for CCG parsing (Eisner, 1996), by providing both
329
combinatory and logical bases for D. This addition-
ally allows Eisner?s normal form constraints to be
derived as grammar internal theorems.
4.1 The Spurious Ambiguity Problem
CCG?s flexibility is useful for linguistic analy-
ses, but leads to spurious ambiguity (Wittenburg,
1987) due to the associativity introduced by the
B and T rules. This can incur a high compu-
tational cost which parsers must deal with. Sev-
eral techniques have been proposed for the prob-
lem (Wittenburg, 1987; Karttunen, 1989; Hepple
and Morrill, 1989; Eisner, 1996). The most com-
monly used are Karttunnen?s chart subsumption
check (White and Baldridge, 2003; Hockenmaier
and Steedman, 2002) and Eisner?s normal-form con-
straints (Bozsahin, 1998; Clark and Curran, 2007).
Eisner?s normal form, referred to here as Eisner
NF and paraphrased in (30), has the advantage of not
requiring comparisons of logical forms: it functions
purely on the syntactic types being combined.
(30) For a set S of semantically equivalent2 parse trees
for a string ABC, admit the unique parse tree such
that at least one of (i) or (ii) holds:
i. C is not the argument of (AB) resulting from
application of >B1+.
ii. A is not the argument of (BC) resulting from
application of <B1+.
The implication is that outputs of B1+ rules are
inert, using the terminology of Baldridge (2002).
Inert slashes are Baldridge?s (2002) encoding in
OpenCCG3 of his CTL interpretation of Steedman?s
(2000) antecedent-government feature.
Eisner derives (30) from two theorems about the
set of semantically equivalent parses that a CCG
parser will generate for a given string (see (Eisner,
1996) for proofs and discussion of the theorems):
(31) Theorem 1 : For every parse tree ?, there is a se-
mantically equivalent parse-tree NF (?) in which
no node resulting from application of B or S func-
tions as the primary functor in a rule application.
(32) Theorem 2 : If NF (?) and NF (??) are distinct
parse trees, then their model-theoretic interpreta-
tions are distinct.
2Two parse trees are semantically equivalent if: (i) their leaf
nodes have equivalent interpretations, and (ii) equivalent scope
relations hold between their respective leaf-node meanings.
3http://openccg.sourceforge.net
Eisner uses a generalized form Bn (n?0) of compo-
sition that subsumes function application:4
(33) >Bn : x/y y$n ? x$n
(34) <Bn : y$n x\y ? x$n
Based on these theorems, Eisner defines NF as fol-
lows (for R, S, T as Bn or S, and Q=Bn?1 ):
(35) Given a parse tree ?:
i. If ? is a lexical item, then ? is in Eisner-NF.
ii. If ? is a parse tree ?R, ?, ?? and NF (?),
NF (?), then NF (?).
iii. If ? is not in Eisner-NF, then
NF (?) = ?Q, ?1 , ?2 ?, and
NF (?) = ?S, ?1 , NF (?T, ?2 , ??)?.
As a parsing constraint, (30) is a filter on the set
of parses produced for a given string. It preserves all
the unique semantic forms generated for the string
while eliminating all spurious ambiguities: it is both
safe and complete.
Given the utility of Eisner NF for practical CCG
parsing, the D rules we propose should be compati-
ble with (30). This requires that the generalizations
underlying (30) apply to D as well. In the remainder
of this section, we show this in two ways.
4.2 Deriving D from B
The first is to derive the binary B rules from a unary
rule based on the unary combinator B?:5
(36) x/y : fxy ? (x/z)/(y/z) : ?hzy?xz .f(hx)
We then derive D from B? and show that clause (iii)
of (35) holds of Q schematized over both B and D.
Applying D to an argument sequence is equiva-
lent to compound application of binary B:
(37) (((Df)g)h)x = (fg)(hx)
(38) ((((BB)f)g)h)x = ((B(fg))h)x = (fg)(hx)
Syntactically, binary B is equivalent to application
of unary B? to the primary functor ?, followed by
applying the secondary functor ? to the output of B?
by means of function application (Jacobson, 1999):
4We use Steedman?s (Steedman, 1996) ?$?-convention for
representing argument stacks of length n, for n ? 0.
5This is Lambek?s (1958) Division rule, also known as the
?Geach rule? (Jacobson, 1999).
330
(39) ? ?
x/y y/z
>B?
(x/z)/(y/z)
>
x/z
Bn (n ? 1) is derived by applying B? to the primary
functor n times. For example, B2 is derived by 2
applications of B? to the primary functor:
(40) ? ?
x/y (y/w)/z
B?
(x/w)/(y/w)
B?
((x/w)/z)/((y/w)/z)
>
(x/w)/z
The rules for D correspond to application of B? to
both the primary and secondary functors, followed
by function application:
(41) ? ?
x/(y/z) y/w
>B? >B?
(x/(w/z))/((y/z)/(w/z)) (y/z)/(w/z)
>
x/(w/z)
As with Bn , Dn?1 can be derived by iterative appli-
cation of B? to both primary and secondary functors.
Because B can be derived from B?, clause (iii) of
(35) is equivalent to the following:
(42) If ? is not in Eisner-NF, then
NF (?) = ?FA, ?B?, ?1 ?, ?2 ?, such that
NF (?) = ?S, ?1 , NF (?T, ?2 , ??)?
Interpreted in terms of B?, both B and D involve ap-
plication of B? to the primary functor. It follows that
Theorem I applies directly to D simply by virtue of
the equivalence between binary B and unary-B?+FA.
Eisner?s NF constraints can then be reinterpreted
as a constraint on B? requiring its output to be an inert
result category. We represent this in terms of the B?-
rules introducing an inert slash, indicated with ?!?
(adopting the convention from OpenCCG):
(43) x/y : fxy ? (x/!z)/(y/!z) : ?hzy?xzfhx
Hence, both binary B and D return inert functors:
(44) ? ?
x/y y/z
>B?
(x/!z)/(y/!z)
>
x/!z
(45) ? ?
x/(y/z) y/w
>B? >B?
(x/!(w/z))/((y/z)/!(w/z)) (y/!z)/(w/!z)
>
x/!(w/z)
The binary substitution (S) combinator can be
similarly incorporated into the system. Unary sub-
stitution S? is like B? except that it introduces a slash
on only the argument-side of the input functor. We
stipulate that S? returns a category with inert slashes:
(46) (S?) (x/y)/z ? (x/!z)/(y/!z)
T is by definition unary. It follows that all the binary
rules in CCG (including the D-rules) can be reduced
to (iterated) instantiations of the unary combinators
B?, S?, or T plus function application.
This provides a basis for CCG in which all com-
binatory rules are derived from unary B? S?, and T.
4.3 A Logical Basis for Eisner Normal Form
The previous section shows that deriving CCG rules
from unary combinators allows us to derive the D-
rules while preserving Eisner NF. In this section, we
present an alternate formulation of Eisner NF with
Baldridge?s (2002) CTL basis for CCG. This for-
mulation allows us to derive the D-rules as before,
and does so in a way that seamlessly integrates with
Baldridge?s system of modalized functors.
In CTL, B and B? are proofs derived via struc-
tural rules that allow associativity and permutation
of symbols within a sequent, in combination with
the slash introduction and elimination rules of the
base logic. To control application of these rules,
Baldridge keys them to binary modal operators  (for
associativity) and ? (for permutation). Given these,
>B is proven in (47):
(47) ? ` x/y ? ` y/z [a ` z]
[/E]
(? ? ai) ` y
[/E]
(? ? (? ? ai)) ` x
[RA]
((? ? ?) ? ai) ` x
[/I]
(? ? ?) ` x/z
In a CCG ruleset compiled from such logics, a
category must have an appropriately decorated slash
in order to be the input to a rule. This means that
rules apply universally, without language-specific
331
restrictions. Instead, restrictions can only be de-
clared via modalities marked on lexical categories.
Unary B? and the D rules in 4.2 can be derived us-
ing the same logic. For example, >B? can be derived
as in (48):
(48) ? ` x/y [f ` y/z]1 [a ` z]2
[/E]
(f1 ? a2 ) ` y
[/E]
(? ? (f1 ? a2 )) ` x
[RA]
((? ? f1 ) ? a2 ) ` x
[/I]
(? ? f1 ) ` x/z
[/I]
? ` (x/z)/(y/z)
The D rules are also theorems of this system. For
example, the proof for >D applies (48) as a lemma
to each of the primary and secondary functors:
(49) ? ` x/(y/z) ? ` y/w
>B? >B?
? ` (x/(w/z))/((y/z)/(w/z)) ? ` (y/z)/(w/z)
[/E]
(? ? ?) ` x/(w/z)
>D? involves an associative version of B? applied
to the primary functor (50), and a permutative ver-
sion to the secondary functor (51).
(50) ? ` x/(y\?z) [f ` (y\?z)/?(w\?z)]1 [g ` w\?z]2
[/?E]
(f1 ?? g2 ) ` y\?z
[/E]
(? ? (f1 ?. g2 )) ` x
[RA]
((? ? f1 ) ?. g2 ) ` x
[/?I]
(? ? f1 ) ` x/?(w\?z)
[/I]
? ` (x/?(w\?z))/((y\?z)/?(w\?z))
(51) ? ` y/?w [a ` z]1 [f ` w\?z]2
[\?E]
(a1 ?? f2 ) ` w
[/?E]
(? ?? (a1 ?? f2 )) ` y
[LP ]
(a1 ?? (? ?? f2 )) ` y
[\?I]
(? ?? f2 ) ` y\?z
[/?I]
? ` (y\?z)/?(w\?z)
Rules for D with appropriate modalities can there-
fore be incorporated seamlessly into CCG.
In the preceding subsection, we encoded Eisner
NF with inert slashes. In Baldridge?s CTL basis
for CCG, inert slashes are represented as functors
seeking non-lexical arguments, represented as cate-
gories marked with an antecedent-governed feature,
reflecting the intuition that non-lexical arguments
have to be ?bound? by a superordinate functor.
This is based on an interpretation of antecedent-
government as a unary modality ?ant that allows
structures marked by it to permute to the left or right
periphery of a structure:6
(52) ((?a ?? ?ant?b) ?? ?c) ` x
((?a ?? ?c) ?? ?ant?b) ` x
[ARP]
(?a ?? (?ant?b ?? ?c)) ` x
(?ant?b ?? (?a ?? ?c)) ` x
[ALP]
Unlike permutation rules without ?ant , these per-
mutation rules can only be used in a proof when
preceeded by a hypothetical category marked with
the 2?ant modality. The elimination rule for 2
?-
modalities introduces a corresponding ?-marked
object in the resulting structure, feeding the rule:
(53) [a ` 2?antz]
1
[2?E]
?anta1 ` z ? ` y\?z
[\?E]
? ` x/?y (?anta1 ?? ?) ` y
[/?E]
(? ?? (?anta1 ?? ?)) ` x
[ALP ]
[a ` ?ant2
?
antz]
2 (?anta1 ?? (? ?? ?)) ` x
[?E]
(a ?? (? ?? ?)) ` x
[\?I]
2
(? ?? ?) ` x\??ant2
?
antz
Re-introduction of the [a ` ?ant2
?
antz]
k hypothesis
results in a functor the argument of which is marked
with ?ant2
?
ant . Because lexical categories are not
marked as such, the functor cannot take a lexical ar-
gument, and so is effectively an inert functor.
In Baldridge?s (2002) system, only proofs involv-
ing the ARP and ALP rules produce inert categories.
In Eisner NF, all instances of B-rules result in inert
categories. This can be reproduced in Baldridge?s
system simply by keying all structural rules to the
ant-modality, the result being that all proofs involv-
ing structural rules result in inert functors.
As desired, the D-rules result in inert categories as
well. For example, >D is derived as follows (2?ant
and ?ant are abbreviated as 2? and ?):
6Note that the diamond operator used here is a syntactic op-
erator, rather than a semantic operator as used in (16) above.
The unary modalities used in CTL describe accessibility rela-
tionships between subtypes and supertypes of particular cate-
gories: in effect, they define feature hierarchies. See Moortgat
(1997) and Oehrle (To Appear) for further explanation.
332
(54) ? ` y/w [a ` 2?(w/z)]1 [b ` 2?z]2
[2?E] [2?E]
?a ` w/z ?b ` z
[/E]
(?a ? ?b) ` w
[/E]
(? ? (?a ? ?b)) ` y
[RA]
[c ` ?2?z]3 ((? ? ?a) ? ?b) ` y
[?E]2
((? ? ?a) ? c) ` y
[/I]3
(? ? ?a) ` y/?2?z
(55) (54)
...
? ` x/(y/?2?z) (? ? ?a) ` y/?2?z
[/E]
(? ? (? ? ?a)) ` x
[RA]
[d ` ?2?(w/z)]4 ((? ? ?) ? ?a) ` x
[?E]1
((? ? ?) ? d) ` x
[/I]4
(? ? ?) ` x/?2?(w/z)
(54)-(55) can be used as a lemma corresponding to
the CCG rule in (57):
(56) ? ` x/(y/?2?z) ? ` y/w
[D]
(? ? ?) ` x/?2?(w/z)
(57) x/(y/!z) y/w ? x/!(w/z)
This means that all CCG rules compiled from the
logic?which requires ?ant to licence the structural
rules necessary to prove the rules?return inert func-
tors. Eisner NF thus falls out of the logic because all
instances of B, D, and S produce inert categories.
This in turns allows us to view Eisner NF as part of
a theory of grammatical competence, in addition to
being a useful technique for constraining parsing.
5 Conclusion
Including the D-combinator rules in the CCG rule
set lets us capture several linguistic generalizations
that lack satisfactory analyses in standard CCG.
Furthermore, CCG augmented with D is compat-
ible with Eisner NF (Eisner, 1996), a standard
technique for controlling derivational ambiguity in
CCG-parsers, and also with the modalized version
of CCG (Baldridge and Kruijff, 2003). A conse-
quence is that both the D rules and the NF con-
straints can be derived from a grammar-internal per-
spective. This extends CCG?s linguistic applicabil-
ity without sacrificing efficiency.
Wittenburg (1987) originally proposed using rules
based on D as a way to reduce spurious ambiguity,
which he achieved by eliminating B rules entirely
and replacing them with variations on D. Witten-
burg notes that doing so produces as many instances
of D as there are rules in the standard rule set. Our
proposal retains B and S, but, thanks to Eisner NF,
eliminates spurious ambiguity, a result that Witten-
burg was not able to realize at the time.
Our approach can be incorporated into Eisner NF
straightforwardly However, Eisner NF disprefers in-
cremental analyses by forcing right-corner analyses
of long-distance dependencies, such as in (58):
(58) (What (does (Grommet (think (Tottie (said (Victor
(knows (Wallace ate)))))))))?
For applications that call for increased incremental-
ity (e.g., aligning visual and spoken input incremen-
tally (Kruijff et al, 2007)), CCG rules that do not
produce inert categories can be derived a CTL ba-
sis that does not require ?ant for associativity and
permutation. The D-rules derived from this kind of
CTL specification would allow for left-corner analy-
ses of such dependencies with the competence gram-
mar. An extracted element can ?wrap around? the
words intervening between it and its extraction site.
For example, D would allow the following bracket-
ing for the same example (while producing the same
logical form):
(59) (((((((((What does) Grommet) think) Tottie) said)
Victor) knows) Wallace) ate)?
Finally, the unary combinator basis for CCG pro-
vides an interesting additional specification for gen-
erating CCG rules. Like the CTL basis, the unary
combinator basis can produce a much wider range
of possible rules, such as D rules, that may be rel-
evant for linguistic applications. Whichever basis
is used, inclusion of the D-rules increases empirical
coverage, while at the same time preserving CCG?s
computational attractiveness.
Acknowledgments
Thanks Mark Steedman for extensive comments and
suggestions, and particularly for noting the relation-
ship between the D-rules and unary B?. Thanks
also to Emmon Bach, Cem Bozsahin, Jason Eisner,
Geert-Jan Kruijff and the ACL reviewers.
333
References
Farrell Ackerman and John Moore. 1999. Syntagmatic
and Paradigmatic Dimensions of Causee Encodings.
Linguistics and Philosophy, 24:1?44.
Avery D. Andrews and Christopher D. Manning. 1999.
Complex Predicates and Information Spreading in
LFG. CSLI Publications, Palo Alto, California.
Jason Baldridge and Geert-Jan Kruijff. 2003. Multi-
Modal Combinatory Categorial Grammar. In Proceed-
ings of EACL 10, pages 211?218.
Jason Baldridge, Sudipta Chatterjee, Alexis Palmer, and
Ben Wing. 2007. DotCCG and VisCCG: Wiki and
Programming Paradigms for Improved Grammar En-
gineering with OpenCCG. In Proceedings of GEAF
2007.
Jason Baldridge. 2002. Lexically Specified Derivational
Control in Combinatory Categorial Grammar. Ph.D.
thesis, University of Edinburgh.
John Beavers. 2004. Type-inheritance Combinatory
Categorial Grammar. In Proceedings of COLING-04,
Geneva, Switzerland.
Robert Borsley and Kersti B?rjars, editors. To Appear.
Non-Transformational Syntax: A Guide to Current
Models. Blackwell.
Cem Bozsahin. 1998. Deriving the Predicate-Argument
Structure for a Free Word Order Language. In Pro-
ceedings of COLING-ACL ?98.
Stephen Clark and James Curran. 2007. Wide-Coverage
Efficient Statistical Parsing with CCG and Log-Linear
Models. Computational Linguistics, 33(4).
Haskell B. Curry and Robert Feys. 1958. Combinatory
Logic, volume 1. North Holland, Amsterdam.
Jason Eisner. 1996. Efficient Normal-Form Parsing for
Combinatory Categorial Grammars. In Proceedings of
the ACL 34.
Michael D Finnemann. 1982. Aspects of the Spanish
Causative Construction. Ph.D. thesis, University of
Minnesota.
L. T. F. Gamut. 1991. Logic, Language, and Meaning,
volume II. Chicago University Press.
Jeroen Groenendijk and Martin Stokhof. 1997. Ques-
tions. In Johan van Benthem and Alice ter Meulen,
editors, Handbook of Logic and Language, chapter 19,
pages 1055?1124. Elsevier Science, Amsterdam.
Mark Hepple and Glyn Morrill. 1989. Parsing and
Derivational Equivalence. In Proceedings of EACL 4.
Julia Hockenmaier and Mark Steedman. 2002. Gen-
erative Models for Statistical Parsing with Combina-
tory Categorial Grammar. In Proceedings. of ACL 40,
pages 335?342, Philadelpha, PA.
Pauline Jacobson. 1990. Raising as Function Composi-
tion. Linguistics and Philosophy, 13:423?475.
Pauline Jacobson. 1999. Towards a Variable-Free Se-
mantics. Linguistics and Philosophy, 22:117?184.
Lauri Karttunen. 1989. Radical Lexicalism. In Mark
Baltin and Anthony Kroch, editors, Alternative Con-
ceptions of Phrase Structure. University of Chicago
Press, Chicago.
Angelika Kratzer. 1991. Modality. In Arnim von Ste-
chow and Dieter Wunderlich, editors, Semantics: An
International Handbook of Contemporary Semantic
Research, pages 639?650. Walter de Gruyter, Berlin.
Geert-Jan M. Kruijff, Pierre Lison, Trevor Benjamin,
Henrik Jacobsson, and Nick Hawes. 2007. Incremen-
tal, Multi-Level Processing for Comprehending Situ-
ated Dialogue in Human-Robot Interaction. In Lan-
guage and Robots: Proceedings from the Symposium
(LangRo?2007), Aveiro, Portugal.
Joachim Lambek. 1958. The mathematics of sentence
structure. American Mathematical Monthly, 65:154?
169.
Marta Luj?n. 1980. Clitic Promotion and Mood in Span-
ish Verbal Complements. Linguistics, 18:381?484.
Michael Moortgat. 1997. Categorial Type Logics. In Jo-
han van Benthem and Alice ter Meulen, editors, Hand-
book of Logic and Language, pages 93?177. North
Holland, Amsterdam.
Richard T Oehrle. To Appear. Multi-Modal Type Log-
ical Grammar. In Boersley and B?rjars (Borsley and
B?rjars, To Appear).
Martin Pickering and Guy Barry. 1993. Dependency
Categorial Grammar and Coordination. Linguistics,
31:855?902.
David Reitter, Julia Hockenmaier, and Frank Keller.
2006. Priming Effects in Combinatory Categorial
Grammar. In Proceedings of EMNLP-2006.
Mark Steedman and Jason Baldridge. To Appear. Com-
binatory Categorial Grammar. In Borsley and B?rjars
(Borsley and B?rjars, To Appear).
Mark Steedman. 1996. Surface Structure and Interpre-
tation. MIT Press.
Mark Steedman. 2000. The Syntactic Process. MIT
Press.
Michael White and Jason Baldridge. 2003. Adapting
Chart Realization to CCG. In Proceedings of ENLG.
Michael White. 2006. Efficient Realization of Coordi-
nate Structures in Combinatory Categorial Grammar.
Research on Language and Computation, 4(1):39?75.
Kent Wittenburg. 1987. Predictive Combinators: A
Method for Efficient Processing of Combinatory Cat-
egorial Grammars. In Proceedings of ACL 25.
Luke Zettlemoyer and Michael Collins. 2007. On-
line Learning of Relaxed CCG Grammars for Parsing
to Logical Form. In Proceedings of EMNLP-CoNLL
2007.
334
Proceedings of the 8th International Workshop on Tree Adjoining Grammar and Related Formalisms, pages 49?56,
Sydney, July 2006. c?2006 Association for Computational Linguistics
Negative Concord and Restructuring in Palestinian Arabic:
A Comparison of TAG and CCG Analyses
Frederick M. Hoyt
Linguistics Department
University of Texas at Austin
1 University Station B5100
Austin, TX, USA 78712-0198
fmhoyt@mail.texas.edu
Abstract
This paper discusses interactions between
negative concord and restructuring/clause
union in Palestinian Arabic. Analyses
formulated in Tree Adjoining Grammar
and Combinatorial Categorial Grammar
are compared, with the conclusion that a
perspicuous analysis of the the intricacies
of the data requires aspects of both for-
malisms; in particular, the TAG notion of
the extended domain of locality and the
CCG notion of flexible constituency.
1 Palestinian Arabic Negative Concord
In Palestinian Arabic (PA), negative concord oc-
curs with the determiner wEla ?(not) even one,?
where negative concord describes the failure of an
expression which expresses negation in some sen-
tences to do so in others. Phrases formed with
wEla (?wEla-phrases?) are interpreted either as
negative quantifiers (?NQ-wEla)? or as polarity-
sensitive indefinites (?NPI-wEla?). wEla-phrases
have an NQ-interpretation preceding the finite
verb or verb complex in a clause (1-2) or in frag-
ment answers (3-4):
(1) wEla
not.even
h
?
ada
one.MS
fi:-hUm
in-them
s??:f-ni.
saw.3ms-me
?Not even ONE of them saw me!?
(2) wEla
not.even
yo:m
day
Qag?abni
pleased.3ms-me
l-Ek?l.
the-food
?There wasn?t even one day the food pleased me!?
(3) Q: s?u
what
k
?
al-l-ak?
said.3ms-to-you
A: wEla
not.even
is?i.
thing
?What did he say to you? Nothing at all.?
(4) Q: mi:n
who
s?Ufti?
saw.2fs
A: wEla
not.even
s
?
u:s
?chick
?bn
son
yome:n.
two-days
?Who did you see? Not even a two-day old chick!?
A preverbal wEla-phrase preceding a sentential
negation marker causes the sentence to have a
double-negation reading (5: compare with 2):
(5) wEla
not.even
yo:m
day
ma-Qag?abni
not-pleased.3ms-me
l-Ek?l.
the-food
?There wasn?t one day the food didn?t please me!?
?The food pleased me every day.?
NQ-wEla never occurs within the scope of nega-
tion but does occur in post-verbal positions which
are not ?thematically entailed? by the verb (6-7)1:
(6) huwwa
he
wEla
not.even
is?i!
thing
?He is NOTHING!?
(7) hiyya
she
mag?ru:ra
conceited.fs
Qala
upon
wEla
not.even
is?i.
thing
?She is conceited for absolutely NO reason!?
The NPI-interpretation is only available within the
scope of antimorphic operators (Zwarts, 1993),
like sentential negation or b?du:n ?without? (8-9):
(8) t?l?Qti
left.2fs
b?du:n-ma
without-that
tk
?
u:li
say.2fs
wEla
even
is?i.
thing
?You left without saying even one thing!?
(9) la-s-sEnna
to-the-year
ma-baQt
?
i:-hUm
not-give.1s-them
wElla
even
lUk
?
mi
bite
Ekl.
food
?Up to a year I don?t give them even a bite of
[solid] food.?
More than one wEla-phrase can have the NPI-
interpretation at a time:
(10) ma-k
?
Ult
not-said.1s
wEla
even
is?i
thing
wEla
to-even
la-h
?
ada
one
fi:-hUm.
in-them
?I didn?t give anything at all to even one of them.?
It follows from the distributions of NQ- and NPI-
wEla that wEla-phrases are blocked from post-
verbal argument positions which are thematically
entailed and which are not within the scope of an
antimorphic operator.
1Following (Herburger, 2001), ?thematically entailed?
means that the meaning of the verb entails the existence of
an entity filling the thematic role in question.
49
1.1 Negative Concord and Locality
PA negative concord is generally subject to strict
locality constraints: a wEla-phrase must be con-
tained within the smallest inflected clause contain-
ing its licensor. It cannot be separated from its li-
censor by the boundary of either an indicative (11)
or a subjunctive/irrealis (12) complement:
(11) * ma-waQatt
not-promised.1s
[ Eh
?
ki
talk
wEla
even
maQ
with
h
?
ada
one
fi:-hUm
in-them
].
(12) * batwak
?
k
?
aQ-?s?
believe.1s-neg
[ ?nnh?
that.3fs
b?th
?
?bb
likes.3fs
wEla
even
h
?
ada
one
].
Similar sentences with weaker polarity items such
as h
?
ada or Paiy h
?
ada ?anyone? are acceptable:
(13) ma-waQatt
not-promised.1s
Eh
?
ki
talk
maQ
with
( Paiy
any
) h
?
ada
one
fi:-hUm.
in-them
?I didn?t promise to talk with any of them.?
(14) batwak
?
k
?
aQ-?s?
believe.1s-neg
?nnh?
that.3fs
b?th
?
?bb
likes.3fs
( Paiy
any
) h
?
ada.
one
?I don?t think that she likes ANY one.?
This suggests that negative concord is a strictly
bounded dependency like agreement marking, ar-
gument realization, or reflexive binding.
However, there are exceptions to this general-
ization. ?Long-distance? negative concord is pos-
sible between a matrix negation morpheme and
wEla-phrases inside the complements of a small
class of verbs, including b?dd- ?want? (15), Xalla
?to allow? (16), h
?
a:wal ?to try? (17, 25 below) or
Q?r?f ?to know how to, to be able to? (18 below):
(15) ma-b?ddna
not-want.1s
nXalli
leave.1p
wEla
even
zElami.
fellow
?We don?t want to leave even one man.?
(16) ma-Xallu:-ni:-s?
not-allowed.3mp-me-neg
?:kOl
eat.1s
wEla
even
lUk
?
mi
bite
?They wouldn?t let me eat even one bite!?
The embedding can be recursive, provided that
only verbs in this class are used (17).
(17) b?ddi:-s?
want.1s-neg
ah
?
a:w?l
try.1s
Eh
?
ki
speak.1s
wEla
even
maQ
with
h
?
ada.
one
?I don?t want try to talk with anyone at all.?
These verbs correspond to verbs found in many
other languages which trigger a process often re-
ferred to as restructuring or clause union. I fol-
low (Aissen and Perlmutter, 1983) in calling them
trigger verbs. Restructuring involves the ?stretch-
ing? of the domain of locality for certain kinds of
bounded dependencies from the complement of a
trigger verb to include the clause that it heads.
At present no other phenomena have been iden-
tified in PA which independently confirm that it
has restructuring. However, long-distance nega-
tive concord is identified as a restructuring phe-
nomenon in several languages such as West Flem-
ish (Haegeman and Zanuttini, 1996), Polish (Dzi-
wirek, 1998), and Serbian (Progovac, 2000). As
such, I assume for now that long-distance negative
concord in PA is a form of restructuring as well.
2 A TAG Analysis
Restructuring involves a seeming paradox involv-
ing a dependency which is non-local in the hier-
archical structure of a sentence but local in its se-
mantics. Tree Adjoining Grammars are well suited
for analyzing restructuring because the distinction
between a derived tree and the derivation tree asso-
ciated with it provides two notions of locality. Re-
structuring phenomena which have been analyzed
with TAGs include clitic-climbing in Spanish and
Italian (Bleam, 2000; Kulick, 2000), long-distance
scrambling in German (Rambow, 1994), and long-
distance agreement in Tsez (Frank, 2006). It there-
fore is natural to explore a TAG analysis for long-
distance negative concord in PA.
To illustrate with a simple example, the nega-
tive concord dependency in (18) is licensed within
an initial tree headed by Ekt?b ?write,? and is
then ?stretched? by adjunction of the auxiliary tree
headed by Q?r?ft ?I was able to? (19):
(18) ma-Q?r?ft
not-knew.1s
Ekt?b
write.1s
wEla
even
k?lmi.
word
?I wasn?t able to write even one word.?
(19) ?:IP00
?:IP
ma:- IP*
?:IP00
?:IP
Q?r?ft IP*
?:IP00
Ekt?b NP?02
?:NP
wEla k?lmi
The locality constraint on negative concord can
then be expressed as a generalization about the
derivation tree (20): a wEla-phrase and its licen-
sor must be sisters:
(20) ?
?(02) ?(00) ?(00)
However, several properties of negative concord
in PA preclude a simple analysis like this.
50
2.1 Clause-local Dependencies
The first property is the domain of locality of the
negative concord dependency. In a simple TAG,
syntactic dependencies are licensed within an ele-
mentary tree: they are tree-local. However, nega-
tive concord in PA is clause-local, because wEla-
phrases are not licensed within the immediate tree
to which they are attached, but instead within the
immediate clausal tree containing them. For ex-
ample, wEla-phrases can be inside prepositional
phrases attached to a negative clause (21-22):
(21) ma-kaQatt
not-sat.1s
[PP g?an?b
next.to
wEla
even
h
?
ada
one
fi:-hUm
in-them
]
?I didn?t sit next to even one of them.?
(22) b?tXall?fu:-s?
disagree.2mp-neg
Qan-na
from-us
[PP bi-wEla
with-even
is?i
thing
].
?You don?t disagree with us about even one thing.?
In a simple TAG analysis, the wEla-phrase first
substitutes into the initial tree headed by the
preposition, which is then attached to the clausal
tree. The relationship between the wEla-phrase
and its licensor would therefore not be tree-local.
Clause-locality can be modeled with what I
refer to as ?Scope TAG? (Kallmeyer and Joshi,
2003), a multi-component TAG (MC-TAG) in
which quantificational NPs are tree sets containing
two parts: a ?defective? auxiliary tree IP* which
specifies the scope of the quantifier, and an NP-
tree which specifies its restriction. I refer to such
tree sets as ?scope sets.?
While Kallmeyer & Joshi?s proposal is intended
to capture the semantic scope of quantifiers, it can
also be used to express clause locality by assigning
PPs to scope sets as well, and by stipulating that
scope sets can combine with each other by means
of set-local adjunction. The IP*-node in the scope-
set of a wEla-phrase can then adjoin to the IP*-
node in the PP scope set, which in turn adjoins to
the IP-node of the initial tree.
For example, (21) above can be analyzed with
the elementary trees in (23) (trees are in abbrevi-
ated form), producing the derivation tree in (24):
(23) a. ? :
{
?1 : IP* , ?2 : NP
wEla h
?
ada
}
b. ? :
{
?1 : IP*00 , ?2 : PP
g??n?b NP?02
}
c. ?: IP
ma:- IP*
?: IP00
I
kaQatt
PP?02
(24) ?
?1(00)
?1(00)
?(00) ?2(02)
?2(02)
However, given (24) it is still not possible to state
a generalization about negative concord locality in
terms of sisterhood in the derivation tree.
This can be remedied by adopting the ?node-
sharing? relation proposed by (Kallmeyer, 2005).
Informally, two nodes ? and ? are in a node-
sharing relation in a derivation tree T iff they
are either in a mother-daughter relation in T at
a node address A, or there is a sequence S of
nodes N1 . . . Nn which is the transitive closure of
a mother-daughter relation in T in which the node
pairs are related in terms of the root node or foot
node in an auxiliary tree.
On this basis, the negative concord locality gen-
eralization is that a wEla-phrase and its licensor
are ?shared-node sisters? in the derivation tree,
where shared-node sisters are two nodes A and B
which are each in a shared-node relation with a
single node C . For example, in (24) ? is a shared-
node parent of both ?1 and ?. Accordingly, ?1
and ? are shared-node sisters with respect to ?.
2.2 Trigger Verbs and Complement Type
The second property of PA long-distance negative
concord that complicates a TAG analysis has to
do with the kinds of complement that they take.
TAG approaches to restructuring exploit ?reduced
complement? analyses in which trigger verbs take
?smaller? complements than other kinds of sub-
ordinating verbs do (Bleam, 2000; Kulick, 2000).
However, PA trigger verbs are mixed in terms of
the types of complements they take: h
?
a:wal ?try
to? or k
?
?d?r ?be able to? optionally allow a com-
plementizer P?nn- (25-26), while b?dd- ?want? or
Q?r?f ?know to, be able to? exclude it (27-28):
(25) ma-h
?
a:walt
not-tried.1s
( ?nni
that.1s
) Eh
?
ki
speak.1s
wEla
even
maQ
with
h
?
ada.
one
?I didn?t try to talk with even one of them.?
(26) ma-k
?
?d?rt
not-could.1s
( ?nni
that.1s
) Eh
?
ki
speak.1s
wEla
even
maQ
with
h
?
ada.
one
?I wasn?t able to speak with even one of them.?
(27) ma-b?dd-i:-?s?
not-want.1s-neg
( *?nni
that.1s
) as?u:f
see.1s
wEla
even
h
?
ada.
one
?I don?t want to see even ONE of them.?
(28) ma-Q?r?ft
not-knww.1s
( *?nni
that.1s
) Ekt?b
write.1s
wEla
even
k?lmi.
word
?I wan?t able to write even one word.?
51
Assuming that the presence of a complementizer
indicates a CP category, and that the presence of
agreement marking on the verb indicates an IP cat-
egory, what these data show is that some trigger
verbs allow either CP or IP complements, while
others allow only IP complements. It follows that
complement category cannot be exploited as a way
to distinguish trigger verbs from non-trigger verbs.
This is an essential distinction because restruc-
turing is not the only phenomenon which in-
volves adjunction. For example, long-distance A-
dependencies are analyzed in TAG as involving
adjunction of auxiliary trees. (29-30) show that
the same verbs which block long-distance nega-
tive concord allow long-distance A-dependencies,
indicating that they must also be analyzed as auxil-
iary trees. Moreover, (30) can include the comple-
mentizer P?nn-, indicating that it takes the same
kinds of complements as do trigger verbs like
k
?
?d?r ?be able? and h
?
a:wal ?try?:
(29) mi:n
who
b?t?twak
?
k
?
aQ
believe.2ms
yah
?
sal
get.3ms
Qala
upon
k?:s
cup
?l-Q?:l?m?
the-world
?Who do you think will get the World Cup??
(30) s?u
what
waQatt
promised.2ms
( ?nnak
that.2ms
) taQt
?
i:-h??
give.2ms-her
?What did you promise to give her??
A failure to distinguish between trigger verbs and
non-trigger verbs will over-predict the availability
of long-distance negative concord.
To make this distinction, I use Dowty?s (Dowty,
1994) analysis of negative concord licensing.
Dowty models negative concord with a ?polarity?
feature which takes ?+? or ?-? values. When a neg-
ative concord item combines with a clausal cate-
gory it specifies (by unification) the clause as hav-
ing a negative value for this feature. In addition,
Dowty assumes that root clauses must have a pos-
itive value for the feature: I refer to this as the root
clause polarity constraint. Negation morphemes
(as well as b?du:n ?without?) take a complement
specified as POL- and return a constituent with a
POL+ feature. A root clause containing a negative
concord item and lacking a negation morpheme
will have a POL- feature for its root node and vio-
late the root clause polarity constraint. This de-
rives the requirement that wEla phrases in root
clauses be ?roofed? by a negation morpheme.
Turning to long-distance negative concord, trig-
ger verbs can be distinguished from non-trigger
verbs by stipulating that non-trigger verbs take
POL+ complements, while trigger verbs (and aux-
iliary verbs) impose no polarity specification and
instead inherit the polarity feature with which their
complement is specified2. An analysis of this kind
applied to (18) would result in a derived tree (32)
which satisfies the root clause polarity constraint.
(31) ?:IP
IPPOL+
ma:- IP*POL-
?:IP
Q?r?ft IP*
?1 :IP*POL-
?:IP
Ekt?b NP?
?2 :NP
wEla k?lmi
(32) IPPOL+
ma:- IPPOL-
Q?r?ft IP*POL-
Ekt?b NP?
wEla k?lmi
2.3 Negation Morphology
The last property of long-distance negative con-
cord sentences to be dealt with has to do with
negation morphology in PA. Negation is expressed
with some combination of the proclitic ma:- and
the enclitic -?. -? appears to be a second-position
attaching to the first word-sized constituent in the
string produced by an IP-constituent, provided that
the word contains a morpheme expressing person
features (Awwad, 1987; Eid, 1993).
The most frequent distribution has -? attached
to the leftmost verb stem in a clause, which may
be the main verb in a mono-verbal predicate (33),
or to the leftmost auxiliary in a clause with com-
pound tense-aspect-mood marking (34-35):
(33) ma-n?mt-?s?
not-slept.1s-neg
fi-l-le:l.
in-the-night
?I didn?t sleep last night.?
(34) ma-kUnt-?s?
not-was.1s-neg
Qa:r?f
know.actpart.ms
we:n
where
ah
?
Ut
?
t
?
-u.
put.1s-it
?I didn?t know where to put it.?
(35) ma-Qad-s?
not-returned.3ms-neg
k
?
al-l-i
said.3ms-to-me
P?nnu
that.3ms
s?tara
bought.3ms
sayya:ra.
car
?He didn?t tell me anymore that he bought a car.?
2This is similar to Frank?s (Frank, 2006) proposal for an-
alyzing long-distance agreement in Tsez.
52
In other kinds of sentences, -? attaches to a variety
of non-verbal expressions, including the indefinite
pronoun h
?
ada ?(any)one? (36), the existential par-
ticle fi: (37), inflected prepositions (38), and the
adverb QUmr ?ever? (39):
(36) ma-h
?
ada:-s?
not-one.ms-neg
k?:n
was.3ms
y?Qg??r-na.
rent.3ms-us
?No one would rent to us.?
(37) ma-f?s?-s?
not-exist-neg
fi-d-d?nya
in-the-word
m???l-h?n.
like-them.fp
?There isn?t [anything] in the world like them.?
(38) b?k
?
i:-l-E
was.3ms-to-him
faras
mare
ma-lh?:-s?
not-to-her-neg
UXt.
sister
?He had a mare [that was] without compare.?
(39) fi:
exist
n?:s
people.3fs
ma-QUmr-h?:-s?
not-age-3fs-neg
h
?
at
?
t
?
at
put.3fs
mawd
?
u:Q
subject
fi-l-mUntada.
in-the-club
?There are people who have never posted a thread
on almontada.com.?
What these expressions all have in common with
verb stems is that they occur as the first constituent
in the clause and that they all contain a morpheme
expressing person features. It follows that -? is
constrained to occur in the second position at-
tached to a word that is inflected for person.
The cases in which -? attaches to a verb can be
modeled by assuming that ma:- and -? are part of
a tree set and that -? adjoins to right of an I-node:
(40)
{
?1 : IP
ma:- IP*
, ?2 : I
I -?
}
(41) IP
IP
ma:- IP*
IP
I PP
fi-l-le:l
I
I* -?
I
n?mt
The cases with -? attached to a non-verbal expres-
sion require a second analysis. One possibility is
to assume a second tree for -? like the first, except
with -? preceding the foot node. This requires stip-
ulating a morphological output filter that affixes -?
to the preceding word and blocks use of ?2 in (40):
(42)
{
?1 : IP
ma:- IP*
, ?2 : I
-? I
}
(43) IP
IP
ma:- IP*
IP
NP
h
?
ada
I
I VP
y?Qg??rna
I
-? I*
I
k?:n
This is still not adaquate for (35), in which -? is
attached to a ?serial auxiliary? (Hussein, 1990),
one of a small set of verb stems which function
as aspectual adverbs and which ?agree? with the
main verb in aspectual form and agreement mark-
ing. Serial auxiliaries are plausibly analyzed as
adverbial IP-auxiliary trees as in (44):
(44) IP
I
Qad
IP*
IP
IP
I
k
?
al-l-i
CP?
The structure resulting from (44) has two I-nodes,
and another constraint would have to be stipulated
forcing -? to adjoin to the leftmost of the two.
To sum up, a TAG analysis can be formulated
for PA long-distance negative concord which al-
lows the locality of negative concord licensing to
be stated as a generalization about shared-node
derivation trees. However, the analysis requires
brute force stipulations to capture the morpholog-
ical expression of negation in PA negative sen-
tences. Moreover, the TAG analysis does not pro-
vide a way to express the simple morphological
generalization that -? falls in the second position
in the string generated by the clause.
3 A CCG Analysis
The TAG analysis has difficulty accommodating
the distribution of -? because TAG trees are phrase
structures, making it difficult to state constraints
on strings of words rather than on hierarchical
structure. Categorial Grammar, on the other hand,
is a string calculus, and its operations result in
string concatenation rather than structure expan-
sion. For this reason, a CG can be constrained to
not generate particular kinds of strings, rather than
53
particular trees. A CG therefore provides a way to
state constraints on the distribution of -? more di-
rectly than a phrase-structure grammar does.
I assume a Combinatory Categorial Gram-
mar (Steedman, 1996; Steedman, 2000b;
Baldridge, 2002). The basis of the CCG analysis
is that npI-wEla-phrases are treated as type-raised
categories which look for an s category to their
left. I continue following Dowty in assuming the
root clause polarity principle and in assuming
that wEla-phrases specify a POL- feature on
the s-headed category that they combine with.
NQ-wEla phrases, on the other hand, are treated as
negative quantifiers which look for their s-headed
argument to the right:
(45) NQ-wEla :- (Spol+$/(Spol+\$/NP))/NP :
?P?Q.?x[P (x) & Q(x)]
(46) NPI-wEla :- (Spol?$\(Spol?$/NP))/NP :
?P?Q.??x[P (x) & Q(x)]
The negation morphemes are treated as follows (-?
is semantically vacuous):
(47) ma:- :- Spol+$/Spol?$ : ?P st .?P (e)
(48) -? :- Spol?$\?Spol?$
Verbs have the following types3:
(49) ?Uft :- S\NP/NP : ?y.?x.[x saw y]
(50) h
?
a:walt :- S\NP/(s\NP) : ?x.?P st .[x tries P (x)]
The -? morpheme fixes a clause with a POL-
feature, while ma:- takes the POL- clausal cate-
gory and changes its value for the polarity feature
to POL+, satisfying the root clause polarity con-
straint. This works much as the TAG analysis did.
The slash in the type for -? is marked with the
?crossed composition? modality. This allows -? to
combine with a preceding s-headed category while
returning a category looking for its arguments to
the right (Figures 1-2)4.
Turning to long-distance negative concord, a
CCG analysis, like the TAG analysis above, has
to account for the distinction between trigger
verbs and non-trigger verbs. The CCG analog of
auxiliary-tree adjunction is function composition.
The long-distance negative concord dependency
therefore involves a specific kind of composition
subject to stricter constraints than is the more gen-
eral kind which produces A-dependencies.
In order to model this, I adapt Hepple?s (Hep-
ple, 1990) approach to modeling island constraints
3The type assignments ignore the representation of VS
word order and pro-drop sentences.
4Logical forms are surpressed in the derivations.
in Categorial Type Logic. In brief, Hepple?s ap-
proach is to assign unary modalities to the argu-
ments of clausal categories (such as subordinat-
ing verbs or relative pronouns) as well as to the
nominal argument of a type-raised extracted cate-
gory (such as a question word or topicalized noun
phrase). The former are referred to as ?bounding
modalities,? and the latter as ?penetrative modal-
ities.? Interaction axioms require the penetrative
modality of an extraction category to be compati-
ble with the bounding category of its argument in
terms of a type hierarchy defined over modalities.
The unary modalities in CTL can be duplicated
in CCG as features on category labels, so to ap-
proximate Hepple?s proposal, I define a feature hi-
erarchy as follows:
(51) h
g c
Each pair of sisters in the hierarchy consists of a
?penetrative feature? and the ?bounding feature?
which blocks it (following Hepple?s terminology).
The feature c is an penetrative feature which is
blocked by the g feature, and h is the most gen-
eral or permissive bounding feature.
The idea is that categories which participate in
restructuring dependencies are marked with the c
penetrative feature, which is spread across all the
arguments of a complex type:
(52) wEla h
?
ada :- Sc$\(Sc$/NPc)
Trigger verbs impose the h bounding feature on
their complements, while non-trigger embedding
verbs impose the g feature:
(53) b?dd- ?want,? Q?r?f ?be able to,? h
?
a:wal ?try to? :-
S\NP/(Sh\NPh)
(54) waQad-yu:Q?d ?promise to? :- S\NP/(Sg\NPg)
According to (51), categories marked with fea-
ture h are compatible with categories marked with
feature c, while categories marked with feature g
clash with it. The clash between g and c expresses
the restriction on restructuring dependencies.
For example, in an analysis of (18), wEla k?lmi
applies to the composed constituent, Q?r?ft Ekt?b.
This is possible because the penetrative feature
c on the wEla-phrase is compatible with the h
bounding feature which Q?r?ft passes to its com-
plement (Figure 3).
Long-distance negative concord is blocked in
two ways. A wide-scope derivation (in which the
wEla-phrase combines with the composition of the
54
matrix and embedded verbs) is blocked by a fea-
ture clash between the g and c features (Figure
4). A narrow scope derivation (in which the wEla-
phrase combines with the embedded verb only)
is blocked because of a resulting clash in polar-
ity features between the embedded clause and the
matrix verb (Figure 5).
4 Comparison and Discussion
While the TAG analysis imposes certain limita-
tions on the ordering of morphemes, it does pro-
vide a very simple and intuitive way to describe
restructuring verbs as a natural class that includes
auxiliary verbs, the other kinds of verb stems
which are ?transparent? to negative concord. In
contrast, The CCG analysis has a technical flavor,
and it is not clear to what extent it reflects a lin-
guistic intuition. The CCG analysis does, how-
ever, capture the distribution of the negation mor-
phemes in PA. It would therefore be interesting
to explore further whether the Hepple-style fea-
ture/modality approach could be associated with
some linguistic phenomenon.
One interesting possibility would be to use
Steedman?s theory of intonation (Steedman,
2000a) to explore the prosodic properties of re-
structuring sentences in Arabic (and in other lan-
guages) to see whether the availability of restruc-
turing correlates with certain prosodic properties.
There has been very little study of sentential into-
nation in Arabic, and so very little empirical ba-
sis for an investigation. However, should such an
investigation bear fruit, it might suggest that Hep-
ple?s approach to extraction constraints could be
recast as a theory of intonation. This would allow
powerful generalizations to be stated relating the
prosodic properties of sentences in PA and other
languages to their syntactic properties.
References
Judith Aissen and David Perlmutter. 1983. Clause reduction
in spanish. In Studies in Relational Grammar. University
of Chicago Press.
Mohammad Amin Awwad. 1987. Free and bound pronouns
as verbs in rural palestinian colloquial arabic. Journal of
Arabic Linguistics, 16:108?118.
Jason Baldridge. 2002. Lexically Specified Derivational
Control in Combinatory Categorial Grammar. Ph.D. the-
sis, University of Edinburgh.
Tonia Bleam. 2000. Clitic climbing and the power of tree
adjoining grammar. In Anne Abeill? and Owen Rambow,
editors, Tree Adjoining Grammar: Formalism, Implemen-
tation, and Linguistic Analysis. CSLI (Stanford).
David Dowty. 1994. The role of negative polarity and con-
cord marking in natural language reasoning. In Mandy
Harvey and Lynn Santelmann, editors, Proceedings from
Semantics and Linguistic Theory IV, pages 114?144,
Ithaca, New York. Cornell University.
Katarzyna Dziwirek. 1998. Reduced constructions in uni-
versal grammar: Evidence from the polish object control
construction. Natural Language and Linguistic Theory,
16:53?99.
Mushira Eid. 1993. Negation and predicate heads in ara-
bic. In Mushira Eid and Gregory Iverson, editors, Princi-
ples and Predication: The Analysis of Natural Language,
pages 135?152. John Benjamins (Philadelphia).
Robert Frank. 2006. Phase theory and tree adjoining gram-
mar. Lingua, 116:145?202.
Liliane Haegeman and Raffaella Zanuttini. 1996. Negative
concord in west flemish. In Adriana Belleti and Luigi
Rizzi, editors, Parameters and Functional Heads, pages
117?179. Oxford University Press.
Mark Hepple. 1990. The Grammar and Processing of Order
and Dependency: A Categorial Approach. Phd, Univer-
sity of Edinburgh.
Elena Herburger. 2001. Negative concord revisited. Natural
Language Semantics, pages 289?333.
Lutfi Hussein. 1990. Serial verbs in colloquial arabic. In
B. D. Joseph and A. M. Zwicky, editors, When Verbs Col-
lide: Papers from the 1990 Ohio State Mini-Conference on
Serial Verbs, pages 340?354. The Ohio State University.
Laura Kallmeyer and Aravind Joshi. 2003. Factoring pred-
icate argumenta and scope semantics: Underspecified se-
mantics with ltag. Research on Language and Computa-
tion, 1:3?58.
Laura Kallmeyer. 2005. Tree-local multicomponent tree ad-
joining grammars with shared nodes. Computational Lin-
guistics, 31(2):187?225.
Seth Kulick. 2000. Constraining Non-Local Dependencies
in Tree Adjoining Grammar: Computational and Linguis-
tic Perspectives. Ph.D. thesis, University of Pennsylvania.
Ljiljana Progovac. 2000. Coordination, c-command and ?lo-
gophoric? n-words. In Laurence Horn and Yasuhiko Kato,
editors, Negation and Polarity: Syntactic and Semantic
Perspectives, pages 88?114. Oxford University Press (Ox-
ford).
Owen Rambow. 1994. Formal and Computational Aspects
of Natural Language Syntax. Ph.D. thesis, University of
Pennsylvania.
Mark Steedman. 1996. Surface Structure and Interpretation.
MIT Press.
Mark Steedman. 2000a. Information structure and the
syntax-phonology interface. Linguistic Inquiry, 31:649?
689.
Mark Steedman. 2000b. The Syntactic Process. MIT Press.
Frans Zwarts. 1993. Three types of polarity items. In
F. Hamm and E. Hinrichs, editors, Semantics.
55
ma:? ?Uft ??? wEla h
?
ada
Spol+$/Spol?$ S\NP /NP Spol?$\?Spol?$ (Spol?\NP )\((Spol?\NP )/NP )
<B?
Spol?\NP /NP
<
Spol?\NP
>B?
Spol+\NP
Figure 1:
ma:? h
?
ada: ?? ??:f-ni
Spol+$/Spol?$ S/(S\NP ) Spol?$\?Spol?$ S\NP
<B?
Spol?/(S\NP )
>B
Spol+/(S\NP )
>Spol+
Figure 2:
ma:? Q?r?ft ??? Ekt?b wEla k?lmi
Spol+$/Spol?$ Sh\NP h/(Sh\NP h) Spol?$\?Spol?$ Sh\NP h/NP h (Sh,pol?\NP h)\((Sc,pol?\NP c)/NP c)
<B?
Sh,pol?\NP h/(Sh\NP h)
>B
Sh,pol?\NP h/NP h
<
Sh,pol?\NP h
>B
Sh,pol+\NP h
Figure 3:
ma:? waQatt ??? Eh
?
ki wEla maQ h
?
ada
Spol+$/Spol?$ Sh\NP h/(Sh,pol+\NP h) Spol?$\?Spol?$ Sh\NP h/pph (Sh,pol?\NP h)\((Sc,pol?\NP c)/ppc)
<B?
Sh,pol?\NP h/(Sh,pol+\NP h)
>B
Sh,pol?\NP h/NP h
?
Figure 4:
ma:? waQatt ??? Eh
?
ki wEla maQ h
?
ada
Spol+$/Spol?$ Sh\NP h/(Sh,pol+\NP h) Spol?$\?Spol?$ Sh\NP h/pph (Sh,pol?\NP h)\((Sc,pol?\NP c)/ppc)
<B?
Sh,pol?\NP h/(Sh,pol+\NP h)
<
Sh,pol?\NP h
?
Figure 5:
56
