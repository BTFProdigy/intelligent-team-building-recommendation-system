Netgraph ? Making Searching in Treebanks Easy
Ji?? M?rovsk?
Charles University in Prague
Faculty of Mathematics and Physics
Institute of Formal and Applied Linguistics
Malostransk? n?m. 25, 118 00 Prague 1, Czech Republic
mirovsky@ufal.mff.cuni.cz
1 Introduction
Searching in a linguistically annotated treebank is 
a principal task that requires a sophisticated tool. 
Netgraph has been designed to perform the search-
ing with maximum comfort and minimum require-
ments on its users. Although it has been developed 
primarily for the Prague Dependency Treebank 2.0 
(Haji? et al 2006), it can be used with other tree-
banks too, both dependency and constituent-struc-
ture types, as long as the treebank is transformed to 
a suitable format.
In  this  paper,  we present  Netgraph query  lan-
guage and on many examples show how it can be 
used to search for frequent linguistic phenomena.
In section 1 (after this introduction) we extreme-
ly briefly  describe  the  Prague Dependency Tree-
bank 2.0, just to make the examples in the subse-
quent text more understandable. In the next subsec-
tion  we mention  the  history  of  Netgraph and its 
properties as a tool.
In  section  2 we  offer  an  introduction  to  the 
query language of Netgraph along with the idea of 
meta-attributes  and  what  they  are  good  for,  and 
present  linguistically  motivated  examples  of 
queries in the Prague Dependency Treebank.
Finally, in  section 3 we offer some concluding 
remarks.
1.1 Prague Dependency Treebank 2.0
The Prague Dependency Treebank 2.0 (PDT 2.0, 
see Haji? et al 2006, Haji? 2004) is a manually an-
notated  corpus  of  Czech.  It  is  a  sequel  to  the 
Prague Dependency Treebank 1.0 (PDT 1.0,  see 
Haji? et al 2001a, Haji? et al 2001b).
The texts in PDT 2.0 are annotated on three lay-
ers - the morphological layer, the analytical layer 
and the tectogrammatical layer.  The corpus size is 
almost 2 million tokens (115 thousand sentences), 
although ?only? 0.8 million tokens  (49 thousand 
sentences) are annotated on all three layers. By 'to-
kens' we mean word forms, including numbers and 
punctuation marks.
On the morphological layer (Hana et al 2005), 
each token of every sentence is annotated with a 
lemma (attribute m/lemma), keeping the base form 
of the token, and a tag (attribute m/tag), keeping 
its  morphological  information.  Sentence  bound-
aries are annotated here, too.
The analytical layer roughly corresponds to the 
surface syntax of the sentence; the annotation is a 
single-rooted dependency tree with labeled nodes 
(Haji? et al 1997, Haji? 1998). Attribute afun de-
scribes the type of dependency between a depen-
dent node and its governor. The nodes on the ana-
lytical layer (except for technical roots of the trees) 
also correspond 1:1 to the tokens of the sentences. 
The  order  of  the  nodes  from left  to  right  corre-
sponds exactly to the surface order of tokens in the 
sentence (attribute  ord). Non-projective construc-
tions (that are quite frequent  both in Czech (Ha-
ji?ov?  et  al.  2004)  and  in  some other  languages 
(see  Havelka 2007)) are allowed.
The tectogrammatical layer captures the linguis-
tic meaning of the sentence in its context. Again, 
the  annotation  is  a  dependency tree  with labeled 
nodes (see Haji?ov? 1998). The correspondence of 
the nodes to the lower layers is more complex here. 
It is often not 1:1, it can be both 1:N and N:1. It 
was shown in detail in M?rovsk? (2006) how Net-
graph deals with this issue.
Attribute  functor describes  the  dependency 
between a dependent node and its governor. A tec-
945
togrammatical lemma (attribute  t_lemma) is as-
signed to every node. Grammatemes, which keep 
additional annotation, are rendered as a set of 16 
attributes  grouped  by  the  ?prefix?  gram (e.g. 
gram/verbmod for verbal modality).
Topic  and  focus  (Haji?ov?  et  al.  1998)  are 
marked  (attribute  tfa),  together  with  so-called 
deep word order reflected by the order of nodes in 
the annotation (attribute deepord).
Coreference relations between nodes of certain 
category types are captured (Ku?ov? et al 2003), 
distinguishing also the type of the relation (textual 
or grammatical).  Each node has an identifier  (at-
tribute  id)  that  is  unique  throughout  the  whole 
corpus.  Attributes   coref_text.rf and 
coref_gram.rf contain  ids  of  coreferential 
nodes of the respective types.
1.2 Netgraph as a Tool
The development of Netgraph started in 1998 as a 
topic  of  Ondru?ka's  Master's  thesis  (Ondru?ka 
1998), and has been proceeding along with the on-
going annotations of the Prague Dependency Tree-
bank 1.0 and later  the Prague Dependency Tree-
bank 2.0. Now it is a fully functional tool for com-
plex searching in PDT 2.0 and other treebanks.
Netgraph is  a  client-server  application that  al-
lows multiple users to search the treebank on-line 
and simultaneously through the Internet.  The serv-
er (written in C) searches the treebank, which is lo-
cated at the same computer or local network. The 
client (written in Java2) serves as a very comfort-
able graphical user interface and can be located at 
any node in the Internet.  The client exists in two 
forms: as an applet and as a stand-alone applica-
tion. The applet version can be run from Netgraph 
home page and searches  in PDT 2.0.  The stand-
alone version can be downloaded from the same 
page  and  can  connect  anonymously  to  PDT  2.0 
server.  More  information  can  be  found  on  Net-
graph home page (http://quest.ms.mff.cuni.cz/net-
graph).
The client sends user queries to the server and 
receives  results  from it.  Both  the  server  and the 
client also can, of course, reside at the same com-
puter. Authentication by the means of login names 
and passwords is provided. Users can have various 
access permissions.
A detailed description of the inner architecture 
of Netgraph and of the communication between the 
server  and the client was given in M?rovsk?, On-
dru?ka and Pr??a (2002).
Netgraph server requires the treebank in FS for-
mat,  encoded in UTF-8.  A formal  description of 
the format can be found in Haji? et al 2001a. Net-
graph query  language,  presented  in the  next  sec-
tion, is an extension of FS format.
2 Netgraph Query Language
In this section we give an introduction to Netgraph 
query language. We show on a series of examples 
how some frequent  linguistic  phenomena  can  be 
searched for.
2.1 The Query Is a Tree
The query in Netgraph is a tree that forms a subtree 
in the result trees. The treebank is searched tree by 
tree and whenever the query is found as a subtree 
of a tree (we say the query and the tree match), the 
tree becomes part of the result.  The result is dis-
played tree by tree on demand. The query can also 
consist of several trees joined either by AND or OR 
relation. In that case, all the query trees at the same 
time (or at least one of the query trees, respective-
ly) are required to match the result tree.
The query has both a textual form and a graphi-
cal form. In the following text, we will use its tex-
tual form for simple queries and its graphical form 
(or both forms) for more advanced queries.
The syntax of the language is very simple. In the 
textual  form,  square  brackets  enclose a node,  at-
tributes  (pairs  name=value) are separated by a 
comma, quotation marks enclose a regular expres-
sion in a value. Parentheses enclose a subtree of a 
node, brothers are separated by a comma. In multi-
ple-tree queries, each tree is on a new line and the 
first line contains only a single AND or OR. Alterna-
tive  values  of  an attribute,  as  well  as  alternative 
nodes,  are  separated  by  a  vertical  bar.  It  almost 
completes the description of the syntax, only one 
thing (references)  will  be added in the following 
subsection.
The simplest possible query (and probably of lit-
tle interest on itself) is a simple node without any 
evaluation:  []. It matches all nodes of all trees in 
the treebank, each tree as many times as how many 
nodes there are in the tree. Nevertheless, we may 
add  conditions  on  its  attributes,  optionally  using 
regular expressions in values of the attributes. Thus 
946
we may search e.g. for all nodes that are Subjects 
and nouns but not in first case:
[afun=Sb, m/tag="N...[^1].*"].
We may notice here that regular expressions al-
low  the  first  (very  basic)  type  of  negation  in 
queries.
More interesting queries usually consist of sev-
eral nodes, forming a tree structure. The following 
example  query  searches  for  trees  containing  a 
Predicate  that  directly  governs  a  Subject  and  an 
Object:
[afun=Pred]([afun=Sb],[afun=Obj]).
Please  note  that  there  is  no  condition  in  the 
query on the order of the Subject and the Object, 
nor  on  their  left-right  position  to  their  father.  It 
does  not prevent  other nodes  to  be directly  gov-
erned by the Predicate either.
2.2 Meta-Attributes
This  simple  query  language,  described  briefly  in 
only a few examples, is quite useful but not power-
ful  enough.  There  is  no  possibility  to  set  a  real 
negation, no way of restricting the position of the 
query in the result tree or the size of the result tree, 
nor the order of nodes can be controlled. To allow 
these and other things,  meta-attributes  have been 
added to the query system.
Meta-attributes are not present in the corpus but 
they pretend to be ordinary attributes and the user 
uses  them  the  same  way  like  normal  attributes. 
Their  names  start  with  an  underscore.  There  are 
eleven meta-attributes, each adding some power to 
the query language, enhancing its semantics, while 
keeping  the  syntax  of  the  language on  the  same 
simple  level.  We present  several  of  the  meta-at-
tributes in this subsection, some others will be pre-
sented  in  the  subsequent  section,  when  they  are 
needed.  A  detailed  description  of  the  principal 
meta-attributes was given in M?rovsk? (2006).
Coordination is a frequent phenomenon in lan-
guages. In PDT (and in most other treebanks, too) 
it is represented by a coordinating node. To be able 
to skip (and effectively ignore) the coordination in 
the queries, we have introduced the meta-attribute 
_optional that  marks  an  optional  node.  The 
node then may but does not have to be in the result. 
If  we  are  interested,  for  example,  in  Predicates 
governing Objects, we can get both cases (with co-
ordination and without it) in one query using this 
meta-attribute:
[afun=Pred]([afun=Coord,_op-
tional=1]([afun=Obj])).
The Coordination becomes optional. If there is a 
node between the Predicate and its Object in the 
result  tree, it has to be the Coordination. But the 
Object may also be a direct son of the Predicate, 
omitting  the  optional  Coordination.  The  picture 
demonstrates  that  the  graphical  representation  of 
the  query  is  much more  comprehensible  than  its 
textual version:
There  is  a  group  of  meta-attributes  of  rather 
technical nature, which allow setting a position of 
the query in the result tree, restricting the size of 
the result tree or its part, and restricting number of 
direct sons of a node. Meta attribute _depth con-
trols the distance of a node from the root (useful 
when searching for a phenomenon in subordinated 
clauses, for  example),  _#descendants controls 
number of nodes in the subtree of a node (useful 
e.g. when searching for ?nice? small examples of 
something),  _#sons controls  number  of  (direct) 
sons of a node.
Controlling number of direct sons (mainly in its 
negative sense) is important for studying valency 
of words (Haji?ov? and Panevov? 1984). The fol-
lowing example searches on the tectogrammatical 
layer of PDT. We want a Predicate that governs di-
rectly an Actor and a Patient and nothing else (di-
rectly):
[functor=PRED,_#sons=2]([func-
tor=ACT],[functor=PAT]).
The graphical representation of the query is:
If  we  replaced  PAT  with  ADDR,  we  might 
search for errors in the evaluation, since the theory 
947
forbids Actor and Addressee being the only parts 
of a valency frame.
So far, we could only restrict number of nodes. 
But we often want to restrict a presence of a certain 
type of node. We want to specify that there is not a 
node of a certain quality. For example, we might 
want to search (again on the tectogrammatical lay-
er)  for  an  Effect  without  an  Origo  in  a  valency 
frame. The meta-attribute that allows this real type 
of negation is called _#occurrences. It controls 
the  exact number of occurrences of a certain type 
of node, in our example of Origos:
[functor=PRED]([functor=EFF],
[functor=ORIG,_#occurrences=0])
with graphical representation:
It says that the Predicate has at least one son ? 
an Effect, and that the Predicate does not have an 
Origo son.
There is still one important thing that we cannot 
achieve with the meta-attributes presented so far. 
We cannot set any relation (other than dependen-
cy) between nodes in the result trees (such as or-
der, agreement in case, coreference).  All this can 
be done using the meta-attribute _name and a sys-
tem of references. The meta-attribute  _name sim-
ply names a node for a later reference from other 
nodes.
Curly brackets enclose a reference to a value of 
an attribute of the other node (with a given name) 
in the result tree. This, along with the dot-referenc-
ing inside the reference and some arithmetic possi-
bilities, completes our description of the syntax of 
the query language from subsection 2.1.
In the following example (back on the analytical 
layer and knowing that attribute ord keeps the or-
der of the nodes (~ tokens) in the tree (~ sentence)) 
from left to right, we search for a Subject that is on 
the right side from an Object (in the tree and also 
in the sentence):
[afun=Pred]
([afun=Sb,ord>{N1.ord}],
[afun=Obj,_name=N1])
with graphical representation:
We have named the Object node N1 and speci-
fied that ord of the Subject node should be bigger 
than  ord of  the  N1 node.  If  we  used 
ord>{N1.ord}+5, we would require them to be 
at least five words apart.
Meta-attribute  _#lbrothers  (_#rbrothers)  con-
tains number of left (right) brothers of a particular 
node in the result tree. Thus, we can define that a 
node (e.g. an Attribute) is the leftmost son of an-
other node (e.g. an Object):
[afun=Obj]([afun=Atr,_#lbroth-
ers=0]).
Meta-attribute  _transitive defines a transi-
tive  edge.  The following example  searches  for  a 
verb  node  that  governs  transitively  another  verb 
node:
[m/tag="V.*"]([m/tag="V.*",_tran-
sitive=true]).
If we do not want them to be direct father and 
son, we have two possibilities:  Either we put an-
other node without any evaluation in between them 
in the query:
[m/tag="V.*"]([]([m/tag="V.*", 
_transitive=true]))
with graphical representation:
or, we can use meta-attribute _depth and refer-
ences:
[m/tag="V.*",_name=N1]
([m/tag="V.*",_transitive=true,
_depth>{N1._depth}+1])
which  is  perhaps  a  little  bit  more  complex.  The 
graphical representation of the query is:
948
Using several meta-attributes  in one query can 
form a powerful  combination.  The following ex-
ample searches for the rightmost list descendant of 
a Predicate:
[afun=Pred]([_transitive=true, 
_#sons=0,_name=N1],[_transi-
tive=true,_#sons=0, 
ord>{N1.ord},_#occurrences=0])
with graphical representation:
  :
The first transitive descendant of the Predicate is 
the list (_#sons=0) we are looking for. The sec-
ond transitive descendant is a list that we do not 
want to be in the result (with higher  ord). There-
fore, we set _#occurrences to zero.
3 Conclusion
We have presented  Netgraph query  language,  its 
basics  and  also  its  advanced  techniques,  namely 
meta-attributes, references and their combination.
We have demonstrated that many linguistic phe-
nomena can be searched for using this language. It 
can  be  shown  (M?rovsk?  2008)  that  Netgraph 
querying power outperforms the querying power of 
TGrep  (Pito  1994),  which  is  a  traditional  (and 
nowadays  outdated)  treebank  searching  tool.  On 
the other hand, it  seems (it  has not been studied 
thoroughly  yet)  that  Netgraph has  slightly  lesser 
searching  power  than  TGrep2  (Rohde  2005), 
which  can  use  any  boolean  combination  of  its 
searching patterns.
Acknowledgement    The research reported in this 
paper was supported by the Grant Agency of the 
Academy  of  Sciences  of  the  Czech  Republic, 
project IS-REST (No. 1ET101120413).
References
Haji? J. et al 2006. Prague Dependency Treebank 2.0. 
CD-ROM LDC2006T01, LDC, Philadelphia, 2006.
Haji? J. 2004. Complex Corpus Annotation: The Prague 
Dependency Treebank. Jazykovedn? ?stav  ?. ?t?ra,  
SAV, Bratislava, 2004.
Haji? J., Vidov?-Hladk? B., Panevov? J., Haji?ov? E., 
Sgall P., Pajas P. 2001a. Prague Dependency Tree-
bank  1.0  (Final  Production  Label).  CD-ROM LD-
C2001T10, LDC, Philadelphia, 2001.
Haji?  J.,  Pajas  P.  and  Vidov?-Hladk?  B.  2001b.  The 
Prague Dependency Treebank: Annotation Structure 
and  Support. In  IRCS  Workshop  on  Linguistic  
databases, 2001, pp. 105-114.
Hana J.,  Zeman D.,  Haji?  J.,  Hanov?  H.,  Hladk?  B., 
Je??bek E. 2005. Manual for Morphological Annota-
tion, Revision for PDT 2.0.  ?FAL Technical Report  
TR-2005-27, Charles University in Prague, 2005.
Haji? J. et al 1997. A Manual for Analytic Layer Tag-
ging  of  the  Prague  Dependency  Treebank.  ?FAL 
Technical Report TR-1997-03, Charles University in  
Prague, 1997.
Haji? J. 1998. Building a Syntactically Annotated Cor-
pus: The Prague Dependency Treebank. In Issues of  
Valency and Meaning, Karolinum, Praha 1998, pp. 
106-132.
Haji?ov? E., Havelka J., Sgall P., Vesel? K., Zeman D. 
2004. Issues of Projectivity in the Prague Dependen-
cy Treebank. MFF UK, Prague, 81, 2004.
Havelka  J.  2007.  Beyond  Projectivity:  Multilingual 
Evaluation of Constraints and Measures on Non-Pro-
jective  Structures.  In  Proceedings  of  ACL  2007, 
Prague, pp. 608-615.
Haji?ov? E. 1998. Prague Dependency Treebank: From 
analytic  to  tectogrammatical  annotations.  In:  Pro-
ceedings of 2nd TST, Brno, Springer-Verlag Berlin  
Heidelberg New York, 1998, pp. 45-50.
Haji?ov? E, Panevov? J. 1984. Valency (case) frames. 
In P. Sgall (ed.): Contributions to Functional Syntax,  
Semantics  and  Language  Comprehension,  Prague,  
Academia, 1984, pp. 147-188.
M?rovsk? J.  2006.  Netgraph:  a  Tool  for  Searching in 
Prague Dependency Treebank 2.0. In Proceedings of  
TLT 2006, Prague, pp. 211-222.
949
Haji?ov? E., Partee B., Sgall P. 1998. Topic-Focus Ar-
ticulation,  Tripartite  Structures  and  Semantic  Con-
tent.  Dordrecht, Amsterdam, Kluwer Academic Pub-
lishers, 1998.
Ku?ov?  L.,  Kol??ov?-?ezn??kov?  V.,  ?abokrtsk?  Z., 
Pajas  P.,  ?ulo  O.  2003.  Anotov?n?  koreference  v 
Pra?sk?m  z?vislostn?m  korpusu. ?FAL  Technical  
Report  TR-2003-19,  Charles  University  in  Prague,  
2003.
Ondru?ka R. 1998. Tools for Searching in Syntactically 
Annotated Corpora.  Master Thesis, Charles Univer-
sity in Prague, 1998.
M?rovsk?  J.,  Ondru?ka  R.,  Pr??a  D.  2002.  Searching 
through Prague Dependency Treebank - Conception 
and Architecture. In Proceedings of The First Work-
shop on Treebanks and Linguistic Theories, Sozopol,  
2002, pp. 114--122.
M?rovsk? J.: Netgraph Home Page: http://quest.ms.mff.-
cuni.cz/netgraph
M?rovsk? J. 2008. Towards a Simple and Full-Featured 
Treebank Query Language. In Proceedings of First  
International Conference on Global Interoperability  
for Language Resources, Hong Kong, 2008, in print.
Pito  R.  1994.  TGrep  Manual  Page.  Available  from 
http://www.ldc.upenn.edu/ldc/online/treebank/
Rohde D. 2005. TGrep2 User Manual.  Available from 
http://www-cgi.cs.cmu.edu/~dr/TGrep2/tgrep2.pdf
950
Proceedings of ACL-08: HLT, pages 37?45,
Columbus, Ohio, USA, June 2008. c?2008 Association for Computational Linguistics
PDT 2.0 Requirements on a Query Language
Ji?? M?rovsk?
Institute of Formal and Applied Linguistics
Charles University in Prague
Malostransk? n?m. 25, 118 00 Prague 1, Czech Republic
mirovsky@ufal.mff.cuni.cz
Abstract
Linguistically  annotated treebanks play an 
essential part in the modern computational 
linguistics.  The  more  complex  the  tree-
banks become, the more sophisticated tools 
are  required  for  using  them,  namely  for 
searching in the data.  We study linguistic 
phenomena annotated in the Prague Depen-
dency Treebank 2.0 and create a list of re-
quirements  these  phenomena  set  on  a 
search  tool,  especially  on  its  query  lan-
guage.
1 Introduction
Searching in a linguistically annotated treebank is 
a principal task in the modern computational lin-
guistics.  A search tool helps extract useful infor-
mation from the treebank, in order to study the lan-
guage, the annotation system or even to search for 
errors in the annotation.
The more complex the treebank is, the more so-
phisticated the search tool and its query language 
needs to be. The Prague Dependency Treebank 2.0 
(Haji?  et  al.  2006)  is  one  of  the  most  advanced 
manually  annotated  treebanks.  We  study  mainly 
the  tectogrammatical  layer  of  the  Prague Depen-
dency Treebank 2.0 (PDT 2.0), which is by far the 
most advanced and complex layer in the treebank, 
and show what requirements on a query language 
the annotated linguistic phenomena bring. We also 
add requirements set by lower layers of annotation.
In section 1 (after this introduction) we mention 
related  works  on  search  languages  for  various 
types of corpora. Afterwards, we very shortly in-
troduce PDT 2.0, just to give a general picture of 
the  principles  and  complexion  of  the  annotation 
scheme.
In section 2 we study the annotation manual for 
the tectogrammatical layer of PDT 2.0 (t-manual, 
Mikulov? et  al.  2006)  and collect  linguistic  phe-
nomena  that  bring  special  requirements  on  the 
query language. We also study lower layers of an-
notation and add their requirements.
In  section 3 we summarize the requirements in 
an extensive list of features required from a search 
language. 
We conclude in  section 4.
1.1 Related Work
In Lai, Bird 2004, the authors name seven linguis-
tic queries they consider important representatives 
for  checking  a  sufficiency  of  a  query  language 
power.  They  study  several  query  tools  and  their 
query languages and compare them on the basis of 
their  abilities  to  express  these  seven  queries.  In 
Bird et al  2005,  the authors use a revised set of 
seven key linguistic queries as a basis for forming 
a list of three expressive features important for lin-
guistic queries. The features are: immediate prece-
dence, subtree scoping and edge alignment. In Bird 
et al 2006, another set of seven linguistic queries 
is used to show a necessity to enhance XPath (a 
standard query language for XML, Clark, DeRose 
1999) to support linguistic queries.
Cassidy  2002  studies  adequacy  of  XQuery  (a 
search language based on XPath, Boag et al 1999) 
for searching in hierarchically annotated data. Re-
37
quirements  on  a  query  language  for  annotation 
graphs used in speech recognition is also presented 
in Bird et al 2000. A description of linguistic phe-
nomena  annotated  in  the  Tiger  Treebank,  along 
with an introduction to a search tool TigerSearch, 
developed especially for this treebank, is given in 
Brants et al 2002, nevertheless without a systemat-
ic study of the required features.
Laura  Kallmeyer  (Kallmeyer  2000)  studies  re-
quirements on a query language based on two ex-
amples  of  complex  linguistic  phenomena  taken 
from the NEGRA corpus and the Penn Treebank, 
respectively.
To  handle  alignment  information,  Merz  and 
Volk 2005 study requirements on a search tool for 
parallel treebanks.
All the work mentioned above can be used as an 
ample  source  of  inspiration,  though it  cannot  be 
applied directly to PDT 2.0. A thorough study of 
the PDT 2.0 annotation is needed to form conclu-
sions about requirements on a search tool for this 
dependency tree-based corpus, consisting of sever-
al  layers  of  annotation  and  having  an  extremely 
complex annotation scheme, which we shortly de-
scribe in the next subsection.
1.2 The Prague Dependency Treebank 2.0
The Prague Dependency Treebank 2.0 is a manual-
ly annotated corpus of Czech.  The texts are anno-
tated  on  three  layers  ?  morphological,  analytical 
and tectogrammatical.
On the morphological layer, each token of every 
sentence  is  annotated  with  a  lemma  (attribute 
m/lemma), keeping the base form of the token, and 
a tag (attribute  m/tag),  which keeps its morpho-
logical information.
The analytical layer roughly corresponds to the 
surface syntax of the sentence; the annotation is a 
single-rooted dependency tree with labeled nodes. 
Attribute a/afun describes the type of dependen-
cy between a dependent node and its governor. The 
order of the nodes from left  to right corresponds 
exactly to the surface order of tokens in the sen-
tence (attribute a/ord).
The tectogrammatical layer captures the linguis-
tic meaning of the sentence in its context. Again, 
the  annotation is  a  dependency tree  with labeled 
nodes (Haji?ov? 1998). The correspondence of the 
nodes  to  the  lower  layers  is  often  not  1:1 
(M?rovsk? 2006).
Attribute  functor describes  the  dependency 
between a dependent node and its governor. A tec-
togrammatical  lemma (attribute  t_lemma)  is  as-
signed to every node.  16 grammatemes (prefixed 
gram)  keep  additional  annotation  (e.g. 
gram/verbmod for verbal modality).
Topic  and  focus  (Haji?ov?  et  al.  1998)  are 
marked  (attribute  tfa),  together  with  so-called 
deep word order reflected by the order of nodes in 
the annotation (attribute deepord).
Coreference relations between nodes of certain 
category  types  are  captured.  Each  node  has  a 
unique  identifier  (attribute  id).  Attributes 
coref_text.rf and  coref_gram.rf contain 
ids of coreferential nodes of the respective types.
2 Phenomena and Requirements
We make a list  of  linguistic phenomena that  are 
annotated in PDT 2.0 and that determine the neces-
sary features of a query language.
Our work is focused on two structured layers of 
PDT 2.0 ? the analytical layer and the tectogram-
matical  layer.  For  using  the  morphological  layer 
exclusively  and directly,  a  very good search tool 
Manatee/Bonito  (Rychl?  2000)  can be  used.  We 
intend  to  access  the  morphological  information 
only  from  the  higher  layers,  not  directly.  Since 
there is relation 1:1 among nodes on the analytical 
layer (but for the technical root) and tokens on the 
morphological  layer,  the  morphological  informa-
tion can be easily merged into the analytical layer 
? the nodes only get additional attributes.
The tectogrammatical  layer is  by  far  the  most 
complex layer in PDT 2.0, therefore we start  our 
analysis with a study of the annotation manual for 
the tectogrammatical layer (t-manual, Mikulov? et 
al. 2006) and focus also on the requirements on ac-
cessing lower layers with non-1:1 relation. After-
wards, we add some requirements on a query lan-
guage set by the annotation of the lower layers ? 
the analytical layer and the morphological layer.
During the studies, we have to keep in mind that 
we do not only want to search for a phenomenon, 
but  also need  to  study it,  which can be  a  much 
more complex task. Therefore, it is not sufficient 
e.g. to find a predicative complement, which is a 
trivial task, since attribute  functor of the com-
plement  is  set  to  value  COMPL.  In this  particular 
example, we also need to be able to specify in the 
38
query properties of the node the second dependen-
cy of the complement goes to, e.g. that it is an Ac-
tor.
A summary of the required features on a query 
language is given in the subsequent section.
2.1 The Tectogrammatical Layer
First, we focus on linguistic phenomena annotated 
on the tectogrammatical layer. T-manual has more 
than one thousand pages. Most of the manual de-
scribes  the  annotation  of  simple  phenomena  that 
only require a single-node query or a very simple 
structured query. We mostly focus on those phe-
nomena  that  bring  a  special  requirement  on  the 
query language.
2.1.1 Basic Principles
The basic unit of annotation on the tectogrammati-
cal layer of PDT 2.0 is a sentence.
The representation of the tectogrammatical an-
notation of a sentence is a rooted dependency tree. 
It consists of a set of  nodes and a set of edges. One 
of the nodes is marked as a root.  Each node is a 
complex unit consisting of a set of pairs attribute-
value (t-manual, page 1). The edges express depen-
dency relations between nodes. The edges do not 
have their own attributes; attributes that logically 
belong to edges (e.g. type of dependency) are rep-
resented as node-attributes (t-manual, page 2).
It implies the first  and most basic requirement 
on the query language:  one result of the search is 
one sentence along with the tree belonging to it. 
Also, the query language should be able to express 
node evaluation and tree dependency among nodes 
in the most direct way.
2.1.2 Valency
Valency  of  semantic  verbs,  valency  of  semantic 
verbal nouns, valency of semantic nouns that rep-
resent the nominal part of a complex predicate and 
valency  of  some semantic  adverbs  are  annotated 
fully in the trees (t-manual, pages 162-3). Since the 
valency of verbs is the most complete in the anno-
tation and since the requirements on searching for 
valency frames of nouns are the same as of verbs, 
we will (for the sake of simplicity in expressions) 
focus on the verbs only. Every verb meaning is as-
signed a valency frame. Verbs usually have more 
than one meaning; each is assigned a separate va-
lency  frame.  Every  verb  has  as  many  valency 
frames as it has meanings (t-manual, page 105). 
Therefore, the query language has to be able to 
distinguish valency frames and search for each one 
of them, at least as long as the valency frames dif-
fer in their members and not only in their index. 
(Two or more identical valency frames may repre-
sent different verb meanings (t-manual, page 105).) 
The required features include a presence of a son, 
its non-presence, as well as controlling number of 
sons of a node.
2.1.3 Coordination and Apposition
Tree  dependency  is  not  always linguistic  depen-
dency (t-manual, page 9). Coordination and appo-
sition are examples of such a phenomenon (t-man-
ual, page 282). If a Predicate governs two coordi-
nated Actors, these Actors technically depend on a 
coordinating node and this coordinating node de-
pends on the Predicate. the query language should 
be able to skip such a coordinating node. In gener-
al, there should be a possibility to skip any type of 
node.
Skipping a given type of node helps but is not 
sufficient.  The coordinated structure can be more 
complex,  for  example the  Predicate  itself  can be 
coordinated too. Then, the Actors do not even be-
long to the subtree of any of the Predicates. In the 
following example, the two Predicates (PRED) are 
coordinated with conjunction (CONJ),  as well  as 
the two Actors (ACT). The linguistic dependencies 
go from each of the Actors to each of the Predi-
cates but the tree dependencies are quite different:
In Czech: S ??m mohou vlastn?ci i n?jemci po??tat,  
na co by se m?li p?ipravit?
In English: What can owners and tenants expect, 
what they should get ready for?
39
The query language should therefore be able to ex-
press the linguistic dependency directly. The infor-
mation about the linguistic dependency is annotat-
ed in the treebank by the means of references, as 
well as many other phenomena (see below).
2.1.4 Idioms (Phrasemes) etc.
Idioms/phrasemes  (idiomatic/phraseologic  con-
structions) are combinations of two or more words 
with a fixed lexical content, which together consti-
tute one lexical unit with a metaphorical meaning 
(which cannot be decomposed into meanings of its 
parts)  (t-manual,  page  308).  Only  expressions 
which are represented by at least two auto-seman-
tic nodes in the tectogrammatical tree are captured 
as idioms (functor DPHR). One-node (one-auto-se-
mantic-word) idioms are not represented as idioms 
in  the  tree.  For  example,  in  the  combination 
?chlapec k pohled?n??  (?a boy to  look for?),  the 
prepositional phrase gets functor RSTR, and it is 
not indicated that it is an idiom.
Secondary prepositions are another example of a 
linguistic  phenomenon  that  can  be  easily  recog-
nized in the surface form of the sentence but is dif-
ficult to find in the tectogrammatical tree.
Therefore, the query language should offer a ba-
sic searching in the linear form of the sentence, to 
allow searching for any idiom or phraseme, regard-
less of the way it is or is not captured in the tec-
togrammatical tree. It can even help in a situation 
when the user does not know how a certain linguis-
tic phenomenon is annotated on the tectogrammati-
cal layer.
2.1.5 Complex Predicates
A  complex  predicate  is  a  multi-word  predicate 
consisting of a semantically empty verb which ex-
presses  the  grammatical  meanings  in  a  sentence, 
and a noun (frequently denoting an event or a state 
of affairs) which carries the main lexical meaning 
of the entire phrase (t-manual, page 345). Search-
ing for a complex predicate is a simple task and 
does not bring new requirements on the query lan-
guage. It is valency of complex predicates that re-
quires our attention, especially dual function of a 
valency  modification.  The  nominal  and  verbal 
components of the complex predicate are assigned 
the  appropriate  valency  frame  from  the  valency 
lexicon. By means of newly established nodes with 
t_lemma substitutes,  those  valency  modification 
positions  not  present  at  surface  layer  are  filled. 
There are problematic cases where the expressed 
valency modification occurs in the same form in 
the valency frames of both components of the com-
plex predicate (t-manual, page 362).
To  study  these  special  cases  of  valency,  the 
query language has to offer a possibility to define 
that a valency member of the verbal part of a com-
plex predicate is at the same time a valency mem-
ber of the nominal part of the complex predicate, 
possibly with a different function. The identity of 
valency members is annotated again by the means 
of references, which is explained later.
2.1.6 Predicative  Complement  (Dual  Depen-
dency)
On the  tectogrammatical  layer,  also  cases  of  the 
so-called predicative complement are represented. 
The  predicative  complement  is  a  non-obligatory 
free  modification (adjunct)  which  has  a  dual  se-
mantic  dependency  relation.  It  simultaneously 
modifies a noun and a verb (which can be nominal-
ized).
These two dependency relations are represented 
by different means (t-manual, page 376):
? the dependency on a verb is represented by 
means of an edge (which means it is repre-
sented in the same way like other modifi-
cations),
? the  dependency  on  a  (semantic)  noun  is 
represented  by  means  of  attribute  com-
pl.rf, the value of which is the identifier 
of the modified noun.
In the following example, the predicative comple-
ment  (COMPL)  has  one  dependency  on  a  verb 
(PRED) and another (dual) dependency on a noun 
(ACT):
40
In  Czech:  Ze  sv?tov?  recese vy?ly jako  jedni?ka 
Spojen? st?ty.
In  English:  The  United States  emerged from the 
world recession as number one.
The  second  form  of  dependency,  represented 
once again with references (still see below), has to 
be expressible in the query language.
2.1.7 Coreferences
Two types  of  coreferences  are  annotated  on  the 
tectogrammatical layer:
? grammatical coreference
? textual coreference
The current way of representing coreference uses 
references (t-manual, page 996).
Let us finally explain what references are. Ref-
erences make use of the fact that every node of ev-
ery tree has an identifier (the value of attribute id), 
which  is  unique  within  PDT 2.0.  If  coreference, 
dual dependency, or valency member identity is a 
link between two nodes (one node referring to an-
other), it is enough to specify the identifier of the 
referred node in the appropriate attribute of the re-
ferring node. Reference types are distinguished by 
different  referring  attributes.  Individual  reference 
subtypes can be further distinguished by the value 
of another attribute.
The essential point in references (for the query 
language) is that at the time of forming a query, the 
value of the reference is unknown. For example, in 
the case of dual dependency of predicative comple-
ment,  we know that  the  value  of  attribute  com-
pl.rf of the complement must be the same as the 
value of attribute id of the governing noun, but the 
value itself differs tree from tree and therefore is 
unknown at  the  time  of  creating  the  query.  The 
query  language has to  offer  a possibility  to  bind 
these unknown values.
2.1.8 Topic-Focus Articulation
On the tectogrammatical layer, also the topic-focus 
articulation  (TFA)  is  annotated.  TFA  annotation 
comprises two phenomena:
? contextual boundness, which is represent-
ed  by  values  of  attribute  tfa for  each 
node of the tectogrammatical tree.
? communicative dynamism, which is repre-
sented by the underlying order of nodes.
Annotated trees therefore contain two types of in-
formation - on the one hand the value of contextual 
boundness of a node and its relative ordering with 
respect  to  its  brother  nodes  reflects  its  function 
within the topic-focus articulation of the sentence, 
on the other hand the set of all the TFA values in 
the tree and the relative ordering of subtrees reflect 
the overall functional perspective of the sentence, 
and thus enable to distinguish in the sentence the 
complex  categories  of  topic  and focus  (however, 
these are not annotated explicitly) (t-manual, page 
1118).
While contextual boundness does not bring any 
new requirement on the query language, commu-
nicative dynamism requires that the relative order 
of nodes in the tree from left  to right can be ex-
pressed.  The  order  of  nodes  is  controlled  by  at-
tribute  deepord,  which  contains  a  non-negative 
real (usually natural) number that sets the order of 
the  nodes  from  left  to  right.  Therefore,  we  will 
again need to refer to a value of an attribute of an-
other node but  this  time with relation other  than 
?equal to?.
2.1.8.1 Focus Proper
Focus proper is the most dynamic and communica-
tively  significant  contextually  non-bound  part  of 
the sentence. Focus proper is placed on the right-
most  path  leading  from the  effective  root  of  the 
tectogrammatical tree, even though it is at a differ-
ent position in the surface structure. The node rep-
resenting this expression will be placed rightmost 
in the tectogrammatical tree. If the focus proper is 
constituted by an expression represented as the ef-
fective root of the tectogrammatical tree (i.e.  the 
governing predicate is the focus proper),  there is 
no  right  path  leading  from the  effective  root  (t-
manual, page 1129).
2.1.8.2 Quasi-Focus
Quasi-focus is constituted by (both contrastive and 
non-contrastive)  contextually  bound  expressions, 
on which the focus proper is dependent. The focus 
proper can immediately depend on the quasi-focus, 
or it can be a more deeply embedded expression.
In the underlying word order, nodes representing 
the  quasi-focus,  although  they  are  contextually 
bound, are placed to the right from their governing 
node. Nodes representing the quasi-focus are there-
fore  contextually  bound  nodes  on  the  rightmost 
41
path in the tectogrammatical tree (t-manual, page 
1130).
The ability of the query language to distinguish 
the  rightmost  node in  the  tree  and the  rightmost 
path leading from a node is therefore necessary.
2.1.8.3 Rhematizers
Rhematizers are expressions whose function is to 
signal the topic-focus articulation categories in the 
sentence,  namely  the  communicatively  most  im-
portant categories - the focus and contrastive topic.
The position of rhematizers in the surface word 
order is quite loose, however they almost always 
stand right before the expressions they rhematize, 
i.e.  the  expressions  whose being  in  the  focus  or 
contrastive  topic  they  signal  (t-manual,  pages 
1165-6).
The  guidelines  for  positioning  rhematizers  in 
tectogrammatical trees are simple (t-manual, page 
1171):
? a rhematizer (i.e. the node representing the 
rhematizer)  is  placed  as  the  closest  left 
brother (in the underlying word order) of 
the first node of the expression that is in its 
scope.
? if  the scope of  a rhematizer  includes  the 
governing  predicate,  the  rhematizer  is 
placed as the closest left  son of the node 
representing the governing predicate.
? if a rhematizer constitutes the focus prop-
er, it is placed according to the guidelines 
for the position of the focus proper - i.e. on 
the rightmost path leading from the effec-
tive root of the tectogrammatical tree.
Rhematizers therefore bring a further requirement 
on the query language ? an ability to control the 
distance between nodes (in the terms of deep word 
order); at the very least, the query language has to 
distinguish an immediate brother and relative hori-
zontal position of nodes.
2.1.8.4 (Non-)Projectivity
Projectivity of a tree is defined as follows: if two 
nodes B and C are connected by an edge and C is 
to the left from B, then all nodes to the right from 
B and to  the left  from C are connected with the 
root via a path that passes through at least one of 
the nodes B or C. In short: between a father and its 
son there can only be direct or indirect sons of the 
father (t-manual, page 1135).
The relative position of a node (node A) and an 
edge (nodes B, C) that together cause a non-projec-
tivity forms four different configurations: (?B is on 
the left from C? or ?B is on the right from C?) x 
(?A is  on the  path from B to the  root?  or  ?it  is 
not?). Each of the configurations can be searched 
for using properties of the language that have been 
required so far by other linguistic phenomena. Four 
different queries search for four different configu-
rations.
To be able to search for all configurations in one 
query, the query language should be able to com-
bine several queries into one multi-query. We do 
not require that a general logical expression can be 
set  above  the  single  queries.  We  only  require  a 
general OR combination of the single queries.
2.1.9 Accessing Lower Layers
Studies  of  many  linguistic  phenomena  require  a 
multilayer access.
In Czech: Byl by ?el do lesa.
In English (lit.): He would have gone to the forest.
42
For example, the query ?find an example of Patient 
that is more dynamic than its governing Predicate 
(with greater deepord) but on the surface layer is 
on the left side from the Predicate? requires infor-
mation both from the tectogrammatical layer and 
the analytical layer.
The picture above is taken from PDT 2.0 guide 
and shows the typical relation among layers of an-
notation for the sentence (the lowest w-layer is a 
technical layer containing only the tokenized origi-
nal data).
The information from the lower  layers  can be 
easily  compressed  into the analytical layer,  since 
there is relation 1:1 among the layers (with some 
rare exceptions like misprints in the w-layer). The 
situation between the tectogrammatical layer and 
the analytical layer is much more complex. Several 
nodes from the analytical layer may be (and often 
are) represented by one node on the tectogrammat-
ical  layer  and  new  nodes  without  an  analytical 
counterpart  may  appear  on  the  tectogrammatical 
layer.  It is necessary that the query language ad-
dresses this issue and allows access to the informa-
tion from the lower layers.
2.2 The Analytical and Morphological Layer
The analytical layer is much less complex than the 
tectogrammatical  layer.  The  basic  principles  are 
the same ? the representation of the structure of a 
sentence is rendered in the form of a tree ? a con-
nected  acyclic  directed  graph  in  which  no  more 
than one edge leads into a node, and whose nodes 
are  labeled  with  complex  symbols  (sets  of  at-
tributes). The edges are not labeled (in the techni-
cal sense). The information logically belonging to 
an edge is represented in attributes of the depend-
ing node. One node is marked as a root.
Here,  we focus on linguistic phenomena anno-
tated on the analytical and morphological layer that 
bring  a  new  requirement  on  the  query  language 
(that  has  not  been  set  in  the  studies  of  the  tec-
togrammatical layer).
2.2.1 Morphological Tags
In  PDT 2.0,  morphological  tags  are  positional. 
They consist of 15 characters, each representing a 
certain morphological category, e.g. the first posi-
tion  represents  part  of  speech,  the  third  position 
represents  gender,  the  fourth  position  represents 
number, the fifth position represents case.
The query language has to offer a possibility to 
specify a part of the tag and leave the rest unspeci-
fied. It has to be able to set such conditions on the 
tag  like  ?this  is  a  noun?,  or  ?this  is  a  plural  in 
fourth case?. Some conditions might include nega-
tion or enumeration, like ?this is an adjective that 
is not in fourth case?, or ?this is a noun either in 
third or fourth case?. This is best done with some 
sort of wild cards. The latter two examples suggest 
that such a strong tool like regular expressions may 
be needed.
2.2.2 Agreement
There are several cases of agreement in Czech lan-
guage, like agreement in case, number and gender 
in attributive adjective phrase, agreement in gender 
and number between predicate and subject (though 
it may be complex), or agreement in case in appo-
sition.
To study agreement, the query language has to 
allow to make a reference to only a part of value of 
attribute of another node, e.g. to the fifth position 
of the morphological tag for case.
2.2.3 Word Order
Word  order  is  a  linguistic  phenomenon  widely 
studied on the analytical layer, because it offers a 
perfect combination of a word order (the same like 
in the sentence) and syntactic relations between the 
words.  The  same  technique  like  with  the  deep 
word order on the tectogrammatical layer can be 
used here. The order of words (tokens) ~ nodes in 
the  analytical tree  is  controlled by attribute  ord. 
Non-projective constructions are much more often 
and interesting here than on the tectogrammatical 
layer.  Nevertheless,  they  appear  also on  the  tec-
togrammatical layer and their  contribution  to  the 
requirements  on  the  query  language  has  already 
been mentioned.
The  only  new  requirement  on  the  query  lan-
guage is an ability to measure the horizontal dis-
tance between words, to satisfy linguistic queries 
like ?find trees where a preposition and the head of 
the noun phrase are at least five words apart?.
3 Summary of the Features 
Here we summarize what features  the query lan-
guage has to have to suit PDT 2.0. We list the fea-
tures from the previous section and also add some 
43
obvious  requirements  that  have  not  been  men-
tioned so far but are very useful generally, regard-
less of a corpus.
3.1 Complex Evaluation of a Node
? multiple attributes evaluation (an ability to 
set values of several attributes at one node)
? alternative  values  (e.g.  to  define  that 
functor of a node is either a disjunction 
or a conjunction)
? alternative nodes (alternative evaluation of 
the whole set of attributes of a node)
? wild cards (regular expressions) in values 
of attributes (e.g. m/tag=?N...4.*? de-
fines that the morphological tag of a node 
is a noun in accusative, regardless of other 
morphological categories)
? negation (e.g. to express ?this node is not 
Actor?)
? relations less than (<=) , greater than (>=) 
(for numerical attributes)
3.2 Dependencies  Between  Nodes  (Vertical 
Relations)
? immediate,  transitive  dependency  (exis-
tence,  non-existence)
? vertical distance (from root, from one an-
other)
? number of sons (zero for lists)
3.3 Horizontal Relations
? precedence,  immediate  precedence,  hori-
zontal distance (all both positive, negative)
? secondary edges, secondary dependencies, 
coreferences, long-range relations
3.4 Other Features
? multiple-tree queries (combined with gen-
eral OR relation)
? skipping a node of a given type (for skip-
ping simple types of coordination, apposi-
tion etc.)
? skipping  multiple  nodes  of  a  given  type 
(e.g. for recognizing the rightmost path)
? references  (for  matching  values  of  at-
tributes  unknown at  the  time  of  creating 
the query)
? accessing  several  layers  of  annotation  at 
the  same time with  non-1:1  relation  (for 
studying relation between layers)
? searching in the surface form of the sen-
tence
4 Conclusion
We have studied the Prague Dependency Treebank 
2.0 tectogrammatical annotation manual and listed 
linguistic phenomena that require a special feature 
from any query tool for this corpus. We have also 
added several  other  requirements  from the lower 
layers  of  annotation.  We have summarized  these 
features,  along  with  general  corpus-independent 
features, in a concise list.
Acknowledgment
This research was supported by the Grant Agency 
of the Academy of Sciences of the Czech Repub-
lic, project IS-REST (No. 1ET101120413).
References 
Bird et al 2000. Towards A Query Language for Anno-
tation Graphs. In: Proceedings of the Second Interna-
tional  Language and Evaluation  Conference,  Paris,  
ELRA, 2000.
Bird et al 2005. Extending Xpath to Support Linguistc 
Queries.  In:  Proceedings  of  the  Workshop on  Pro-
gramming Language Technologies for XML, Califor-
nia, USA, 2005. .
Bird et al 2006. Designing and Evaluating an XPath Di-
alect  for  Linguistic  Queries.  In: Proceedings of the 
22nd International Conference on Data Engineering  
(ICDE), pp 52-61, Atlanta, USA, 2006.
Boag  et  al.  1999.  XQuery  1.0:  An XML Query  Lan-
guage.  IW3C  Working  Draft,  
http://www.w3.org/TR/xpath, 1999.
Brants  S.  et  al.  2002.  The TIGER Treebank.  In: Pro-
ceedings of TLT 2002, Sozopol, Bulgaria, 2002.
Cassidy S. 2002. XQuery as an Annotation Query Lan-
guage: a Use Case Analysis.  In: Proceedings of the 
Third  International  Conference  on  Language  Re-
sources and Evaluation, Canary Islands, Spain, 2002
Clark  J.,  DeRose  S.  1999.  XML  Path  Language 
(XPath). http://www.w3.org/TR/xpath, 1999.
Haji? J. et al 2006. Prague Dependency Treebank 2.0. 
CD-ROM LDC2006T01, LDC, Philadelphia, 2006.
44
Haji?ov? E. 1998. Prague Dependency Treebank: From 
analytic  to  tectogrammatical  annotations.  In:  Pro-
ceedings  of  2nd TST,  Brno,  Springer-Verlag  Berlin 
Heidelberg New York, 1998, pp. 45-50.
Haji?ov? E., Partee B., Sgall P. 1998. Topic-Focus Ar-
ticulation,  Tripartite  Structures  and  Semantic  Con-
tent.  Dordrecht,  Amsterdam, Kluwer Academic Pub-
lishers, 1998.
Havelka  J.  2007.  Beyond  Projectivity:  Multilingual 
Evaluation of Constraints and Measures on Non-Pro-
jective  Structures. In  Proceedings  of  ACL  2007, 
Prague, pp. 608-615.
Kallmeyer L. 2000: On the Complexity of Queries for 
Structurally  Annotated Linguistic  Data.  In Proceed-
ings  of  ACIDCA'2000,  Corpora  and  Natural  Lan-
guage Processing, Tunisia, 2000, pp. 105-110.
Lai C., Bird S. 2004. Querying and updating treebanks: 
A critical survey and requirements analysis.  In: Pro-
ceedings  of  the  Australasian  Language  Technology  
Workshop, Sydney, Australia, 2004
Merz Ch.,  Volk M. 2005. Requirements  for a Parallel 
Treebank  Search  Tool.  In:  Proceedings  of  GLDV-
Conference, Bonn, Germany, 2005.
Mikulov? et al 2006. Annotation on the Tectogrammat-
ical Level in the Prague Dependency Treebank (Ref-
erence  Book).  ?FAL/CKL  Technical  Report  
TR-2006-32, Charles University in Prague, 2006.
M?rovsk?  J.  2006.  Netgraph:  a  Tool  for  Searching  in 
Prague Dependency Treebank 2.0. In Proceedings of  
TLT 2006, Prague, pp. 211-222.
Rychl? P. 2000. Korpusov? mana?ery a jejich efektivn? 
implementace. PhD. Thesis, Brno, 2000.
45
Proceedings of the ACL-IJCNLP 2009 Conference Short Papers, pages 209?212,
Suntec, Singapore, 4 August 2009.
c?2009 ACL and AFNLP
Play the Language: Play Coreference
Barbora Hladk
?
a and Ji
?
r?? M??rovsk?y and Pavel Schlesinger
Charles University in Prague
Institute of Formal and Applied Linguistics
e-mail: {hladka, mirovsky, schlesinger@ufal.mff.cuni.cz}
Abstract
We propose the PlayCoref game, whose
purpose is to obtain substantial amount of
text data with the coreference annotation.
We provide a description of the game de-
sign that covers the strategy, the instruc-
tions for the players, the input texts selec-
tion and preparation, and the score evalua-
tion.
1 Introduction
A collection of high quality data is resource-
demanding regardless of the area of research and
type of the data. This fact has encouraged a
formulation of an alternative way of data col-
lection, ?Games With a Purpose? methodology
(GWAP), (van Ahn and Dabbish, 2008). The
GWAP methodology exploits the capacity of Inter-
net users who like to play on-line games. The on-
line games are being designed to generate data for
applications that either have not been implemented
yet, or have already been implemented with a per-
formance lower than human. Moreover, the play-
ers work simply by playing the game - the data are
generated as a by-product of the game. If the game
is enjoyable, it brings human resources and saves
financial resources. The game popularity brings
more game sessions and thus more annotated data.
The GWAP methodology was formulated in
parallel with design and implementation of the
on-line games with images (van Ahn and Dab-
bish, 2004) and subsequently with tunes (Law
et al, 2007),
1
in which the players try to agree
on a caption of the image/tune. The popularity of
the games is enormous so the authors have suc-
ceeded in the basic requirement that the annota-
tion is generated in a substantial amount. Then
the Onto games appeared (Siorpaes and Hepp,
1
www.gwap.org
2008), bringing a new type of input data to GWAP,
namely video and text.
2
The situation with text seems to be slightly dif-
ferent. One has to read a text in order to identify
its topics, which takes more time than observing
images, and the longer text, the worse. Since the
game must be of a dynamic character, it is unimag-
inable that the players will spend minutes reading
an input text. Therefore, the text must be opened
to the players ?part? by ?part?.
So far, besides the Onto games, two more games
with texts have been designed: What did Shan-
non say?
3
, the goal of which is to help the speech
recognizer with difficult-to-recognize words, and
Phrase Detectives
4
(Kruschwitz, Chamberlain,
Poesio, 2009), the goal of which is to identify re-
lationships between words and phrases in a text.
Motivated by the GWAP portal, the LGame por-
tal
5
has been established. Seven key properties
that any game on the LGame portal will satisfy
were formulated ? see Table 1.
The LGame portal has been opened with the
Shannon game, a game of intentionally hidden
words in the sentence, where players guess them,
and the Place the Space game, a game of word
segmentation.
Within a systematic framework established at
the LGame portal, the games PlayCoref, PlayNE,
PlayDoc devoted to the linguistic phenomena
dealing with the contents of documents, namely
coreference, named-entitites, and document la-
bels, respectively, are being designed in parallel
but implemented subsequently since the GWAPs
are open-ended stories the success of which is hard
to estimate in advance. These games are designed
for Czech and English by default. However, the
game rules are language independent.
2
www.ontogame.org
3
lingo.clsp.jhu.edushannongame.html
4
www.phrasedetectives.org
5
www.lgame.cz
209
1. During the game, the data are collected for the natural
language processing tasks that computers cannot solve
at all or not well enough.
2. Playing the game only requires a basic knowledge
of the grammar of the language of the game. No extra
linguistic knowledge is required.
3. The game rules are designed independently of the
language of the game.
4. The game is designed for Czech and English by de-
fault.
5. During the game, the players have at least a general
idea of what their opponent(s) do.
6. The game is designed for at least two players (also a
computer can be an opponent).
7. The game offers several levels of difficulty (to fit a
vast range of players).
Table 1: Key properties of the games on the LGame portal.
We have decided to implement the PlayCoref
first. Coreference crosses the sentence boundaries
and playing coreference offers a great opportunity
to test players? willingness to read a text part by
part, e.g. sentence by sentence. In this paper, we
discuss various aspects of the PlayCoref design.
2 Coreference
Coreference occurs when several referring expres-
sions in a text refer to the same entity (e.g. per-
son, thing, reality). A coreferential pair is marked
between subsequent pairs of the referring expres-
sions. A sequence of coreferential pairs referring
to the same entity in a text forms a coreference
chain.
Various projects on the coreference annotation
by linguists are running. We mention two of
them ? the Prague Dependency Treebank 2.0 and
the coreference task for the sixth Message Under-
standing Conference.
Prague Dependency Treebank 2.0 (PDT 2.0)
6
is the only corpus establishing the coreference
annotation on a layer of meaning, so-called tec-
togrammatical layer (t-layer). The annotation in-
cludes grammatical and textual coreference. Ex-
tended textual coreference (covering additional
categories) is being annotated in PDT 2.0 in an on-
going project (Nedoluzhko, 2007).
Sixth Message Understanding Conference ? the
coreference task (MUC-6)
7
operates on a sur-
face layer. The coreferential pairs are marked be-
tween pairs of the categories nouns, noun phrases,
and pronouns.
6
ufal.mff.cuni.cz/pdt2.0
7
cs.nyu.edu/faculty/grishman/muc6.html
3 The PlayCoref Game
Motivation The PDT 2.0 coreference annota-
tion (including the annotation scheme design,
training of the annotators, technical and linguistic
support, and annotation corrections) spanned the
period from summer 2002 till autumn 2004. Each
of two annotators annotated one half out of 3,165
documents. We are aware that coreferential pairs
marked in the PlayCoref sessions may differ from
the PDT 2.0 coreference annotation. However,
the following estimates reinforce our motivation
to use the GWAP technology on texts: assuming
that (1) the PlayCoref is designed as a two-player
game, (2) at least one document is being present
in each session, (3) the session lasts up to 5 min-
utes and (4) the players play half an hour a day,
then at least 6 documents will be processed a day
by two players. This means that 3,165 documents
will be annotated by two players in 528 days, by
eight players in 132 days, by 32 players in 33 days
etc., and by 128 players in 9 days.
Strategy The game is designed for two players.
The game starts with several first sentences of the
document displayed in the players? sentence win-
dow. According to the restrictions put on the mem-
bers of the coreferential pairs, parts of the text are
unlocked while the other parts are locked. Only
unlocked parts of the text are allowed to become
a member of the coreferential pair. In our case,
only nouns and selected pronouns are unlocked.
8
In Table 2, we provide a list of the locked pro-
noun?s sub-part-of-speech classes (as designed in
the Czech positional tag system). Pronouns of
the other sub-part-of-speech classes are unlocked.
The selection of the locked pronoun?s sub-part-of-
speech classes is based on the fact that some types
of pronouns usually corefer with parts of the text
larger than one word. This type of coreference
cannot be annotated without a linguistic knowl-
edge and without training. Therefore it must be
omitted for the purposes of the PlayCoref game.
The players mark coreferential pairs between
the unlocked words in the text (no phrases are al-
lowed). They mark the coreferential pairs as undi-
rected links.
9
After the session, the coreference
8
A tagging procedure is used to get the part-of-speech
classes of the words.
9
This strategy differs from the general conception of
coreference being understood as either the anaphoric or cat-
aphoric relation depending on ?direction? of the link in the
text. We believe that the players will benefit from this sim-
210
Locked pronouns: subPOS and its description
D Demonstrative (?ten?, ?onen?, ..., lit. ?this?, ?that?, ?that?, ...
?over there?, ... )
E Relative ?co?z? (corresponding to English which in subordinate
clauses referring to a part of the preceding text)
L Indefinite ?v?sechen?, ?s?am? (lit. ?all?, ?alone?)
O ?sv?uj?, ?nesv?uj?, ?tentam? alone (lit. ?own self?, ?not-in-mood?,
?gone?)
Q Relative/interrogative ?co?, ?copak?, ?co?zpak? (lit. ?what?, ?isn?t-
it-true-that?)
W Negative (?nic?, ?nikdo?, ?nijak?y?, ??z?adn?y?, ..., lit. ?nothing?,
?nobody?, ?not-worth-mentioning?, ?no?/?none?)
Y Relative/interrogative ?co? as an enclitic (after a preposition)
(?o?c?, ?na?c?, ?za?c?, lit. ?about what?, ?on?/?onto? ?what?, ?af-
ter?/?for what?)
Z Indefinite (?n?ejak?y?, ?n?ekter?y?, ??c??koli?, ?cosi?, ..., lit. ?some?,
?some?, ?anybody?s?, ?something?)
Table 2: List of the pronoun?s sub-part-of-speech classes in
the Czech positional tag system locked for the PlayCoref.
chains are automatically reconstructed from the
coreferential pairs marked.
During the session, the number of words the
opponent has linked into the coreferential pairs is
displayed to the player. The number of sentences
with at least one coreferential pair marked by the
opponent is displayed to the player as well. Re-
vealing more information about the opponent?s ac-
tions would affect the independency of the play-
ers? decisions.
If the player finishes pairing all the related
words in a visible part of the document (visible
to him), he asks for the next sentence of the docu-
ment. It appears at the bottom of his sentence win-
dow. The player can remove pairs created before
at any time and can make new pairs in the sen-
tences read so far. The session goes on this way
until the end of the session time.
Instructions for the Players Instructions for the
players must be as comprehensible and concise as
possible. To mark a coreferential pair, no linguis-
tic knowledge is required. It is all about the text
comprehension ability.
Input Texts In the first stage of the project, doc-
uments from PDT 2.0 and MUC-6 will be used in
the sessions, so that the quality of the game data
can be evaluated against the manual coreference
annotation.
Since the PDT 2.0 coreference annotation oper-
ates on the tectogrammatical layer and PlayCoref
on the surface layer, the coreferential pairs of the t-
layer must be projected to the surface first. The ba-
sic steps of the projection are depicted in Figure 1.
Going from the t-layer, some of the coreferential
plification and that the quality of the game data will not be
decreased.
pairs get lost because their members do not have
their counterparts on surface.
10
From the remain-
ing coreferential pairs, those between nouns and
unlocked pronouns are selected. In the final game
documents, the difference between the grammat-
ical, textual and extended textual coreference is
omitted, because the players will not be asked to
distinguish them. Table 3 shows the number of
coreferential pairs in various stages of the projec-
tion.
DEEPSURFGRAM DEEPSURFTEXT
DEEPSURFGRAM DEEPSURFTEXT DEEPSURF
EX TT EE XN TD
PDT 2.0 PDT 2.0+ ext. textualcoreference surfacesubset
GRAMSURFunlockedTEXTSURFunlockedEXTENDTEXTSURFunlocked
PlayCorefdatalockedunlockedG  SR  UA  RM  F lockedunlockedT  SE  UX  RT  F lockedunlockedE    T  SE  UX  RT  F
Figure 1: Projection of the PDT coreference annotation to
the surface layer. The first step depicts the annotation of the
extended textual coreference. Pairs that have no surface coun-
terparts are marked DEEP, pairs with surface counterparts
are marked SURF. Pairs suitable for the game are marked un-
locked.
Data from the coreference task on the sixth
Message Understanding Conference can be used
in a much more straightforward way. Coreference
is annotated on the surface and no projection is
needed. The links with noun phrases are disre-
garded.
PDT 2.0 PDT 2.0 surface PlayCoref
+ ext. subset
# coref. pairs 45 96 70 33
Table 3: Number of coreferential pairs (in thousands) in
various stages of projection. Counts in the second, third and
fourth columns are extrapolated on the basis of data anno-
tated so far, which is about 200 thousand word tokens in 12
thousand sentences (out of 833 thousand tokens in 49 thou-
sand sentences in PDT 2.0). Type of the coreferential pairs,
either grammatical or textual one, is not distinguished.
Scoring The players get points for their coref-
erential pairs according to the equation pts
A
=
w
1
?ICA(A, acr)+w
2
?ICA(A,B) where A and
B are the players, acr is an automatic coreference
resolution procedure, weights 0 ? w
1
, w
2
? 1,
w
1
, w
2
? R are set empirically, and ICA stands for
the inter-coder agreement that we can simultane-
ously express either by the F-measure or Krippen-
10
Czech is a ?pro-drop? language, in which the subject pro-
noun on ?he? has a zero form (also in feminine, plural, etc.).
211
D E P
Figure 2: Player ?1? pairs (A,C) ? the dotted curve; player
?2? pairs (A,B) and (B,C) ? the solid lines; player ?3? pairs
(A,B) and (A,C) ? the dashed curves. Although players ?1?
and ?2? do not agree on the coreferential pairs at all, ?1? and
?3? agree only on (A,C) and ?2? and ?3? agree only on (A,B),
for the purposes of the coreference chains reconstruction, the
players? agreement is higher: players ?1? and ?2? agree on two
members of the coreferential chain: A and C, players ?1? and
?3? agree on A and C as well, and players ?2? and ?3? achieved
agreement even on all three members: A, B, and C.
dorff?s ? (Artstein and Poesio, 2008). The score
is calculated at the end of the session and no run-
ning score is being presented during the session.
Otherwise, the players might adjust their decisions
according to the changes in the score. Obviously,
it is undesirable.
Assigning a score to the players deals with the
coreferential pairs. However, motivated by (Pas-
sonneau, 2004) and others, the evaluation handles
the coreferential pairs in a way demonstrated in
Figure 2.
PlayCoref vs. PhraseDetectives At least to
our knowledge, there are no other GWAPs deal-
ing with the relationship among words in a text
like PhraseDetectives and PlayCoref. Neverthe-
less, there are many differences between these two
games ? the main ones are enumerated in Table 4.
PlayCoref PhraseDetectives
detection of coreference
chains
anaphora resolution
two-player game one-player game
a document presented sen-
tence by sentence
a paragraph presented at
once
? checking the pairs marked
in the previous sessions
pairing not restricted to the
position in the text
the closest antecedent
simple instructions players training
scoring with respect to the
automatic coreference reso-
lution and to the opponent?s
pairs
scoring with respect to the
players that play with the
same document before
coreferential pairs correc-
tion
no corrections allowed
Table 4: PlayCoref vs. PhraseDetectives.
4 Conclusion
We propose the PlayCoref game, a concept of a
GWAP with texts that aims at getting the docu-
ments with the coreference annotation in substan-
tially larger volume than can be obtained from
experts. In the proposed game, we introduce
coreference to the players in a way that no lin-
guistic knowledge is required from them. We
present the game rules design, the preparation of
the game documents and the evaluation of the
players? score. A short comparison with a simi-
lar project is also provided.
Acknowledgments
We gratefully acknowledge the support of the
Czech Ministry of Education (grants MSM-
0021620838 and LC536), the Czech Grant
Agency (grant 405/09/0729), and the Grant
Agency of Charles University in Prague (project
GAUK 138309).
References
Ron Artstein, Massimo Poesio. 2008. Inter-Coder Agree-
ment for Computational Linguistics. Computational Lin-
guistics, December 2008, vol. 34, no. 4, pp. 555?596.
Udo Kruschwitz, Jon Chamberlain, Massimo Poesio. 2009.
(Linguistic) Science Through Web Collaboration in the
ANAWIKI project. In Proceedings of the WebSci?09: So-
ciety On-Line, Athens, Greece, in press.
Lucie Ku?cov?a, Eva Haji?cov?a. 2005. Coreferential Relations
in the Prague Dependency Treebank. In Proceedings of
the 5th International Conference on Discourse Anaphora
and Anaphor Resolution, San Miguel, Azores, pp. 97?102.
Edith. L. M. Law et al 2007. Tagatune: A game for music
and sound annotation. In Proceedings of the Music In-
formation Retrieval Conference, Austrian Computer Soc.,
pp. 361?364.
Anna Nedoluzhko. 2007. Zpr?ava k anotov?an?? roz?s???ren?e
textov?e koreference a bridging vztah?u v Pra?zsk?em
z?avoslostn??m korpusu (Annotating extended coreference
and bridging relations in PDT). Technical Report, UFAL,
MFF UK, Prague, Czech Republic.
Rebecca J. Passonneau. 2004. Computing Reliability for
Coreference. Proceedings of LREC, vol. 4, pp. 1503?
1506, Lisbon.
Katharina Siorpaes and Martin Hepp. 2008. Games with a
purpose for the Semantic Web. IEEE Intelligent Systems
Vol. 23, number 3, pp. 50?60.
Luis van Ahn and Laura Dabbish. 2004. Labelling images
with a computer game. In Proceedings of the SIGHI Con-
ference on Human Factors in Computing Systems, ACM
Press, New York, pp. 319?326.
Luis van Ahn and Laura Dabbish. 2008. Designing Games
with a Purpose. Communications of the ACM, vol. 51,
No. 8, pp. 58?67.
212
Proceedings of the Third Linguistic Annotation Workshop, ACL-IJCNLP 2009, pages 52?55,
Suntec, Singapore, 6-7 August 2009. c?2009 ACL and AFNLP
Designing a Language Game for Collecting Coreference Annotation
Barbora Hladka? and Jir??? M??rovsky? and Pavel Schlesinger
Charles University in Prague
Institute of Formal and Applied Linguistics
e-mail: {hladka, mirovsky, schlesinger@ufal.mff.cuni.cz}
Abstract
PlayCoref is a concept of an on-line lan-
guage game designed to acquire a substan-
tial amount of text data with the corefer-
ence annotation. We describe in detail var-
ious aspects of the game design and dis-
cuss features that affect the quality of the
annotation.
1 Introduction
Creating a collection of high quality data is
resource-demanding regardless of the area of re-
search and type of the data. This fact has encour-
aged a formulation of an alternative way of data
collection, ?Games With a Purpose? methodology
(GWAP), (van Ahn and Dabbish, 2008). The
GWAP methodology exploits the capacity of In-
ternet users who like to play on-line games. The
games are designed to generate data for applica-
tions that either have not been implemented yet,
or have already been implemented with a perfor-
mance lower than human. The players work sim-
ply by playing the game - the data are generated as
a by-product of the game. The more enjoyable the
game is, the more users play it and the more data
is acquired.
The GWAP methodology was first used for on-
line games with images (van Ahn and Dabbish,
2004) and later with tunes (Law et al, 2007),1
in which the players try to agree on a caption of
the image/tune. The popularity of these games is
enormous and generates a huge amount of data.
Onto games (Siorpaes and Hepp, 2008) brought
another type of input data to GWAP ? video and
text.2
The situation with text is slightly different. One
has to read a text in order to identify its topics.
1www.gwap.org
2www.ontogame.org
Reading texts takes more time than observing im-
ages and the longer text, the worse. Since the
game must be of a dynamic character, it is unimag-
inable that the players would spend minutes read-
ing an input text. Therefore, it must be opened to
the players ?part? by ?part?.
So far, besides the Onto games, two more games
with texts have appeared: What did Shannon
say?3, the goal of which is to help the speech
recognizer with difficult-to-recognize words, and
Phrase Detectives4 (Kruschwitz, Chamberlain,
Poesio, 2009), the goal of which is to identify re-
lationships between words and phrases in a text.
No information about their popularity has been
published yet.
Motivated by the GWAP portal, the LGame por-
tal5 dedicated to language games has been estab-
lished. The LGame portal has been opened with
the Shannon game, a game of intentionally hidden
words in the sentence, where players guess them,
and the Place the Space game, a game of word
segmentation.
2 Coreference
Coreference occurs when several referring expres-
sions in a text refer to the same entity (e.g. per-
son, thing, fact). A coreferential pair is marked
between subsequent pairs of the referring expres-
sions. A sequence of coreferential pairs referring
to the same entity in a text forms a coreference
chain. The coreferential pairs and the coreference
chains cover only the identity relation.
Many projects for various languages on the
coreference annotation by linguists are running.
The annotated data serve as a basis for further
linguistic study of coreference, and most impor-
tantly also to train and test procedures for auto-
matic coreference resolution, which is a task that
3lingo.clsp.jhu.edushannongame.html
4www.phrasedetectives.org
5www.lgame.cz
52
many other applications can benefit from, e.g. text
summarization, question answering, and informa-
tion retrieval.
Manual annotation is costly and time consum-
ing. We propose a design of the PlayCoref game
? to appear at the LGame portal ? as an alternative
way of the coreference annotation collection, and
most importantly, of a substantially larger volume
than any expert annotation can ever achieve.
3 The PlayCoref Game
3.1 Game Design
We prepare the game for Czech and English first.
However, PlayCoref can be played in any lan-
guage.
The game is designed for two players. The
game starts with several first sentences of the doc-
ument displayed in the players? sentence window.
According to the restrictions put on the members
of the coreferential pairs, parts of the text are un-
locked (i.e. they are active) while the other parts
are locked (i.e. they are inactive); both of them
are graphically distinguished. In our case, only
nouns and selected pronouns are unlocked. The
players mark coreferential pairs between the in-
dividual unlocked words in the text (no phrases
are allowed). They mark the coreferential pairs as
undirected links.
During the session, the number of words the
opponent has linked into the coreferential pairs is
displayed to the player. The number of sentences
with at least one coreferential pair marked by the
opponent is displayed to the player as well. Re-
vealing more information about the opponent?s ac-
tions would affect the independency of the play-
ers? decisions.
If the player finishes pairing all the related
words in the visible part of the document (visible
to him), he asks for the next sentence of the docu-
ment. It appears at the bottom of the player?s sen-
tence window. The player can remove pairs cre-
ated before at any time and can make new pairs in
the sentences read so far. The session goes on this
way until the end of the session time. More than
one document can be present in the session.
After the session, the players? scores are calcu-
lated and displayed.
Instructions for the Players Instructions for the
players must be as comprehensible and concise as
possible. To mark a coreferential pair, no linguis-
tic knowledge is required, thus no extensive anno-
tation guidelines need to be formulated. It is all
about the text comprehension ability.
3.2 Game Data
Any textual data can be used in the game, but the
following pre-processing steps are necessary.
Tagging Most importantly, the morphological
tagging (usually preceded by tokenization) is
required to recognize part-of-speech categories
(and sub-part-of-speech categories), in order to
lock/unlock individual words for the game. For
most languages, tagging is a well solved problem
(e.g. for Czech: the MORC?E tagger6, for English:
TnT tagger7).
Text Parts Locking In the game, we work with
coreferential links between the individual words
only. The coreferential pairs that link larger text
parts consisting of clauses or even several sen-
tences are disregarded. Their marking requires lin-
guistic knowledge and extensive training.
Our research shows that pronouns that are usu-
ally members of such ?undesirable? links can
be detected automatically in advance (at least in
Czech). They will get locked, so the players will
not consider them at all during the sessions.
Automatic Coreference Resolution According
to the way we calculate the players scores (see be-
low), an automatic procedure for coreference res-
olution is required. If this procedure works on a
different layer than the surface layer, further auto-
matic processing of the data may be needed.
4 Data Quality
4.1 Players? Score
We want to obtain a large volume of data so we
must first attract the players and motivate them
to play the game more and more. As a reward
for their effort we present scoring. We hope that
the players? appetite to win, to confront with their
opponents and to place well in the long-term top
scores tables correlates with our research aims and
objectives.
Our goal is to ensure the highest quality of the
annotation. The scoring function should reflect
the game data quality and thus motivate the play-
ers to produce the right data. An agreement with
6ufal.mff.cuni.cz/morce
7www.coli.uni-saarland.de/?thorsten/
tnt/
53
the manual expert annotation would be a perfect
scoring function. But the manual annotation is not
available for all languages and above all, it is not
our goal to annotate already annotated data.
An automatic coreference resolution procedure
serves as a first approximation for the scoring
function. Since the procedure does not work for
?100%?, we need to add another component. We
suppose that most of the players will mark the
coreferential pairs reliably. Then an agreement
between the players? pairs indicates correctness,
even if the pair differs from the output of auto-
matic coreference resolution procedure. There-
fore, the inter-player agreement will become the
second component of the scoring function. To mo-
tivate the players to ask for more parts of the text
(and not only ?tune? links in the initially displayed
sentences), the third component of the scoring
function will award number of created coreferen-
tial links.
The players get points for their coreferential
pairs according to the equation ptsA = w1 ?
ICA(A, acr) + w2 ? ICA(A,B) + w3 ? N(A)
whereA andB are the players, acr is an automatic
coreference resolution procedure, ICA stands for
the inter-coder agreement that we can simultane-
ously express either by the F-measure or Krippen-
dorff?s ? (Krippendorf, 2004), N is a contribu-
tion of the number of created links, and weights
0 ? w1, w2 ? 1, w1, w2, w3 ? R (summing to 1)
are set empirically.
The score is calculated at the end of the ses-
sion and no running score is being presented dur-
ing the session. From the scientific point of view,
the scores serve for the long term quality control
of the players? annotation.
4.2 Interactivity Issues
The degree of a player-to-player interactivity con-
tributes to the attractiveness of the game. From the
player?s point of view, the more interactivity, the
better. For example, knowing both his and the op-
ponent?s running score would be very stimulating
for the mutual competitiveness. From the linguis-
tics? point of view, once any kind of interaction is
allowed, statistically pure independency between
the players? decisions is lost. A reasonable trade-
off between the interactivity and the independency
must be achieved. Interactivity that would lead to
cheating and decreasing the quality of the game
data must be avoided.
Allowing the players to see their own running
score would lead to cheating. The players might
adjust their decisions according to the changes in
the score. Another possible extension of interac-
tivity that would lead to cheating is highlighting
words that the opponent used in the coreferential
pairs. The players might then wait for the oppo-
nent?s choice and again, adjust their decisions ac-
cordingly. Such game data would be strongly bi-
ased. However, we still believe that a slight idea of
what the opponent is doing can boost inter-coder
agreement and yet avoid cheating. Revealing the
information about the opponent?s number of pairs
and number of sentences with at least one pair of-
fers not zero but low interactivity, yet it will not
harm the quality of the data.
4.3 Post-Processing
The players mark the coreferential links undi-
rected. This strategy differs from the general con-
ception of coreference being understood as either
the anaphoric or cataphoric relation depending on
the ?direction? of the link in the text. We believe
that the players will benefit from this simplifica-
tion and so will the data quality. After the ses-
sion, the coreference chains are automatically re-
constructed from the coreferential pairs.
4.4 Evaluation
Data with manually annotated coreference will be
used to measure the game data quality. We will
also study how much the scoring function suffers
from the difference between the output of the au-
tomatic coreference resolution procedure and the
manual annotation (gold standard). For Czech, we
will use the data from PDT 2.0, for English from
MUC-6.
PDT 2.0 8 contains the annotation of grammat-
ical and pronominal textual coreference. Nomi-
nal textual coreference is being annotated in PDT
2.0 in an ongoing project (Nedoluzhko, 2007).
Since the PDT 2.0 coreference annotation oper-
ates on the so-called tectogrammatical layer (layer
of meaning) and PlayCoref plays on the surface
layer, the coreferential pairs must be projected to
the surface first. The process consists of several
steps and only a part of the coreferential pairs is
actually projectable to the surface (links between
nodes that have no surface counterpart get lost).
8ufal.mff.cuni.cz/pdt2.0
54
MUC-6 9 operates on the surface layer. This
data can be used in a much more straightforward
way. The coreferential pairs are marked between
nouns, noun phrases, and pronouns and no projec-
tion is needed. The links with noun phrases are
disregarded.
Evaluation Methods For the game data evalu-
ation, well established methods for calculating an
inter-annotator agreement in the coreference anno-
tation will be employed. These methods consider
a coreference chain to be a set of words and they
measure the agreement on the membership of the
individual words in the sets (Passonneau, 2004).
Weighted agreement coefficients such as Krippen-
dorf?s ? (Krippendorf, 2004) need to be used -
sets of words can differ only partially, which does
not mean a total disagreement.
5 Further Work
Acquisition Evaluation Process The quality of
the game annotation undergoes standard evalua-
tion. Apart from collecting, assuming the game
reaches sufficient popularity, long-term monitor-
ing of the players? outputs can bring into question
new issues concerning the game data quality: How
much can we benefit from presenting a document
into more sessions? Should we prefer the output of
more reliable and experienced players during the
evaluation? Should we omit the output of ?not-so-
reliable? players?
Named Entity Recognition The step of the
named entity recognition will be applied in the
subsequent stages of the project. Multi-word ex-
pressions that form a named entity (e.g. ?Czech
National Bank?) will be presented to the players
as a single unit of annotation. We also plan to im-
plement a GWAP for named entity recognition.
6 Conclusion
We have presented the concept of the PlayCoref
game, a proposed language game that brings a
novel approach to collecting coreference annota-
tion of texts using the enormous potential of In-
ternet users. We have described the design of the
game and discussed the issues of interactivity of
the players and measuring the player score ? is-
sues that are crucial both for the attractiveness of
the game and for the quality of the game data. The
9cs.nyu.edu/faculty/grishman/muc6.html
game can be applied on any textual data in any lan-
guage, providing certain basic tools also discussed
in the paper exist. The GWAPs are open-ended
stories so until the game is released, it is hard to
say if the players will find it attractive enough. If
so, we hope to collect a large volume of data with
coreference annotation at extremely low costs.
Acknowledgments
We gratefully acknowledge the support of the
Czech Ministry of Education (grants MSM-
0021620838 and LC536), the Czech Grant
Agency (grant 405/09/0729), and the Grant
Agency of Charles University in Prague (project
GAUK 138309).
References
Klaus Krippendorf. 2004. Content Analysis: An Introduc-
tion to Its Methodology, second edition, chapter 11, Sage,
Thousand Oaks, CA.
Udo Kruschwitz, Jon Chamberlain, Massimo Poesio. 2009.
(Linguistic) Science Through Web Collaboration in the
ANAWIKI project. In Proceedings of the WebSci?09: So-
ciety On-Line, Athens, Greece, in press.
Lucie Kuc?ova?, Eva Hajic?ova?. 2005. Coreferential Relations
in the Prague Dependency Treebank. In Proceedings of
the 5th International Conference on Discourse Anaphora
and Anaphor Resolution, San Miguel, Azores, pp. 97?102.
Edith. L. M. Law et al 2007. Tagatune: A game for music
and sound annotation. In Proceedings of the Music In-
formation Retrieval Conference, Austrian Computer Soc.,
pp. 361?364.
Anna Nedoluzhko. 2007. Zpra?va k anotova?n?? rozs???r?ene?
textove? koreference a bridging vztahu? v Praz?ske?m
za?voslostn??m korpusu (Annotating extended coreference
and bridging relations in PDT). Technical Report, UFAL,
MFF UK, Prague, Czech Republic.
Rebecca J. Passonneau. 2004. Computing Reliability for
Coreference. Proceedings of LREC, vol. 4, pp. 1503?
1506, Lisbon.
Katharina Siorpaes and Martin Hepp. 2008. Games with a
purpose for the Semantic Web. IEEE Intelligent Systems
Vol. 23, number 3, pp. 50?60.
Luis van Ahn and Laura Dabbish. 2004. Labelling images
with a computer game. In Proceedings of the SIGHI Con-
ference on Human Factors in Computing Systems, ACM
Press, New York, pp. 319?326.
Luis van Ahn and Laura Dabbish. 2008. Designing Games
with a Purpose. Communications of the ACM, vol. 51, No.
8, pp. 58?67.
Marc Vilain et al 1995. A Model-Theoretic Coreference
Scoring Scheme. Proceedings of the Sixth Message Un-
derstanding Conference, pp. 45?52, Columbia, MD.
55
Proceedings of the Third Linguistic Annotation Workshop, ACL-IJCNLP 2009, pages 108?111,
Suntec, Singapore, 6-7 August 2009. c?2009 ACL and AFNLP
The Coding Scheme for Annotating Extended Nominal Coreference 
and Bridging Anaphora in the Prague Dependency Treebank 
Anna Nedoluzhko,  Ji?? M?rovsk?,  Petr Pajas
Charles University in Prague
Institute of Formal and Applied Linguistics
{nedoluzko, mirovsky, pajas}@ufal.mff.cuni.cz
Abstract
The present paper outlines an ongoing project 
of annotation of the extended nominal corefer-
ence and the bridging anaphora in the Prague 
Dependency Treebank. We describe the anno-
tation  scheme  with  respect  to  the  linguistic 
classification of coreferential and bridging re-
lations and focus also on details of the annota-
tion process from the technical point of view. 
We present methods of helping the annotators 
?  by  a  pre-annotation  and  by  several  useful 
features  implemented  in  the  annotation  tool. 
Our method of the inter-annotator agreement 
is focused on the improvement of the annota-
tion  guidelines;  we  present  results  of  three 
subsequent measurements of the agreement.
1 Introduction
The Prague Dependency Treebank (PDT 2.0) is a 
large collection  of linguistically  annotated  data 
and documentation (Haji?  et al, 2006). In PDT 
2.0,  Czech  newspaper  texts  are  annotated  on 
three  layers.  The most abstract  (tectogrammati-
cal) layer includes the annotation of coreferential 
links of two types: grammatical coreference (typ-
ically within a single sentence) and textual coref-
erence (for pronominal and zero anaphora). The 
current paper focuses on the present annotation 
of  extended  textual  coreference,  where  the 
anaphoric  expression  is  neither  personal  pro-
noun, nor zero. Also the annotation of bridging 
anaphora on PDT is discussed.
In the last few years, a number of annotation 
schemes have been released, three of which are 
to be shortly presented here. The MUC is consid-
ered to be the most standard annotation scheme 
(Hirschman, 1997) and it  is  used in more than 
one  application  (MUC-6,  MUC-7,  ACE).  The 
advantage of this scheme is its simplicity and a 
very  detailed  linguistically  oriented  coding 
scheme.  It  has  been  however  criticized  for  its 
vague interpretation of the notion of coreference 
and for  the  limited  coverage of  relations  (only 
identical  relation  between  nouns  is  annotated). 
One of the most well known later approaches is 
MATE (Poesio, 2004)  and its  extension on the 
GNOME  corpus.  The  project  is  meant  to  be 
multi-functional. The annotation scheme was pri-
marily  developed  for  dialog  acts  analyses,  but 
may be easily  adapted  for  any other  investiga-
tion. In the extended GNOME scheme, the iden-
tical  coreference  is  annotated  along with  some 
bridging  relations,  such  as  ELEMENT,  SUB-
SET,  POSSession  and  OTHER for  underspeci-
fied relations. In PoCoS (Krasavina and Chiar-
chos, 2007), a two layer coreference annotation 
scheme was suggested: the Core Layer is general 
and reusable, while the Extended Layer supports 
a wider range of specific extensions.
In this document, we present the application of 
coreference  annotation  on  a  slavonic  language 
(Czech).  Czech  has  no  definite  article,  so  in 
many cases, an anaphoric relation cannot be eas-
ily identified. That's why we concentrated solely 
on coreference, i.e. on the case when two expres-
sions denote the same entity. Anaphoric relation 
between  non-coreferential  objects  is  annotated 
separately,  together  with  some  other  types  of 
bridging anaphora (see 2.1).
2 Methods of coreference and bridging 
anaphora annotation
Subject to annotation are pairs of coreferring ex-
pressions, the preceding expression is called an-
tecedent, the subsequent one is called anaphor.
The  (mostly  manual)  annotation  of  the  ex-
tended  coreference  and  bridging  anaphora  pro-
ceeds  basically  in  one  phase.  Unlike 
MUC/MATE/PoCoS projects,  where  annotation 
is divided into two phases (identifying  elements 
that can come in coreference relation (so called 
?markables?) and  establishing  anaphoric  rela-
tion), we do not make preliminary annotation of 
?markables?. Realizing the disadvantage of diffi-
cult agreement comparison, we still think that to 
separate identifying ?markables? is unnecessary 
in case of a language without grammatical cate-
gory of definiteness.
108
2.1 The annotation scheme
For the time being, we annotate textual corefer-
ence and bridging anaphora. In what follows, we 
briefly  present  the  classification  of  these  two 
types of context-dependences.
The  cases  where  anaphor  is  a  personal, 
demonstrative or zero pronoun are already anno-
tated in PDT. In the present annotation, the most 
cases of anaphoric expressions are expressed by 
NP with  nominal  head,  in  some cases  also  by 
pronominal  demonstrative  adverbs  (there,  then 
etc.),  adjectives  (by  named  entities  (e.g.  Ger-
many ? German) and possessive forms)), numer-
als or verbs (own ? ownership), see ex. (1).
Textual coreference is further classified into 
two types ? coreference of NPs with specific  or 
generic coreference. This decision is made on the 
basis of the expectation, that generic coreferen-
tial  chains  have  different  anaphoric  rules  from 
the specific ones. Into this group, there is also in-
cluded  a  big number  of  abstract  nouns,  whose 
coreference is not quite clear in every particular 
case. So, the generic type of textual coreference 
serves as the ambiguity group too. 
In  bridging anaphora we distinguish PART, 
SUBSET and FUNCT traditional  relations  (see 
e.g. Clark 1977), CONTRAST for coherence rel-
evant  discourse  opposites  (e.g.  People don't  
chew, it's cows who chew) and further underspec-
ified group REST, which is  used  for capturing 
bridging references ? potential  candidates for  a 
new bridging group (e.g. location ? resident, rel-
atives, event ? argument and some others).
2.2 Annotation Principles
In order to develop maximally consistent annota-
tion scheme, we follow a number of basic princi-
ples. Some of them are presented below: 
Chain principle: coreference relations in text 
are organized in ordered chains.  The most recent 
mention  of  a referent  is  marked  as  antecedent. 
This  principle  is  controlled  automatically  (see 
3.1.2). Chain principle does not concern bridging 
anaphora.
Principle of the maximum length of corefer-
encial  chains also  concerns  only  the  case  of 
coreference.  It  says  that  in  case  of  multiple 
choice, we prefer to continue the existing coref-
erence chain, rather than to begin a new one. To 
satisfy  this  principle,  grammatical  coreferential 
chains are being continued by textual ones, and 
already annotated  textual  coreferences  are con-
tinued  by  currently  annotated   non-pronominal 
links in turn.
The principle of maximal size of an anaforic 
expression:  subject  to annotation is always the 
whole  subtree  of  the  antecedent/anaphor.  This 
principle is partially directed by the dependency 
structure  of tectogrammatical trees  and may be 
sometimes counter-intuitive. See ex. (1):
(1)Henry's brother Nicholas has owned the 
Hall  for  27  years.  On  Nicholas'  death,  it 
passed  into  the  ownership  of  his  nephew, 
Yarburgh Greame
The principle of cooperation with the syntac-
tic structure of a given dependency tree: we do 
not annotate relations, which are already caught 
up by the  syntactic  structure  of  the  tectogram-
matical tree. So, unlike most schemes, we do not 
annotate predication and apposition relations.
Preference  of  coreference  over  bridging 
anaphora: in case of multiple choice, we prefer 
coreference.
3 The Tool and Data Format
The primary format of PDT 2.0 is called PML. It 
is  an  abstract  XML-based  format  designed  for 
annotation of treebanks. For editing and process-
ing data in PML format, a fully customizable tree 
editor  TrEd  has  been  implemented  (Pajas  & 
?t?p?nek 2008).
TrEd  can  be  easily  customized  to  a  desired 
purpose by extensions that are included into the 
system as modules. In this section, we describe 
some features of an extension that has been im-
plemented for our purposes.
The data  scheme used  in  PDT 2.0 has  been 
slightly extended to support the annotation of the 
extended textual  coreference (that  has ? unlike 
the originally annotated textual coreference ? a 
type)  and  the  bridging  anaphora  (that  has  not 
been annotated before and also has a type). Tech-
nically,  various  kinds  of  non-dependency  rela-
tions between nodes in PDT 2.0 use dedicated re-
ferring  attributes  that  contain unique identifiers 
of the nodes they refer to.
3.1 Helping the Annotators
We employ two ways of helping the annotators 
in their  tedious  task. First,  we pre-annotate the 
data with highly probable coreference relations. 
The annotators check these links and can remove 
them  if  they  are  wrong.  This  approach  has 
proved to be faster than letting the annotators an-
notate  the  data  from scratch.  Second,  we have 
implemented several supporting features into the 
annotation  tool  (the  TrEd  extension)  that  help 
during the annotation process.
109
3.1.1 Pre-Annotation
We use a list of pairs of words that with a high 
probability  form  a  coreferential  pair  in  texts. 
Most of the pairs in the list consist of a noun and 
a derived adjective, which are different in Czech, 
e.g.  Praha  ?  pra?sk?  (in  English:  Prague  ? 
Prague,  like  in  the  sentence:  He  arrived  in  
Prague and found the Prague atmosphere quite  
casual).  The rest  of the list  is formed by pairs 
consisting  of  an abbreviation  and its  one-word 
expansion, e.g. ?R ? ?esko (similarly in English: 
USA ? States).  The whole list consists of more 
than  6  thousand  pairs  obtained  automatically 
from  the  morphological  synthesizer  for  Czech, 
manually checked and slightly extended.
3.1.2 Annotation
Several features have been implemented in the 
annotation tool to help with the annotation.
Manual  pre-annotation: If  the  annotator 
finds a word in the text that appears many times 
in the document and its occurrences seem to co-
refer,  he can create a coreferential chain out of 
these  words  by  a  single  key-stroke.  All  nodes 
that  have  the  same  tectogrammatical  lemma 
(t_lemma) become a part of the chain.
Finding the nearest antecedent: The annota-
tion  instructions  require  that  the  nearest  an-
tecedent is always selected for the coreferential 
link.  The  tool  automatically  re-directs  a  newly 
created coreferential arrow to the nearest one (in 
the already existing coreferential chain) if the an-
notator  selects  a farther  antecedent  by mistake. 
However, the rule of the nearest antecedent can 
be broken in less clear situations. For example, if 
there are three coreferential words in the text, A, 
B and C (ordered from left to right), and the an-
notator connects A and C (overlooking B), and 
later realizes that B is also coreferential with A 
and creates the arrow from B to A, the tool re-
connects  the  C?A arrow  to  C?B.  Thus,  the 
chain C?B?A is correctly created.
Preserving the coreferential chain: If the an-
notator  removes  an  arrow  and  a  coreferential 
chain is thus interrupted, the tool asks the anno-
tator whether it should re-connect the chain.
Text highlighting: The annotation of the ex-
tended  textual  coreference  and  the  bridging 
anaphora is  performed on the tectogrammatical 
layer of PDT. However, the annotators prefer to 
work on the surface form of the text, using the 
tectogrammatical trees only as a supporting de-
piction of the relations. After selecting a word in 
the sentences (by clicking on it), the tool deter-
mines  to  which  node  in  the  tectogrammatical 
trees the word belongs. Then, the projection back 
to the surface is performed and all words on the 
surface that belong to the selected node are high-
lighted. Only one word of the highlighted words 
is a lexical counterpart of the tectogrammatical 
node  (which  is  usually  the  word  the  annotator 
clicked on ? only in cases such as if the annotator 
clicks on a preposition or other auxiliary word, 
the lexical counterpart of the corresponding tec-
togrammatical  node  differs  from  the  word 
clicked  on).  Using  this  information,  also  all 
words  in  the  sentences  that  have  the  same 
t_lemma (again, we use only the lexical counter-
parts)  as  the  selected  word,  are  underlined. 
Words that are connected with the selected word 
via a coreferential chain are highlighted in such 
colors that indicate whether the last connecting 
relation in the chain was textual or grammatical. 
Moreover,  all  words  that  are  connected  via  a 
bridging anaphora with any word of this corefer-
ential chain, are highlighted in a specific color.
4 Application and Evaluation
The annotation of the extended textual  corefer-
ence  and  the  bridging  anaphora  started  in  No-
vember 2008. Two annotators work on different 
texts  (each document  is  annotated only by one 
annotator),  except  for  a small  overlap  used for 
measuring the inter-annotator agreement.
As of April 2009, about one fifth of PDT 2.0 
data  has been  annotated.  The detailed  numbers 
are summed in Table 1:
number of annotated documents 611
total number of sentences 9,425
total number of words 157,817
total number of tectogrammatical nodes 
(excl. the technical root) 127,954
number of newly annotated co-referring 
nodes  (bridging  relations  and  textual 
coreference)
16,874
number of co-referring nodes including 
the textual coreference originally anno-
tated in PDT 2.0
20,532
% of co-referring nodes 16 %
Table 1. Annotation statistics
Figure 1 presents the proportion of  types of 
coreferential  and  bridging  relations  in  the  cur-
rently annotated part of PDT1. TK_0 is used for 
textual coreference of specific NPs, TK_NR for 
textual  coreference  of  non-specific  NPs,  other 
abbreviations are believed to be self-explaining. 
1  Including the originally annotated textual coreference 
in PDT 2.0.
110
Inter-annotator agreement: For the purposes 
of checking and improving the annotation guide-
lines,  we  require  a  more  strict  inter-annotator 
agreement than agreement  on sets  (for  corefer-
ence),  often  used  in  other  projects  (e.g.  Pas-
soneau  2004).  For  both  the  extended  textual 
coreference  and the  bridging anaphora,  we use 
F1-measure for the agreement on the antecedent, 
and Cohen's  ? (Cohen 1960) for the agreement 
on the type of the link. In Table 2, the results of 
the three performed measurements of the inter-
annotator agreement are presented:
arrows 
TC (F1)
arrows 
TC + 
types 
(F1)
TC 
types 
only 
(?)
arrows
bridging 
(F1)
arrows
bridging
+ 
types (F1)
bridging 
types 
only
(?)
1st measure-
ment 
(40 sent.) 0.76 0.67 0.54 0.49 0.42 0.79
2nd measure-
ment
(40 sent.) 0.64 0.41 0.33 0.52 0.52 1
3rdmeasure-
ment 
(100 sent.) 0.80 0.68 0.67 0.59 0.57 0.88
Table 2. Evaluation of the inter-annotator agreement
5 Conclusion
We have presented the annotation scheme and 
principles  for  the  extended  textual  coreference 
and the bridging anaphora in PDT 2.0.
Pre-annotation and features of the annotation 
tool that help the annotators have been described 
in detail. We have presented basic statistics about 
the  annotation  completed  so  far  and  results  of 
first  measurements of the inter-annotator agree-
ment (which are difficult to compare to other ap-
proaches, as we do not use "markables"). 
Improvement of the inter-annotator agreement 
is  in  our  focus  for  the  upcoming  stage  of  the 
project. The experience shows that the agreement 
is greatly affected by parameters of the text as a 
whole. Short texts are generally far less demand-
ing for their interpretation than longer ones, texts 
with  many  abstract  and  general  notions  allow 
more  possibilities  of  interpretation  and  so  on. 
Frequent  problems  causing  inter-annotator  dis-
agreement  are  of  two  types  -  different  under-
standing  of  the  content  and  inaccuracy  of  the 
coding  scheme.  The  first  case  is  hardly  to  be 
solved entirely. The problems of the second type 
are  being  worked  on:  we  prepare  the  detailed 
classification of the inter-annotator disagreement 
and regularly specify the annotation guidelines.
Acknowledgment 
We gratefully  acknowledge  the support  of the 
Czech  Ministry  of  Education  (grant  MSM-
0021620838),  the  Czech  Grant  Agency  (grant 
405/09/0729), the European Union (project Com-
panions  ?  FP6-IST-5-034434),  and  the  Grant 
Agency  of  the  Academy  of  Sciences  of  the 
Czech Republic (project 1ET101120503).
References 
Clark, H. 1977. Bridging. In Johnson-Laird and Wa-
son, editors,  Thinking: Readings in Cognitive Sci-
ence. Cambridge. 411-420.
Cohen, J. 1960. A coefficient of agreement for nomi-
nal  scales.  Educational  and  Psychological  Mea-
surement, 20(1), 37-46.
Haji?,  J.  et  al.  2006.  Prague  Dependency  Treebank 
2.0.CD-ROM,  Linguistic  Data  Consortium,  LDC 
Catalog No.: LDC2006T01, Philadelphia.
Hirschman, L. 1997. MUC-7 coreference task defini-
tion. Version 3.0.
Krasavina, O. and  Ch. Chiarcos. 2007. PoCoS ? Pots-
dam  Coreference  Scheme.  Proc.  of  ACL  2007, 
Prague, Czech Republic
Ku?ov? L. and E. Haji?ov?. 2004. Coreferential Rela-
tions in the Prague Dependency Treebank. In 5th 
Discourse Anaphora and Anaphor Resolution Col-
loquium. Edi??es Colibri.
Pajas, P. and J. ?t?p?nek 2008. Recent advances in a 
feature-rich framework for treebank annotation. In 
The 22nd Interntional Conference on Computatio-
nal  Linguistics  ?  Proceedings  of  the  Conference. 
Manchester, pp. 673-680.
Passonneau, R. 2004. Computing Reliability for Core-
ference. In Proceedings of LREC, vol. 4, Lisbon, 
pp. 1503-1506.
Poesio, M. 2004 The MATE/GNOME Proposals for 
Anaphoric  Annotation,  Revisited.  Proc.  of  SIG-
DIAL.
Figure 1. Types of  relations
111
Coling 2010: Poster Volume, pages 775?781,
Beijing, August 2010
Connective-Based Measuring of the Inter-Annotator Agreement 
in the Annotation of Discourse in PDT
Ji?? M?rovsk?, Lucie Mladov?, ??rka Zik?nov?
Charles University in Prague
Institute of Formal and applied Linguistics
{mirovsky,mladova,zikanova}@ufal.mff.cuni.cz
Abstract
We present  several  ways of measuring 
the inter-annotator agreement in the on-
going annotation of semantic inter-sen-
tential discourse relations in the Prague 
Dependency  Treebank  (PDT).  Two 
ways have been employed to overcome 
limitations of measuring the agreement 
on  the  exact  location  of  the  start/end 
points of the relations. Both methods ? 
skipping one tree  level  in the start/end 
nodes,  and  the  connective-based  mea-
sure ? are focused on a recognition of 
the existence and of the type of the rela-
tions, rather than on fixing the exact po-
sitions of the start/end points of the con-
necting arrows.
1 Introduction
1.1 Prague Dependency Treebank 2.0
The  Prague  Dependency  Treebank  2.0  (PDT 
2.0; Haji? et al, 2006) is a manually annotated 
corpus of Czech. It belongs to the most complex 
and elaborate linguistically annotated treebanks 
in the world. The texts  are annotated on three 
layers  of  language description:  morphological, 
analytical (which expresses the surface syntactic 
structure),  and  tectogrammatical  (which  ex-
presses the deep syntactic structure). On the tec-
togrammatical layer, the data consist of almost 
50 thousand sentences.
For the upcoming release of PDT, many addi-
tional features are planned, coming as results of 
several  projects.  Annotation  of  semantic  in-
ter-sentential  discourse  relations  is  one  of  the 
planned additions.
To ensure the highest possible quality of the 
annotated data, it would be best if several anno-
tators annotated the whole data in parallel. After 
solving discrepancies in the annotations of the 
individual   annotators,  we  would  get  a  high-
-quality annotation. This approach is sometimes 
employed, but most of the times, the available 
resources prohibit it (which is also the case of 
the discourse annotation project). Manual anno-
tation of data is a very expensive and time con-
suming task. To overcome the restriction of lim-
ited resources, each part of the data is annotated 
by one annotator only, with the exception of a 
small  overlap  for  studying  and measuring  the 
inter-annotator (dis-)agreement.
1.2 Inter-Annotator Agreement in Compu-
tational Linguistics
Measuring  the  inter-annotator  agreement  has 
long been studied (not  only) in computational 
linguistics. It is a complex field of research and 
different domains require different approaches.
 Classical  measures  recall,  precision and  F-
measure offer the most straightforward and in-
tuitively interpretable results. Since they do take 
into account neither the contribution of chance 
in agreement, nor different importance of differ-
ent  types  of disagreement,  etc.,  other  more or 
less elaborate coefficients for measuring the in-
ter-annotator  agreement  have  been  developed. 
Cohen's ? (Cohen, 1960) is suitable for classifi-
cation tasks and tries to measure the agreement 
?above  chance?.  Krippendorff's  ? (Krippen-
dorff,  1980) can be used if we need to distin-
guish various  levels  of  disagreement.  Rebecca 
Passonneau (2004) offered a solution for mea-
suring agreement between sets of elements (like 
words in coreferential chains). Variants of these 
coefficients  can be used  for  measuring  agree-
ment among more than two annotators. A com-
prehensive overview of methods for measuring 
the inter-annotator agreement in various areas of 
775
computational linguistics was given in Artstein 
and Poesio (2008).
For measuring the inter-annotator agreement 
in  the  annotation  of  semantic  inter-sentential 
discourse relations in PDT, we have chosen two 
measures.  The  relations  do  not  form  natural 
chains  (unlike  e.g.  textual  and  grammatical 
coreference)  and  a  simple  F1-measure is  well 
suited for the agreement on existence of the re-
lations. For the agreement on types of the rela-
tions, which is a typical classification task, we 
use Cohen's ?.
Our  research  has  then  been  focused  not  on 
?how to measure? the agreement (which coeffi-
cient to use),  but rather on ?what to measure? 
(which phenomena), which is the topic of this 
paper.
2 Annotated Phenomena
Since the Prague Dependency Treebank 2.0 al-
ready contains three layers of linguistic annota-
tion, two of which (the analytical layer ? surface 
syntax, and the tectogrammatical layer ? under-
lying syntax and semantics) are tree representa-
tions,  we  took  advantage  of  these  existing 
analyses  and  carry  out  the  annotation  of  dis-
course phenomena directly on the trees (the tec-
togrammatical layer). It means that we capture 
the  discourse  relation  between  any  two 
(sub)trees in the document by drawing a link (an 
arrow)  between  the  highest  nodes  in  the 
(sub)trees, see Figure 1.
Figure 1. A discourse arrow between two nodes 
represents a discourse relation between two 
trees ? subtrees of the nodes.
Discourse relations we annotate are in princi-
ple  semantic  relations  that  apply between two 
abstract  objects  (Asher,  1993)  (i.e.  discourse 
units or text spans) and help make the text a co-
herent whole. These relations are often signaled 
by the presence of a discourse connective, i.e. 
expressions  as  ?ale?,  a?koliv?,  ?tedy?, 
?ov?em? (in  English  ?but?, ?although?, 
?then?, ?however? etc. In the first phase of the 
project,  we  only  annotate  relations  (link  the 
(sub)trees) where such a connective is present.
Every  relation  gets  assigned  two  important 
attributes:  first,  the  discourse  connective  that 
anchors the relation, and, second, the semantic 
type of the relation. For assigning semantic rela-
tions in the discourse, we developed a set of 22 
discourse-semantic tags (Mladov? et al, 2009). 
It is inspired partly by the set of semantic labels 
used for the annotation of the tectogrammatical 
layer in  PDT 2.0, relations within the sentence 
(the  tectogrammatical  syntactico-semantic  la-
bels  called  functors,  Mikulov?  et  al.,  2005)  ? 
since some of the semantic relations apply also 
intra-sententially, like causal or contrastive rela-
tions; and partly by the set of semantic tags in 
the Penn Discourse Treebank 2.0 (Prasad et al, 
2008), a discourse annotation project for Eng-
lish with similar aims.
Hence,  there  are  three  important  issues  for 
the  inter-annotator  measurement  on  the  dis-
course  level  of  annotation  in  PDT:  the  agree-
ment on the start  and target  nodes of the dis-
course  relation  (and  so  the  extent  of  the  dis-
course  arguments),  the  agreement  on  the  dis-
course connective assigned to the relation, and, 
last but not least, the agreement on the semantic 
type of the relation.
3 Measuring  the  Inter-Annotator 
Agreement in the Annotation of Dis-
course in PDT 2.0
3.1 Simple (Strict) Approach
The basic method we use for measuring the in-
ter-annotator  agreement  requires  a  perfect 
match  in  the  start  and end points  of  the  rela-
tions.  We  calculate  recall and  precision be-
tween the two annotators. Since these measures 
are not symmetric in respect to the annotators, 
we use their combination ? F1-measure ? which 
is symmetric. At each node, we compare target 
776
nodes of the discourse relations created by the 
two annotators. We consider two relations to be 
in agreement strictly only if they share both the 
start node and the target node.
A second number  we measure  is  an agree-
ment on the relation and the type. For consider-
ing two relations to be in agreement, we require 
that they share their start and target nodes, and 
also have attached the same type. 
Similarly,  we measure an agreement on the 
relation and the connective,  and an agreement 
on the relation, the type and the connective.
Attaching a type to a relation can be under-
stood as a classification task. We calculate two 
numbers ? simple ratio agreement and Cohen's 
? ?  on  the  types  attached  to  those  relations 
where the annotators agreed on the start and the 
target  nodes.  Cohen's  ? shows  the  level  of 
agreement on the types above chance.
For  completeness,  we also  calculate  simple 
ratio agreement on the connectives attached to 
those relations the annotators agreed on. 
Table 1 shows results of these measurements 
on two hundred sentences annotated in parallel 
by two annotators.1
measure value
F1-measure on relations 0.43
F1-measure on relations + types 0.34
F1-measure on relations + connectives 0.41
F1-measure on rel. + types + connect. 0.32
agreement on types 0.8
agreement on connectives 0.95
Cohen's ? on types 0.74
Table 1. The inter-annotator agreement for a 
strict match.
3.2 Skipping a Tree Level
Requiring a perfect agreement on the start node 
and the  target  node  of  the  discourse  relations 
turns out to be too strict for a fair evaluation of 
1 The annotators did not know which part of the data will 
be used for the measurement. The agreement was mea-
sured on 200 sentences (6 documents). PDT 2.0 contains 
data from three sources. The proportion of the sentences 
selected for the measurement reflected the total proportion 
of these data sources in the whole treebank.
the inter-annotator agreement. It often happens 
that the annotators recognize the same discourse 
relation in the data but they disagree either in 
the start node or the target node of the relation.
In  Zik?nov?  et  al.  (2010),  we  elaborate  on 
typical cases of this type of disagreement and 
show that in many times, the difference in the 
start node or the target node is only one level in 
the  tree.  We  have  also  shown that  these  dis-
agreements usually depend on a subtle and not 
crucial  difference  in  the  interpretation  of  the 
text.
Figure 2 shows an example of a disagreement 
caused  by  a  one-level  difference  in  the  target 
node of a relation. The two trees (a cut of them) 
represent these two sentences:
?V?m, ?e se n?s Rus? boj?te, ?e n?s nem?te  
r?di, ?e n?mi trochu pohrd?te. Ale Rusko nen?  
jenom ?irinovskij, Rusko nen? jenom vra?d?n? v  
?e?ensku.?
(In English: ?I know that you are afraid of us  
Russians, that you dislike us, that you despise  
us a little. But Russia is not only Zhirinovsky,  
Russia is not only murdering in Chechnya.?)
Figure 2. Disagreement in the target node.
Both annotators recognized the discourse re-
lation between the two sentences, both selected 
the same type (opposition), and both marked the 
same connective (?Ale?, in English ?But?). The 
disagreement in the target node is caused by the 
fact that one annotator has connected the second 
sentence with ?knowing that something is going  
on?,  while  the  other  has  connected  it  directly 
with the expression?something is going on?.
We have shown in Zik?nov? et al (2010) that 
allowing for skipping one tree level either at the 
start  node  or  the  target  node  of  the  relations 
leads to an improvement in the inter-annotator 
777
agreement  (F1-measure on  the  relations)  of 
about 10%. To be exact, by allowing to skip one 
tree  level  we mean:  if  node A is  a  parent  of 
node  B,  then  we  consider  arrows  A?C and 
B?C to  be  in  agreement,  as  well  as  arrows 
D?A and D?B. Table 2 shows present results 
of this type of measurement, performed on the 
same data as Table 1.
measure value
F1-measure on relations 0.54
F1-measure on relations + types 0.43
F1-measure on relations + connectives 0.49
F1-measure on rel. + types + connect. 0.39
agreement on types 0.8
agreement on connectives 0.92
Cohen's ? on types 0.73
Table 2. The inter-annotator agreement with 
one-level skipping.
The results  seem to be consistent,  since the 
improvement  here  is  similar  to  the  previously 
published test.  The F1-measure on the relations 
improved from 0.43 to 0.54. On the other hand 
(and also  consistently  with  the  previous  test), 
simple  ratio  agreement  on  types  (or  connec-
tives) and Cohen's  ? on types, all measured on 
those arrows the annotators  agreed on, do not 
change (more or less) after skipping one level is 
allowed. For these three measures, skipping one 
level only adds more data to evaluate and does 
not change conditions of the evaluation.
3.3 Connective-Based Approach
Further studies of discrepancies in parallel an-
notations show that skipping one level does not 
cover all ?less severe? cases of disagreement. 
Figure 3 presents an example of a disagree-
ment in the start node of a relation with a two-
level distance between the nodes. The two trees 
(a cut of them) represent these two sentences:
?Racion?ln?  kalkulace  vlastn?k?  n?jemn?ch  
byt? je proto povede k jedin?mu z?v?ru: jak?ko-
liv investice do oprav a modernizace n?jemn?ho  
bytov?ho fondu jsou a budou ztr?tov?. Proto je  
dal?? ch?tr?n? n?jemn?ch dom? neodvratn?.?
(In  English:  A  rational  calculation  of  the  
owners of the apartments will lead them to the  
only conclusion: any investment in repairs and  
renovation  of  the  rental  housing  resources  is  
and will be loss-making. Therefore, further di-
lapidation  of  the  apartment  buildings  is  in-
evitable.?)
Figure 3. Two-level disagreement in the start 
nodes
The difference between the annotators is that 
one of  them started  the  relation  at  the  phrase 
?will  lead to  the  only  conclusion:  any invest-
ment ... is and will be ...?, while the other start-
ed the relation directly  at the  phrase  ?any in-
vestment ? is and will be ...?.
However, both the annotators admittedly rec-
ognized the existence of the discourse relation, 
they also selected the same type (reason), and 
marked the same connective (?Proto?, in Eng-
lish ?Therefore?).
Figure 4 shows an example of a disagreement 
caused by a different selection of nodes and by 
the opposite direction of the arrows.  The trees 
represent these sentences: ?To je jasn?, ?e bych 
byl  rad?i,  kdyby  tady  dosud  st?l  z?mek  a  ne  
tohle  monstrum.  Ale  pro?  o  tom  st?le  
uva?ovat??
(In English:  It is clear that I would prefer if  
there still was a castle here and not this mon-
ster. But why keep thinking about it forever??) 
778
Figure 4. Disagreement in the nodes and in the 
direction of the arrows.
This time, both annotators recognized a pres-
ence  of  a  discourse  relation  and  marked  the 
same  connective  (?Ale?,  in  English  ?But?). 
They did not agree on the start/end nodes and 
on the type of the relation (opposition vs. con-
cession).
Figure 5 shows another type of ?slight? dis-
agreement. This time, the annotators agreed on 
everything but  the  range of the  relation.  They 
agreed both on the type (reason) and the con-
nective (?tak?,  in English  ?Thus?).  The three 
trees (again a cut of them) represent these three 
sentences:
?Podle  ??fa  kancel??e  p?edstavenstva  a.  s.  
?koda Zde?ka Lavi?ky jsou v?ak v ??jnu schop-
ny  fungovat  prakticky  v?echny  z?vody  bez  
v??n?j??ho omezen?. To je v rozporu s tvrzen?m  
veden?  koncernu  z  minul?ho  t?dne,  ve  kter?m  
?kodov?ck? management tvrdil, ?e se odst?vka  
dotkne v?t?iny provoz? a z?vod? ?kody Plze?,  
kter?  m?  v  sou?asnosti  28000  zam?stnanc?.  
Vznik?  tak  podez?en?,  ?e  se  veden?  koncernu  
sna?ilo vyvinout tlak na vl?du a donutit ji k za-
placen? dluh?.?
(In English:  ?According to Zden?k Lavi?ka,  
the  chief  of  the  board  of  directors  of  ?koda  
corp., virtually all factories are able to operate  
in October without  serious limitations. It  con-
tradicts the statement of the syndicate adminis-
tration from the last  week,  in which the man-
agement  of  ?koda  claimed  that  the  downtime  
would affect most of the plants and factories of  
?koda Plze?,  which  presently  has  28,000 em-
ployees. Thus a suspicion arises that the syndi-
cate  administration tried to  exert  pressure on  
the government and force it to pay the debts.?)
Figure 5. Disagreement in the range of the dis-
course relation.
The difference between the annotators  is  in 
the range of the start part of the arrows. One of 
the annotators marked the two first sentences as 
a  start  point  of  the  relation,  while  the  other 
marked  the  second sentence  as  the  start  point 
only. They agreed on the target point of the rela-
tion being the third sentence.
Inspired by these examples, we designed an-
other ? a connective-based ? measure for evalu-
ating the inter-annotator agreement  of the dis-
course relations. It seems that although the an-
notators  sometimes  fail  to  mark  the  same 
start/target nodes, or to select the same type or 
the  same  range  of  the  relations,  they  usually 
agree on the connective. This idea is also sup-
ported by high levels of the simple ratio agree-
ment on connectives measured on relations the 
annotators agreed on from Tables 1 and 2 (0.95 
and 0.91).  These numbers  show that  once the 
annotators agree on a relation,  they almost al-
ways agree also on the connective.2
The connective-based measure considers the 
annotators to be in agreement on recognizing a 
discourse relation if they agree on recognizing 
the same connective (please note that we only 
annotate discourse relations with explicitly ex-
pressed connectives).
Table 3 shows results of the evaluation of the 
inter-annotator agreement, performed using the 
connective-based measure, on the same data as 
Tables 1 and 2.
2 This is only an interpretation of the numbers, not a 
description of the annotation process; in fact, the an-
notators usually first find a connective and then 
search for the arguments of the discourse relation.
779
measure value
F1-measure on relations 0.86
F1-measure on relations + types 0.56
F1-measure on rel. + start/end nodes 0.43
F1-measure on rel. + types + nodes 0.34
agreement on types 0.65
agreement on start/end nodes 0.50
Cohen's ? on types 0.56
Table 3. The inter-annotator agreement evaluat-
ed with the connective-based measure.
This time (compared with Tables 1 and 2, i.e. 
the simple strict measure and the one-level skip-
ping measure),  the agreement (F1-measure) on 
relations  is  much higher  ? 0.86 (vs.  0.43 and 
0.54). On the other hand, simple ratio agreement 
(and Cohen's  ?)  measured  on  relations  recog-
nized by both annotators are lower than in Ta-
bles  1  and  2.  Although  the  annotators  might 
have recognized the same discourse relation, a 
(possibly small) difference in the interpretation 
of  the  text  caused  sometimes  not  only  a  dis-
agreement  in  the  positions  of  the  start/end 
nodes, but also in the type of the relation.
The  simple  ratio  agreement  on  types  from 
Table 3 (0.65) is probably the closest measure 
to  the  way  of  measuring  the  inter-annotator 
agreement on subtypes in the annotation of dis-
course relations in the Penn Discourse Treebank 
2.0,  reported  in  Prasad  et  al.  (2008).  Their 
agreement was 0.8.
4 Conclusion
We have presented several ways of measuring 
the inter-annotator agreement in the project  of 
annotating  the  semantic  inter-sentential  dis-
course relations with explicitly  expressed con-
nectives  in  the  Prague  Dependency  Treebank. 
We have shown examples from parallel annota-
tions that substantiate the importance of the al-
ternative  approaches  to  the  evaluation  of  the 
agreement.
Skipping a tree level in the start node or the 
end node of the relations helps to recognize fac-
tual  agreement  in some cases  where the  strict 
approach detects disagreement. We have shown 
that it is still too strict and that there are cases 
which we would like to  classify as agreement 
but the measure does not recognize them.
The  connective-based  measure  seems  to  be 
the closest one to what we would like to consid-
er a criterion of agreement. It disregards the ac-
tual nodes that are connected with a discourse 
relation, and even disregards the direction of the 
relation. In this sense, it is the most benevolent 
of the three measures.
It does not mean that the simple strict mea-
sure or skipping a tree level are inferior or obso-
lete ways of measuring the agreement. All the 
measures  focus  on  different  aspects  of  the 
agreement  and  they  are  all  important  in  the 
process  of annotating the corpus,  studying the 
parallel annotations and improving the annota-
tion instructions. We may agree on the fact that 
on this level of language description, it is very 
hard to  achieve perfect  agreement  (Lee at  al., 
2006), yet we should never cease the effort to 
further specify and clarify the ways of annota-
tion, in order to catch the same  linguistic phe-
nomena in the same way, and thus provide sys-
tematic and coherent linguistic data.
Acknowledgments
We gratefully  acknowledge  support  from  the 
Czech  Ministry  of  Education  (grant  MSM-
0021620838),  the  Grant  Agency of the  Czech 
Republic  (grants  405/09/0729  and 
P406/2010/0875),  the Czech  Science  Founda-
tion (grant 201/09/H057), and the Grant Agency 
of  Charles  University  in  Prague  (GAUK 
103609).
References
Artstein R. and M. Poesio. 2008. Inter-coder agree-
ment for computational linguistics. Computational 
Linguistics 34/4, pp. 555?596.
Asher,  N.  1993.  Reference  to  Abstract  Objects  in  
Discourse. Kluwer Academic Publishers 
Cohen, J. 1960. A coefficient of agreement for nomi-
nal  scales. Educational  and  Psychological  Mea-
surement, 20(1), pp. 37?46.
Haji?, J., Panevov?, J., Haji?ov?, E., Sgall, P., Pajas, 
P.,  ?t?p?nek,  J.,  Havelka,  J.,  Mikulov?,  M., 
?abokrtsk?,  Z.,  and  M.  ?ev??kov?-Raz?mov?. 
2006.  Prague  Dependency  Treebank  2.0. CD-
ROM,  LDC2006T01,  Linguistic  Data  Consor-
tium, Philadelphia, USA.
780
Krippendorff, K. 1980.  Content Analysis: An Intro-
duction  to  Its  Methodology. Chapter  12.  Sage, 
Beverly Hills, CA, USA.
Lee,  A.,  Prasad,  R.,  Joshi,  A.,  Dinesh,  N.,  and B. 
Weber. 2006. Complexity of dependencies in dis-
course: Are dependencies in discourse more com-
plex than in syntax? J. Haji? and J. Nivre, (eds.). 
Proceedings  of  the  5th Workshop on Treebanks 
and  Linguistic  Theories  (TLT  2006).  Prague, 
Czech Republic, pp. 79?90.
Mikulov?,  M.  et  al.  2005:  Annotation  on  the  tec-
togrammatical  layer  in  the  Prague Dependency  
Treebank.  Annotation  manual. Avaiable  from 
http://ufal.mff.cuni.cz/pdt2.0/doc/manuals/en/t-
layer/pdf/t-man-en.pdf
Mladov? L., Zik?nov?, ?., Bed?ichov?, Z., and E. 
Haji?ov?. 2009. Towards a Discourse Corpus of  
Czech. Proceedings of the Corpus Linguistics 
Conference, Liverpool, Great Britain, in press 
(online proceedings: http://ucrel.lancs.ac.uk/publi-
cations/cl2009/).
Passonneau,  R.  2004.  Computing  Reliability  for  
Coreference. Proceedings  of  LREC, vol.  4,  Lis-
bon,  Portugal, pp. 1503?1506.
Prasad, R., Dinesh N., Lee A., Miltsakaki, E., Robal-
do, L., Joshi, A., Webber, B. 2008. The Penn Dis-
course Treebank 2.0. Proceedings of the 6th Inter-
national Conference on  Language Resources and 
Evaluation (LREC 2008), Morocco.
Zik?nov?  ?.,  Mladov?  L.,  M?rovsk?  J.,  and  P. 
J?nov?. 2010.  Typical Cases of Annotators? Dis-
agreement  in  Discourse  Annotations  in  Prague  
Dependency  Treebank. LREC  2010,  Malta,  in 
press.
781
Coling 2010: Demonstration Volume, pages 9?12,
Beijing, August 2010
Annotation Tool for Discourse in PDT
Ji?? M?rovsk?, Lucie Mladov?, Zden?k ?abokrtsk?
Charles University in Prague
Institute of Formal and applied Linguistics
{mirovsky,mladova,zabokrtsky}@ufal.mff.cuni.cz
Abstract
We present a tool for annotation of se?
mantic  inter?sentential  discourse  rela?
tions  on  the  tectogrammatical  layer  of 
the  Prague  Dependency  Treebank 
(PDT).  We present  the way of helping 
the annotators by several useful features 
implemented in the annotation tool, such 
as a possibility to combine surface and 
deep  syntactic  representation  of  sen?
tences during the annotation, a possibili?
ty  to  define,  display and connect  arbi?
trary  groups  of  nodes,  a  clause?based 
compact  depiction  of  trees,  etc.  For 
studying differences among parallel an?
notations, the tool offers a simultaneous 
depiction of parallel  annotations of the 
data.
1 Introduction
The  Prague  Dependency  Treebank  2.0  (PDT 
2.0; Haji? et al, 2006) is a manually annotated 
corpus of Czech. It belongs to the most complex 
end elaborate linguistically annotated treebanks 
in the world. The texts  are annotated on three 
layers  of  language description:  morphological, 
analytical (which expresses the surface syntactic 
structure),  and  tectogrammatical  (which  ex?
presses the deep syntactic structure). On the tec?
togrammatical layer, the data consist of almost 
50 thousand sentences.
For the future release of PDT, many addition?
al  features  are  planned,  coming  as  results  of 
several  projects.  Annotation  of  semantic  in?
ter?sentential  discourse  relations  (Mladov?  et 
al., 2009)1 is one of the planned additions. The 
1 It is performed in the project From the structure of a sen?
tence to textual relations (GA405/09/0729), as one of sev?
goal is not only to annotate the data, but also to 
compare the representation of these relations in 
the Prague Dependency Treebank with the an?
notation done at the Penn Treebank, which was 
carried  out  at  University  of  Pennsylvania 
(Prasad et al, 2008).
Manual  annotation  of  data  is  an  expensive 
and time consuming task. A sophisticated anno?
tation  tool  can  substantially  increase  the  effi?
ciency of the annotations and ensure a higher in?
ter?annotator agreement. We present such a tool.
2 Tree  Editor  TrEd  and  the  Annota?
tion Extension
The primary format of PDT 2.0 is called PML. 
It is an abstract XML?based format designed for 
annotation of linguistic corpora, and especially 
treebanks.  Data  in  the  PML  format  can  be 
browsed  and  edited  in  TrEd,  a  fully 
customizable  tree  editor  (Pajas  and  ?t?p?nek, 
2008).
TrEd is completely written in Perl and can be 
easily customized to a desired purpose by exten?
sions that are included into the system as mod?
ules.  In this paper,  we describe the main fea?
tures of an extension that has been implemented 
for  our  purposes.  The  data  scheme  used  in 
PDT 2.0 has been enriched too, to support the 
annotation of the discourse relations.
2.1 Features of the Annotation Tool
A tool for the annotation of discourse needs to 
offer several features:
? creation of a link between arguments of 
a relation
? exact specification of the arguments of 
the relation
eral tasks.
9
? assigning a connective to the relation
? adding additional information to the re?
lation (a type, a source, a comment etc.)
Links between arguments:  The annotation 
of discourse relations in PDT is performed on 
top of the tectogrammatical (deep syntactic) lay?
er of the treebank.  Similarly to another exten?
sion of TrEd, dedicated to the annotation of the 
textual  coreference  and the  bridging  anaphora 
(M?rovsk? et al, 2010), a discourse relation be?
tween nodes is  represented  by  a dedicated  at?
tribute  at the initial  node of the  relation,  con?
taining a unique identifier of the target node of 
the relation.2 Each relation has two arguments 
and is oriented ? one of the arguments is initial, 
the other one is a target of the link. The link is 
depicted as a curved arrow between the nodes, 
see Figure 1. Although the arrow connects the 
two nodes, it does not mean that the two nodes 
themselves equal the two arguments of the rela?
tion ? more about it later.
Figure 1. An arrow represents a link.
Additional  information  about  the  relation  is 
also  kept  at  the  initial  node  ?  there  is  an  at?
tribute for the type, an attribute for the source 
(who annotated it) and an attribute for a com?
ment.
Extent of the arguments:  Usually, an argu?
ment  of  a  discourse  relation  corresponds  to  a 
subtree  of a tectogrammatical  tree  and can be 
represented simply by the root node of the sub?
tree.  However,  there  are  exceptions  to  this 
2 The data representation allows for several discourse links 
starting at a single node ? there is a list of structured dis?
course elements representing the individual relations.
?rule?. Sometimes it is necessary to exclude a 
part of the subtree of a node from the argument, 
sometimes the argument consists of more than 
one tree and sometimes it is even impossible to 
set exactly the borders of the argument. To al?
low for  all  these  variants,  each discourse  link 
has two additional attributes specifying range of 
the initial/target argument (both are stored at the 
initial node of the link). The possible values are:
? ?0? (zero) ? the argument corresponds 
to the subtree of the node
? N (a  positive  integer)  ?  the  argument 
consists of the subtree of the node and of 
N subsequent (whole) trees
? ?group? ? the argument consists of an 
arbitrary set of nodes (details below); this 
should only be used if the previous op?
tions are not applicable
? ?forward?  ?  the  argument  consists  of 
the subtree of the node and an unspeci?
fied number of subsequent trees; should 
only be used if more specific options are 
not applicable
? ?backward?  ?  similarly,  the  argument 
consists of the subtree of the node and an 
unspecified  number  of  preceding  trees; 
should only be used if more specific op?
tions are not applicable
Groups: An argument of a discourse relation 
can consist of an arbitrary group of nodes, even 
from  several  trees.  The  fact  is  indicated  in  a 
range  attribute  of  the  relation  (by  value 
?group?).  Another  attribute  then  tells  which 
group it  is.  Groups of nodes inside one docu?
ment are identified  by numbers  (positive inte?
gers).  Each node can be a member  of several 
groups; a list of identifiers of groups a node be?
longs to is kept at the node. Every group has a 
representative  node  ?  if  a  discourse  link 
starts/ends at a group, graphically it starts/ends 
at the representative node of the group, which is 
the depth?first  node of the group belonging to 
the leftmost tree of the group. Figure 2 shows an 
example of a group. In the example,  the right 
son (along with its subtree) of the target node of 
the relation has been excluded from the target 
argument of the relation (by specifying the tar?
get group of nodes, which is graphically high?
lighted). The right son (and its subtree) is actu?
ally the initial argument of the relation.
10
Figure 2. A group of nodes.
Connectives: A connective of a discourse re?
lation  is  represented  as  a  list  of  identifiers  of 
(usually)  tectogrammatical  nodes  that  corre?
spond to the surface tokens of the connective; 
the list is kept at the initial node of the relation. 
It is often only one node, sometimes it consists 
of several nodes. However, some tokens (like a 
colon  ?  ?:?)  are  not  represented  on  the  tec?
togrammatical  layer  (at  least  not  as  a  node). 
Therefore, identifiers of nodes from the analyti?
cal layer are allowed as well.
Collapsed trees: To be able to display more 
information using less space, a collapsed mode 
of depicting trees has been implemented.
Figure 3. A collapsed mode of depicting trees.
 A simple algorithm based on the tectogram?
matical  annotation  has  been  employed  to  col?
lapse  each  subtree  representing  an  individual 
clause of the sentence into one node. Figure 3 
shows an example of two collapsed trees.
Discourse  relations  most  often  start/end  at 
nodes representing roots of the clauses. In those 
rare  cases  when  the  discourse  relation  should 
lead inside a clause, the annotators can un?col?
lapse  the  trees,  create  the  link,  and  collapse 
back. Such a link would then be depicted with a 
dotted arrow.
Other  features:  The  tool  also  incorporates 
some other features that make the annotation of 
discourse relations easier. Based on their prefer?
ence,  the annotators  can annotate the relations 
either on the trees or on the linear form of the 
sentences in the text window of the tool. In the 
sentences,  the  tokens  that  represent  the 
initial/target nodes of the relations are highlight?
ed and easily visible.
2.2 Parallel Annotations
To study discrepancies in parallel annotations, a 
mode for depicting parallel annotations exists. It 
can display annotations of the same data from 
two or more annotators. Figure 4 shows parallel 
annotations from two annotators. In this exam?
ple, the two annotators (?JZ? and ?PJ?) agreed 
on the relation on the top of the figure, they also 
marked the same connective (?Pot??),  and se?
lected the same type of the relation (?preced(?
ence)?). They also agreed on the range of both 
the  arguments  (?0?,  i.e.  the  subtrees  of  the 
nodes). The other relation (on the left, below the 
first one) has only been recognized by one an?
notator (?JZ?).
Figure 4. Parallel annotations.
11
3 Conclusion
From the technical point of view, we have de?
scribed features of an annotation tool for seman?
tic  inter?sentential  discourse  relations  in  the 
Prague  Dependency  Treebank  2.0.  We  have 
shown how it (hopefully in a simple and intu?
itive manner) allows for quite complex configu?
rations  of  arguments,  and  offers  features  that 
make the annotation easier. A mode for study?
ing  parallel  annotations  has  also  been  imple?
mented.
Evaluation of such a tool designed for a high?
ly specific task is difficult, as the tool does not 
produce any direct results (apart from the anno?
tated data) and is highly adapted to our ? given 
the tectogrammatical trees ? quite unique needs. 
(The annotated data themselves, of course, can 
be (and have been,  see Zik?nov? et  al., 2010) 
evaluated in various ways.) Bird and Liberman 
(2001) listed some very general requirements on 
annotation tools for linguistic corpora, namely:
? generality, specificity, simplicity,
? searchability, browsability,
? maintainability and durability.
The first requirement applies both to the an?
notation tool and the annotation framework. As 
described e.g. in Mladov? et al (2009), the an?
notation framework that we use is based on the 
knowledge obtained from studying various oth?
er systems, especially the Penn Discourse Tree?
bank (Prasad et al, 2008), but naturally it has 
been  adjusted  to  specific  needs  of  the  Czech 
language and PDT. The inter?connection of our 
system with the tectogrammatical layer of PDT 
helps  in  some  annotation  decisions,  as  many 
ambiguities have already been solved in the tec?
togrammatical annotation.
The second requirement  ? searchability  and 
browsability  ?  is  very  easily  fulfilled  in  our 
framework.  A  very  powerful  extension  for 
searching in PML?formatted  data,  called PML 
Tree  Query,  is  available  in  TrEd  (Pajas  and 
?t?p?nek, 2009).
PML is  a  well  defined  formalism  that  has 
been  used  extensively  for  large  variations  of 
data  annotation.  It  can be processed automati?
cally using btred, a command?line tool for ap?
plying Perl scripts to PML data, as well as inter?
actively using TrEd. Therefore, we believe that 
our  annotation  framework  and  the  annotation 
tool fulfill also the third requirement.
Acknowledgments
We gratefully  acknowledge  support  from  the 
Czech  Ministry  of  Education  (grant  MSM?
0021620838),  and  the  Grant  Agency  of  the 
Czech  Republic  (grants  405/09/0729  and 
P406/2010/0875).
References
Bird S. and M. Liberman. 2001. A formal framework 
for linguistic annotation. Speech Communication 
33, pp. 23?60.
Haji?, J., Panevov?, J., Haji?ov?, E., Sgall, P., Pajas, 
P.,  ?t?p?nek,  J.,  Havelka,  J.,  Mikulov?,  M., 
?abokrtsk?,  Z.,  and  M.  ?ev??kov??Raz?mov?. 
2006.  Prague  Dependency  Treebank  2.0. CD?
ROM,  LDC2006T01,  Linguistic  Data  Consor?
tium, Philadelphia, USA.
Mladov?,  L.,  Zik?nov?,  ?.,  Bed?ichov?,  Z.,  and E. 
Haji?ov?. 2009.  Towards a Discourse Corpus of  
Czech. Proceedings of the fifth Corpus Linguistics 
Conference, Liverpool, UK.
M?rovsk?, J.,  Pajas,  P.,  and A.  Nedoluzhko.  2010. 
Annotation  Tool  for  Extended  Textual  Corefer?
ence  and  Bridging  Anaphora. Proceedings  of 
LREC 2010, European Language Resources As?
sociation, Valletta, Malta.
Pajas, P. and J. ?t?p?nek. 2008. Recent advances in  
a feature?rich framework for treebank annotation. 
Proceedings  of  Coling  2008.  Manchester,  pp. 
673?680.
Pajas, P. and J. ?t?p?nek. 2009. System for Querying  
Syntactically Annotated Corpora. Proceedings of 
the ACL?IJCNLP 2009 Software Demonstrations, 
Association  for  Computational  Linguistics,  Sun?
tec, Singapore, pp. 33?36.
Prasad R., Dinesh N., Lee A., Miltsakaki E., Robal?
do L., Joshi A., and B. Webber. 2008.  The Penn  
Discourse  Treebank  2.0. Proceedings  of  the  6th 
International Conference on Language Resources 
and Evaluation (LREC 2008), Marrakech.
Zik?nov?,  ?.,  Mladov?,  L.,  M?rovsk?,  J.,  and  P. 
J?nov?. 2010.  Typical Cases  of  Annotators'  Dis?
agreement  in  Discourse  Annotations  in  Prague  
Dependency  Treebank.  Proceedings  of  LREC 
2010, European Language Resources Association, 
Valletta, Malta.
12
