Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pages 9?16,
Sydney, July 2006. c?2006 Association for Computational Linguistics
A Rote Extractor with Edit Distance-based Generalisation and
Multi-corpora Precision Calculation
Enrique Alfonseca12 Pablo Castells1 Manabu Okumura2 Maria Ruiz-Casado12
1Computer Science Deptartment 2Precision and Intelligence Laboratory
Univ. Auto?noma de Madrid Tokyo Institute of Technology
Enrique.Alfonseca@uam.es enrique@lr.pi.titech.ac.jp
Pablo.Castells@uam.es oku@pi.titech.ac.jp
Maria.Ruiz@uam.es maria@lr.pi.titech.ac.jp
Abstract
In this paper, we describe a rote extrac-
tor that learns patterns for finding seman-
tic relationships in unrestricted text, with
new procedures for pattern generalization
and scoring. These include the use of part-
of-speech tags to guide the generalization,
Named Entity categories inside the pat-
terns, an edit-distance-based pattern gen-
eralization algorithm, and a pattern accu-
racy calculation procedure based on eval-
uating the patterns on several test corpora.
In an evaluation with 14 entities, the sys-
tem attains a precision higher than 50% for
half of the relationships considered.
1 Introduction
Recently, there is an increasing interest in auto-
matically extracting structured information from
large corpora and, in particular, from the Web
(Craven et al, 1999). Because of the difficulty of
collecting annotated data, several procedures have
been described that can be trained on unannotated
textual corpora (Riloff and Schmelzenbach, 1998;
Soderland, 1999; Mann and Yarowsky, 2005).
An interesting approach is that of rote extrac-
tors (Brin, 1998; Agichtein and Gravano, 2000;
Ravichandran and Hovy, 2002), which look for
textual contexts that happen to convey a certain re-
lationship between two concepts.
In this paper, we describe some contributions
to the training of Rote extractors, including a pro-
cedure for generalizing the patterns, and a more
complex way of calculating their accuracy. We
first introduce the general structure of a rote ex-
tractor and its limitations. Next, we describe the
proposed modifications (Sections 2, 3 and 4) and
the evaluation performed (Section 5).
1.1 Rote extractors
According to the traditional definition of rote ex-
tractors (Mann and Yarowsky, 2005), they esti-
mate the probability of a relationship r(p, q) given
the surrounding contextA1pA2qA3. This is calcu-
lated, with a training corpus T , as the number of
times that two related elements r(x, y) from T ap-
pear with that same context A1xA2yA3, divided
by the total number of times that x appears in that
context together with any other word:
P (r(p, q)|A1pA2qA3) =
P
x,yr c(A1xA2yA3)
P
x,z c(A1xA2zA3)
(1)
x is called the hook, and y the target. In order
to train a Rote extractor from the web, this proce-
dure is usually followed (Ravichandran and Hovy,
2002):
1. Select a pair of related elements to be used
as seed. For instance, (Dickens,1812) for the
relationship birth year.
2. Submit the query Dickens AND 1812 to a
search engine, and download a number of
documents to build the training corpus.
3. Keep all the sentences containing both ele-
ments.
4. Extract the set of contexts between them and
identify repeated patterns. This may just be
the m characters to the left or to the right,
(Brin, 1998), the longest common substring
of several contexts (Agichtein and Gravano,
2000), or all substrings obtained with a suf-
fix tree constructor (Ravichandran and Hovy,
2002).
5. Download a separate corpus, called hook cor-
pus, containing just the hook (in the example,
Dickens).
6. Apply the previous patterns to the hook cor-
pus, calculate the precision of each pattern
9
in the following way: the number of times it
identifies a target related to the hook divided
by the total number of times the pattern ap-
pears.
7. Repeat the procedure for other examples of
the same relationship.
To illustrate this process, let us suppose that we
want to learn patterns to identify birth years. We
may start with the pair (Dickens, 1812). From the
downloaded corpus, we extract sentences such as
Dickens was born in 1812
Dickens (1812 - 1870) was an English writer
Dickens (1812 - 1870) wrote Oliver Twist
The system identifies that the contexts of the last
two sentences are very similar and chooses their
longest common substring to produce the follow-
ing patterns:
<hook> was born in <target>
<hook> ( <target> - 1870 )
In order to measure the precision of the ex-
tracted patterns, a new corpus is downloaded us-
ing the hook Dickens as the only query word, and
the system looks for appearances of the patterns
in the corpus. For every occurrence in which the
hook of the relationship is Dickens, if the target
is 1812 it will be deemed correct, and otherwise
it will be deemed incorrect (e.g. in Dickens was
born in Portsmouth).
1.2 Limitations and new proposal
We have identified the following limitations in this
algorithm: firstly, to our knowledge, no Rote ex-
tractor allows for the insertion of wildcards (e.g.
*) in the extracted patterns. Ravichandran and
Hovy (2002) have noted that this might be dan-
gerous if the wildcard matches unrestrictedly in-
correct sentences. However, we believe that the
precision estimation that is performed at the last
step of the algorithm, using the hook corpus, may
be used to rule out the dangerous wildcards while
keeping the useful ones.
Secondly, we believe that the procedure for cal-
culating the precision of the patterns may be some-
what unreliable in a few cases. For instance,
Ravichandran and Hovy (2002) report the follow-
ing patterns for the relationships Inventor, Discov-
erer and Location:
Relation Prec. Pattern
Inventor 1.0 <target> ?s <hook> and
Inventor 1.0 that <target> ?s <hook>
Discoverer 0.91 of <target> ?s <hook>
Location 1.0 <target> ?s <hook>
In this case, it can be seen that the same pattern
(the genitive construction) may be used to indi-
cate several different relationships, apart from the
most common use indicating possession. How-
ever, they all receive very high precision values.
The reason is that the patterns are only evaluated
for the same hook for which they were extracted.
Let us suppose that we obtain the pattern for Loca-
tion using the pairs (New York, Chrysler Building).
The genitive construction can be extracted from
the context New York?s Chrysler Building. After-
ward, when evaluating it, only sentences contain-
ing <target>?s Chrysler Building are taken into
account, which makes it unlikely that the pattern
is expressing a relationship other than Location,
so the pattern will receive a high precision value.
For our purposes, however, we need to collect
patterns for several relations such as writer-book,
painter-picture, director-film, actor-film, and we
want to make sure that the obtained patterns are
only applicable to the desired relationship. Pat-
terns like <target> ?s <hook> are very likely to
be applicable to all of these relationships at the
same time, so we would like to be able to discard
them automatically.
Hence, we propose the following improvements
for a Rote extractor:
? A new pattern generalization procedure that
allows the inclusion of wildcards in the pat-
terns.
? The combination with Named Entity recogni-
tion, so people, locations, organizations and
dates are replaced by their entity type in the
patterns, in order to increase their degree of
generality. This is in line with Mann and
Yarowsky (2003)?s modification, consisting
in replacing all numbers in the patterns with
the symbol ####.
? A new precision calculation procedure, in a
way that the patterns obtained for a given re-
lationship are evaluated on the corpus for dif-
ferent relationships, in order to improve the
detection of over-general patterns.
2 Proposed pattern generalization
procedure
To begin with, for every appearance of a pair of
concepts, we extract a context around them. Next,
those contexts are generalized to obtain the parts
that are shared by several of them. The procedure
is detailed in the following subsections.
10
Birth year:
BOS/BOS <hook> (/( <target> -/- number/entity )/) EOS/EOS
BOS/BOS <hook> (/( <target> -/- number/entity )/) British/JJ writer/NN
BOS/BOS <hook> was/VBD born/VBN on/IN the/DT first/JJ of/IN time expr/entity ,/, <target> ,/, at/IN location/entity ,/, of/IN
BOS/BOS <hook> (/( <target> -/- )/) a/DT web/NN guide/NN
Birth place:
BOS/BOS <hook> was/VBD born/VBN in/IN <target> ,/, in/IN central/JJ location/entity ,/,
BOS/BOS <hook> was/VBD born/VBN in/IN <target> date/entity and/CC moved/VBD to/TO location/entity
BOS/BOS Artist/NN :/, <hook> -/- <target> ,/, location/entity (/( number/entity -/-
BOS/BOS <hook> ,/, born/VBN in/IN <target> on/IN date/entity ,/, worked/VBN as/IN
Author-book:
BOS/BOS <hook> author/NN of/IN <target> EOS/EOS
BOS/BOS Odysseus/NNP :/, Based/VBN on/IN <target> ,/, <hook> ?s/POS epic/NN from/IN Greek/JJ mythology/NN
BOS/BOS Background/NN on/IN <target> by/IN <hook> EOS/EOS
did/VBD the/DT circumstances/NNS in/IN which/WDT <hook> wrote/VBD "/?? <target> "/?? in/IN number/entity ,/, and/CC
Capital-country:
BOS/BOS <hook> is/VBZ the/DT capital/NN of/IN <target> location/entity ,/, location/entity correct/JJ time/NN
BOS/BOS The/DT harbor/NN in/IN <hook> ,/, the/DT capital/NN of/IN <target> ,/, is/VBZ number/entity of/IN location/entity
BOS/BOS <hook> ,/, <target> EOS/EOS
BOS/BOS <hook> ,/, <target> -/- organization/entity EOS/EOS
Figure 1: Example patterns extracted from the training corpus for each several kinds of relationships.
2.1 Context extraction procedure
After selecting the sentences for each pair of re-
lated words in the training set, these are pro-
cessed with a part-of-speech tagger and a module
for Named Entity Recognition and Classification
(NERC) that annotates people, organizations, lo-
cations, dates, relative temporal expressions and
numbers. Afterward, a context around the two
words in the pair is extracted, including (a) at most
five words to the left of the first word; (b) all the
words in between the pair words; (c) at most five
words to the right of the second word. The context
never jumps over sentence boundaries, which are
marked with the symbols BOS (Beginning of sen-
tence) and EOS (End of sentence). The two related
concepts are marked as <hook> and <target>.
Figure 1 shows several example contexts extracted
for the relationships birth year, birth place, writer-
book and capital-country.
Furthermore, for each of the entities in the re-
lationship, the system also stores in a separate file
the way in which they are annotated in the training
corpus: the sequences of part-of-speech tags of ev-
ery appearance, and the entity type (if marked as
such). So, for instance, typical PoS sequences for
names of authors are ?NNP?1 (surname) and ?NNP
NNP? (first name and surname). A typical entity
kind for an author is person.
2.2 Generalization pseudocode
In order to identify the portions in common be-
tween the patterns, and to generalize them, we ap-
ply the following pseudocode (Ruiz-Casado et al,
in press):
1All the PoS examples in this paper are done with Penn
Treebank labels (Marcus et al, 1993).
1. Store all the patterns in a set P .
2. Initialize a setR as an empty set.
3. While P is not empty,
(a) For each possible pair of patterns, cal-
culate the distance between them (de-
scribed in Section 2.3).
(b) Take the two patterns with the smallest
distance, pi and pj .
(c) Remove them from P , and add them to
R.
(d) Obtain the generalization of both, pg
(Section 2.4).
(e) If pg does not have a wildcard adjacent
to the hook or the target, add it to P .
4. ReturnR
At the end, R contains all the initial patterns
and those obtained while generalizing the previous
ones. The motivation for step (e) is that, if a pat-
tern contains a wildcard adjacent to either the hook
or the target, it will be impossible to know where
it starts or ends. For instance, when applying the
pattern <hook> wrote * <target> to a text, the
wildcard prevents the system from guessing where
the title of the book starts.
2.3 Edit distance calculation
So as to calculate the similarity between two pat-
terns, a slightly modified version of the dynamic
programming algorithm for edit-distance calcula-
tion (Wagner and Fischer, 1974) is used. The dis-
tance between two patterns A and B is defined as
the minimum number of changes (insertion, addi-
tion or replacement) that have to be done to the
first one in order to obtain the second one.
The calculation is carried on by filling a ma-
trix M, as shown in Figure 2 (left). At the same
11
A: wrote the well known novel
B: wrote the classic novel
M 0 1 2 3 4 D 0 1 2 3 4
0 0 1 2 3 4 0 I I I I
1 1 0 1 2 3 1 R E I I I
2 2 1 0 1 2 2 R R E I I
3 3 2 1 1 2 3 R R R U I
4 4 3 2 2 2 4 R R R R U
5 5 4 3 3 2 5 R R R R E
Figure 2: Example of the edit distance algorithm. A and B are two word patterns;M is the matrix in which the edit distance
is calculated, and D is the matrix indicating the choice that produced the minimal distance for each cell inM.
time that we calculate the edit distance matrix, it
is possible to fill in another matrix D, in which we
record which of the choices was selected at each
step: insertion, deletion, replacement or no edi-
tion. This will be used later to obtain the gener-
alized pattern. We have used the following four
characters:
? I means that it is necessary to insert a token
in the first pattern to obtain the second one.
? R means that it is necessary to remove a to-
ken.
? E means that the corresponding tokens are
equal, so no edition is required.
? U means that the corresponding tokens are
unequal, so a replacement has to be done.
Figure 2 shows an example for two patterns,
A and B, containing respectively 5 and 4 to-
kens. M(5, 4) has the value 2, indicating the dis-
tance between the two complete patterns. For in-
stance, the two editions would be replacing well
by classic and removing known.
2.4 Obtaining the generalized pattern
After calculating the edit distance between two
patterns A and B, we can use matrix D to obtain
a generalized pattern, which should maintain the
common tokens shared by them. The procedure
used is the following:
? Every time there is an insertion or a deletion,
the generalized pattern will contain a wild-
card, indicating that there may be anything in
between.
? Every time there is replacement, the general-
ized pattern will contain a disjunction of both
tokens.
? Finally, in the positions where there is no edit
operation, the token that is shared between
the two patterns is left unchanged.
The patterns in the example will produced the
generalized pattern
Wrote the well known novel
Wrote the classic novel
???????????
Wrote the well|classic * novel
The generalization of these two patterns pro-
duces one that can match a wide variety of sen-
tences, so we should always take care in order not
to over-generalize.
2.5 Considering part-of-speech tags and
Named Entities
If we consider the result in the previous example,
we can see that the disjunction has been made be-
tween an adverb and an adjective, while the other
adjective has been deleted. A more natural result,
with the same number of editing operations as the
previous one, would have been to delete the adverb
to obtain the following generalization:
Wrote the well known novel
Wrote the classic novel
???????????
Wrote the * known|classic novel
This is done taking into account part-of-speech
tags in the generalization process. In this way, the
edit distance has been modified so that a replace-
ment operation can only be done between words of
the same part-of-speech.2 Furthermore, replace-
ments are given an edit distance of 0. This favors
the choice of replacements with respect to dele-
tions and insertions. To illustrate this point, the
distance between known|classic/JJ and old/JJ
2Note that, although our tagger produces the very detailed
PennTreebank labels, we consider that all nouns (NN, NNS,
NNP and NNPS) belong to the same part-of-speech class, and
the same for adjectives, verbs and adverbs.
12
Hook Birth Death Birth place Author of Director of Capital of
Charles Dickens 1812 1870 Portsmouth
{Oliver Twist,
The Pickwick Papers,
Nicholas Nickleby,
David Copperfield...}
None None
Woody Allen 1935 None Brooklin None
{Bananas,
Annie Hall,
Manhattan, ... }
None
Luanda None None None None None Angola
Table 1: Example rows in the input table for the system.
will be set to 0, because both tokens are adjectives.
In other words, the d function is redefined as:
d(A[i], B[j]) =
(
0 if PoS(A[i]) = PoS(B[j])
1 otherwise
(2)
Note that all the entities identified by the NERC
module will appear with a PoS tag of entity,
so it is possible to have a disjunction such as
location|organization/entity in a general-
ized pattern (See Figure 1).
3 Proposed pattern scoring procedure
As indicated above, if we measure the precision of
the patterns using a hook corpus-based approach,
the score may be inadvertently increased because
they are only evaluated using the same terms with
which they were extracted. The approach pro-
posed herein is to take advantage of the fact that
we are obtaining patterns for several relationships.
Thus, the hook corpora for some of the patterns
can be used also to identify errors done by other
patterns.
The input of the system now is not just a list
of related pairs, but a table including several rela-
tionships for the same entities. We may consider
it as mini-biographies as in Mann and Yarowsky
(2005)?s system. Table 1 shows a few rows in the
input table for the system. The cells for which
no data is provided have a default value of None,
which means that anything extracted for that cell
will be considered as incorrect.
Although this table can be written by hand, in
our experiments we have chosen to build it auto-
matically from the lists of related pairs. The sys-
tem receives the seed pairs for the relationships,
and mixes the information from all of them in a
single table. In this way, if Dickens appears in
the seed list for the birth year, death year, birth
place and writer-book relationships, four of the
cells in its row will be filled in with values, and
all the rest will be set to None. This is probably a
very strict evaluation, because, for all the cells for
which there was no value in any of the lists, any re-
sult obtained will be judged as incorrect. However,
the advantage is that we can study the behavior of
the system working with incomplete data.
The new procedure for calculating the patterns?
precisions is as follows:
1. For every relationship, and for every hook,
collect a hook corpus from the Internet.
2. Apply the patterns to all the hook corpora
collected. Whenever a pattern extracts a re-
lationship from a sentence,
? If the table does not contain a row for
the hook, ignore the result.
? If the extracted target appears in the cor-
responding cell in the table, consider it
correct.
? If that cell contained different values, or
None, consider it incorrect.
For instance, the pattern <target> ?s <hook>
extracted for director-film may find, in the Dick-
ens corpus, book titles. Because these titles do not
appear in the table as films directed by Dickens,
the pattern will be considered to have a low accu-
racy.
In this step, every pattern that did not apply at
least three times in the test corpora was discarded.
4 Pattern application
Finally, given a set of patterns for a particular
relation, the procedure for obtaining new pairs is
straightforward:
1. For any of the patterns,
2. For each sentence in the test corpus,
(a) Look for the left-hand-side context in
the sentence.
(b) Look for the middle context.
(c) Look for the right-hand-side context.
(d) Take the words in between, and check
that either the sequence of part-of-
speech tags or the entity type had been
13
Applied Prec. Pattern
3 1.0 BOS/BOS On/IN time expr/entity TARGET HOOK was/VBD baptized|born/VBN EOS/EOS
15 1.0 "/?? HOOK (/( TARGET -/-
4 1.0 ,/, TARGET ,/, */* Eugne|philosopher|playwright|poet/NNP HOOK earned|was/VBD */* at|in/IN
23 1.0 -|--/- HOOK (/( TARGET -/-
12 1.0 AND|and|or/CC HOOK (/( TARGET -/-
48 1.0 By|about|after|by|for|in|of|with/IN HOOK TARGET -/-
4 1.0 On|of|on/IN TARGET ,/, HOOK emigrated|faced|graduated|grew|has|perjured|settled|was/VBD
12 1.0 BOS/BOS HOOK TARGET -|--/-
49 1.0 ABOUT|ALFRED|Amy|Audre|Authors|BY| (...) |teacher|writer/NNPS HOOK (/( TARGET -|--/-
7 1.0 BOS/BOS HOOK (/( born/VBN TARGET )/)
3 1.0 BOS/BOS HOOK ,/, */* ,/, TARGET ,/,
13 1.0 BOS/BOS HOOK ,|:/, TARGET -/-
132 0.98 BOS/BOS HOOK (/( TARGET -|--/-
18 0.94 By|Of|about|as|between|by|for|from|of|on|with/IN HOOK (/( TARGET -/-
33 0.91 BOS/BOS HOOK ,|:/, */* (/( TARGET -|--/-
10 0.9 BOS/BOS HOOK ,|:/, */* ,|:/, TARGET -/-
3 0.67 ,|:|;/, TARGET ,|:/, */* Birth|son/NN of/IN */* General|playwright/NNP HOOK ,|;/,
210 0.63 ,|:|;/, HOOK (/( TARGET -|--/-
7 0.29 (/( HOOK TARGET )/)
Table 3: Patterns for the relationship birth year.
.
Relation Seeds Extr. Gener. Filt.
Actor-film 133 480 519 10
Writer-book 836 3858 4847 171
Birth-year 492 2520 3220 19
Birth-place 68 681 762 5
Country-capital 36 932 1075 161
Country-president 56 1260 1463 119
Death-year 492 2540 3219 16
Director-film 1530 3126 3668 121
Painter-picture 44 487 542 69
Player-team 110 2903 3514 195
Table 2: Number of seed pairs for each relation,
and number of unique patterns after the extraction
and the generalization step, and after calculating
their accuracy and filtering those that did not apply
3 times on the test corpus.
seen in the training corpus for that role
(hook or target). If so, output the rela-
tionship.
5 Evaluation and results
The procedure has been tested with 10 different
relationships. For each pair in each seed list, a
corpus with 500 documents has been collected us-
ing Google, from which the patterns are extracted.
Table 2 shows the number of patterns obtained. It
is interesting to see that for some relations, such as
birth-year or birth-place, more than one thousand
patterns have been reduced to a few. Table 3 shows
the patterns obtained for the relationship birth-
year. It can also be seen that some of the patterns
with good precision contain the wildcard *, which
helped extract the correct birth year in roughly 50
occasions. Specially of interest is the last pattern,
(/( HOOK TARGET )/)
which resulted in an accuracy of 0.29 with the pro-
Relation Precision Incl. prec. Applied
Actor-film 0% 76.84% 95
Writer-book 6.25% 28.13% 32
Birth-year 79.67% 79.67% 477
Birth-place 14.56% 14.56% 103
Country-capital 72.43% 72.43% 599
Country-president 81.40% 81.40% 43
Death-year 96.71% 96.71% 152
Director-film 43.40% 84.91% 53
Painter-picture - - 0
Player-team 52.50% 52.50% 120
Table 4: Precision, inclusion precision and num-
ber of times that a pattern extracted information,
when applied to a test corpus.
cedure here indicated, but which would have ob-
tained an accuracy of 0.54 using the traditional
hook corpus approach. This is because in other
test corpora (e.g. in the one containing soccer
players and clubs) it is more frequent to find the
name of a person followed by a number that is not
his/her birth year, while that did not happen so of-
ten in the birth year test corpus.
For evaluating the patterns, a new test corpus
has been collected for fourteen entities not present
in the training corpora, again using Google. The
chosen entities are Robert de Niro and Natalie
Wood (actors), Isaac Asimov and Alfred Bester
(writers), Montevideo and Yaounde (capitals),
Gloria Macapagal Arroyo and Hosni Mubarak
(country presidents), Bernardo Bertolucci and
Federico Fellini (directors), Peter Paul Rubens and
Paul Gauguin (painters), and Jens Lehmann and
Thierry Henry (soccer players). Table 4 shows the
results obtained for each relationship.
We have observed that, for those relationships
in which the target does not belong to a Named
14
Entity type, it is common for the patterns to extract
additional words together with the right target. For
example, rather than extracting The Last Emperor,
the patterns may extract this title together with
its rating or its length, the title between quotes,
or phrases such as The classic The Last Emperor.
In the second column in the table, we measured
the percentage of times that a correct answer ap-
pears inside the extracted target, so these examples
would be considered correct. We call this metric
inclusion precision.
5.1 Comparison to related approaches
Although the above results are not comparable to
Mann and Yarowsky (2005), as the corpora used
are different, in most cases the precision is equal
or higher to that reported there. On the other hand,
we have rerun Ravichandran and Hovy (2002)?s
algorithm on our corpus. In order to assure a
fair comparison, their algorithm has been slightly
modified so it also takes into account the part-of-
speech sequences and entity types while extract-
ing the hooks and the targets during the rule ap-
plication. So, for instance, the relationship birth
date is only extracted between a hook tagged as
a person and a target tagged as either a date or
a number. The results are shown in Table 5. As
can be seen, our procedure seems to perform bet-
ter for all of the relations except birth place. It
is interesting to note that, as could be expected,
for those targets for which there is no entity type
defined (films, books and pictures), Ravichandran
and Hovy (2002)?s extracts many errors, because
it is not possible to apply the Named Entity Rec-
ognizer to clean up the results, and the accuracy
remains below 10%. On the other hand, that trend
does not seem to affect our system, which had
very poor results for painter-picture, but reason-
ably good for actor-film.
Other interesting case is that of birth places.
A manual observation of our generalized patterns
shows that they often contain disjunctions of verbs
such as that in (1), that detects not just the birth
place but also places where the person lived. In
this case, Ravichandran and Hovy (2002)?s pat-
terns resulted more precise as they do not contain
disjunctions or wildcards.
(1) HOOK ,/, returned|travelled|born/VBN
to|in/IN TARGET
It is interesting that, among the three relation-
ships with the smaller number of extracted pat-
terns, one of them did not produce any result, and
Ravichandran
Relation Our approach and Hovy?s
Actor-film 76.84% 1.71%
Writer-book 28.13% 8.55%
Birth-year 79.67% 49.49%
Birth-place 14.56% 88.66%
Country-capital 72.43% 24.79%
Country-president 81.40% 16.13%
Death-year 96.71% 35.35%
Director-film 84.91% 1.01%
Painter-picture - 0.85%
Player-team 52.50% 44.44%
Table 5: Inclusion precision on the same test cor-
pus for our approach and Ravichandran and Hovy
(2002)?s.
the two others attained a low precision. Therefore,
it should be possible to improve the performance
of the system if, while training, we augment the
training corpora until the number of extracted pat-
terns exceeds a given threshold.
6 Related work
Extracting information using Machine Learning
algorithms has received much attention since the
nineties, mainly motivated by the Message Un-
derstanding Conferences (MUC6, 1995; MUC7,
1998). From the mid-nineties, there are systems
that learn extraction patterns from partially an-
notated and unannotated data (Huffman, 1995;
Riloff, 1996; Riloff and Schmelzenbach, 1998;
Soderland, 1999).
Generalizing textual patterns (both manually
and automatically) for the identification of re-
lationships has been proposed since the early
nineties (Hearst, 1992), and it has been applied
to extending ontologies with hyperonymy and
holonymy relationships (Kietz et al, 2000; Cimi-
ano et al, 2004; Berland and Charniak, 1999),
with overall precision varying between 0.39 and
0.68. Finkelstein-Landau and Morin (1999) learn
patterns for company merging relationships with
exceedingly good accuracies (between 0.72 and
0.93).
Rote extraction systems from the web have
the advantage that the training corpora can be
collected easily and automatically. Several
similar approaches have been proposed (Brin,
1998; Agichtein and Gravano, 2000; Ravichan-
dran and Hovy, 2002), with various applications:
Question-Answering (Ravichandran and Hovy,
2002), multi-document Named Entity Corefer-
ence (Mann and Yarowsky, 2003), and generating
15
biographical information (Mann and Yarowsky,
2005).
7 Conclusions and future work
We have described here a new procedure for build-
ing a rote extractor from the web. Compared to
other similar approaches, it addresses several is-
sues: (a) it is able to generate generalized patterns
containing wildcards; (b) it makes use of PoS and
Named Entity tags during the generalization pro-
cess; and (c) several relationships are learned and
evaluated at the same time, in order to test each
one on the test corpora built for the others. The re-
sults, measured in terms of precision and inclusion
precision are very good in most of the cases.
Our system needs an input table, which may
seem more complicated to compile that the list of
related pairs used by previous approaches, but we
have seen that the table can be built automatically
from the lists, with no extra work. In any case,
the time to build the table is significantly smaller
than the time needed to write the extraction pat-
terns manually.
Concerning future work, we are currently trying
to improve the estimation of the patterns accuracy
for the pruning step. We also plan to apply the ob-
tained patterns in a system for automatically gen-
erating biographical knowledge bases from vari-
ous web corpora.
References
E. Agichtein and L. Gravano. 2000. Snowball: Ex-
tracting relations from large plain-text collections.
In Proceedings of ICDL, pages 85?94.
M. Berland and E. Charniak. 1999. Finding parts in
very large corpora. In Proceedings of ACL-99.
S. Brin. 1998. Extracting patterns and relations from
the World Wide Web. In Proceedings of the WebDB
Workshop at the 6th International Conference on Ex-
tending Database Technology, EDBT?98.
P. Cimiano, S. Handschuh, and S. Staab. 2004. To-
wards the self-annotating web. In Proceedings of the
13th World Wide Web Conference, pages 462?471.
M. Craven, D. DiPasquo, D. Freitag, A. McCallum,
T. Mitchell, K. Nigam, and S. Slattery. 1999. Learn-
ing to construct knowledge bases from the world
wide web. Artificial Intelligence, 118(1?2):69?113.
M. Finkelstein-Landau and E. Morin. 1999. Extracting
semantic relationships between terms: supervised
vs. unsupervised methods. In Workshop on Ontolo-
gial Engineering on the Global Info. Infrastructure.
M. Hearst. 1992. Automatic acquisition of hyponyms
from large text corpora. In COLING-92.
S. Huffman. 1995. Learning information extraction
patterns from examples. In IJCAI-95 Workshop on
New Approaches to Learning for NLP.
J. Kietz, A. Maedche, and R. Volz. 2000. A method
for semi-automatic ontology acquisition from a cor-
porate intranet. In Workshop ?Ontologies and text?.
G. S. Mann and D. Yarowsky. 2003. Unsupervised
personal name disambiguation. In CoNLL-2003.
G. S. Mann and D. Yarowsky. 2005. Multi-field in-
formation extraction and cross-document fusion. In
ACL 2005.
M. Marcus, B. Santorini, and M.A. Marcinkiewicz.
1993. Building a large annotated corpus of En-
glish: the Penn Treebank. Computational Linguis-
tics, 19(2):313?330.
MUC6. 1995. Proceedings of the 6th Message Under-
standing Conference (MUC-6). Morgan Kaufman.
MUC7. 1998. Proceedings of the 7th Message Under-
standing Conference (MUC-7). Morgan Kaufman.
D. Ravichandran and E. Hovy. 2002. Learning surface
text patterns for a question answering system. In
Proceedings of ACL-2002, pages 41?47.
E. Riloff and M. Schmelzenbach. 1998. An empirical
approach to conceptual case frame acquisition. In
Proceedings of WVLC, pages 49?56.
E. Riloff. 1996. Automatically generating extraction
patterns from untagged text. In AAAI.
M. Ruiz-Casado, E. Alfonseca, and P. Castells. in
press. Automatising the learning of lexical pat-
terns: an application to the enrichment of wordnet
by extracting semantic relationships from wikipedia.
Data and Knowledge Engineering.
S. Soderland. 1999. Learning information extraction
rules for semi-structured and free text. Machine
Learning, 34(1?3):233?272.
R. Wagner and M. Fischer. 1974. The string-to-
string correction problem. Journal of Association
for Computing Machinery, 21.
16
Proceedings of the 2nd Workshop on Ontology Learning and Population, pages 49?56,
Sydney, July 2006. c?2006 Association for Computational Linguistics
Towards Large-scale Non-taxonomic Relation Extraction: Estimating the
Precision of Rote Extractors?
Enrique Alfonseca?? Maria Ruiz-Casado??
?Precision and Intelligence Laboratory
Tokyo Institute of Techonology
enrique@lr.pi.titech.ac.jp
oku@pi.titech.ac.jp
Manabu Okumura? Pablo Castells?
?Computer Science Department
Universidad Autonoma de Madrid
enrique.alfonseca@uam.es
maria.ruiz@uam.es
pablo.castells@uam.es
Abstract
In this paper, we describe a rote extrac-
tor that learns patterns for finding seman-
tic relations in unrestricted text, with new
procedures for pattern generalisation and
scoring. An improved method for estimat-
ing the precision of the extracted patterns
is presented. We show that our method ap-
proximates the precision values as evalu-
ated by hand much better than the proce-
dure traditionally used in rote extractors.
1 Introduction
With the large growth of the information stored in
the web, it is necessary to have available automatic
or semi-automatic tools so as to be able to process
all this web content. Therefore, a large effort has
been invested in developing automatic or semi-
automatic techniques for locating and annotating
patterns and implicit information from the web,
a task known as Web Mining. In the particular
case of web content mining, the aim is automati-
cally mining data from textual web documents that
can be represented with machine-readable seman-
tic formalisms such as ontologies and semantic-
web languages.
Recently, there is an increasing interest in au-
tomatically extracting structured information from
large corpora and, in particular, from the Web
(Craven et al, 1999). Because of the character-
istics of the web, it is necessary to develop effi-
cient algorithms able to learn from unannotated
data (Riloff and Schmelzenbach, 1998; Soderland,
1999; Mann and Yarowsky, 2005). New types of
web content such as blogs and wikis, are also a
?This work has been sponsored by MEC, project number
TIN-2005-06885.
source of textual information that contain an un-
derlying structure from which specialist systems
can benefit.
Consequently, rote extractors (Brin, 1998;
Agichtein and Gravano, 2000; Ravichandran and
Hovy, 2002) have been identified as an appropri-
ate method to look for textual contexts that happen
to convey a certain relation between two concepts.
In this paper, we describe a new procedure for es-
timating the precision of the patterns learnt by a
rote extractor, and how it compares to previous ap-
proaches. The solution proposed opens new pos-
sibilities for improving the precision of the gener-
ated patterns, as described below.
This paper is structured as follows: Section 2
describe related work; Section 3 and 4 describe the
proposed procedure and its evaluation, and Sec-
tion 5 presents the conclusions and future work.
2 Related work
Extracting information using Machine Learning
algorithms has received much attention since
the nineties, mainly motivated by the Message
Understanding Conferences. From the mid-
nineties, there are systems that learn extraction
patterns from partially annotated and unannotated
data (Huffman, 1995; Riloff, 1996; Riloff and
Schmelzenbach, 1998; Soderland, 1999).
Generalising textual patterns (both manually
and automatically) for the identification of rela-
tions has been proposed since the early nineties
(Hearst, 1992), and it has been applied to extend-
ing ontologies with hyperonymy and holonymy re-
lations (Morin and Jacquemin, 1999; Kietz et al,
2000; Cimiano et al, 2004; Berland and Char-
niak, 1999). Finkelstein-Landau andMorin (1999)
learn patterns for company merging relations with
exceedingly good accuracies. Recently, kernel
49
methods are also becoming widely used for rela-
tion extraction (Bunescu and Mooney, 2005; Zhao
and Grishman, 2005).
Concerning rote extractors from the web, they
have the advantage that the training corpora can
be collected easily and automatically, so they
are useful in discovering many different relations
from text. Several similar approaches have been
proposed (Brin, 1998; Agichtein and Gravano,
2000; Ravichandran and Hovy, 2002), with vari-
ous applications: Question-Answering (Ravichan-
dran and Hovy, 2002), multi-document Named
Entity Coreference (Mann and Yarowsky, 2003),
and generating biographical information (Mann
and Yarowsky, 2005). Szpektor et al (2004) ap-
plies a similar, with no seed lists, to extract auto-
matically entailment relationships between verbs,
and Etzioni et al (2005) report very good results
extracting Named Entities and relationships from
the web.
2.1 Rote extractors
Rote extractors (Mann and Yarowsky, 2005) es-
timate the probability of a relation r(p, q) given
the surrounding context A1pA2qA3. This is cal-
culated, with a training corpus T , as the number
of times that two related elements r(x, y) from T
appear with that same contextA1xA2yA3, divided
by the total number of times that x appears in that
context together with any other word:
P (r(p, q)|A1pA2qA3) =
P
x,yr c(A1xA2yA3)
P
x,z c(A1xA2zA3)
(1)
x is called the hook, and y the target. In order to
train a Rote extractor from the web, this procedure
is mostly used (Ravichandran and Hovy, 2002):
1. Select a pair of related elements to be used
as seed. For instance, (Dickens,1812) for the
relation birth year.
2. Submit the query Dickens AND 1812 to a
search engine, and download a number of
documents to build the training corpus.
3. Keep all the sentences containing both ele-
ments.
4. Extract the set of contexts between them and
identify repeated patterns. This may just be
the m characters to the left or to the right
(Brin, 1998), the longest common substring
of several contexts (Agichtein and Gravano,
2000), or all substrings obtained with a suf-
fix tree constructor (Ravichandran and Hovy,
2002).
5. Download a separate corpus, called hook cor-
pus, containing just the hook (in the example,
Dickens).
6. Apply the previous patterns to the hook cor-
pus, calculate the precision of each pattern
in the following way: the number of times it
identifies a target related to the hook divided
by the total number of times the pattern ap-
pears.
7. Repeat the procedure for other examples of
the same relation.
To illustrate this process, let us suppose that we
want to learn patterns to identify birth years. We
may start with the pair (Dickens, 1812). From the
downloaded corpus, we extract sentences such as
Dickens was born in 1812
Dickens (1812 - 1870) was an English writer
Dickens (1812 - 1870) wrote Oliver Twist
The system identifies that the contexts of the last
two sentences are very similar and chooses their
longest common substring to produce the follow-
ing patterns:
<hook> was born in <target>
<hook> ( <target> - 1870 )
The rote extractor needs to estimate automati-
cally the precision of the extracted patterns, in or-
der to keep the best ones. So as to measure these
precision values, a hook corpus is now down-
loaded using the hook Dickens as the only query
word, and the system looks for appearances of the
patterns in this corpus. For every occurrence in
which the hook of the relation is Dickens, if the
target is 1812 it will be deemed correct, and oth-
erwise it will be deemed incorrect (e.g. in Dickens
was born in Portsmouth).
3 Our proposal
3.1 Motivation
In a rote extractor as described above, we believe
that the procedure for calculating the precision of
the patterns may be unreliable in some cases. For
example, the following patterns are reported by
Ravichandran and Hovy (2002) for identifying the
relations Inventor, Discoverer and Location:
Relation Prec. Pattern
Inventor 1.0 <target> ?s <hook> and
Inventor 1.0 that <target> ?s <hook>
Discoverer 0.91 of <target> ?s <hook>
Location 1.0 <target> ?s <hook>
In the particular application in which they are
used (relation extraction for Question Answering),
they are useful because there is initially a ques-
tion to be answered that indicates whether we are
50
looking for an invention, a discovery or a location.
However, if we want to apply them to unrestricted
relation extraction, we have the problem that the
same pattern, the genitive construction, represents
all these relations, apart from the most common
use indicating possession.
If patterns like these are so ambiguous, then
why do they receive so high a precision estimate?
One reason is that the patterns are only evalu-
ated for the same hook for which they were ex-
tracted. To illustrate this with an example, let
us suppose that we obtain a pattern for the rela-
tion located-at using the pairs (New York, Chrysler
Building). The genitive construction can be ex-
tracted from the context New York?s Chrysler
Building. Afterwards, when estimating the pre-
cision of this pattern, only sentences containing
<target>?s Chrysler Building are taken into ac-
count. Because of this, most of the pairs extracted
by this pattern may extract the target New York,
apart from a few that extract the name of the ar-
chitect that built it, van Allen. Thus we can expect
that the genitive pattern will receive a high preci-
sion estimate as a located-at pattern.
For our purposes, however, we want to collect
patterns for several relations such as writer-book,
painter-picture, director-film, actor-film, and we
want to make sure that the obtained patterns are
only applicable to the desired relation. Patterns
like <target> ?s <hook> are very likely to be ap-
plicable to all of these relations at the same time,
so we would like to be able to discard them auto-
matically by assigning them a low precision.
3.2 Suggested improvements
Therefore, we propose the following three im-
provements to this procedure:
1. Collecting not only a hook corpus but also a
target corpus should help in calculating the
precision. In the example of the Chrysler
building, we have seen that in most cases
that we look for the pattern ?s Chrysler build-
ing the previous words are New York, and
so the pattern is considered accurate. How-
ever, if we look for the pattern New York?s,
we shall surely find it followed by many dif-
ferent terms representing different relations,
and the precision estimate will decrease.
2. Testing the patterns obtained for one relation
using the hook and target corpora collected
for other relations. For instance, if the geni-
tive construction has been extracted as a pos-
sible pattern for the writer-book relation, and
we apply it to a corpus about painters, the rote
extractor can detect that it also extracts pairs
with painters and paintings, so that particular
pattern will not be very precise for that rela-
tion.
3. Many of the pairs extracted by the patterns
in the hook corpora were not evaluated at all
when the hook in the extracted pair was not
present in the seed lists. To overcome this,
we propose to use the web to check whether
the extracted pair might be correct, as shown
below.
3.3 Algorithm
In our implementation, the rote extractor starts
with a table containing some information about the
relations for which we want to learn patterns. This
procedure needs a little more information than just
the seed list, which is provided as a table in the
format displayed in Table 1. The data provided for
each relation is the following: (a) The name of the
relation, used for naming the output files contain-
ing the patterns; (b) the name of the file contain-
ing the seed list; (c) the cardinality of the relation.
For instance, given that many people can be born
on the same year, but for every person there is just
one birth year, the cardinality of the relation birth
year is n:1; (d) the restrictions on the hook and
the target. These can be of the following three cat-
egories: unrestricted, if the pattern can extract any
sequence of words as hook or target of the relation,
Entity, if the pattern can extract as hook or target
only things of the same entity type as the words
in the seed list (as annotated by the NERC mod-
ule), or PoS, if the pattern can extract as hook or
target any sequence of words whose sequence of
PoS labels was seen in the training corpus; and (e)
a sequence of queries that could be used to check,
using the web, whether an extracted pair is correct
or not.
We assume that the system has used the seed list
to extract and generalise a set of patterns for each
of the relations using training corpora (Ravichan-
dran and Hovy, 2002; Alfonseca et al, 2006a).
Our procedure for calculating the patterns? preci-
sions is as follows:
1. For every relation,
(a) For every hook, collect a hook corpus
from the web.
51
Relation name Seed-list Cardinality Hook-type Target-type Web queries
birth year birth-date.txt n:1 entity entity $1 was born in $2
death year death-date.txt n:1 entity entity $1 died in $2
birth place birth-place.txt n:1 entity entity $1 was born in $2
country-capital country-capital.txt 1:1 entity entity $2 is the capital of $1
author-book author-book.txt n:n entity unrestricted $1 is the author of $2
director-film director-film.txt 1:n entity unrestricted $1 directed $2, $2 directed by $1
Table 1: Example rows in the input table for the system.
(b) For every target, collect a target corpus
from the web.
2. For every relation r,
(a) For every pattern P , collected during
training, apply it to every hook and tar-
get corpora to extract a set of pairs.
For every pair p = (ph, pt),
? If it appears in the seed list of r, con-
sider it correct.
? If it appears in the seed list of other
relation, consider it incorrect.
? If the hook ph appears in the seed list
of r with a different target, and the
cardinality is 1:1 or n:1, consider it
incorrect.
? If the target pt appears in r?s seed list
with a different hook, and the cardi-
nality is 1:1 or 1:n, incorrect.
? Otherwise, the seed list does not
provide enough information to eval-
uate p, so we perform a test on the
web. For every query provided for r,
the system replaces $1 with ph and
$2 with pt, and sends the query to
Google. The pair is deemed correct
if and only if there is at least one an-
swer.
The precision of P is estimated as the
number of extracted pairs that are sup-
posedly correct divided by the total
number of pairs extracted.
In this step, every pattern that did not apply at
least twice in the hook and target corpora is also
discarded.
3.4 Example
After collecting and generalising patterns for
the relation director-film, we apply each pat-
tern to the hook and target corpora collected
for every relation. Let us suppose that we
want to estimate the precision of the pattern
<target> ?s <hook>
and we apply it to the hook and the target cor-
pora for this relation and for author-book. Pos-
sible pairs extracted are (Woody Allen, Bananas),
(Woody Allen, Without Fears), (Charles Dickens,
A Christmas Carol). Only the first one is correct.
The rote extractor proceeds as follows:
? The first pair appears in the seed list, so it is
considered correct.
? Although Woody Allen appears as hook in the
seed list andWithout Fears does not appear as
target, the second pair is still not considered
incorrect because the directed-by relation has
n:n cardinality.
? The third pair appears in the seed list for
writer-book, so it is directly marked as incor-
rect.
? Finally, because still the system has not made
a decision about the second pair, it queries
Google with the sequences
Woody Allen directed Without Fears
Without Fears directed by Woody Allen
Because neither of those queries provide any
answer, it is considered incorrect.
In this way, it can be expected that the patterns
that are equally applicable to several relations,
such as writer-book, director-film or painter-
picture will attain a low precision because they
will extract many incorrect relations from the cor-
pora corresponding to the other relations.
4 Experiment and results
4.1 Rote extractor settings
The initial steps of the rote extractor follows the
general approach: downloading a training cor-
pus using the seed list and extracting patterns.
The training corpora are processed with a part-
of-speech tagger and a module for Named Entity
Recognition and Classification (NERC) that anno-
tates people, organisations, locations, dates, rela-
tive temporal expressions and numbers (Alfonseca
et al, 2006b), so this information can be included
in the patterns. Furthermore, for each of the terms
in a pair in the training corpora, the system also
52
Birth year:
BOS/BOS <hook> (/( <target> -/- number/entity )/) EOS/EOS
BOS/BOS <hook> (/( <target> -/- number/entity )/) British/JJ writer/NN
BOS/BOS <hook> was/VBD born/VBN on/IN the/DT first/JJ of/IN time expr/entity ,/, <target> ,/, at/IN location/entity ,/, of/IN
BOS/BOS <hook> (/( <target> -/- )/) a/DT web/NN guide/NN
Birth place:
BOS/BOS <hook> was/VBD born/VBN in/IN <target> ,/, in/IN central/JJ location/entity ,/,
BOS/BOS <hook> was/VBD born/VBN in/IN <target> date/entity and/CC moved/VBD to/TO location/entity
BOS/BOS Artist/NN :/, <hook> -/- <target> ,/, location/entity (/( number/entity -/-
BOS/BOS <hook> ,/, born/VBN in/IN <target> on/IN date/entity ,/, worked/VBN as/IN
Author-book:
BOS/BOS <hook> author/NN of/IN <target> EOS/EOS
BOS/BOS Odysseus/NNP :/, Based/VBN on/IN <target> ,/, <hook> ?s/POS epic/NN from/IN Greek/JJ mythology/NN
BOS/BOS Background/NN on/IN <target> by/IN <hook> EOS/EOS
did/VBD the/DT circumstances/NNS in/IN which/WDT <hook> wrote/VBD "/?? <target> "/?? in/IN number/entity ,/, and/CC
Capital-country:
BOS/BOS <hook> is/VBZ the/DT capital/NN of/IN <target> location/entity ,/, location/entity correct/JJ time/NN
BOS/BOS The/DT harbor/NN in/IN <hook> ,/, the/DT capital/NN of/IN <target> ,/, is/VBZ number/entity of/IN location/entity
BOS/BOS <hook> ,/, <target> EOS/EOS
BOS/BOS <hook> ,/, <target> -/- organization/entity EOS/EOS
Figure 1: Example patterns extracted from the training corpus for each several kinds of relations.
stores in a separate file the way in which they are
annotated in the training corpus: the sequences of
part-of-speech tags of every appearance, and the
entity type (if marked as such). So, for instance,
typical PoS sequences for names of authors are
?NNP?1 (surname) and ?NNP NNP? (first name
and surname). A typical entity kind for an author
is person.
In the case that a pair from the seed list is found
in a sentence, a context around the two words in
the pair is extracted, including (a) at most five
words to the left of the first word; (b) all the
words in between the pair words; (c) at most five
words to the right of the second word. The context
never jumps over sentence boundaries, which are
marked with the symbols BOS (Beginning of sen-
tence) and EOS (End of sentence). The two related
concepts are marked as <hook> and <target>.
Figure 1 shows several example contexts extracted
for the relations birth year, birth place, writer-
book and country-capital city.
The approach followed for the generalisation
is the one described by (Alfonseca et al, 2006a;
Ruiz-Casado et al, in press), which has a few
modifications with respect to Ravichandran and
Hovy (2002)?s, such as the use of the wildcard * to
represent any sequence of words, and the addition
of part-of-speech and Named Entity labels to the
patterns.
The input table has been built with the fol-
lowing nineteen relations: birth year, death year,
birth place, death place, author?book, actor?
film, director?film, painter?painting, Employee?
organisation, chief of state, soccer player?team,
1All the PoS examples in this paper are done with Penn
Treebank labels.
Relation Seeds Extr. Gener. Filt.
Birth year 244 2374 4748 30
Death year 216 2178 4356 14
Birth place 169 764 1528 28
Death place 76 295 590 6
Author-book 198 8297 16594 283
Actor-film 49 739 1478 3
Director-film 85 6933 13866 200
Painter-painting 92 597 1194 15
Employee-organisation 62 1667 3334 6
Chief of state 55 1989 3978 8
Soccer player-team 194 4259 8518 39
Soccer team-city 185 180 360 0
Soccer team-manager 43 994 1988 9
Country/region-capital city 222 4533 9066 107
Country/region-area 226 762 1524 2
Country/region-population 288 318 636 3
Country-bordering country 157 6828 13656 240
Country-inhabitant 228 2711 5422 17
Country-continent 197 1606 3212 21
Table 2: Number of seed pairs for each relation,
and number of unique patterns in each step.
soccer team-city, soccer team-manager, country
or region?capital city, country or region?area,
country or region?population, country?bordering
country, country-name of inhabitant (e.g. Spain-
Spaniard), and country-continent. The time re-
quired to build the table and the seed lists was less
than one person-day, as some of the seed lists were
directly collected from web pages.
For each step, the following settings have been
set:
? The size of the training corpus has been set
to 50 documents for each pair in the original
seed lists. Given that the typical sizes of the
lists collected are between 50 and 300 pairs,
this means that several thousand documents
are downloaded for each relation.
? Before the generalisation step, the rote ex-
tractor discards those patterns in which the
hook and the target are too far away to each
other, because they are usually difficult to
generalise. The maximum allowed distance
53
No. Pattern Applied Prec1 Prec2 Real
1
Biography|Hymns|Infography|Life|Love|POETRY|Poetry|Quotations|
Search|Sketch|Woolf|charts|genius|kindness|poets/NN */*
OF|Of|about|by|for|from|like|of/IN <hook> (/( <target> -/-
6 1.00 1.00 1.00
2 "/?? <hook> (/( <target> -/- 4 1.00 1.00 1.00
3
[BOS]/[BOS] <hook> was/VBD born/VBN about|around|in/IN <target>
B.C.|B.C.E|BC/NNP at|in/IN
3 1.00 1.00 1.00
4
[BOS]/[BOS] <hook> was/VBD born/VBN about|around|in/IN <target>
B.C.|B.C.E|BC/NNP at|in/IN location/entity
3 1.00 1.00 1.00
5
[BOS]/[BOS] <hook> was/VBD born/VBN around/IN <target> B.C.E/NNP at/IN
location/entity ,/, a/DT
3 1.00 1.00 1.00
6
[BOS]/[BOS] <hook> was/VBD born/VBN around|in/IN <target> B.C.|B.C.E/NNP
at|in/IN location/entity ,/,
3 1.00 1.00 1.00
7
[BOS]/[BOS] */* ATTRIBUTION|Artist|Author|Authors|Composer|Details|
Email|Extractions|Myth|PAL|Person|Quotes|Title|Topic/NNP :/, <hook> (/(
<target> -/-
3 1.00 1.00 1.00
8
classical/JJ playwrights/NNS of/IN organisation/entity ,/, <hook> was/VBD
born/VBN near/IN location/entity in/IN <target> BCE/NNP ,/, in/IN the/DT
village/NN
3 1.00 1.00 1.00
9 [BOS]/[BOS] <hook> (/( <target> -/- )/) 2 1.00 1.00 1.00
10 [BOS]/[BOS] <hook> (/( <target> -|--/- )/) 2 1.00 1.00 1.00
11 [BOS]/[BOS] <hook> (/( <target> person/entity BC/NNP ;/, Greek/NNP :/, 2 1.00 1.00 1.00
12
ACCESS|AND|Alice|Author|Authors|BY|Biography|CARL|Dame|Don|ELIZABETH|
(...)|web|writer|writerMuriel|years/NNP <hook> (/( <target> -|- -/-
8 0.75 1.00
13 -/- <hook> (/( <target> -/- 3 0.67 1.00 0.67
14 -|--/- <hook> (/( <target> -/- 3 0.67 1.00 0.67
15 [BOS]/[BOS] <hook> (/( <target> -/- 60 0.62 1.00 0.81
16 [BOS]/[BOS] <hook> (/( <target> -/- */* )/) 60 0.62 1.00 0.81
17 [BOS]/[BOS] <hook> (/( <target> -|--/- 60 0.62 1.00 0.81
18 ,|:/, <hook> (/( <target> -/- 32 0.41 0.67 0.28
19 [BOS]/[BOS] <hook> ,/, */* (/( <target> -|--/- 15 0.40 1.00 0.67
20 ,|:|;/, <hook> (/( <target> -|--/- 34 0.38 0.67 0.29
21
AND|Alice|Authors|Biography|Dame|Don|ELIZABETH|Email|Fiction|Frances|
GEORGE|Home|I.|Introduction|Jean|L|Neben|PAL|PAULA|Percy|Playwrights|
Poets|Sir|Stanisaw|Stanislaw|W.|WILLIAM|feedback|history|writer/NNP <hook>
(/( <target> -/-
3 0.33 n/a 0.67
22 AND|Frances|Percy|Sir/NNP <hook> (/( <target> -/- 3 0.33 n/a 0.67
23
Alice|Authors|Biography|Dame|Don|ELIZABETH|Email|Fiction|Frances|
GEORGE|Home|I.|Introduction|Jean|L|Neben|PAL|PAULA|Percy|Playwrights|
Poets|Sir|Stanisaw|Stanislaw|W.|WILLIAM|feedback|history|writer/NN <hook>
(/( <target> -/-
3 0.33 n/a 0.67
24 [BOS]/[BOS] <hook> ,|:/, */* ,|:/, <target> -/- 7 0.28 0.67 0.43
25 [BOS]/[BOS] <hook> ,|:/, <target> -/- 36 0.19 1.00 0.11
26 [BOS]/[BOS] <hook> ,/, */* (/( <target> )/) 20 0.15 0.33 0.10
27 [BOS]/[BOS] <target> <hook> ,/, 18 0.00 n/a 0.00
28 In|On|on/IN <target> ,/, <hook> grew|was/VBD 17 0.00 0.00 0.00
29 In|On|on/IN <target> ,/, <hook> grew|was|went/VBD 17 0.00 0.00 0.00
30
[BOS]/[BOS] <hook> ,/, */* DE|SARAH|VON|dramatist|novelist|
playwright|poet/NNP (/( <target> -/-
3 0.00 n/a 1.0
TOTAL 436 0.46 0.84 0.54
Table 3: Patterns for the relation birth year, results extracted by each, precision estimated with this
procedure and with the traditional hook corpus approach, and precision evaluated by hand).
between them has been set to 8 words.
? At each step, the two most similar patterns
are generalised, and their generalisation is
added to the set of patterns. No pattern is dis-
carded at this step. This process stops when
all the patterns resulting from the generalisa-
tion of existing ones contain wildcards adja-
cent to either the hook or the target.
? For the precision estimation, for each pair in
the seed lists, 50 documents are collected for
the hook and other 50 for the target. Because
of time constraints, and given that the total
size of the hook and the target corpora ex-
ceeds 100,000 documents, for each pattern a
sample of 250 documents is randomly cho-
sen and the patterns are applied to it. This
sample is built randomly but with the fol-
lowing constraints: there should be an equal
amount of documents selected from the cor-
pora from each relationship; and there should
be an equal amount of documents from hook
corpora and from target corpora.
4.2 Output obtained
Table 2 shows the number of patterns obtained for
each relation. Note that the generalisation proce-
dure applied produces new (generalised) patterns
to the set of original patterns, but no original pat-
tern is removed, so they all are evaluated; this is
why the set of patterns increases after the gener-
alisation. The filtering criterion was to keep the
patterns that applied at least twice on the test cor-
pus.
It is interesting to see that for most relations the
reduction of the pruning is very drastic. This is
because of two reasons: Firstly, most patterns are
far too specific, as they include up to 5 words at
each side of the hook and the target, and all the
words in between. Only those patterns that have
generalised very much, substituting large portions
with wildcards or disjunctions are likely to apply
to the sentences in the hook and target corpora.
54
Secondly, the samples of the hook and target cor-
pora used are too small for some of the relations
to apply, so few patterns apply more than twice.
Note that, for some relations, the output of the
generalisation step contains less patterns that the
output of the initial extraction step: that is due to
the fact that the patterns in which the hook and
the target are not nearby were removed in between
these two steps.
Concerning the precision estimates, a full eval-
uation is provided for the birth-year relation. Ta-
ble 3 shows in detail the thirty patterns obtained.
It can also be seen that some of the patterns with
good precision contain the wildcard *. For in-
stance, the first pattern indicates that the presence
of any of the words biography, poetry, etc. any-
where in a sentence before a person name and a
date or number between parenthesis is a strong in-
dication that the target is a birth year.
The last columns in the table indicate the num-
ber of times that each rule applied in the hook and
target corpora, and the precision of the rule in each
of the following cases:
? As estimated by the complete program
(Prec1).
? As estimated by the traditional hook cor-
pus approach (Prec2). Here, cardinality is
not taken into account, patterns are evaluated
only on the hook corpora from the same rela-
tion, and those pairs whose hook is not in the
seed list are ignored.
? The real precision of the rule (real). In or-
der to obtain this metric, two different an-
notators evaluated the pairs applied indepen-
dently, and the precision was estimated from
the pairs in which they agreed (there was a
96.29% agreement, Kappa=0.926).
As can be seen, in most of the cases our procedure
produces lower precision estimates.
If we calculate the total precision of all the rules
altogether, shown in the last row of the table, we
can see that, without the modifications, the whole
set of rules would be considered to have a total
precision of 0.84, while that estimate decreases
sharply to 0.46 when they are used. This value
is nearer the precision of 0.54 evaluated by hand.
Although it may seem surprising that the precision
estimated by the new procedure is even lower than
the real precision of the patterns, as measured by
hand, that is due to the fact that the web queries
consider unknown pairs as incorrect unless they
Relation Prec1 Prec2 Real
Birth year 0.46 [0.41,0.51] 0.84 [0.81,0.87] 0.54 [0.49,0.59]
Death year 0.29 [0.24,0.34] 0.55 [0.41,0.69] 0.38 [0.31,0.44]
Birth place 0.65 [0.62,0.69] 0.36 [0.29,0.43] 0.84 [0.79,0.89]
Death place 0.82 [0.73,0.91] 1.00 [1.00,1.00] 0.96 [0.93,0.99]
Author-book 0.07 [0.07,0.07] 0.26 [0.19,0.33] 0.03 [0.00,0.05]
Actor-film 0.07 [0.01,0.13] 1.00 [1.00,1.00] 0.02 [0.00,0.03]
Director-film 0.03 [0.03,0.03] 0.26 [0.18,0.34] 0.01 [0.00,0.01]
Painter-painting 0.10 [0.07,0.12] 0.35 [0.23,0.47] 0.17 [0.12,0.22]
Employee-organisation 0.31 [0.22,0.40] 1.00 [1.00,1.00] 0.33 [0.26,0.40]
Chief of state 0.00 [0.00,0.00] - 0.00 [0.00,0.00]
Soccer player-team 0.07 [0.06,0.08] 1.00 [1.00,1.00] 0.08 [0.04,0.12]
Soccer team-city - - -
Soccer team-manager 0.61 [0.53,0.69] 1.00 [1.00,1.00] 0.83 [0.77,0.88]
Country/region-capital city 0.12 [0.11,0.13] 0.23 [0.22,0.24] 0.12 [0.07,0.16]
Country/region-area 0.09 [0.00,0.19] 1.00 [1.00,1.00] 0.06 [0.02,0.09]
Country/region-population 1.00 [1.00,1.00] 1.00 [1.00,1.00] 1.00 [1.00,1.00]
Country-bordering country 0.17 [0.17,0.17] 1.00 [1.00,1.00] 0.15 [0.10,0.20]
Country-inhabitant 0.01 [0.00,0.01] 0.80 [0.67,0.93] 0.01 [0.00,0.01]
Country-continent 0.16 [0.14,0.18] 0.07 [0.04,0.10] 0.00 [0.00,0.01]
Table 4: Precision estimates for the whole set of
extracted pairs by all rules and all relations.
appear in the web exactly in the format of the
query in the input table. Specially for not very
well-known people, we cannot expect that all of
them will appear in the web following the pattern
?X was born in date?, so the web estimates tend
to be over-conservative.
Table 4 shows the precision estimates for every
pair extracted with all the rules using both proce-
dures, with 0.95 confidence intervals. The real
precision has been estimating by sampling ran-
domly 200 pairs and evaluating them by hand, as
explained above for the birth year relation. As can
be observed, out of the 19 relations, the precision
estimate of the whole set of rules for 11 of them
is not statistically dissimilar to the real precision,
while that only holds for two relationships using
the previous approach.
Please note as well that the precisions indicated
in the table refer to all the pairs extracted by all the
rules, some of which are very precise, but some of
which are very imprecise. If the rules are to be
applied in an annotation system, only those with
a high precision estimate would be used, and ex-
pectedly much better overall results would be ob-
tained.
5 Conclusions and future work
We have described here a new procedure for es-
timating the precision of the patterns learnt by a
rote extractor that learns from the web. Compared
to other similar approaches, it has the following
improvements:
? For each pair (hook,target) in the seed list, a
target corpora is also collected (apart from
the hook corpora), and the evaluation is per-
formed using corpora from several relations.
55
This has been observed to improve the esti-
mate of the rule?s precision, given that the
evaluation pairs not only refer to the elements
in the seed list.
? The cardinality of the relations is taken into
consideration in the estimation process using
the seed list. This is important, for instance,
to be able to estimate the precision in n:n re-
lations like author-work, given that we can-
not assume that the only books written by
someone are those in the seed list.
? For those pairs that cannot be evaluated using
the seed list, a simple query to the Google
search engine is employed.
The precisions estimated with this procedure
are significantly lower than the precisions obtained
with the usual hook corpus approach, specially for
ambiguous patterns, and much near the precision
estimate when evaluated by hand.
Concerning future work, we plan to estimate the
precision of the patterns using the whole hook and
target corpora, rather than using a random sample.
A second objective we have in mind is not to throw
away the ambiguous patterns with low precision
(e.g. the possessive construction), but to train a
model so that we can disambiguate which is the
relation they are conveying in each context (Girju
et al, 2003).
References
E. Agichtein and L. Gravano. 2000. Snowball: Ex-
tracting relations from large plain-text collections.
In Proceedings of ICDL, pages 85?94.
E. Alfonseca, P. Castells, M. Okumura, and M. Ruiz-
Casado. 2006a. A rote extractor with edit distance-
based generalisation and multi-corpora precision
calculation. In Poster session of ACL-2006.
E. Alfonseca, A. Moreno-Sandoval, J. M. Guirao, and
M. Ruiz-Casado. 2006b. The wraetlic NLP suite.
In Proceedings of LREC-2006.
M. Berland and E. Charniak. 1999. Finding parts in
very large corpora. In Proceedings of ACL-99.
S. Brin. 1998. Extracting patterns and relations from
the World Wide Web. In Proceedings of the WebDB
Workshop at EDBT?98.
R. Bunescu and R. J. Mooney. 2005. A shortest path
dependency kernel for relation extraction. In Pro-
ceedings of the HLT Conference and EMNLP.
P. Cimiano, S. Handschuh, and S. Staab. 2004. To-
wards the self-annotating web. In Proceedings of the
13th World Wide Web Conference, pages 462?471.
M. Craven, D. DiPasquo, D. Freitag, A. McCallum,
T. Mitchell, K. Nigam, and S. Slattery. 1999. Learn-
ing to construct knowledge bases from the world
wide web. Artificial Intelligence, 118(1?2):69?113.
O. Etzioni, M. Cafarella, D. Downey, A.-M. Popescu,
T. Shaked, S. Soderland, D. S. Weld, and A. Yates.
2005. Unsupervised named entity extraction from
the web: An experimental study. Artificial Intelli-
gence, 165(1):91?134.
M. Finkelstein-Landau and E. Morin. 1999. Extracting
semantic relationships between terms: supervised
vs. unsupervised methods. In Workshop on Ontolo-
gial Engineering on the Global Info. Infrastructure.
R. Girju, A. Badulescu, and D. Moldovan. 2003.
Learning semantic constraints for the automatic dis-
covery of part-whole relations. In HLT-NAACL-03.
M. Hearst. 1992. Automatic acquisition of hyponyms
from large text corpora. In COLING-92.
S. Huffman. 1995. Learning information extraction
patterns from examples. In IJCAI-95 Workshop on
New Approaches to Learning for NLP.
J. Kietz, A. Maedche, and R. Volz. 2000. A method
for semi-automatic ontology acquisition from a cor-
porate intranet. In Workshop ?Ontologies and text?.
G. S. Mann and D. Yarowsky. 2003. Unsupervised
personal name disambiguation. In CoNLL-2003.
G. S. Mann and D. Yarowsky. 2005. Multi-field in-
formation extraction and cross-document fusion. In
Proceedings of ACL 2005.
E. Morin and C. Jacquemin. 1999. Projecting corpus-
based semantic links on a thesaurus. In ACL-99.
D. Ravichandran and E. Hovy. 2002. Learning surface
text patterns for a question answering system. In
Proceedings of ACL-2002, pages 41?47.
E. Riloff and M. Schmelzenbach. 1998. An empirical
approach to conceptual case frame acquisition. In
Proceedings of WVLC, pages 49?56.
E. Riloff. 1996. Automatically generating extraction
patterns from untagged text. In AAAI.
M. Ruiz-Casado, E. Alfonseca, and P. Castells. in
press. Automatising the learning of lexical patterns:
an application to the enrichment of WordNet by ex-
tracting semantic relationships from the Wikipedia.
Data and Knowledge Engineering, in press.
S. Soderland. 1999. Learning information extraction
rules for semi-structured and free text. Machine
Learning, 34(1?3):233?272.
I. Szpektor, H. Tanev, I. Dagan, and B. Coppola. 2004.
Scaling web-based acquisition of entailment rela-
tions. In Proceedings of EMNLP 2004.
S. Zhao and R. Grishman. 2005. Extracting relations
with integrated information using kernel methods.
In Proceedings of ACL-2005.
56
