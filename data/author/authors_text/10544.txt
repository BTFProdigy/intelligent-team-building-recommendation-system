Coling 2008: Companion volume ? Posters and Demonstrations, pages 95?98
Manchester, August 2008
Integrating Motion Predicate Classes with
Spatial and Temporal Annotations
James Pustejovsky
Computer Science Department
Brandeis University
jamesp@cs.brandeis.edu
Jessica L. Moszkowicz
Computer Science Department
Brandeis University
jlittman@cs.brandeis.edu
Abstract
We propose a spatio-temporal markup for
the annotation of motion predicates in text,
informed by a lexical semantic classifica-
tion of these verbs. We incorporate this
classification within a spatial event struc-
ture, based on Generative Lexicon Theory.
We discuss how the spatial event structure
suggests changes to annotation systems de-
signed solely for temporal or spatial phe-
nomena, resulting in spatio-temporal an-
notation.
1 Introduction and Motivation
The recognition of spatial entities in natural lan-
guage is an important component of understanding
a text (Mani et al, 2008). However, simply iden-
tifying fixed geospatial regions and specific ?facil-
ities? is not enough to achieve a complete repre-
sentation of all the spatial phenomena present. In
fact, this leaves out one of the most crucial aspects
of spatial information, motion. To capture motion,
we must integrate temporal and spatial information
with the lexical semantics of motion predicates and
prepositions.
The goal of this research is to further the rep-
resentational support for spatio-temporal reason-
ing from natural language text in the service of
practical applications. To create such support, we
propose to use lexical resources for motion predi-
cates to integrate two existing annotation schemes,
SpatialML and TimeML, creating a representation
that captures, in a fine-grained manner, the move-
ment of individuals through spatial and temporal
c
? 2008. Licensed under the Creative Commons
Attribution-Noncommercial-Share Alike 3.0 Unported li-
cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).
Some rights reserved.
indexes. This work is part of a larger effort to au-
tomate such annotation and reasoning over natural
language documents using symbolic and machine
learning methods.
In this paper, we investigate different resources
and annotations for spatio-temporal information.
In section 2, we describe some of the resources we
employed for our investigation. Section 3 elabo-
rates on the classes we focus on as we work to-
wards developing a classification for the purpose
of annotating motion predicates, which we discuss
in section 4.
2 Previous Work on Motion
Classifications in Language
There has been considerable research on the lin-
guistic behavior of spatial predicates and preposi-
tions in language (e.g., (Jackendoff, 1983), (Her-
skovits, 1986), (Boas, 2001), (Cappelle and De-
clerck, 2005)). Within qualitative spatial reasoning
(QSR), work has recently started to focus on incor-
porating mereo-topological concepts into the cal-
culus of relations between regions. The most suc-
cessful of these is the Regional Connection Calcu-
lus, or RCC (Randell et al, 1992). RCC8 and other
systems like it do an adequate job of represent-
ing static information about space, but they cannot
help us deal with motion, since that task requires a
temporal component. Galton ((Galton, 1993; Gal-
ton, 1997)) began work on a commonsense theory
of motion, but this work did not focus on merging
temporal and spatial phenomena. Muller (Muller,
1998), however, proposes just such a system with
his qualitative theory of motion based on spatio-
temporal primitives. The result of Muller?s system
is a set of six motion classes: leave, hit, reach, ex-
ternal, internal, and cross.
Asher and Sablayrolles offer their own account
95
of motion verbs and spatial prepositional phrases
in French (Asher and Sablayrolles, 1995). They
propose ten groups of motion verbs as follows:
s?approcher (to approach), arriver (to arrive), en-
trer (to enter), se poser (to alight), s??eloigner (to
distance oneself from), partir (to leave), sortir (to
go out), d?ecoller (to take off), passer (par) (to go
through), d?evier (to deviate). This verb classifica-
tion is more fine-grained than Muller?s.
While Muller, Asher, Sablayrolles, and Vieu
among others have focused on the formal seman-
tics of motion, other work has been done to repre-
sent motion in the FrameNet (Baker et al, 1998)
and VerbNet (Kipper et al, 2006) projects. The
Motion frame is a high level frame in the FrameNet
hierarchy. It is defined as ?Some entity (Theme)
starts out in one place (Source) and ends up in
some other place (Goal), having covered some
space between the two (Path).?
To explore VerbNet?s take on motion predicates,
we mapped Asher and Sablayrolles? verbs to Verb-
Net classes. The mapping revealed that, while
many of the motion predicates we care about have
specific classes in VerbNet, it is not always clear
what these classes have in common unless we look
to FrameNet to find a higher level representation.
3 Classifying spatio-temporal predicates
Following (Muller, 1998), (Vieu, 1991), and
(Asher and Sablayrolles, 1995), we assume spatial
variables are incorporated into the representation
of motion predicates in language. For this paper,
we generally follow (Muller, 2002) by represent-
ing the individuals participating in spatial relations
as spatio-temporal regions (s?i). For modeling mo-
tion, however, we restrict our discussion to spatio-
temporal regions occupied by physical matter de-
noted by the type s ? i ? p.
For this work, we performed several map-
pings between Muller, Asher and Sablayrolles, and
FrameNet. The result of this mapping was a group
of classes based largely on Muller?s classifications
with some very slight modifications detailed in the
table below. The spatial event structures for each
of these classes will describe their formal seman-
tics (as in Figure 1 below).
In addition to these classes, we model the spatial
semantics of prepositions, following (Asher and
Sablayrolles, 1995), generally. Because of space
limitations, we will not discuss the contritbution
of prepositional semantics in this paper.
Move run, fly, drive
Move External drive around, pass
Move Internal walk around the room
Leave leave, desert
Reach arrive, enter, reach
Detach take off, disconnect, pull away
Hit land, hit
Follow follow, chase
Deviate flee, run from
Stay remain, stay
Table 1: Motion Classes
There is a complex interaction between a motion
verb class and the interpretation of its arguments.
For example, not all regions are occupied by the
extent of physical matter (see above), but there are
some objects which are properly both physical and
spatial, such as the concept building. Notice the
ambiguity inherent in the statement below, where
both Move Internal and Move External are pos-
sible interpretations.
(1) The man walked around the building.
This is due to the semantic nature of building as
both a physical object with extent, and also as a
volume/aperture.
To model the mapping of objects to specific ar-
gument and event structures, we adopt the frame-
work of Generative Lexicon Theory (GL). The no-
tion of ?polarity? in the (Muller, 1998) sense is
quite similar to the semantic effect brought about
by event headedness in (Pustejovsky, 1995). GL
provides an explicitly typed argument structure,
a typed subeventual structure, and a predicative
body, which we will use to express RCC8 rela-
tions. For example, a representation of the Spa-
tial Event Structure (SES) for the motion predicate
leave is illustrated below in Figure 1. Note that
the statement Polarity=initial is equivalent to say-
ing Head=left. The relation BT is shorthand for
boundary transition, which is composed of the fol-
lowing RCC8 relations: TPP, O, and EC.
Each motion class in Table 1 maps to a unique
predicative body (qualia structure) in the spatial
event structure for a verb. We demonstrate be-
low how these representations are then embed-
ded in the annotation of a text as RCC8 relations
in a modified SpatialML/TimeML format, called
Spatio-temporal Markup (STM).
The robustness of the mapping from the motion
classes in Table 1 to FrameNet is currently being
96
??
?
?
?
?
?
?
?
?
?
?
?
?
?
leave
ARGSTR =
[
ARG1 = x: s ? i ? p
ARG2 = y: s ? i
]
EVENTSTR =
?
?
E
1
= e
1
:process
E
2
= e
2
:state
RESTR = <
?
POLARITY = initial
?
?
QUALIA =
[
AGENTIVE = NTTP(e
1
,x,y)
? BT(e
1
,x.y)
FORMAL = DC(e
2
,x,y)
]
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
Figure 1: Spatial Event Structure
tested and evaluated.
4 Spatio-temporal Annotation
Throughout the development of the classification
described here, we have tried to focus on how
the classification will impact the task of annotat-
ing spatio-temporal information in text. There are
currently two distinct annotation schemes for spa-
tial and temporal information. If we are to suc-
cessfully capture motion phenomena in text, these
annotations must be merged just as a topological
base and a temporal calculus need to be combined
to model motion predicates.
TimeML (Pustejovsky et al, 2003) is an anno-
tation scheme for representing temporal informa-
tion in text. The basic elements of a TimeML an-
notation are temporal expressions such as dates,
times, and durations, and events that can be an-
chored or ordered to those expressions or with re-
spect to each other.
For the annotation of spatial information, Spa-
tialML (MITRE, 2007) is being developed. The
focus of SpatialML is the markup of spatial lo-
cations that can be integrated with additional re-
sources such as databases that provide informa-
tion about a given domain (e.g. physical feature
databases, gazetteers).
While SpatialML does a reasonable job of cap-
turing locations in space, it cannot model moving
objects such as people and cars, and in fact lacks a
mechanism for capturing motion since predicates
are not annotated. As we saw above, the motion
event must be captured in addition to the locations
involved in the motion. The development of our
motion classification also reveals that the partici-
pants of the event are also needed, even if they are
not spatial locations. For example, in John flew to
Boston, John must be included in the motion anno-
tation because he is a moving object.
We can enhance the spatio-temporal informa-
tion from SpatialML and TimeML with lexical se-
mantic information from a lexicon of motion pred-
icates, resulting in annotation that is rich enough
to be able to (1) infer motion of individuals in-
vovled in specific events; and (2) to compose mo-
tions to create motion sequences (cf. (Pustejovsky
and Verhagen, 2007)).
To create a spatio-temporal markup, TimeML
and SpatialML must be enriched so that they can
adequately capture the motion predicates we are
discussing. TimeML will already annotate motion
predicates as events, but to truly reveal the motion
involved, additional attributes must be added to ac-
count for the beginning, middle, and end points of
the event. The spatio-temporal annotation will re-
quire a new kind of spatial link to capture motion
paths. Essentially, the motion path will combine
the event information from TimeML with the spa-
tial information from SpatialML. This motion path
is at the core of a spatio-temporal markup or STM.
The spatial event structure described in the previ-
ous section motivates the construction of the STM.
The concept of polarity or headedness will also
motivate some aspects of the annotation. Depend-
ing on the polarity of the motion predicate or spa-
tial prepositional phrase, the annotator will know
to look for the source or goal of the event in the
text and include that in the motion path.
The exact details of the resulting spatio-
temporal markup are still under development.
However, the following examples give an idea of
how motion class information allow us to integrate
spatial and temporal annotation.
(2) John drove from Boston to NY on Thursday.
<MOVER id=0>John</MOVER>
<EVENT id=1 tense=past start=t1 end=t2>drove</EVENT>
<SIGNAL id=2 type=spatial polarity=initial>from</SIGNAL>
<PLACE id=3>Boston</PLACE>
<SIGNAL id=4 type=spatial polarity=final>to</SIGNAL>
<PLACE id=5>New York</PLACE>
<SIGNAL id=6 type=temporal>on</SIGNAL>
<TIMEX3 id=7>Thursday</TIMEX3>
<TLINK eventID=1 timeID=7 relType=INCLUDES
signalID=6 />
<MOTION eventID=1 moverID=0 source=3
sourceTime=t1 sourceSignal=2 goal=5
goalTime=t2 goalSignal=4 class=MOVE/>
(3) John left Boston for New York.
<MOVER id=0>John</MOVER>
<EVENT id=1 tense=past start=t1 end=t2
polarity=intitial>left</EVENT>
<PLACE id=2>Boston</PLACE>
<SIGNAL id=3 type=spatial
polarity=final>for</SIGNAL>
<PLACE id=4>New York</PLACE>
<MOTION eventID=1 moverID=0 source=2 sourceTime=t1
goal=4 goalTime=t2 goalSignal=3 class=LEAVE/>
97
The Motion tag in the above examples tells us
the class of the motion predicate. This provides a
link to both the spatial event structure (as in Figure
1) and a spatio-temporal markup, which embeds
the annotaton of a text as RCC8 relations in a mod-
ified SpatialML/TimeML format. The example in
4 shows the STM for leave:
(4)
?
?
?
?
?
?
?
?
?
?
motion
TYPE = leave
EVENTID = e
MOVERID = x
SOURCE = l
1
SOURCETIME = t
1
GOAL = l
2
GOALTIME = t
2
?
?
?
?
?
?
?
?
?
?
=?
[
IN(t
1
, x, l
1
)
IN(t
2
, x, l
2
)
DC(t
2
, x, l
1
)
]
This STM indicates what additional information
is needed for the spatio-temporal annotation. In
the case of example 3, three temporally anchored
SpatialML link tags are indiated for each of the
RCC8-like relations to the second part of the STM:
(5) <LINK linkType=IN source=0 target=2 time=t1/>
<LINK linkType=DC source=0 target=2 time=t2/>
<LINK linkType=IN source=0 target=4 time=t2/>
These links that can be automatically generated
at a later stage in the annotation set up the locations
of moving objects at given times. The first link in
example 5 reveals that the moving object John was
in Boston at time t1, which is the start time of the
motion given in the annotation.
5 Conclusion
In this paper, we investigate how an expressive
classification for verbs of motion can be used to
integrate spatial and temporal annotation infor-
mation, in order to represent objects in motion,
as expressed in text. We adopt a modified ver-
sion of the classifications of verbs of motion in
(Muller, 1998) and (Asher and Sablayrolles, 1995)
and demonstrated how verb classes are mapped to
RCC8+1 relations in a temporally anchored Spa-
tialML. We are currently evaluating the reliability
of the FrameNet encoding of motion predicates,
and are developing algorithms for translating lexi-
cal structures to Spatio-temporal markup.
References
Asher, N. and P. Sablayrolles. 1995. A typology and
discourse for motion verbs and spatial pps in french.
Journal of Semantics, 12:163?209.
Baker, C., C. Fillmore, and J. Lowe. 1998. The berke-
ley framennet project. In Proceedings of the COL-
ING ACL, Montreal, Canada.
Boas, H. 2001. Frame semantics as a framework for
describing polysemy and syntactic structures of en-
glish and german motion verbs in contrastive com-
putational lexicography. Rayson, P., A. Wilson, T.
McEnery, A. Hardie, and S. Khoja, eds., Corpus lin-
guistics 2001 , vol.13, Lancaster, UK.
Cappelle, B. and R. Declerck. 2005. Spatial and tem-
poral boundedness in english motion events. Journal
of Pragmatics, 37(6):889?917, June.
Galton, A. 1993. Towards an integrated logic of space,
time, and motion. IJCAI.
Galton, A. 1997. Space, time, and movement. Stock,
O., ed., Spatial and temporal reasoning. Kluwer.
Herskovits, A. 1986. Language and Spatial Cogni-
tion: an Interdisci- plinary Study of the Prepositions
in English. Cambridge University Press.
Jackendoff, R. 1983. Semantics and Cognition. MIT.
Kipper, K., A. Korhonen, N. Ryant, and M. Palmer.
2006. Extensive classifications of english verbs. In
12th EURALEX, Turin, Italy.
Mani, I., J. Hitzeman, and C. Clark. 2008. Annotating
natural language geographic references. In Work-
shop on Methodologies and Resources for Process-
ing Spatial Language. LREC?2008.
MITRE. 2007. Spatialml: Annotation scheme for
marking spatial expressions in natural language.
http://sourceforge.net/projects/spatialml/.
Muller, P.. 1998. A qualitative theory of motion
based on spatio-temporal primitives. Cohn, A., L.
Schubert, and S. Shapiro, eds., KR?98: Principles
of Knowledge Representation and Reasoning, pages
131?141. Morgan Kaufmann.
Muller, P. 2002. Topological spatio-temporal reason-
ing and representation. Computational Intelligence,
18(3):420?450.
Pustejovsky, J. and M. Verhagen. 2007. Inferring
spatio-temporal trajectories of entities from natural
language documents. Tech. report, Brandeis U.
Pustejovsky, J., J. Casta?no, R. Ingria, R. Saur??, R.
Gaizauskas, A. Setzer, and G. Katz. 2003. Timeml:
Robust specification of event and temporal expres-
sions in text. In IWCS-5, Fifth International Work-
shop on Computational Semantics.
Pustejovsky, J. 1995. The Generative Lexicon. MIT.
Randell, D. A., Z. Cui, and A. G. Cohn. 1992. A spatial
logic based on regions and connections. Kaufmann,
M., ed., 3rd International Conference on Knowledge
Representation and Reasoning.
Vieu, L. 1991. S?emantique des relations spatiales
et inf?erences spatio-temporelles: une contribution `a
l??etude des structures formelles de l?espace en lan-
gage naturel. Ph.D. thesis, Universit?e Paul Sabatier.
98
Proceedings of the 8th International Conference on Computational Semantics, pages 169?180,
Tilburg, January 2009. c?2009 International Conference on Computational Semantics
GLML: Annotating Argument
Selection and Coercion
James Pustejovsky, Anna Rumshisky,
Jessica L. Moszkowicz, Olga Batiukova
Abstract
In this paper we introduce a methodology for annotating compo-
sitional operations in natural language text, and describe a mark-up
language, GLML, based on Generative Lexicon, for identifying such
relations. While most annotation systems capture surface relation-
ships, GLML captures the ?compositional history? of the argument
selection relative to the predicate. We provide a brief overview of GL
before moving on to our proposed methodology for annotating with
GLML. There are three main tasks described in the paper: (i) Com-
positional mechanisms of argument selection; (ii) Qualia in modifica-
tion constructions; (iii) Type selection in modification of dot objects.
We explain what each task includes and provide a description of the
annotation interface. We also include the XML format for GLML in-
cluding examples of annotated sentences.
1 Introduction
1.1 Motivation
In this paper, we introduce a methodology for annotating compositional
operations in natural language text. Most annotation schemes encoding
?propositional? or predicative content have focused on the identification
of the predicate type, the argument extent, and the semantic role (or label)
assigned to that argument by the predicate (see Palmer et al, 2005, Ruppen-
hofer et al, 2006, Kipper, 2005, Burchardt et al, 2006, Ohara, 2008, Subirats,
2004).
The emphasis here will be on identifying the nature of the composi-
tional operation rather than merely annotating the surface types of the en-
tities involved in argument selection.
169
Consider the well-known example below. The distinction in semantic
types appearing as subject in (1) is captured by entity typing, but not by any
sense tagging from, e.g., FrameNet (Ruppenhofer et al, 2006) or PropBank
(Palmer et al, 2005).
(1) a. Mary called yesterday.
b. The Boston office called yesterday.
While this has been treated as type coercion or metonymy in the literature (cf.
Hobbs et al, 1993 , Pustejovsky, 1991, Nunberg, 1979, Egg, 2005), the point
here is that an annotation using frames associated with verb senses should
treat the sentences on par with one another. Yet this is not possible if the
entity typing given to the subject in (1a) is HUMAN and that given for (1b)
is ORGANIZATION.
The SemEval Metonymy task (Markert and Nissim, 2007) was a good
attempt to annotate such metonymic relations over a larger data set. This
task involved two types with their metonymic variants:
(2) i. Categories for Locations: literal, place-for-people, place-for-event,
place-for-product;
ii. Categories for Organizations: literal, organization-for-members,
organization-for-event, organization-for-product, organization-for-fa-
cility.
One of the limitations with this approach, however, is that, while appropri-
ate for these specialized metonymy relations, the annotation specification
and resulting corpus are not an informative guide for extending the anno-
tation of argument selection more broadly.
In fact, the metonymy example in (1) is an instance of a much more
pervasive phenomenon of type shifting and coercion in argument selection.
For example, in (3) below, the sense annotation for the verb enjoy should
arguably assign similar values to both (3a) and (3b).
(3) a. Mary enjoyed drinking her beer .
b. Mary enjoyed her beer.
The consequence of this, however, is that, under current sense and role an-
notation strategies, the mapping to a syntactic realization for a given sense
is made more complex, and is, in fact, perplexing for a clustering or learn-
ing algorithm operating over subcategorization types for the verb.
170
1.2 Theoretical Preliminaries
The theoretical foundations for compositional operations within the sen-
tence have long been developed in considerable detail. Furthermore, type
shifting and type coercion operations have been recognized as playing an
important role in many formal descriptions of language, in order to main-
tain compositionality (cf. Partee and Rooth, 1983; Chierchia, 1998; Groe-
nendijk and Stokhof, 1989; Egg, 2005; Pinkal, 1999; Pustejovsky, 1995, and
many others). The goal of the present work is to: (a) create a broadly appli-
cable specification of the compositional operations involved in argument
selection; (b) apply this specification over a corpus of natural language
texts, in order to encode the selection mechanisms implicated in the com-
positional structure of the language.
The creation of a corpus that explicitly identifies the ?compositional his-
tory? associated with argument selection will be useful to computational
semantics in several respects: (a) the actual contexts within which type
coercions are allowed can be more correctly identified and perhaps gen-
eralized; (b) machine learning algorithms can take advantage of the map-
ping as an additional feature in the training phase; and (c) some consensus
might emerge on the general list of type-changing operations involved in
argument selection, as the tasks are revised and enriched.
For the purpose of this annotation task, we will adopt the general ap-
proach to argument selection within Generative Lexicon, as recently out-
lined in Pustejovsky (2006) and Asher and Pustejovsky (2006). We can dis-
tinguish the following modes of composition in natural language:
(4) a. PURE SELECTION (Type Matching): the type a function requires is
directly satisfied by the argument;
b. ACCOMMODATION: the type a function requires is inherited by the
argument;
c. TYPE COERCION: the type a function requires is imposed on the
argument type. This is accomplished by either:
i. Exploitation: taking a part of the argument?s type;
ii. Introduction: wrapping the argument with the required type.
Each of these will be identified as a unique relation between the predicate
and a given argument. In this annotation effort, we restrict the possible
relations between the predicate and a given argument to selection and coer-
cion. A more fine-grained typology of relations may be applied at a later
171
point. Furthermore, qualia structure values1 are identified in both argu-
ment selection and modification contexts.
The rest of this document proceeds as follows. In Section 2, we describe
our general methodology and architecture for GL annotation. Section 3
gives an overview of each of the annotation tasks as well as some details
on the resulting GLMLmarkup. Amore thorough treatment of thematerial
we present, including the complete GLML specification and updates on the
annotation effort can be found at www.glml.org.
2 General Methodology and Architecture
In this section, we describe the set of tasks for annotating compositional
mechanisms within the GL framework. The current GL markup will in-
clude the following tasks, each of which is described below in Section 3.
(5) a. Mechanisms of Argument Selection: Verb-based Annotation
b. Qualia in Modification Constructions
c. Type Selection in Modification of Dot Objects
2.1 System Architecture
Each GLML annotation task involves two phases: the data set construction
phase and the annotation phase. The first phase consists of (1) selecting the
target words to be annotated and compiling a sense inventory for each tar-
get, and (2) data extraction and preprocessing. The prepared data is then
loaded into the annotation interface. During the annotation phase, the an-
notation judgments are entered into the database, and the adjudicator re-
solves disagreements. The resulting database representation is used by the
exporting module to generate the corresponding XML markup, stand-off
annotation, or GL logical form.
These steps will differ slightly for each of the major GLML annotation
tasks. For example, Task 1 focuses on annotating compositional processes
between the verbs and their arguments. The first step for this task involves
(1) selecting the set of target verbs, (2) compiling a sense inventory for each
1The qualia structure, inspired by Moravcsik (1975)?s interpretation of the aitia of Aris-
totle, is defined as the modes of explanation of a word or phrase, and defined below (Puste-
jovsky, 1991): (a) FORMAL: the category distinguishing the meaning of a word within a
larger domain; (b) CONSTITUTIVE: the relation between an object and its constituent parts;
(c) TELIC: the purpose or function of the object, if there is one; (d) AGENTIVE: the factors
involved in the object?s origins or ?coming into being?.
172
target, and (3) associating a type template or a set of templates with each
sense. Since the objective of the task is to annotate coercion, our choices
must include the verbs that exhibit the coercive behavior at least in some of
their senses.
At the next step, the data containing the selected target words is ex-
tracted from a corpus and preprocessed. Since the GLML annotation is
intra-sentential, each extracted instance is a sentence. Sentences are parsed
to identify the relevant arguments, adjuncts or modifiers for each target.
The data is presented to the annotatator with the target word and the head-
word of the relevant phrase highlighted.
Due to the complexity of the GLML annotation, we chose to use the
task-based annotation architecture. The annotation environment is designed
so that the annotator can focus on one facet of the annotation at a time.
Thus, in Task 1, the verbs are disambiguated by the annotator in one sub-
task, and the annotation of the actual compositional relationship is done in
another subtask. Figure 1 shows an example of the interface for the verb-
based annotation task .
Figure 1: Example of Annotation Interface for GLML Annotation
173
2.2 The Type System for Annotation
The type system we have chosen for annotation is purposefully shallow,
but we also aimed to include types that would ease the complexity of the
annotation task. The type system is not structured in a hierarchy, but rather
it is presented as a set of types. For example, we include both HUMAN and
ANIMATE in the type system along with PHYSICAL OBJECT. While HUMAN
is a subtype of both ANIMATE and PHYSICAL OBJECT, the annotator does
not need to be concerned with this. This allows the annotator to simply
choose the HUMAN type when necessary rather than having to deal with
type inheritance.
While the set of types for GLML annotation can easily be modified, the
following list is currently being used:
(6) HUMAN, ANIMATE, PHYSICAL OBJECT, ARTIFACT, ORGANIZATION, EVENT, PROPOSITION, IN-
FORMATION, SENSATION, LOCATION, TIME PERIOD, ABSTRACT ENTITY, ATTITUDE, EMOTION,
PROPERTY, OBLIGATION, AND RULE
3 Annotation Tasks
In this section, we describe the annotation process: the steps involved in
each task and the way they are presented to the annotators. In this paper,
we focus on the task descriptions rather than an in depth review of the
annotation interface and the resulting GLML markup.
The general methodology for each task is as follows: 1) Select a target
set of words and compile a sense inventory for each one, 2) Select a set of
sentences for each target, 3) Disambiguate the sense of the target in a given
sentence, and 4) Answer questions specific to the annotation task in order
to create the appropriate GLML link.
3.1 Mechanisms of Argument Selection: Verb-based Annotation
This annotation task involves choosing which selectional mechanism is
used by the predicate over a particular argument. The possible relations
between the predicate and a given argument will, for now, be restricted
to selection and coercion. In selection, the argument NP satisfies the typ-
ing requirements of the predicate, as in The child threw the stone (PHYS-
ICAL OBJECT). Coercion encompasses all cases when a type-shifting op-
eration (exploitation or introduction) must be performed on the comple-
ment NP in order to satisfy selectional requirements of the predicate, as in
The White House (LOCATION ? HUMAN) denied this statement.
174
An initial set of verbs and sentences containing them has been selected
for annotation. For each sentence, the compositional relationship of the
verb with every argument and adjunct will be annotated. The target types
for each argument are provided in a type template that is associated with
the sense of the verb in the given sentence. For example, one of the senses
of the verb deny (glossed as ?State or maintain that something is untrue?)
would have the following type template: HUMAN deny PROPOSITION.
In the first subtask, the annotator is presented with a set of sentences
containing the target verb and the chosen grammatical relation. The anno-
tator is asked to select the most fitting sense of the target verb, or to throw
out the example (pick the ?N/A? option) if no sense can be chosen either
due to insufficient context, because the appropriate sense does not appear
in the inventory, or simply no disambiguation can be made in good faith.
Next, the annotator is presented with a list of sentences in which the
target verb is used in the same sense and is asked to determine whether the
argument in the specified grammatical relation belongs to the type speci-
fied in the corresponding template. If the argument belongs to the appro-
priate type, the ?yes? box is clicked, generating a CompLink with comp-
Type=?SELECTION?. If ?no? is selected, a type selection menu pops up
below the first question, and the annotator is asked to pick a type from a
list of shallow types which is usually associated with the argument. Con-
sequently, a CompLink with compType=?COERCION? is created with the
corresponding source and target type.
The following example of GLMLmarkup is generated from the database2:
Sir Nicholas Lyell, Attorney General, denies a cover-up.
<SELECTOR sid="s1">denies</SELECTOR>
a <NOUN nid="n1">cover-up</NOUN> .
<CompLink cid="cid1" sID="s1" relatedToNoun="n1" gramRel="dobj"
compType="COERCION" sourceType="EVENT" targetType="PROPOSITION"/>
3.2 Qualia Selection in Modification Constructions
For this task, the relevant semantic relations are defined in terms of the
qualia structure. We examine two kinds of constructions in this task: adjec-
tival modification of nouns and nominal compounds3.
2While we present these examples as an inline annotation, a LAF (Ide and Romary, 2003)
compliant offset annotation is fully compatible with GLML.
3Since target nouns have already been selected for these two tasks, it is also possible
to annotate qualia selection in verb-noun contexts such as Can you shine the lamp over here?
(TELIC). However, here we focus solely on the modification contexts mentioned here.
175
3.2.1 Adjectival Modification of Nouns
This task involves annotating how particular noun qualia values are bound
by the adjectives. Following Pustejovsky (2000), we assume that the prop-
erties grammatically realized as adjectives ?bind into the qualia structure
of nouns, to select a narrow facet of the noun?s meaning.? For example, in
the NP ?a sharp metal hunting knife?, sharp refers to the knife as a physi-
cal object, its FORMAL type, metal is associated with a material part of the
knife (CONSTITUTIVE), and hunting is associatedwith how the knife is used
(TELIC). Similarly, forged in ?a forged knife? is associated with the creation
of the knife (AGENTIVE).
The task begins with sense disambiguation of the target nouns. Ques-
tions are then used to help the annotator identify which qualia relations are
selected. For example, the TELIC question for the noun table would be ?Is
this adjective associated with the inherent purpose of table?? These ques-
tions will change according to the type associated with the noun. Thus,
for natural types such as woman, the TELIC question would be ?Is this ad-
jective associated with a specific role of woman?? Similarly, for the AGEN-
TIVE role, the question corresponding to the PHYSICAL OBJECT-denoting
nouns refers to the ?making or destroying? the object, while for the EVENT-
denoting nouns, the same question involves ?beginning or ending? of the
event. QLinks are then created based on the annotator?s answers, as in the
following example:
The walls and the wooden table had all been lustily scrubbed.
<SELECTOR sid="s1">wooden</SELECTOR>
<NOUN nid="n1">table</NOUN>
<QLink qid="qid1" sID="s1" relatedToNoun="n1" qType="CONST"/>
3.2.2 Nominal Compounds
This task explores the semantic relationship between elements in nominal
compounds. The general relations presented in Levi (1978) are a useful
guide for beginning a classification of compound types, but the relations
between compound elements quickly prove to be too coarse-grained. War-
ren?s comprehensive work (Warren, 1978) is a valuable resource for differ-
entiating relation types between compound elements.
The class distinction in compound types in language can be broken
down into three forms (Spencer, 1991): endocentric compounds, exocen-
tric compounds, and dvandva compounds. Following Bisetto and Scalise
176
(2005), however, it is possible to distinguish three slightly differently con-
structed classes of compounds, each exhibiting endocentric and exocentric
behavior: subordinating, attributtive, and coordinate.
We will focus on the two classes of subordinating and attributive com-
pounds. Within each of these, we will distinguish between synthetic and
non-synthetic compounds. The former are deverbal nouns, and when act-
ing functionally (subordinating), take the sister noun as an argument, as
in bus driver and window cleaner. The non-synthetic counterparts of these
include pastry chef and bread knife, where the head is not deverbal in any
obvious way. While Bisetto and Scalise?s distinction is a useful one, it does
little to explain how non-relational sortal nouns such as chef and knife act
functionally over the accompanying noun in the compound, as above.
This construction has been examined within GL by Johnston and Busa
(1999). We will assume much of that analysis in our definition of the task
described here. Our basic assumption regarding the nature of the seman-
tic link between both parts of compounds is that it is generally similar to
the one present in adjectival modification. The only difference is that in
nominal compounds, for instance, the qualia of a head noun are activated
or exploited by a different kind of modifier, a noun. Given this similar-
ity, the annotation for this task is performed just as it is for the adjectival
modification task. A QLink is created as in the following example:
Our guest house stands some 100 yards away.
<SELECTOR sid="s1">guest</SELECTOR>
<NOUN nid="n1">house</NOUN>
<QLink qid="qid1" sID="s1" relatedToNoun="n1" qType="TELIC"/>
3.3 Type Selection in Modification of Dot Objects
This task involves annotating how particular types within dot objects are
exploited in adjectival and nominal modification constructions. Dot objects
or complex types (Pustejovsky, 1995) are defined as the product of a type
constructor ? (?dot?), which creates dot objects from any two types a and
b , creating a ? b. Complex types are unique because they are made up of
seemingly incompatible types such as FOOD and EVENT.
Given a complex type c = a ? b, there are three possible options: 1) the
modifier applies to both a and b, 2) the modifier applies to a only, or 3) the
modifier applies to b only. Option 1 would be illustrated by examples such
as good book [+info, +physobj] and long test [+info, +event]. Examples such as
177
delicious lunch [+food, -event] and long lunch [-food, +event] illustrate options
2 and 3. A listing of dot objects can be found in Pustejovsky (2005).
The sense inventory for the collection of dot objects chosen for this task
will include only homonyms. That is, only contrastive senses such as the
river bank versus financial institution for bank will need to be disambiguated.
Complementary senses such as the financial institution itself versus the
building where it is located are not included.
In order to create the appropriate CompLink, the annotator will select
which type from a list of component types for a given dot object is exploited
in the sentence. The resulting GLML is:
After a while more champagne and a delicious lunch was served.
<SELECTOR sid="s1">delicious</SELECTOR>
<NOUN nid="n1">lunch</NOUN>
<CompLink cid="cid1" sID="s1" relatedToNoun="n1" gramRel="mod"
compType="SELECTION" sourceType="[PHYS_OBJ,EVENT]"
targetType="PHYS_OBJ" />
4 Conclusion
In this paper, we approach the problem of annotating the relation between
a predicate and its argument as one that encodes the compositional history
of the selection process. This allows us to distinguish surface forms that di-
rectly satisfy the selectional (type) requirements of a predicate from those
that are accommodated or coerced in context. We described a specification
language for selection, GLML, based largely on the type selective opera-
tions in GL, and three annotation tasks using this specification to identify
argument selection behavior.
There are clearly many compositional operations in language that have
not been addressed in this paper. The framework is general enough, how-
ever, to describe a broad range of type selective behavior. As the tasks be-
come more refined, the extensions will also become clearer. Furthermore,
as other languages are examined for annotation, new tasks will emerge re-
flecting perhaps language-specific constructions.
Acknowledgements
The idea for annotating a corpus according to principles of argument selec-
tion within GL arose during a discussion at GL2007 in Paris, between one
178
of the authors (J. Pustejovsky) and Nicoletta Calzolari and Pierrette Bouil-
lon. Recently, the authors met with other members of the GLML Working
Group in Pisa at the ILC (September 23-25, 2008). We would like to thank
the members of that meeting for their fruitful feedback and discussion on
an earlier version of this document. In particular, we would like to thank
Nicoletta Calzolari, Elisabetta Jezek, Alessandro Lenci, Valeria Quochi, Jan
Odijk, Tommaso Caselli, Claudia Soria, Chu-Ren Huang, Marc Verhagen,
and Kiyong Lee.
References
N. Asher and J. Pustejovsky. 2006. A type composition logic for generative
lexicon. Journal of Cognitive Science, 6:1?38.
A. Bisetto and S. Scalise. 2005. The classification of compounds. Lingue e
Linguaggio, 2:319?332.
Aljoscha Burchardt, Katrin Erk, Anette Frank, Andrea Kowalski, Sebastian
Pado, and Manfred Pinkal. 2006. The salsa corpus: a german corpus
resource for lexical semantics. In Proceedings of LREC, Genoa, Italy.
Gennaro Chierchia. 1998. Reference to kinds across language. Natural Lan-
guage Semantics, 6(4).
Marcus Egg. 2005. Flexible semantics for reinterpretation phenomena. CSLI,
Stanford.
Jeroen Groenendijk and Martin Stokhof, 1989. Type-shifting rules and the
semantics of interrogatives, volume 2, pages 21?68. Kluwer, Dordrecht.
Jerry R. Hobbs, Mark Stickel, and Paul Martin. 1993. Interpretation as ab-
duction. Artificial Intelligence, 63:69?142.
Nancy Ide and L. Romary. 2003. Outline of the international standard lin-
guistic annotation framework. In Proceedings of ACL?03Workshop on Lin-
guistic Annotation: Getting the Model Right.
M. Johnston and F. Busa. 1999. The compositional interpretation of com-
pounds. In E. Viegas, editor, Breadth and Depth of Semantics Lexicons,
pages 167?167. Dordrecht: Kluwer Academic.
Karin Kipper. 2005. VerbNet: A broad-coverage, comprehensive verb lexicon.
Phd dissertation, University of Pennsylvania, PA.
J. N. Levi. 1978. The Syntax and Semantics of Complex Nominals. Academic
Press, New York.
K. Markert and M. Nissim. 2007. Metonymy resolution at semeval i:
Guidelines for participants. In Proceedings of the ACL 2007 Conference.
179
J. M. Moravcsik. 1975. Aitia as generative factor in aristotle?s philosophy.
Dialogue, 14:622?636.
Geoffrey Nunberg. 1979. The non-uniqueness of semantic solutions: Poly-
semy. Linguistics and Philosophy, 3:143?184.
Kyoko Hirose Ohara. 2008. Lexicon, grammar, and multilinguality in the
japanese framenet. In Proceedings of LREC, Marrakech, Marocco.
M. Palmer, D. Gildea, and P. Kingsbury. 2005. The proposition bank: An
annotated corpus of semantic roles. Computational Linguistics, 31(1):71?
106.
Barbara Partee and Mats Rooth, 1983. Generalized conjunction and type ambi-
guity, pages 361?383. de Gruyter, Berlin.
Manfred Pinkal. 1999. On semantic underspecification. In Harry Bunt and
Reinhard Muskens, editors, Proceedings of the 2nd International Workshop
on Computational Semantics (IWCS 2), January 13-15, Tilburg University,
The Netherlands.
J. Pustejovsky. 1991. The generative lexicon. Computational Linguistics,
17(4).
J. Pustejovsky. 1995. Generative Lexicon. Cambridge (Mass.): MIT Press.
J. Pustejovsky. 2000. Events and the semantics of opposition. In C. Tenny
and J. Pustejovsky, editors, Events as Grammatical Objects, pages 445?
482. Center for the Study of Language and Information (CSLI), Stan-
ford, CA.
J. Pustejovsky. 2005. A survey of dot objects. Technical report, Brandeis
University.
J. Pustejovsky. 2006. Type theory and lexical decomposition. Journal of Cog-
nitive Science, 6:39?76.
J. Ruppenhofer, M. Ellsworth, M. Petruck, C. Johnson, and J. Scheffczyk.
2006. FrameNet II: Extended Theory and Practice.
A. Spencer. 1991. Morphological Theory: An Introduction to Word Structure
in Generative Grammar. Blackwell Textbooks in Linguistics, Oxford, UK
and Cambridge, USA.
Carlos Subirats. 2004. FrameNet Espan?ol. Una red sema?ntica de mar-
cos conceptuales. In VI International Congress of Hispanic Linguistics,
Leipzig.
B. Warren. 1978. Semantic Patterns of Noun-Noun Compounds. Acta Univer-
sitatis Gothoburgensis, Go?teborg.
180
