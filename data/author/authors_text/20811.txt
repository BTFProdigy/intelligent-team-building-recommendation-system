Proceedings of the of the EACL 2014 Workshop on Dialogue in Motion (DM), pages 1?9,
Gothenburg, Sweden, April 26-30 2014.
c?2014 Association for Computational Linguistics
In-Car Multi-Domain Spoken Dialogs: A Wizard of Oz Study
Sven Reichel, Ute Ehrlich, Andr
?
e Berton
Speech Dialogue Systems
Daimler AG
Ulm, Germany
{sven.reichel, ute.ehrlich,
andre.berton}@daimler.com
Michael Weber
Institute of Media Informatics
Ulm University
Germany
michael.weber@uni-ulm.de
Abstract
Mobile Internet access via smartphones
puts demands on in-car infotainment sys-
tems, as more and more drivers like to ac-
cess the Internet while driving. Spoken
dialog systems support the user by less
distracting interaction than visual/haptic-
based dialog systems. To develop an intu-
itive and usable spoken dialog system, an
extensive analysis of the interaction con-
cept is necessary. We conducted a Wizard
of Oz study to investigate how users will
carry out tasks which involve multiple ap-
plications in a speech-only, user-initiative
infotainment system while driving. Re-
sults show that users are not aware of dif-
ferent applications and use anaphoric ex-
pressions in task switches. Speaking styles
vary and depend on type of task and di-
alog state. Users interact efficiently and
provide multiple semantic concepts in one
utterance. This sets high demands for fu-
ture spoken dialog systems.
1 Introduction
The acceptance of smartphones is a success story.
These devices allow people to access the Internet
nearly anywhere at anytime. While driving, using
a smartphone is prohibited in many countries as it
distracts the driver. Regardless of this prohibition,
people use their smartphone and cause severe in-
juries (National Highway Traffic Safety Adminis-
tration (NHTSA), 2013). In order to reduce driver
distraction, it is necessary to integrate the smart-
phone?s functionality safely into in-car infotain-
ment systems. Since hands and eyes are involved
in driving, a natural and intuitive speech-based in-
terface increases road safety (Maciej and Vollrath,
2009). There are already infotainment systems
with Internet applications like e.g. weather, music
streaming, gas prices, news, and restaurant search.
However, not all of them can be controlled by nat-
ural speech.
In systems based on graphic and haptic modal-
ity, the functionality is often grouped into various
applications. Among other things, this is due to
the limited screen size. The user has to start an
application and select the desired functionality. A
natural speech interface does not require a frag-
mentation of functionalities into applications, as
people can express complex commands by speech.
In single-application tasks, such as calling some-
one, natural speech interfaces are established and
proven. However, users often encounter complex
tasks, which involve more than one application.
For example, while hearing the news about a new
music album, the driver might like to start listen-
ing to this album via Internet radio. Spoken lan-
guage allows humans to express a request such
as ?Play this album? easily, since the meaning is
clear. However, will drivers also use this kind of
interaction while using an in-car spoken dialog
system (SDS)? Or is the mental model of ap-
plication interaction schema dominant in human-
computer interaction? In a user experiment, we
confront drivers with multi-domain tasks, to ob-
serve how they interact.
While interacting with an SDS, one crucial
problem for users is to know which utterances the
system is able to understand. People use different
approaches to solve this problem, for example by
reading the manual, using on-screen help, or rely-
ing on their experiences. In multi-domain dialog
systems, utterances can be quite complex, thus re-
membering all utterances from the manual or dis-
playing them on screen would not be possible. As
a result, users have to rely on their experience in
communications to know what to say. Thus, an
advanced SDS needs to understand what a user
would naturally say in this situation to execute a
certain task.
1
In this paper, we present results from a Wizard
of Oz (WoZ) experiment on multi-domain in-
teraction with an in-car SDS. The goal of this
study is to build a corpus and analyze it ac-
cording to application awareness, speaking styles,
anaphoric references, and efficiency. Our results
provide a detailed insight how drivers start multi-
application tasks and switch between applications
by speech. This will answer the question whether
they are primed to application-based-interaction
or use a natural approach known from human-
human-communication. The results will be used
to design grammars or language models for work-
ing prototypes, which establish a basis for real
user tests. Furthermore, we provide guidelines for
multi-domain SDSs.
The remainder of this paper is structured as fol-
lows: Section 2 provides an overview of other
studies in this context. Section 3 describes the do-
main for the user experiment which is presented
in Section 4. Data analysis methods are defined
in Section 5. We present the results in Section 6
and discuss them in Section 7. Finally, we con-
clude and give guidelines for multi-domain SDSs
in Section 8.
2 Related Work
Many studies exist which evaluate SDSs concern-
ing performance, usability, and driver distraction
(a good overview provides Ei-Wen Lo and Green
(2013)). Usually, participants are asked to com-
plete a task, while driving in a simulated envi-
ronment or in real traffic. Geutner et al. (2002),
for example, showed that a virtual co-driver con-
tributes to ease of use with little distraction effects.
In their WoZ experiment, natural language was
preferred to command-and-control input. How-
ever, no in-depth analysis of user utterances is pre-
sented. Cheng et al. (2004) performed an analy-
sis of natural user utterances. They observed that
drivers, occupied in a driving task, use disfluent
and distracted speech and react differently than by
concentrating on the speech interaction task. None
of the studies provide in-depth analysis of multi-
domain tasks, as our work does.
Multi-domain SDS exist like e.g. SmartKom
(Reithinger et al., 2003) or CHAT (Weng et al.,
2007). They presented complex systems with
many functionalities, however, they do not eval-
uate subtask switching from users? point of view.
In CHAT, the implicit application switch was even
disabled due to ?extra burden on the system?. Do-
main switches are analyzed in human-human com-
munication as e.g. in Villing et al. (2008). How-
ever, people interact differently with a system than
with a human. Even in human-computer commu-
nication, speaking styles differ depending on type
of task, as (Hofmann et al., 2012) showed in a
web-based user study. In order to develop an intu-
itive multi-application SDS, it is necessary to an-
alyze how users interact in a driving situation by
completing tasks across different domains.
3 User Tasks
In a user experiment it is crucial to set real tasks
for users, since artificial tasks will be hard to re-
member and can reduce their attention. We ana-
lyzed current in-car infotainment systems with In-
ternet access and derived eight multi-domain tasks
from their functionality (see Table 1). The sub-
tasks were classified according to Kellar et al.
(2006)?s web information classification schema in
information seeking (Inf), information exchange,
and information maintenance. Since information
maintenance is not a strong automotive use case,
these tasks were grouped together with informa-
tion exchange. We call them action subtasks (Act)
as they initiate an action of the infotainment sys-
tem (e.g. ?turn on the radio?).
No App 1 App 2 App3
1 POI Search Restaurant Call
2 Knowledge Ski Weather Navigation
3 Weather Hotel Search Address book
4 Play Artist News Search Forward by eMail
5 Navigation Restaurant Save as Favorite
6 News Search Play Artist Share on Facebook
7 News Search Knowledge Convert Currency
8 Navigation Gas Prices Status Gas Tank
Table 1: Multi-application user tasks.
Since only few use cases involve more than
three applications, every user task is a story of
three subtasks. In task number 5 for example, a
user has to start a subtask, which navigates him
to Berlin. Then he would like to search an Italian
restaurant at the destination. Finally, he adds the
selected restaurant to his favorites. The focus is on
task entry and on subtask switch, thus the subtasks
require only two to four semantic concepts (like
Berlin or Italian restaurant). One of these con-
cepts is a reference to the previous subtask (like
at the destination or the selected restaurant) to en-
sure a natural cross-application dialog flow. After
the system?s response for one subtask the user has
to initiate the next subtask to complete his task.
2
4 User Experiment
Developing an SDS means specifying a grammar
or training statistical language models for speech
recognition. These steps precede any real user test.
In system-initiated dialogs, with a few possible ut-
terances, specifying a grammar is feasible. How-
ever, in strictly user-initiative dialogs with mul-
tiple applications, this is rather complicated. A
WoZ study does not require to develop speech
recognition and understanding as this is performed
by a human. Analyzing the user utterances of a
WoZ experiment provides a detailed view of how
a user will interact with the SDS. This helps in de-
signing spoken dialogs and specifying grammars
and/or training language models for further eval-
uations (Fraser and Gilbert, 1991; Glass et al.,
2000).
Interaction schemes of people vary among each
other and depend on age, personality, experience,
context, and many more. It is essential to con-
duct a user study with people who might use the
SDS later on. A study by the NHTSA (National
Highway Traffic Safety Administration (NHTSA),
2013) showed that in 2011 73% of the drivers in-
volved in fatal crashes due to cell phone use, were
less than 40 years old. For this reason, our study
considers drivers between 18 and 40 years who
are technically affine and are likely to buy a car
equipped with an infotainment system with Inter-
net access.
4.1 Experimental Set-Up
When designing a user interaction experiment, it
is important that it takes place in a real environ-
ment. As driving on a real road is dangerous, we
used a fixed-base driving simulator in a laboratory.
In front of the car, a screen covers the driver?s field
of view (see Figure 1). Steering and pedal signals
are picked from the car?s CAN bus. It is impor-
tant that the user assumes he is interacting with
a computer as ?human-human interactions are not
the same as human-computer interactions? (Fraser
and Gilbert, 1991). The wizard, a person in charge
of the experiment, was located behind the car and
mouse clicks or any other interaction of the wizard
was not audible in the car. To ensure a consistent
behavior of the wizard, we used SUEDE (Klem-
mer et al., 2000) to define the dialog, which also
provides an interface for the wizard. SUEDE de-
fines a dialog in a state machine, in which the sys-
tem prompts are states and user inputs are edges
between them. The content of system prompts was
synthesized with NUANCE Vocalizer Expressive
1
version 1.2.1 (Voice: anna.full). During the ex-
periment, after each user input the wizards clicks
the corresponding edge and SUEDE plays the next
prompt. All user utterances are recorded as audio
files.
Figure 1: Experimental Set-Up
4.2 Experiment Design
Infotainment systems in cars are used while driv-
ing. This means the user cannot concentrate on the
infotainment system only, but also has to focus on
the road. According to multiple resource theory,
the human?s performance is reduced when human
resources overlap (Wickens, 2008). In a dual-task
scenario, like using the infotainment system while
driving, multiple resources are allocated and may
interfere. Considering this issue, we use a driving
task to keep the participants occupied while they
interact with the SDS. This allows us to observe
user utterances in a stressful situation.
Infotainment systems in cars are often equipped
with large displays providing visual and haptic
interaction. These kinds of interaction compete
for human resources which are needed for driv-
ing. This results in driver distraction, especially
in demanding secondary tasks (Young and Regan,
2007). Furthermore, a visual interface can also in-
fluence the communication of users (e.g. they ut-
ter visual terms). As we intent to study how a user
interacts naturally with a multi-domain SDS, we
avoid priming effects by not using any visual in-
terface.
4.2.1 Primary Task: Driving Simulator
One major requirement for the driving task is to
keep the driver occupied at a constant level all
the time. Otherwise, we would not be able to
analyze user utterances on a fine-grained level.
1
http://www.nuance.com/for-business/mobile-
solutions/vocalizer-expressive/index.htm
3
Therefore, we used the Continuous Tracking and
Reaction (ConTRe) task (Mahr et al., 2012) which
allows controlled driving conditions. It consists of
a steering and a reaction task, which require oper-
ating the steering wheel and pedals. In the steering
task, a yellow cylinder moves unpredictable right
and left at a constant distance from the driver and
the driver must always steer towards it. This is
similar to driving on a curved road. Sometimes a
driver needs to react to sudden events to prevent an
accident. For this a traffic light shows randomly
red and green and requires the driver to push the
throttle or brake pedal. The movement of the yel-
low cylinder and the appearance of the stop light
can be controlled by manipulating control vari-
ables. The ?hard driving setting? from Mahr et al.
(2012) was used in this study.
4.2.2 Secondary Task: cross application tasks
with speech interaction
As described in Section 3, a task consists of three
subtasks and each subtask requires two to four se-
mantic concepts. For a user it is possible to insert
multiple concepts at once:
U: ?Search an Italian restaurant at the destination?
or as single utterances in a dialog:
U: ?Search an Italian restaurant?
S: ?Where do you search an Italian restaurant??
U: ?At my destination?
For all possible combinations prompts were speci-
fied. SUEDE provides a GUI for the wizard to se-
lect which semantic concept a user input contains.
Dependent on the selection, either another concept
is requested or the answer is provided. Further-
more, a user input can optionally contain a verb
expressing what the system should do. For exam-
ple, if users say ?Italian Restaurant? the reaction
is the same as they would say ?Search an Italian
restaurant?.
The user has basically two options to select or
switch to an application. Either an explicit selec-
tion such as:
U: ?Open restaurant application?
S: ?Restaurant, what do you want??
or an implicit selection such as:
U: ?Search an Italian restaurant?
By using an explicit selection, users assume they
have to set the context to a specific application.
After that, they can use the functionality of this
application. This is a common interaction schema
for visual-based infotainment systems or smart-
phones, as they cluster their functionality into var-
ious applications. An implicit selection is rather
like current personal assistants interact, as they do
not cluster their functionality. Implicit selection
facilitates the interaction for users since they can
get an answer right away. After the user provided
the necessary input for one subtask, the system re-
sponds for example:
S: ?There is one Italian restaurant: Pizzeria San Marco.?
Then the user needs to initiate an application
switch to proceed with his task.
A system enabling user-initiated dialogs cannot
always understand the user correctly. Especially in
implicit selection, the language models increase,
and thus recognition as well as understanding is
error prone (Carstensen et al., 2010). Further-
more, the user could request a functionality which
is not supported by the system. Therefore, error
handling strategies need to be applied. In terms
of miscommunication, it can be distinguished be-
tween misunderstanding and non-understanding
(Skantze, 2007). In the experiment, two of our
tasks do not support an implicit application switch,
but require an explicit switch. So if users try to
switch implicitly, the system will not understand
their input in one task and will misinterpret it in
the other task. A response to misunderstanding
might look like:
U: ?Search an Italian restaurant?
S: ?In an Italian restaurant you can eat pizza?
A non-understanding informs the user and encour-
ages him to try another request:
S: ?Action unknown, please change your request?
These two responses are used until the user
changes his strategy to explicit selection. If that
does not happen, the task is aborted by the wizard
if the user gets too frustrated. This enables us to
analyze whether users will switch their strategy or
not and how many turns it will take.
4.3 Procedure
The experiment starts with an initial questionnaire
to create a profile of the participant, concerning
age, experience with smartphones, infotainment
systems and SDSs. Then participants are intro-
duced to the driving task and they have time to
practice till being experienced. After complet-
ing a baseline drive, they start to use the SDS.
For each spoken dialog task users get a story de-
scribing in prose what they like to achieve with
the system. To minimize priming effects, they
have to remember their task and are not allowed to
keep the description during the interaction. There
4
is no explanation or example of the SDS, apart
from a start command for activation. After the
start command, the system plays a beep and the
user can say whatever he likes to achieve his
task. The exploration phase consists of four tasks,
in which users can switch applications implic-
itly and explicitly. Then they rate the usability
of the system with the questionnaire: Subjective
Assessment of Speech System Interfaces (SASSI)
(Hone and Graham, 2000). In the second part of
the experiment, four tasks with different interac-
tion schemes for application switches are com-
pleted randomly: implicit & explicit switch pos-
sible, misunderstanding, non-understanding, and
dialog-initiative change.
5 Dialog Data Analysis
All audio files of user utterances were transcribed
and manually annotated by one person concerning
the application selection/switch, speaking style,
anaphoric references, and semantic concepts.
First of all, for each application entry and switch
it was classified whether the participant used an
implicit or explicit utterance. Additionally, the
non-understanding and misunderstanding data sets
were marked whether the dialog strategy was
changed and how many dialog turns this took.
Since most of the user utterances were implicit
ones (see Section 6.1), we classified them fur-
ther into different speaking styles. In the data
set of implicit utterances, five different speaking
styles could be identified. Table 2 shows them
with an example. The illocutionary speech act to
search a hotel is always the same, but how users
express their request varies. Keyword style and
explicit demand is rather how we expect people
to speak with machines, as these communication
forms are short commands and might be regarded
as impolite between humans. Kinder and gentler
communications forms are implicit demands, Wh-
questions, and Yes-No-Questions. This is how we
would expect people to interact with each other.
Keyword Style ?Restaurant search. Berlin?
Implicit Demand ?I?d like to search a restaurant in
Berlin.?
Wh-Question ?Which restaurants are in Berlin??
Yes-No-Question ?Are there any restaurants in Berlin??
Explicit Demand ?Search restaurants in Berlin?
Table 2: Speaking styles of user utterances.
Two applications are always linked with a com-
mon semantic concept. The user has to refer to
this concept which he can do in various ways with
anaphoric expressions. The annotation of the data
set is based on Fromkin et al. (2003) and shown
in Table 3 (Examples are user utterances in re-
sponse to the system prompt ?Navigation to Berlin
started?). In an elliptic anaphoric reference the
concept is not spoken, but still understood because
of context - also called gapping. Furthermore,
pronominalization can be used as an anaphor. We
distinguish between a pronoun or adverb anaphor
and an anaphor with a definite noun phrase, since
the later contains the type of semantic concept.
Another way is simply to rephrase the semantic
concept.
Elliptic ?Search restaurants.?
Pronoun, Adverb ?Search restaurants there.?
Definite Noun Phrase ?Search restaurants in this city.?
Rephrase ?Search restaurants in Berlin.?
Table 3: Anaphoric reference types.
6 Results
In the following, results on application awareness,
speaking style, anaphoric expressions, efficiency,
and usability are presented. We analyzed data
from 31 participants (16m/15f), with average age
of 26.65 (SD: 3.32). 26 people possess and use a
smartphone on a regular basis and 25 of them are
used to application-based interaction (18 people
use 1-5 apps and 7 people use 6-10 apps each day).
Their experience with SDS is little (6-Likert Scale,
avg: 3.06, SD: 1.48) as well as the usage of SDSs
(5-Likert Scale, avg: 2.04, SD: 1.16). We asked
them how they usually approach a new system or
app to learn its interaction schema and scope of
operation. On the smartphone, all 31 of them try
a new app without informing themselves how it is
used. Concerning infotainment systems, trying is
also the most used learning approach, even while
driving (26 people). This means, people do not
read a manual, but the system has to be naturally
usable.
In total, we built a corpus of interactions with 5h
25min with 3h 08min of user speech. It contains
243 task entries and 444 subtask switches. Due to
data loss 5 task entries could not be analyzed. Sub-
task switches were less than theoretically possible,
because misunderstanding and non-understanding
tasks were aborted by the wizard if the user did
not change his strategy. Concerning the type of
subtask, we analyzed 91 action and 152 informa-
tion seeking subtasks for task entries, as well as
5
236 actions and 208 information seekings for task
switches.
6.1 Application Awareness
The SDS was designed to be strictly user-
initiative: after a beep users could say whatever
they liked. We counted 4.9% of user utterances as
explicit entries to start a task, which means users
in general assume either the SDS is already in the
right application context or it is not based on dif-
ferent applications. This is an interaction schema
which would rather be used with a human com-
munication partner. 1.1% explicit utterances in
subtask switches reinforce this assumption. Utter-
ances addressing more than one application could
not be observed.
Furthermore, we analyzed whether users
change their strategy from implicit to explicit
subtask switch if the system does not react as
expected. The implicit switch was prevented
and the system answered as if a misunderstand-
ing or a non-understanding has occurred. Ta-
ble 4 shows results for the number of subtask
switches (subt. sw.), number of successful strategy
changes (succ.), and average number of user utter-
ances (avg. UDT) till the strategy was changed.
In total, only in 43.7% subtask switches users
changed their strategy. The difference between
non-understanding and misunderstanding was not
significant (p=0.051), however, this might due to
small sample size.
subt. sw. succ. avg. UDT
non-underst. 42 15 2.93 (SD=1.91)
misunderst. 45 23 3.74 (SD=1.79)
Table 4: Dialog repair changes to explicit strategy.
In summary, only 6% of user utterances ad-
dressed the application explicitly and only 43.7%
of users changed their strategy from implicit to ex-
plicit. These results reveal that most users are not
aware of different applications or do not address
applications differently in a speech-only infotain-
ment system. They interact rather like with a hu-
man being or with a personal assistant than with a
typical in-car SDS.
6.2 Speaking styles of implicit application
selection
Even if people interact without being aware of dif-
ferent applications, they might speak to a system
in another way than to a human. We analyzed
the implicit user utterances according to different
speaking styles (see Figure 2). Overall, explicit
demand dominates with 37.07% for task entry and
42.42% for subtask switching. Keyword style is
used in 16.16% for task entry and 9.29% for sub-
task switches. As mentioned, explicit demand and
keyword style are rather used in human-computer
interaction. Here, slightly more than half of the
participants (entry: 53.23%; switch: 51.71%) use
this kind of interaction. The other half interacts
in kinder and gentler forms known from human-
human communication.
Comparing task entry and subtask switch, dif-
ferences could be found in keyword style, implicit
demand, and Yes-No-Question. In the first contact
with the system, users might be unsure what it is
capable of, therefore, often keywords were used
to find out how the system reacts. Additionally,
the task description was formulated in implicit de-
mand style, thus an unsure user might remember
this sentence and use it. Concerning the Yes-No-
Questions, they might be a reaction to the naturally
formulated system prompts, thus the user adapts to
a human-human-like communication style.
Finally, we compare information seeking sub-
tasks with action subtasks. In action subtasks, im-
plicit and explicit demand style dominate. This
is reasonable, as people give commands in either
form and expect a system reaction. Likewise, it
was anticipated that question styles are used for in-
formation seeking. One interesting finding is that
keyword style is more often used in information
seeking. This could be due to priming effects of
using search engines like Google
2
, in which users
only insert the terms they are interested in and
Google provides the most likely answers.
In summary, speaking styles vary. Sometimes
the system is considered as a human-like commu-
nication partner and sometimes users try to reach
their goal as fast as possible by giving short com-
mands. However, speaking styles depend on the
type of subtask and dialog state.
6.3 Anaphoric Expressions
In a cross-application task, it is of interest how
users refer to application-linking semantic con-
cepts. Figure 3 shows which kind of anaphoric ex-
pressions were used in implicit utterances. Nearly
half of the utterances (47.68%) contain a rephrase
of the semantic concept and further 31.57% a def-
2
www.google.de
6
5,95% 
1,08% 
17,26% 
9,27% 
0,00% 3,23% 0,60% 3,45% 
26,19% 
32,76% 
10,20% 
8,21% 
5,78% 
1,93% 22,11% 
22,71% 
1,02% 
7,00% 
10,88% 
9,66% 
0,0%
5,0%
10,0%
15,0%
20,0%
25,0%
30,0%
35,0%
40,0%
45,0%
Entry Switch Entry Switch Entry Switch Entry Switch Entry Switch
Keyword Style Implicit Demand Wh-Question Yes-No-Question Explicit Demand
Inf
Act
Act 
Inf 
 
Act 
Inf 
Figure 2: Speaking styles of implicit task entry and subtask switch distinguished by action (Act) and
information seeking (Inf)
inite noun phrase. A rephrase utterance can be
interpreted easily for an SDS, since there is no
need to determine the right antecedent from dia-
log history. A definite noun phrase contains the
semantic type of the antecedent and can be ref-
ered easily in a semantic annotated dialog history.
However, a pronoun or elliptic anaphoric expres-
sion is harder to resolve, as the former only de-
scribes the syntactic form of the antecedent and
the later does not contain any information of the
antecedent. Sometimes, also humans are not able
to resolve an anaphoric expression easily. Com-
paring information seeking and action subtasks,
the only difference can be identified between def-
inite noun phrases and rephrase. In information
seeking subtasks, participants rephrased more of-
ten than using definite noun phrases.
4,98% 8,87% 
17,53% 18,61% 2,22% 
4,68% 
14,04% 
29,06% 
0,0%
10,0%
20,0%
30,0%
40,0%
50,0%
60,0%
Elliptic Pronoun,Adverb Definite NP Rephrase
Inf
Act
Figure 3: Anaphoric expressions used in implicit
application switches.
6.4 Efficiency
Especially in the car it is essential to support short
and efficient interactions. In this study, partici-
pants used on average 6.27 (SD: 2.62) words for
one utterance. However, the word length of a user
utterance is only one part which influences dialog
length. The number of semantic concepts uttered
is more important, as the more semantic concepts
are spoken, the less system prompts are needed to
request missing information. The semantic con-
cepts of each user utterance were annotated and
counted (avg: 2.77; SD: 0.73; min: 1; max: 6).
They are set in relation to the maximum required
semantic concepts (avg: 3.26; SD: 0.59; min: 2;
max: 4) for the corresponding subtask. We divide
the spoken concepts by the maximum concepts to
calculate an efficiency score (avg: 0.86; SD: 0.22).
This means 86% of user utterances contain all nec-
essary semantic concepts to answer the request.
Therefore, in-car SDS need to understand multiple
semantic concepts in one utterance to keep a dia-
log short, such as the city, street and street number
for a destination entry.
0,88 0,91 0,69 0,87 
0
0,2
0,4
0,6
0,8
1
Entry Switch
ActInf
Act Inf  Act Inf 
Figure 4: Efficiency scores of user utterances.
Figure 4 shows efficiency scores split into task
entry and subtask switch as well as action and
information seeking. In total, there is no sig-
nificant difference between task entry and sub-
task switch concerning number of words, seman-
tic concepts, or efficiency score. Comparing types
of subtasks at task entry, the efficiency score for
action subtasks (avg: 0.69; SD: 0.2) is signifi-
cantly (p=0.0018) less than for information seek-
ing subtasks (avg. 0.88; SD 0.22). Although, sig-
nificantly (p=0.0003) more semantic concepts in
actions were required (avg: 3.66; SD: 0.48) than
in information seekings (avg: 3.2; SD: 0.4), users
do not utter more semantic concepts. How many
semantic concepts users can utter in one sentence
while driving, needs to be addressed in the future.
6.5 Usability
Usability is a necessary condition in order to eval-
uate if people will use a system. The SASSI scores
7
provide valid evidence of a system?s usability. Fig-
ure 5 shows results separated into the six dimen-
sions System Response Accuracy (SRA), Like-
ability (Like), Cognitive Demand (Cog Dem), An-
noyance (Ann), Habitability (Hab), and Speed. A
7-Likert scale was used and recoded to values [-
3, ..., 3]. If a system is less annoying, its usabil-
ity will be better. Thus, except of cognitive de-
mand and habitability, the usability of our SDS is
rated good. The low habitability score is due to the
fact that we did not explain the SDS and after four
tasks users are not completely accustomed to the
system.
-3
-2
-1
0
1
2
3
SRA Like Cog Dem Ann Hab Speed SASSI
Figure 5: SASSI Usability scores.
7 Discussion and Further Research
The results show, that users are in general not
aware of different applications in speech-only in-
car SDSs and switch implicitly between different
domains. This interaction schema is similar to
human-human communication, but may differ if
the user is primed through a visual representation.
Concerning speaking styles, more than half of the
participants used keyword style and explicit de-
mand, which might be regarded impolite between
humans. They are aware to communicate with
a system lacking emotions. A user, who is not
sure about the system?s functions, will rather start
with keywords and, after hearing natural formu-
lated system prompts, is likely to adapt to natu-
ral speaking styles. A human-like prompt (instead
of our beep) may ensure the user from the begin-
ning. Obviously, speaking styles depend on type
of task, thus question and keyword style is used
for information seeking and demand style to initi-
ate an action. More than 50% of the participants
used anaphoric expressions, which have to be re-
solved within dialog context. This is comprehen-
sible, as for people it is usually easier and more ef-
ficient to pronounce an anaphor than to pronounce
the antecedent. For reaching their interaction goal
fast and efficient, the participants used multiple se-
mantic concepts in utterances. In total, 86% of
user utterances contain all necessary information
to answer the request. This results in less dialog
turns and thus is fundamental for in-car systems.
In addition, the usability is rated good, thus the
system might be accepted by drivers.
Another crucial point for in-car systems is that
they should distract the driver as little as possible.
It can be assumed that without visual and haptic
distractions, the driver would keep his focus on
the road. However, cognitive demand also causes
distraction. The moderate SASSI score for cogni-
tive demand requires an objective test. Therefore,
we will analyze multi-domain interactions with re-
spect to mental pressure and driver performance
for further research. So far, we have only consid-
ered multi-domain dialogs with one common se-
mantic concept. By referring to multiple seman-
tic concepts, drivers might use more anaphoric ex-
pressions or aggregate them with a general term,
which needs to be address in further experiments.
8 Conclusions
This paper presents results on how young and
technically affine people interact with in-car SDSs
in performing multi-domain tasks. 31 participants
completed all together 243 tasks (each with two
application switches) while driving in a fixed-base
driving simulator. In this experiment, a controlled
WoZ setup was used instead of a real speech
recognition system.
The results identify important guidelines for
multi-domain SDSs. Since users are in general not
aware of applications in speech-only dialog sys-
tems, implicit application switching is required.
However, this should not replace explicit switch-
ing commands. Speaking styles vary and depend
on type of task, and dialog state. Thus language
models must therefore consider this issue. Peo-
ple rely on anaphora, which means an SDS must
maintain a extensive dialog history across multi-
ple applications to enable coreference resolution.
It is further necessary that the SDS supports multi-
ple semantic concepts in one utterance since it en-
ables an efficient interaction and drivers use this.
The SDS?s usability was rated good by the partici-
pants. For further research, we will analyze multi-
domain interaction with respect to driver perfor-
mance and multiple semantic concept anaphora.
Acknowledgments
The work presented here was funded by
GetHomeSafe (EU 7th Framework STREP
288667).
8
References
Kai-Uwe Carstensen, Christian Ebert, Cornelia Ebert,
Susanne Jekat, Ralf Klabunde, and Hagen Langer.
2010. Computerlinguistik und Sprachtechnologie.
Spektrum, Akad. Verl.
Hua Cheng, Harry Bratt, Rohit Mishra, Elizabeth
Shriberg, Sandra Upson, Joyce Chen, Fuliang
Weng, Stanley Peters, Lawrence Cavedon, and John
Niekrasz. 2004. A wizard of oz framework for col-
lecting spoken human-computer dialogs. In Proc. of
ICSLP-2000.
Victor Ei-Wen Lo and Paul A. Green. 2013. Devel-
opment and evaluation of automotive speech inter-
faces: Useful information from the human factors
and the related literature. Int. Journal of Vehicular
Technology, 2013:13.
Norman M. Fraser and G.Nigel Gilbert. 1991. Sim-
ulating speech systems. Computer Speech & Lan-
guage, 5(1):81 ? 99.
Victoria Fromkin, Robert Rodman, and Nina Hyams.
2003. An Introduction to Language. Rosenberg,
Michael, 7 edition.
Petra Geutner, Frank Steffens, and Dietrich Manstetten.
2002. Design of the vico spoken dialogue system:
Evaluation of user expectations by wizard-of-oz ex-
periments. In Proc. of the Int. Conf. on Language
Resources and Evaluation, volume 2.
James Glass, Joseph Polifroni, Stephanie Seneff, and
Victor Zue. 2000. Data collection and performance
evaluation of spoken dialogue systems: The mit ex-
perience. In Proc. of 6th INT.
Hansj?org Hofmann, Ute Ehrlich, Andr?e Berton, and
Wolfgang Minker. 2012. Speech interaction with
the internet - a user study. In Intelligent Environ-
ments, Guanajuato, Mexico.
Kate S Hone and Robert Graham. 2000. Towards a
tool for the subjective assessment of speech system
interfaces (sassi). Natural Language Engineering,
6(3&4):287?303.
Melanie Kellar, Carolyn Watters, and Michael Shep-
herd. 2006. A goal-based classification of web in-
formation tasks. In In 69th Annual Meeting of the
American Society for Information Science and Tech-
nology (ASIST).
Scott R. Klemmer, Anoop K. Sinha, Jack Chen,
James A. Landay, Nadeem Aboobaker, and Annie
Wang. 2000. Suede: a wizard of oz prototyping
tool for speech user interfaces. In Proc. of the 13th
annual ACM symposium on User interface software
and technology, New York. ACM.
Jannette Maciej and Mark Vollrath. 2009. Compari-
son of manual vs. speech-based interaction with in-
vehicle information systems. Accident Analysis and
Prevention, 41(5):924 ? 930.
Angela Mahr, Michael Feld, Mohammad Mehdi
Moniri, and Rafael Math. 2012. The contre (con-
tinuous tracking and reaction) task: A flexible ap-
proach for assessing driver cognitive workload with
high sensitivity. In Andrew L. Kun, Linda Ng Boyle,
Bryan Reimer, and Andreas Riener, editors, Adj.
Proc. of the 4th International Conference on Au-
tomotive User Interfaces and Interactive Vehicular
Applications, Portsmouth. ACM.
National Highway Traffic Safety Administra-
tion (NHTSA). 2013. Distracted driving 2011.
Technical report.
Norbert Reithinger, Jan Alexandersson, Tilman
Becker, Anselm Blocher, Ralf Engel, Markus
L?ockelt, Jochen M?uller, Norbert Pfleger, Peter
Poller, Michael Streit, and Valentin Tschernomas.
2003. Smartkom: Adaptive and flexible multimodal
access to multiple applications. In Multimodal
interfaces, New York.
Gabriel Skantze. 2007. Error Handling in Spoken Di-
alogue Systems. Ph.D. thesis, KTH Computer Sci-
ence and Communication.
Jessica Villing, Cecilia Holtelius, Staffan Larsson, An-
ders Lindstrm, Alexander Seward, and Nina berg.
2008. Interruption, resumption and domain switch-
ing in in-vehicle dialogue. In Bengt Nordstrm and
Aarne Ranta, editors, Advances in Natural Lan-
guage Processing, volume 5221 of Lecture Notes in
Computer Science, pages 488?499. Springer Berlin
Heidelberg.
Fuliang Weng, Baoshi Yan, Zhe Feng, Florin Ratiu,
Madhuri Raya, Brian Lathrop, Annie Lien, Se-
bastian Varges, Rohit Mishra, Feng Lin, Matthew
Purver, Harry Bratt, Yao Meng, Stanley Peters, To-
bias Scheideck, Badri Raghunathan, and Zhaoxia
Zhang. 2007. Chat to your destination. In Proc. of
8th SIGdial Workshop on Discourse and Dialogue.
Christopher D Wickens. 2008. Multiple resources and
mental workload. In Human factors, volume 50,
pages 449?55. USA.
Kristie Young and Michael Regan. 2007. Driver dis-
traction: A review of the literature. Distracted Driv-
ing, pages 379?405.
9
Proceedings of the SIGDIAL 2014 Conference, pages 12?21,
Philadelphia, U.S.A., 18-20 June 2014.
c?2014 Association for Computational Linguistics
Out-of-Domain Spoken Dialogs in the Car: A WoZ Study
Sven Reichel, Jasmin Sohn,
Ute Ehrlich, Andr
?
e Berton
Speech Dialogue Systems
Daimler AG, Ulm, Germany
sven.reichel@daimler.com
Michael Weber
Institute of Media Informatics
Ulm University
Germany
michael.weber@uni-ulm.de
Abstract
Mobile Internet access via smartphones
puts demands on in-car infotainment sys-
tems, as more and more drivers like to ac-
cess the Internet while driving. Spoken
dialog systems (SDS) distract drivers less
than visual/haptic-based dialog systems.
However, in conversational SDSs drivers
might speak utterances which are not in
the domain of the SDS and thus cannot
be understood. In a Wizard of Oz study,
we evaluate the effects of out-of-domain
utterances on cognitive load, driving per-
formance, and usability. The results show
that an SDS which reacts as expected by
the driver, is a good approach to control in-
car infotainment systems, whereas unex-
pected SDS reactions might cause severe
accidents. We evaluate how a dialog initia-
tive switch, which guides the user and en-
ables him to reach his task goal, performs.
1 Introduction
The acceptance of smartphones is a success story.
These devices allow people to access the Internet
nearly anywhere at anytime. While driving, using
a smartphone is prohibited in many countries as it
distracts the driver. Regardless of this prohibition,
people use their smartphone and cause severe in-
juries (National Highway Traffic Safety Adminis-
tration (NHTSA), 2013). In order to reduce driver
distraction, it is necessary to integrate the smart-
phones functionality safely into in-car infotain-
ment systems. Since hands and eyes are involved
in driving, a natural and intuitive speech-based in-
terface increases road safety (Maciej and Vollrath,
2009). There are already infotainment systems
with Internet applications like e.g. weather, music
streaming, gas prices, news, and restaurant search.
However, conversational spoken dialog sys-
tems (SDS) to control all these applications and
the car?s functionality, are still missing. Cur-
rent SDSs operate mostly in specific domains and
they understand user utterances which are related
to these domains. While using natural language,
users are not restricted to specific domains. Thus
one crucial problem for them is to know which ut-
terances the system is able to understand. Peo-
ple use different approaches to solve this prob-
lem, for example by reading the manual, using on-
screen help, or relying on their mental model of
the SDS. In multi-domain SDSs, utterances can be
quite complex and remembering all of them or dis-
playing them on screen would not be possible. As
a result, as long as conversational SDSs are not
able to operate in much wider domains, sooner
or later the user will speak an utterance which is
in his mental model of the SDS, but cannot be
processed. Such utterances can be divided into
out-of-domain and out-of-application-scope (Bo-
hus and Rudnicky, 2005). We induce errors in
domain switches and not within one domain, thus
only out-of-domain utterances are considered.
In this paper, we present results from a Wizard
of Oz (WoZ) study on multi-domain interaction
with an in-car SDS to evaluate the effects of out-
of-domain utterances on driver performance. We
considered four different system reactions: suc-
cessful domain switch, misunderstanding, non-
understanding, and a dialog initiative switch. By
analyzing them concerning driver distraction and
usability, we are able to evaluate whether a dia-
log initiative switch is an appropriate response to
an out-of-domain utterance or not. The results of-
fer valuable clues for the development of multi-
domain in-car SDSs.
The remainder is structured as follows: Section
2 provides an overview of studies in this context.
Section 3 describes the domain of the study which
is shown in Section 4. Data analysis methods are
defined in Section 5. We present and discuss the
results in Section 6 and conclude in Section 7.
12
2 Related Work
Driver distractions, due to secondary tasks, are
evaluated in many studies (a good overview pro-
vides Ei-Wen Lo and Green (2013)). The driver?s
performance is generally better when using speech
interfaces than manual or visual interfaces, how-
ever, interacting with an SDS is often worse than
just driving (Bar?on and Green, 2006). Most stud-
ies consider specific domains and do not evalu-
ate how to handle domain switches. Kun et al.
(2013) evaluated multi-threaded dialogs between
humans while driving. By interrupting a dialog,
they observed an increase of cognitive load, which
affected the driving performance negatively. The
participants were prepared that an interruption will
be initiated at some time. This means they might
be surprised, however, it won?t be as unexpected as
system reactions in response to out-of-domain ut-
terances. In this work, we evaluate a dialog initia-
tive switch, as a possible reaction to out-of-domain
utterances.
In a driving simulator study, Kun et al. (2007)
showed that low SDS recognition accuracy affects
the steering wheel angle variance negatively. This
is first evidence that in-car SDSs need to han-
dle speech recognition or language understand-
ing errors intelligently. In preliminary work to
this study, we analyzed a dataset containing dia-
log errors in relation to driving performance, mea-
sured by the lane change task (Mattes, 2003). This
showed slight evidence that dialog errors, such as
responses to out-of-domain utterances, have an in-
fluence on driving performance. However, the lane
change task is not the right driving task for such
a fine granular analysis, as drivers are only occu-
pied during a lane change and thus not constantly
at the same level. Therefore, we analyze driving
performance with the Continuous Tracking and
Reaction (ConTRe) task (Mahr et al., 2012).
3 User Tasks
In a user experiment it is crucial to set real tasks
for users, since artificial tasks will be hard to re-
member and can reduce their attention. We ana-
lyzed current in-car infotainment systems with In-
ternet access and derived eight multi-domain tasks
from their functionality (see Table 1). Since only
few natural use cases involve more than three do-
mains, every user task is a story of three subtasks.
In task number 5 for example, a user has to start
a subtask, which navigates him to Berlin. Then
he would like to search an Italian restaurant at the
destination. Finally, he adds the selected restau-
rant to his address book.
No Domain 1 Domain 2 Domain 3
1 POI Search Restaurant Call
2 Knowledge Ski Weather Navigation
3 Weather Hotel Search Address book
4 Play Artist News Search Forward by eMail
5 Navigation Restaurant Save Address
6 News Search Play Artist Share on Facebook
7 News Search Knowledge Convert Currency
8 Navigation Gas Prices Status Gas Tank
Table 1: Multi-domain user tasks.
At the beginning of a task and during a sub-
task, the SDS always reacts as it is expected by
the users, which means it answers their requests.
This increases the stress when the system suddenly
starts to react unexpectedly. After presenting the
final answer of a subtask, the user has to initiate
a domain switch. In response to domain switch-
ing utterances four different system reactions were
used (see Section 4.2.2).
4 User Experiment
Developing an SDS includes specifying a gram-
mar or training statistical language models for
speech recognition. These steps precede any real
user test. In system-initiated dialogs, with a few
possible utterances, specifying a grammar is fea-
sible. However, in strictly user-initiative dialogs
covering multiple domains, this is rather compli-
cated. A WoZ study does not require to develop
speech recognition and language understanding as
this is performed by a human (Fraser and Gilbert,
1991). In addition, the system reaction is con-
trolled and not influenced by recognition errors.
Our study requires such a controlled environment,
as an unexpected system reaction, due to a recog-
nition error, would influence the results negatively.
Driver distraction and usability ratings vary
among people and depend on age, personality, ex-
perience, context, and many more. Therefore, it
is essential to conduct a user study with people
who might use the SDS later on. A study by
the NHTSA (National Highway Traffic Safety Ad-
ministration (NHTSA), 2013) showed that 73% of
the drivers involved in fatal crashes due to cell
phone use in 2011, were less than 40 years old. For
this reason, our study considers drivers between
18 and 40 years who are technically affine and are
likely to buy a car equipped with an infotainment
system with Internet access.
13
4.1 Set-Up of the Experiment
When designing a user interaction experiment, it is
important that it takes place in a real environment.
As driving on a real road is dangerous, we used
a fixed-base driving simulator in a laboratory. A
screen in front of the car covers the driver?s field
of view (see Figure 1). Steering and pedal signals
are picked from the car?s CAN bus.
It is important that the user assumes he is in-
teracting with a computer as ?human-human in-
teractions are not the same as human-computer in-
teractions? (Fraser and Gilbert, 1991). The wiz-
ard, a person in charge of the experiment, was lo-
cated behind the car and mouse clicks or any other
interaction of the wizard was not audible in the
car. To ensure a consistent behavior of the wiz-
ard, we used SUEDE (Klemmer et al., 2000) to
define the dialog, which also provides an interface
for the wizard. SUEDE defines a dialog in a state
machine, in which the system prompts are states
and user inputs are edges between them. The con-
tent of system prompts was synthesized with NU-
ANCE Vocalizer Expressive
1
version 1.2.1 (Voice:
anna.full). During the experiment, the wizard
clicks the corresponding edge after each user in-
put and SUEDE plays the next prompt.
Figure 1: Set-up of the experiment
4.2 Design of the Experiment
Driving a car requires the driver to focus on the
road and react appropriately to sudden events.
However, if drivers are occupied with a secondary
task, such as controlling an infotainment system,
their attention to the road might suffer. This is due
to the fact that the human?s performance is reduced
when human resources overlap (Wickens, 2008).
In this experiment, a dual task scenario is used by
driving in a simulator and interacting with an SDS
at the same time. There is no visual display in
1
http://www.nuance.com/for-business/mobile-
solutions/vocalizer-expressive/index.htm
the car, as this would require additional human re-
sources and it would increase the driver distraction
(Young and Regan, 2007).
4.2.1 Primary Task: Driving Simulator
One major requirement for the driving simulator is
to ensure a controlled and comparable driver dis-
traction measure over all interaction variants and
participants. The open-source driving simulator
OpenDS provides a driving environment and ex-
tensive logging facilities (Math et al., 2012). As
explained in Section 2, it is essential to keep the
driver occupied at a constant level all the time.
Therefore, we used the ConTRe task (Mahr et al.,
2012), which consists of a continuous steering task
and a reaction task.
Figure 2 shows the ConTRe task with steering
cylinders and a traffic light. The yellow steering
cylinder moves unpredictably right and left at a
constant distance from the driver. The driver has
to steer the blue cylinder to superpose it with the
middle section of the yellow one. This is similar
to driving on a curved road. Sometimes a driver
needs to react to sudden events to prevent an acci-
dent. A traffic light shows randomly red and green
and requires the driver to push the throttle or brake
pedal. As the car drives constantly at 50km/h, the
pedals are only pushed in response to the traffic
light. The movement of the yellow cylinder and
the appearance of the traffic light can be controlled
by manipulating OpenDS? control variables. We
used the ?hard driving? condition as described by
Mahr et al. (2012).
Figure 2: Continuous tracking and reaction task
4.2.2 Secondary Task: Responses to Domain
Switching Requests
A task in our experiment consists of three subtasks
and each subtask requires two to four semantic
concepts. For a user it is possible to insert mul-
tiple concepts at once:
U: ?Search an Italian restaurant at my destination?
14
or as single utterances in a dialog:
U: ?Search an Italian restaurant?
S: ?Where do you search an Italian restaurant??
U: ?At my destination?
Prompts were created for all possible combina-
tions. SUEDE provides a GUI for the wizard to
select which semantic concepts a user input con-
tains. Depending on the selection, either another
concept is requested or the answer is provided.
Within one subtask, the system always reacts as
expected by the user. An answer for the presented
example might look like:
S: ?There is one Italian restaurant: Pizzeria San Marco.?
After this, the user has to initiate a domain
switch to save the pizzeria?s address into his
personal address book. Such user-initiated do-
main switches challenge current SDSs as lan-
guage models increase and thus speech recogni-
tion as well as language understanding is error
prone (Carstensen et al., 2010). Furthermore, the
user could request a functionality which is not sup-
ported by the system. In case of such a request,
SDSs react differently and could apply error re-
covery strategies if the error is recognized. To an-
alyze the impact of error recovery strategies in the
car, we use four different kinds of responses to do-
main switching requests.
Figure 3 shows the study?s conditions. Detailed
dialogs that corresponds to them can be found
in the Appendix. First of all, we consider the
Expected Reaction (ER) condition, in which the
SDS reacts as expected by the user and switches
the domain. As the speech is recognized by a wiz-
ard, this is an optimal system without any errors.
Miscommunication can be distinguished be-
tween misunderstanding and non-understanding
(Skantze, 2007). In the MisUnderstanding (MU)
condition, the SDS does not recognize the do-
main switch request and it responses in context
of the current domain. On the contrary, in the
Non-Understanding (NU) condition, it recognizes
an out-of-domain utterance and refuses the ac-
tion by apologizing and encouraging the user to
rephrase his utterance (a combination of Bohus
and Rudnicky (2005)?s Notify and AskRephrase
error handling strategies). The only way to pro-
ceed with a MU or NU task in our experiment is to
use an explicit domain switching command, such
as ?start radio application?. As we have shown
in Reichel et al. (2014), participants do not use
such commands naturally in a speech-only info-
tainment system and only use them after trying
numerous unsuccessful utterances. Another ap-
proach is a Dialog Initiative Switch (DIS) to guide
the user after recognizing an out-of-domain utter-
ance (Notify and YouCanSay strategy (Bohus and
Rudnicky, 2005)). Therefore, the SDS proposes a
choice of four possible domains to interact with.
Users have to select the first option which was fol-
lowed by four possible actions within this domain.
By selecting the desired action, the SDS reads out
four examples of possible utterances. After that,
the dialog initiative is given back to the user.
Action   
(e.g. ?add restaurant?) 
Execute Refuse 
Expected 
Reaction (ER) 
Misunder-
standing (MU) 
Non-Under-
standing (NU) 
Dialog Initiative 
Switch (DIS) 
Miscommunication 
Figure 3: Domain switching response conditions
4.3 Procedure of the experiment
The experiment starts with an initial questionnaire
to create a profile of the participant, concerning
age, experience with smartphones, infotainment
systems and SDSs. Then participants are intro-
duced to the driving task and they have time to
practice till being experienced. After completing
a baseline drive, they start to use the SDS. For
each spoken dialog task users get a story describ-
ing in prose what they like to achieve. To mini-
mize priming effects, they have to remember their
task and are not allowed to keep the description
during the interaction. There is no explanation
or example of the SDS, apart from a start com-
mand for activation. After the start command, the
system plays a beep and the user can say what-
ever he likes to achieve his task. The exploration
phase consists of four tasks, in which the system
reacts as it is expected by the user. This enables
the user to get used to the SDS while driving. In
the second part of the experiment, one task for
each condition was completed (ER, MU, NU, and
DIS). The conditions were assigned randomly to
a task and each one was rated by a Subjective
Assessment of Speech System Interfaces (SASSI)
(Hone and Graham, 2000) and Driver Activity
Load Index (DALI) (Pauzi?e et al., 2007) question-
naire. At end of the experiment, each participant
completed a second baseline drive without using
the SDS to analyze whether the driving perfor-
mance changed to the first baseline drive or not.
15
After that, the four conditions were compared in a
questionnaire.
5 Evaluation Metrics and Hypotheses
The goal of this study is to evaluate four SDS
response conditions concerning driver distraction
and usability. Therefore, we used four kinds
of measurements (see Table 2): objective driv-
ing performance logged by OpenDS, subjective
driver distraction with DALI questionnaires, us-
ability scores measured by SASSI questionnaires,
and dialog performance. The steering deviation
value measures the driver?s performance to keep
the blue cylinder superposed to the yellow one in
the ConTRe task. Reaction times between the ap-
pearance of a traffic light and the pedal press are
logged as well as wrong and missed pedal presses.
The DALI questionnaire consists of 7 questions
which are assigned to 7 domains to evaluate the
driver?s cognitive load. We did not ask for visual
or haptic demand, as the system does not have vi-
sual output or haptic input. A 7-point Likert scale
was used: low cognitive load (-3) to high cognitive
load (+3). SASSI is widely used to measure the
usability of an SDS covering 6 dimensions with
34 questions. We used a 7-point Likert scale from
strong disagree (-3) to strong agree (+3). High
values mean good usability, except for annoyance
and cognitive demand ratings, which are opposed.
objective driving steering deviation
performance reaction time
(OpenDS) missed reaction
wrong reaction
cognitive load global attention
(DALI) auditory demand
interference
temporal demand
usability (SASSI) system response accuracy (SRA)
likeability (Like)
cognitive demand (Cog Dem)
annoyance (Ann)
habitability (Hab)
speed
dialog performance task success
user response delay
system turn duration
user turn duration
Table 2: Evaluation metrics
Obviously, we expect that drivers perform best
during the baseline drives without controlling the
SDS. As ER does not stress or frustrate drivers and
they do not need much cognitive power to think
what to say, there won?t be huge differences be-
tween ER and baseline drives. On the contrary,
if the system does not react as expected (MU and
NU), we expect a worse driving performance and
poor usability ratings. NU should be rated bet-
ter than MU, as the SDS explains the problem.
The interesting part is how a DIS will perform as
an error handling strategy to out-of-domain utter-
ances. We assume that it is rated better than MU
and NU and worse than ER. As the help dialogs in
DIS are long, DIS might tend towards MU and NU
in terms of driver distraction. However, it will be
rated better in terms of usability because the task
success is expected to be higher.
-3
-2
-1
0
1
2
3
SRA Like Cog Dem Ann Hab Speed
ER
MU_NU
DIS
Figure 4: Usability ratings, all of them are significant
(p<.001) except of: speed between DIS and MU NU
6 Results
In the following, evaluation results of the four do-
main switching responses are shown. We analyzed
data from 30 participants (16m/14f), with average
age of 26.65 (SD: 3.32). Their experience with
SDS is little (6-Likert Scale, avg: 3.06, SD: 1.48)
as well as the usage of SDSs (5-Likert Scale, avg:
2.04, SD: 1.16). We asked them how they usu-
ally approach a new system to learn its interaction
schema and scope of operation. All 30 of them
try a new application on their smartphone without
informing themselves how it is used. Concerning
infotainment systems, trying is also the most used
learning approach, even while driving (26 people).
This means, people do not read a manual, but the
system has to be naturally usable. In terms of driv-
ing experience, all participants have a driver li-
cense for average 8.6 (SD: 3.5) years and most of
them use their car daily. Considering the objective
driving performances of the two baseline drives,
there are no significant differences, which means
the participants performed at a constant level over
the entire experiment. Figure 4, 5 and 6 show a
detailed overview of the evaluation results, which
will be explained in this Section.
16
0,177  0,171  
0,188  0,178  0,16
0,18
0,2
0,22
0,24
ER Baseline MU_NU DIS
Stee
ring
 Dev
iatio
n * *   
1,038  
0,840  
1,060  1,042  
0,8
0,9
1
1,1
1,2
1,3
ER Baseline MU_NU DIS
Reacti
on Time
 [sec]
 * * *   * * *   
0,43  0,20  1,47  1,03  0
1
2
3
4
5
6
ER Baseline MU_NU DIS
Missed Peda
ls
 * *   
*   
*   
0,57  0,35  
2,34  1,80  
0
1
2
3
4
5
6
ER Baseline MU_NU DIS
Wrong
 Pedals
 * * *   
* *   
*   
Figure 5: Objective driving performance (OpenDS), significance levels: p<.05(*), p<.01(**), p<.001(***)
-3
-2
-1
0
1
2
3
Attention Auditory Stress Interference Temporal
Dr
ive
r Act
ivi
ty Lo
ad In
dex
 
ER
Baseline
MU_NU
DIS
***  
 
***  
 
***  
 
***  
 
***  
 
***  
 
***  
 
***  
 
***  
 
***  
 
***  
 
***  
 
*  
 
*  
 
***  
 
***  
 
***  
 
Figure 6: Cognitive load: driver activity load index (DALI), significance levels: p<.05(*), p<.01(**), p<.001(***)
6.1 SDS which Reacts as Expected (ER)
First of all, results of an optimal SDS (ER), which
reacts as expected and does not make any mis-
takes, are presented. The objective driver perfor-
mance (see Figure 5) is slightly worse than the
baseline drives in terms of steering and pressing
the right pedals, but not significantly. However,
reaction times are worse than without interacting
with an SDS. This corresponds to the results from
Patten et al. (2004), who observed an increase in
reaction times when drivers talk to someone on the
phone. The cognitive load (see Figure 6) caused
by an optimal SDS is negative in all dimensions,
which means an optimal SDS does not put high
demands on the driver. In general, ER was rated
very good in terms of usability (see Figure 4) and
would most likely be accepted by young drivers.
6.2 Mis- and Non-Understanding (MU, NU)
The results of MU and NU do not show signifi-
cant differences in any dimension. Therefore, the
mean value of MU and NU is used. As shown in
Figure 6, the driver?s cognitive load is high in all
dimensions for MU NU. In terms of stress and at-
tention, it is significantly higher than during base-
line drives (other DALI dimensions are not as-
sessed for baseline drives). Due to the increased
cognitive load, the driver?s performance (see Fig-
ure 5) concerning steering, reaction times, and
pedal presses decreases significantly compared to
baseline drives. Especially the number of times
17
drivers do not react to external events at all (missed
pedal), or they do not react appropriately (wrong
pedal), increases strongly. The usability ratings
provide evidence how users rate an SDS which is
not usable.
As expected, ER performs better than MU NU.
An unexpected system reaction causes higher cog-
nitive load in all dimensions. However, in contrast
to what one might expect, the driver?s steering per-
formance and reaction times are not better than for
ER (p
steering
=.083 and p
reaction
=.215).
6.3 Dialog Initiative Switch as an Out-Of-
Domain Handling Strategy (DIS)
Previous Sections have shown that it is impor-
tant to minimize misunderstandings and non-
understandings in a safe and usable in-car infotain-
ment system. Comparing DIS with an optimal and
a worst-case SDS shows whether it is a reason-
able approach to handle out-of-domain utterances
or not. We use a single factor variance analysis
(ANOVA) with repeated measurements to identify
the best (Helmert contrast) and worst (difference
contrast) condition out of ER, DIS, and MU NU.
If DIS lays between ER and MU NU, we analyze
whether DIS tends towards ER or MU NU. There-
fore, we compare the differences of ER-DIS with
MU NU-DIS and use a one sample t-test.
6.3.1 Driving Performance
The ANOVA did not show any significant differ-
ences in drivers? steering performances or reaction
times (see Figure 5). Using a Helmert contrast to
determine the best response, the ANOVA identi-
fied ER as the condition with significantly fewest
missed and wrong reactions. There is no differ-
ence between DIS and MU NU, thus DIS tends in
terms of objective driver distraction more towards
MU NU than to ER.
6.3.2 Cognitive Load
Analyzing the cognitive load of ER, DIS, and
MU NU (see Figure 6), the ANOVA identifies ER
as the significant best condition (p<.002). The
significant worst one in terms of attention, stress,
and interference is MU NU, which means DIS
lays in between for these dimensions. However,
no evidence is found for stress or interference
whether DIS tends towards ER or MU NU. In
global attention, DIS tends slightly (p<.031) to-
wards MU NU. Furthermore, the long prompts in
DIS put high auditive demands on the driver.
6.3.3 Usability
As task success of MU NU dialogs is poor (see
Section 6.4), it is obvious that ER is the best
(p<.001) and MU NU is the worst condition
(p<.001) in terms of usability (see Figure 4). All
DIS ratings, except of speed, are between ER and
MU NU (p<.001). Speed is basically identical
to the MU NU rating, which is due to the long
prompts. There is a slight tendency of DIS towards
ER in system response accuracy (p<.051) and in
habitability (p<.077), however, this is not signif-
icant. In annoyance DIS tends towards MU NU
(p<.002), which might be due to the three step
help dialog. For cognitive demand and likability,
DIS lays exactly between ER and MU NU.
6.4 Dialog Performance
The task success is pretty low in MU (29.03%) and
NU (19.35%) as the task was aborted by the wiz-
ard, if drivers did not use explicit domain switch-
ing commands after multiple attempts. On the
contrary, the task success for ER (96.8%) and DIS
(93.6%) is good, however, 3 tasks were aborted by
users. Figure 7 shows the average user response
delay, system turn duration, and user turn dura-
tion. The rectangular bars drawn in line patterns
show successful interactions during a subtask and
the ones drawn in checked pattern dialogs between
two subtasks.
When the system responds as expected, users
need between 2 and 3 seconds to respond. If the
system does not react as expected (between two
subtasks), drivers need significantly more time to
respond, as they need to think what to say. In DIS,
they only need to repeat the proposed term, thus
they respond faster. In MU NU, the system turns
in dialogs between subtasks are shorter, whereby
the user turns are longer (user turn duration does
not include the user?s response time). So either
drivers speak slower or provide longer sentences,
if the SDS does not react as expected. Due to the
four proposed utterances in DIS, system turn du-
rations are longer in dialogs between subtasks.
6.5 Summary and Discussion
In general, if an SDS reacts as expected by the
user, it will be a good approach to control the in-
car infotainment system. Except for the driver?s
reaction time, an optimal SDS does not influence
the driving performance. However, a delayed re-
action of 200ms might be better than glancing at a
18
0
2
4
6
8
ER MU_NU DISUser 
Response D
elay [sec]
 ***   ***   
02
46
8
ER MU_NU DISSyste
m Turn Dura
tion [se
c]
 **   ***   
0
2
4
6
ER MU_NU DISUse
r Turn Dur
ation 
[sec]
 *   ***   
Figure 7: Dialog performance (light color: interaction during subtasks, dark color: dialog between two subtasks), significance
levels: p<.05(*), p<.01(**), p<.001(***)
display. For example, the Driver Focus-Telematics
Working Group (2006) states in their guidelines to
visual distraction: ?single glance durations gener-
ally should not exceed 2 seconds?.
As long as conversational SDSs are not able to
operate in much wider domains, sooner or later the
user will provide an utterance the system is not
able to respond to. Comparing the MU and NU
conditions shows that an out-of-domain recogni-
tion with a simple rephrase error recovery strategy
does not work. This is understandable, as both
conditions increase the cognitive load, which in-
fluences the driving performance negatively. Es-
pecially the reaction to external events, such as
traffic lights, suffers. In our experiment, the traf-
fic light was in the middle of the screen. Accord-
ing to Victor et al. (2005), drivers concentrate their
gaze on the road center at the expense of periph-
eral glances during auditory or complex driving
tasks. Thus we would expect even worse results
if the traffic light occurs in the driver?s peripheral
vision. This means an intelligent handling strat-
egy for out-of-domain utterances needs to be es-
tablished, which informs drivers of the system?s
capabilities.
We evaluated a dialog initiative switch as a re-
sponse to out-of-domain utterances. Mostly, this
strategy performed somewhere between the opti-
mal and worst-case SDS. Due to long narrative
system prompts, the auditive demand is rated high
by drivers and thus the driving performance tends
towards the worst-case SDS. The dialog initiative
switch was rated as usable, but different variants
need to be developed and evaluated in the future.
After the experiment, the participants rated the
four conditions with two questions from ITU-T
P.851 (ITU, 2003) on a 7-point Likert scale from
strong disagree (-3) to strong agree (+3):
Q1: ?Would you have expected more help from the sys-
tem??
Q2: ?You feel adequately informed about the system?s pos-
sibilities??
ER (SD) MU (SD) NU (SD) DIS (SD)
Q1 -1.73(1.78) 1.47(1.81) 2.1(1.32) -1.1(1.58)
Q2 0.43(2.13) -1.53(1.36) -1.7(1.49) 0.73(1.66)
Table 3: Adequate system help
Table 3 shows the results, whereby DIS tends
towards ER in Q1 (p<.004) and is even better than
ER in Q2. This means the drivers felt informed
adequately of the SDS, however, further research
is necessary to evaluate how to present this infor-
mation. Shorter helping prompts might be better.
Furthermore, multimodal aspects needs to be con-
sidered. For example, head-up displays are able to
present information, such as possible utterances,
right in the driver?s view. This might reduce the
auditive demand.
7 Conclusions
In this paper, we showed results from a WoZ
study on user-initiated multi-domain SDSs in the
car. If an in-car SDS cannot fulfill a user?s re-
quest due to, for example, missing functionality,
the driver?s cognitive load and distraction will in-
crease. Therefore, out-of-domain utterances need
to be identified and handled adequately by in-car
SDSs. Switching the dialog initiative is a good ap-
proach to guide users to the task goal and reduce
their cognitive load. However, if drivers need to
process any information, some mental activity will
be required. Therefore, the design and implemen-
tation of a dialog initiative switch strategy need
further efforts to minimize the driver?s distraction
and to make it enjoyable for the user. Other modal-
ities than speech-only SDSs, such as head-up dis-
plays, need to be evaluated in future studies.
Acknowledgments
The work presented here was funded by GetH-
omeSafe (EU 7th Framework STREP 288667).
19
References
Adriana Bar?on and Paul Green. 2006. Safety and us-
ability of speech interfaces for in-vehicle tasks while
driving: A brief literature review. Technical report,
University of Michigan Transportation Research In-
stitute.
Dan Bohus and Alexander I. Rudnicky. 2005.
Sorry, i didnt catch that! an investigation of non-
understanding errors and recovery strategies. In
Proceedings of SIGdial, Lisbon, Portugal.
Kai-Uwe Carstensen, Christian Ebert, Cornelia Ebert,
Susanne Jekat, Ralf Klabunde, and Hagen Langer.
2010. Computerlinguistik und Sprachtechnologie.
Spektrum, Akad. Verl.
Driver Focus-Telematics Working Group. 2006. State-
ment of principles, criteria and verification pro-
cedures on driver interactions with advanced in-
vehicle information and communication systems.
Victor Ei-Wen Lo and Paul A. Green. 2013. Devel-
opment and evaluation of automotive speech inter-
faces: Useful information from the human factors
and the related literature. Int. Journal of Vehicular
Technology, 2013:13.
Norman M. Fraser and G.Nigel Gilbert. 1991. Sim-
ulating speech systems. Computer Speech & Lan-
guage, 5(1):81 ? 99.
Kate S Hone and Robert Graham. 2000. Towards a
tool for the subjective assessment of speech system
interfaces (sassi). Natural Language Engineering,
6(3&4):287?303.
International Telecommunication Union (ITU). 2003.
Subjective quality evaluation of telephone services
based on spoken dialogue systems (itu-t rec. p.851).
Scott R. Klemmer, Anoop K. Sinha, Jack Chen,
James A. Landay, Nadeem Aboobaker, and Annie
Wang. 2000. Suede: a wizard of oz prototyping
tool for speech user interfaces. In Proc. of the 13th
annual ACM symposium on User interface software
and technology, New York. ACM.
Andrew L. Kun, Tim Paek, and Zeljko Medenica.
2007. The effect of speech interface accuracy on
driving performance. In INTERSPEECH, pages
1326?1329, Antwerp, Belgium.
Andrew L. Kun, Alexander Shyrokov, and PeterA.
Heeman. 2013. Interactions between humanhuman
multi-threaded dialogues and driving. Personal and
Ubiquitous Computing, 17(5):825?834.
Jannette Maciej and Mark Vollrath. 2009. Compari-
son of manual vs. speech-based interaction with in-
vehicle information systems. Accident Analysis and
Prevention, 41(5):924 ? 930.
Angela Mahr, Michael Feld, Mohammad Mehdi
Moniri, and Rafael Math. 2012. The contre (con-
tinuous tracking and reaction) task: A flexible ap-
proach for assessing driver cognitive workload with
high sensitivity. In Adjunct Proceedings of the 4th
AutomotiveUI, Portsmouth. ACM.
Rafael Math, Angela Mahr, Mohammad M Moniri, and
Christian M?uller. 2012. Opends: A new open-
source driving simulator for research. Adjunct Pro-
ceedings of the 4th AutomotiveUI.
Stefan Mattes. 2003. The lane-change-task as a tool
for driver distraction. In Proceedings of IGfA, Dear-
born.
National Highway Traffic Safety Administra-
tion (NHTSA). 2013. Distracted driving 2011.
Technical report.
Christopher J.D Patten, Albert Kircher, Joakim stlund,
and Lena Nilsson. 2004. Using mobile telephones:
cognitive workload and attention resource alloca-
tion. Accident Analysis & Prevention, 36(3):341 ?
350.
Annie Pauzi?e, J Manzan, and Nicolas Dapzol. 2007.
Driver?s behavior and workload assessment for new
in-vehicle technologies design. In Proceedings of
the 4th International Driving Symposium on Human
Factors in Driver Assessment, Training, and Vehicle
Design., Stevenson, Washington.
Sven Reichel, Ute Ehrlich, Andr?e Berton, and Michael
Weber. 2014. In-car multi-domain spoken dialogs:
A wizard of oz study. In EACL Workshop Dialog in
Motion, Gothenburg, Sweden.
Gabriel Skantze. 2007. Error Handling in Spoken Di-
alogue Systems. Ph.D. thesis, KTH Computer Sci-
ence and Communication.
Trent W. Victor, Joanne L. Harbluk, and Johan A. En-
gstrm. 2005. Sensitivity of eye-movement mea-
sures to in-vehicle task difficulty. Transportation
Research Part F: Traffic Psychology and Behaviour,
8(2):167 ? 190. The relationship between distrac-
tion and driving performance: towards a test regime
for in-vehicle information systems In-vehicle infor-
mation systems.
Christopher D Wickens. 2008. Multiple resources and
mental workload. In Human factors, volume 50,
pages 449?55. USA.
Kristie Young and Michael Regan. 2007. Driver dis-
traction: A review of the literature. Distracted Driv-
ing.
20
Appendix
MU: 
U: Navigation to Berlin, Brandenburger Tor 
S: Brandenburger Tor in Berlin was set as your 
destination. 
U: Italian restaurant at the destination 
S: Italian restaurant could not be set as a 
destination 
U: Navigate to a restaurant in Berlin 
S: The address restaurant in Berlin was not 
found 
U: I would like  to search a restaurant 
S: Sorry? 
U: Start restaurant application 
S: Restaurant search, what do you want? 
U: An Italian restaurant in Berlin 
S: There is one Italian restaurant in Berlin: 
Pizzeria San Marco 
U: Add the address to my address book 
S: The address of Pizzeria San Marco is 
Mainstreet 1, Berlin 
U: Save that to my address book 
S: Sorry? 
U: Save Pizzeria  San Marco 
S: Pizzeria San Marco is famous for its delicious 
Italian dishes 
U: Address book 
S: Address book, what do you want? 
U: Save the address of San Marco 
S: Alright, the address was added 
NU: 
U: Drive me to the Brandenburger Tor in Berlin 
S: Brandenburger Tor in Berlin was set as your 
destination. 
U: Is there an Italian restaurant near 
Brandenburger Tor? 
S: Action unknown, please say something else 
U: Give me an Italian restaurant along the 
route 
S: Action unknown, please say something else 
U: Italian restaurant 
S: Action unknown, please say something else 
U: Restaurant in Berlin 
S: Action unknown, please say something else 
U: I?d like to search a restaurant 
S: Action unknown, please say something else 
<aborted by the wizard> 
ER: 
U: Navigation 
S: Navigation, what do you want? 
U: City Berlin 
S: To what address or place of interest do you 
want? 
U: Brandenburger Tor 
S: Brandenburger Tor in Berlin was set as your 
destination 
U: Italian restaurant near Brandenburger Tor? 
S: There is one Italian restaurant in Berlin: 
Pizzeria San Marco 
U: Save the address 
S: Alright, the address was added 
DIS: 
U: I would like to go to the Brandenburger Tor 
in Berlin 
S: Brandenburger Tor in Berlin was set as your 
destination. 
U: Italian restaurant nearby? 
S: Action unknown, you can say: restaurant, 
navigation, hotel, or radio 
U: Restaurant 
S: You can: search a restaurant, order a table, 
rate a restaurant, request opening times 
U: Search a restaurant 
S: Say for example: Search a restaurant at the 
destination, I search a Chinese restaurant, ?Die 
Krone? in Stuttgart, or Mexican restaurant 
U: I search an Italian restaurant 
S: Where do you search an Italian restaurant 
U: Near Brandenburger Tor in Berlin 
S: There is one Italian restaurant in Berlin: 
Pizzeria San Marco 
U: Save the address 
S: Action unknown, you can say: address book, 
restaurant, navigation, or hotel 
U: address book 
S: You can: add a contact, remove a contact, 
access contact details, or delete address book 
U: Add a contact 
S: Say for example: I?d like to add a contact, 
add an address, add Paul to my address book, 
save the number 0165332 
U: Add San Marco to my address book 
S: Alright, the address was added 
Appendix 1: Detailed dialog examples of the four response conditions. Translated from German and based on real experiment
data. Red rectangles identify the domain switching dialogs between two subtasks.
21
