Proceedings of the 12th Conference of the European Chapter of the ACL, pages 389?397,
Athens, Greece, 30 March ? 3 April 2009. c?2009 Association for Computational Linguistics
An Empirical Study on Class-based Word Sense Disambiguation?
Rube?n Izquierdo & Armando Sua?rez
Deparment of Software and Computing Systems
University of Alicante. Spain
{ruben,armando}@dlsi.ua.es
German Rigau
IXA NLP Group.
EHU. Donostia, Spain
german.rigau@ehu.es
Abstract
As empirically demonstrated by the last
SensEval exercises, assigning the appro-
priate meaning to words in context has re-
sisted all attempts to be successfully ad-
dressed. One possible reason could be the
use of inappropriate set of meanings. In
fact, WordNet has been used as a de-facto
standard repository of meanings. How-
ever, to our knowledge, the meanings rep-
resented by WordNet have been only used
for WSD at a very fine-grained sense level
or at a very coarse-grained class level. We
suspect that selecting the appropriate level
of abstraction could be on between both
levels. We use a very simple method for
deriving a small set of appropriate mean-
ings using basic structural properties of
WordNet. We also empirically demon-
strate that this automatically derived set of
meanings groups senses into an adequate
level of abstraction in order to perform
class-based Word Sense Disambiguation,
allowing accuracy figures over 80%.
1 Introduction
Word Sense Disambiguation (WSD) is an inter-
mediate Natural Language Processing (NLP) task
which consists in assigning the correct semantic
interpretation to ambiguous words in context. One
of the most successful approaches in the last years
is the supervised learning from examples, in which
statistical or Machine Learning classification mod-
els are induced from semantically annotated cor-
pora (Ma`rquez et al, 2006). Generally, super-
vised systems have obtained better results than
the unsupervised ones, as shown by experimental
work and international evaluation exercises such
?This paper has been supported by the European Union
under the projects QALL-ME (FP6 IST-033860) and KY-
OTO (FP7 ICT-211423), and the Spanish Government under
the project Text-Mess (TIN2006-15265-C06-01) and KNOW
(TIN2006-15049-C03-01)
as Senseval1. These annotated corpora are usu-
ally manually tagged by lexicographers with word
senses taken from a particular lexical semantic re-
source ?most commonly WordNet2 (WN) (Fell-
baum, 1998).
WN has been widely criticized for being a sense
repository that often provides too fine?grained
sense distinctions for higher level applications
like Machine Translation or Question & Answer-
ing. In fact, WSD at this level of granularity
has resisted all attempts of inferring robust broad-
coverage models. It seems that many word?sense
distinctions are too subtle to be captured by auto-
matic systems with the current small volumes of
word?sense annotated examples. Possibly, build-
ing class-based classifiers would allow to avoid
the data sparseness problem of the word-based ap-
proach. Recently, using WN as a sense reposi-
tory, the organizers of the English all-words task
at SensEval-3 reported an inter-annotation agree-
ment of 72.5% (Snyder and Palmer, 2004). In-
terestingly, this result is difficult to outperform by
state-of-the-art sense-based WSD systems.
Thus, some research has been focused on deriv-
ing different word-sense groupings to overcome
the fine?grained distinctions of WN (Hearst and
Schu?tze, 1993), (Peters et al, 1998), (Mihalcea
and Moldovan, 2001), (Agirre and LopezDeLa-
Calle, 2003), (Navigli, 2006) and (Snow et al,
2007). That is, they provide methods for grouping
senses of the same word, thus producing coarser
word sense groupings for better disambiguation.
Wikipedia3 has been also recently used to over-
come some problems of automatic learning meth-
ods: excessively fine?grained definition of mean-
ings, lack of annotated data and strong domain de-
pendence of existing annotated corpora. In this
way, Wikipedia provides a new very large source
of annotated data, constantly expanded (Mihalcea,
2007).
1http://www.senseval.org
2http://wordnet.princeton.edu
3http://www.wikipedia.org
389
In contrast, some research have been focused on
using predefined sets of sense-groupings for learn-
ing class-based classifiers for WSD (Segond et al,
1997), (Ciaramita and Johnson, 2003), (Villarejo
et al, 2005), (Curran, 2005) and (Ciaramita and
Altun, 2006). That is, grouping senses of different
words into the same explicit and comprehensive
semantic class.
Most of the later approaches used the origi-
nal Lexicographical Files of WN (more recently
called SuperSenses) as very coarse?grained sense
distinctions. However, not so much attention has
been paid on learning class-based classifiers from
other available sense?groupings such as WordNet
Domains (Magnini and Cavaglia`, 2000), SUMO
labels (Niles and Pease, 2001), EuroWordNet
Base Concepts (Vossen et al, 1998), Top Con-
cept Ontology labels (Alvez et al, 2008) or Ba-
sic Level Concepts (Izquierdo et al, 2007). Obvi-
ously, these resources relate senses at some level
of abstraction using different semantic criteria and
properties that could be of interest for WSD. Pos-
sibly, their combination could improve the overall
results since they offer different semantic perspec-
tives of the data. Furthermore, to our knowledge,
to date no comparative evaluation has been per-
formed on SensEval data exploring different levels
of abstraction. In fact, (Villarejo et al, 2005) stud-
ied the performance of class?based WSD com-
paring only SuperSenses and SUMO by 10?fold
cross?validation on SemCor, but they did not pro-
vide results for SensEval2 nor SensEval3.
This paper empirically explores on the super-
vised WSD task the performance of different
levels of abstraction provided by WordNet Do-
mains (Magnini and Cavaglia`, 2000), SUMO la-
bels (Niles and Pease, 2001) and Basic Level Con-
cepts (Izquierdo et al, 2007). We refer to this ap-
proach as class?based WSD since the classifiers
are created at a class level instead of at a sense
level. Class-based WSD clusters senses of differ-
ent words into the same explicit and comprehen-
sive grouping. Only those cases belonging to the
same semantic class are grouped to train the clas-
sifier. For example, the coarser word grouping ob-
tained in (Snow et al, 2007) only has one remain-
ing sense for ?church?. Using a set of Base Level
Concepts (Izquierdo et al, 2007), the three senses
of ?church? are still represented by faith.n#3,
building.n#1 and religious ceremony.n#1.
The contribution of this work is threefold. We
empirically demonstrate that a) Basic Level Con-
cepts group senses into an adequate level of ab-
straction in order to perform supervised class?
based WSD, b) that these semantic classes can
be successfully used as semantic features to boost
the performance of these classifiers and c) that
the class-based approach to WSD reduces dramat-
ically the required amount of training examples to
obtain competitive classifiers.
After this introduction, section 2 presents the
sense-groupings used in this study. In section 3 the
approach followed to build the class?based system
is explained. Experiments and results are shown in
section 4. Finally some conclusions are drawn in
section 5.
2 Semantic Classes
WordNet (Fellbaum, 1998) synsets are organized
in forty five Lexicographer Files, more recetly
called SuperSenses, based on open syntactic cat-
egories (nouns, verbs, adjectives and adverbs) and
logical groupings, such as person, phenomenon,
feeling, location, etc. There are 26 basic cate-
gories for nouns, 15 for verbs, 3 for adjectives and
1 for adverbs.
WordNet Domains4 (Magnini and Cavaglia`,
2000) is a hierarchy of 165 Domain Labels which
have been used to label all WN synsets. Informa-
tion brought by Domain Labels is complementary
to what is already in WN. First of all a Domain La-
bels may include synsets of different syntactic cat-
egories: for instance MEDICINE groups together
senses from nouns, such as doctor and hospital,
and from Verbs such as to operate. Second, a Do-
main Label may also contain senses from differ-
ent WordNet subhierarchies. For example, SPORT
contains senses such as athlete, deriving from life
form, game equipment, from physical object, sport
from act, and playing field, from location.
SUMO5 (Niles and Pease, 2001) was created as
part of the IEEE Standard Upper Ontology Work-
ing Group. The goal of this Working Group is
to develop a standard upper ontology to promote
data interoperability, information search and re-
trieval, automated inference, and natural language
processing. SUMO consists of a set of concepts,
relations, and axioms that formalize an upper on-
tology. For these experiments, we used the com-
plete WN1.6 mapping with 1,019 SUMO labels.
4http://wndomains.itc.it/
5http://www.ontologyportal.org/
390
Basic Level Concepts6 (BLC) (Izquierdo et al,
2007) are small sets of meanings representing the
whole nominal and verbal part of WN. BLC can
be obtained by a very simple method that uses ba-
sic structural WN properties. In fact, the algorithm
only considers the relative number of relations of
each synset alng the hypernymy chain. The pro-
cess follows a bottom-up approach using the chain
of hypernymy relations. For each synset in WN,
the process selects as its BLC the first local maxi-
mum according to the relative number of relations.
The local maximum is the synset in the hypernymy
chain having more relations than its immediate
hyponym and immediate hypernym. For synsets
having multiple hypernyms, the path having the
local maximum with higher number of relations
is selected. Usually, this process finishes having
a number of preliminary BLC. Obviously, while
ascending through this chain, more synsets are
subsumed by each concept. The process finishes
checking if the number of concepts subsumed by
the preliminary list of BLC is higher than a cer-
tain threshold. For those BLC not representing
enough concepts according to the threshold, the
process selects the next local maximum following
the hypernymy hierarchy. Thus, depending on the
type of relations considered to be counted and the
threshold established, different sets of BLC can be
easily obtained for each WN version.
In this paper, we empirically explore the perfor-
mance of the different levels of abstraction pro-
vided by Basic Level Concepts (BLC) (Izquierdo
et al, 2007).
Table 1 presents the total number of BLC and
its average depth for WN1.6, varying the threshold
and the type of relations considered (all relations
or only hyponymy).
Thres. Rel. PoS #BLC Av. depth.
0
all Noun 3,094 7.09Verb 1,256 3.32
hypo Noun 2,490 7.09Verb 1,041 3.31
20
all Noun 558 5.81Verb 673 1.25
hypo Noun 558 5.80Verb 672 1.21
50
all Noun 253 5.21Verb 633 1.13
hypo Noun 248 5.21Verb 633 1.10
Table 1: BLC for WN1.6 using all or hyponym relations
6http://adimen.si.ehu.es/web/BLC
Classifier Examples # of examples
church.n#2 (sense approach) church.n#2 58
church.n#2 58
building.n#1 48
hotel.n#1 39
building, edifice (class approach) hospital.n#1 20
barn.n#1 17
....... ......
TOTAL= 371 examples
Table 2: Examples and number of them in Semcor, for
sense approach and for class approach
3 Class-based WSD
We followed a supervised machine learning ap-
proach to develop a set of class-based WSD tag-
gers. Our systems use an implementation of a Sup-
port Vector Machine algorithm to train the clas-
sifiers (one per class) on semantic annotated cor-
pora for acquiring positive and negative examples
of each class and on the definition of a set of fea-
tures for representing these examples. The system
decides and selects among the possible semantic
classes defined for a word. In the sense approach,
one classifier is generated for each word sense, and
the classifiers choose between the possible senses
for the word. The examples to train a single clas-
sifier for a concrete word are all the examples of
this word sense. In the semantic?class approach,
one classifier is generated for each semantic class.
So, when we want to label a word, our program
obtains the set of possible semantic classes for
this word, and then launch each of the semantic
classifiers related with these semantic categories.
The most likely category is selected for the word.
In this approach, contrary to the word sense ap-
proach, to train a classifier we can use all examples
of all words belonging to the class represented by
the classifier. In table 2 an example for a sense
of ?church? is shown. We think that this approach
has several advantages. First, semantic classes re-
duce the average polysemy degree of words (some
word senses are grouped together within the same
class). Moreover, the well known problem of ac-
quisition bottleneck in supervised machine learn-
ing algorithms is attenuated, because the number
of examples for each classifier is increased.
3.1 The learning algorithm: SVM
Support Vector Machines (SVM) have been
proven to be robust and very competitive in many
NLP tasks, and in WSD in particular (Ma`rquez et
al., 2006). For these experiments, we used SVM-
Light (Joachims, 1998). SVM are used to learn
an hyperplane that separates the positive from the
391
negative examples with the maximum margin. It
means that the hyperplane is located in an interme-
diate position between positive and negative ex-
amples, trying to keep the maximum distance to
the closest positive example, and to the closest
negative example. In some cases, it is not possi-
ble to get a hyperplane that divides the space lin-
early, or it is better to allow some errors to obtain a
more efficient hyperplane. This is known as ?soft-
margin SVM?, and requires the estimation of a pa-
rameter (C), that represent the trade-off allowed
between training errors and the margin. We have
set this value to 0.01, which has been proved as a
good value for SVM in WSD tasks.
When classifying an example, we obtain the
value of the output function for each SVM clas-
sifier corresponding to each semantic class for the
word example. Our system simply selects the class
with the greater value.
3.2 Corpora
Three semantic annotated corpora have been used
for training and testing. SemCor has been used
for training while the corpora from the English
all-words tasks of SensEval-2 and SensEval-3
has been used for testing. We also consid-
ered SemEval-2007 coarse?grained task corpus
for testing, but this dataset was discarded because
this corpus is also annotated with clusters of word
senses.
SemCor (Miller et al, 1993) is a subset of the
Brown Corpus plus the novel The Red Badge of
Courage, and it has been developed by the same
group that created WordNet. It contains 253 texts
and around 700,000 running words, and more than
200,000 are also lemmatized and sense-tagged ac-
cording to Princeton WordNet 1.6.
SensEval-27 English all-words corpus (here-
inafter SE2) (Palmer et al, 2001) consists on 5,000
words of text from three WSJ articles represent-
ing different domains from the Penn TreeBank II.
The sense inventory used for tagging is WordNet
1.7. Finally, SensEval-38 English all-words cor-
pus (hereinafter SE3) (Snyder and Palmer, 2004),
is made up of 5,000 words, extracted from two
WSJ articles and one excerpt from the Brown Cor-
pus. Sense repository of WordNet 1.7.1 was used
to tag 2,041 words with their proper senses.
7http://www.sle.sharp.co.uk/senseval2
8http://www.senseval.org/senseval3
3.3 Feature types
We have defined a set of features to represent the
examples according to previous works in WSD
and the nature of class-based WSD. Features
widely used in the literature as in (Yarowsky,
1994) have been selected. These features are
pieces of information that occur in the context of
the target word, and can be organized as:
Local features: bigrams and trigrams that
contain the target word, including part-of-speech
(PoS), lemmas or word-forms.
Topical features: word?forms or lemmas ap-
pearing in windows around the target word.
In particular, our systems use the following ba-
sic features:
Word?forms and lemmas in a window of 10
words around the target word
PoS: the concatenation of the preced-
ing/following three/five PoS
Bigrams and trigrams formed by lemmas and
word-forms and obtained in a window of 5 words.
We use of all tokens regardless their PoS to build
bi/trigrams. The target word is replaced by X
in these features to increase the generalization of
them for the semantic classifiers
Moreover, we also defined a set of Semantic
Features to explode different semantic resources
in order to enrich the set of basic features:
Most frequent semantic class calculated over
SemCor, the most frequent semantic class for the
target word.
Monosemous semantic classes semantic
classes of the monosemous words arround the
target word in a window of size 5. Several types
of semantic classes have been considered to create
these features. In particular, two different sets
of BLC (BLC20 and BLC509), SuperSenses,
WordNet Domains (WND) and SUMO.
In order to increase the generalization capabil-
ities of the classifiers we filter out irrelevant fea-
tures. We measure the relevance of a feature10. f
for a class c in terms of the frequency of f. For each
class c, and for each feature f of that class, we cal-
culate the frequency of the feature within the class
(the number of times that it occurs in examples
9We have selected these set since they represent different
levels of abstraction. Remember that 20 and 50 refer to the
threshold of minimum number of synsets that a possible BLC
must subsume to be considered as a proper BLC. These BLC
sets were built using all kind of relations.
10That is, the value of the feature, for example a feature
type can be word-form, and a feature of that type can be
?houses?
392
of the class), and also obtain the total frequency
of the feature, for all the classes. We divide both
values (classFreq / totalFreq) and if the result is
not greater than a certain threshold t, the feature
is removed from the feature list of the class c11.
In this way, we ensure that the features selected
for a class are more frequently related with that
class than with others. We set this threshold t to
0.25, obtained empirically with very preliminary
versions of the classifiers on SensEval3 test.
4 Experiments and Results
To analyze the influence of each feature type in the
class-based WSD, we designed a large set of ex-
periments. An experiment is defined by two sets of
semantic classes. First, the semantic class type for
selecting the examples used to build the classifiers
(determining the abstraction level of the system).
In this case, we tested: sense12, BLC20, BLC50,
WordNet Domains (WND), SUMO and Super-
Sense (SS). Second, the semantic class type used
for building the semantic features. In this case, we
tested: BLC20, BLC50, SuperSense, WND and
SUMO. Combining them, we generated the set of
experiments described later.
Test pos Sense BLC20 BLC50 WND SUMO SS
SE2 N 4.02 3.45 3.34 2.66 3.33 2.73V 9.82 7.11 6.94 2.69 5.94 4.06
SE3 N 4.93 4.08 3.92 3.05 3.94 3.06V 10.95 8.64 8.46 2.49 7.60 4.08
Table 3: Average polysemy on SE2 and SE3
Table 3 presents the average polysemy on SE2
and SE3 of the different semantic classes.
4.1 Baselines
The most frequent classes (MFC) of each word
calculated over SemCor are considered to be the
baselines of our systems. Ties between classes on
a specific word are solved obtaining the global fre-
quency in SemCor of each of these tied classes,
and selecting the more frequent class over the
whole training corpus. When there are no occur-
rences of a word of the test corpus in SemCor (we
are not able to calculate the most frequent class of
the word), we obtain again the global frequency
for each of its possible semantic classes (obtained
11Depending on the experiment, around 30% of the origi-
nal features are removed by this filter.
12We included this evaluation for comparison purposes
since the current system have been designed for class-based
evaluation only.
from WN) over SemCor, and we select the most
frequent.
4.2 Results
Tables 4 and 5 present the F1 measures (harmonic
mean of recall and precision) for nouns and verbs
respectively when training our systems on Sem-
Cor and testing on SE2 and SE3. Those results
showing a statistically significant13 positive dif-
ference when compared with the baseline are in
marked bold. Column labeled as ?Class? refers to
the target set of semantic classes for the classifiers,
that is, the desired semantic level for each exam-
ple. Column labeled as ?Sem. Feat.? indicates
the class of the semantic features used to train the
classifiers. For example, class BLC20 combined
with Semantic Feature BLC20 means that this set
of classes were used both to label the test exam-
ples and to define the semantic features. In order
to compare their contribution we also performed
a ?basicFeat? test without including semantic fea-
tures.
As expected according to most literature in
WSD, the performances of the MFC baselines are
very high. In particular, those corresponding to
nouns (ranging from 70% to 80%). While nom-
inal baselines seem to perform similarly in both
SE2 and SE3, verbal baselines appear to be con-
sistently much lower for SE2 than for SE3. In
SE2, verbal baselines range from 44% to 68%
while in SE3 verbal baselines range from 52% to
79%. An exception is the results for verbs con-
sidering WND: the results are very high due to
the low polysemy for verbs according to WND.
As expected, when increasing the level of abstrac-
tion (from senses to SuperSenses) the results also
increase. Finally, it also seems that SE2 task is
more difficult than SE3 since the MFC baselines
are lower.
As expected, the results of the systems increase
while augmenting the level of abstraction (from
senses to SuperSenses), and almost in every case,
the baseline results are reached or outperformed.
This is very relevant since the baseline results are
very high.
Regarding nouns, a very different behaviour is
observed for SE2 and SE3. While for SE3 none
of the system presents a significant improvement
over the baselines, for SE2 a significant improve-
ment is obtained by using several types of seman-
13Using the McNemar?s test.
393
tic features. In particular, when using WordNet
Domains but also BLC20. In general, BLC20 se-
mantic features seem to be better than BLC50 and
SuperSenses.
Regarding verbs, the system obtains significant
improvements over the baselines using different
types of semantic features both in SE2 and SE3.
In particular, when using again WordNet Domains
as semantic features.
In general, the results obtained by BLC20 are
not so much different to the results of BLC50
(in a few cases, this difference is greater than
2 points). For instance, for nouns, if we con-
sider the number of classes within BLC20 (558
classes), BLC50 (253 classes) and SuperSense (24
classes), BLC classifiers obtain high performance
rates while maintaining much higher expressive
power than SuperSenses. In fact, using Super-
Senses (40 classes for nouns and verbs) we can
obtain a very accurate semantic tagger with per-
formances close to 80%. Even better, we can use
BLC20 for tagging nouns (558 semantic classes
and F1 over 75%) and SuperSenses for verbs (14
semantic classes and F1 around 75%).
Obviously, the classifiers using WordNet Do-
mains as target grouping obtain very high per-
formances due to its reduced average polysemy.
However, when used as semantic features it seems
to improve the results in most of the cases.
In addition, we obtain very competitive classi-
fiers at a sense level.
4.3 Learning curves
We also performed a set of experiments for mea-
suring the behaviour of the class-based WSD sys-
tem when gradually increasing the number of
training examples. These experiments have been
carried for nouns and verbs, but only noun results
are shown since in both cases, the trend is very
similar but more clear for nouns.
The training corpus has been divided in portions
of 5% of the total number of files. That is, com-
plete files are added to the training corpus of each
incremental test. The files were randomly selected
to generate portions of 5%, 10%, 15%, etc. of the
SemCor corpus14. Then, we train the system on
each of the training portions and we test the sys-
tem on SE2 and SE3. Finally, we also compare the
14Each portion contains also the same files than the previ-
ous portion. For example, all files in the 25% portion are also
contained in the 30% portion.
Class Sem. Feat. SensEval2 SensEval3Poly All Poly All
Sense
baseline 59.66 70.02 64.45 72.30
basicFeat 61.13 71.20 65.45 73.15
BLC20 61.93 71.79 65.45 73.15
BLC50 61.79 71.69 65.30 73.04
SS 61.00 71.10 64.86 72.70
WND 61.13 71.20 65.45 73.15
SUMO 61.66 71.59 65.45 73.15
BLC20
baseline 65.92 75.71 67.98 76.29
basicFeat 65.65 75.52 64.64 73.82
BLC20 68.70 77.69 68.29 76.52
BLC50 68.83 77.79 67.22 75.73
SS 65.12 75.14 64.64 73.82
WND 68.97 77.88 65.25 74.24
SUMO 68.57 77.60 64.49 73.71
BLC50
baseline 67.20 76.65 68.01 76.74
basicFeat 64.28 74.57 66.77 75.84
BLC20 69.72 78.45 68.16 76.85
BLC50 67.20 76.65 68.01 76.74
SS 65.60 75.52 65.07 74.61
WND 70.39 78.92 65.38 74.83
SUMO 71.31 79.58 66.31 75.51
WND
baseline 78.97 86.11 76.74 83.8
basicFeat 70.96 80.81 67.85 77.64
BLC20 72.53 81.85 72.37 80.79
BLC50 73.25 82.33 71.41 80.11
SS 74.39 83.08 68.82 78.31
WND 78.83 86.01 76.58 83.71
SUMO 75.11 83.55 73.02 81.24
SUMO
baseline 66.40 76.09 71.96 79.55
basicFeat 68.53 77.60 68.10 76.74
BLC20 65.60 75.52 68.10 76.74
BLC50 65.60 75.52 68.72 77.19
SS 68.39 77.50 68.41 76.97
WND 68.92 77.88 69.03 77.42
SUMO 68.92 77.88 70.88 78.76
SS
baseline 70.48 80.41 72.59 81.50
basicFeat 69.77 79.94 69.60 79.48
BLC20 71.47 81.07 72.43 81.39
BLC50 70.20 80.22 72.92 81.73
SS 70.34 80.32 65.12 76.46
WND 73.59 82.47 70.10 79.82
SUMO 70.62 80.51 71.93 81.05
Table 4: Results for nouns
resulting system with the baseline computed over
the same training portion.
Figures 1 and 2 present the learning curves over
SE2 and SE3, respectively, of a class-based WSD
system based on BLC20 using the basic features
and the semantic features built with WordNet Do-
mains.
Surprisingly, in SE2 the system only improves
the F1 measure around 2% while increasing the
training corpus from 25% to 100% of SemCor.
In SE3, the system again only improves the F1
measure around 3% while increasing the training
corpus from 30% to 100% of SemCor. That is,
most of the knowledge required for the class-based
WSD system seems to be already present on a
small part of SemCor.
Figures 3 and 4 present the learning curves over
SE2 and SE3, respectively, of a class-based WSD
system based on SuperSenses using the basic fea-
tures and the semantic features built with WordNet
Domains.
Again, in SE2 the system only improves the F1
394
Class Sem. Feat. SensEval2 SensEval3Poly All Poly All
Sense
baseline 41.20 44.75 49.78 52.88
basicFeat 42.01 45.53 54.19 57.02
BLC20 41.59 45.14 53.74 56.61
BLC50 42.01 45.53 53.6 56.47
SS 41.80 45.34 53.89 56.75
WND 42.01 45.53 53.89 56.75
SUMO 42.22 45.73 54.19 57.02
BLC20
baseline 50.21 55.13 54.87 58.82
basicFeat 52.36 57.06 57.27 61.10
BLC20 52.15 56.87 56.07 59.92
BLC50 51.07 55.90 56.82 60.60
SS 51.50 56.29 57.57 61.29
WND 54.08 58.61 57.12 60.88
SUMO 52.36 57.06 57.42 61.15
BLC50
baseline 49.78 54.93 55.96 60.06
basicFeat 53.23 58.03 58.07 61.97
BLC20 52.59 57.45 57.32 61.29
BLC50 51.72 56.67 57.01 61.01
SS 52.59 57.45 57.92 61.83
WND 55.17 59.77 58.52 62.38
SUMO 52.16 57.06 57.92 61.83
WND
baseline 84.80 90.33 84.96 92.20
basicFeat 84.50 90.14 78.63 88.92
BLC20 84.50 90.14 81.53 90.42
BLC50 84.50 90.14 81.00 90.15
SS 83.89 89.75 78.36 88.78
WND 85.11 90.52 84.96 92.20
SUMO 85.11 90.52 80.47 89.88
SUMO
baseline 54.24 60.35 59.69 64.71
basicFeat 56.25 62.09 61.41 66.21
BLC20 55.13 61.12 61.25 66.07
BLC50 56.25 62.09 61.72 66.48
SS 53.79 59.96 59.69 64.71
WND 55.58 61.51 61.56 66.35
SUMO 54.69 60.74 60.00 64.98
SS
baseline 62.79 68.47 76.24 79.07
basicFeat 66.89 71.95 75.47 78.39
BLC20 63.70 69.25 74.69 77.70
BLC50 63.70 69.25 74.69 77.70
SS 63.70 69.25 74.84 77.84
WND 66.67 71.76 77.02 79.75
SUMO 64.84 70.21 74.69 77.70
Table 5: Results for verbs
measure around 2% while increasing the training
corpus from 25% to 100% of SemCor. In SE3,
the system again only improves the F1 measure
around 2% while increasing the training corpus
from 30% to 100% of SemCor. That is, with only
25% of the whole corpus, the class-based WSD
system reaches a F1 close to the performance us-
ing all corpus. This evaluation seems to indicate
that the class-based approach to WSD reduces dra-
matically the required amount of training exam-
ples.
In both cases, when using BLC20 or Super-
Senses as semantic classes for tagging, the be-
haviour of the system is similar to MFC baseline.
This is very interesting since the MFC obtains high
results due to the way it is defined, since the MFC
over the total corpus is assigned if there are no oc-
currences of the word in the training corpus. With-
out this definition, there would be a large number
of words in the test set with no occurrences when
using small training portions. In these cases, the
recall of the baselines (and in turn F1) would be
 62
 64
 66
 68
 70
 72
 74
 76
 78
 80
 5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95  100
F1
% corpus
System SV2MFC SV2
Figure 1: Learning curve of BLC20 on SE2
 62
 64
 66
 68
 70
 72
 74
 76
 78
 5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95  100
F1
% corpus
System SV3MFC SV3
Figure 2: Learning curve of BLC20 on SE3
much lower.
5 Conclusions and discussion
We explored on the WSD task the performance
of different levels of abstraction and sense group-
ings. We empirically demonstrated that Base
Level Concepts are able to group word senses into
an adequate medium level of abstraction to per-
form supervised class?based disambiguation. We
also demonstrated that the semantic classes pro-
vide a rich information about polysemous words
and can be successfully used as semantic fea-
tures. Finally we confirm the fact that the class?
based approach reduces dramatically the required
amount of training examples, opening the way to
solve the well known acquisition bottleneck prob-
lem for supervised machine learning algorithms.
In general, the results obtained by BLC20 are
not very different to the results of BLC50. Thus,
we can select a medium level of abstraction, with-
out having a significant decrease of the perfor-
395
 68
 70
 72
 74
 76
 78
 80
 82
 84
 5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95  100
F1
% corpus
System SV2MFC SV2
Figure 3: Learning curve of SuperSense on SE2
 70
 72
 74
 76
 78
 80
 82
 5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95  100
F1
% corpus
System SV3MFC SV3
Figure 4: Learning curve of SuperSense on SE3
mance. Considering the number of classes, BLC
classifiers obtain high performance rates while
maintaining much higher expressive power than
SuperSenses. However, using SuperSenses (46
classes) we can obtain a very accurate semantic
tagger with performances around 80%. Even bet-
ter, we can use BLC20 for tagging nouns (558 se-
mantic classes and F1 over 75%) and SuperSenses
for verbs (14 semantic classes and F1 around
75%).
As BLC are defined by a simple and fully au-
tomatic method, they can provide a user?defined
level of abstraction that can be more suitable for
certain NLP tasks.
Moreover, the traditional set of features used for
sense-based classifiers do not seem to be the most
adequate or representative for the class-based ap-
proach. We have enriched the usual set of fea-
tures, by adding semantic information from the
monosemous words of the context and the MFC
of the target word. With this new enriched set of
features, we can generate robust and competitive
class-based classifiers.
To our knowledge, the best results for class?
based WSD are those reported by (Ciaramita and
Altun, 2006). This system performs a sequence
tagging using a perceptron?trained HMM, using
SuperSenses, training on SemCor and testing on
SensEval3. The system achieves an F1?score of
70.54, obtaining a significant improvement from
a baseline system which scores only 64.09. In
this case, the first sense baseline is the SuperSense
of the most frequent synset for a word, according
to the WN sense ranking. Although this result is
achieved for the all words SensEval3 task, includ-
ing adjectives, we can compare both results since
in SE2 and SE3 adjectives obtain very high per-
formance figures. Using SuperSenses, adjectives
only have three classes (WN Lexicographic Files
00, 01 and 44) and more than 80% of them belong
to class 00. This yields to really very high perfor-
mances for adjectives which usually are over 90%.
As we have seen, supervised WSD systems are
very dependent of the corpora used to train and
test the system. We plan to extend our system by
selecting new corpora to train or test. For instance,
by using the sense annotated glosses from Word-
Net.
References
E. Agirre and O. LopezDeLaCalle. 2003. Clustering
wordnet word senses. In Proceedings of RANLP?03,
Borovets, Bulgaria.
J. Alvez, J. Atserias, J. Carrera, S. Climent, E. Laparra,
A. Oliver, and G. Rigau G. 2008. Complete and
consistent annotation of wordnet using the top con-
cept ontology. In 6th International Conference on
Language Resources and Evaluation LREC, Mar-
rakesh, Morroco.
M. Ciaramita and Y. Altun. 2006. Broad-coverage
sense disambiguation and information extraction
with a supersense sequence tagger. In Proceedings
of the Conference on Empirical Methods in Natural
Language Processing (EMNLP?06), pages 594?602,
Sydney, Australia. ACL.
M. Ciaramita and M. Johnson. 2003. Supersense tag-
ging of unknown nouns in wordnet. In Proceedings
of the Conference on Empirical methods in natural
language processing (EMNLP?03), pages 168?175.
ACL.
J. Curran. 2005. Supersense tagging of unknown
nouns using semantic similarity. In Proceedings of
the 43rd Annual Meeting on Association for Compu-
tational Linguistics (ACL?05), pages 26?33. ACL.
396
C. Fellbaum, editor. 1998. WordNet. An Electronic
Lexical Database. The MIT Press.
M. Hearst and H. Schu?tze. 1993. Customizing a lexi-
con to better suit a computational task. In Proceed-
ingns of the ACL SIGLEX Workshop on Lexical Ac-
quisition, Stuttgart, Germany.
R. Izquierdo, A. Suarez, and G. Rigau. 2007. Explor-
ing the automatic selection of basic level concepts.
In Galia Angelova et al, editor, International Con-
ference Recent Advances in Natural Language Pro-
cessing, pages 298?302, Borovets, Bulgaria.
T. Joachims. 1998. Text categorization with support
vector machines: learning with many relevant fea-
tures. In Claire Ne?dellec and Ce?line Rouveirol, edi-
tors, Proceedings of ECML-98, 10th European Con-
ference on Machine Learning, number 1398, pages
137?142, Chemnitz, DE. Springer Verlag, Heidel-
berg, DE.
B. Magnini and G. Cavaglia`. 2000. Integrating subject
field codes into wordnet. In Proceedings of LREC,
Athens. Greece.
Ll. Ma`rquez, G. Escudero, D. Mart??nez, and G. Rigau.
2006. Supervised corpus-based methods for wsd. In
E. Agirre and P. Edmonds (Eds.) Word Sense Disam-
biguation: Algorithms and applications., volume 33
of Text, Speech and Language Technology. Springer.
R. Mihalcea and D. Moldovan. 2001. Automatic gen-
eration of coarse grained wordnet. In Proceding of
the NAACL workshop on WordNet and Other Lex-
ical Resources: Applications, Extensions and Cus-
tomizations, Pittsburg, USA.
R. Mihalcea. 2007. Using wikipedia for automatic
word sense disambiguation. In Proceedings of
NAACL HLT 2007.
G. Miller, C. Leacock, R. Tengi, and R. Bunker. 1993.
A Semantic Concordance. In Proceedings of the
ARPA Workshop on Human Language Technology.
R. Navigli. 2006. Meaningful clustering of senses
helps boost word sense disambiguation perfor-
mance. In ACL-44: Proceedings of the 21st Inter-
national Conference on Computational Linguistics
and the 44th annual meeting of the Association for
Computational Linguistics, pages 105?112, Morris-
town, NJ, USA. Association for Computational Lin-
guistics.
I. Niles and A. Pease. 2001. Towards a standard upper
ontology. In Proceedings of the 2nd International
Conference on Formal Ontology in Information Sys-
tems (FOIS-2001), pages 17?19. Chris Welty and
Barry Smith, eds.
M. Palmer, C. Fellbaum, S. Cotton, L. Delfs, and
H. Trang Dang. 2001. English tasks: All-
words and verb lexical sample. In Proceedings
of the SENSEVAL-2 Workshop. In conjunction with
ACL?2001/EACL?2001, Toulouse, France.
W. Peters, I. Peters, and P. Vossen. 1998. Automatic
sense clustering in eurowordnet. In First Interna-
tional Conference on Language Resources and Eval-
uation (LREC?98), Granada, Spain.
F. Segond, A. Schiller, G. Greffenstette, and J. Chanod.
1997. An experiment in semantic tagging using hid-
den markov model tagging. In ACL Workshop on
Automatic Information Extraction and Building of
Lexical Semantic Resources for NLP Applications,
pages 78?81. ACL, New Brunswick, New Jersey.
R. Snow, Prakash S., Jurafsky D., and Ng A. 2007.
Learning to merge word senses. In Proceedings of
Joint Conference on Empirical Methods in Natural
Language Processing and Computational Natural
Language Learning (EMNLP-CoNLL), pages 1005?
1014.
B. Snyder and M. Palmer. 2004. The english all-words
task. In Rada Mihalcea and Phil Edmonds, edi-
tors, Senseval-3: Third International Workshop on
the Evaluation of Systems for the Semantic Analysis
of Text, pages 41?43, Barcelona, Spain, July. Asso-
ciation for Computational Linguistics.
L. Villarejo, L. Ma`rquez, and G. Rigau. 2005. Ex-
ploring the construction of semantic class classi-
fiers for wsd. In Proceedings of the 21th Annual
Meeting of Sociedad Espaola para el Procesamiento
del Lenguaje Natural SEPLN?05, pages 195?202,
Granada, Spain, September. ISSN 1136-5948.
P. Vossen, L. Bloksma, H. Rodriguez, S. Climent,
N. Calzolari, A. Roventini, F. Bertagna, A. Alonge,
and W. Peters. 1998. The eurowordnet base con-
cepts and top ontology. Technical report, Paris,
France, France.
D. Yarowsky. 1994. Decision lists for lexical ambigu-
ity resolution: Application to accent restoration in
spanish and french. In Proceedings of the 32nd An-
nual Meeting of the Association for Computational
Linguistics (ACL?94).
397
Exploiting semantic information for manual anaphoric annotation in
Cast3LB corpus
Borja Navarro, Rube?n Izquierdo, Maximiliano Saiz-Noeda
Departmento de Lenguajes y Sistemas Informa?ticos
Universidad de Alicante
Ap. Correo 99, E-03080
Alicante, Spain
{borja,ruben,max}@dlsi.ua.es
Abstract
This paper presents the discourse annotation fol-
lowed in Cast3LB, a Spanish corpus annotated with
several information sources (morphological, syntac-
tic, semantic and coreferential) at syntactic, seman-
tic and discourse level. 3LB annotation scheme has
been developed for three languages (Spanish, Cata-
lan and Basque). Human annotators have used a
set of tagging techniques and protocols. Several
tools have provided them with a friendly annotation
scheme. At discourse level, anaphoric and coref-
erence expressions are annotated. One of the most
interesting contributions to this annotation scenario
is the enriched anaphora resolution module that is
based on the previously defined semantic annotation
phase to expand the discourse information and use
it to suggest the correct antecedent of an anaphora
to the annotator. This paper describes the relevance
of the semantic tags in the discourse annotation in
Spanish corpus Cast3LB and shows both levels and
tools in the mentioned discourse annotation scheme.
1 Introduction
Cast3LB corpus is annotated (Navarro et al, 2003)
at three linguistic levels: sentence level (syntac-
tic), lexical level (semantic) and discourse level. At
discourse level, it is annotated with anaphoric and
coreferential information. In order to improve the
time-consuming and tedious task of the manually
annotation, a semiautomatic and interactive process
is followed: first, an anaphora resolution system se-
lects each anaphora and its antecedent from a list
of candidates; then, the human annotator decides
wether or not accept the suggestion.
With this approach, the correctness of the
anaphora resolution system is a key factor in the
quest of an efficient annotation process. For this
reason, we use the linguistic information of the
previous annotation tasks (morphological, syntac-
tic and, mainly, semantic information) to improve
the anaphora resolution system. In this paper we
will focus on the use of semantic information in the
anaphora and coreferential manual annotation task.
Next section presents the project overview and
the three annotation levels. Following sections
present the semantic annotation and the way it
serves to the discourse annotations. Last section
presents annotation tools used to annotate the cor-
pus at semantic and coreferential level.
2 Cast3LB corpus: annotation project
overview
Cast3Lb project is part of the general project 3LB1.
The main objective of this general project is to
develop three corpora annotated with syntactic,
semantic and pragmatic/coreferential information:
one for Catalan (Cat3LB), one for Basque (Eus3LB)
and one for Spanish (Cast3LB).
The Spanish corpus Cast3LB is a part of the
CLIC-TALP corpus, which is made up of 100.000
words from the LexEsp corpus (Sebastia?n et al,
2000) plus 25.000 words coming from the EFE
Spanish Corpus, given by the Agencia EFE (the of-
ficial news agency) for research purposes. The EFE
corpus fragments are comparable among the lan-
guages of the general project (Catalan, Basque and
Spanish).
We have selected this corpus because it contains
a large variety of Spanish texts (newspapers, novels,
scientific papers. . . ), both from Spain and South-
America, so it is a good representation of the cur-
rent state of the Spanish language. Moreover, the
automatic morphological annotation of this corpus
has been manually checked (Civit, 2003).
The spirit of the annotation scheme is to build a
flexible system portable to different romance lan-
guages and to potential new cases that might appear,
but consistent with all annotation levels and annota-
tion data.
At the syntactic level we follow the constituency
annotation scheme. Main principles of syntactic an-
notation are the following (Civit et al, 2003): a)
1Project partially funded by Spanish Government FIT-150-
500-2002-244.
only the explicit elements are annotated (except for
elliptical subjects); b) we do not alter the surface
word order of the elements; c) we do not follow any
specific theoretical framework; d) we do not take
into account the verbal phrase, rather, the main con-
stituents of the sentence become the daughters of
the root node; e) this syntactic information is en-
riched by the functional information of the main
phrases, but we have not taken into account the pos-
sibility of double functions.
At the semantic level, we annotate the sense of
the nouns, verbs and some adjectives, following an
all words approach. The specific sense (or senses)
of each one is assigned by means of the EuroWord-
Net offset number (Vossen, 1998). Also, due to
some words are not available in EuroWordNet or
do not have the suitable sense, we have created two
new tags to mark this circumstance.
At the discourse level, we mark the coreference of
nominal phrases and some elliptical elements. The
coreference expressions taken into account are per-
sonal pronouns, clitics, elliptical subjects and some
elliptical adjectives. The definite descriptions are
not marked. The possible antecedents considered
are the nominal phrases or other coreferential ex-
pressions.
3 Semantic annotation
As we said before, main objective of Cast3LB
project at semantic level is to develop an ?all words?
corpus with the specific sense (or senses) of nouns,
verbs and adjectives.
Our proposal is based on the SemCor corpus
(Miller, 1990). This corpus is formed by a por-
tion of the Brown corpus and the novel The Red
Badge of Courage. Altogether, it is formed by ap-
proximately 250.000 words, where nouns, verbs,
adjectives and adverbs have been manually anno-
tated with WordNet senses (Miller, 1990). Another
corpus with WordNet-based semantic annotation is
the DSO corpus (Ng and Lee, 1996). In this cor-
pus, the most frequent English ambiguous nouns
and verbs had been annotated with the correct sense
(121 nouns and 70 verbs). The corpus is formed by
192.800 sentences from the Brown Corpus and the
Wall Street Journal, and it has also been manually
annotated. Finally, the SENSEVAL forum has de-
veloped a few sense annotated corpora for the eval-
uation of Word Sense Disambiguation systems (Kil-
garriff and Palmer, 2000), some of which also use
WordNet as a lexical resource.
We have decided to use Spanish WordNet for sev-
eral reasons. First of all, Spanish WordNet is, up to
now, the more commonly used lexical resource in
Word Sense Disambiguation tasks. Secondly, it is
one of the most complete lexical resources currently
available for Spanish. Finally, as part of EuroWord-
Net, the lexical structure of Spanish and the lexical
structure of Catalan and Basque are related. There-
fore, the annotated senses of the three corpora of
3LB project can also be related.
The tag used to mark a word sense is its off-
set number, that is, its identification number in Eu-
roWordNet?s InterLingua Index. The corpus has
42291 lexical words, where 20461 are nouns, 13471
are verbs and 8543 are adjectives.
On other hand, not all nouns, verbs, adjectives
and adverbs are annotated, due to EuroWordNet
does not contain them. Possible lacks in this sense
are (i) the synset, (ii) the word, (iii) the synset and
the word, and (iv) the link between the synset and
the word.
In order to deal with these cases we have defined
two more tags in EuroWordNet:
? C1S: the word is found, but not its correct
sense (due to a sense lack, or because there is
no link between the word and the synset).
? C2S: the word is not found (because it is not
there, or because both the word and the synset
are missing).
It is possible to distinguish two methods for se-
mantically annotate a corpus. The first one is linear
(or ?textual?) method (Kilgarriff, 1998), where the
human annotator marks the sentences token by to-
ken up to the end of the corpus. In this strategy the
annotator must read and analyze the sense of each
word every time it appears in the corpus. The sec-
ond annotation method is transversal (or ?lexical?)
(Kilgarriff, 1998), where he/she annotates word-
type by word-type, all the occurrences of each word
in the corpus one by one. With this method, the
annotator must read and analyze all the senses of a
word only once.
We have followed in Cast3LB the transversal pro-
cess. The main advantage of this method is that
we can focus our attention on the sense structure of
one word and deal with its specific semantic prob-
lems: its main sense or senses, its specific senses. . . .
Then we check the context of the single word each
time it appears and select the corresponding sense.
Through this approach, semantic features of each
word is taken into consideration only once, and the
whole corpus achieves greater consistency. Through
the linear process, however, the annotator must re-
member the sense structure of each word and their
specific problems each time the word appears in
the corpus, making the annotation process much
more complex, and increasing the possibilities of
low consistency and disagreement between the an-
notators.
Nevertheless, the transversal method finds its dis-
advantage in the annotation of large corpus, be-
cause no fragment of the corpus is available until
the whole corpus is completed. To avoid this, we
have selected a fragment of the whole corpus and
annotated it by means of the linear process.
Everybody agrees that semantic annotation is a
tedious and difficult task. From a general point of
view, the main problem in the semantic annotation
is the subjectivity of the human annotator when it
comes to the selection of the correct sense, because
there are usually more than one sense for a word,
and, due to the WorNet?s granularity, more than one
could be correct for a given word. Another impor-
tant problem in the semantic annotation is the poor
agreement between different annotators, due to the
ambiguity and/or vagueness of many words.
In order to overcome these problems, the annota-
tion process has been carried out in two steps. In the
first step, a subset of ambiguous words have been
annotated twice by two annotators. With this dou-
ble annotation we have developed a disagreement
typology and an annotation handbook, where all the
possible causes of ambiguity have been described
and common solutions have been adopted for the
rest of cases. In the second step the remaining cor-
pus is annotated following the criteria adopted in the
annotation handbook.
Our final aim is to obtain useful resources for
Word Sense Disambiguation (WSD) systems in
Spanish. This semantically annotated corpus will
be used as a training corpus for the development of
unsupervised systems and as a reference in general
evaluation tasks. At the end of the project, we will
have a large amount of words with an unambiguous
sense tag in a real context.
As well as this final application, we exploit this
semantic information in the anaphoric annotation
task. In (Saiz-Noeda, 2002), how to apply seman-
tic information in anaphora resolution systems is
showed and evaluated. We take this proposal, but
applied to manual anaphora annotation.
Due to the corpus has been annotated with syn-
tactic information, and the sense of each word is
marked with the offset number of EuroWordNet,
it is possible to extract semantic features of each
verb and noun through the ontological concepts of
the EuroWordNet?s Top Ontology. Furthermore, the
corpus has been annotated with syntactic roles, so
it is possible to extract syntactic patterns formed by
the verb and its main complements: subject-verb,
verb-direct objects, verb-indirect objects.
As we will show bellow, these patterns are use-
ful in order to select the specific antecedent of an
anaphora, according to semantic compatibility cri-
teria between the antecedent and the verb of the sen-
tence where the anaphora appears.
4 Discourse annotation: anaphora and
coreference
At discourse level, our objective is to annotate the
anaphora and the coreference, in order to develop
useful resources for anaphora resolution systems.
We agreed to annotate the anaphoric elements
and their antecedents. These anaphoric elements are
the anaphoric ellipsis, the pronominal anaphora and
the coreferential chains.
Specifically, in each one, we mark:
? Anaphoric ellipsis:
? The elliptical subject, made explicit in the
syntactic annotation step. Being a noun
phrase, it could also be an antecedent too.
Unlike English, where it is possible an
expletive pronoun as subject, in Spanish
it is very common an elliptical nominal
phrase as subject of the sentence. This is
why we have decide to include this kind
of anaphora in the annotation process.
? Elliptical head of nominal phrases with
an adjective complement. In English,
this construction is the ?one anaphora?.
In Spanish, however, the anaphoric con-
struction is made up by an elliptical head
noun and an adjective complement.
? Anaphora: Two kinds of pronouns:
? The tonic personal pronouns in the third
person. They can appear in subject func-
tion or in object function.
? The atonic pronouns, specifically the
clitic pronouns that appear in the subcate-
gorization frame of the main verb.
? Finally, there are sets of anaphoric and ellipti-
cal units that corefer to the same entity. These
units form coreferential chains. They must be
marked in order to show the cohesion and co-
herence of the text. They are annotated by
means of the identification of the same an-
tecedent.
We do not annotate the definite descriptions.
They consist of nominal phrases that can refer (or
not) to an antecedent. We do not mark them because
they outline specific problems that make this task
very difficult: firstly, there are not clear criteria that
allow us to distinguish between coreferential and
not coreferential nominal phrases; secondly, there
are not a clear typology for definite descriptions;
and finally, there are not a clear typology of rela-
tionships between the definite description and their
antecedents. These problems could further increase
the time-consuming in the annotation process and
widen the gap of disagreement between the human
annotators.
This proposal of annotation scheme is based on
the one used in the MUC (Message Understanding
Conference) (Hirschman, 1997) as well as in the
works of Gaizauskas (Gaizauskas and Humphreys,
1996) and Mitkov (Mitkov et al, 2002): this is
the mostly used scheme in coreferential annotation
(Mitkov, 2002).
In the anaphoric annotation, two linguistic ele-
ments must be marked: the anaphoric expression
and its antecedent. In the antecedent we annotate
the following information:
? A reference tag that shows the presence of an
antecedent (?REF?),
? An identification number (?ID?),
? The minimum continuous substring that could
be considerer correct (?MIN?).
In the coreferential expression, we annotate:
? The presence of a coreferential expression
(?COREF?),
? An identification number (?ID?),
? The type of anaphoric expression: elliptical
subject, elliptical head of noun phrase, tonic
pronoun or atonic pronoun (?TYPE?),
? The antecedent, through its identification num-
ber (?REF?),
? Finally, a status tag where the annotators shows
their confidence in the annotation (?STA-
TUS?).
As previously mentioned in this paper, the main
problem in the anaphoric annotation is the low
agreement between human annotators. There is usu-
ally less agreement in anaphoric annotation than in
syntactic annotation ((Mitkov, 2002), 141). In order
to reduce this low agreement, we annotate only the
clearest type of anaphoric units (pronouns, ellipti-
cal subjects and elliptical nominal heads), and we
introduce the lowest necessary information. More-
over, with the tag ?STATUS?, the human annotator
can show his confidence in the anaphoric unit and
the antecedent marked. However, at the moment, as
occurs in the semantic annotation, we do not have
enough data on the agreement between annotators.
4.1 Manual annotation with an Enriched
Anaphora Resolution System
As we said before, we follow a manual anaphora an-
notation with the help of a Enriched Anaphora Res-
olution System: our idea is to check the automatic
annotation of the anaphora resolution system and to
correct mistakes in the annotation process.
In manual anaphora and coreferential annota-
tion, the human annotator first locates a possible
anaphora, and then must read back the text until
the antecedent appears. With an anaphora resolu-
tion system it is possible to automatize this pro-
cess: the system selects possible anaphoric ele-
ments, their possible antecedents, and decides the
main candidate. The human annotator must only
check the suggestion. The process is more useful
because the most tedious task (to select a possible
anaphora, to read back looking for the antecedent,
etc.) is made up by the system. When the human
annotator checks the solution, he does not read back
for antecedents, he goes directly to the possible an-
tecedents.
However, the anaphora resolution system must be
very accurate. In order to automatically specify the
antecedent of an anaphora and ensure the correct-
ness of the system, we use all the linguistic infor-
mation previously annotated in the corpus: morpho-
logical, syntactic and semantic. In this knowledge-
based anaphora resolution system, the linguistic in-
formation is used through a set of restrictions and
preferences. Following this strategy, the system re-
jects possible antecedents until only one is selected.
The key point is the linguistic information used in
restrictions and preferences.
We have developed a semantically enriched
anaphora resolution system in order to aid the dis-
course annotation level. EuroWordNet synsets are
the base of the semantic information added to the
resolution process. The fact of counting with a se-
mantically annotated corpus such as Cast3Lb facil-
itates the use of the anaphora resolution method,
based on a natural way of understanding the human
process for anaphora resolution.
The specific use of semantic information is re-
lated to the sematic compatibility between the possi-
ble antecedent (a noun) and the verb of the sentence
in which the anaphoric pronoun appears. Due to the
pronoun replaces a lexical word (the antecedent),
the semantic information of the antecedent must
be compatible with the semantic restrictions of the
verb. In other words, the anaphoric expression takes
the semantic features of the antecedent, so they must
be compatible with the semantic restrictions of the
verb.
In this way, verbs like ?eat? or ?drink? will be
specially compatible with animal subjects and eat-
able and drinkable objects than others.
In our case, the semantic features of the lexi-
cal words have been extracted form the ontologi-
cal concepts of EuroWorNet, that is, the Top On-
tology. All the synsets in EuroWordnet are seman-
tically described through a set of base concepts (the
more general concepts). In the EuroWorNet?s Top
Ontology, these base concepts are classified in the
three orders of Lyons (Lyons, 1977), according to
basic semantic distinctions. So through the top on-
tology, all the synsets of EuroWordNet are seman-
tically described with concepts like ?human?, ?an-
imal?, ?artifact?, etc. With this, we have extracted
subject-verb, verb-direct object and/or verb-indirect
object semantic patterns.
From this semantic patters, rules about the se-
mantic compatibility between nouns and verbs have
been extracted. These rules are applied to the
anaphora resolution as preferences. Based on the
patterns, the system calculates the compatibility
between the verb of the sentence in which the
anaphora appears and the antecedent. So the possi-
ble antecedents with low compatibility are rejected,
and the antecedents with high compatibility are se-
lected. These semantic preferences, plus the syn-
tactic and morphological restrictions and prefer-
ences, are used to select the correct antecedent of
the anaphora.
Furthermore, semantic information is also used in
some rules. There are two kind of rules:
? ?NO? rules: NO(v#sense,c,r) defines the in-
compatibility between the verb v (and it sense)
and any name which contains ?c? in its ontolog-
ical concept list, being ?r? the syntactic func-
tion that relates them.
? ?MUST? rules: MUST(v#sense,c,r) defines
the incompatibility between the verb v (and its
sense) and all the names that don?t contain ?c?
in their ontological concept list, being ?r? the
syntactic function that relates them.
At the final annotation step, the annotator checks
if the antecedent selected is the correct one or not,
and, in each case, confirms the annotation or cor-
rects it.
5 Tools
5.1 3LB-SAT
3LB-SAT (Semantic Annotation Tool) is a tool for
the semantic tagging of multilingual corpora. Main
features of this tool are:
? it is word-oriented,
? it allows different format for input corpus; ba-
sically, the main formats used in corpus anno-
tation: treebank format (TBF) and XML for-
mat;
? it uses EuroWordNet as a lexical resource.
For the XML format a DTD has been defined, that
allows to describe the information structure in each
file of the corpus.
In the annotation process, monosemic words are
automatically annotated. So, 3LB-SAT is used to
annotated only the polysemic words. When a file
is loaded, all lemmas of the file are shown (Fig-
ure 1). The tool uses different colors to indicate the
state of the annotation process: (i) no occurrence of
the lemma in the file has been annotated, (ii) some
occurrences of the lemma in the file have been an-
notated, or (iii) all the occurrences have been an-
notated. When the annotator selects a lemma, all
its occurrences are shown. The selection of one of
them shows all possible senses, and the annotator
chooses the correct one for this specific context.
Figure 1: 3LB-SAT semantic annotation tool.
5.2 3LB-RAT
3LB-RAT (Reference Annotation Tool) is a tool de-
veloped in 3LB project for the annotation and su-
pervision of anaphora and coreferences at discourse
level.
The tool provides the annotator with two working
ways: manual and semiautomatic. In the first one,
the tool locates and shows all possible anaphoric
and coreference elements and their possible an-
tecedents. The annotator chooses one of these pos-
sible antecedents and indicates the certainty degree
on this selection (standby, certain or uncertain).
There are some exceptional cases that the tool al-
ways offers:
? cases of cataphora,
? possible syntactic mistakes (that will be used to
review and to correct the syntactic annotation),
? the possibility of a non-located antecedent,
? the possibility that an antecedent doesn?t ap-
pear explicitly in the text,
? the possibility of non-anaphora, that is, the sys-
tem has not correctly located an anaphoric ex-
pression.
In the semiautomatic way, the tool solves each
coreference by means of the enriched resolution
anaphora method previously explained. So the sys-
tem proposes and shows the most suitable candidate
to the annotator. The annotator can choose the solu-
tion that the resolution method offers in all cases, or
choose another solution (manually).
3LB-RAT has been developed in Python lan-
guage, which guarantees the portability to any Win-
dows or Unix platform. It deals with XML files:
it is designed to work and to understand the format
used by the 3LB-SAT tool, but it is able to accept
any other XML specification.
As we said before, the tool uses syntactic, mor-
phologic and semantic information for the specifi-
cation of an anaphora and its antecedent. The se-
mantic information used by the tool is limited to
ontology concepts and synonymous. From the se-
mantically annotated text, three tables are created,
one for each syntactic function: subject, direct ob-
ject and indirect object. In these tables the appear-
ance frequency of nouns with verbs (with their cor-
rect senses) is stored. These tables are the base to
construct the semantic compatibility patterns, which
indicate the compatibility between the ontological
concept related with the possible antecedent and the
verb of the sentence where the anaphoric expression
appears. In order to calculate this information, the
occurrence frequency and the conceptual generality
degree in the ontology are considered. In this case,
a higher punctuation is given to the most concrete
concepts. For example, ?Human? concept gives us
further information than ?Natural? concept. These
patterns are used in the semantic preferences appli-
cation. For a specific candidate, its semantic com-
patibility is calculated from the compatible ontolog-
ical concepts on the patterns. The candidates with
greater compatibility are preferred.
When the annotator selects a XML file to open,
the possible anaphoric elements of the text and their
candidates are located, and each anaphora is solved.
The system shows two lists (Figure 2): the lower
list shows each anaphora located and its solution.
When the annotator selects one of these elements,
in the upper box appears the possible candidates list
besides the solution suggested by the system. At the
same time, in the plain text, the anaphora and the
selected candidates are shown with different colors.
The annotator can choose any suggested option and
the certainty degree of this election, or accept the
solution given by the system.
Figure 2: 3LB-RAT anaphoric annotation tool.
6 Conclusions
The main contribution of this paper is the applica-
tion of semantic information to a manual anaphora
annotation process, based on the semantic relation
between the anaphoric element and its antecedent at
discourse level.
The semantic and anaphoric annotation scheme
of the Spanish corpus Cast3LB has been presented,
and how anaphoric annotation has been improved
with the semantic information annotated in previous
steps. The annotation process is based on the help
of an anaphora resolution system: first, the system
detects the anaphora and its antecedent, and then the
human annotator checks the correctness of the auto-
matic annotation process and solves possible mis-
takes. The system uses all the linguistic informa-
tion previously annotated in the corpus, including
the semantic information, in order to evaluate the
semantic compatibility between the antecedent and
the verb of the sentence in which the anaphora ap-
pears.
Acknowledgements
The authors would like to thank Bele?n and Raquel
for their work in the manual annotation process.
References
M. Civit, Ma. A. Mart??, B. Navarro, N. Buf??,
B. Ferna?ndez, and R. Marcos. 2003. Issues in the
Syntactic Annotation of Cast3LB. In 4th Inter-
national Workshop on Linguistically Interpreted
Corpora (LINC03), EACL03, Budapest.
M. Civit. 2003. Criterios de etiquetacio?n y desam-
biguacio?n morfosinta?ctica de corpus en Espan?ol.
Sociedad Espaola para el Procesamiento del
Lenguaje Natural, Alicante.
R. Gaizauskas and K. Humphreys. 1996. Quantita-
tive evaluation of coreference algorithms in an in-
formation extraction system. In S. P. Botley and
A. M. McEnery, editors, Corpus-based and Com-
putational Approaches to Discourse Anaphora,
pages 143?167. John Benjamins, Amsterdam.
L. Hirschman. 1997. MUC-7 coreference task def-
inition Message Understanding Conference Pro-
ceedings.
A. Kilgarriff and M. Palmer. 2000. Computer and
the Humanities. Special Issue on SENSEVAL,
volume 34.
A. Kilgarriff. 1998. Gold standard datasets for
evaluating word sense disambiguation programs.
Computer Speech and Language. Special Use on
Evaluation, 12(4):453?472.
J. Lyons. 1977. Semantics. Cambridge University
Press, London.
G. A. Miller. 1990. Wordnet: An on-line lexical
database. Intenational Journal of Lexicography,
3(4):235?312.
R. Mitkov, R. Evans, C. Orasan, C. Barbu,
L. Jones, and V.Sotirova. 2002. Coreference
and anaphora: developing annotating tools, an-
notated resources and annotation strategies. In
Proceedings of the Discourse, Anaphora and Ref-
erence Resolution Conference (DAARC 2000),
Lancaster, UK.
R. Mitkov. 2002. Anaphora resolution. Pearson,
London.
B. Navarro, M. Civit, Ma. A. Mart??, B. Ferna?ndez,
and R. Marcos. 2003. Syntactic, semantic and
pragmatic annotation in Cast3LB. In Proceed-
ings of the Shallow Processing of Large Corpora.
A Corpus Linguistics WorkShop, Lancaster, UK.
H. T. Ng and H. B. Lee. 1996. Integrating Mul-
tiple Knowledge Sources to Disambiguate Word
Sense: An Exemplar-Based Approach. In Pro-
ceedings of the 34th Annual Meeting of the As-
sociation for Computational Linguistics, Santa
Cruz, California.
M. Saiz-Noeda. 2002. Influencia y aplicacio?n de
papeles sinta?cticos e informacio?n sema?ntica en la
resolucio?n de la ana?fora pronominal en espan?ol.
Ph.D. thesis, Universidad de Alicante, Alicante.
N. Sebastia?n, Ma. A. Mart??, M. F. Carreiras, and
F. Cuetos. 2000. 2000 LEXESP: Le?xico Informa-
tizado del Espan?ol. Edicions de la Universitat de
Barcelona, Barcelona.
P. Vossen. 1998. A Multilingual Database with Lex-
ical Networks. Kluwer Academic Publisher.
Proceedings of the 4th International Workshop on Semantic Evaluations (SemEval-2007), pages 157?160,
Prague, June 2007. c?2007 Association for Computational Linguistics
GPLSI: Word Coarse-grained Disambiguation aided by Basic Level
Concepts?
Rube?n Izquierdo Armando Sua?rez
GPLSI Group, DLSI
University of Alicante
Spain
{ruben, armando}@dlsi.ua.es
German Rigau
IXA NLP Group
EHU/UPV
Donostia, Basque Country
german.rigau@ehu.es
Abstract
We present a corpus-based supervised lear-
ning system for coarse-grained sense disam-
biguation. In addition to usual features for
training in word sense disambiguation, our
system also uses Base Level Concepts au-
tomatically obtained from WordNet. Base
Level Concepts are some synsets that gene-
ralize a hyponymy sub?hierarchy, and pro-
vides an extra level of abstraction as well as
relevant information about the context of a
word to be disambiguated. Our experiments
proved that using this type of features re-
sults on a significant improvement of preci-
sion. Our system has achieved almost 0.8 F1
(fifth place) in the coarse?grained English
all-words task using a very simple set of fea-
tures plus Base Level Concepts annotation.
1 Introduction
The GPLSI system in SemEval?s task 7, coarse?
grained English all-words, consists of a corpus-
based supervised-learning method which uses lo-
cal context information. The system uses Base Le-
vel Concepts (BLC) (Rosch, 1977) as features. In
short, BLC are synsets of WordNet (WN) (Fell-
baum, 1998) that are representative of a certain hy-
ponymy sub?hierarchy. The synsets that are se-
lected to be BLC must accomplish certain condi-
tions that will be explained in next section. BLC
?This paper has been supported by the European Union un-
der the project QALL-ME (FP6 IST-033860) and the Spanish
Government under the project Text-Mess (TIN2006-15265-
C06-01) and KNOW (TIN2006-15049-C03-01)
are slightly different from Base Concepts of Eu-
roWordNet1 (EWN) (Vossen et al, 1998), Balkanet2
or Meaning Project3 because of the selection crite-
ria but also because our method is capable to define
them automatically. This type of features helps our
system to achieve 0.79550 F1 (over the First?Sense
baseline, 0.78889) while only four systems outper-
formed ours being the F1 of the best one 0.83208.
WordNet has been widely criticised for being a
sense repository that often offers too fine?grained
sense distinctions for higher level applications like
Machine Translation or Question & Answering. In
fact, WSD at this level of granularity, has resisted
all attempts of inferring robust broad-coverage mo-
dels. It seems that many word?sense distinctions are
too subtle to be captured by automatic systems with
the current small volumes of word?sense annotated
examples. Possibly, building class-based classifiers
would allow to avoid the data sparseness problem of
the word-based approach.
Thus, some research has been focused on deri-
ving different sense groupings to overcome the fine?
grained distinctions of WN (Hearst and Schu?tze,
1993) (Peters et al, 1998) (Mihalcea and Moldo-
van, 2001) (Agirre et al, 2003) and on using predefi-
ned sets of sense-groupings for learning class-based
classifiers for WSD (Segond et al, 1997) (Ciaramita
and Johnson, 2003) (Villarejo et al, 2005) (Curran,
2005) (Ciaramita and Altun, 2006). However, most
of the later approaches used the original Lexico-
graphical Files of WN (more recently called Super-
1http://www.illc.uva.nl/EuroWordNet/
2http://www.ceid.upatras.gr/Balkanet
3http://www.lsi.upc.es/ nlp/meaning
157
senses) as very coarse?grained sense distinctions.
However, not so much attention has been paid on
learning class-based classifiers from other available
sense?groupings such as WordNet Domains (Mag-
nini and Cavaglia, 2000), SUMO labels (Niles and
Pease, 2001), EuroWordNet Base Concepts or Top
Concept Ontology labels (Atserias et al, 2004). Ob-
viously, these resources relate senses at some level
of abstraction using different semantic criteria and
properties that could be of interest for WSD. Pos-
sibly, their combination could improve the overall
results since they offer different semantic perspecti-
ves of the data. Furthermore, to our knowledge, to
date no comparative evaluation have been performed
exploring different sense?groupings.
This paper is organized as follows. In section 2,
we present a method for deriving fully automatica-
lly a number of Base Level Concepts from any WN
version. Section 3 shows the details of the whole
system and finally, in section 4 some concluding re-
marks are provided.
2 Automatic Selection of Base Level
Concepts
The notion of Base Concepts (hereinafter BC) was
introduced in EWN. The BC are supposed to be the
concepts that play the most important role in the va-
rious wordnets4 (Fellbaum, 1998) of different lan-
guages. This role was measured in terms of two
main criteria:
? A high position in the semantic hierarchy;
? Having many relations to other concepts;
Thus, the BC are the fundamental building blocks
for establishing the relations in a wordnet and give
information about the dominant lexicalization pat-
terns in languages. BC are generalizations of featu-
res or semantic components and thus apply to a ma-
ximum number of concepts. Thus, the Lexicografic
Files (or Supersenses) of WN could be considered
the most basic set of BC.
Basic Level Concepts (Rosch, 1977) should not
be confused with Base Concepts. BLC are the result
of a compromise between two conflicting principles
of characterization:
4http://wordnet.princeton.edu
#rel. synset
18 group 1,grouping 1
19 social group 1
37 organisation 2,organization 1
10 establishment 2,institution 1
12 faith 3,religion 2
5 Christianity 2,church 1,Christian church 1
#rel. synset
14 entity 1,something 1
29 object 1,physical object 1
39 artifact 1,artefact 1
63 construction 3,structure 1
79 building 1,edifice 1
11 place of worship 1, ...
19 church 2,church building 1
#rel. synset
20 act 2,human action 1,human activity 1
69 activity 1
5 ceremony 3
11 religious ceremony 1,religious ritual 1
7 service 3,religious service 1,divine service 1
1 church 3,church service 1
Table 1: Possible Base Level Concepts for the noun
Church
? Represent as many concepts as possible;
? Represent as many features as possible;
As a result of this, Basic Level Concepts typically
occur in the middle of hierarchies and less than the
maximum number of relations. BC mostly involve
the first principle of the Basic Level Concepts only.
Our work focuses on devising simple methods for
selecting automatically an accurate set of Basic Le-
vel Concepts from WN. In particular, our method se-
lects the appropriate BLC of a particular synset con-
sidering the relative number of relations encoded in
WN of their hypernyms.
The process follows a bottom-up approach using
the chain of hypernym relations. For each synset
in WN, the process selects as its Base Level Con-
cept the first local maximum according to the rela-
tive number of relations. For synsets having multi-
ple hypernyms, the path having the local maximum
with higher number of relations is selected. Usually,
this process finishes having a number of ?fake? Base
Level Concepts. That is, synsets having no descen-
dants (or with a very small number) but being the
first local maximum according to the number of re-
lations considered. Thus, the process finishes che-
cking if the number of concepts subsumed by the
158
Senses BLC SuperSenses
Nouns 4.92 4.10 3.01
Verbs 11.00 8.67 1.03
Nouns + Verbs 7.66 6.16 3.47
Table 2: Polysemy degree over SensEval?3
preliminary list of BLC is higher than a certain th-
reshold. For those BLC not representing enough
concepts according to a certain threshold, the pro-
cess selects the next local maximum following the
hypernym hierarchy.
An example is provided in table 1. This table
shows the possible BLC for the noun ?church? using
WN1.6. The table presents the hypernym chain for
each synset together with the number of relations en-
coded in WN for the synset. The local maxima along
the hypernym chain of each synset appears in bold.
Table 2 presents the polysemy degree for nouns
and verbs of the different words when grouping its
senses with respect the different semantic classes on
SensEval?3. Senses stand for the WN senses, BLC
for the Automatic BLC derived using a threshold of
20 and SuperSenses for the Lexicographic Files of
WN.
3 The GPLSI system
The GPLSI system uses a publicly available imple-
mentation of Support Vector Machines, SVMLight5
(Joachims, 2002), and Semcor as learning corpus.
Semcor has been properly mapped and labelled with
both BLC6 and sense-clusters.
Actually, the process of training-classification has
two phases: first, one classifier is trained for each
possible BLC class and then the SemEval test data
is classified and enriched with them, and second, a
classifier for each target word is built using as addi-
tional features the BLC tags in Semcor and SemE-
val?s test.
Then, the features used for training the classifiers
are: lemmas, word forms, PoS tags7, BLC tags, and
first sense class of target word (S1TW). All features
5http://svmlight.joachims.org/
6Because BLC are automatically defined from WN, some tu-
ning must be performed due to the nature of the task 7. We have
not enough room to present the complete study but threshold 20
has been chosen, using SENSEVAL-3 English all-words as test
data. Moreover, our tests showed roughly 5% of improvement
against not using these features.
7TreeTagger (Schmid, 1994) was used
were extracted from a window [?3.. + 3] except for
the last type (S1TW). The reason of using S1TW
features is to assure the learning of the baseline. It is
well known that Semcor presents a higher frequency
on first senses (and it is also the baseline of the task
finally provided by the organizers).
Besides, these are the same features for both first
and second phases (obviously except for S1TW be-
cause of the different target set of classes). Nevert-
heless, the training in both cases are quite different:
the first phase is class-based while the second is
word-based. By word-based we mean that the lear-
ning is performed using just the examples in Semcor
that contains the target word. We obtain one classi-
fier per polysemous word are in the SemEval test
corpus. The output of these classifiers is a sense-
cluster. In class-based learning all the examples in
Semcor are used, tagging those ones belonging to a
specific class (BLC in our case) as positive exam-
ples while the rest are tagged as negatives. We ob-
tain so many binary classifiers as BLC are in Se-
mEval test corpus. The output of these classifiers
is true or false, ?the example belongs to a class?
or not. When dealing with a concrete target word,
only those BLC classifiers that are related to it are
?activated? (i.e, ?animal? classifier will be not used
to classify ?church?), ensuring that the word will be
tagged with coherent labels. In order to avoid statis-
tical bias because of very large set of negative exam-
ples, the features are defined from positive examples
only (although they are obviously used to characte-
rize all the examples).
4 Conclusions and further work
The WSD task seems to have reached its maxi-
mum accuracy figures with the usual framework.
Some of its limitations could come from the sense?
granularity of WN. In particular, SemEval?s coarse-
grained English all-words task represents a solution
in this direction.
Nevertheless, the task still remains oriented to
words rather than classes. Then, other problems
arise like data sparseness just because the lack of
adequate and enough examples. Changing the set of
classes could be a solution to enrich training corpora
with many more examples Another option seems to
be incorporating more semantic information.
159
Base Level Concepts (BLC) are concepts that are
representative for a set of other concepts. A simple
method for automatically selecting BLC from WN
based on the hypernym hierarchy and the number of
stored relationships between synsets have been used
to define features for training a supervised system.
Although in our system BLC play a simple role
aiding to the disambiguation just as additional fea-
tures, the good results achieved with such simple
features confirm us that an appropriate set of BLC
will be a better semantic discriminator than senses
or even sense-clusters.
References
E. Agirre, I. Aldezabal, and E. Pociello. 2003. A pi-
lot study of english selectional preferences and their
cross-lingual compatibility with basque. In Procee-
dings of the International Conference on Text Speech
and Dialogue (TSD?2003), CeskBudojovice, Czech
Republic.
J. Atserias, L. Villarejo, G. Rigau, E. Agirre, J. Carroll,
B. Magnini, and P. Vossen. 2004. The meaning mul-
tilingual central repository. In Proceedings of Global
WordNet Conference (GWC?04), Brno, Czech Repu-
blic.
M. Ciaramita and Y. Altun. 2006. Broad-coverage
sense disambiguation and information extraction with
a supersense sequence tagger. In Proceedings of the
Conference on Empirical Methods in Natural Lan-
guage Processing (EMNLP?06), pages 594?602, Syd-
ney, Australia. ACL.
M. Ciaramita and M. Johnson. 2003. Supersense tagging
of unknown nouns in wordnet. In Proceedings of the
Conference on Empirical methods in natural language
processing (EMNLP?03), pages 168?175. ACL.
J. Curran. 2005. Supersense tagging of unknown nouns
using semantic similarity. In Proceedings of the 43rd
Annual Meeting on Association for Computational
Linguistics (ACL?05), pages 26?33. ACL.
C. Fellbaum, editor. 1998. WordNet. An Electronic Lexi-
cal Database. The MIT Press.
M. Hearst and H. Schu?tze. 1993. Customizing a lexicon
to better suit a computational task. In Proceedingns
of the ACL SIGLEX Workshop on Lexical Acquisition,
Stuttgart, Germany.
Thorsten Joachims. 2002. Learning to Classify Text
Using Support Vector Machines. Kluwer Academic
Publishers.
B. Magnini and G. Cavaglia. 2000. Integrating subject
fields codes into wordnet. In Proceedings of the Se-
cond International Conference on Language Resour-
ces and Evaluation (LREC?00).
R. Mihalcea and D. Moldovan. 2001. Automatic ge-
neration of coarse grained wordnet. In Proceding of
the NAACL workshop on WordNet and Other Lexical
Resources: Applications, Extensions and Customiza-
tions, Pittsburg, USA.
I. Niles and A. Pease. 2001. Towards a standard up-
per ontology. In Proceedings of the 2nd International
Conference on Formal Ontology in Information Sys-
tems (FOIS-2001), pages 17?19. Chris Welty and Ba-
rry Smith, eds.
W. Peters, I. Peters, and P. Vossen. 1998. Automatic
sense clustering in eurowordnet. In First Internatio-
nal Conference on Language Resources and Evalua-
tion (LREC?98), Granada, Spain.
E. Rosch. 1977. Human categorisation. Studies in
Cross-Cultural Psychology, I(1):1?49.
Helmut Schmid. 1994. Probabilistic part-of-speech tag-
ging using decision trees. In Proceedings of NemLap-
94, pages 44?49, Manchester, England.
F. Segond, A. Schiller, G. Greffenstette, and J. Chanod.
1997. An experiment in semantic tagging using hid-
den markov model tagging. In ACL Workshop on Au-
tomatic Information Extraction and Building of Lexi-
cal Semantic Resources for NLP Applications, pages
78?81. ACL, New Brunswick, New Jersey.
L. Villarejo, L. Ma`rquez, and G. Rigau. 2005. Explo-
ring the construction of semantic class classifiers for
wsd. In Proceedings of the 21th Annual Meeting of
Sociedad Espaola para el Procesamiento del Lenguaje
Natural SEPLN?05, pages 195?202, Granada, Spain,
September. ISSN 1136-5948.
P. Vossen, L. Bloksma, H. Rodriguez, S. Climent, N. Cal-
zolari, A. Roventini, F. Bertagna, A. Alonge, and
W. Peters. 1998. The eurowordnet base concepts and
top ontology. Technical report, Paris, France, France.
160
Proceedings of the 5th International Workshop on Semantic Evaluation, ACL 2010, pages 402?406,
Uppsala, Sweden, 15-16 July 2010.
c?2010 Association for Computational Linguistics
GPLSI-IXA: Using Semantic Classes to Acquire Monosemous Training
Examples from Domain Texts
Rub
?
en Izquierdo & Armando Su
?
arez
GPLSI Group
University of Alicante. Spain
{ruben,armando}@dlsi.ua.es
German Rigau
IXA NLP Group.
EHU. Donostia, Spain
german.rigau@ehu.es
Abstract
This paper summarizes our participation
in task #17 of SemEval?2 (All?words
WSD on a specific domain) using a su-
pervised class-based Word Sense Disam-
biguation system. Basically, we use Sup-
port Vector Machines (SVM) as learning
algorithm and a set of simple features to
build three different models. Each model
considers a different training corpus: Sem-
Cor (SC), examples from monosemous
words extracted automatically from back-
ground data (BG), and both SC and
BG (SCBG). Our system explodes the
monosemous words appearing as mem-
bers of a particular WordNet semantic
class to automatically acquire class-based
annotated examples from the domain text.
We use the class-based examples gathered
from the domain corpus to adapt our tra-
ditional system trained on SemCor. The
evaluation reveal that the best results are
achieved training with SemCor and the
background examples from monosemous
words, obtaining results above the first
sense baseline and the fifth best position
in the competition rank.
1 Introduction
As empirically demonstrated by the last SensEval
and SemEval exercises, assigning the appropriate
meaning to words in context has resisted all at-
tempts to be successfully addressed. In fact, super-
vised word-based WSD systems are very depen-
dent of the corpora used for training and testing
the system (Escudero et al, 2000). One possible
reason could be the use of inappropriate level of
abstraction.
Most supervised systems simply model each
polysemous word as a classification problem
where each class corresponds to a particular synset
of the word. But, WordNet (WN) has been widely
criticized for being a sense repository that often
provides too fine?grained sense distinctions for
higher level applications like Machine Translation
or Question & Answering. In fact, WSD at this
level of granularity has resisted all attempts of in-
ferring robust broad-coverage models. It seems
that many word?sense distinctions are too subtle
to be captured by automatic systems with the cur-
rent small volumes of word?sense annotated ex-
amples.
Thus, some research has been focused on deriv-
ing different word-sense groupings to overcome
the fine?grained distinctions of WN (Hearst and
Sch?utze, 1993), (Peters et al, 1998), (Mihalcea
and Moldovan, 2001), (Agirre and LopezDeLa-
Calle, 2003), (Navigli, 2006) and (Snow et al,
2007). That is, they provide methods for grouping
senses of the same word, thus producing coarser
word sense groupings for better disambiguation.
In contrast, some research have been focused on
using predefined sets of sense-groupings for learn-
ing class-based classifiers for WSD (Segond et al,
1997), (Ciaramita and Johnson, 2003), (Villarejo
et al, 2005), (Curran, 2005), (Kohomban and Lee,
2005) and (Ciaramita and Altun, 2006). That is,
grouping senses of different words into the same
explicit and comprehensive semantic class. Most
of the later approaches used the original Lexico-
graphical Files of WN (more recently called Su-
perSenses) as very coarse?grained sense distinc-
tions.
We suspect that selecting the appropriate level
of abstraction could be on between both levels.
Thus, we use the semantic classes modeled by the
Basic Level Concepts
1
(BLC) (Izquierdo et al,
2007). Our previous research using BLC empiri-
cally demonstrated that this automatically derived
1
http://adimen.si.ehu.es/web/BLC
402
set of meanings groups senses into an adequate
level of abstraction in order to perform class-based
Word Sense Disambiguation (WSD) (Izquierdo et
al., 2009). Now, we also show that class-based
WSD allows to successfully incorporate monose-
mous examples from the domain text. In fact,
the robustness of our class-based WSD approach
is shown by our system that just uses the Sem-
Cor examples (SC). It performs without any kind
of domain adaptation as the Most Frequent Sense
(MFS) baseline.
This paper describes our participation in
SemEval-2010 Task 17 (Agirre et al, 2010). In
section 2 semantic classes used and selection al-
gorithm used to obtain them automatically from
WordNet are described. In section 3 the technique
employed to extract monosemous examples from
background data is described. Section 4 explains
the general approach of our system, and the ex-
periments designed, and finally, in section 5, the
results and some analysis are shown.
2 Semantic Classes
The set of semantic classes used in this work are
the Basic Level Concepts
2
(BLC) (Izquierdo et
al., 2007). These concepts are small sets of mean-
ings representing the whole nominal and verbal
part of WN. BLC can be obtained by a very simple
method that uses basic structural WordNet proper-
ties. In fact, the algorithm only considers the rel-
ative number of relations of each synset alng the
hypernymy chain. The process follows a bottom-
up approach using the chain of hypernymy rela-
tions. For each synset in WN, the process selects
as its BLC the first local maximum according to
the relative number of relations. The local maxi-
mum is the synset in the hypernymy chain having
more relations than its immediate hyponym and
immediate hypernym. For synsets having multi-
ple hypernyms, the path having the local maxi-
mum with higher number of relations is selected.
Usually, this process finishes having a number of
preliminary BLC. Figure 1 shows an example of
selection of a BLC. The figure represents the hy-
pernymy hierarchy of WordNet, with circles rep-
resenting synsets, and links between them repre-
senting hypernym relations. The algorithm selects
the D synset as BLC for J, due to D is the first
maximum in the hypernymy chain, according to
the number of relations (F has 2 hyponyms, D has
2
http://adimen.si.ehu.es/web/BLC
3, and A has 2, so D is the first maximum).
I
D
G H
C
A
J
F
2
3
2
B
E
2
B L C
S y n s e t
Figure 1: Example of BLC selection
Obviously, while ascending through this chain,
more synsets are subsumed by each concept. The
process finishes checking if the number of con-
cepts subsumed by the preliminary list of BLC is
higher than a certain threshold. For those BLC
not representing enough concepts according to the
threshold, the process selects the next local max-
imum following the hypernymy hierarchy. Thus,
depending on the type of relations considered to
be counted and the threshold established, different
sets of BLC can be easily obtained for each WN
version.
We have selected the set which considers WN
version 3.0, the total number of relations per
synset, and a minimum threshold of 20 concepts to
filter out not representative BLC (BLC?20). This
set has shown to reach good performance on previ-
ous SensEval and SemEval exercices (Izquierdo et
al., 2009). There are 649 different BLC for nouns
on WordNet 3.0, and 616 for verbs. Table 2 shows
the three most frequent BLC per POS, with the
number of synsets subsumed by each concept, and
its WordNet gloss.
3 Using Monosemous Examples from the
Domain
We did not applied any kind of specific domain
adaptation technique to our class-based supervised
system. In order to adapt our supervised system to
the environmental domain we only increased the
training data with new examples of the domain. To
acquire these examples, we used the environmen-
tal domain background documents provided by the
organizers. Specifically, we used the 122 back-
403
PoS Num. BLC Gloss
Nouns
4.792 person.n.01 a human being
1.935 activity.n.01 any specific behavior
1.846 act.n.02 something that people do or cause to happen
Verbs
1.541 change.v.01 cause to change; make different; cause a transformation
1.085 change.v.02 undergo a change; become different in essence; losing one?s or its original na-
ture
519 move.v.02 cause to move or shift into a new position or place, both in a concrete and in an
abstract sense
Table 1: Most frequent BLC?20 semantic classes on WordNet 3.0
ground documents
3
. TreeTagger has been used
to preprocess the documents, performing PoS tag-
ging and lemmatization. Since the background
documents are not semantically annotated, and our
supervised system needs labeled data, we have se-
lected only the monosemous words occurring in
the documents. In this way, we have obtained au-
tomatically a large set of examples annotated with
BLC. Table 3 presents the total number of training
examples extracted from SemCor (SC) and from
the background documents (BG). As expected, by
this method a large number of monosemous ex-
amples can be obtained for nouns and verbs. Also
as expected, verbs are much less productive than
nouns. However, all these background examples
correspond to a reduced set of 7,646 monosemous
words.
Nouns Verbs N+V
SC 87.978 48.267 136.245
BG 193.536 10.821 204.357
Total 281.514 59.088 340.602
Table 2: Number of training examples
Table 3 lists the ten most frequent monosemous
nouns and verbs occurring in the background doc-
uments. Note that all these examples are monose-
mous according to BLC?20 semantic classes.
Nouns Verbs
Lemma # ex. Lemma # ex.
1 biodiversity 7.476 monitor 788
2 habitat 7.206 achieve 784
3 specie 7.067 target 484
4 climate 3.539 select 345
5 european 2.818 enable 334
6 ecosystem 2.669 seem 287
7 river 2.420 pine 281
8 grassland 2.303 evaluate 246
9 datum 2.276 explore 200
10 directive 2.197 believe 172
Table 3: Most frequent monosemic words in BG
3
We used the documents contained on the trial data and
the background.
4 System Overview
Our system applies a supervised machine learn-
ing approach. We apply a feature extractor to
represent the training examples of the examples
acquired from SemCor and the background doc-
uments. Then, a machine learning engine uses
the annotated examples to train a set of classi-
fiers. Support Vector Machines (SVM) have been
proven to be robust and very competitive in many
NLP tasks, and in WSD in particular (M`arquez et
al., 2006). We used the SVM-Light implementa-
tion
4
(Joachims, 1998).
We create a classifier for each semantic class.
This approach has several advantages compared to
word?based approach. The training data per clas-
sifier is increased (we can use examples of dif-
ferent target words for a single classifier, when-
ever all examples belong to the same semantic
class), the polysemy is reduced (some different
word senses can be collapsed into the same se-
mantic class), and, finally, semantic classes pro-
vide higher levels of abstraction.
For each polysemous word occurring in the test
corpus, we obtain its potential BLC?20 classes.
Then, we only apply the classifiers corresponding
to the BLC-20 classes of the polysemous word. Fi-
nally, our system simply selects the BLC?20 class
with the greater prediction.
In order to obtain the correct WordNet 3.0
synset required by the task, we apply a simple
heuristic that has shown to be robust and accurate
(Kohomban and Lee, 2005). Our classifiers ob-
tain first the semantic class, and then, the synset of
the first WordNet sense that fits with the semantic
class is assigned to the word.
We selected a simple feature set widely used in
many WSD systems. In particular, we use a win-
dow of five tokens around the target word to ex-
tract word forms, lemmas; bigrams and trigrams
of word forms and lemmas; trigrams of PoS tags,
4
http://svmlight.joachims.org
404
and also the most frequent BLC?20 semantic class
of the target word in the training corpus.
Our system is fully described in (Izquierdo et
al., 2009). The novelty introduced here is the use
of semantic classes to obtain monosemous exam-
ples from the domain corpus.
Following the same framework (BLC?20 se-
mantic architecture and basic set of features) we
designed three runs, each one using a different
training corpus.
? SC: only training examples extracted from
SemCor
? BG: only monosemous examples extracted
from the background data
? SCBG: training examples extracted from
SemCor and monosemous background data
The first run shows the behavior of a supervised
system trained on a general corpus, and tested in a
specific domain. The second one analyzes the con-
tribution of the monosemous examples extracted
from the background data. Finally, the third run
studies the robustness of the approach when com-
bining the training examples from SemCor and
from the background.
5 Results and Discussion
A total of 29 runs has been submitted for the En-
glish All?words WSD on a Specific Domain. Ta-
ble 5 shows the ranking results of our three runs
with respect to the other participants. The figures
for the first sense (1sense) and random sense (Ran-
dom) baselines are included.
In general, the results obtained are not very
high. The best system only achieves a precision of
0.570, and the first sense baseline reaches a preci-
sion of 0.505. This shows that the task is hard to
solve, and the domain adaptation of WSD systems
is not an easy task.
Interestingly, our worst result is obtained by the
system using only the monosemous background
examples (BG). This system ranks 23th with a Pre-
cision and Recall of 0.380 (0.385 for nouns and
0.366 for verbs). The system using only SemCor
(SC) ranks 6th with Precision and Recall of 0.505
(0.527 for nouns and 0.443 for verbs). This is also
the performance of the first sense baseline. As ex-
pected, the best result of our three runs is obtained
when combining the examples from SemCor and
the background (SCBG). This supervised system
obtains the 5th position with a Precision and Re-
call of 0.513 (0.534 for nouns, 0.454 for verbs)
which is slightly above the baseline.
Rank Precision Recall
1 0.570 0.555
2 0.554 0.540
3 0.534 0.528
4 0.522 0.516
(SCBG) 5 0.513 0.513
1sense 0.505 0.505
(SC) 6 0.505 0.505
7 0.512 0.495
8 0.506 0.493
9 0.504 0.491
10 0.481 0.481
11 0.492 0.479
12 0.461 0.460
13 0.447 0.441
14 0.436 0.435
15 0.440 0.434
16 0.496 0.433
17 0.498 0.432
18 0.433 0.431
19 0.426 0.425
20 0.424 0.422
21 0.437 0.392
22 0.384 0.384
(BG) 23 0.380 0.380
24 0.381 0.356
25 0.351 0.350
26 0.370 0.345
27 0.328 0.322
28 0.321 0.315
29 0.312 0.303
Random 0.230 0.230
Table 4: Results of task#17
Possibly, the reason of low performance of the
BG system is the high correlation between the fea-
tures of the target word and its semantic class. In
this case, these features correspond to the monose-
mous word while when testing corresponds to the
target word. However, it also seems that class-
based systems are robust enough to incorporate
large sets of monosemous examples from the do-
main text. In fact, to our knowledge, this is the first
time that a supervised WSD algorithm have been
successfully adapted to an specific domain. Fur-
thermore, our system trained only on SemCor also
achieves a good performance, reaching the first
sense baseline, showing that class-based WSD ap-
proaches seem to be robust to domain variations.
Acknowledgments
This paper has been supported by the Euro-
pean Union under the project KYOTO (FP7 ICT-
211423), the Valencian Region Government un-
der PROMETEO project for excellence groups
and the Spanish Government under the projects
405
KNOW2 (TIN2009-14715-C04-04) and TEXT-
MESS-2 (TIN2009-13391-C04-04).
References
E. Agirre and O. LopezDeLaCalle. 2003. Clustering
wordnet word senses. In Proceedings of RANLP?03,
Borovets, Bulgaria.
Eneko Agirre, Oier Lopez de Lacalle, Christiane Fell-
baum, Shu kai Hsieh, Maurizio Tesconi, Mon-
ica Monachini, Piek Vossen, and Roxanne Segers.
2010. Semeval-2010 task 17: All-words word sense
disambiguation on a specific domain. In Proceed-
ings of the 5th International Workshop on Semantic
Evaluations (SemEval-2010), Association for Com-
putational Linguistics.
M. Ciaramita and Y. Altun. 2006. Broad-coverage
sense disambiguation and information extraction
with a supersense sequence tagger. In Proceedings
of the Conference on Empirical Methods in Natural
Language Processing (EMNLP?06), pages 594?602,
Sydney, Australia. ACL.
M. Ciaramita and M. Johnson. 2003. Supersense tag-
ging of unknown nouns in wordnet. In Proceedings
of the Conference on Empirical methods in natural
language processing (EMNLP?03), pages 168?175.
ACL.
J. Curran. 2005. Supersense tagging of unknown
nouns using semantic similarity. In Proceedings of
the 43rd Annual Meeting on Association for Compu-
tational Linguistics (ACL?05), pages 26?33. ACL.
G. Escudero, L. M`arquez, and G. Rigau. 2000. An
Empirical Study of the Domain Dependence of Su-
pervised Word Sense Disambiguation Systems. In
Proceedings of the joint SIGDAT Conference on Em-
pirical Methods in Natural Language Processing
and Very Large Corpora, EMNLP/VLC, Hong Kong,
China.
M. Hearst and H. Sch?utze. 1993. Customizing a lexi-
con to better suit a computational task. In Proceed-
ingns of the ACL SIGLEX Workshop on Lexical Ac-
quisition, Stuttgart, Germany.
R. Izquierdo, A. Suarez, and G. Rigau. 2007. Explor-
ing the automatic selection of basic level concepts.
In Galia Angelova et al, editor, International Con-
ference Recent Advances in Natural Language Pro-
cessing, pages 298?302, Borovets, Bulgaria.
Rub?en Izquierdo, Armando Su?arez, and German Rigau.
2009. An empirical study on class-based word sense
disambiguation. In Proceedings of the 12th Con-
ference of the European Chapter of the ACL (EACL
2009), pages 389?397, Athens, Greece, March. As-
sociation for Computational Linguistics.
T. Joachims. 1998. Text categorization with sup-
port vector machines: learning with many relevant
features. In Claire N?edellec and C?eline Rouveirol,
editors, Proceedings of ECML-98, 10th European
Conference on Machine Learning, pages 137?142,
Chemnitz, DE. Springer Verlag, Heidelberg, DE.
Upali S. Kohomban and Wee Sun Lee. 2005. Learning
semantic classes for word sense disambiguation. In
ACL ?05: Proceedings of the 43rd Annual Meeting
on Association for Computational Linguistics, pages
34?41, Morristown, NJ, USA. Association for Com-
putational Linguistics.
Ll. M`arquez, G. Escudero, D. Mart??nez, and G. Rigau.
2006. Supervised corpus-based methods for wsd. In
E. Agirre and P. Edmonds (Eds.) Word Sense Disam-
biguation: Algorithms and applications., volume 33
of Text, Speech and Language Technology. Springer.
R. Mihalcea and D. Moldovan. 2001. Automatic gen-
eration of coarse grained wordnet. In Proceding of
the NAACL workshop on WordNet and Other Lex-
ical Resources: Applications, Extensions and Cus-
tomizations, Pittsburg, USA.
R. Navigli. 2006. Meaningful clustering of senses
helps boost word sense disambiguation perfor-
mance. In ACL-44: Proceedings of the 21st Inter-
national Conference on Computational Linguistics
and the 44th annual meeting of the Association for
Computational Linguistics, pages 105?112, Morris-
town, NJ, USA. Association for Computational Lin-
guistics.
W. Peters, I. Peters, and P. Vossen. 1998. Automatic
sense clustering in eurowordnet. In First Interna-
tional Conference on Language Resources and Eval-
uation (LREC?98), Granada, Spain.
F. Segond, A. Schiller, G. Greffenstette, and J. Chanod.
1997. An experiment in semantic tagging using hid-
den markov model tagging. In ACL Workshop on
Automatic Information Extraction and Building of
Lexical Semantic Resources for NLP Applications,
pages 78?81. ACL, New Brunswick, New Jersey.
R. Snow, Prakash S., Jurafsky D., and Ng A. 2007.
Learning to merge word senses. In Proceedings of
Joint Conference on Empirical Methods in Natural
Language Processing and Computational Natural
Language Learning (EMNLP-CoNLL), pages 1005?
1014.
L. Villarejo, L. M`arquez, and G. Rigau. 2005. Ex-
ploring the construction of semantic class classi-
fiers for wsd. In Proceedings of the 21th Annual
Meeting of Sociedad Espaola para el Procesamiento
del Lenguaje Natural SEPLN?05, pages 195?202,
Granada, Spain, September. ISSN 1136-5948.
406
