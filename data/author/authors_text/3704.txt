Proceedings of the ACL Workshop on Building and Using Parallel Texts, pages 87?90,
Ann Arbor, June 2005. c?Association for Computational Linguistics, 2005
Symmetric Probabilistic Alignment
Ralf D. Brown Jae Dong Kim Peter J. Jansen Jaime G. Carbonell
Language Technologies Institute
Carnegie Mellon University
Pittsburgh, PA 15213
{ralf,jdkim,pjj,jgc}@cs.cmu.edu
Abstract
We recently decided to develop a new
alignment algorithm for the purpose
of improving our Example-Based Ma-
chine Translation (EBMT) system?s per-
formance, since subsentential alignment is
critical in locating the correct translation
for a matched fragment of the input. Un-
like most algorithms in the literature, this
new Symmetric Probabilistic Alignment
(SPA) algorithm treats the source and tar-
get languages in a symmetric fashion.
In this short paper, we outline our basic
algorithm and some extensions for using
context and positional information, and
compare its alignment accuracy on the
Romanian-English data for the shared task
with IBM Model 4 and the reported results
from the prior workshop.
1 Symmetric Probabilistic Alignment
(SPA)
In subsentential alignment, mappings are produced
from words or phrases in the source language sen-
tence and those words or phrases in the target lan-
guage sentence that best express their meaning.
An alignment algorithm takes as input a bilingual
corpus consisting of corresponding sentence pairs
and strives to find the best possible alignment in the
second for selected n-grams (sequences of n words)
in the first language. The alignments are based on
a number of factors, including a bilingual dictionary
(preferably a probabilistic one), the position of the
words, invariants such as numbers and punctuation,
and so forth.
For our baseline algorithm, we make the follow-
ing simplifying assumptions, each of which we in-
tend to relax in future work, and the last of which
has already been partially relaxed:
1. A fixed bilingual probabilistic dictionary is
available.
2. Fragments (word sequences) are translated in-
dependently of surrounding context.
3. Contiguous fragments of source language text
are translated into contiguous fragments in the
target language text.
Unlike the work of (Marcu and Wong, 2002),
our alignment algorithm is not generative and does
not use the idea of a bag of concepts from which
the phrases in the sentence pair arise. It is, rather,
intended to find the corresponding target-language
phrase given a specific source-language phrase of in-
terest, as required by our EBMT system after find-
ing a match between the input and the training data
(Brown, 2004).
1.1 Baseline Algorithm
Our baseline algorithm is based on maximizing the
probability of bi-directional translations of individ-
ual words between a selected n-gram in the source
language and every possible n-gram in the corre-
sponding paired target language sentence. No posi-
tional preference assumptions are made, nor are any
length preservation assumptions made. That is, an
n-gram may translate to an m-gram, for any val-
ues of n or m bounded by the source and target
sentence lengths, respectively. Finally a smooth-
ing factor is used to avoid singularities (i.e. avoid-
ing zero-probabilities for unknown words, or words
never translated before in a way consistent with the
dictionary).
87
Given a source-language sentence
S1 : s0, s1, ..., si, ..., si+k, ..., sn (1)
in the bilingual corpus, where si, ..., si+k is a phrase
of interest, and the corresponding target language
sentence S2 is
S2 : t0, t1, ..., tj , ..., tj+l, ..., tm (2)
the values of j and l are to be determined.
Then the segment we try to obtain is the target
fragment F?T with the highest probability of all pos-
sible fragments of S2 to be a mutual translation with
the given source fragment, or
F?T = argmax{FT } (p(si, ..., si+k ? tj, ..., tj+l))
(3)
All possible segments can be checked in O(m2)
time, where m is the target language length, because
we will check m 1-word segments, m? 1 two-word
segments, and so on. If we bound the target language
n-grams to a maximal length k, then the complexity
is linear, i.e. O(km).
The score of the best possible alignment is com-
puted as follows: Let LT be the Target Language
Vocabulary, s a source word, ti be target segment
words, and V = {ti ? {LT }|i ? 1} the translation
word set of s,
We define the translation relation probability
p(Tr(s) ? {t0, t1, ..., tk}) as follows:
1. p(Tr(s) ? {t0, t1, ..., tk}) = max(p(ti|s))
for all ti ? {t0, t1, ..., tk} when {ti|ti ?
{t0, t1, ..., tk}} is not empty.
2. p(Tr(s) ? {t0, t1, ..., tk}) = 0 otherwise.
Then the score of the best alignment is
SF?T = max{FT }
SFT (4)
where the score can be written as two components
SFT = P1 ? P2 (5)
which can be further specified as
P1 =
( k
?
m=0
max (p (Tr(si+m) ? {tj...j+l}) , ?)
)
1
k+1
(6)
P2 =
( l
?
n=0
max (p (Tr(tj+n) ? {si...i+k}) , ?)
)
1
l+1
(7)
where ? is a very small probability used as a smooth-
ing value.
1.2 Length Penalty
The ratio between source and target segment (n-
gram) lengths should be comparable to the ratio be-
tween the lengths of the source and target sentences,
though certainly variation is possible. Therefore, we
add a penalty function to the alignment probability
that increases with the discrepancy between the two
ratios.
Let the length of the source language segment be
i and the length of a target language segment under
consideration be j. Given a source language sen-
tence length of n (in the corpus sentence containing
the fragment) and its corresponding target language
length of m. The expected target segment length is
then given by j? = i? mn . Further defining an allow-
able difference AD, our implementation calculates
the length penalty LP as follows, with the value of
the exponent determined empirically:
LPFT = min
?
?
(
|j ? j?|
AD
)4
, 1
?
? (8)
The score for a segment including the penalty func-
tion is then:
SFT ? SFT ? (1? LPFT ) (9)
Note that, as intended, the score is forced to 0 when
the length difference |j ? j?| > AD.
1.3 Distortion Penalty
For closely-related language pairs which tend to
have similar word orders, we introduce a distortion
penalty to penalize the alignment score of any can-
didate target fragment which is out of the expected
position range. First, we calculate CE , the expected
center of the candidate target fragment using CFS ,
the center of the source fragment and the ratio of
target- to source-sentence length.
CE = CFS ?
m
n (10)
88
Then we calculate an allowed distance limit of the
center Dallowed using a constant distance limit value
DL and the ratio of actual target sentence length to
average target sentence length.
Dallowed = DL ?
m
maverage
(11)
Let Dactual be the actual distance difference be-
tween the candidate target fragment?s center and the
expected center, and set
SFT ?
?
?
?
0, ifDactual ? Dallowed
SFT
(Dactual?Dallowed+1)2 , otherwise
(12)
Furthermore, we think that we can apply this
penalty to language pairs which have lower word-
order similarities than e.g. French-English. Because
there might exist certain positional relationships be-
tween such language pairs, if we can calculate the
expected position using each language?s sentence
structure, we can apply a distortion penalty to the
candidate alignments.
1.4 Anchor Context
If the adjacent words of the source fragment and the
candidate target fragment are translations of each
other, we expect that this alignment is more likely
to be correct. We boost SFT with the anchor context
alignment score SACp ,
SACp = P (si?1 ? tj?1) ? P (si+k ? tj+l) (13)
SFT ? (SFT )? ? (SACp)1?? (14)
Empirically, we found this combination gives the
best score for French-English when ? = 0.6 and
for Romanian-English when ? = 0.8, and leads to
better results than the similar formula
SFT ? ? ? SFT + (1? ?) ? SACp (15)
2 Experimental Design
In previous work (Kim et al, 2005), we tested our
alignment method on a set of French-English sen-
tence pairs taken from the Canadian Hansard corpus
and on a set of English-Chinese sentence pairs, and
compared the results to human alignments. For the
present workshop, we chose to use the Romanian-
English data which had been made available.
Due to a lack of time prior to the period of the
shared task, we merely re-used the parameters which
had been tuned for French-English, rather than tun-
ing the alignment parameters specifically for the de-
velopment data.
SPA was run under three experimental conditions.
In the first, labeled ?SPA (c)? in Tables 1 and 2, SPA
was instructed to examine only contiguous target
phrases as potential alignments for a given source
phrase. In the second, labeled ?SPA (n)?, a noncon-
tiguous target algnment consisting of two contigu-
ous segments with a gap between them was permit-
ted in addition to contiguous target algnments. The
third condition (?SPA (h)?) examined the impact of
a small amount of manual alignment information on
the selection of contiguous alignments. Unlike the
first two conditions, the presence of additional data
beyond the training corpus forces SPA(h) into the
Unlimited Resources track.
We had a native Romanian speaker hand-align
204 sentence pairs from the training corpus, and
extracted 732 distinct translation pairs from those
alignments, of which 450 were already present in
the automatically-generated dictionaries. The new
translation pairs were added to the dictionaries for
the SPA(h) condition and the translation probabili-
ties for the existing pairs were increased to reflect
the increased confidence in their correctness. Had
more time been available, we would have investi-
gated more sophisticated means of integrating the
human knowledge into the translation dictionaries.
3 Results and Conclusions
Table 1 compares the performance of SPA on what
is now the development data against the submissions
with the best AER values reported by (Mihalcea
and Pedersen, 2003) for the participants in the 2003
workshop, including CMU, MITRE, RALI, Univer-
sity of Alberta, and XRCE 1. As SPA generates only
SURE alignments, the values in Table 1 are SURE
alignments under the NO-NULL-Align scoring con-
dition for all systems except Fourday, which did not
generate SURE alignments.
Despite the fact that SPA was designed specifi-
cally for phrase-to-phrase alignments rather than the
1Citations for individual participants? papers have been
omitted for space reasons; all appear in the same proceedings.
89
Method Prec% Rec% F1% AER
SPA (c) 64.47 62.68 63.56 36.44
SPA (n) 64.38 62.70 63.53 36.47
SPA (h) 64.61 62.55 63.56 36.44
Fourday 52.83 42.86 47.33 52.67
UMD.RE.2 58.29 49.99 53.82 46.61
BiBr 70.65 55.75 62.32 41.39
Ralign 92.00 45.06 60.49 35.24
XRCEnolm 82.65 62.44 71.14 28.86
Table 1: Romanian-English alignment results (De-
velopment Set, NO-NULL-Align)
word-to-word alignments needed for the shared task
and was not tuned for this corpus, its performance is
competitive with the best of the systems previously
used for the shared task. We thus decided to submit
runs for the official 2005 evaluation, whose resulting
scores are shown in Table 2.
On the development set, noncontiguous align-
ments resulted in slightly lower precision than con-
tiguous alignments, which was not unexpected, but
recall does not increase enough to improve F1 or
AER. The modified dictionaries improved preci-
sion slightly, as anticipated, but lowered recall suffi-
ciently to have no net effect on F1 or AER.
The evaluation set proved to be very similar in dif-
ficulty to the development data, resulting in scores
that were very close to those achieved on the dev-test
set. Noncontiguous alignments again proved to have
a very small negative effect on AER resulting from
reduced precision, but this time the altered dictionar-
ies for SPA(h) resulted in a substantial reduction in
recall, considerably harming overall performance.
After the shared task was complete, we performed
some tuning of the alignment parameters for the
Romanian-English development test set, and found
that the French-English-tuned parameters were close
to optimal in performance. The AER on the develop-
ment test set for the SPA(c) contiguous alignments
condition decreased from 36.44% to 36.11% after
the re-tuning.
4 Future Work
Enhancements in the extraction of word-to-word
alignments from what is fundamentally a phrase-to-
phrase alignment algorithm could probably further
Method Prec% Recall% F1% AER%
SPA (c) 64.96 61.34 63.10 36.90
SPA (n) 64.91 61.34 63.07 36.93
SPA (h) 64.60 60.54 62.50 37.50
Table 2: Evaluation results (NO-NULL-Align)
improve results on the Romanian-English data. We
also intend to investigate principled, seamless inte-
gration of manual alignments and dictionaries with
probabilistic ones, since the ad hoc method proved
detrimental. Finally, a more detailed performance
analysis is in order, to determine whether the close
balance of precision and recall is inherent in the bidi-
rectionality of the algorithm or merely coincidence.
5 Acknowledgements
We would like to thank Lucian Vlad Lita for provid-
ing manual alignments.
References
Ralf D. Brown. 2004. A Modified Burrows-Wheeler
Transform for Highly-Scalable Example-Based Trans-
lation. In Machine Translation: From Real Users
to Research, Proceedings of the 6th Conference of
the Association for Machine Translation in the Amer-
icas (AMTA-2004), volume 3265 of Lecture Notes
in Artificial Intelligence, pages 27?36. Springer Ver-
lag, September-October. http://www.cs.cmu.-
edu/?ralf/papers.html.
Jae Dong Kim, Ralf D. Brown, Peter J. Jansen, and
Jaime G. Carbonell. 2005. Symmetric Probabilistic
Alignment for Example-Based Translation. In Pro-
ceedings of the Tenth Workshop of the European Asso-
cation for Machine Translation (EAMT-05), May. (to
appear).
Daniel Marcu and William Wong. 2002. A Phrase-
Based, Joint Probability Model for Statistical Machine
Translation. In Proceedings of the Conference on
Empirical Methods in Natural Language Processing
(EMNLP-2002), July. http://www.isi.edu/-
?marcu/papers.html.
Rada Mihalcea and Ted Pedersen. 2003. An Evalua-
tion Exercise for Word Alignment. In Proceedings of
the HLT-NAACL 2003 Workshop: Building and Using
Parallel Texts: Data Driven Machine Translation and
Beyond, pages 1?10. Association for Computational
Linguistics, May.
90
Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, pages 977?986,
Baltimore, Maryland, USA, June 23-25 2014.
c
?2014 Association for Computational Linguistics
Discourse Complements Lexical Semantics
for Non-factoid Answer Reranking
Peter Jansen and Mihai Surdeanu
University of Arizona
Tucson, AZ, USA
{pajansen,msurdeanu}
@email.arizona.edu
Peter Clark
Allen Institute for Artificial Intelligence
Seattle, WA, USA
peterc@allenai.org
Abstract
We propose a robust answer reranking
model for non-factoid questions that inte-
grates lexical semantics with discourse in-
formation, driven by two representations
of discourse: a shallow representation cen-
tered around discourse markers, and a
deep one based on Rhetorical Structure
Theory. We evaluate the proposed model
on two corpora from different genres and
domains: one from Yahoo! Answers and
one from the biology domain, and two
types of non-factoid questions: manner
and reason. We experimentally demon-
strate that the discourse structure of non-
factoid answers provides information that
is complementary to lexical semantic sim-
ilarity between question and answer, im-
proving performance up to 24% (relative)
over a state-of-the-art model that exploits
lexical semantic similarity alone. We fur-
ther demonstrate excellent domain transfer
of discourse information, suggesting these
discourse features have general utility to
non-factoid question answering.
1 Introduction
Driven by several international evaluations and
workshops such as the Text REtrieval Conference
(TREC)
1
and the Cross Language Evaluation Fo-
rum (CLEF),
2
the task of question answering (QA)
has received considerable attention. However,
most of this effort has focused on factoid questions
rather than more complex non-factoid (NF) ques-
tions, such as manner, reason, or causation ques-
tions. Moreover, the vast majority of QA mod-
els explore only local linguistic structures, such
as syntactic dependencies or semantic role frames,
1
http://trec.nist.gov
2
http://www.clef-initiative.eu
which are generally restricted to individual sen-
tences. This is problematic for NF QA, where
questions are answered not by atomic facts, but
by larger cross-sentence conceptual structures that
convey the desired answers. Thus, to answer NF
questions, one needs a model of what these answer
structures look like.
Driven by this observation, our main hypothe-
sis is that the discourse structure of NF answers
provides complementary information to state-of-
the-art QA models that measure the similarity (ei-
ther lexical and/or semantic) between question and
answer. We propose a novel answer reranking
(AR) model that combines lexical semantics (LS)
with discourse information, driven by two rep-
resentations of discourse: a shallow representa-
tion centered around discourse markers and sur-
face text information, and a deep one based on
the Rhetorical Structure Theory (RST) discourse
framework (Mann and Thompson, 1988). To the
best of our knowledge, this work is the first to
systematically explore within- and cross-sentence
structured discourse features for NF AR. The con-
tributions of this work are:
1. We demonstrate that modeling discourse is
greatly beneficial for NF AR for two types
of NF questions, manner (?how?) and rea-
son (?why?), across two large datasets from
different genres and domains ? one from the
community question-answering (CQA) site
of Yahoo! Answers
3
, and one from a biology
textbook. Our results show statistically sig-
nificant improvements of up to 24% on top of
state-of-the-art LS models (Yih et al, 2013).
2. We demonstrate that both shallow and deep
discourse representations are useful, and, in
general, their combination performs best.
3. We show that discourse-based QA models us-
ing inter-sentence features considerably out-
3
http://answers.yahoo.com
977
perform single-sentence models when an-
swers span multiple sentences.
4. We demonstrate good domain transfer per-
formance between these corpora, suggesting
that answer discourse structures are largely
independent of domain, and thus broadly ap-
plicable to NF QA.
2 Related Work
The body of work on factoid QA is too broad to be
discussed here (see, e.g., the TREC workshops for
an overview). However, in the context of LS, Yih
et al (2013) recently addressed the problem of an-
swer sentence selection and demonstrated that LS
models, including recurrent neural network lan-
guage models (RNNLM), have a higher contribu-
tion to overall performance than exploiting syntac-
tic analysis. We extend this work by showing that
discourse models coupled with LS achieve the best
performance for NF AR.
The related work on NF QA is considerably
more scarce, but several trends are clear. First,
most NF QA approaches tend to use multiple sim-
ilarity models (information retrieval or alignment)
as features in discriminative rerankers (Riezler et
al., 2007; Higashinaka and Isozaki, 2008; Ver-
berne et al, 2010; Surdeanu et al, 2011). Sec-
ond, and more relevant to this work, all these ap-
proaches focus either on bag-of-word representa-
tions or linguistic structures that are restricted to
single sentences (e.g., syntactic dependencies, se-
mantic roles, or standalone discourse cue phrases).
Answering how questions using a single dis-
course marker, by, was previously explored by
Prager et al (2000), who searched for by followed
by a present participle (e.g. by *ing) to elevate an-
swer candidates in a ranking framework. Verberne
et al (2011) extracted 47 cue phrases such as be-
cause from a small collection of web documents,
and used the cosine similarity between an answer
candidate and a bag of words containing these cue
phrases as a single feature in their reranking model
for non-factoid why QA. Extending this, Oh et
al. (2013) built a classifier to identify causal re-
lations using a small set of cue phrases (e.g., be-
cause and is caused by). This classifier was then
used to extract instances of causal relations in an-
swer candidates, which were turned into features
in a reranking model for Japanense why QA.
In terms of discourse parsing, Verberne et al
(2007) conducted an initial evaluation of the util-
ity of RST structures to why QA by evaluating
Figure 1: Architecture of the reranking framework for QA.
performance on a small sample of seven WSJ ar-
ticles drawn from the RST Treebank (Carlson et
al., 2003). They later concluded that while dis-
course parsing appears to be useful for QA, auto-
mated discourse parsing tools are required before
this approach can be tested at scale (Verberne et
al., 2010). Inspired by this previous work and re-
cent work in discourse parsing (Feng and Hirst,
2012), our work is the first to systematically ex-
plore structured discourse features driven by sev-
eral discourse representations, combine discourse
with lexical semantic models, and evaluate these
representations on thousands of questions using
both in-domain and cross-domain experiments.
3 Approach
The proposed answer reranking component is em-
bedded in the QA framework illustrated in Figure
1. This framework functions in two distinct sce-
narios, which use the same AR model, but differ
in the way candidate answers are retrieved:
CQA: In this scenario, the task is defined as
reranking all the user-posted answers for a particu-
lar question to boost the community-selected best
answer to the top position. This is a commonly
used setup in the CQA community (Wang et al,
2009).
4
Thus, for a given question, all its answers
are fetched from the answer collection, and an ini-
tial ranking is constructed based on the cosine sim-
ilarity between theirs and the question?s lemma
vector representations, with lemmas weighted us-
ing tf.idf (Ch. 6, (Manning et al, 2008)).
4
Although most of these works use shallow textual fea-
tures and focus mostly on meta data, e.g., number of votes
for a particular answer. Here we use no meta data and rely
solely on linguistic features.
978
Traditional QA: In this scenario answers are
dynamically constructed from larger docu-
ments (Pasca, 2001). We use this setup to answer
questions from a biology textbook, where each
section is indexed as a standalone document, and
each paragraph in a given document is considered
as a candidate answer. We implemented the docu-
ment indexing and retrieval stage using Lucene
5
.
The candidate answers are scored using a linear
interpolation of two cosine similarity scores:
one between the entire parent document and
question (to model global context), and a second
between the answer candidate and question (for
local context).
6
Because the number of answer
candidates is typically large (e.g., equal to the
number of paragraphs in the textbook), we return
the N top candidates with the highest scores.
These answer candidates are then passed to the
answer reranking component, the focus of this
work. AR analyzes the candidates using more
expensive techniques to extract discourse and LS
features (detailed in ?4), and these features are
then used in concert with a learning framework to
rerank the candidates and elevate correct answers
to higher positions. For the learning framework,
we used SVM
rank
, a variant of Support Vector
Machines for structured output adapted to rank-
ing problems.
7
In addition to these features, each
reranker also includes a single feature containing
the score of each candidate, as computed by the
above candidate retrieval (CR) component.
8
4 Models and Features
We propose two separate discourse representation
schemes ? one shallow, centered around discourse
markers, and one deep, based on RST.
4.1 Discourse Marker Model
The discourse marker model (DMM) extracts
cross-sentence discourse structures centered
around a discourse marker. This extraction pro-
cess is illustrated in the top part of Figure 2. These
structures are represented using three components:
(1) A discourse marker from Daniel Marcu?s list
5
http://lucene.apache.org
6
We empirically observed that this combination of scores
performs better than using solely the cosine similarity be-
tween the answer and question.
7
http://www.cs.cornell.edu/people/tj/
svm_light/svm_rank.html
8
Including these scores as features in the reranker model
is a common strategy that ensures that the reranker takes ad-
vantage of the analysis already performed by the CR model.
(see Appendix B in Marcu (1997)), that serves as
a divisive boundary between sentences. Examples
of these markers include and, in, that, for, if, as,
not, by, and but; (2) two marker arguments, i.e.,
text segments before and after the marker, labeled
to indicate if they are related to the question text or
not; and (3) a sentence range around the marker,
which defines the length of these segments (e.g.,
?2 sentences). For example, a marker feature
may take the form of: QSEG BY OTHER SR2,
which means that the the marker by has been
detected in an answer candidate. Further, the text
preceeding by matches text from the question (and
is therefore labeled QSEG), while the text after by
differs considerably from the question text, and
is labeled OTHER. In this particular example, the
scope of this similarity matching occurs over a
span of ?2 sentences around the marker.
Note that our marker arguments are akin to
EDUs in RST, but, in this shallow representa-
tion, they are simply constructed around discourse
markers and bound by an arbitrary sentence range.
Argument Labels: We label marker arguments
based on their similarity to question content. If
text before or after a marker out to a given sen-
tence range matches the entire text of the ques-
tion (with a cosine similarity score larger than a
threshold), that argument takes on the label QSEG,
or OTHER otherwise. In this way the features are
only partially lexicalized with the discourse mark-
ers. Argument labels indicate only if lemmas from
the question were found in a discourse structure
present in an answer candidate, and do not speak
to the specific lemmas that were found. We show
in ?5 that these lightly lexicalized features perform
well in domain and transfer between domains. We
explore other argument labeling strategies in ?5.7.
Feature Values: Our reranking framework uses
real-valued features. The values of the discourse
features are the mean of the similarity scores (e.g.,
cosine similarity using tf.idf weighting) of the two
marker arguments and the corresponding question.
For example, the value of the QSEG BY QSEG SR1
feature in Figure 2 is the average of the cosine sim-
ilarities of the question text with the answer texts
before/after by out to a distance of one sentence
before/after the marker.
It is important to note that these discourse
features are more expressive than features based
on discourse markers alone (Higashinaka and
Isozaki, 2008; Verberne et al, 2010). First,
979
Figure 2: Top: Example feature generation for the discourse marker model, for one question (Q) and one answer candidate
(AC). Answer candidates are searched for discourse markers (italic) and question word matches (bold), which are used to
generate features both within-sentence (SR0), and ?1 sentence (SR1). The actual DMM exhaustively generates features for all
markers and all sentence ranges. Here we show just a few for brevity. Bottom: Example feature generation for the discourse
parser model using the output of an actual discourse parser. The DPM creates one feature for each individual discourse relation.
the argument sequences used here capture cross-
sentence discourse structures. Second, these fea-
tures model the intensity of the match between the
text surrounding the discourse structure and the
question text using both the assigned argument la-
bels and the feature values.
4.2 Discourse Parser Model
The discourse parser model (DPM) is based on the
RST discourse framework (Mann and Thompson,
1988). In RST, the text is segmented into a se-
quence of non-overlapping fragments called ele-
mentary discourse units (EDUs), and binary dis-
course relations recursively connect neighboring
units. Most relations are hypotactic, where one
of the units in the relation (the nucleus) is consid-
ered more important than the other (the satellite).
A few relations are paratactic, where both partici-
pants have equal importance. In the bottom part of
Figure 2, we show hypotactic relations as directed
arrows, from the nucleus to the satellite. In this
work, we construct the RST discourse trees using
the parser of Feng and Hirst (2012).
Relying on a proper discourse framework facil-
itates the modeling of the numerous implicit re-
lations that are not driven by discourse markers
(see Ch. 21 in Jurafsky and Martin (2009)). How-
ever, this also introduces noise because discourse
analysis is a complex task and discourse parsers
are not perfect. To mitigate this, we used a sim-
ple feature generation strategy, which creates one
feature for each individual discourse relation by
concatenating the relation type with the labels of
the discourse units participating in it. To this end,
for every relation, we extract the entire text dom-
inated by each of its arguments, and we gener-
ate labels for the two participants in the relation
using the same strategy as the DMM (based on
the similarity with the question content). Similar
to the DMM, these features take real values ob-
tained by averaging the cosine similarity of the ar-
guments with the question content.
9
Fig. 2 shows
several such features, created around two RST
Elaboration relations, indicating that the latter
sentences expand on the information at the begin-
ning of the answer. Other common relations in-
clude Attribution, Contrast, Background, and
Evaluation.
4.3 Lexical Semantics Model
Inspired by the work of Yih et al (2013), we in-
clude lexical semantics in our reranking model.
Several of their proposed models rely on propri-
etary data; here we focus on LS models that rely
on open-source data and frameworks. In particu-
lar, we use the recurrent neural network language
model (RNNLM) of Mikolov et al (2013; 2010).
Like any language model, a RNNLM estimates the
probability of observing a word given the preced-
ing context, but, in this process, it learns word
embeddings into a latent, conceptual space with
a fixed number of dimensions. Consequently, re-
lated words tend to have vectors that are close to
each other in this space.
We derive two LS measures from these vec-
tors, which are then are included as features in
the reranker. The first is a measure of the over-
all LS similarity of the question and answer can-
9
We investigated more complex features, e.g., by explor-
ing depths of two and three in the discourse tree, and also
models that relied on tree kernels over these trees, but none
improved upon this simple representation. This suggests that,
in the domains explored here, there is a degree of noise intro-
duced by the discourse parser, and the simple features pro-
posed here are the best strategy to avoid overfitting on it.
980
didate, which is computed as the cosine similarity
between the two composite vectors of the ques-
tion and the answer candidate. These composite
vectors are assembled by summing the vectors for
individual question (or answer candidate) words,
and re-normalizing this composite vector to unit
length. Both this overall similarity score, as well
as the average pairwise cosine similarity between
each word in the question and answer candidate,
serve as features.
5 Experiments
5.1 Data
To test the utility of our approach, we experi-
mented with the two QA scenarios introduced in
?3 using the following two datasets:
Yahoo! Answers Corpus (YA): Yahoo! An-
swers
10
is an open domain community-generated
QA site, with questions and answers that span for-
mal and precise to informal and ambiguous lan-
guage. Due to the speed limitations of the dis-
course parser, we randomly drew 10,000 QA pairs
from the corpus of how questions described by
Surdeanu et al (2011) using their filtering crite-
ria, with the additional criterion that answers had
to contain at least four community-generated an-
swers, one of which was voted as the top answer.
The number of answers to each question ranged
from 4 to over 50, with the average 9.
11
Biology Textbook Corpus (Bio): This corpus fo-
cuses on the domain of cellular biology, and con-
sists of 185 how and 193 why questions hand-
crafted by a domain expert. Each question has
one or more gold answers identified in Campbell?s
Biology (Reece et al, 2011), a popular under-
graduate text. The entire biology text (at para-
graph granularity) serves as the possible set of an-
swers. Note that while our system retrieves an-
swers at paragraph granularity, the expert was not
constrained in any way during the annotation pro-
cess, so gold answers might be smaller than a para-
graph or span multiple paragraphs. This compli-
cates evaluation metrics on this dataset (see ?5.3).
10
http://answers.yahoo.com
11
Note that our experimental setup, i.e., reranking all the
answers provided for each question, is different from that of
Surdeanu et al For each question, they retrieved candidate
answers from all answers voted as best for some question in
the collection. The setup in this paper, commonly used in the
CQA community (Wang et al, 2009), is more relevant here
because it includes both high and low quality answers.
For the YA CQA corpora, 50% of QA pairs
were used for training, 25% for development, and
25% for test. Because of the small size of the
Bio corpus, it was evaluated using 5-fold cross-
validation, with three folds for training, one for
development, and one for test.
The following additional resources were used:
DiscourseMarkers: A set of 75 high-frequency
12
single-word discourse markers were extracted
from Marcu?s (1997) list of cue phrases, and used
for feature generation in DMM. These discourse
markers are extremely common in the answer cor-
pora ? for example, the YA corpus contains an av-
erage of 7 markers per answer.
Discourse Trees: We generated all discourse trees
using the parser of Feng and Hirst (2012). For
YA, we parsed entire answers. For Bio, we parsed
individual paragraphs. Note that, because these
domains are considerably different from the RST
Treebank, the parser fails to produce a tree on
a large number of answer candidates: 6.2% for
YA, and 41.1% for Bio. In these situations, we
constructed artificial discourse trees using a right-
attachment heuristic and a single relation label X.
Lexical Semantics: We trained two different
RNNLMs for this work. First, for the YA exper-
iments we trained an open-domain RNNLM us-
ing the entire Gigaword corpus of approximately
4G words.
13
For the Bio experiments, we trained
a domain specific RNNLM over a concatenation
of the textbook and a subset of Wikipedia spe-
cific to biology. The latter was created by ex-
tracting: (a) pages matching a word/phrase in a
glossary of biology (derived from the textbook);
plus (b) pages hyperlinked from (a) that are also
tagged as being in a small set of (hand-selected)
biology-related categories. The combined dataset
contains 7.7M words. For all RNNLMs we used
200-dimensional vectors.
5.2 Hyper Parameter Tuning
The following hyper parameters were tuned using
grid search to maximize P@1 on each develop-
ment partition: (a) the segment matching thresh-
olds that determine the minimum cosine simi-
larity between an answer segment and a ques-
tion for the segment to be labeled QSEG; and (b)
12
We selected all cue phrases with more than 100 occur-
rences in the Brown corpus.
13
LDC catalog number LDC2012T21
981
P@1 MRR
# Model/Features P@1 Impr. MRR Impr.
YA Corpus
1 Random Baseline 14.29 26.12
2 CR Baseline 19.57 43.14
3 CR + DMM 24.05
?
+23% 46.40
?
+8%
4 CR + DPM 24.29
?
+24% 46.81
?
+9%
5 CR + DMM + DPM 24.81
?
+27% 47.10
?
+9%
6 CR + LS Baseline 26.57 49.31
7 CR + LS + DMM 29.29
?
+10% 50.99
?
+3%
8 CR + LS + DPM 28.73
?
+8% 50.77
?
+3%
9 CR + LS + DMM + DPM 30.49
?
+15% 51.89
?
+5%
Bio HOW
10 CR Baseline 24.12 32.90
11 CR + DMM 29.88
?
+24% 38.88
?
+18%
12 CR + DPM 28.93
?
+20% 37.75
?
+15%
13 CR + DMM + DPM 30.43
?
+26% 39.28
?
+19%
14 CR + LS Baseline 25.35 33.79
15 CR + LS + DMM 30.09
?
+19% 39.04
?
+16%
16 CR + LS + DPM 28.50 +12% 37.58
?
+11%
17 CR + LS + DMM + DPM 30.68
?
+21% 39.44
?
+17%
Bio WHY
18 CR Baseline 28.62 38.25
19 CR + DMM 38.01
?
+33% 46.39
?
+21%
20 CR + DPM 38.62
?
+35% 46.85
?
+23%
21 CR + DMM + DPM 39.36
?
+38% 47.64
?
+25%
22 CR + LS Baseline 31.73 39.89
23 CR + LS + DMM 38.60
?
+22% 46.41
?
+16%
24 CR + LS + DPM 39.45
?
+24% 47.38
?
+19%
25 CR + LS + DMM + DPM 39.32
?
+24% 47.86
?
+20%
Table 1: Overall results across three datasets. The improve-
ments in each section are computed relative to their respective
baseline (CR or CR + LS). Bold font indicates the best score
in a given column.
?
indicates that a score is significantly bet-
ter (p < 0.05) than the score of the corresponding baseline.
All significance tests were implemented using one-tailed non-
parametric bootstrap resampling using 10,000 iterations.
SVM
rank
?s regularization parameter C. For all ex-
periments, the sentence range parameter (SRx) for
DMM ranged from 0 (within sentence) to ?3 sen-
tences.
14
5.3 Evaluation Metrics
For YA, we used the standard implementations for
P@1 and mean reciprocal rank (MRR) (Manning
et al, 2008). In the Bio corpus, because answer
candidates are not guaranteed to match gold anno-
tations exactly, these metrics do not immediately
apply. We adapted them to this dataset by weigh-
ing each answer by its overlap with gold answers,
where overlap is measured as the highest F1 score
between the candidate and a gold answer. Thus,
P@1 reduces to this F1 score for the top answer.
For MRR, we used the rank of the candidate with
the highest overlap score, weighed by the inverse
of the rank. For example, if the best answer for a
question appears at rank 2 with an F1 score of 0.3,
the corresponding MRR score is 0.3/2.
14
This was only limited to reduce the combinatorial expan-
sion of feature generation, and in principle could be set much
broader.
5.4 Overall Results
Table 1 analyzes the performance of the proposed
reranking model on the three datasets and against
two baselines. The first baseline sorts the can-
didate answers in descending order of the scores
produced by the candidate retrieval (CR) module.
The second baseline (CR + LS) trains a rerank-
ing model without discourse, using just the CR
and LS features. For YA, we include an addi-
tional baseline that selects an answer randomly.
We list multiple versions of the proposed rerank-
ing model, broken down by the features used. For
Bio, we retrieved the top 20 answer candidates in
CR. At this setting, the oracle performance (i.e.,
the performance with perfect reranking of the 20
candidates) was 69.6% P@1 for Bio HOW, and
72.3% P@1 for Bio WHY. These relatively low
oracle scores, which serve as a performance ceil-
ing for our approach, highlight the difficulty of the
task. For YA, we used all answers provided for
each given question. For all experiments we used
a linear SVM kernel.
15
Examining Table 1, several trends are clear.
Both discourse models significantly increase both
P@1 and MRR performance over all baselines
broadly across genre, domain, and question types.
More specifically, DMM and DPM show similar
performance benefits when used individually, but
their combination generally outperforms the indi-
vidual models, illustrating the fact that the two
models capture related but different discourse in-
formation. This is a motivating result for discourse
analysis, especially considering that the discourse
parser was trained on a domain different from the
corpora used here.
Lexical semantic features increase performance
for all settings, but demonstrate far more utility
to the open-domain YA corpus. This disparity
is likely due to the difficulty in assembling LS
training data at an appropriate level for the bi-
ology corpus, contrasted with the relative abun-
dance of large scale open-domain lexical seman-
tic resources. For the YA corpus, where lexical
semantics showed the most benefit, simply adding
15
The performance of all models can ultimately be in-
creased by using more sophisticated learning frameworks,
and considering more answer candidates in CR (for Bio).
For example, SVMs with polynomial kernels of degree two
showed approximately half a percent (absolute) performance
gain over the linear kernel. However, this came at the ex-
pense of an experiment runtime about an order of magni-
tude larger. Experiments with more answer candidates in Bio
showed similar trends to the results reported.
982
Q How does myelination affect action potentials?
A
baseline
The major selective advantage of myelination is its space ef-
ficiency. A myelinated axon 20 microns in diameter has a
conduction speed faster than that of a squid giant axon [. . . ].
Furthermore, more than 2,000 of those myelinated axons can
be packed into the space occupied by just one giant axon.
A
rerank
A nerve impulse travels [. . . ] to the synaptic terminals by
propagation of a series action potentials along the axon. The
speed of conduction increases [. . . ] with myelination. Action
potentials in myelinated axons jump between the nodes of
Ranvier, a process called saltatory conduction.
Table 2: An example question from the Biology corpus
where the correct answer is elevated to the top position by
the discourse model. A
baseline
is the top answer proposed by
the CR + LS baseline, which is incorrect, whereas A
rerank
is
the correct answer boosted to the top after reranking. [. . . ]
indicates non-essential text that was removed for space.
LS features to the CR baseline increases baseline
P@1 performance from 19.57 to 26.57, a +36%
relative improvement. Most importantly, compar-
ing lines 5 and 9 with their respective baselines
(lines 2 and 6, respectively) indicates that LS is
largely orthogonal to discourse. Line 5, the top-
performing model with discourse but without LS
outperforms the CR baseline by +5.24 absolute
P@1 improvement. Similarly, line 9, the top-
performing model that combines discourse with
LS has a +5.69 absolute P@1 improvement over
the CR + LS baseline. That this absolute perfor-
mance increase is nearly identical indicates that
LS features are complementary to and additive
with the full discourse model. Indeed, an analy-
sis of the questions improved by discourse vs. LS
(line 5 vs. 6) showed that the intersection of the
two sets is low (approximately a third of each set).
Finally, while the discourse models perform
well for HOW or manner questions, performance
on Bio WHY corpus suggests that reason ques-
tions are particularly amenable to discourse anal-
ysis. Relative improvements on WHY questions
reach +38% (without LS) and +24% (with LS),
with absolute performance on these non-factoid
questions jumping from 28% to nearly 40% P@1.
Table 2 shows one example where discourse
helps boost the correct answer to the top posi-
tion. In this example, the correct answer con-
tains multiple Elaboration relations that are both
cross sentence (e.g., between the first two sen-
tences) and intra-sentence (e.g., between the first
part of the second sentence and the phrase ?with
myelination?). Model features associated with
Elaboration relations are ranked highly by the
learned model. In contrast, the answer preferred
by the baseline contains mostly Joint relations,
Range Bio HOW Bio WHY YA
CR + LS + DMM + DPM
within-sentence +0.8% +8.4% +13.1%
full model +21.0%
?
+23.9%
?
+14.8%
Table 3: Relative P@1 performance increase over the CR
+ LS baseline for a model containing only intra-sentence fea-
tures, compared to the full model.
which ?represent the lack of a rhetorical relation
between the two nuclei? (Mann and Thompson,
1988) and have very small weights in the model.
5.5 Intra vs. Inter-sentence Features
To tease apart the relative contribution of dis-
course features that occur only within a single
sentence versus features that span multiple sen-
tences, we examined the performance of the full
model when using only intra-sentence features,
i.e., SR0 features for DMM, and features based on
discourse relations where both EDUs appear in the
same sentence for DPM, versus the full intersen-
tence models. The results are shown in Table 3.
For the Bio corpus where answer candidates
consist of entire paragraphs of a biology text, over-
all performance is dominated by inter-sentence
discourse features. Conversely, for YA, a large
proportion of performance comes from features
that span only a single sentence. This is caused
by the fact that YA answers are far shorter and
of variable grammatical quality, with 39% of an-
swer candidates consisting of only a single sen-
tence, and 57% containing two or fewer sentences.
All in all, this experiment emphasizes that model-
ing both intra- and inter-sentence discourse (where
available) is beneficial for non-factoid QA.
5.6 Domain Transfer
Because these discourse models appear to cap-
ture high-level information about answer struc-
tures, we hypothesize that the models should make
use of many of the same discourse features, even
when training on data from different domains. Ta-
ble 4 shows that of the highest-weighted SVM
features learned when training models for HOW
questions on YA and Bio, many are shared (e.g.,
56.5% of the features in the top half of both DPMs
are shared), suggesting that a core set of discourse
features may be of utility across domains.
To test the generality of these features, we per-
formed a transfer study where the full model was
trained and tuned on the open-domain YA cor-
pus, then evaluated as is on Bio HOW. This is
983
Model Top 10% Top 25% Top 50%
DMM 20.2% 33.2% 49.4%
DPM 22.2% 39.1% 56.5%
Table 4: Percentage of top features with the highest SVM
weights that are shared between Bio HOW and YA models.
a somewhat radical setup, where the target cor-
pus has both a different genre (formal text vs.
CQA) and different domain (biology vs. open do-
main). These experiments were performed in sev-
eral groups: both with and without LS features, as
well as using either a single SVM or an ensem-
ble model that linearly interpolates the predictions
of two SVM classifiers (one each for DMM and
DPM).
16
The results are summarized in Table 5.
The transferred models always outperform the
baselines, but only the ensemble model?s improve-
ment is statistically significant. This confirms ex-
isting evidence that ensemble models perform bet-
ter cross-domain because they overfit less (Domin-
gos, 2012; Hastie et al, 2009). The ensemble
model without LS (third line) has a nearly identi-
cal P@1 score as the equivalent in-domain model
(line 13 in Table 1), while slightly surpassing in-
domain MRR performance. To the best of our
knowledge, this is one of the most striking demon-
strations of domain transfer in answer ranking
for non-factoid QA, and highlights the generality
of these discourse features in identifying answer
structures across domains and genres.
The results of the transferred models that in-
clude LS features are slightly lower, but still ap-
proach statistical significance for P@1 and are sig-
nificant for MRR. We hypothesize that the limited
transfer observed for models with LS compared to
their counterparts without LS is due to the dispar-
ity in the size and utility of the biology LS training
data compared to the open-domain LS resources.
The open-domain YA model learns to place more
weight on LS features, which are unable to provide
the same utility in the biology domain.
5.7 Integrating Discourse and LS
So far, we have treated LS and discourse as dis-
tinct features in the reranking model, However,
given that LS features greatly improve the CR
baseline, we hypothesize that a natural extension
16
The interpolation parameter was tuned on the YA devel-
opment corpus. The in-domain performance of the ensemble
model is similar to that of the single classifier in both YA and
Bio HOW so we omit these results here for simplicity.
P@1 MRR
Model/Features P@1 Impr. MRR Impr.
Transfer: YA? Bio HOW
CR Baseline 24.12 32.90
CR + DMM + DPM 27.13 +13% 36.36? +11%
(CR + DMM) ? 30.10
?
+25% 39.62
?
+20%
(CR + DPM)
CR + LS Baseline 25.35 33.79
CR + LS + DMM + DPM 25.79 +2% 35.58 +5%
(CR + LS + DMM) ? 29.54? +17% 38.68
?
+15%
(CR + LS + DPM)
Table 5: Transfer performance from YA to Bio HOW for
single classifiers and ensembles (denoted with a ?). ? indi-
cates approaching statistical significance with p = 0.07 or
0.06.
to the discourse models would be to make use of
LS similarity (in addition to the traditional infor-
mation retrieval similarity) to label discourse seg-
ments. For example, for the question ?How do
cells replicate??, answer discourse segments con-
taining LS associates of cell and replicate, e.g., nu-
cleus, membrane, genetic, and duplicate, should
be considered as related to the question (i.e., be
labeled QSEG). We implemented two such mod-
els, denoted DMM
LS
and DPM
LS
, by replacing
the component that assigns argument labels with
one that relies on LS. Specifically, as in ?4.3, we
compute the cosine similarity between the com-
posite LS vectors of the question text and each
marker argument (in DMM) or EDU (in DPM),
and label the corresponding answer segment QSEG
if this score is higher than a threshold, or OTHER
otherwise. This way, the DMM and DPM features
jointly capture discourse structures and semantic
similarity between answer segments and question.
To test this, we use the YA corpus, which has
the best-performing LS model. Because we are
adding two new discourse models, we now tune
four segment matching thresholds, one for each
of the DMM, DPM, DMM
LS
, and DPM
LS
mod-
els.
17
The results are shown in Table 6. These re-
sults demonstrate that incorporating LS in the dis-
course models further increases performance for
all configurations, nearly doubling the relative per-
formance benefits over models that do not inte-
grate LS and discourse (compare with lines 6?9
of Table 1). For example, the last model in the
table, which combines four discourse representa-
tions, improves P@1 by 24%, whereas the equiv-
alent model without this integration (line 9 in Ta-
ble 1) outperforms the baseline by only 15%.
17
These hyperparameters were tuned on the development
corpus, and were found to be stable over broad ranges.
984
P@1 MRR
Model Features P@1 Impr. MRR Impr.
CR + LS Baseline 26.57 49.31
CR + LS + DMM + DMM
LS
32.41
?
+22% 53.55
?
+9%
CR + LS + DPM + DPM
LS
31.21
?
+18% 52.50
?
+7%
CR + LS + DMM + DPM + 32.93
?
+24% 53.91
?
+9%
DMM
LS
+ DPM
LS
Table 6: YA results with integrated discourse and LS.
5.8 Error Analysis
We performed an error analysis of the full QA
model (CR + LS + DMM + DPM) across the en-
tire Bio corpus (lines 17 and 25 from Table 1). We
chose the Bio setup for this analysis because it is
more complex than the CQA one: here gold an-
swers may have a granularity completely differ-
ent from what the system choses as best answers
(in our particular case, the QA system is currently
limited to answers consisting of single paragraphs,
whereas gold answers may be of any size).
Here, 94 of the 378 Bio HOW and WHY ques-
tions have improved answer scores, while 36 have
reduced performance relative to the CR baseline.
Of these 36 questions where answer scores de-
creased, nearly two thirds were directly related to
the paragraph granularity of the candidate answer
retrieval (see ?5.1):
Same Subsection (50%): In these cases, the
model selected an on-topic answer paragraph in
the same subsection of the textbook as a gold an-
swer. Often times this paragraph directly preceded
or followed the gold answer.
Answer Window Size (14%): Here, both the CR
and full model chose a paragraph containing a dif-
ferent gold answer. However, as discussed, gold
answers may unevenly straddle paragraph bound-
aries, and the paragraph chosen by the model hap-
pened to have a somewhat lower overlap with its
gold answer than the one chosen by the baseline.
Similar Topic (25%): The model chose a para-
graph that had a similar topic to the question, but
doesn?t answer the question. These are challeng-
ing errors, often associated with short questions
(e.g. ?How does HIV work??) that provide few
keywords. In these cases, discourse features tend
to dominate, and shift the focus towards answers
that have many discourse structures deemed rel-
evant. For example, for the above question, the
model chose a paragraph containing many dis-
course structures positively correlated with high-
quality answers, but which describes the origins
of HIV instead of how the virus enters a cell.
Similar Words, Different Topic (8%): The
model chose a paragraph that had many of the
same words as the question, but is on a different
topic. For example, for the question ?How are fos-
sil fuels formed, and why do they contain so much
energy??, the model selected an answer that men-
tions fossil fuels in a larger discussion of human
ecological footprints. Here, the matching of both
keywords and discourse structures shifted the an-
swer towards a different, incorrect topic.
Finally, in one case (3%), the model identified
an answer paragraph that contained a gold answer,
but was missed by the domain expert annotator.
In summary, this analysis suggests that, for the
majority of errors, the QA system selects an an-
swer that is both topical and adjacent to a gold an-
swer selected by the domain expert. This suggests
that most errors are minor and are driven by cur-
rent limitations of our answer boundary selection
mechanism, rather than the inherent limitations of
the discourse model.
6 Conclusions
This work focuses on two important aspects of an-
swer reranking for non-factoid QA: similarity be-
tween question and answer content, and answer
structure. While the former has been addressed
with a variety of lexical-semantic models, the lat-
ter has received little attention. Here we show
how to model answer structures using discourse
and how to integrate the two aspects into a holis-
tic framework. Empirically we show that model-
ing answer discourse structures is complementary
to modeling lexical semantic similarity and that
the best performance is obtained when they are
tightly integrated. We evaluate the proposed ap-
proach on multiple genres and question types and
obtain benefits of up to 24% relative improvement
over a strong baseline that combines information
retrieval and lexical semantics. We further demon-
strate that answer discourse structures are largely
independent of domain and transfer well, even be-
tween radically different datasets.
This work is open source and available at:
http://nlp.sista.arizona.edu/releases/
acl2014.
Acknowledgements
We thank the Allen Institute for Artificial Intelli-
gence for funding this work. We would also like
to thank the three anonymous reviewers for their
helpful comments and suggestions.
985
References
Lynn Carlson, Daniel Marcu, and Mary Ellen
Okurowski. 2003. Building a Discourse-Tagged
Corpus in the Framework of Rhetorical Structure
Theory. In Jan van Kuppevelt and Ronnie Smith,
editors, Current Directions in Discourse and Dia-
logue, pages 85?112. Kluwer Academic Publishers.
Pedro Domingos. 2012. A few useful things to know
about machine learning. Communications of the
ACM, 55(10).
Vanessa Wei Feng and Graeme Hirst. 2012. Text-level
discourse parsing with rich linguistic features. In
Proceedings of the Association for Computational
Linguistics.
Trevor Hastie, Robert Tibshirani, and Jerome Fried-
man. 2009. The Elements of Statistical Learn-
ing: Data Mining, Inference, and Prediction, Sec-
ond Edition. Springer.
Ryuichiro Higashinaka and Hideki Isozaki. 2008.
Corpus-based question answering for why-
questions. In Proceedings of the Proceedings of the
Third International Joint Conference on Natural
Language Processing (IJCNLP), pages 418?425,
Hyderabad, India.
Dan Jurafsky and James H. Martin. 2009. Speech
and Language Processing, Second Edition. Prentice
Hall.
William C. Mann and Sandra A. Thompson. 1988.
Rhetorical structure theory: Toward a functional the-
ory of text organization. Text, 8(3):243?281.
Christopher D. Manning, Prabhakar Raghavan, and
Hinrich Sch?utze. 2008. Introduction to Information
Retrieval. Cambridge University Press.
Daniel Marcu. 1997. The Rhetorical Parsing, Summa-
rization, and Generation of Natural Language Texts.
Ph.D. thesis, University of Toronto.
Tomas Mikolov, Martin Karafiat, Lukas Burget, Jan
Cernocky, and Sanjeev Khudanpur. 2010. Recur-
rent neural network based language model. In Pro-
ceedings of the 11th Annual Conference of the In-
ternational Speech Communication Association (IN-
TERSPEECH 2010).
Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey
Dean. 2013. Efficient estimation of word repre-
sentations in vector space. In Proceedings of the
International Conference on Learning Representa-
tions (ICLR).
Jong-Hoon Oh, Kentaro Torisawa, Chikara Hashimoto,
Motoki Sano, Stijn De Saeger, and Kiyonori Ohtake.
2013. Why-question answering using intra- and
inter-sentential causal relations. In Proceedings of
the 51st Annual Meeting of the Association for Com-
putational Linguistics (Volume 1: Long Papers),
pages 1733?1743, Sofia, Bulgaria, August. Associa-
tion for Computational Linguistics.
Marius Pasca. 2001. High-Performance, Open-
Domain Question Answering from Large Text Col-
lections. Ph.D. thesis, Southern Methodist Univer-
sity.
John Prager, Eric Brown, Anni Coden, and Dragomir
Radev. 2000. Question-answering by predictive an-
notation. In Proceedings of the 23rd annual inter-
national ACM SIGIR conference on Research and
development in information retrieval, SIGIR ?00,
pages 184?191, New York, NY, USA. ACM.
J.B. Reece, L.A. Urry, M.L. Cain, S.A. Wasserman,
and P.V. Minorsky. 2011. Campbell Biology. Pear-
son Benjamin Cummings.
Stefan Riezler, Alexander Vasserman, Ioannis
Tsochantaridis, Vibhu Mittal, and Yi Liu. 2007.
Statistical machine translation for query expansion
in answer retrieval. In Proceedings of the 45th An-
nual Meeting of the Association for Computational
Linguistics (ACL), pages 464?471, Prague, Czech
Republic.
Mihai Surdeanu, Massimiliano Ciaramita, and Hugo
Zaragoza. 2011. Learning to rank answers to non-
factoid questions from web collections. Computa-
tional Linguistics, 37(2):351?383.
Susan Verberne, Lou Boves, Nelleke Oostdijk, Peter-
Arno Coppen, et al 2007. Discourse-based an-
swering of why-questions. Traitement Automatique
des Langues, Discours et document: traitements au-
tomatiques, 47(2):21?41.
Suzan Verberne, Lou Boves, Nelleke Oostdijk, and
Peter-Arno Coppen. 2010. What is not in the bag
of words for why-qa? Computational Linguistics,
36(2):229?245.
Suzan Verberne, Hans Halteren, Daphne Theijssen,
Stephan Raaijmakers, and Lou Boves. 2011. Learn-
ing to rank for why-question answering. Inf. Retr.,
14(2):107?132, April.
Xin-Jing Wang, Xudong Tu, Dan Feng, and Lei Zhang.
2009. Ranking community answers by modeling
question-answer relationships via analogical reason-
ing. In Proceedings of the Annual ACM SIGIR Con-
ference.
Wen-tau Yih, Ming-Wei Chang, Christopher Meek, and
Andrzej Pastusiak. 2013. Question answering using
enhanced lexical semantic models. In Proceedings
of the 51st Annual Meeting of the Association for
Computational Linguistics (ACL).
986
