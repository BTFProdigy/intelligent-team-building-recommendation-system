Proceedings of the ACL-IJCNLP 2009 Student Research Workshop, pages 96?104,
Suntec, Singapore, 4 August 2009.
c
?2009 ACL and AFNLP
Creating a Gold Standard for Sentence Clustering in Multi-Document
Summarization
Johanna Geiss
University of Cambridge
Computer Laboratory
15 JJ Thomson Avenue
Cambridge, CB3 0FD, UK
johanna.geiss@cl.cam.ac.uk
Abstract
Sentence Clustering is often used as a first
step in Multi-Document Summarization
(MDS) to find redundant information. All
the same there is no gold standard avail-
able. This paper describes the creation
of a gold standard for sentence cluster-
ing from DUC document sets. The proce-
dure of building the gold standard and the
guidelines which were given to six human
judges are described. The most widely
used and promising evaluation measures
are presented and discussed.
1 Introduction
The increasing amount of (online) information and
the growing number of news websites lead to a de-
bilitating amount of redundant information. Dif-
ferent newswires publish different reports about
the same event resulting in information overlap.
Multi-Document Summarization (MDS) can help
to reduce the amount of documents a user has to
read to keep informed. In contrast to single doc-
ument summarization information overlap is one
of the biggest challenges to MDS systems. While
repeated information is a good evidence of im-
portance, this information should be included in
a summary only once in order to avoid a repeti-
tive summary. Sentence clustering has therefore
often been used as an early step in MDS (Hatzi-
vassiloglou et al, 2001; Marcu and Gerber, 2001;
Radev et al, 2000). In sentence clustering se-
mantically similar sentences are grouped together.
Sentences within a cluster overlap in information,
but they do not have to be identical in meaning.
In contrast to paraphrases sentences in a cluster do
not have to cover the same amount of information.
One sentence represents one cluster in the sum-
mary. Either a sentences from the cluster is se-
lected (Aliguliyev, 2006) or a new sentence is
regenerated from all/some sentences in a cluster
(Barzilay and McKeown, 2005). Usually the qual-
ity of the sentence clusters are only evaluated in-
directly by judging the quality of the generated
summary. There is still no standard evaluation
method for summarization and no consensus in the
summarization community how to evaluate a sum-
mary. The methods at hand are either superficial
or time and resource consuming and not easily re-
peatable. Another argument against indirect evalu-
ation of clustering is that troubleshooting becomes
more difficult. If a poor summary was created it is
not clear which component e.g. information ex-
traction through clustering or summary generation
(using for example language regeneration) is re-
sponsible for the lack of quality.
However there is no gold standard for sentence
clustering available to which the output of a clus-
tering systems can be compared. Another chal-
lenge is the evaluation of sentence clusters. There
are a lot of evaluation methods available. Each of
them focus on different properties of a set of clus-
ters. We will discuss and evaluate the most widely
used and most promising measures. In this paper
the main focus is on the development of a gold
standard for sentence clustering using DUC clus-
ters. The guidelines and rules that were given to
the human annotators are described and the inter-
judge agreement is evaluated.
2 Related Work
Sentence Clustering is used for different applica-
tion in NLP. Radev et al (2000) use it in their
MDS system MEAD. The centroids of the clusters
are used to create a summary. Only the summary
is evaluated, not the sentence clusters. The same
applies to Wang et al (2008). They use symmet-
ric matrix factorisation to group similar sentences
together and test their system on DUC2005 and
DUC2006 data set, but do not evaluate the clus-
terings. However Zha (2002) created a gold stan-
96
dard relying on the section structure of web pages
and news articles. In this gold standard the sec-
tion numbers are assumed to give the true cluster
label for a sentence. In this approach only sen-
tences within the same document and even within
the same paragraph are clustered together whereas
our approach is to find similar information be-
tween documents.
A gold standard for event identification was
built by Naughton (2007). Ten annotators tagged
events in a sentence. Each sentence could be as-
signed more than one event number. In our ap-
proach a sentence can only belong to one cluster.
For the evaluation of SIMFINDER Hatzivas-
siloglou et al (2001) created a set of 10.535 man-
ually marked pairs of paragraphs. Two human an-
notator were asked to judge if the paragraphs con-
tained ?common information?. They were given
the guideline that only paragraphs that described
the same object in the same way or in which the
same object was acting the same are to be consid-
ered similar. They found significant disagreement
between the judges but the annotators were able to
resolve their differences. Here the problem is that
only pairs of paragraphs are annotated whereas we
focus on whole sentences and create not pairs but
clusters of similar sentences.
3 Data Set for Clustering
The data used for the creation of the gold stan-
dard was taken from the Document Understanding
Conference (DUC)
1
document sets. These doc-
ument clusters were designed for the DUC tasks
which range from single-/multi-document summa-
rization to update summaries, where it is assumed
that the reader has already read earlier articles
about an event and requires only an update of the
newer development. Since DUC has moved to
TAC in 2008 they focus on the update task. In
this paper only clusters designed for the general
multi-document summarization task are used.
Our clustering data set consists of four sen-
tence sets. They were created from the docu-
ment sets d073b (DUC 2002), D0712C (DUC
2007), D0617H (DUC 2006) and d102a (DUC
2003). Especially the newer document clusters
e.g. from DUC 2006 and 2007 contain a lot of doc-
uments. In order to build good sentence clusters
the judges have to compare each sentence to each
1
DUC has now moved to the Text Analysis Conference
(TAC)
other sentence and maintain an overview of the
topics within the documents. Because of human
cognitive limitations the number of documents and
sentences have to be reduced. We defined a set of
constraints for a sentence set: (i) from one set, (ii)
a sentence set should consist of 150 ? 200 sen-
tences
2
. To obtain sentence sets that comply with
these requirements we designed an algorithm that
takes the number of documents in a DUC set, the
date of publishing, the number of documents pub-
lished on the same day and the number of sen-
tences in a document into account. If a document
set includes articles published on the same day
they were given preference. Furthermore shorter
documents (in terms of number of sentences) were
favoured. The properties of the resulting sentence
sets are listed in table 1. The documents in a set
were ordered by date and split into sentences us-
ing the sentence boundary detector from RASP
(Briscoe et al, 2006).
name DUC DUC id docs sen
Volcano 2002 D073b 5 162
Rushdie 2007 D0712C 15 103
EgyptAir 2006 D0617H 9 191
Schulz 2003 d102a 5 248
Table 1: Properties of sentence sets
4 Creation of the Gold Standard
Each sentence set was manually clustered by at
least three judges. In total there were six judges
which were all volunteers. They are all second-
language speakers of English and hold at least a
Master?s degree. Three of them (Judge A, Judge J
and Judge O) have a background in computational
linguistics. The judges were given a task descrip-
tion and a list of guidelines. They were only using
the guidelines given and worked independently.
They did not confer with each other or the author.
Table 2 gives details about the set of clusters each
judge created.
4.1 Guidelines
The following guidelines were given to the judges:
1. Each cluster should contain only one topic.
2. In an ideal cluster the sentences are very similar.
2
If a DUC set contains only 5 documents all of them are
used to create the sentence set, even if that results in more
than 200 sentences. If the DUC set contains more than 15
documents, only 15 documents are used for clustering even if
the number of 150 sentences is not reached.
97
judge Rushdie Volcano EgyptAir Schulz
s c s/c s c s/c s c s/c s c s/c
Judge A 70 15 4.6 92 30 3 85 28 3 54 16 3.4
Judge B 41 10 4.1 57 21 2.7 44 15 2.9 38 11 3.5
Judge D 46 16 2.9
Judge H 74 14 5.3 75 19 3.9
Judge J 120 7 17.1
Judge O 53 20 2.6
Table 2: Details of manual clusterings: s number of sentences in a set, c number of clusters, s/c average
number of sentences in a cluster
3. The information in one cluster should come from
as many different documents as possible. The
more different sources the better. Clusters of sen-
tences from only one document are not allowed.
4. There must be at least two sentences in a cluster,
and more than two if possible.
5. Differences in numbers in the same cluster are
allowed (e.g. vagueness in numbers (300,000 -
350,000), update (two killed - four dead))
6. Break off very similar sentences from one cluster
into their own subcluster, if you feel the cluster is
not homogeneous.
7. Do not use too much inference.
8. Partial overlap ? If a sentence has parts that fit in
two clusters, put the sentence in the more impor-
tant cluster.
9. Generalisation is allowed, as long as the sen-
tences are about the same person, fact or event.
The guidelines were designed by the author and
her supervisor ? Dr Simone Teufel. The starting
point was a single DUC document set which was
clustered by the author and her supervisor with the
task in mind to find clusters of sentences that rep-
resent the main topics in the documents. The mini-
mal constraint was that each cluster is specific and
general enough to be described in one sentence
(see rule 1 and 2). By looking at the differences
between the two manual clustering and reviewing
the reasons for the differences the other rules were
generated and tested on another sentence set.
One rule that emerged early says that a topic can
only be included in the summary of a document
set if it appears in more than one document (rule
3). From our understanding of MDS and our defi-
nition of importance only sentences that depict a
topic which is present in more than one source
document can be summary worthy. From this
it follows that clusters must contain at least two
sentences which come from different documents.
Sentences that are not in any cluster of at least two
are considered irrelevant for the MDS task (rule
4). We defined a spectrum of similarity. In an ideal
cluster the sentences would be very similar, almost
paraphrases. For our task sentences that are not
paraphrases can be in the same cluster (see rule 5,
8, 9). In general there are several constraints that
pull against each other. The judges have to find the
best compromise.
We also gave the judges a recommended proce-
dure:
1. Read all documents. Start clustering from the
first sentence in the list. Put every sentence that
you think will attract other sentences into an initial
cluster. If you feel, that you will not find any similar
sentences to a sentence, put it immediately aside.
Continue clustering and build up the clusters while
you go through the list of sentences.
2. You can rearrange your clusters at any point.
3. When you are finished with clustering check that
all important information from the documents is
covered by your clusters. If you feel that a very
important topic is not expressed in your clusters,
look for evidence for that information in the text,
even in secondary parts of a sentence.
4. Go through your sentences which do not belong
to any cluster and check if you can find a suitable
cluster.
5. Do a quality check and make sure that you wrote
down a sentence for each cluster and that the sen-
tences in a cluster are from more than one docu-
ment.
6. Rank the clusters by importance.
4.2 Differences in manual clusterings
Each judge clustered the sentence sets differently.
No two judges came up with the same separation
into clusters or the same amount of irrelevant sen-
tences. When analysing the differences between
the judges we found three main categories:
Generalisation One judge creates a cluster that
from his point of view is homogeneous:
1. Since then, the Rushdie issue has turned into a
big controversial problem that hinders the rela-
tions between Iran and European countries.
2. The Rushdie affair has been the main hurdle in
Iran?s efforts to improve ties with the European
Union.
98
3. In a statement issued here, the EU said the Iranian
decision opens the way for closer cooperation be-
tween Europe and the Tehran government.
4. ?These assurances should make possible a much
more constructive relationship between the United
Kingdom, and I believe the European Union, with
Iran, and the opening of a new chapter in our re-
lations,? Cook said after the meeting.
Another judge however puts these sentences into
two separate cluster (1,2) and (3,4).The first judge
chooses a more general approach and created a
cluster about the relationship between Iran and
the EU, whereas the other judge distinguishes be-
tween the improvement of the relationship and the
reason for the problems in the relationship.
Emphasise Two judges can emphasise on differ-
ent parts of a sentence. For example the sentence
?All 217 people aboard the Boeing 767-300 died when it
plunged into the Atlantic off the Massachusetts coast on
Oct. 31, about 30 minutes out of New York?s Kennedy
Airport on a night flight to Cairo.? was clustered to-
gether with other sentence about the number of ca-
sualties by one judge. Another judge emphasised
on the course of events and put it into a different
cluster.
Inference Humans use different level of inter-
ference. One judge clustered the sentence ?Schulz,
who hated to travel, said he would have been happy liv-
ing his whole life in Minneapolis.? together with other
sentences which said that Schulz is from Min-
nesota although this sentence does not clearly state
this. This judge interfered from ?he would have been
happy living his whole life in Minneapolis? that he actu-
ally is from Minnesota.
5 Evaluation measures
The evaluation measures will compare a set of
clusters to a set of classes. An ideal evaluation
measure should reward a set of clusters if the clus-
ters are pure or homogeneous, so that it only con-
tains sentences from one class. On the other hand
it should also reward the set if all/most of the sen-
tences of a class are in one cluster (completeness).
If sentences that in the gold standard make up one
class are grouped into two clusters, the measure
should penalise the clustering less than if a lot of
irrelevant sentences were in the same cluster. Ho-
mogeneity is more important to us.
D is a set of N sentences d
a
so that D = {d
a
|a =
1, ..., N}. A set of clusters L = {l
j
|j = 1, ..., |L|}
is a partition of a data set D into disjoint subsets
called clusters, so that l
j
? l
m
= ?. |L| is the num-
ber of clusters in L. A set of clusters that contains
only one cluster with all the sentences ofD will be
called L
one
. A cluster that contains only one ob-
ject is called a singleton and a set of clusters that
only consists of singletons is called L
single
.
A set of classes C = {c
i
|i = 1, ..., |C|} is a par-
tition of a data set D into disjoint subsets called
classes, so that c
i
? c
m
= ?. |C| is the number of
classes in C. C is also called a gold standard of a
clustering of data set D because this set contains
the ?ideal? solution to a clustering task and other
clusterings are compared to it.
5.1 V -measure and V
beta
The V-measure (Rosenberg and Hirschberg, 2007)
is an external evaluation measure based on condi-
tional entropy:
V (L,C) =
(1 + ?)hc
?h+ c
(1)
It measures homogeneity (h) and completeness (c)
of a clustering solution (see equation 2 where n
i
j
is the number of sentences l
j
and c
i
share, n
i
the
number of sentences in c
i
and n
j
the number of
sentences in l
j
)
h = 1?
H(C|L)
H(C)
c = 1?
H(L|C)
H(L)
H(C|L) = ?
|L|
?
j=1
|C|
?
i=1
n
i
j
N
log
n
i
j
n
j
H(C) = ?
|C|
?
i=1
n
i
N
log
n
i
N
H(L) = ?
|L|
?
j=1
n
j
N
log
n
j
N
H(L|C) = ?
|C|
?
i=1
|L|
?
j=1
n
i
j
N
log
n
i
j
n
i
(2)
A cluster set is homogeneous if only objects from
a single class are assigned to a single cluster. By
calculating the conditional entropy of the class dis-
tribution given the proposed clustering it can be
measured how close the clustering is to complete
homogeneity which would result in zero entropy.
Because conditional entropy is constrained by the
size of the data set and the distribution of the class
sizes it is normalized by H(C) (see equation 2).
Completeness on the other hand is achieved if all
99
data points from a single class are assigned to a
single cluster which results in H(L|C) = 0.
The V -measure can be weighted. If ? > 1
the completeness is favoured over homogeneity
whereas the weight of homogeneity is increased
if ? < 1.
Vlachos et al (2009) proposes V
beta
where ? is set
to
|L|
|C|
. This way the shortcoming of the V-measure
to favour cluster sets with many more clusters than
classes can be avoided. If |L| > |C| the weight
of homogeneity is reduced, since clusterings with
large |L| can reach high homogeneity quite eas-
ily, whereas |C| > |L| decreases the weight of
completeness. V -measure and V
beta
can range be-
tween 0 and 1, they reach 1 if the set of clusters is
identical to the set of classes.
5.2 Normalized Mutual Information
Mutual Information (I) measures the information
that C and L share and can be expressed by using
entropy and conditional entropy:
I = H(C) +H(L)?H(C,L) (3)
There are different ways to normalise I . Manning
et al (2008) uses
NMI =
I(L,C)
H(L)+H(C)
2
= 2
I(L,C)
H(L) +H(C)
(4)
which represents the average of the two uncer-
tainty coefficients as described in Press et al
(1988).
Generalise NMI to NMI
?
=
(1+?)I
?H(L)+H(C)
. Then
NMI
?
is actually the same as V
?
:
h = 1?
H(C|L)
H(C)
? H(C)h = H(C)?H(C|L)
= H(C)?H(C,L) +H(L) = I
c = 1?
H(L|C)
H(L)
? H(L)c = H(L)?H(L|C)
= H(L)?H(L,C) +H(C) = I
V =
(1 + ?)hc
?h+ c
=
(1 + ?)H(L)H(C)hc
?H(L)H(C)h+H(L)H(C)c
(5)
H(C)h and H(L)c are substituted by I:
(1 + ?)I
2
?H(L)I +H(C)I
=
(1 + ?)I
?H(L) +H(C)
= NMI
?
V
1
= 2
I
H(L) +H(C)
= NMI
(6)
5.3 Variation of Information (V I) and
Normalized V I
The V I-measure (Meila, 2007) also measures
completeness and homogeneity using conditional
entropy. It measure the distance between two
clusterings and thereby the amount of information
gained in changing from C to L. For this measure
the conditional entropies are added up:
V I(L,C) = H(C|L) +H(L|C) (7)
Remember small conditional entropies mean that
the clustering is near to complete homogene-
ity/ completeness, so the smaller V I the better
(V I = 0 if L = C). The maximum of V I is
log N e.g. for V I(L
single
, C
one
). V I can be nor-
malized, then it can range from 0 (identical clus-
ters) to 1.
NV I(L,C) =
1
log N
V I(L,C) (8)
V -measure, V
beta
and V I measure both com-
pleteness and homogeneity, no mapping between
classes and clusters is needed (Rosenberg and
Hirschberg, 2007) and they are only dependent
on the relative size of the clusters (Vlachos et al,
2009).
5.4 Rand Index (RI)
The Rand Index (Rand, 1971) compares two clus-
terings with a combinatorial approach. Each pair
of objects can fall into one of four categories:
? TP (true positives) = objects belong to one
class and one cluster
? FP (false positives) = objects belong to dif-
ferent classes but to the same cluster
? FN (false negatives) = objects belong to the
same class but to different clusters
? TN (true negatives) = objects belong to dif-
ferent classes and to different cluster
By dividing the total number of correctly clustered
pairs by the number of all pairs, RI gives the per-
centage of correct decisions.
RI =
TP + TN
TP + FP + TN + FN
(9)
RI can range between 0 and 1 where 1 corresponds
to identical clusterings. Meila (2007) mentions
that in practise RI concentrates in a small interval
near 1 (for more detail see section 5.7). Another
shortcoming is that RI gives equal weight to FPs
and FNs.
100
5.5 Entropy and Purity
Entropy and Purity are widely used evaluation
measures (Zhao and Karypis, 2001). They both
can be used to measure homogeneity of a cluster.
Both measures give better values when the num-
ber of clusters increase, with the best result for
L
single
. Entropy ranges from 0 for identical clus-
terings or L
single
to log N e.g. for C
single
and
L
one
. The values of P can range between 0 and 1,
where a value close to 0 represents a bad cluster-
ing solution and a perfect clustering solution gets
a value of 1.
Entropy =
|L|
?
j=1
n
j
N
?
?
?
1
log |C|
|C|
?
i=1
n
i
j
n
j
log
n
i
j
n
j
?
?
Purity =
1
N
|L|
?
j=1
max
i
(
n
i
j
)
(10)
5.6 F -measure
The F -measure is a well known metric from IR,
which is based on Recall and Precision. The ver-
sion of the F -score (Hess and Kushmerick, 2003)
described here measures the overall Precision and
Recall. This way a mapping between a cluster and
a class is omitted which may cause problems if |L|
is considerably different to |C| or if a cluster could
be mapped to more than one class. Precision and
Recall here are based on pairs of objects and not
on individual objects.
P =
TP
TP + FP
R =
TP
TP + FN
F (L,C) =
2PR
P +R
(11)
5.7 Discussion of the Evaluation measures
We used one cluster set to analyse the behaviour
and quality of the evaluation measures. Variations
of that cluster set were created by randomly split-
ting and merging the clusters. These modified sets
were then compared to the original set. This ex-
periment will help to identify the advantages and
disadvantages of the measures, what the values re-
veal about the quality of a set of clusters and how
the measures react to changes in the cluster set.
We used the set of clusters created by Judge A for
the Rushdie sentence set. It contains 70 sentences
in 15 clusters. This cluster set was modified by
splitting and merging the clusters randomly until
we got L
single
with 70 clusters and L
one
with one
cluster. The original set of clusters (C
A
) was com-
pared to the modified versions of the set (see figure
1). The evaluation measures reach their best val-
ues if C
A
= 15 clusters is compared to itself.
The F -measure is very sensitive to changes. It
is the only measure which uses its full measure-
ment range. F = 0 if C
A
is compared to
L
A?single
, which means that the F -measure con-
siders L
A?single
to be the opposite of C
A
. Usually
L
one
and L
A?single
are considered to be observe
and a measure should only reach its worst possible
value if these sets are compared. In other words
the F -measure might be too sensitive for our task.
The RI stays most of the time in an interval be-
tween 0.84 and 1. Even for the comparison be-
tween C
A
and L
A?single
the RI is 0.91. This be-
haviour was also described in Meila (2007) who
observed that the RI concentrates in a small inter-
val near 1.
As described in section 5.5 Purity and Entropy
both measure homogeneity. They both react to
changes slowly. Splitting and merging have al-
most the same effect on Purity. It reaches ? 0.6
when the clusters of the set were randomly split or
merged four times. As explained above our ideal
evaluation measure should punish a set of clusters
which puts sentences of the same class into two
clusters less than if sentences are merged with ir-
relevant ones. Homogeneity decreases if unrelated
clusters are merged whereas a decline in complete-
ness follows from splitting clusters. In other words
for our task a measure should decrease more if two
clusters are merged than if a cluster is split.
Entropy for example is more sensitive to merg-
ing than splitting. But Entropy only measures ho-
mogeneity and an ideal evaluation measure should
also consider completeness.
The remaining measures V
beta
, V
0.5
and NV I/V I
all fulfil our criteria of a good evaluation measure.
All of them are more affected by merging than by
splitting and use their measuring range appropri-
ately. V
0.5
favours homogeneity over complete-
ness, but it reacts to changes less than V
beta
. The
V -measure can also be inaccurate if the |L| is con-
siderably different to |C|. V
beta
(Vlachos et al,
2009) tries to overcome this problem and the ten-
dency of the V -measure to favour clusterings with
a large number of clusters.
Since V I is measured in bits with an upper bound
of log N , values for different sets are difficult to
compare. NV I tries to overcome this problem by
101
 0
 0.2
 0.4
 0.6
 0.8
 1
1 2 4 8 15 30 48 61 70 0
 1
 2
 3
 4
 5
e
v
a
l
u
a
t
i
o
n
 
m
e
a
s
u
r
e
s
V
I
 
m
e
a
s
u
r
e
number of clusters
VbetaV 0.5 VINVI RIF EPure
Figure 1: Behaviour of evaluation measure when randomly changed sets of clusters are compared to the
original set.
normalising V I by dividing it by log N . As Meila
(2007) pointed out, this is only convenient if the
comparison is limited to one data set.
In this paper V
beta
, V
0.5
and NV I will be used for
evaluation purposes.
6 Comparability of Clusterings
Following our procedure and guidelines the judges
have to filter out all irrelevant sentences that are
not related to another sentence from a different
document. The number of these irrelevant sen-
tences are different for every sentence set and ev-
ery judge (see table 2). The evaluation measures
require the same number of sentences in each set
of clusters to compare them. The easiest way to
ensure that each cluster set for a sentence set has
the same number of sentences is to add the sen-
tences that were filtered out by the judges to the
corresponding set of clusters. There are different
ways to add these sentences:
1. singletons: Each irrelevant sentence is added
to set of clusters as a cluster of its own
2. bucket cluster: All irrelevant sentences are
put into one cluster which is added to the set
of clusters.
Adding each irrelevant sentence as a singleton
seems to be the most intuitive way to handle the
problem with the sentences that were filtered out.
However this approach has some disadvantages.
The judges will be rewarded disproportionately
high for any singleton they agreement on. Thereby
the disagreement on the more important clustering
will be less punished. With every singleton the
judges agree on the completeness and homogene-
ity of the whole set of clusters increases.
On the other hand the sentences in a bucket cluster
are not all semantically related to each other and
the cluster is not homogeneous which is contradic-
tory to our definition of a cluster. Since the irrel-
evant sentences are combined to only one cluster,
the judges will not be rewarded disproportionately
high for their agreement. However two bucket
clusters from two different sets of clusters will
never be exactly the same and therefore the judges
will be punished more for the disagreement on the
irrelevant sentences
We have to considers these factors when we in-
terpret the results of the inter-judge agreement.
7 Inter-Judge Agreement
We added the irrelevant sentences to each set of
clusters created by the judges as described in sec-
tion 6. These modified sets were then compared to
each other in order to evaluate the agreement be-
tween the judges. The results are shown in table 3.
For each sentence set 100 random sets of clusters
were created and compared to the modified sets (in
total 1300 comparisons for each method of adding
irrelevant sentences). The average values of these
102
set judges singleton clusters bucket cluster
V
beta
V
0.5
NVI V
beta
V
0.5
NVI
Volcano A-B 0.92 0.93 0.13 0.52 0.54 0.39
A-D 0.92 0.93 0.13 0.44 0.49 0.4
B-D 0.95 0.95 0.08 0.48 0.48 0.31
Rushdie A-B 0.87 0.88 0.19 0.3 0.31 0.59
A-H 0.86 0.86 0.2 0.69 0.69 0.32
B-H 0.85 0.87 0.2 0.25 0.27 0.64
EgyptAir A-B 0.94 0.95 0.1 0.41 0.45 0.34
A-H 0.93 0.93 0.12 0.57 0.58 0.31
A-O 0.94 0.94 0.11 0.44 0.46 0.36
B-H 0.93 0.94 0.11 0.44 0.46 0.3
B-O 0.96 0.96 0.08 0.42 0.43 0.28
H-O 0.93 0.94 0.12 0.44 0.44 0.34
Schulz A-B 0.98 0.98 0.04 0.54 0.56 0.15
A-J 0.89 0.9 0.17 0.39 0.4 0.34
B-J 0.89 0.9 0.18 0.28 0.31 0.35
base 0.66 0.75 0.44 0.29 0.28 0.68
Table 3: Inter-judge agreement for the four sentence set.
comparisons are used as a baseline.
The inter-judge agreement is most of the time
higher than the baseline. Only for the Rushdie
sentence set the agreement between Judge B and
Judge H is lower for V
beta
and V
0.5
if the bucket
cluster method is used.
As explained in section 6 the two methods for
adding sentences that were filtered out by the
judges have a notable influence on the values of
the evaluation measures. When adding single-
tons to the set of clusters the inter-judge agree-
ment is considerably higher than with the bucket
cluster method. For example the agreement be-
tween Judge A and Judge B is 0.98 for V
beta
and
V
0.5
and 0.04 forNV I when singletons are added.
Here the judges filter out the same 185 sentences
which is equivalent to 74.6% of all sentences in
the set. In other words 185 clusters are already
considered to be homogen and complete, which
gives the comparison a high score. Five of the 15
clusters Judge A created contain only sentences
there were marked as irrelevant by Judge B. In to-
tal 25 sentences are used in clusters by Judge A
which are singletons in Judge B?s set. Judge B in-
cluded nine other sentences that are singletons in
the set of Judge A. Four of the clusters are exactly
the same in both sets, they contain 16 sentences.
To get from Judge A?s set to the set of Judge B
37 sentences would have to be deleted, added or
moved.
With the bucket cluster method Judge A and
Judge H for the Rushdie sentence set have the best
inter-judge agreement. At the same time this com-
bination receives the worst V
0.5
and NV I val-
ues with the singleton method. The two judges
agree on 22 irrelevant sentences, which account
for 21.35% of all sentences. Here the singletons
have far less influence on the evaluation measures
then the first example. Judge A includes 7 sen-
tences that are filtered out by Judge H who uses
another 11 sentences. Only one cluster is exactly
the same in both sets. To get from Judge A?s set to
Judge H?s cluster 11 sentences have to be deleted,
7 to be added, one cluster has to be split in two and
11 sentences have to be moved from one cluster to
another.
Although the two methods of adding irrelevant
sentences to the sets of cluster result in differ-
ent values for the inter-judge agreement, we can
conclude that the agreement between the judges
is good and (almost) always exceed the baseline.
Overall Judge B seems to have the highest agree-
ment throughout all sentence sets with all other
judges.
8 Conclusion and Future Work
In this paper we presented a gold standard for sen-
tence clustering for Multi-Document Summariza-
tion. The data set used, the guidelines and pro-
cedure given to the judges were discussed. We
showed that the agreement between the judges in
sentence clustering is good and exceeds the base-
line. This gold standard will be used for further ex-
periments on clustering for Multi-Document Sum-
marization. The next step will be to compared the
output of a standard clustering algorithm to the
gold standard.
103
References
Ramiz M. Aliguliyev. 2006. A novel partitioning-
based clustering method and generic document sum-
marization. In WI-IATW ?06: Proceedings of the
2006 IEEE/WIC/ACM international conference on
Web Intelligence and Intelligent Agent Technology,
Washington, DC, USA.
Regina Barzilay and Kathleen R. McKeown. 2005.
Sentence Fusion for Multidocument News Sum-
mariation. Computational Linguistics, 31(3):297?
327.
Ted Briscoe, John Carroll, and Rebecca Watson. 2006.
The Second Release of the RASP System. In COL-
ING/ACL 2006 Interactive Presentation Sessions,
Sydney, Australien. The Association for Computer
Linguistics.
Vasileios Hatzivassiloglou, Judith L. Klavans,
Melissa L. Holcombe, Regina Barzilay, Min-
Yen Kan, and Kathleen R. McKeown. 2001.
SIMFINDER: A Flexible Clustering Tool for
Summarization. In NAACL Workshop on Automatic
Summarization, pages 41?49. Association for
Computational Linguistics.
Andreas Hess and Nicholas Kushmerick. 2003. Au-
tomatically attaching semantic metadata to web ser-
vices. In Proceedings of the 2nd International Se-
mantic Web Conference (ISWC 2003), Florida, USA.
Christopher D. Manning, Prabhakar Raghavan, and
Heinrich Sch?utze. 2008. Introduction to Informa-
tion Retrieval. Cambridge University Press.
Daniel Marcu and Laurie Gerber. 2001. An inquiry
into the nature of multidocument abstracts, extracts,
and their evaluation. In Proceedings of the NAACL-
2001 Workshop on Automatic Summarization, Pitts-
burgh, PA.
Marina Meila. 2007. Comparing clusterings?an in-
formation based distance. Journal of Multivariate
Analysis, 98(5):873?895.
Martina Naughton. 2007. Exploiting structure for
event discovery using the mdi algorithm. In Pro-
ceedings of the ACL 2007 Student Research Work-
shop, pages 31?36, Prague, Czech Republic, June.
Association for Computational Linguistics.
William H. Press, Brian P. Flannery, Saul A. Teukol-
sky, and William T. Vetterling. 1988. Numerical
Recipies in C: The art of Scientific Programming.
Cambridge University Press, Cambridge, England.
Dragomir R. Radev, Hongyan Jing, and Malgorzata
Budzikowska. 2000. Centroid-based summariza-
tion of multiple documents: sentence extraction,
utility-based evaluation, and user studies. In In
ANLP/NAACL Workshop on Summarization, pages
21?29, Morristown, NJ, USA. Association for Com-
putational Linguistics.
William M. Rand. 1971. Objective criteria for the eval-
uation of clustering methods. American Statistical
Association Journal, 66(336):846?850.
Andrew Rosenberg and Julia Hirschberg. 2007. V-
measure: A conditional entropy-based external clus-
ter evaluation measure. In Proceedings of the 2007
Joint Conference on Empirical Methods in Natural
Language Processing and Computational Natural
Language Learning (EMNLP-CoNLL), pages 410?
420.
Andreas Vlachos, Anna Korhonen, and Zoubin
Ghahramani. 2009. Unsupervised and Constrained
Dirichlet Process Mixture Models for Verb Cluster-
ing. In Proceedings of the EACL workshop on GEo-
metrical Models of Natural Language Semantics.
Dingding Wang, Tao Li, Shenghuo Zhu, and Chris
Ding. 2008. Multi-document summarization via
sentence-level semantic analysis and symmetric ma-
trix factorization. In SIGIR ?08: Proceedings of the
31st annual international ACM SIGIR conference on
Research and development in information retrieval,
pages 307?314, New York, NY, USA. ACM.
Hongyuan Zha. 2002. Generic Summarization and
Keyphrase Extraction using Mutual Reinforcement
Principle and Sentence Clustering. In Proceedings
of the 25th Annual ACM SIGIR Conference, pages
113?120, Tampere, Finland.
Ying Zhao and George Karypis. 2001. Criterion
functions for document clustering: Experiments and
analysis. Technical report, Department of Computer
Science, University of Minnesota. (Technical Re-
port #01-40).
104
Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 101?112,
Avignon, France, April 23 - 27 2012. c?2012 Association for Computational Linguistics
Design of a hybrid high quality machine translation system 
Kurt Eberle 
Johanna Gei? 
Mireia Ginest?-Rosell 
Bogdan Babych  
Anthony Hartley 
Reinhard Rapp  
Lingenio GmbH Serge Sharoff 
Karlsruher Stra?e 10 
69 126 Heidelberg, Germany 
Martin Thomas 
Centre for Translation Studies 
University of Leeds 
 Leeds, LS2 9JT, UK 
[k.eberle,j.geiss,m.ginesti-rosell] 
@lingenio.de 
[B.Babych,A.Hartley,R.Rapp, 
S.Sharoff,M.Thomas]@leeds.ac.uk  
  
 
 
Abstract 
This paper gives an overview of the 
ongoing FP7 project HyghTra (2010 ? 
2014). The HyghTra project is conducted 
in a partnership between academia and 
industry involving the University of Leeds 
and Lingenio GmbH (company). It adopts a 
hybrid and bootstrapping approach to the 
enhancement of MT quality by applying 
rule-based analysis and statistical 
evaluation techniques to both parallel and 
comparable corpora in order to extract 
linguistic information and enrich the lexical 
and syntactic resources of the underlying 
(rule-based) MT system that is used for 
analysing the corpora. The project places 
special emphasis on the extension of 
systems to new language pairs and 
corresponding rapid, automated creation of 
high quality resources. The techniques are 
fielded and evaluated within an existing 
commercial MT environment. 
1 Motivation 
Statistical Machine Translation (SMT) has been 
around for about 20 years, and for roughly half of 
this time SMT and the 'traditional' Rule-based 
Machine Translation (RBMT) have been seen as 
competing paradigms. During the last decade 
however, there is a trend and growing interest in 
combining the two methodologies. In our approach 
these two approaches are viewed as 
complementary. 
Advantages of SMT are low cost and robustness, 
but definite disadvantages of (pure) SMT are that it 
needs huge amounts of data, which for many 
language pairs are not available and are unlikely to 
become available in the future. Also, SMT tends to 
disregard important classificatory knowledge (such 
as morphosyntactic, categorical and lexical class 
features), which can be provided and used 
relatively easily within non-statistical 
representations.  
On the other hand, advantages of RBMT are that 
its (grammar and lexical) rules and information are 
understandable by humans and can be exploited for 
a lot of applications outside of translation 
(dictionaries, text understanding, dialogue systems, 
etc.).  
The slot grammar approach used in Lingenio 
systems (cf.  McCord 1989, Eberle 2001) is a 
prime example of such linguistically rich 
representations that can be used for a number of 
different applications. Fig.1 shows this by a 
visualization of (an excerpt of) the entry for the 
ambiguous German verb einstellen in the database 
that underlies (a)  the Lingenio translation 
products, where it links up with corresponding set 
of the transfer rules, and (b) Lingenio?s dictionary 
product TranslateDict, which is primarily intended 
for human translators.   
 
101
 
 
Fig 1 a) data base entry einstellen 
('translation' represents links between SL and T entries) 
 
 
 
 
Fig 1 b) product entry einstellen 
 
The obvious disadvantages of RBMT are high cost, 
weaknesses in dealing with incorrect input and in 
making correct choices with respect to ambiguous 
words, structures, and transfer equivalents. 
SMT output is often surprisingly good with respect 
to short distance collocations, but often misses 
correct choices are missed in cases where 
selectional restrictions take effect on distant words. 
RBMT output is generally good if the parser 
assigns the correct analysis to a sentence and  if the 
target words can be correctly chosen from the set 
of alternatives. However, in the presence of 
ambiguous words and structures, and where 
linguistic information is lacking, the decisions may 
be wrong. 
Given the complementarity of SMT and RBMT 
and their very different strengths and weaknesses, 
we take a view that an optimized MT architecture 
must comprise elements of both paradigms. The 
key issue therefore lies in the identification of such 
elements and how to connect them to each other. 
We propose a specific type of hybrid translation ? 
hybrid high quality translation (HyghTra), where 
core RBMT systems are created and enhanced by a 
range of reliable statistical techniques. 
 
2 Development Methodology 
Many hybrid systems described in the literature 
have attempted to put some analytical abstraction 
on top of an SMT kernel.1 In our view this is not 
the best option because, according to the 
underlying philosophy, SMT is linguistically 
ignorant at the beginning and learns all linguistic 
rules automatically from corpora. However, the 
extracted information is typically represented in 
huge data sets which are not readable by humans in 
a natural way. This means that this type of 
architecture does not easily provide interfaces for 
incorporating linguistic knowledge in a canonical 
and simple way. 
Thus we approach the problem from the other end, 
, integrating information derived from corpora 
using statistical methods into RBMT systems. 
Provided the underlying RBMT systems are 
linguistically sound and sufficiently modular in 
structure, we believe this to have greater potential 
for generating high quality output. 
We currently use and carry out the following work 
plan: 
 
(I) Creation of MT systems  
(with rule-based core MT information and 
statistical extension and training): 
(a) We start out with declarative analysis and 
generation components of the considered 
languages, and with basic bilingual dictionaries 
connecting to one another the entries of relatively 
small vocabularies comprising the most frequent 
words of each language in a given translation pair 
(cf. Fig 1 a). 
(b) Having completed this phase, we extend the 
dictionaries and train the analysis-, transfer- and 
generation-components of the rule-based core 
systems using monolingual and bilingual corpora.  
 
                                                           
1 A prominent early example is Frederking and 
colleagues (Frederking & Nirenburg, 1994). For an 
overview of  hybrid MT till the late nineties see Streiter 
et al (1999). More recent  approaches include Groves & 
Way (2006a, 2006b). Commercial implementations 
include AppTek (http://www.apptek.com) and Language 
Weaver (http://www.languageweaver.com). An ongoing 
MT important project investigating hybrid methods is 
EuroMatrixPlus (http://www.euromatrixplus.net/) 
102
(II) Error detection and improvement cycle:  
(a) We automatically discover the most frequent 
problematic grammatical constructions and 
multiword expressions for commercial RBMT and 
SMT systems using automatic construction-based 
evaluation as proposed in (Babych and Hartley, 
2009) and develop a framework for fixing 
corresponding grammar rules and extending 
grammatical coverage of the systems in a semi-
automatic way. This shortens development time for 
commercial MT and contributes to yielding 
significantly higher translation quality. 
 
(III) Extension to other languages: 
Structural similarity and translation by pivot 
languages is used to obtain extension to further 
languages: 
High-quality translation between closely related 
languages (e.g., Russian and Ukrainian or 
Portuguese and Spanish) can be achieved with 
relatively simple resources (using linguistic 
similarity, but also homomorphism assumptions 
with respect to parallel text, if available), while 
greater efforts are put into ensuring better-quality 
translation between more distant languages (e.g. 
German and Russian). According to our prior 
research (Babych et al, 2007b) the pipeline 
between languages of different similarity results in 
improved translation quality for a larger number of 
language pairs (e.g., MT from Portuguese or 
Ukrainian into German is easier if there are high-
quality analysis and transfer modules for Spanish 
and Russian into German (respectively). Of course, 
(III) draws heavily on the detailed analysis and MT 
systems that the industrial partner in HyghTra 
provides for a number of languages. 
 
In the following sections we give more details of 
the work currently done with regard to (I) and with 
regard to parts of (II): the creation of a new MT 
system following the strategy sketched. We cannot 
go further into detail with (II) and (III) here, which 
will become a priority for future research. 
3 Creation of a new system 
Early pilot studies covering some aspects of the 
strategy described here (using information from 
pivot languages and similarity) showed promising 
results (Rapp, 1999; Rapp & Mart?n Vide, 2007; 
see also Koehn & Knight, 2002). 
We expect that the proposed semi-automatic 
creation of a new MT system as sketched above 
will work best if one of the two languages involved 
is already 'known' by modules to which the system 
has access. Against the background of the pipeline 
approach mentioned above in (III), this means that 
we assume an analysis and translation system that 
continuously grows by 'learning' new languages 
where 'learning' is facilitated by information about 
the languages already 'known' and by exploiting 
similarity assumptions ? and, of course, by being 
fed with information prepared and provided by the 
human 'companion' of the system. 
From this perspective, we assume the following 
steps of extending the system (with work done by 
the 'companion' and work done by the system) 
 
1. Acquire parallel and comparable corpora. 
2. Define a core of the morphology of the new 
language and compile a basic dictionary for the 
most frequent words and translations. 
Morphological representations and features for 
new languages are derived both manually and 
automatically, as proposed in (Babych et al, 
2012 (in preparation)). 
3. Using established alignment technology (e.g. 
Giza++) and parallel corpora, generate a first 
extension of this dictionary. 
4. Expand the dictionary of step 3 using 
comparable corpora as proposed in a study by 
Rapp (1999). This is applicable mainly to single 
word units. 
5. Expand coverage of multiword-units using 
novel technology. 
6. Cross-validate the new dictionary with respect 
to available ones by transitivity. 
7. Integrate the new dictionary into the new MT 
system as developing from reusing components 
and adding new components as in 8. 
8. Complete morphology and spell out declarative 
analysis and generation grammar for the new 
language. 
9. Automatically evaluate the translations of the 
most frequent grammatical constructions and 
multiword expressions in a machine-translated 
corpus, prioritising support for these 
constructions with a type of risk-assessment 
framework proposed in Babych and Hartley 
(2008). 
10. Extend support for high-priority constructions 
semi-automatically by mining correct 
103
translations from parallel corpora. 
11. Train and evaluate the new grammar and 
transfer of the new MT system using the new 
dictionary on the basis of available parallel 
corpora. 
 
The following sections give an overview of the 
different steps. 
Step 1: Acquire parallel and comparable 
corpora 
As our parallel corpus, we use the Europarl. The 
size of the current version is up to 40 million 
words per language, and several of the languages 
we are currently considering are covered. Also, we 
make use of other parallel corpora such as the 
Canadian Hansards (Proceedings of the Canadian 
Parliament) for the English?French language pair. 
For non-EU Languages (mainly Russian), we 
intend to conduct a pilot study to establish the 
feasibility of retrieving parallel corpora from the 
web, a problem for which various approaches have 
been proposed (Resnik, 1999; Munteanu & Marcu, 
2005; Wu & Fung, 2005).  
In addition to the parallel corpora, we will need 
large monolingual corpora in the future (at least 
200 million words) for each of the six languages. 
Here, we intend to use newspaper corpora 
supplemented with text collections downloadable 
from the web.  
The corpora are stored in a database that allows 
for assigning analyses of different depth and nature 
to the sentences and for alignment between the 
sentences and their analyses. The architecture of 
this database and the corresponding analysis and 
evaluation frontend is described in (Eberle et al
2010, 2012). Section Results contains examples of 
such representations. 
Step 2: Compile a basic dictionary for the most 
frequent words 
A prerequisite of the suggested hybrid approach 
with rule-based kernel is to define morphological 
classifications for the new language(s). This is 
done exploiting similarities to the classifications as 
available for the existing languages. Currently, this 
has been carried out for Dutch (on the basis of 
German) and for Spanish (on the basis of 
French/other Romance languages). The most 
frequent words (the basic vocabulary of a 
language) are typically also the most ambiguous 
ones. Since the Lingenio systems are lexically 
driven transfer systems (cf. Eberle 2001), we 
define (a) structural conditions,  which inform the 
choice of the possible target words (single words 
or multiword expressions) and (b)restructuring 
conditions, as necessary (cf. Fig 1 a:  attributes 
'transfer conditions' and 'structural change'). In 
order to ensure quality this must be done by human 
lexicographers and therefore costly for a large 
dictionary. However, we manually create only very 
small basic dictionaries and extend these (semi-
automatically) step 3 and those which follow. 
Some important morphosyntactic features of the 
language are derived from a monolingual corpus 
annotated with publicly available part-of-speech 
taggers and lemmatisers. However, these tools 
often do not explicitly represent linguistic features 
needed for the generation stage in RBMT. In 
(Babych et al, 2012) we propose a systematic 
approach to recovering such missing generation-
oriented representations from grammar models and 
statistical combinatorial properties of annotated 
features. 
Step 3: Generating dictionary extensions from 
parallel corpora 
Based on parallel corpora, dictionaries can be 
derived using established techniques of automatic 
sentence alignment and word alignment. For 
sentence alignment, the length-based Gale & 
Church aligner (1993) can be used, or ? 
alternatively ? Dan Melamed?s GSA-algorithm 
(Geometric Sentence Alignment; Melamed, 1999).  
For segmentation of text we use corresponding 
Lingenio-tools (unpublished).2 
For word alignment Giza++ (Och & Ney, 2003) is 
the standard tool. Given a word alignment, the 
extraction of a (SMT) dictionary is relatively 
straightforward. With the exception of sentence 
segmentation, these algorithms are largely 
language independent and can be used for all of the 
languages that we consider. We did this for a 
number of language pairs on the basis of the 
                                                           
2  If these cannot be applied because of  lack of 
information about a language, we intend to use the 
algorithm by Kiss & Strunk (2006). An open-source 
implementation of parts of the Kiss & Strunk algorithm 
is available from Patrick Tschorn at 
http://www.denkselbst.de/sentrick/index.html. 
104
Europarl-texts considered (as stored in our 
database). In order to optimize the results we use 
the dictionaries of step 1 as set of cognates (cf. 
Simard at al 1992, Gough & Way 2004), as well as 
other words easily obtainable from the internet that 
can be used for this purpose (like company names 
and other named entities with cross-language 
identity and terminology translations). Using the 
morphology component of the new language and 
the categorial information from the transfer 
relation, we compute the basic forms of the 
inflected words found. Later, we intend to further 
improve the accuracy of word alignment by 
exploiting chunk type syntactic information of the 
narrow context of the words (cf. Eberle & Rapp 
2008). An early stage variant of this is already used 
in Lingenio products. The corresponding function 
AutoLearn<word> extracts new word relations on 
the basis of existing dictionaries and (partial) 
syntactic analyses. (Fig 2 gives an example). 
 
 
 
 
 
 
 
 
 
 
Fig 2 AutoLearn<word>: new entries using 
transfer links and syntactic analysis 
 
Given the relatively small size of the available 
parallel corpora, we expect that the automatically 
generated dictionaries will comprise about 20,000 
entries each (This corresponds to first results on 
the basis of German?English). This is far too 
small for a serious general purpose MT system. 
Note that, in comparison, the English?German 
dictionary used in the current Lingenio MT 
product comprises more than 480,000 keywords 
and phrases. 
Step 4: Expanding dictionaries using 
comparable corpora (word equations) 
In order to expand the dictionaries using a set of 
monolingual comparable corpora, the basic 
approach pioneered by Fung & McKeown (1997) 
and Rapp (1995, 1999) is to be further developed 
and refined in the second phase of the project as to 
obtain a practical tool that can be used in an 
industrial context. 
The basic assumption underlying the approach 
is that across languages there is a correlation 
between the co-occurrences of words that are 
translations of each other. If ? for example ? in a 
text of one language two words A and B co-occur 
more often than expected by chance, then in a text 
of another language those words that are 
translations of A and B should also co-occur more 
frequently than expected. It is further assumed that 
a small dictionary (as generated in step 2) is 
available at the beginning, and that the aim is to 
expand this basic lexicon. Using a corpus of the 
target language, first a co-occurrence matrix is 
computed whose rows are all word types occurring 
in the corpus and whose columns are all target 
words appearing in the basic lexicon. Next a word 
of the source language is considered whose 
translation is to be determined. Using the source-
language corpus, a co-occurrence vector for this 
word is computed. Then all known words in this 
vector are translated to the target language. As the 
basic lexicon is small, only some of the 
translations are known. All unknown words are 
discarded from the vector and the vector positions 
are sorted in order to match the vectors of the 
target-language matrix. Using standard measures 
for vector similarity, the resulting vector is 
compared to all vectors in the co-occurrence 
matrix of the target language. The vector with the 
highest similarity is considered to be the 
translation of our source-language word. 
From a previous pilot study (Rapp, 1999) it can 
be expected that this methodology achieves an 
accuracy in the order of 70%, which means that 
only a relatively modest amount of manual post-
editing is required.  
The automatically generated results are 
improved and the amount of post-editing is 
reduced by exploiting sense (disambiguation) 
information as available from the analysis 
component for the 'known' language of the new 
language pair.. Also we try to exploit categorial 
and underspecified syntactic information of the 
contexts of the words similar to what has been 
suggested for improving word alignment in the 
previous step (see also Fig.2). Also, as the frequent 
words are already covered by the basic lexicon 
(whose production from parallel corpora on the 
basis of a manually compiled kernel does not show 
 
105
an ambiguity problem of similar significance), and 
as experience shows that most low frequency 
words in a full-size lexicon tend to be 
unambiguous, the ambiguity problem is reduced 
further for the words investigated and extracted by 
this comparison method. 
Step 5: Expanding dictionaries using 
comparable corpora (multiword units) 
In order to account for technical terms, idioms, 
collocations, and typical short phrases, an 
important feature of an MT lexicon is a high 
coverage of multiword units. Very recent work 
conducted at the University of Leeds (Sharoff et 
al., 2006) shows that dictionary entries for such 
multiword units can be derived from comparable 
corpora if a dictionary of single words is available. 
It could even be shown that this methodology can 
be superior to deriving multiword-units from 
parallel corpora (Babych et al, 2007). This is a 
major breakthrough as comparable corpora are far 
easier to acquire than parallel corpora. It even 
opens up the possibility of building domain-
specific dictionaries by using texts from different 
domains. 
The outline of the algorithm is as follows: 
? Extract collocations from a corpus of the 
source language (Smadja, 1993) 
? To translate a collocation, look up all its 
words using any dictionary 
? Generate all possible permutations 
(sequences) of the word translations 
? Count the occurrence frequencies of these 
sequences in a corpus of the target 
language and test for significance 
? Consider the most significant sequence to 
be the translation of the source language 
collocation 
Of course, in later steps of the project, we will 
experiment on filtering these sequences by 
exploiting structural knowledge similarly to what 
was described in the two previous steps. This can 
be obtained on the basis of the declarative analysis 
component of the new language which is 
developed in parallel. 
Step 6: Cross-validate dictionaries 
The combination of the corpus-based methods for 
automatic dictionary generation as described in 
steps 3 to 5 will lead to high coverage dictionaries 
as the availability of very large monolingual 
corpora is no major problem for our languages. 
However, as all steps are error prone, it can be 
expected that a considerable number of dictionary 
entries (e.g. 50%) are not correct. To facilitate (but 
not eliminate) the manual verification of the 
dictionary, we will  perform an automatic cross-
check which utilizes the dictionaries? property of 
transitivity. What we mean by this is that if we 
have two dictionaries, one translating from 
language A to language B, the other from language 
B to language C, then we can also translate from 
language A to C by use of the intermediate 
language (or interlingua) B. That is, the property of 
transitivity, although having some limitations due 
to ambiguity problems, can be exploited to 
automatically generate a raw dictionary for A to C. 
Lingenio  has some experience with this method 
having exploited it for extending and improving its 
English ? French dictionaries using French ? 
German and German ? English. 
As the corpus-based approach (steps 3 to 5) 
allows us to also generate this type of dictionary  
via comparable corpora, we have two different 
ways to generate a dictionary for a particular 
language pair. This means that we can validate one 
with the other. Furthermore, with increasing 
number of language pairs created, there are more 
and more languages that can serve as interlingua or 
'pivot': This, step by step, gives an increasing 
potential for mutual cross-validation.  
Specific attention will be paid to automating as 
far as possible the creation of selectional 
restrictions to be assigned to the transfer relations 
of the new dictionaries in all steps of dictionary 
creation (2?6). We will try to do this on the basis 
of the analysis components as available for the 
languages considered: These are: a completely 
worked out analysis component for the 'old' 
language, a declarative (chunk parsing) component 
for the new one (compare the two following steps 
for this).  
Step 7: Integrate dictionaries in existing 
machine translation systems 
Lingenio has a relatively rich infrastructure for 
automatic importation of various kinds of lexical 
information into the database used by the analyses 
and translation systems. If necessary the 
information on hand (for instance from 
conventional dictionaries of publishing houses) is 
106
completed and normalized during or before 
importation. This may be executed completely 
automatically ? by using the existing analyses 
components and resources respectively as 
databases ? or interactively ? by asking the 
lexicographer for additional information, if needed. 
For example, there may be a list of multiword 
expressions to be imported into the database. In 
order to have available correct syntactic and 
semantic information for these expressions, they 
are analysed by the parser of the corresponding 
language. From the analysis found, the information 
necessary to describe the new lemma in the lexicon 
with respect to semantic type and syntactic 
structure is obtained. The same information is used 
to automatically create correct restructuring 
constraints for translation relations which use the 
new lemma as target. If the parser does not find a 
sound syntactic description, for example because 
some basic information or the expression is 
missing in the lexical database, the lexicographer is 
asked for the missing information or is handed 
over the expression to code it manually.  
Using these tools importation of new lexical 
information, as provided in the previous steps, is 
considerably accelerated.  
Step 8: Compile rule bases for new language 
pairs 
Although experience clearly shows that 
construction and maintenance of the dictionaries is 
by far the most expensive task in (rule-based) 
Machine Translation, the grammars (analysis and 
generation) must of course be developed and 
maintained also. Lingenio has longstanding 
experience with the development of grammars, 
dictionaries and all other components of RBMT.  
The used grammar formalism (slot grammar, 
cf. McCord 1991) is unification based and its 
structuring focuses on dependency, where phrases 
are analysed into heads and grammatical roles ? so 
called (complement and adjunct) slots.  
The grammar formalism and basic rule types 
are designed in a very general way in order to 
allow good portability from one language to 
another such that spelling out the declarative part 
of a grammar does not take very much time (2-4 
person months approx. for relatively similar 
languages like Romance languages according to 
our experience). The portation of linguistic rules to 
new languages is also facilitated by the modular 
design with clearly defined interfaces that make it 
relatively straightforward to integrate information 
from corpora. 
Given a parallel corpus as acquired in step 1, 
the following procedure defines grammar develop-
ment:  
 
1. Define a declarative grammar for the new 
language and train this grammar on the parallel 
-corpus according to the following steps: 
2. Use a chunk parser for the grammar on the 
basis of an efficient part-of-speech tagger for 
the new language.  
3. Combine the chunk analyses of the sentence, 
according to suggestions for packed syntactic 
structures (cf. Schiehlen 2001 and others) and 
underspecified representation structures 
respectively (cf. Eberle, 2004, and others), 
such that the result represents a disjunction of 
the possible analyses of the sentence. 
4. Filter the alternatives of the representation by 
using mapping constraints between source and 
target sentence as can be computed from the 
lexical transfer relations and the structural 
analysis of the sentence. For instance, if we 
know, as in the example of the last section, that 
in the source sentence there is a relative clause 
with lexical elements A, B, . . . modifying a 
head H and that there are translations TH, TA, 
TB, . . . of H, A, B,. . . , in the target sentence 
which, among other possibilities, can be 
supposed to stand in a similar structural 
relation there, then we prefer this relation to 
the competing structural possibilities. (Fig. 3 in 
section results shows the corresponding 
selection for a German-Spanish example in the 
project database). 
5. For each of the remaining structural 
possibilities of the thus revised underspecified 
representation, take its lexical material and 
underspecified structuring as a context for its 
successful firing. For instance, if the 
possibility is left that O is the direct object of 
VP, where VP is an underspecified verbal 
phrase and O an underspecified nominal 
phrase (i.e. where details of the substructuring 
are not spelled out), take the sentence as a 
reference for direct object complementation 
and O and VP as contexts which accept this 
complementation. 
107
6. Develop more abstract conditions from the 
conditions learned according to (5) and 
integrate the different cases. 
7. Tune the results using standard methods of 
corpus-based linguistics. Among other things 
this means: Distinguish between training and 
test corpora, adjust weights according to the 
results of test runs, etc. 
 
The basic idea of the proposed learning procedure 
is similar to that used with respect to learning 
lexical transfer relations: Do not define the 
statistical model for the ?ignorant? state, where the 
surface items of the bilingual corpora are 
considered. Instead, define it for appropriate 
maximally abstract analyses of the sentences 
(which, of course, must be available 
automatically), because, then, much smaller sets of 
data will do. Here, the important question is: What 
is the most abstract level of representation that can 
be reached automatically and which shows reliable 
results? We think that it is the level of 
underspecified syntactic description as used in the 
procedure above. 
The result of training the grammar is a set of 
rules which assign weights and contexts to each 
filler rule of the declarative grammar and thus 
allow to estimate how likely it is that a particular 
rule is applied in a particular context in comparison 
with other rules (Fig. 4 and 5 in section results 
give an overview of the relevance of  grammar 
rules and their triggering conditions w.r.t. 
German).  
We mentioned that the task of translating texts 
into each other does not presuppose that each 
ambiguity in a source sentence is resolved. On the 
contrary, translation should be ambiguity 
preserving (cf. Kay, Gawron & Norvig 1994, 
compare the example above). It is obvious that 
underspecified syntactic representations as 
suggested here are also especially suited for 
preserving ambiguities appropriately.  
Step 9: Automatically evaluate translations of 
the most frequent grammatical constructions 
and multiword expressions in a machine-
translated corpus 
In a later work package of the project, we will run 
a large parallel corpus through available 
(competitive) MT engines, which will be enhanced 
by automatic dictionaries developed during the 
previous stages. On the source-language side of the 
corpus we will automatically generate lists of 
frequent multiword expressions (MWEs) and 
grammatical constructions using the methodology 
proposed in (Sharoff et al, 2006). For each of the 
identified MWEs and constructions we will 
generate a parallel concordance using open-source 
CSAR architecture developed by the Leeds team 
(Sharoff, 2006). The concordance will be 
generated by running queries to the sentence-
aligned parallel corpora and will return lists of 
corresponding sentences from gold-standard 
human translations and corresponding sentences 
generated by MT. Each of these concordances will 
be automatically evaluated using standard MT 
evaluation metrics, such as BLEU. Under these 
settings parallel concordances will be used as 
standard MT evaluation corpora in an automated 
MT evaluation scenario. 
Normally BLEU gives reliable results for MT 
corpora over 7000 words. However, in (Babych 
and Hartley, 2009; Babych and Hartley, 2008) we 
demonstrated that if the corpus is constructed in 
this controlled way, where evaluated fragments of 
sentences are selected as local contexts for specific 
multiword expressions or grammatical 
constructions, then BLEU scores have another 
?island of stability? for much smaller corpora, 
which now may consist of only five or more 
aligned concordance lines. This concordance-based 
evaluation scenario gives correct predictions of 
translation quality for the local context of each of 
the evaluated expressions. 
The scores for the evaluated MWEs and 
constructions will be put in a risk-assessment 
framework, where we will balance the frequency 
of constructions and their translation quality. The 
top priority receive the most frequent expressions 
that are the most problematic ones for a particular 
MT engine, i.e., with queries with lowest BLEU 
scores for their concordances. This framework will 
allow MT developers to work down the priority list 
and correct or extend coverage for those 
constructions which will have the biggest impact 
on MT quality. 
Step 10: Extend support for high-priority 
constructions semi-automatically by mining 
correct translations from parallel corpora 
At this stage we will automate the procedure of 
correcting errors and extending coverage for 
108
problematic MWEs and grammatical 
constructions, identified in Step 9. For this we will 
exploit alignment between source-language 
sentences and gold-standard human translations. In 
the target human translations we will identify 
linguistically-motivated multiword expressions, 
e.g., using part-of-speech patterns or tf-idf 
distribution templates (Babych et al, 2007) and 
run standard alignment tools (e.g., GIZA++) for 
finding the most probable candidate MWEs that 
correspond to the problematic source-language 
expressions. Source and target MWEs paired in 
this way will form the basis for automatically-
generated grammar rules. The rules will normally 
generalise several pairs of MWEs, and may be 
underspecified for certain lexical or morphological 
features. Later such rules will be manually checked 
and corrected by language specialists in MT 
development teams that work on specific 
translation directions. 
This procedure will allow to speed up the grammar 
development procedure for large-scale MT projects 
and will focus on grammatical constructions with 
the highest impact on MT quality, establishing 
them as a top priority for MT developers. In 
HyghTra and with respect to the languages 
considered there, this procedure will be integrated 
into the grammar development and optimization of 
step 8, in particular it will be related to step 4 of 
the procedure sketched there. With regard to 
integration, we aim at an interleaved architecture in 
the long run.  
Step 11: Bootstrap the system 
In Step 11, the new grammar and the transfer of 
the new MT system and the new dictionary may be 
mutually trained further using the steps before and 
applying the system to additional corpora. 
 
4 Results 
Declarative slot grammars for Dutch and Spanish 
have been developed using the patterns of German 
and French ? where declarative  means that there 
has been used no relevant semantic or other 
information in order to spell out weighting or 
filters for rule application -- the only constraint 
being morphosyntactic accessibility. The necessary 
morphological information has been adapted 
similarly from the corresponding model languages. 
The basic dictionaries have been compiled 
manually (Dutch) or extracted from a conventional 
electronic dictionary (translateDict Spanish).  
For a subset of the Spanish corpus (reference 
sentences of the grammar, parts of the open source 
Leeds corpus (Sharoff, 2006), and Europarl), 
syntactic analyses have been computed and stored 
in the database. As the number of analyses grows 
extremely with the length of sentences, only 
relatively short sentences (up to 15 words)  have 
been considered. These analyses are currently 
compared to the analyses of the German 
translations of the corresponding sentences (one 
translation per sentence), which are taken as a kind 
of 'gold' standard as the German analysis 
component (as part of the translation products) has 
proven to be sufficiently reliable. On the basis of 
the comparison a preference on the competitive 
analyses of the Spanish sentence is entailed and 
used for defining a statistical evaluation 
component for the Spanish grammar. Fig.3 shows 
the corresponding representations in the database 
for the sentence Aumenta la demana de energ?a 
el?ctrica por la ola de calor3  and its translation die 
Nachfrage nach Strom steigt wegen der 
Hitzewelle/the demand for electricity increases 
because of the heat-wave. 
 
 
 
 
 
 
 
 
 
 
Fig.3 Selection of analyses via correspondences 
(prefer first Spanish analysis because of subj-congruity) 
 
The analyses are associated with the corresponding 
creation protocols, which are structured lists whose 
items describe, via the identifiers, which rule has 
been applied when and to what structures in the 
process of creating the analysis. From the selection 
of a best analysis for a sentence, we can entail the 
circumstances under which the application of 
particular rules are preferred. This has been carried 
                                                           
3 Sentence taken from the online newspaper El D?a de 
Concepci?n del Uruguay 
 
 
109
out - not yet for the 'new' language Spanish, but for 
the 'known' language German, in order to obtain a 
measure about how correctly the existing grammar 
evaluation component can be replaced by the 
results of the corresponding statistical study.  
 
Fig.4  Frequency of applications of rules 
 
 
 cluster 
applications 
similarity feas  mod feas head 
383, 384,.. 0,86 sent, ... emosentaffv,.. 
557,558,566,.. 0,68 denselb,.. gebv, ... 
 
Fig.5  Preliminary constraints related to grammar 
rule clusters 
 
Fig.4 shows the distribution of rule usages within 
the training set of analyses (of approx.30.000 
sentences). 390 different rules were used with a 
total of 133708 rule applications. The subject rule 
(383) and the noun determiner rule (46) the most 
used rules (35% of all applications). Fig 5. 
illustrates the preliminary results of a clustering 
algorithm where different rule applications are 
grouped into clusters and the key features of the 
head and modifier phrases for each cluster are 
extracted. 
Currently, we try to determine further and tare 
the linguistic features and the weighting which 
models best the evaluation for German. (The gold 
standard that is used in this test is the set of 
analyses mentioned above). The investigations are 
not yet completed, but preliminary results on the 
basis of the morphosyntactic and semantic 
properties of the neighboring elements are 
promising. After consolidation, the findings will be 
transferred to Spanish on the basis of the selection 
procedure illustrated in Fig. 3. The next step of 
grammar training in the immediate future will 
consist of  changing the focus to underspecified 
analyses as described in step 8 
5 Conclusions 
The project tries to make state-of-the-art statistical 
methods available for dictionary development and 
grammar development for a rule-based dominated 
industrial setting and to exploit such methods 
there.  
With regard to SMT dictionary creation, it goes 
beyond the current state of the art as it also aims at 
developing and applying algorithms for the semi-
automatic generation of bilingual dictionaries from 
unrelated monolingual (i.e., comparable) corpora 
of the source and the target language, instead of 
using relatively literally translated (i.e., parallel) 
texts only. Comparable corpora are far easier to 
obtain than parallel corpora. Therefore the 
approach offers a solution to the serious data 
acquisition bottleneck in SMT. This approach is 
also more cognitively plausible than previous 
suggestions on this topic, since human bilinguality 
is normally not based on memorizing parallel texts. 
Our suggestion models human capacity to translate 
texts using linguistic knowledge acquired from 
monolingual data, so it also exemplifies many 
more features of a truly self-learning MT system 
(shared also by a human translator).  
In addition, the proposal suggests a new 
method for spelling out grammars and parsers for 
languages by splitting grammars into declarative 
kernels and trainable decision algorithms and by 
exploiting cross-linguistic knowledge for 
optimizing the results of the corresponding parsers.   
For developing different components and 
dictionaries for the system a bootstrapping 
architecture is suggested that uses the acquired 
lexical information for training the grammar of the 
new language, which in turn uses the 
(underspecified) parser results for optimizing the 
lexical information in the corresponding translation 
dictionaries. We expect that the suggested methods 
significantly improve translation quality and 
reduce the costs of creating new language pairs for 
Machine Translation. The preliminary results 
obtained so far in the project appear promising. 
6 Acknowledgments 
This research is supported by a Marie Curie IAPP 
project taking place within the 7th European 
Community Framework Programme (Grant 
agreement no.: 251534) 
110
7 References 
Armstrong, S.; Kempen, M.; McKelvie, D.; Petitpierre, D.; 
Rapp, R.; Thompson, H. (1998). Multilingual Corpora 
for Cooperation. Proceedings of the 1st International 
Conference on Linguistic Resources and Evaluation 
(LREC), Granada, Vol. 2, 975?980. 
Babych, B., Hartley, A., Sharoff S.; Mudraya, O. (2007). 
Assisting Translators in Indirect Lexical Transfer. 
Proceedings of the 45th Annual Meeting of the ACL.  
Babych, B., Anthony Hartley, & Serge Sharoff (2007b) 
Translating from under-resourced languages: 
comparing direct transfer against pivot translation. 
Proceedings of MT Summit XI, 10-14 September 
2007, Copenhagen, Denmark, 29-35 
Babych, B. & Hartley, A. (2008). Automated MT Evaluation 
for Error Analysis: Automatic Discovery of Potential 
Translation Errors for Multiword Expressions. ELRA 
Workshop on Evaluation ?Looking into the Future of 
Evaluation: When automatic metrics meet task-based  
and performance-based approaches?. Marrakech, 
Morocco 27 May 2008. Proceedings of LREC?08. 
Babych, B. and Hartley, A. (2009). Automated error analysis 
for multiword expressions: using BLEU-type scores 
for automatic discovery of potential translation errors. 
Linguistica Antverpiensia, New Series (8/2009): 
Journal of translation and interpreting studies. Special 
Issue on Evaluation of Translation Technology. 
Babych, B., Babych, S. and Eberle, K. (2012). Deriving 
generation-oriented MT resources from corpora: case 
study and evaluation of de/het classification for Dutch 
Noun (in preparation) 
Baroni, M.; Bernardini, S. (2004). BootCaT: Bootstrapping 
corpora and terms from the web. Proceedings of 
LREC 2004.  
Callison-Burch, C., Miles Osborne, & Philipp Koehn: Re-
evaluating the role of BLEU in machine translation 
research. EACL-2006: 11th Conference of the 
European Chapter of the Association for 
Computational Linguistics, Trento, Italy, April 3-7, 
2006; pp.249-256  
Charniak, E.; Knight, K.; Yamada, K. (2003). Syntax-based 
language models for statistical machine translation". 
Proceedings of MT Summit IX. 
Eberle, Kurt (2001). FUDR-based MT, head switching and the 
lexicon. Proceedings of the the eighth Machine 
Translation Summit, Santiage de Compostela.  
Eberle, Kurt (2004). Flat underspecified representation and its 
meaning for a fragment of German. 
Habilitationsschrift, Universit?t Stuttgart. 
Eberle, K.; Rapp, R. (2008). Rapid Construction of 
Explicative Dictionaries Using Hybrid Machine 
Translation. In: Storrer, A.;  Geyken, A.; Siebert, A.; 
W?rzner, K._M (eds.) Text Resources and Lexical 
Knowledge: Selected Papers from the 9th Conference 
on Natural Language Processing KONVENS 2008. 
Berlin: Mouton de Gruyter..  
Eckart,K., Eberle, K.; Heid, U. (2010) An infrastructure for 
more reliable corpus analysis. Proceedings of the 
Workshop on Web Services and Processing Pipelines 
in HLT of LREC-2010 , Valetta. 
Eberle, K.; Eckart,K., Heid, U.,Haselbach, B. (2012) A 
tool/database interface for multi-level analyses. 
Proceedings of LREC-2012 , Istanbul. 
Frederking, R.; Nirenburg, S.; Farwell, D.;  Helmreich, S.; 
Hovy, E.; Knight, K.; Beale, S.; Domashnev, C.; 
Attardo, D.; Grannes, D.; Brown, R. (1994). Integrated 
Translation from Multiple Sources within the Pangloss 
MARK II Machine Translation System. Proceedings 
of Machine Translation of the Americas, 73?80. 
Frederking, Robert and Sergei Nirenburg (1994). Three heads 
are better than one. In: Proceedings of ANLP-94, 
Stuttgart, Germany.  
Fung, P.; McKeown, K. (1997). Finding terminology 
translations from non-parallel corpora. Proceedings of 
the 5th Annual Workshop on Very Large Corpora, 
Hong Kong: August 1997, 192-202.  
Gale, W.A.; Church, K.W. (1993). A progrm for aligning 
sentences in bilingual corpora. Computational 
Linguistics, 19(1), 75?102. 
Gonz?lez, J.; Antonio L. Lagarda, Jos? R. Navarro, Laura 
Eliodoro, Adri? Gim?nez, Francisco Casacuberta, Joan 
M. de Val and Ferran Fabregat (2004). SisHiTra: A 
Spanish-to-Catalan hybrid machine translation system. 
Berlin: Springer LNCS. 
Gough, N., Way, A. (2004). Example-Based Controlled 
Translation. Proceedings of the Ninth Workshop of the 
European Association for Machine Translation, 
Valetta, Malta.  
Groves, D. & Way, A. (2006b). Hybridity in MT: Experiments 
on the Europarl Corpus. In Proceedings of the 11th 
Conference of the European Association for Machine 
Translation, Oslo, Norway, 115?124. 
Groves, D.; Way, A. (2006a). Hybrid data-driven models of 
machine translation. Machine Translation, 19(3?4). 
Special Issue on Example-Based Machine Translation. 
301?323. 
Habash, N.; Dorr, B. (2002). Handling translation 
divergences: Combining statistical and symbolic 
techniques in generation-heavy machine translation. 
Proceedings of AMTA-2002, Tiburon, California, 
USA. 
Kiss, T.; Strunk, J. (2006): Unsupervised multilingual 
sentence boundary detection. Computational 
Linguistics 32(4), 485?525. 
Koehn, P. (2005). Europarl: A Parallel Corpus for Statistical 
Machine Translation. Proceedings of MT Summit X, 
Phuket, Thailand 
Koehn, P.; Knight, K. (2002). Learning a translation lexicon 
from monolingual corpora. In: Proceedings of ACL-02 
Workshop on Unsupervised Lexical Acquisition, 
Philadelphia PA. 
Language Industry Monitor (1992). Statistical methods 
gaining ground. In: Language Industry Monitor, 
September/October 1992 issue. 
111
McCord, M. (1989). A new version of the machine translation 
system LMT.  Journal of Literary and Linguistic 
Computing, 4, 218?299. 
McCord, M. (1991). The slot grammar system.  In: Wedekind, 
J., Rohrer, C.(eds): Unification in Grammar, MIT-
Press. 
Melamed, I. Dan (1999). Bitext maps and aligment via pattern 
recognition. Computational Linguistics, 25(1), 107?
130. 
Munteanu, D.S.; Marcu, D. (2005). Improving machine 
translation performance by exploiting non-parallel 
corpora. Computational Linguistics, 31(4), 477?504. 
Och, F.J.; Ney, H. (2002). Discriminative trainig and 
maximum entropy models for statistical machine 
translation. Proceedings of the  Annual Meeting of the 
Association for Computational Linguistics, 
Philadelphia, PA, 295?302.  
Och, F.J.; Ney, H. (2003). A systematic comparison of various 
statistical alignment models. Computational 
Linguistics, 29(1), 19?51. 
Papineni, K.; Roukos, S.; Ward, T.; Zhu, W. (2002). BLEU: A 
method for automatic evaluation of machine 
translation. In: Proceedings of the 40th Annual 
Meeting of the ACL, Philadelphia, PA, 311?318. 
Rapp, R. (1995). Identifying word translations in non-parallel 
texts. In: Proceedings of the 33rd Meeting of the 
Association for Computational Linguistics. 
Cambridge, MA, 1995, 320?322 
Rapp, R. (1999). Automatic identification of word translations 
from unrelated English and German corpora. In: 
Proceedings of the 37th Annual Meeting of the Asso-
ciation for Computational Linguistics 1999, College 
Park, Maryland. 519?526. 
Rapp, R. (2004). A freely available automatically generated 
thesaurus of related words. In: Proceedings of the 
Fourth International Conference on Language 
Resources and Evaluation (LREC), Lisbon, Vol. II, 
395?398. 
Rapp, R.; Martin Vide, C. (2007). Statistical machine 
translation without parallel corpora. In: Georg Rehm, 
Andreas Witt, Lothar Lemnitzer (eds.): Data 
Structures for Linguistic Resources and Applications. 
Proceedings of the Biennial GLDV Conference 2007. 
T?bingen: Gunter Narr. 231?240 
Resnik, R. (1999). Mining the web for bilingual text. 
Proceedings of the 37th Annual Meeting of the 
Association for Computational Linguistics. 
Sato, S.; Nagao, M. (1990). Toward memory-based 
translation. Proceedings of COLING 1990, 247?252. 
Schiehlen, M. (2001) Syntactic Underspecification. In: Special 
Research Area 340 ? Final report, University of 
Stuttgart.  
Sharoff, S. (2006) Open-source corpora: using the net to fish 
for linguistic data. In International Journal of Corpus 
Linguistics 11(4), 435?462.  
Sharoff, S.; Babych, B.; Hartley, A. (2006). Using comparable 
corpora to solve problems difficult for human 
translators. In: Proceedings of COLING/ACL 2006, 
739?746.  
Sharoff, S. (2006). A uniform interface to large-scale 
linguistic resources. In Proceedings of the Fifth 
Language Resources and Evaluation Conference, 
LREC-2006, Genoa. 
Simard, M., Foster, G., Isabelle, P. (1992). Using Cognates to 
Align Sentences in Bilingual Corpora. Proceeedings of 
the International Conference on Theoretical and 
Methodological Issues, Montr?al. 
Smadja, F. (1993). Retrieving collocations from text: Xtract. 
Computational Linguistics, 19(1), 143?177. 
Streiter, O., Carl, M., Haller, J. (eds)(1999). Hybrid 
Approaches to Machine Translation. IAI working 
papers 36. 
Streiter, O.; Carl, M.; Iomdin, L.L.: 2000, A Virtual 
Translation Machine for Hybrid Machine Translation'. 
In: Proceedings of the Dialogue'2000 International 
Seminar in Computational Linguistics and 
Applications. Tarusa, Russia.  
Streiter, O.; Iomdin, L.L. (2000). Learning Lessons from 
Bilingual Corpora: Benefits for Machine Translation. 
International Journal of Corpus Linguistics, 5(2), 199?
230. 
Thurmair, G. (2005). Hybrid architectures for machine 
translation systems. Language Resources and 
Evaluation, 39 (1), 91?108. 
Thurmair, G. (2006). Using corpus information to improve 
MT quality. Proceedings of the LR4Trans-III 
Workshop, LREC, Genova. 
Thurmair, G. (2007) Automatic evaluation in MT system 
production. MT Summit XI Workshop: Automatic 
procedures in MT evaluation, 11 September 2007, 
Copenhagen, Denmark, 
Veronis, Jean (2006). Technologies du Langue. Actualit?s ? 
Comentaires ? R?flexions. Translation. Systran or 
Reverso? 
http://aixtal.blogspot.com/2006/01/translation-systran-
or-reverso.html  
Wu, D., Fung, P. (2005). Inversion transduction grammar 
constraints for mining parallel sentences from quasi-
comparable corpora. Second International Joint 
Conference on Natural Language Processing 
(IJCNLP-2005). Jeju, Korea. 
 
112
