Transactions of the Association for Computational Linguistics, 1 (2013) 25?36. Action Editor: Hal Daume? III.
Submitted 10/2012; Published 3/2013. c?2013 Association for Computational Linguistics.
Grounding Action Descriptions in Videos
Michaela Regneri ?, Marcus Rohrbach , Dominikus Wetzel ?,
Stefan Thater ?, Bernt Schiele  and Manfred Pinkal ?
? Department of Computational Linguistics, Saarland University, Saarbru?cken, Germany
(regneri|dwetzel|stth|pinkal)@coli.uni-saarland.de
 Max Planck Institute for Informatics, Saarbru?cken, Germany
(rohrbach|schiele)@mpi-inf.mpg.de
Abstract
Recent work has shown that the integration of
visual information into text-based models can
substantially improve model predictions, but
so far only visual information extracted from
static images has been used. In this paper, we
consider the problem of grounding sentences
describing actions in visual information ex-
tracted from videos. We present a general
purpose corpus that aligns high quality videos
with multiple natural language descriptions of
the actions portrayed in the videos, together
with an annotation of how similar the action
descriptions are to each other. Experimental
results demonstrate that a text-based model of
similarity between actions improves substan-
tially when combined with visual information
from videos depicting the described actions.
1 Introduction
The estimation of semantic similarity between
words and phrases is a basic task in computational
semantics. Vector-space models of meaning are one
standard approach. Following the distributional hy-
pothesis, frequencies of context words are recorded
in vectors, and semantic similarity is computed as a
proximity measure in the underlying vector space.
Such distributional models are attractive because
they are conceptually simple, easy to implement and
relevant for various NLP tasks (Turney and Pan-
tel, 2010). At the same time, they provide a sub-
stantially incomplete picture of word meaning, since
they ignore the relation between language and extra-
linguistic information, which is constitutive for lin-
guistic meaning. In the last few years, a growing
amount of work has been devoted to the task of
grounding meaning in visual information, in par-
ticular by extending the distributional approach to
jointly cover texts and images (Feng and Lapata,
2010; Bruni et al, 2011). As a clear result, visual
information improves the quality of distributional
models. Bruni et al (2011) show that visual infor-
mation drawn from images is particularly relevant
for concrete common nouns and adjectives.
A natural next step is to integrate visual infor-
mation from videos into a semantic model of event
and action verbs. Psychological studies have shown
the connection between action semantics and videos
(Glenberg, 2002; Howell et al, 2005), but to our
knowledge, we are the first to provide a suitable data
source and to implement such a model.
The contribution of this paper is three-fold:
? We present a multimodal corpus containing
textual descriptions aligned with high-quality
videos. Starting from the video corpus of
Rohrbach et al (2012b), which contains high-
resolution video recordings of basic cooking
tasks, we collected multiple textual descrip-
tions of each video via Mechanical Turk. We
also provide an accurate sentence-level align-
ment of the descriptions with their respective
videos. We expect the corpus to be a valu-
able resource for computational semantics, and
moreover helpful for a variety of purposes, in-
cluding video understanding and generation of
text from videos.
? We provide a gold-standard dataset for the
evaluation of similarity models for action verbs
and phrases. The dataset has been designed
as analogous to the Usage Similarity dataset of
25
Erk et al (2009) and contains pairs of natural-
language action descriptions plus their associ-
ated video segments. Each of the pairs is an-
notated with a similarity score based on several
manual annotations.
? We report an experiment on similarity model-
ing of action descriptions based on the video
corpus and the gold standard annotation, which
demonstrates the impact of scene information
from videos. Visual similarity models outper-
form text-based models; the performance of
combined models approaches the upper bound
indicated by inter-annotator agreement.
The paper is structured as follows: We first place
ourselves in the landscape of related work (Sec. 2),
then we introduce our corpus (Sec. 3). Sec. 4 re-
ports our action similarity annotation experiment
and Sec. 5 introduces the similarity measures we ap-
ply to the annotated data. We outline the results of
our evaluation in Sec. 6, and conclude the paper with
a summary and directions for future work (Sec. 7).
2 Related Work
A large multimodal resource combining language
and visual information resulted from the ESP game
(von Ahn and Dabbish, 2004). The dataset contains
many images tagged with several one-word labels.
The Microsoft Video Description Corpus (Chen
and Dolan, 2011, MSVD) is a resource providing
textual descriptions of videos. It consists of multiple
crowd-sourced textual descriptions of short video
snippets. The MSVD corpus is much larger than our
corpus, but most of the videos are of relatively low
quality and therefore too challenging for state-of-
the-art video processing to extract relevant informa-
tion. The videos are typically short and summarized
with a single sentence. Our corpus contains coher-
ent textual descriptions of longer video sequences,
where each sentence is associated with a timeframe.
Gupta et al (2009) present another useful re-
source: their model learns the alignment of
predicate-argument structures with videos and uses
the result for action recognition in videos. However,
the corpus contains no natural language texts.
The connection between natural language sen-
tences and videos has so far been mostly explored
by the computer vision community, where dif-
ferent methods for improving action recognition
by exploiting linguistic data have been proposed
(Gupta and Mooney, 2010; Motwani and Mooney,
2012; Cour et al, 2008; Tzoukermann et al, 2011;
Rohrbach et al, 2012b, among others). Our resource
is intended to be used for action recognition as well,
but in this paper, we focus on the inverse effect of
visual data on language processing.
Feng and Lapata (2010) were the first to enrich
topic models for newspaper articles with visual in-
formation, by incorporating features from article il-
lustrations. They achieve better results when in-
corporating the visual information, providing an en-
riched model that pairs a single text with a picture.
Bruni et al (2011) used the ESP game data to cre-
ate a visually grounded semantic model. Their re-
sults outperform purely text-based models using vi-
sual information from pictures for the task of mod-
eling noun similarities. They model single words,
and mostly visual features lead only to moderate im-
provements, which might be due to the mixed qual-
ity and random choice of the images. Dodge et al
(2012) recently investigated which words can actu-
ally be grounded in images at all, producing an au-
tomatic classifier for visual words.
An interesting in-depth study by Mathe et al
(2008) automatically learnt the semantics of motion
verbs as abstract features from videos. The study
captures 4 actions with 8-10 videos for each of the
actions, and would need a perfect object recognition
from a visual classifier to scale up.
Steyvers (2010) and later Silberer and Lapata
(2012) present an alternative approach to incorpo-
rating visual information directly: they use so-called
feature norms, which consist of human associations
for many given words, as a proxy for general percep-
tual information. Because this model is trained and
evaluated on those feature norms, it is not directly
comparable to our approach.
The Restaurant Game by Orkin and Roy (2009)
grounds written chat dialogues in actions carried out
in a computer game. While this work is outstanding
from the social learning perspective, the actions that
ground the dialogues are clicks on a screen rather
than real-world actions. The dataset has successfully
been used to model determiner meaning (Reckman
et al, 2011) in the context of the Restaurant Game,
26
but it is unclear how this approach could scale up to
content words and other domains.
3 The TACOS Corpus
We build our corpus on top of the ?MPII Cook-
ing Composite Activities? video corpus (Rohrbach
et al, 2012b, MPII Composites), which contains
videos of different activities in the cooking domain,
e.g., preparing carrots or separating eggs. We ex-
tend the existing corpus with multiple textual de-
scriptions collected by crowd-sourcing via Amazon
Mechanical Turk1 (MTurk). To facilitate the align-
ment of sentences describing activities with their
proper video segments, we also obtained approxi-
mate timestamps, as described in Sec. 3.2.
MPII Composites comes with timed gold-
standard annotation of low-level activities and par-
ticipating objects (e.g. OPEN [HAND,DRAWER] or
TAKE OUT [HAND,KNIFE,DRAWER]). By adding
textual descriptions (e.g., The person takes a knife
from the drawer) and aligning them on the sentence
level with videos and low-level annotations, we pro-
vide a rich multimodal resource (cf. Fig. 2), the
?Saarbru?cken Corpus of Textually Annotated Cook-
ing Scenes? (TACOS). In particular, the TACOS cor-
pus provides:
? A collection of coherent textual descrip-
tions for video recordings of activities of
medium complexity, as as a basis for empiri-
cal discourse-related research, e.g., the selec-
tion and granularity of action descriptions in
context
? A high-quality alignment of sentences with
video segments, supporting the grounding of
action descriptions in visual information
? Collections of paraphrases describing the same
scene, which result as a by-product from the
text-video alignment and can be useful for text
generation from videos (among other things)
? The alignment of textual activity descriptions
with sequences of low-level activities, which
may be used to study the decomposition of ac-
tion verbs into basic activity predicates
1mturk.com
We expect that our corpus will encourage and en-
able future work on various topics in natural lan-
guage and video processing. In this paper, we will
make use of the second aspect only, demonstrating
the usefulness of the corpus for the grounding task.
After a more detailed description of the basic
video corpus and its annotation (Sec. 3.1) we de-
scribe the collection of textual descriptions with
MTurk (Sec. 3.2), and finally show the assembly and
some benchmarks of the final corpus (Sec. 3.3).
3.1 The video corpus
MPII Composites contains 212 high resolution video
recordings of 1-23 minutes length (4.5 min. on av-
erage). 41 basic cooking tasks such as cutting a cu-
cumber were recorded, each between 4 and 8 times.
The selection of cooking tasks is based on those pro-
posed at ?Jamie?s Home Cooking Skills?.2 The cor-
pus is recorded in a kitchen environment with a total
of 22 subjects. Each video depicts a single task exe-
cuted by an individual subject.
The dataset contains expert annotations of low-
level activity tags. Annotations are provided for seg-
ments containing a semantically meaningful cook-
ing related movement pattern. The action must go
beyond single body part movements (such as move
arm up) and must have the goal of changing the state
or location of an object. 60 different activity labels
are used for annotation (e.g. PEEL, STIR, TRASH).
Each low-level activity tag consists of an activity
label (PEEL), a set of associated objects (CARROT,
DRAWER,...), and the associated timeframe (start-
ing and ending points of the activity). Associated
objects are the participants of an activity, namely
tools (e.g. KNIFE), patient (CARROT) and location
(CUTTING-BOARD). We provide the coarse-grained
role information for patient, location and tool in the
corpus data, but we did not use this information in
our experiments. The dataset contains a total of
8818 annotated segments, on average 42 per video.
3.2 Collecting textual video descriptions
We collected textual descriptions for a subset of the
videos in MPII Composites, restricting collection to
tasks that involve manipulation of cooking ingredi-
ents. We also excluded tasks with fewer than four
2www.jamieshomecookingskills.com
27
video recordings in the corpus, leaving 26 tasks to be
described. We randomly selected five videos from
each task, except the three tasks for which only four
videos are available. This resulted in a total of 127
videos. For each video, we collected 20 different
textual descriptions, leading to 2540 annotation as-
signments. We published these assignments (HITs)
on MTurk, using an adapted version3 of the annota-
tion tool Vatic (Vondrick et al, 2012).
In each assignment, the subject saw one video
specified with the task title (e.g. How to prepare an
onion), and then was asked to enter at least five and
at most 15 complete English sentences to describe
the events in the video. The annotation instructions
contained example annotations from a kitchen task
not contained in our actual dataset.
Annotators were encouraged to watch each video
several times, skipping backward and forward as
they wished. They were also asked to take notes
while watching, and to sketch the annotation before
entering it. Once familiarized with the video, sub-
jects did the final annotation by watching the entire
video from beginning to end, without the possibil-
ity of further non-sequential viewing. Subjects were
asked to enter each sentence as soon as the action de-
scribed by the sentence was completed. The video
playback paused automatically at the beginning of
the sentence input. We recorded pause onset for
each sentence annotation as an approximate ending
timestamp of the described action. The annotators
resumed the video manually.
The tasks required a HIT approval rate of 75%
and were open only to workers in the US, in order
to increase the general language quality of the En-
glish annotations. Each task paid 1.20 USD. Before
paying we randomly inspected the annotations and
manually checked for quality. The total costs of col-
lecting the annotations amounted to 3,353 USD. The
data was obtained within a time frame of 3.5 weeks.
3.3 Putting the TACOS corpus together
Our corpus is a combination of the MTurk data and
MPII Composites, created by filtering out inappro-
priate material and computing a high-quality align-
ment of sentences and video segments. The align-
ment is done by matching the approximate times-
3github.com/marcovzla/vatic/tree/bolt
l1
l2
l3
l4
s1
l5
s3
s2
s1
s3
s2
e
l
e
m
e
n
t
a
r
y
 
t
i
m
e
f
r
a
m
e
s
s
e
n
t
e
n
c
e
s
l1
l2
l3
l4
l5
Figure 1: Aligning action descriptions with the video.
tamps of the MTurk data to the accurate timestamps
in MPII Composites.
We discarded text instances if people did not time
the sentences properly, taking the association of sev-
eral (or even all) sentences to a single timestamp as
an indicator. Whenever we found a timestamp asso-
ciated with two or more sentences, we discarded the
whole instance. Overall, we had to filter out 13%
of the text instances, which left us with 2206 textual
video descriptions.
For the alignment of sentence annotations and
video segments, we assign a precise timeframe to
each sentence in the following way: We take the
timeframes given by the low-level annotation in
MPII Composites as a gold standard micro-event
segmentation of the video, because they mark all
distinct frames that contain activities of interest. We
call them elementary frames. The sequence of el-
ementary frames is not necessarily continuous, be-
cause idle time is not annotated.
The MTurk sentences have end points that con-
stitute a coarse-grained, noisy video segmentation,
assuming that each sentence spans the time between
the end of the previous sentence and its own end-
ing point. We refine those noisy timeframes to gold
frames as shown in Fig. 1: Each elementary frame
(l1-l5) is mapped to a sentence (s1-s3) if its noisy
timeframe covers at least half of the elementary
frame. We define the final gold sentence frame then
as the timespan between the starting point of the first
and the ending point of the last elementary frame.
The alignment of descriptions with low-level ac-
tivities results in a table as given in Fig. 3. Columns
contain the textual descriptions of the videos; rows
28
Top 10
Verbs
cut, take, get, put, wash, place,
rinse, remove, *pan, peel
Top 10
Activities
move, take out, cut, wash, take
apart, add, shake, screw, put in, peel
Figure 4: 10 most frequent verbs and low-level actions in
the TACOS corpus. pan is probably often mis-tagged.
correspond to low-level actions, and each sentence
is aligned with the last of its associated low-level ac-
tions. As a side effect, we also obtain multiple para-
phrases for each sentence, by considering all sen-
tences with the same associated time frame as equiv-
alent realizations of the same action.
The corpus contains 17,334 action descrip-
tions (tokens), realizing 11,796 different sentences
(types). It consists of 146,771 words (tokens),
75,210 of which are content word instances (i.e.
nouns, verbs and adjectives). The verb vocabulary
comprises 28,292 verb tokens, realizing 435 lem-
mas. Since verbs occurring in the corpus typically
describe actions, we can note that the linguistic vari-
ance for the 58 different low-level activities is quite
large. Fig. 4 gives an impression of the action re-
alizations in the corpus, listing the most frequent
verbs from the textual data, and the most frequent
low-level activities.
On average, each description covers 2.7 low-level
activities, which indicates a clear difference in gran-
ularity. 38% of the descriptions correspond to ex-
actly one low-level activity, about a quarter (23%)
covers two of them; 16% have 5 or more low-level
elements, 2% more than 10. The corpus shows how
humans vary the granularity of their descriptions,
measured in time or number of low-level activities,
and it shows how they vary the linguistic realization
of the same action. For example, Fig. 3 contains dice
and chop into small pieces as alternative realizations
of the low-level activity sequence SLICE - SCRATCH
OFF - SLICE.
The descriptions are of varying length (9 words
on average), reaching from two-word phrases to de-
tailed descriptions of 65 words. Most sentences are
short, consisting of a reference to the person in the
video, a participant and an action verb (The person
rinses the carrot, He cuts off the two edges). People
often specified an instrument (from the faucet), or
the resulting state of the action (chop the carrots in
small pieces). Occasionally, we find more complex
constructions (support verbs, coordinations).
As Fig. 3 indicates, the timestamp-based align-
ment is pretty accurate; occasional errors occur like
He starts chopping the carrot... in NL Sequence 3.
The data contains some typos and ungrammatical
sentences (He washed carrot), but for our own ex-
periments, the small number of such errors did not
lead to any processing problems.
4 The Action Similarity Dataset
In this section, we present a gold standard dataset,
as a basis for the evaluation of visually grounded
models of action similarity. We call it the ?Action
Similarity Dataset? (ASim) in analogy to the Usage
Similarity dataset (USim) of Erk et al (2009) and
Erk et al (2012). Similarly to USim, ASim con-
tains a collection of sentence pairs with numerical
similarity scores assigned by human annotators. We
asked the annotators to focus on the similarity of the
activities described rather than on assessing seman-
tic similarity in general. We use sentences from the
TACOS corpus and record their timestamps. Thus
each sentence comes with the video segment which
it describes (these were not shown to the annotators).
4.1 Selecting action description pairs
Random selection of annotated sentences from the
corpus would lead to a large majority of pairs which
are completely dissimilar, or difficult to grade (e.g.,
He opens the drawer ? The person cuts off the ends
of the carrot). We constrained the selection pro-
cess in two ways: First, we consider only sentences
describing activities of manipulating an ingredient.
The low-level annotation of the video corpus helps
us identify candidate descriptions. We exclude rare
and special activities, ending up with CUT, SLICE,
CHOP, PEEL, TAKE APART, and WASH, which oc-
cur reasonably frequently, with a wide distribution
over different scenarios. We restrict the candidate
set to those sentences whose timespan includes one
of these activities. This results in a conceptually
more focussed repertoire of descriptions, and at the
same time admits full linguistic variation (wash an
apple under the faucet ? rinse an apple, slice the
cucumber ? cut the cucumber into slices).
29
 896 -1137 wash      [hand,carrot]
1145 -1212 shake     [hand,carrot]
1330 -1388 close     [hand,drawer]
1431 -1647 take out  [hand,knife,drawer]
1647 -1669 move      [hand,cutting board,counter]
1673 -1705 move      [hand,carrot,bowl,cutting board]
1736 -1818 cut       [knife,carrot,cutting board]
1919 -3395 slice     [knife,carrot,cutting board]
>  890: The man takes out a cutting board.
> 1300: He washes a carrot.
> 1500: He takes out a knife.
> 4000: He slices the carrot.
Videos of basic kitchen tasks
Low level annotations with timestamps, actions and objects
Natural language descriptions 
with ending times of the actions
manual low-level annotation
Mechanical Turk data collection
timestamp-based alignment
Figure 2: Corpus Overview
Sample frame Start End Action Participants NL Sequence 1 NL Sequence 2 NL Sequence 3
743 911 wash hand, carrot He washed carrot The person rinses the
carrot.
He rinses the carrot from
the faucet.
982 1090 cut knife, carrot,
cutting board
He cut off ends of
carrots
The person cuts off
the ends of the carrot.
He cuts off the two edges.
1164 1257 open hand, drawer
1679 1718 close hand, drawer He searches for some-
thing in the drawer, failed
attempt, he throws away
the edges in trash.
1746 1799 trash hand, carrot The person searches
for the trash can, then
throws the ends of
the carrot away.
1854 2011 wash hand, carrot He rinses the carrot again.
2011 2045 shake hand, carrot He washed carrot The person rinses the
carrot again.
He starts chopping the
carrot in small pieces.
2083 2924 slice knife, carrot,
cutting board
2924 2959 scratch
off
hand, carrot,
knife, cutting
board
3000 3696 slice knife, carrot,
cutting board
He diced carrots He finished chopping the
carrots in small pieces.
Figure 3: Excerpt from the corpus for a video on PREPARING A CARROT. Example frames, low-level annotation
(Action and Participants) is shown along with three of the MTurk sequences (NL Sequence 1-3).
30
Second, we required the pairs to share some lexi-
cal material, either the head verb or the manipulated
ingredient (or both).4 More precisely, we composed
the ASim dataset from three different subsets:
Different activity, same object: This subset con-
tains pairs describing different types of actions car-
ried out on the same type of object (e.g. The man
washes the carrot. ? She dices the carrot.). Its fo-
cus is on the central task of modeling the semantic
relation between actions (rather than the objects in-
volved in the activity), since the object head nouns
in the descriptions are the same, and the respective
video segments show the same type of object.
Same activity, same object: Description pairs of
this subset will in many cases, but not always, agree
in their head verbs. The dataset is useful for explor-
ing the degree to which action descriptions are un-
derspecified with respect to the precise manner of
their practical realization. For example, peeling an
onion will mostly be done in a rather uniform way,
while cut applied to carrot can mean that the carrot
is chopped up, or sliced, or cut in halves.
Same activity & verb, different object: Descrip-
tion pairs in this subset share head verb and low-
level activity, but have different objects (e.g. The
man washes the carrot. ? A girl washes an apple un-
der the faucet.). This dataset enables the exploration
of the objects? meaning contribution to the complete
action, established by the variation of equivalent ac-
tions that are done to different objects.
We assembled 900 action description pairs for anno-
tation: 480 pairs share the object; 240 of which have
different activities, and the other 240 pairs share the
same activity. We included paraphrases describing
the same video segment, but we excluded pairs of
identical sentences. 420 additional pairs share their
head verb, but have different objects.
4.2 Manual annotation
Three native speakers of English were asked to judge
the similarity of the action pairs with respect to how
4We refer to the latter with the term object; we don?t require
the ingredient term to be the actual grammatical object in the
action descriptions, we rather use ?object? in its semantic role
sense as the entity affected by an action.
Part of Gold Standard Sim ? ?
DIFF. ACTIVITY, SAME OBJECT 2.20 1.07 0.73
SAME ACTIVITY, SAME OBJECT 4.19 1.04 0.73
ALL WITH SAME OBJECT 3.20 1.44 0.84
SAME VERB, DIFF. OBJECT 3.34 0.69 0.43
COMPLETE DATASET 3.27 1.15 0.73
Figure 5: Average similarity ratings (Sim), their standard
deviation (?)) and annotator agreement (?) for ASim.
they are carried out, rating each sentence pair with
a score from 1 (not similar at all) to 5 (the same or
nearly the same). They did not see the respective
videos, but we noted the relevant kitchen task (i.e.
which vegetable was prepared). We asked the an-
notators explicitly to ignore the actor of the action
(e.g. whether it is a man or a woman) and score
the similarities of the underlying actions rather than
their verbalizations. Each subject rated all 900 pairs,
which were shown to them in completely random or-
der, with a different order for each subject.
We compute inter-annotator agreement (and the
forthcoming evaluation scores) using Spearman?s
rank correlation coefficient (?), a non-parametric
test which is widely used for similar evaluation tasks
(Mitchell and Lapata, 2008; Bruni et al, 2011; Erk
and McCarthy, 2009). Spearman?s ? evaluates how
the samples are ranked relative to each other rather
than the numerical distance between the rankings.
Fig. 5 shows the average similarity ratings in the
different settings and the inter-annotator agreement.
The average inter-rater agreement was ? = 0.73 (av-
eraged over pairwise rater agreements), with pair-
wise results of ? = 0.77, 0.72, and 0.69, respec-
tively, which are all highly significant at p < 0.001.
As expected, pairs with the same activity and ob-
ject are rated very similar (4.19) on average, while
the similarity of different activities on the same ob-
ject is the lowest (2.2). For both subsets, inter-rater
agreement is high (? = 0.73), and even higher for
both SAME OBJECT subsets together (0.84).
Pairs with identical head verbs and different ob-
jects have a small standard deviation, at 0.69. The
inter-annotator agreement on this set is much lower
than for pairs from the SAME OBJECT set. This indi-
cates that similarity assessment for different variants
of the same activity is a hard task even for humans.
31
5 Models of Action Similarity
In the following, we demonstrate that visual infor-
mation contained in videos of the kind provided by
the TACOS corpus (Sec. 3) substantially contributes
to the semantic modeling of action-denoting expres-
sions. In Sec. 6, we evaluate several methods for
predicting action similarity on the task provided by
the ASim dataset. In this section, we describe the
models considered in the evaluation. We use two
different models based on visual information, and in
addition two text based models. We will also explore
the effect of combining linguistic and visual infor-
mation and investigate which mode is most suitable
for which kinds of similarity.
5.1 Text-based models
We use two different models of textual similarity
to predict action similarity: a simple word-overlap
measure (Jaccard coefficient) and a state-of-the-art
model based on ?contextualized? vector representa-
tions of word meaning (Thater et al, 2011).
Jaccard coefficient. The Jaccard coefficient gives
the ratio between the number of (distinct) words
common to two input sentences and the total num-
ber of (distinct) words in the two sentences. Such
simple surface-oriented measures of textual similar-
ity are often used as baselines in related tasks such as
recognizing textual entailment (Dagan et al, 2005)
and are known to deliver relatively strong results.
Vector model. We use the vector model of Thater
et al (2011), which ?contextualizes? vector repre-
sentations for individual words based on the particu-
lar sentence context in which the target word occurs.
The basic intuition behind this approach is that the
words in the syntactic context of the target word in a
given input sentence can be used to refine or disam-
biguate its vector. Intuitively, this allows us to dis-
criminate between different actions that a verb can
refer to, based on the different objects of the action.
We first experimented with a version of this vec-
tor model which predicts action similarity scores of
two input sentences by computing the cosine simi-
larity of the contextualized vectors of the verbs in the
two sentences only. We achieved better performance
with a variant of this model which computes vectors
for the two sentences by summing over the contex-
tualized vectors of all constituent content words.
In the experiments reported below, we only use
the second variant. We use the same experimental
setup as Thater et al (2011), as well as the parameter
settings that are reported to work best in that paper.
5.2 Video-based models
We distinguish two approaches to compute the sim-
ilarity between two video segments. In the first, un-
supervised approach we extract a video descriptor
and compute similarities between these raw features
(Wang et al, 2011). The second approach builds
upon the first by additionally learning higher level
attribute classifiers (Rohrbach et al, 2012b) on a
held out training set. The similarity between two
segments is then computed between the classifier re-
sponses. In the following we detail both approaches:
Raw visual features. We use the state-of-the-art
video descriptor Dense Trajectories (Wang et al,
2011) which extracts visual video features, namely
histograms of oriented gradients, flow, and motion
boundary histograms, around densely sampled and
tracked points.
This approach is especially suited for this data as
it ignores non-moving parts in the video: we are
interested in activities and manipulation of objects,
and this type of feature implicitly uses only infor-
mation in relevant image locations. For our setting
this feature representation has been shown to be su-
perior to human pose-based approaches (Rohrbach
et al, 2012a). Using a bag-of-words representation
we encode the features using a 16,000 dimensional
codebook. Features and codebook are provided with
the publicly available video dataset.
We compute the similarity between two encoded
features by computing the intersection of the two
(normalized) histograms.
Visual classifiers. Visual raw features tend to have
several dimensions in the feature space which pro-
vide unreliable, noisy values and thus degrade the
strength of the similarity measure. Intermediate
level attribute classifiers can learn which feature di-
mensions are distinctive and thus significantly im-
prove performance over raw features. Rohrbach et
al. (2012b) showed that using such an attribute clas-
sifier representation can significantly improve per-
32
MODEL SAME OBJECT SAME VERB OVERALL
TE
XT
JACCARD 0.28 0.25 0.25
TEXTUAL VECTORS 0.30 0.25 0.27
TEXT COMBINED 0.39 0.35 0.36
VI
DE
O VISUAL RAW VECTORS 0.53 -0.08 0.35
VISUAL CLASSIFIER 0.60 0.03 0.44
VIDEO COMBINED 0.61 -0.04 0.44
M
IX ALL UNSUPERVISED 0.58 0.32 0.48
ALL COMBINED 0.67 0.28 0.55
UPPER BOUND 0.84 0.43 0.73
Figure 6: Evaluation results in Spearman?s ?. All values > 0.11 are significant at p < 0.001.
formance for composite activity recognition. The
relevant attributes are all activities and objects an-
notated in the video data (cf. Section 3.1). For the
experiments reported below we use the same setup
as Rohrbach et al (2012b) and use all videos in
MPII Composites and MPII Cooking (Rohrbach et
al., 2012a), excluding the 127 videos used during
evaluation. The real-valued SVM-classifier output
provides a confidence how likely a certain attribute
appeared in a given video segment. This results in a
218-dimensional vector of classifier outputs for each
video segment. To compute the similarity between
two vectors we compute the cosine between them.
6 Evaluation
We evaluate the different similarity models intro-
duced in Sec. 5 by calculating their correlation with
the gold-standard similarity annotations of ASim
(cf. Sec. 4). For all correlations, we use Spear-
man?s ? as a measure. We consider the two textual
measures (JACCARD and TEXTUAL VECTORS) and
their combination, as well as the two visual mod-
els (VISUAL RAW VECTORS and VISUAL CLAS-
SIFIER) and their combination. We also combined
textual and visual features, in two variants: The
first includes all models (ALL COMBINED), the sec-
ond only the unsupervised components, omitting the
visual classifier (ALL UNSUPERVISED). To com-
bine multiple similarity measures, we simply aver-
age their normalized scores (using z-scores).
Figure 6 shows the scores for all of these mea-
sures on the complete ASim dataset (OVERALL),
along with the two subparts, where description pairs
share either the object (SAME OBJECT) or the head
verb (SAME VERB). In addition to the model re-
sults, the table also shows the average human inter-
annotator agreement as UPPER BOUND.
On the complete set, both visual and textual mea-
sures have a highly significant correlation with the
gold standard, whereas the combination of both
clearly leads to the best performance (0.55). The
results on the SAME OBJECT and SAME VERB sub-
sets shed light on the division of labor between the
two information sources. While the textual mea-
sures show a comparable performance over the two
subsets, there is a dramatic difference in the contri-
bution of visual information: On the SAME OBJECT
set, the visual models clearly outperform the textual
ones, whereas the visual information has no positive
effect on the SAME VERB set. This is clear evidence
that the visual model does not capture the similar-
ity of the participating objects but rather genuine ac-
tion similarity, which the visual features (Wang et
al., 2011) we employ were designed for. A direction
for future work is to learn dedicated visual object de-
tectors to recognize and capture similarities between
objects more precisely.
The numbers shown in Figure 7 support this hy-
pothesis, showing the two groups in the SAME OB-
JECT class: For sentence pairs that share the same
activity, the textual models seem to be much more
suitable than the visual ones. In general, visual mod-
els perform better on actions with different activity
types, textual models on closely related activities.
33
MODEL (SAME OBJECT) same action diff. action
TE
XT
JACCARD 0.44 0.14
TEXT VECTORS 0.42 0.05
TEXT COMBINED 0.52 0.14
VI
DE
O VIS. RAW VECTORS 0.21 0.23
VIS. CLASSIFIER 0.21 0.45
VIDEO COMBINED 0.26 0.38
M
IX ALL UNSUPERVISED 0.49 0.24
ALL COMBINED 0.48 0.41
UPPER BOUND 0.73 0.73
Figure 7: Results for sentences with the same object, with
either the same or different low-level activity.
Overall, the supervised classifier contributes a
good part to the final results. However, the supervi-
sion is not strictly necessary to arrive at a significant
correlation; the raw visual features alone are suffi-
cient for the main performance gain seen with the
integration of visual information.
7 Conclusion
We presented the TACOS corpus, which provides
coherent textual descriptions for high-quality video
recordings, plus accurate alignments of text and
video on the sentence level. We expect the corpus
to be beneficial for a variety of research activities in
natural-language and visual processing.
In this paper, we focused on the task of grounding
the meaning of action verbs and phrases. We de-
signed the ASim dataset as a gold standard and eval-
uated several text- and video-based semantic simi-
larity models on the dataset, both individually and
in different combinations.
We are the first to provide semantic models for
action-describing expressions, which are based on
information extracted from videos. Our experimen-
tal results show that these models are of considerable
quality, and that predictions based on a combination
of visual and textual information even approach the
upper bound given by the agreement of human an-
notators.
In this work we used existing similarity models
that had been developed for different applications.
We applied these models without any special train-
ing or optimization for the current task, and we com-
bined them in the most straightforward way. There
is room for improvement by tuning the models to
the task, or by using more sophisticated approaches
to combine modality-specific information (Silberer
and Lapata, 2012).
We built our work on an existing corpus of high-
quality video material, which is restricted to the
cooking domain. As a consequence, the corpus cov-
ers only a limited inventory of activity types and ac-
tion verbs. Note, however, that our models are fully
unsupervised (except the Visual Classifier model),
and thus can be applied without modification to ar-
bitrary domains and action verbs, given that they are
about observable activities. Also, corpora contain-
ing information comparable to the TACOS corpus but
with wider coverage (and perhaps a bit noisier) can
be obtained with a moderate amount of effort. One
needs videos of reasonable quality and some sort of
alignment with action descriptions. In some cases
such alignments even come for free, e.g. via subti-
tles, or descriptions of short video clips that depict
just a single action.
For future work, we will further investigate the
compositionality of action-describing phrases. We
also want to leverage the multimodal information
provided by the TACOS corpus for the improvement
of high-level video understanding, as well as for
generation of natural-language text from videos.
The TACOS corpus and all other data described in
this paper (videos, low-level annotation, aligned tex-
tual descriptions, the ASim-Dataset and visual fea-
tures) are publicly available. 5
Acknowledgements
We?d like to thank Asad Sayeed, Alexis Palmer and
Prashant Rao for their help with the annotations.
We?re indebted to Carl Vondrick and Marco An-
tonio Valenzuela Escrcega for their extensive sup-
port with the video annotation tool. Further we
thank Alexis Palmer and in particular three anony-
mous reviewers for their helpful comments on this
paper. ? This work was funded by the Cluster of Ex-
cellence ?Multimodal Computing and Interaction?
of the German Excellence Initiative and the DFG
project SCHI989/2-2.
5http://www.coli.uni-saarland.de/
projects/smile/page.php?id=tacos
34
References
Luis von Ahn and Laura Dabbish. 2004. Labeling
images with a computer game. In Proceedings of
SIGCHI 2004.
Elia Bruni, Giang Binh Tran, and Marco Baroni. 2011.
Distributional semantics from text and images. In Pro-
ceedings of GEMS 2011.
David L. Chen and William B. Dolan. 2011. Collect-
ing highly parallel data for paraphrase evaluation. In
Proceedings of ACL 2011.
Timothee Cour, Chris Jordan, Eleni Miltsakaki, and Ben
Taskar. 2008. Movie/script: Alignment and parsing
of video and text transcription. In Computer Vision
? ECCV 2008, volume 5305 of Lecture Notes in Com-
puter Science, pages 158?171. Springer Berlin Heidel-
berg.
Ido Dagan, Oren Glickman, and Bernardo Magnini.
2005. The PASCAL recognising textual entailment
challenge. In Proceedings of MLCW 2005.
Jesse Dodge, Amit Goyal, Xufeng Han, Alyssa Men-
sch, Margaret Mitchell, Karl Stratos, Kota Yamaguchi,
Yejin Choi, Hal Daume? III, Alexander C. Berg, and
Tamara L. Berg. 2012. Detecting visual text. In HLT-
NAACL, pages 762?772.
Katrin Erk and Diana McCarthy. 2009. Graded word
sense assignment. In Proceedings of EMNLP 2009.
Katrin Erk, Diana McCarthy, and Nicholas Gaylord.
2009. Investigations on word senses and word usages.
In Proceedings of ACL/AFNLP 2009.
Katrin Erk, Diana McCarthy, and Nick Gaylord. 2012.
Measuring word meaning in context. CL.
Yansong Feng and Mirella Lapata. 2010. Visual infor-
mation in semantic representation. In Proceedings of
HLT-NAACL 2010.
A. M. Glenberg. 2002. Grounding language in action.
Psychonomic Bulletin & Review.
Sonal Gupta and Raymond J. Mooney. 2010. Us-
ing closed captions as supervision for video activ-
ity recognition. In Proceedings of the Twenty-Fourth
AAAI Conference on Artificial Intelligence (AAAI-
2010), pages 1083?1088, Atlanta, GA, July.
Abhinav Gupta, Praveen Srinivasan, Jianbo Shi, and
Larry S. Davis. 2009. Understanding videos, con-
structing plots learning a visually grounded storyline
model from annotated videos. In Proceedings of
CVPR 2009.
Steve R. Howell, Damian Jankowicz, and Suzanna
Becker. 2005. A model of grounded language ac-
quisition: Sensorimotor features improve lexical and
grammatical learning. JML.
S. Mathe, A. Fazly, S. Dickinson, and S. Stevenson.
2008. Learning the abstract motion semantics of verbs
from captioned videos. pages 1?8.
Jeff Mitchell and Mirella Lapata. 2008. Vector-based
models of semantic composition. In Proceedings of
ACL 2008.
Tanvi S. Motwani and Raymond J. Mooney. 2012. Im-
proving video activity recognition using object recog-
nition and text mining. In Proceedings of the 20th
European Conference on Artificial Intelligence (ECAI-
2012), pages 600?605, August.
Jeff Orkin and Deb Roy. 2009. Automatic learning and
generation of social behavior from collective human
gameplay. In Proceedings of AAMAS 2009.
Hilke Reckman, Jeff Orkin, and Deb Roy. 2011. Ex-
tracting aspects of determiner meaning from dialogue
in a virtual world environment. In Proceedings of CCS
2011, IWCS ?11.
Marcus Rohrbach, Sikandar Amin, Mykhaylo Andriluka,
and Bernt Schiele. 2012a. A database for fine grained
activity detection of cooking activities. In Proceedings
of CVPR 2012.
Marcus Rohrbach, Michaela Regneri, Micha Andriluka,
Sikandar Amin, Manfred Pinkal, and Bernt Schiele.
2012b. Script data for attribute-based recognition of
composite activities. In Proceedings of ECCV 2012.
Carina Silberer and Mirella Lapata. 2012. Grounded
models of semantic representation. In Proceedings of
EMNLP-CoNLL 2012.
Mark Steyvers. 2010. Combining feature norms and
text data with topic models. Acta Psychologica,
133(3):234 ? 243. ?ce:title?Formal modeling of se-
mantic concepts?/ce:title?.
Stefan Thater, Hagen Fu?rstenau, and Manfred Pinkal.
2011. Word meaning in context: A simple and effec-
tive vector model. In Proceedings of IJCNLP 2011.
Peter D. Turney and Patrick Pantel. 2010. From fre-
quency to meaning. vector space models for semantics.
JAIR.
E. Tzoukermann, J. Neumann, J. Kosecka, C. Fermuller,
I. Perera, F. Ferraro, B. Sapp, R. Chaudhry, and
G. Singh. 2011. Language models for semantic ex-
traction and filtering in video action recognition. In
AAAI Workshop on Language-Action Tools for Cogni-
tive Artificial Agents.
Carl Vondrick, Donald Patterson, and Deva Ramanan.
2012. Efficiently scaling up crowdsourced video an-
notation. IJCV.
Heng Wang, Alexander Kla?ser, Cordelia Schmid, and
Cheng-Lin Liu. 2011. Action Recognition by Dense
Trajectories. In Proceedings of CVPR 2011.
35
36
Proceedings of SSST-6, Sixth Workshop on Syntax, Semantics and Structure in Statistical Translation, pages 20?29,
Jeju, Republic of Korea, 12 July 2012. c?2012 Association for Computational Linguistics
Enriching Parallel Corpora for Statistical Machine Translation
with Semantic Negation Rephrasing
Dominikus Wetzel
Department of Computational Linguistics
Saarland University
dwetzel@coli.uni-sb.de
Francis Bond
Linguistics and Multilingual Studies
Nanyang Technological University
bond@ieee.org
Abstract
This paper presents an approach to improving
performance of statistical machine translation
by automatically creating new training data
for difficult to translate phenomena. In partic-
ular this contribution is targeted towards tack-
ling the poor performance of a state-of-the-art
system on negated sentences. The corpus ex-
pansion is achieved by high quality rephrasing
of existing sentences to their negated counter-
parts making use of semantic transfer. The
method is designed to work on both sides of
the parallel corpus while preserving the align-
ment. Our results show an overall improve-
ment of 0.16 BLEU points, with a statisti-
cally significant increase of 1.63 BLEU points
when tested on only negated test data.
1 Introduction
Having large and good quality parallel corpora is vi-
tal for the quality of statistical machine translation
(SMT) systems. However, these corpora are expen-
sive to create. Furthermore, certain phenomena are
not very frequent and hence underrepresented in ex-
isting parallel corpora, such as negated sentences,
questions, etc. Due to the lack of such training data,
the SMT systems do not perform as well as they
could. Especially when it comes to negation, it is
important that the basic semantics is preserved, i.e. a
negated statement should not be translated as a pos-
itive one and vice versa.
Given a state-of-the-art baseline Japanese-English
SMT system, a separate evaluation on the seman-
tic level of negative only vs. positive only test data
reveals the considerably poorer performance on the
negative test set. This tendency and the importance
of preserving a negated statement motivates experi-
ments with improving performance on negative sen-
tences.
Providing more training data for negative sen-
tences should even out the discrepancy of the perfor-
mance between the above mentioned negative and
positive test data. We present a method where a
large amount of negative training data is obtained by
rephrasing the original training data. The rephras-
ing is performed on the semantic level to ensure
high reliability and quality of the generated data.
Simple rewriting based on the surface or syntactic
level would require complex language specific rules,
which is not desirable.
Working on the semantic structure exploits the
fact that these representations abstract away from
language specific structures. Thus, our approach
can be easily implemented for other languages, pro-
vided there are grammars available for both lan-
guages involved in the desired parallel corpus. The
DELPH-IN project1 provides various such gram-
mars.
This paper first describes related work in the fol-
lowing section. Section 3 presents a semantic analy-
sis of the data with respect to negation and provides
some distributional statistics. In Section 4 we elab-
orate on the functionality of our rephrasing system
and present different methods for corpus expansion.
The experimental setup and the results are in Sec-
tion 5. A discussion and our conclusion are given in
Section 6 and Section 7, respectively.
2 Related Work
There has been plenty of work on paraphrasing data
in order to overcome the limitations that insuffi-
ciently large or underrepresented phenomena in par-
1www.delph-in.net
20
allel corpora impose on SMT.
Callison-Burch et al (2006) tackle the problem
of unseen phrases in SMT by adding source lan-
guage paraphrases to the phrase table with appropri-
ate probabilities. Both are obtained from additional
parallel corpora, where the translations of the same
foreign language phrase are considered paraphrases.
He et al (2011) use a statistical framework for
paraphrase generation of the source language. A
log-linear model similar to the one used in phrase-
based SMT provides paraphrases which are ranked
based on novelty and fluency. The training corpus
is then expanded by either adding the first best para-
phrase, or n-best paraphrases. The target language is
just copied to provide the required target side of the
paraphrase.
Marton et al (2009) and Gao and Vogel (2011)
create new information by means of shallow seman-
tic methods. The former present an approach to
overcome the problem of unknown words in a low
resource experiment. They base their monolingual
paraphrasing on semantic similarity measures. In
their setting they achieve significantly better trans-
lations. Gao and Vogel (2011) expand the parallel
corpus by creating new information from existing
data. With the use of a monolingual semantic role
labeller one side of the parallel corpus is labelled.
Role-to-word rules are extracted. In sentences con-
taining the frames and semantic roles for which re-
placement rules exist, the corresponding words are
substituted. A support vector machine is used for
filtering the generated paraphrases.
An approach where paraphrases are obtained via
generation from semantic structures is presented in
Nichols et al (2010). It exploits the fact that the gen-
erator produces multiple surface realizations. The
basic set up is similar to our work, however our ap-
proach additionally manipulates, i.e. rephrases the
semantics before generation. Furthermore, we im-
plement parallel rephrasing, changing the meaning
of both source and target text simultaneously.
There is, on the other hand, little work in phrase-
based SMT especially targeting negated sentences.
Collins et al (2005) approach the problem of prop-
erly translating negation in their general reordering
setting. Transformation rules are applied to syntac-
tic trees, so that the source language word order has
a closer resemblance to the target language word or-
der. In particular, the German negation is moved to-
wards the same position as the English one. This
however presumes the existence of at least some
negated training data.
3 Analysis of the Semantic Structure
The linguistic analysis is performed based on the
Head-Driven Phrase Structure Grammar (HPSG)
formalism established in the DELPH-IN project. In
particular we consider the language pair Japanese-
English. Hence, the broad-coverage grammar Jacy
for Japanese (Bender and Siegel, 2004) and the En-
glish Resource Grammar (ERG) (Flickinger, 2000)
are used respectively to parse the data and obtain the
semantics for each sentence.
3.1 Negation in Minimal Recursion Semantics
The formalism that is used to represent the seman-
tics in the DELPH-IN grammars is Minimal Recur-
sion Semantics (MRS) (Copestake et al, 2005). Per
definition, an MRS structure consists of a top han-
dle, a bag of elementary predicates (EP) and a bag of
constraints on handles. EPs represent verbs, their ar-
guments, negations, quantifiers, among others. Fur-
thermore, each EP has a handle with which it can
be identified. Constraints on handles are used to re-
strict EPs such that they are outscoped by negations
or quantifiers.
In a negated sentence, the negated verb is
outscoped by the negation relation EP. Technically,
the negation relation with handle hn takes as its ar-
gument (ARG1) a handle (hx) which is equal mod-
ulo quantifiers to the handle of the verb (hv), written
as the handle constraint: hx =q hv. For visualiza-
tion, an example is given, which shows the relevant
parts of such a negated structure for the sentence
?This may not suit your taste.? (Figure 1). There,
the negated verb has the handle h8. The negation
relation EP with handle h10 outscopes this via the
constraint h12 =q h8.
The rephrasing we propose can be achieved with
little or no knowledge about the specific implemen-
tation choices of the individual grammar. Collecting
a few sample sentences that appear to be negated in
the original data ? by performing a simple surface
string matching ? is enough to reveal the principle
of how negation is implemented. Because negation
21
< e2,
{ h8: _MAY_V_MODAL_REL( ARG0 e2, ARG1 h9 ),
h10: NEG_REL( ARG0 e11, ARG1 h12),
h13: _suit_v_1_rel( ARG0 e14, ARG1 x4, ARG2 x15),
... }
{ h6 =q h3,
h12 =q h8,
h9 =q h13,
... } >
Figure 1: A visualization of the English MRS structure from the sentence ?This may not suit your taste.?.
The irrelevant parts have been omitted. The necessary parts in the corresponding Japanese MRS are the
same.
Japanese
English neg rel no neg rel
neg rel 8.5% 1.4%
no neg rel 9.7% 80.4%
Table 1: Distribution of negation measured by the
presence or absence of a negation relation (neg rel)
for those sentences with parses in both languages.
is represented at the semantic level, both the ERG
and Jacy have very similar analyses, even though
the syntactic realization is very different (negation
in English involves a negative marker such as not
and the use of an auxiliary verb such as do, while in
Japanese it is realized by an auxiliary verb nai).
3.2 Data and Distribution of Negations
The data we use in this work is the Japanese-
English parallel Tanaka corpus (Tanaka, 2001; Bond
et al, 2008). We used the version distributed with
Jacy, which has approximately 150,000 sentence
pairs randomly ordered and divided into 100 pro-
files of 1,500 sentences each (the last one is a lit-
tle short). We summarize the distribution of negated
sentence pairs in Table 1. The data we consider for
these statistics excludes development and test pro-
files (000?005). 84.5% of the input sentence pairs
can be parsed successfully (110,759 out of 139,150).
The table also shows mixed cases where one lan-
guage had a negation relation EP, whereas the other
did not. Mixed cases are especially frequent when
the Japanese side has a negation relation. These
cases have two main causes: lexical negation such
as ?She missed the bus.? being translated with the
equivalent of ?She did not catch the bus.?; and id-
ioms, such as ikanakereba naranai ?I must go (lit:
go-not-if not-become)? where the Japanese expres-
sion of modality includes a negation. Instances of
the latter type form the majority, and should be han-
dled in a newer version of the grammar, they are not
considered further in this work.
4 Method: MRS Rephrasing & Corpus
Expansion
The basic setup of the whole rephrasing system con-
sists of parsing, MRS manipulation, generation and
finally parallel corpus compilation. In the follow-
ing sections, the individual processing modules are
described in detail.
4.1 Parsing
Parsing is done using PET (Callmeier, 2000) a
bottom-up chart parser for unification-based gram-
mars using the English and Japanese Grammars
ERG and Jacy. Since our approach builds on seman-
tic rephrasing, only the MRS structure is required.
We only use the best (first) parse returned by the
parser.
4.2 Rephrasing
This module takes an MRS structure as input and
rephrases it if possible by adding a negation rela-
tion EP to the highest scoping predicate. Adding the
negation relation in our current form does not ex-
plore alternatives, where the negation has scope over
22
other EPs in the MRS, nor are more refined changes
from positive to negative polarity items considered.
Before inserting the negation relation EP into the
existing MRS structure with its required handle con-
straint, we have to identify the EP we want to negate.
The event that is introduced by the highest scoping
verb is used. The event variable e2 is directly acces-
sible at the top of the MRS structure (cf. Figure 1).
The corresponding EP that we want to negate has the
event variable as value of its ARG0 attribute. This
EP has a handle h8 that has to be outscoped by the
negation by means of a handle constraint. Hence, a
new negation relation EP (in the example it got the
handle h10) is inserted with the following condition:
Its ARG1 attribute value has to be token identical to
the left side of a =q constraint. The right side is set
to the just identified handle h8 of the verb.
4.3 Generation
The same grammars used for parsing can also be
used by the generator of the Lexical Knowledge
Builder Environment (Copestake, 2002) to gener-
ate an n-best list of surface realizations given an
MRS structure. However, we only consider the high-
est ranked realization. For the English generation,
a generation ranking model is provided within the
DELPH-IN project, thus providing a more confident
n-best list. For the current Japanese grammar, no
such model is available.
An example of a successful generation can be
found in Table 2. On the English side, two surface
variations are generated. The Japanese realizations
show more variations in honorification and aspect.
We can only negate sentence pairs in both lan-
guages for 13.3% of the training data (18,727). This
is mainly because of the brittleness of the Japanese
generation (Goodman and Bond, 2009). Further,
there are multiple ways of negating sentences and
we do not always select the correct one.
4.4 Expanded Parallel Corpus Compilation
The method for assembling the expanded version of
the parallel corpus for the use as training or devel-
opment data directly influences translation quality.
This is also demonstrated in Nichols et al (2010),
where various versions of padding out the data and
preserving the word distribution are compared. The
reported differences in performance suggest the im-
portance of the method. Therefore, we have experi-
mented with the following versions:
? Append: The obtained negated sentence pairs
are added to the original corpus. Only the high-
est ranked realization per sentence for each lan-
guage is considered. Thus they are aligned with
each other. This leads to the addition of the fol-
lowing sentence pair where bilingual negation
was successful:
(en original,jp original)
(en negated 1,jp negated 1) added
? Padding: In order to preserve the word dis-
tribution as mentioned above, we addition-
ally padded out the sentence pairs by copying,
where no bilingual negation was possible:
(en original,jp original)
(en original,jp original) added
? Replace: For emphasizing the impact of
negated sentences, a variant of Append was
compiled. Instead of adding the original pair of
a successful bilingual negation the former was
replaced by the latter:
(en negated 1,jp negated 1) substi-
tuted
Another way of testing the quality of the gener-
ated rephrases is to include them in the language
model training. The expectation is that when the
rephrases are of good quality, then the language
model will be better and in turn should have posi-
tive result on the overall SMT.
5 Experiments & Evaluation
We experiment with the phrase-based statistical ma-
chine translation toolkit Moses (Koehn et al, 2007)
in order to train a Japanese - English system and
to show the influence of the expanded parallel cor-
pora obtained with negation rephrasing on transla-
tion performance.
5.1 Data
The Tanaka corpus is used as a basis for our exper-
iments. We tokenize and truecase the English side,
the Japanese side is already tokenized and there are
no case distinctions. Sentences longer than 40 to-
kens are removed. For evaluation, the English part
is recased and detokenized.
23
English Japanese
original I aim to be a writer. ????????????
negated I don?t aim to be a writer. ????????????
I do not aim to be a writer. ?????????????
???????????
??????????
???????????
??????????
Table 2: English and Japanese generations of a successfully rephrased sentence pair.
The sentence and token statistics for the original
Tanaka corpus and our various extensions are listed
in Table 3. The original corpus version acts as base-
line data with profiles 006?100 as training and 000?
002 as development data. For the extended systems,
the training data as described in Section 4.4 is used.
The same methods are applied on the development
portion of the Tanaka corpus for tuning. The full test
data has 42,305 English and 53,242 Japanese tokens
and 4,500 sentences and is equal to the Tanaka cor-
pus profiles 003?005.
The language model training data is in almost all
cases equal to the original English Tanaka training
data. Only in the Append + neg LM experiment, the
training data for the language model is equal to the
Append training data, except that it is slightly larger,
since long sentences have not been filtered out. The
expanded language model training data consists of
1,476,231 tokens and 160,069 sentences.
5.2 Different Test Sets
In order to find out the performance of the baseline
and the extended systems on negative sentences, the
test data has to be split up into several subsets, most
notably neg-strict and pos-strict. The former only
contains negated sentences, the latter only positive
sentences. The definition of both is based on the ex-
istence of a negation relation EP in the semantics of
the sentence. In order to obtain the semantic struc-
ture, the sentence pairs have to be parsed success-
fully. This also means, we will have some sentence
pairs for which we cannot make a decision. There-
fore, we provide a third test subset biparse, which
contains all the parsable sentence pairs. This set re-
veals the big jump of BLEU score compared to the
fourth test set al, which is the regular test set of the
Tanaka corpus. A combined dataset with pos-strict-
neg-strict is provided, which is the union of the first
two sets.
5.3 Setup
We use Moses (SVN revision 4293) with Giza++
(Och and Ney, 2003) and the SRILM toolkit 1.5.12
(Stolcke, 2002). The language model is trained as
a 5-order model with Kneser-Ney discounting. The
Giza++ alignment heuristic grow-diag-final-and is
used. All systems are tuned with MERT (Och,
2003). Several tunings for each system are run, the
best performing ones are reported here.
5.4 Results
The results of our experiments can be seen in Ta-
ble 4. The baseline is outperformed by our two best
variations Append and Append + neg LM with re-
spect to the entire test set. The differences in BLEU
points are 0.14 and 0.16, which are not statistically
significant according to the paired bootstrap resam-
pling method (Koehn, 2004).
When looking at the test set neg-strict that only
contains negated sentences, our improvement is
much more apparent. The gain of our best perform-
ing model Append + neg LM compared to the base-
line is at 1.63 BLEU points, which is statistically
significant (p < 0.05). On the other hand there is
a statistically insignificant drop of 0.30 with pos-
strict.
The model with the expanded language model
training data (Append + neg LM) always performs
24
Tokens Sentences
train dev train dev
Baseline 1,300,821 / 1,641,591 42,248 / 52,822 141,147 4,500
Append 1,469,569 / 1,841,139 47,905 / 59,400 159,874 5,121
Padding 2,628,757 / 3,293,246 85,422 / 105,952 282,294 9,000
Replace 1,327,936 / 1,651,655 43,174 / 53,130 141,147 4,500
Table 3: Counts of tokens and sentences of the original Tanaka corpus and our expanded versions. Tokens
are split up in English/Japanese counts.
better than the model under the same conditions ex-
cept language model training data (Append).
When padding out the original data to preserve the
word distribution in Padding, the effect of the addi-
tional negated training pairs is not strong enough.
Both scores on the entire test set, as well as on the
negation specific test set drop below the baseline.
This version performs slightly better overall com-
pared to Replace, however, on neg-strict it is a lot
worse.
We manually checked the neg-strict test data set
of our best performing system Append + neg LM
versus the baseline, checking only whether the nega-
tion was translated or not (ignoring the overall qual-
ity). For 146 sentences, both systems correctly
translated the negation. For 76 sentences both sys-
tems failed to translate the negation. For 33 sen-
tences Append + neg LM translated the negation
where the baseline system did not, and for 30 sen-
tences the baseline system translated the negation
but Append + neg LM did not. Overall, we reduced
the number of critical negation errors from 99 to 96.
Some example sentences are given in Figure 2.
6 Discussion
For identifying the performance of a state-of-the-art
baseline system on negated sentences, we have split
the test data into several distinct sets. The transla-
tion quality drops considerably by about 3 BLEU
points when looking at the negative data compared
to the parsable test data biparse. This big decline
and the difference between performance on negative
vs. positive test data shows that there is great poten-
tial to improve SMT systems by tackling this prob-
lem. Our approach is successful in handling nega-
tions better and thus diminishing the discrepancy of
the two sets.
As the results show, there is only a small decrease
of BLEU score points on the positive test data. And
on the negative test data, the increase is substan-
tially higher. Nevertheless, the overall performance
in terms of BLEU only reflects this high increase to
a certain degree. This can be attributed to the fact
that the test data has a similar distribution to that of
the training data, i.e. the proportion of negative sen-
tences is low. Thus, the big increase gets diluted in
the overall test data.
The results further show that improvement on the
negative test data set comes at the cost of a slight
degradation of performance on the positive data set
and hence also on the full test set. This behaviour
is not surprising due to the fact that a positive and
its negative correspondent only vary very little when
looking at the surface structure. The models trained
with our extended data are aimed at providing one
model which provides a balance between this gain
and the loss.
This notion suggests that one would benefit from
providing two separate translation models, one for
negated input data and one for positive data. In this
setting, the ample amount of negative training data
that we generated through rephrasing could be ex-
ploited even more. A yet higher increase of BLEU
score is expected. This of course requires a prepro-
cessing step that confidently splits up the data ac-
cordingly. However, since we have the grammars at
hand that can reliably determine whether there is a
semantic negation relation in the input, this step can
be solved easily. One small disadvantage with this
idea is that a decision can only be made if the gram-
25
Test data sets all biparse neg-strict pos-strict pos-strict-neg-strict
Sentence counts 4500 3399 285 2684 2969
Baseline 22.87 25.76 22.77 26.60 26.25
Append 23.01 25.78 24.04 26.22 26.25
Append + neg LM 23.03 25.88 24.40 26.30 26.28
Padding 22.74 25.54 22.62 26.35 26.06
Replace 22.55 25.35 23.36 26.00 25.84
Table 4: Japanese-English translation evaluation results of the baseline and our extended systems.
mar of the input language produces a parse for the
input sentence. This however can be circumvented
by backing off to the well balanced model presented
in this work. In other words, we use a positive model
for positive sentences, a negative model for negative
sentences and a balanced model if we are not sure.
Our method depends on two large-scale deep se-
mantic grammars. However, developing such gram-
mars has been made much more efficient with the
emergence of the Grammar Matrix (Bender et al,
2002). There is is already a large collection of work-
ing grammars, which can readily be tried out. In
addition to the ERG and Jacy, there are grammars
for German, French, Korean, Modern Greek, Nor-
wegian, Spanish, Portuguese, and more, with vary-
ing levels of coverage.2
Because parsing, rephrasing and generation do
not have 100% coverage, we cannot produce negated
versions of all sentences. The rephrasing can only
work when both sides of a sentence pair are parsable.
Furthermore, not every rephrased sentence pair can
be successfully realized. However, we still manage
to build far more negated training data than is oth-
erwise available: more than doubling the amount.
This could be further increased by a little more work
on the generation, especially for Jacy. In addition,
we have not made use of all the generated data, i.e.
lower ranked realizations have been discarded even
though they may still be useful.
Furthermore, we have shown in the experiment re-
sults that using our expanded version for language
model training is also of great benefit, since we
could achieve not only an overall increase, but es-
pecially one on negated test data.
2moin.delph-in.net/GrammarCatalogue
7 Conclusion & Future Work
We have presented an approach which alleviates
the negation translation difficulties of phrase-based
SMT. We have tackled the problem by automati-
cally expanding the training data with negated sen-
tence pairs. The additional data has been obtained
by rephrasing existing data based on the semantic
structure of the input.
Our experiments with the phrase-based SMT sys-
tem Moses show small improvements over the base-
line considering the entire test data. A more dis-
tinct look at only negated sentences in the test data
shows a statistically significant improvement of 1.63
BLEU points. The best performing model represents
a good balance of a high BLEU score increase on the
negated test data vs. a statistically insignificant de-
crease on the positive test data, yet achieving a small
overall improvement. Furthermore, it was shown,
that expanding not only the translation training data,
but also the language model training data boosts per-
formance even more.
Our method works on the semantic level and can
be easily adapted to other languages. Having ac-
cess to a deep semantic structure opens possible ex-
tensions along our idea. On the one hand negation
rephrasing could be refined in order to have a higher
generation rate. On the other hand, other phenomena
could also be tackled in the same way: e.g. rephras-
ing declarative statements to interrogatives.
Just for negation, the corpora expanded with our
high quality negations could be combined with the
syntactic reordering strategies presented in Section 2
such that the negation reordering rule has more train-
ing data and thus a bigger influence on the overall
performance.
26
Acknowledgements
This research was supported in part by the Erasmus
Mundus Action 2 program MULTI of the European
Union, grant agreement number 2009-5259-5.
References
Bender, E. M., Flickinger, D., and Oepen, S. (2002).
The grammar matrix: An open-source starter-kit
for the rapid development of cross-linguistically
consistent broad-coverage precision grammars. In
Proceedings of the Workshop on Grammar Engi-
neering and Evaluation at the 19th International
Conference on Computational Linguistics, pages
8?14, Taipei, Taiwan.
Bender, E. M. and Siegel, M. (2004). Implement-
ing the syntax of Japanese numeral classifiers. In
Proceedings of the IJC-NLP-2004.
Bond, F., Kuribayashi, T., and Hashimoto, C.
(2008). Construction of a free Japanese tree-
bank based on HPSG. In 14th Annual Meeting
of the Association for Natural Language Process-
ing, pages 241?244, Tokyo. (in Japanese).
Callison-Burch, C., Koehn, P., and Osborne, M.
(2006). Improved statistical machine translation
using paraphrases. In Proceedings of the Human
Language Technology Conference of the NAACL,
Main Conference, pages 17?24, New York City,
USA. Association for Computational Linguistics.
Callmeier, U. (2000). PET - a platform for exper-
imentation with efficient HPSG processing tech-
niques. Natural Language Engineering, 6(1):99?
108.
Collins, M., Koehn, P., and Kucerova, I. (2005).
Clause Restructuring for Statistical Machine
Translation. In Proceedings of the 43rd Annual
Meeting of the ACL, Ann Arbor, Michigan. ACL.
Copestake, A. (2002). Implementing Typed Feature
Structure Grammars. CSLI Publications.
Copestake, A., Flickinger, D., Pollard, C., and Sag,
I. A. (2005). Minimal Recursion Semantics ? An
Introduction. Research on Language and Compu-
tation, 3:281?332.
Flickinger, D. (2000). On building a more efficient
grammar by exploiting types. Natural Language
Engineering, 6(1):15?28. (Special Issue on Effi-
cient Processing with HPSG).
Gao, Q. and Vogel, S. (2011). Corpus expansion
for statistical machine translation with semantic
role label substitution rules. In Proceedings of the
49th Annual Meeting of the Association for Com-
putational Linguistics: Human Language Tech-
nologies, pages 294?298, Portland, Oregon, USA.
Association for Computational Linguistics.
Goodman, M. W. and Bond, F. (2009). Using gen-
eration for grammar analysis and error detection.
In Joint conference of the 47th Annual Meeting
of the Association for Computational Linguistics
and the 4th International Joint Conference on
Natural Language Processing of the Asian Fed-
eration of Natural Language Processing, pages
109?112, Singapore.
He, W., Zhao, S., Wang, H., and Liu, T. (2011).
Enriching smt training data via paraphrasing. In
Proceedings of 5th International Joint Conference
on Natural Language Processing, pages 803?810,
Chiang Mai, Thailand. Asian Federation of Natu-
ral Language Processing.
Koehn, P. (2004). Statistical Significance Tests for
Machine Translation Evaluation. In Proceed-
ings of EMNLP 2004, pages 388?395, Barcelona,
Spain. Association for Computational Linguis-
tics.
Koehn, P., Hoang, H., Birch, A., Callison-Burch, C.,
Federico, M., Bertoldi, N., Cowan, B., Shen, W.,
Moran, C., Zens, R., Dyer, C., Bojar, O., Con-
stantin, A., and Herbst, E. (2007). Moses: Open
Source Toolkit for Statistical Machine Transla-
tion. In Annual Meeting of the ACL.
Marton, Y., Callison-Burch, C., and Resnik, P.
(2009). Improved statistical machine translation
using monolingually-derived paraphrases. In Pro-
ceedings of the 2009 Conference on Empirical
Methods in Natural Language Processing, pages
381?390, Singapore. Association for Computa-
tional Linguistics.
Nichols, E., Bond, F., Appling, D. S., and Mat-
sumoto, Y. (2010). Paraphrasing Training Data
for Statistical Machine Translation. Journal of
Natural Language Processing, 17(3):101?122.
27
Och, F. J. (2003). Minimum Error Rate Training in
Statistical Machine Translation. In Proceedings of
the 41st Annual Meeting of ACL, pages 160?167.
Och, F. J. and Ney, H. (2003). A Systematic Com-
parison of Various Statistical Alignment Models.
Computational Linguistics, 29:19?51.
Stolcke, A. (2002). SRILM ? An Extensible Lan-
guage Modeling Toolkit. In Proc. Intl. Conf. on
Spoken Language Processing, volume 2, pages
901?904, Denver.
Tanaka, Y. (2001). Compilation of a multilingual
parallel corpus. In Proceedings of PACLING
2001, pages 265?268, Kyushu.
28
Japanese ???????????????
Baseline They played tennis yesterday.
Append + neg LM They do not play tennis yesterday.
Reference Yesterday they didn?t play tennis, because it rained.
(a) Baseline fails to translate the negation.
Japanese ?????????????????????????
Baseline He is sure to break your promise, I?m sure.
Append + neg LM He never breaks his word, I?m sure.
Reference I?m sure he won?t fail to keep his word.
(b) Correct translation by our system with valid variation of wording.
Japanese ??????????????????????
Baseline I was when I came home, he was asleep.
Append + neg LM I came home when he is not asleep.
Reference He wasn?t sleeping when I came home.
(c) Baseline omits the negation.
Japanese ???????????????
Baseline Money with me.
Append + neg LM I don?t have any money with me.
Reference I don?t have any money with me.
(d) Baseline omits subject, verb and negation.
Japanese ???????????????????
Baseline The???? in Japan, I cannot see it.
Append + neg LM The???? in Japan.
Reference The Southern Cross is not to be seen in Japan.
(e) Our system does not translate a part of the sentence.
Japanese ????????????
Baseline Don?t speak in a loud voice.
Append + neg LM You must speak in a loud voice.
Reference You must not speak loudly.
(f) Our system omits the negation.
Japanese ??????????
Baseline She has no friends.
Append + neg LM She is a friend of mine.
Reference She doesn?t have a boy friend.
(g) Our system does not produce a negation. The object is incorrectly trans-
lated in both systems.
Figure 2: Sentences from the neg-strict test set showing differences between the baseline and our best
performing system Append + neg LM. Examples in (a?d) show improvements, (e?g) show degradations.
29
