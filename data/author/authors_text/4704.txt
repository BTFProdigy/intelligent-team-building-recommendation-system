Proceedings of the ACL 2007 Demo and Poster Sessions, pages 21?24,
Prague, June 2007. c?2007 Association for Computational Linguistics
Multilingual Ontological Analysis of European Directives
Gianmaria Ajani
Dipartimento di Scienze Giuridiche
Universita` di Torino - Italy
gianmaria.ajani@unito.it
Guido Boella
Leonardo Lesmo
Alessandro Mazzei
Dipartimento di Informatica
Universita` di Torino - Italy
[guido|lesmo|mazzei]@di.unito.it
Piercarlo Rossi
Dipartimento di Studi per l?Impresa e il Territorio
Universita` del Piemonte Orientale - Italy
piercarlo.rossi@eco.unipmn.it
Abstract
This paper describes the main features of our
tool called ?Legal Taxonomy Syllabus?. The
system is an ontology based tool designed to
annotate and recover multi-lingua legal in-
formation and build conceptual dictionaries
on European Directives.
1 Introduction
The European union each year produces a large
number of Union Directives (EUD), which are trans-
lated into each of the communitary languages. The
EUD are sets of norms that have to be implemented
by the national legislations. The problem of multi-
linguism in European legislation has recently been
addressed by using linguistic and ontological tools,
e.g. (Boer et al, 2003; Giguet and P.S., 2006; De-
spre?s and Szulman, 2006). The management of
EUD is particularly complex since the implementa-
tion of a EUD however not correspond to the straight
transposition into a national law. An EUD is subject
to further interpretation, and this process can lead to
unexpected results. Comparative Law has studied in
details the problematics concerning EUD and their
complexities. On the other hand managing with ap-
propriate tools this kind of complexity can facilitate
the comparison and harmonization of national legis-
lation (Boer et al, 2003). Based on this research, in
this paper, we describe the tool for building multilin-
gual conceptual dictionaries we developed for repre-
senting an analysing the terminology and concepts
used in EUD.
The main assumptions of our methodology, mo-
tivated by studies in comparative law (Rossi and
Vogel, 2004) and ontologies engineering (Klein,
2001), are the following ones: 1) Terms and con-
cepts must be distinguished; for this purpose, we
use lightweight ontologies, i.e. simple taxonomic
structures of primitive or composite terms together
with associated definitions. They are hardly axiom-
atized as the intended meaning of the terms used by
the community is more or less known in advance
by all members, and the ontology can be limited to
those structural relationships among terms that are
considered as relevant (Oberle, 2005)1. 2) We dis-
tinguish the ontology implicitly defined by EUD,
the EU level, from the various national ontologies,
the national level. Furthermore, each national leg-
islation refers to a distinct national legal ontology.
We do not assume that the transposition of an EUD
introduces automatically in a national ontology the
same concepts present at the EU level. 3) Corre-
sponding concepts at the EU level and at the national
level can be denoted by different terms in the same
national language.
In this paper, we show how the Legal Taxon-
omy Syllabus (LTS) is used to build a dictionary
of consumer law, to support the Uniform Terminol-
ogy Project2 (Rossi and Vogel, 2004). The struc-
ture of this paper is the following one. In Section 2
we stress two main problems which comparative law
has raised concerning EUD and their transpositions.
In Section 3 we describe how the methodology of
the LTS allows to cope with these problems and fi-
nally in Section 4we give some conclusions.
1See http://cos.ontoware.org/
2http://www.uniformterminology.unito.it
21
2 Terminological and conceptual
misalignment
Comparative law has identified two key points in
dealing with EUD, which makes more difficult deal-
ing with the polysemy of legal terms: we call them
the terminological and conceptual misalignments.
In the case of EUD (usually adopted for harmon-
ising the laws of the Member States), the termino-
logical matter is complicated by their necessity to
be implemented by the national legislations. In or-
der to have a precise transposition in a national law,
a Directive may be subject to further interpretation.
Thus, a same legal concept can be expressed in dif-
ferent ways in a Directive and in its implementing
national law. The same legal concept in some lan-
guage can be expressed in a different way in a EUD
and in the national law implementing it. As a con-
sequence we have a terminological misalignment.
For example, the concept corresponding to the word
reasonably in English, is translated into Italian as
ragionevolmente in the EUD, and as con ordinaria
diligenza into the transposition law.
In the EUD transposition laws a further problem
arises from the different national legal doctrines.
A legal concept expressed in an EUD may not be
present in a national legal system. In this case we
can talk about a conceptual misalignment. To make
sense for the national lawyers? expectancies, the Eu-
ropean legal terms have not only to be translated
into a sound national terminology, but they need to
be correctly detected when their meanings are to re-
fer to EU legal concepts or when their meanings are
similar to concepts which are known in the Member
states. Consequently, the transposition of European
law in the parochial legal framework of each Mem-
ber state can lead to a set of distinct national legal
doctrines, that are all different from the European
one. In case of consumer contracts (like those con-
cluded by the means of distance communication as
in Directive 97/7/EC, Art. 4.2), the notion to pro-
vide in a clear and comprehensible manner some el-
ements of the contract by the professionals to the
consumers represents a specification of the informa-
tion duties which are a pivotal principle of EU law.
Despite the pairs of translation in the language ver-
sions of EU Directives (i.e., klar und versta?ndlich
in German - clear and comprehensible in English -
chiaro e comprensibile in Italian), each legal term,
when transposed in the national legal orders, is in-
fluenced by the conceptual filters of the lawyers?
domestic legal thinking. So, klar und versta?ndlich
in the German system is considered by the German
commentators referring to three different legal con-
cepts: 1) the print or the writing of the informa-
tion must be clear and legible (gestaltung der infor-
mation), 2) the information must be intelligible by
the consumer (formulierung der information), 3) the
language of the information must be the national of
consumer (sprache der information). In Italy, the
judiciary tend to control more the formal features of
the concepts 1 and 3, and less concept 2, while in
England the main role has been played by the con-
cept 2, though considered as plain style of language
(not legal technical jargon) thanks to the historical
influences of plain English movement in that coun-
try.
Note that this kind of problems identified in com-
parative law has a direct correspondence in the on-
tology theory. In particular Klein (Klein, 2001) has
remarked that two particular forms of ontology mis-
match are terminological and conceptualization on-
tological mismatch which straightforwardly corre-
spond to our definitions of misalignments.
3 The methodology of the Legal Taxonomy
Syllabus
A standard way to properly manage large multilin-
gual lexical databases is to do a clear distinction
among terms and their interlingual acceptions (or
axies) (Se?rasset, 1994; Lyding et al, 2006). In
our system to properly manage terminological and
conceptual misalignment we distinguish in the LTS
project the notion of legal term from the notion of
legal concept and we build a systematic classifica-
tion based on this distinction. The basic idea in
our system is that the conceptual backbone consists
in a taxonomy of concepts (ontology) to which the
terms can refer to express their meaning. One of
the main points to keep in mind is that we do not
assume the existence of a single taxonomy cover-
ing all languages. In fact, it has been convincingly
argued that the different national systems may orga-
nize the concepts in different ways. For instance,
the term contract corresponds to different concepts
22
EU ontology Italian ontology German ontology 
Term-Ita-A Term-Ger-A 
EU-1 
Ita-2 
Ger-3 
Ger-5 
Ita-4 
Figure 1: Relationship between ontologies and
terms. The thick arcs represent the inter-ontology
?association? link.
in common law and civil law, where it has the mean-
ing of bargain and agreement, respectively (Sacco,
1999). In most complex instances, there are no
homologous between terms-concepts such as frutto
civile (legal fruit) and income, but respectively civil
law and common law systems can achieve function-
ally same operational rules thanks to the function-
ing of the entire taxonomy of national legal concepts
(Graziadei, 2004). Consequently, the LTS includes
different ontologies, one for each involved national
language plus one for the language of EU docu-
ments. Each language-specific ontology is related
via a set of association links to the EU concepts, as
shown in Fig. 1.
Although this picture is conform to intuition, in
LTS it had to be enhanced in two directions. First,
it must be observed that the various national ontolo-
gies have a reference language. This is not the case
for the EU ontology. For instance, a given term in
English could refer either to a concept in the UK on-
tology or to a concept in the EU ontology. In the
first case, the term is used for referring to a concept
in the national UK legal system, whilst in the second
one, it is used to refer to a concept used in the Euro-
pean directives. This is one of the main advantages
of LTS. For example klar und versta?ndlich could re-
fer both to concept Ger-379 (a concept in the Ger-
man Ontology) and to concept EU-882 (a concept
in the European ontology). This is the LTS solution
for facing the possibility of a correspondence only
partial between the meaning of a term has in the na-
tional system and the meaning of the same term in
the translation of a EU directive. This feature en-
ables the LTS to be more precise about what ?trans-
lation? means. It puts at disposal a way for asserting
that two terms are the translation of each other, but
just in case those terms have been used in the trans-
lation of an EU directive: within LTS, we can talk
about direct EU-translations of terms, but only about
indirect national-system translations of terms. The
situation enforced in LTS is depicted in Fig. 1, where
it is represented that: The Italian term Term-Ita-A
and the German term Term-Ger-A have been used as
corresponding terms in the translation of an EU di-
rective, as shown by the fact that both of them refer
to the same EU-concept EU-1. In the Italian legal
system, Term-Ita-A has the meaning Ita-2. In the
German legal system, Term-Ger-A has the meaning
Ger-3. The EU translations of the directive is cor-
rect insofar no terms exist in Italian and German that
characterize precisely the concept EU-1 in the two
languages (i.e., the ?associated? concepts Ita-4
and Ger-5 have no corresponding legal terms). A
practical example of such a situation is reported in
Fig. 2, where we can see that the ontologies include
different types of arcs. Beyond the usual is-a (link-
ing a category to its supercategory), there are also
a purpose arc, which relates a concept to the legal
principle motivating it, and concerns, which refers
to a general relatedness. The dotted arcs represent
the reference from terms to concepts. Some terms
have links both to a National ontology and to the EU
Ontology (in particular, withdrawal vs. recesso and
difesa del consumatore vs. consumer protection).
The last item above is especially relevant: note
that this configuration of arcs specifies that: 1) with-
drawal and recesso have been used as equivalent
terms (concept EU-2) in some European Directives
(e.g., Directive 90/314/EEC). 2) In that context, the
term involved an act having as purpose the some
kind of protection of the consumer. 3) The terms
used for referring to the latter are consumer protec-
tion in English and difesa del consumatore in Ital-
ian. 4) In the British legal system, however, not
all withdrawals have this goal, but only a subtype
of them, to which the code refers to as cancellation
(concept Eng-3). 5) In the Italian legal system, the
term diritto di recesso is ambiguous, since it can be
used with reference either to something concerning
23
Figure 2: An example of interconnections among
terms.
the risoluzione (concept Ita-4), or to something
concerning the recesso proper (concept Ita-3).
Finally, it is possible to use the LTS to translate
terms into different national systems via the con-
cepts which they are transposition of at the European
level. For instance suppose that we want to trans-
late the legal term credito al consumo from Italian
to German. In the LTS credito al consumo is asso-
ciated to the national umeaning Ita-175. We find
that Ita-175 is the transposition of the European
umeaning EU-26 (contratto di credito). EU-26 is
associated to the German legal term Kreditvertrag
at European level. Again, we find that the national
German transposition of EU-26 corresponds to the
national umeaning Ger-32 that is associated with
the national legal term Darlehensvertrag. Then, by
using the European ontology, we can translate the
Italian legal term credito al consumo into the Ger-
man legal term Darlehensvertrag.
4 Conclusions
In this paper we discuss some features of the LTS, a
tool for building multilingual conceptual dictionar-
ies for the EU law. The tool is based on lightweight
ontologies to allow a distinction of concepts from
terms. Distinct ontologies are built at the EU level
and for each national language, to deal with poly-
semy and terminological and conceptual misalign-
ment.
Many attempts have been done to use ontology
in legal field, e.g. (Casanovas et al, 2005; De-
spre?s and Szulman, 2006) and LOIS project (that is
based on EuroWordNet project (Vossen et al, 1999),
http://www.loisproject.org), but to our
knowledge the LTS is the first attempt which starts
from fine grained legal expertise on the EUD do-
main.
Future work is to study how the LTS can be used
as a thesaurus for general EUD, even if the current
domain is limited to consumer law.
References
A. Boer, T.M. van Engers, and R. Winkels. 2003. Using
ontologies for comparing and harmonizing legislation.
In ICAIL, pages 60?69.
P. Casanovas, N. Casellas, C. Tempich, D. Vrandecic, and
R. Benjamins. 2005. OPJK modeling methodology.
In Proceedings of the ICAIL Workshop: LOAIT 2005.
S. Despre?s and S. Szulman. 2006. Merging of legal
micro-ontologies from european directives. Artificial
Intelligence and Law, ??:????? In press.
E. Giguet and P.S. 2006. Multilingual lexical database
generation from parallel texts in 20 european lan-
guages with endogenous resources. In Proceedings of
the COLING/ACL 2006 Main Conference Poster Ses-
sions, pages 271?278, July.
M. Graziadei. 2004. Tuttifrutti. In P. Birks and A. Pretto,
editors, Themes in Comparative Law, pages ?. Oxford
University Press.
M. Klein. 2001. Combining and relating ontologies: an
analysis of problems and solutions. In Workshop on
Ontologies and Information Sharing, IJCAI?01, Seat-
tle, USA.
V. Lyding, Elena Chiocchetti, G. Se?rasset, and F. Brunet-
Manquat. 2006. The LexALP information system:
Term bank and corpus for multilingual legal termi-
nology consolidated. In Proc. of the Wokshop on
Multilingual Language Resources and Interoperabil-
ity, ACL06, pages 25?31.
D. Oberle, editor. 2005. Semantic Management of Mid-
dleware. Springer Science+Business and Media.
P. Rossi and C. Vogel. 2004. Terms and concepts; to-
wards a syllabus for european private law. European
Review of Private Law (ERPL), 12(2):293?300.
R. Sacco. 1999. Contract. European Review of Private
Law, 2:237?240.
G. Se?rasset. 1994. Interlingual lexical organization for
multilingual lexical databases in NADIA. In Proc.
COLING94, pages 278?282.
P. Vossen, W. Peters, and J. Gonzalo. 1999. Towards a
universal index of meaning. In Proc. ACL-99 Siglex
Workshop.
24
Social Goals in Conversational Cooperation 
Guido  Boe l la ,  Rossana  Damiano  and  Leonardo  Lesmo 
Dipartimento dii informatica nd Centro di Scienza Cognitiva 
Universita' di Torino 
Cso Svizzera 185 10149 Torino, ITALY 
email: {guido,rossana,lesmo}@di.unito.it 
Abst ract  
We propose a model where dialog 
obligations arise from the interplay 
of social goals and intentions of the 
participants: when an agent is ad- 
dressed with a request, t:he agent's 
decision to commit o the requester's 
linguistic and domain goals is mo- 
tivated by a trade-off between the 
preference for preventing a negative 
reaction of the requester and the 
cost of the actions needed to satisfy 
the goals. 
1 In t roduct ion  
As noticed by (Airenti et al, 1993), a dialog 
.participant, even when he does not commit o 
the domain goals of his partner (i.e., he does- 
n't cooperate behaviorally), typically contin- 
ues to cooperate at the conversational level. 
\[1\] A: Do you have Marlboros? 
B: Uh, no. We ran out 1 
\[2\] A: Can you tell me the time? 
? B :  No. My watch is broken 2
\[3\] A: Could you give me some money 
for the booze? 
B: I won't giv e you a dime 
What leads people to exhibit these forms of 
cooperation? (Traum and Allen, 1994) have 
challenged intention-based approaches to di- 
alog modeling ((Cohen and Levesque, 1990), 
(Lambert and Carberry, 1991), (Airenti et al, 
1993)) arguing that, in non-cooperative s t- 
tings (i.e., when the participants do not have 
1 (Merrit, 1976) 
~(Green and Carberry, 1999) 
shared goals), intention-based approaches 
leave unexplained why a participant should 
bother to be cooperative, both at the con- 
versational and at the behavioral level. In 
order to overcome these difficulties, (Traum 
and Allen, 1994) claim that speech acts 
pose obligations on the hearer: obligations 
are pro-attitudes which provide the hearer 
with a motivation to act, even if he is not 
- strictly speaking - cooperating with the 
speaker. Elaborating this proposal, (Poesio 
and Traum, 1998) propose to add obligations 
to the illocutive effect of speech acts: for in- 
stance, a (successful) question would pose on 
the addressee the obligation to answer; and, 
in general, a speech act poses the obligation 
to ground it. 
While we agree with (Traum and Allen, 1994) 
that cooperation between agents who are not 
part of a group has to be explained by some 
mechanism which obliges an agent to answer 
- at least for refusing explicitly - we want to 
go deeper inside the notion of obligation and 
try to show that it is strictly related to that 
of intention. 
In order to explain obligations, we re- 
sort to the notion of social goals, starting 
from (Goffman, 1981)'s sociolinguistic anal- 
ysis of interactions. We argue that, in non- 
cooperative situations, social goals provide 
agents with the motivation for committing to 
other agents' communicated goals. As shown 
by (Brown and Levinson, 1987), an agent has 
the social goal of taking into account he face 
of other people (and his own as well); this 
concern generates complementary needs for 
the requester and for the requestee. From 
the requester's point of view, it results in 
84 
the production of complex linguistic forms 
aimed at reducing the potential offence in- 
trinsic to a demand to act (conversationally 
or behaviorally); from the requestee's point 
of view, while acceptance normally addresses 
the requester's potential offence by a display- 
ing of good-tempered feelings, any refusal at 
the conversational or behavioral level consti- 
tutes in turn a potential offence to the reques- 
tee's face, and sets up the social need for the 
refusing agent to act in order to nullify this 
potential offence (Goffman, 1981). 
Differently from obligations, ocial goals in- 
fluence actions in an indirect way: in order 
to evaluate the effects of an action on his in- 
terlocutor, an agent has to make a tentative 
prediction of his reaction (anticipatory coordi- 
nation) (Castelfranchi, 1998). This prediction 
allows the agent o keep the partner's possible 
reaction into account when planning his next 
(domain or linguistic) action. Social goals in- 
tervene as preferences during the action se- 
lection phase, by leading the planning agent 
to choose the actions which minimize the of- 
fence to the partner and address the potential 
offence conveyed by a refusal. 
2 The  In teract iona l  F ramework  
2.1 Goals and Preferences 
We assume that every agent A has a set of 
goals G, and a set of preferences P towards 
states of affairs. Besides, an agent has at his 
disposal a set of action operators (recipes for 
achieving domain and linguistic goals, corre- 
sponding to behavioral nd conversational co- 
operation) organized in a hierarchical way. 
The preferences of an agent are expressed 
as functions which map states, represented as 
sets of attribute-value pairs, to real numbers; 
an overall utility function, which consists of 
the weighted sum of the individual functions, 
expresses the utility of reaching the state de- 
picted by a certain configuration ofattributes, 
according to the results of the multi-attribute 
utility theory (Haddawy and Hanks, 1998). 
Goals provide the input to the planning pro- 
cess; in addition, they can appear in the pref- 
erences of the agent, i.e., they can be related 
to a utility function which evaluates the ex- 
pected utility of achieving them 3. On the ba- 
sis of his goals and of the recipes he knows, 
an agent builds a set of plans, by selecting the 
recipes which have among their effects one (or 
more) of the goals in the set. 4 
The planner we use is a modification of the 
DRIPS decision-theoretic h erarchical planner 
(Haddawy and Hanks, 1998). The planning 
process tarts by applying to the current state 
all selected recipes and recursively expands 
the partial plans until the appropriate l vel 
of detail is reached. When the planning algo- 
rithm concludes the refinement of the input 
recipes, it returns the preferred plan, i. e., 
the one with the highest expected utility: the 
agent becomes committed to that plan, which 
constitutes his current intention. The use of 
preferences allows a plan to be ewluated not 
only with respect o the fact that it achieves 
the goal it has been built for, but also with 
respect o its side effects (for instance, con- 
suming less resources). 
2.2 Ant ic ipatory  Coord inat ion and 
Adopt ion 
The planning situation depicted above 
becomes more complex when two or more 
agents interact. In particular, a goal of agent 
A may become known to agent B; a special 
occurrence of this situation arises when A 
has explicitly asked B for help. If this is the 
case, it is possible that agent B comes to 
choose a plan to satisfy this goal, even if it 
does not yield any direct utility to him. 
Notice that if an agent evaluated the utility 
of a plan for achieving a goal that has been 
requested by another agent only on the basis 
of its immediate outcome, he would never 
choose that plan in a non-cooperative s tting: 
performing an action for achieving another 
agent's goal often results only in a negative 
utility, since the side effects of the action 
ZNot all goals are among the preferred states of af- 
fairs, since there are instrurnentalgoals which arise as 
a consequence of the intention to achieve some higher- 
level goal. 
4In the planning process, we distinguish between 
primary effects, which are the goals that led to the 
selection of a given recipe, and side e_ffects, i.e., all 
other effects of the recipe. 
85 
cannot but affect resources and time. The 
reason why B m:topts a partner's goal is the 
fact that the satisfaction of an adopted goal 
can have an indirect utility for B in the light 
of A's reaction. Here, the ability of an agent 
to predict the potential reactions of another 
agent is exploited to decide whether it is 
worth for him to commit to the satisfaction 
of the other agent's goal. 
In order to evaluate how the partner's 
reaction affects his own preferences, like 
not offending the partner and other social 
goals, an agent evaluates the utility of a plan 
by considering the world states resulting 
from the other partner's reaction (one-level 
lookahead), both in case he has commit- 
ted to the partner's goals, and in case he 
has decided that they are not worth pursuing. 
The DRIPS planner has been modified to 
implement the following process of intention 
formation in interactions with other agents 
(see figure 1): 
1. adoption: if A communicates to B a goal 
gA which he wants B to achieve, then the cur- 
rent set of B's goals, GB, becomes G~, the 
union of {gA} and GB. 
2. planning: B builds the set of plans PB 
which aim at achieving (all or some of) the 
goals in G~ (in this way the plans achiev- 
ing also gA are compared with those which 
do not). 
3. anticipatory coordination: from the state 
resulting from each plan pi in PB, B considers 
the possible reaction of A: the world state 
resulting from the reaction becomes the new 
outcome of p~. 
4. preference-driven choice: B chooses the Pi 
in PB whose outcome maximizes his utility. 
For a detailed description of the planning 
algorithm with anticipatory coordination, see 
(Boella, 2000). 
In the following Section, we will show how so- 
cial obligations arise spontaneously in a model 
of conversational interaction which exploits 
the planning framework described above. 
3 Social  Goa ls  and  Conversat iona l  
Cooperat ion  
3.1 Social Goals 
In this section, we exploit the framework de- 
scribed above to model the complex dynamics 
of goals and social preferences that underlies 
examples like \[1\]. In particular, we consider 
the possibility that the partner is offended by 
the agent's response to a request. The offence 
is not modeled as a direct effect of an action 
of the agent. Instead, during the planning 
phase, the agent makes a tentative prediction 
of the partner's attitude in the state where 
he is faced with a refusal, in order to evaluate 
how this state complies with his preference 
for not offending: the partner is offended as a 
result of his reaction to the agent's refusal. 
In our model, the preference for not offend- 
ing the partner corresponds to a social goal ~ 
of an agent: this preference doesn't constitute 
an input to planning, but, by being embodied 
in the utility function of the agent, it con- 
tributes to plan selection, by promoting the 
plans which do not have offending as a conse- 
quence. This is in line with (Goffman, 1967)'s 
claim that "Ordinarily, maintenance of face is 
a condition of interaction, not its objective" 
(p.12). 
Some authors ((Schegloff and Sacks, 1973), 
(Coulthard, 1977)) have characterized the or- 
ganization of conversation i terms of proto- 
typical pairs, adjacency pairs. In our model, 
the existence of adjacency pairs is not mo- 
tivated by the action of specific grounding 
norms, or obligations. 6 Rather, these ex- 
changes are explained by the interplay of the 
communicative intentions of the participants, 
and by their ability to recognize the intentions 
of the interlocutors (Ardissono et al, 2000). 
Sin (Clark, 1996)'s terminology, goals like being 
polite are called interpersonal goals. 
o "Given a speaker's need to know whether his mes- 
sage has been received, and if so, whether or not has 
been passably understood, and given a recipient's need 
to show that he has received the message and correctly 
- given these very fundamental requirements of talk 
as a communication system - we have the essential ra- 
tionale for the existence ofadjacency pairs, that is, 
for the organization f talk into two-part exchanges" 
((Goffman, 1981), p. 12). 
86 
4. preference-driven choice 
; . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  
? =========================== _l 
f . . . . . . . . . . . .  ~ 3. anticipatory ~ J ~?~-~t~)~ 2. planning coordinta#on 
i , ~ Z ~ - .  A'S REACTION 
8', PuN2 . . . . .  
Figure 1: The intention formation process in interactions 
In general, the preference for not offending 
which encompasses conversational phenom- 
ena like request-response pairs, is motivated 
by the requestee's goal of displaying a good- 
tempered acceptance of the request itself: in 
(Goffman, 1981)'s terms, communicative ex- 
changes are subject to a set of "constraints 
regarding how each individual ought to han- 
dle himself with respect to each others, so that 
he not discredit his own tacit claim to good- 
character or the tacit claim of the others that 
they are persons of social worth (...)" (p. 16). 
Within an interaction, agents are aware of 
the fact that their actions have social effects, 
like conveying some information about their 
character and about their attitude towards 
the partner: "An act is taken to carry im- 
plications regarding the character of the ac- 
tor and his evaluation of his listeners, as well 
as reflecting on the relationship between him 
and them" ((Goffman, 1981), p. 21). As a 
consequence, agents are very cautious in the 
use of the expressive means they have at dis- 
posal, namely verbal actions: besides moni- 
toring the partner's reactions, they try to an- 
ticipate them with the aim of not offending 
the partner. 
The preference for not offending holds as 
well in the circumstances where an agent is 
forced to refuse his cooperation by the impos- 
sibility of executing the appropriate action to 
achieve the partner's goal. However, if this is 
the case, the requestee has to cope with the 
additional fact that a simple, negative answer 
can be mistakenly taken to count as a refusal 
to cooperate at all: 
\[4\] A: Have you got a cigarette? 
B: No 
For this reason, the refusing agent is likely 
to provide the requester with an acceptable 
reason, i.e. a remedy or account (Levinson, 
1983), when the request is to be turned down. 
What remains to be explained is why ree- 
quests at behavioral level seem to pose less 
constraints on the addressee, if compared 
to requests at conversational level: provided 
that the interactants don't have shared goals, 
it is a matter of fact that it is easier to refuse 
a request for money (see example \[3\]) ~ than 
a request o tell the time (see example \[2\]). 
In particular, conversational goals often force 
the hearer to satisfy them: it is aggressive not 
to answer at all or to ignore the speaker. 
The reason why paying attention to people, 
listening and understanding are not easily re- 
fused is that they are low cost actions, or "free 
goods" in (Goffman, 1967) terminology, so no 
one can refuse them without threatening the 
speaker's face and offending him. A refusal at 
the conversational level - ignoring a potential 
partner and not even responding to his verbal 
request - constitutes a menace to the face of 
the requester, so it is hardly justified. 
7We thank the anonymous reviewers for the ob- 
servation that this example lends itself to a deeper 
analysis, involving further social and psycological pa- 
rameters. However, we will not discuss the example 
here, due to space reasons. 
87 
Up to this point no explicit obligation is 
created: the "obligation to act" depends on 
the utility of the action needed to establish 
cooperation; if the cost of the action is low 
(e.g., a conversational ~=tion): the refusal to 
execute it can be motivated in the requester's 
eyes only by a requestee's negative attitude 
towards him. So, the requester, as a result of 
his ability to infer the requestee's reasoning, 
will be offended by a refusal; the preference 
for not threatening the face of the partners 
and preserving one's own social face normally 
makes the utility of offences negative, thus 
leading requestees toavoiding refusals. At the 
same time, this analysis, by making explicit 
the underlying motivations for the preference 
for a certain type of response, accounts for the 
existence of preferred and dispreferred second 
turns in adjacency pairs. 
3.2 Conversat iona l  Cooperat ion 
The effect on the requester is evaluated by 
the planning agent by means of the antici- 
pation of his reaction. In general, the situa- 
tion a requestee is faced with is constituted 
by the choice between the alternative of sat- 
isfying the requester's conversational or be- 
havioral goals and the alternative of going on 
with his own activity. 
Consider the situation depicted in example 
\[1\] from B's point of view, where B is faced 
with A's indirect request: 
\[1\] A: Do you have Marlboros? 
B: Uh, no. We ran out 
B can attribute to A two main goals (see fig- 
ure 2): s 
1. the behavioral goal that B sells to A a 
packet of cigarettes (sell): however, since A 
cannot ake B's cooperation for granted, this 
goal is related in turn to the goal of know- 
ing whether B has committed to the perlocu- 
tionary intention of selling to A a packet of 
cigarettes (knowif-satisfy), by committing to 
A's goal (satisfy), and, if this is the case, to 
the goal of knowing whether he has completed 
the corresponding plan to sell the cigarettes 
8The recognition ofdomain goals depends on the 
recognition ofthe linguistic goals, :i.e., on the success 
of the linguistic actions. 
(hand the cigarettes, cash, ect.) to A (knowif- 
completed); 
2. the conversational goal of knowing if the 
request has been understood by B and is now 
part of the common ground (grounded); this 
goal directly relates to the management of di- 
alog: if A does not believe that the illocu- 
tionary effect of his question holds, he should 
repeat or reformulate the question. 
Note that, at both levels, subsidiary goals 
arise as part of the intentional behavior of an 
agent: for example, after performing an ac- 
tion for achieving some goal, it is rational to 
check whether this action has succeeded. 9 
B considers if it is possible for him to com- 
mit to the higher-level goal (sell), to which the 
remaining recognized goals are subordinated: 
although B is inclined to satisfy this goal, B 
knows that one of the preconditions for ex- 
ecuting the selling action (has(B, Marlboros)) 
is not true. 
At this point, besides the choice of not re- 
sponding at all, the alternative courses of 
action available to B consist in committing 
to A's goal to know if B has committed to 
his (unachievable) sell goal (knowif-satisfy), 
and the subordinate goal to know if B has 
completed the plan to achieve it (knowif- 
completed), or to commit o A's goal - at con- 
versational level - to have his illocutionary act 
grounded (grounded)3 ? The choice between 
the alternative of not responding at all and 
any of the other alternatives i  accomplished 
by considering the reaction of the partner to a 
refusal at the conversational level; this choice 
is enforced by the consideration that commu- 
nicative actions are "free goods", so they can- 
not be refused without incurring in a state 
where the partner is offended. 
Being committed to the satisfaction of the 
knowif-cornpleted goal, B has to choose be- 
9We will not describe here how these goals are iden- 
tified and kept ogether in a unified structure: works 
like (Ardissono et al, 2000) show how the recognition 
of the intentions stemming from the problem solving 
activity can constitute the required glue 
1?Note that, when producing an illocutionary act to 
satisfy the know-satisfied or knowifieompleted goal, B 
satisfies the grounded goal as well: by displaying the 
reaction to the perlocutionary effect, he uptake of the 
illocutionary effect is granted. 
88 
t 
request(A,B,(sell(B,A,cigarettes))) 
t 
have(A, cigarettes) 
sell(B,A,cigarettes). 
t 
sa~sfy(B,(sen(B,A,eigarettes))) 
knowif-~tisfy(A,B(sell(B,A,cigarettes))) 
grounded(request(A,B,(sell(B,A,cigarettes)))) 
knowif-completed(A,B(sell(B,A,cigarettes))) 
Figure 2: The intentions of A in example \[1\] 
tween different ways to communicate the im- 
possibility to execute the plan. In this case, 
two plans can apply: the simple plan for refus- 
ing, or the elaborated plan for refusing which 
includes a justification for the refusal. 
The first plan is less expensive, by being 
shorter and by not requiring a mental effort; 
however, it is not fully explicit about the mo- 
tivations of the refusal, and so it is potentially 
offensive in the partner's evaluation (A could 
think that B didn't want to sell the cigarettes 
to him). On the contrary, the second plan, 
though more expensive, obeys to the prefer- 
ence for not offending, since it protects the 
refusing requestee from the accusation of non- 
cooperativeness. 
The existence of complex refusal acts has been 
remarked on by (Gree n and Carberry, 1999). 
In their mechanism for initiative in answer 
generation, the ambiguity of a negative an- 
swer to a pre-request between a literal answer 
and a refusal triggers the "Excuse-Indicated" 
rule, which generates the appropriate xpla- 
nation. 
4 Re la ted  Work  
(Traum and Allen, 1994) defined a model of 
linguistic interaction based on the notion of 
obligation. Obligations are pro-attitudes that 
impose less commitment than intentions (so 
that they can be violated), while their social 
character explains why humans are solicited 
to act, in both cooperative and non cooper- 
ative contexts. The notion of obligation has 
been exploited also in applied dialog systems, 
like (Jameson et al, 1996), where they are as- 
sociated to move types. 
While in (Traum and Allen, 1994) discourse 
obligations are social norms that speakers 
have to learn, in our model, the speakers have 
to learn in what conditions humans happen to 
be offended; this same knowledge xplains the 
use of indirect speech acts (as in (Ardissono 
et al, 1999)). 
Moreover, obligations eem somehow redun- 
dant in cooperative contexts, where intentions 
are sufficient o explain grounding and other 
conversational phenomena. 
Differently from (Traum and Allen, 1994), 
(Allwood, 1994) introduces, besides the obli- 
gations associated to the communicative acts, 
two additional sources of obligation which are 
related, respectively, to ethical and rational 
motivations intrinsic to social relations and 
to the management of communication itself. 
Communication management obligations give 
rise to the mechanisms of turn-taking, inter- 
action sequencing, and so on, while the eth- 
ical obligation are socially desirable qualities 
of the interactional behavior: there exists a 
strong social expectation towards them, but 
an agent can decide to disobey them. 
(Kreutel and Matheson, 2000) claim that 
the intentional structure in uncooperative di- 
alogues can be determined by resorting to dis- 
course obligations. In order to do so, they 
define a set of inference rules which allow to 
reconstruct the participants' intentions epa- 
rately from obligations, then show how obli- 
gations account for the existence of conversa- 
tional preferences by addressing pending in- 
tentions. However, the semantic rules they 
89 
propose seem to constitute a shortcut o the 
recognition of the communicative intentions 
of the speaker, which has been proven to 
be necessary to reconstruct dialog coherence 
(Levinson, 1981); the resulting representa- 
tion, since it lacks a model of the private in- 
tentions of the participants inadequately ac- 
counts for the presence of individual inten- 
tions which have to be traded-off against obli- 
gations in situations where cooperation is not 
granted. 
5 An  Example  S i tuat ion  
In order to verify the feasibility of exploit- 
ing social goals for motivating cooperation, 
we have implemented a prototype using a de- 
cision theoretic planner inspired to the ap- 
proach of (Haddawy and Hanks, 1998). The 
planner exploits hierarchical plans to find 
the optimal sequence of actions under uncer- 
tainty, based on a multi-attribute utility func- 
tion. Goals can be by traded off against cost 
(waste of resources) and against each other. 
Five different attributes n have been intro- 
duced to depict the situation in example \[2\], 
where B is interrupted by A while he is ex- 
ecuting a generic action Act; this action is 
aimed at reaching one of B's private goal. 
\[2\] A: Can you tell me the time? 
B: No. My watch is broken 
The following attributes model the states 
involved in the example situation, and appear 
in the effects of the participants' actions. 
? time: it models time as a bounded re- 
source; the utility decreases as a function 
of time; 
? grounded: it models A's goal of knowing 
that B has successfully interpreted the 
request; 
? res: it models the consumption of (generic) 
resources; 
? refused: it is true if A believes that B 
has refused, without any justification, to 
commit o A's communicated goal; 
? offended: it models A's degree of offence; 
n Note that the values 0 and 1 of the attributes 
ground and satisfied.requestrepresent the truth-values 
of the corresponding propositions. 
Other goals like knowing whether B has 
committed to the achievement of the goal or 
whether the achievement has been successful 
or higher-level domain goals are not included 
in this example for space reasons. 
In order to model the alternatives available 
to B, we have introduced the following ac- 
tions (see figure 3). Effects are represented 
as changes in the value of attributes: for ex- 
ample, (time=time+2) means that after the 
execution of the Notify-motivation action, the 
value of the time attribute will increase by 2. 
? Action Tell-time: it represents B's cooper- 
ation with A at the behavioral level (B 
executes the requested action); 
? Action Ground: it has the effect that A 
knows that the illocutionary effect of his 
request has been properly recognized by 
the partner (the grounded attribute is set 
to "true"). 
? Action Notify-impossible: it models B's 
notification that A's goal is impossible 
to achieve; it specializes into two sub- 
actions, Notify-motivation and Notify- 
simple: both actions have a cost in 
terms of resources and time and set the 
grounded attribute to true, but the sec- 
ond one negatively affects the refused at- 
tribute, meaning that A considers it as a 
(possible) unjustified refusal. 
? Action Act: it constitutes B's current plan 
when he is interrupted by A's request. It 
affects both the grounded and the refused 
attribute, by setting the latter to "false". 
? Action Refuse: it represents B's act of 
communicating to A that he will not do 
what A requested, without any justifica- 
tion. Among its effects, there is the fact 
that B comes to know A's choice (refused 
and grounded attribute are set to "true"). 
Before B replies to A's request, the 
grounded attribute is set to false and the re- 
fused attribute is set to true. Note that - with 
the exception of Act - all actions affect the 
value of the grounded attribute, meaning that, 
after performing any of them, A's request re- 
sults grounded anyway, since all these actions 
are coherent replies. 
90 
(ac t ion  Not i fy -mot ivat ion  
( t ime = t ime + 3) 
( res  = res  - 3) 
(g rounded = I) 
( re fused  = 0)) 
(ac t ion  Ground 
( t ime = t ime + i) 
( res = res  - 2) 
(g rounded = I)) 
(ac t ion  
(ac t ion  Not i fy -s imp le  (ac t ion  Refuse  (ac t ion  
( t ime = t ime + I) ( t ime = t ime + 2) 
( res  = res  - I) ( res = res  - 2) 
(g rounded = I) (g rounded = I) 
( re fused  = I)) ( re fused  = I)) 
Te l l - t ime 
( t ime = t ime + 1) 
( res  = res  - 2) 
(g rounded = I) 
( re fused  = 0)) 
Ac t  
( t ime = t ime +5) 
( res  = res  -5)  
(g rounded = 0) 
(goa l  = 1)) 
Figure 3: A simplified representation of some of the actions that B can execute: the action 
name is followed by the list of its effects. 
On A's side, we have introduced the action 
React 12 (see Figure 5), that models the change 
of the offended parameter depending on B's 
choice. The key parameter affecting the level 
of offence is the cost 13 of the requested ac- 
tions: the less the cost of the requested ac- 
tion, the greater the offence; this follows the 
principle that low-cost actions cannot be re- 
fused (Goffman, 1967), and, if they are, re- 
questers get offended. The lack of grounding 
is interpreted by A as B is not cooperating 
at the conversational level: since cooperating 
at the conversational level (interpreting the 
sentence, grounding it) has a low cost, it is 
offensive not to do it. 
Now, let's consider in detail the current sit- 
uation, i.e, the one where A has just asked to 
B to do something while B has just performed 
the first step of Act. In order to explore the 
different alternatives, the planner builds and 
evaluates ome plans. These plans differ in 
that the actions for pursuing the partner's 
recognized goal can be included or omitted. 
From the result state of each alternative, the 
planner then tries to predict he reaction of A 
by simulating the execution of the React ac- 
tion by A (see figure 5), and commits to the 
plan whose resulting state after the predicted 
reaction yields the greater utility according to 
B's preferences ( ee Figure 6). 
As explained in Section 2.1., an agent's util- 
ity function is a weighted sum of individual 
utility functions, which represent the prefer- 
*2We assume that weights Wi and Wj are set, re- 
spectively, to 20 and 10. 
*aWhere (cost(action) = (res * 2) + time). 
ences of the agent. The weights associated to 
the individual functions reflect the strength 
of each preference, by allowing for different 
trade-offs among preferences during the pro- 
cess of decision making. 14 
In figure 4, two alternative plans are repre- 
sented, where the utility of B is calculated 
by using the utility function in figure 6. As- 
suming that the weights W1, W2, W3; and 
W4 are set to 10, 5, 8, and 100, respectively, 
B will choose the plan which includes Notify- 
impossible as the first step, and Act - the pros- 
ecution of B's previous activity - as the sec- 
ond step. This solution yields in fact a higher 
utility than the alternative of ignoring A's re- 
quest at all and continuing one's own activity. 
A change in the weights of the utility func- 
tion of B affects his behavior, by determining 
a variation in the degree of cooperation: the 
stronger is the preference for not offending, 
the more cooperative is the agent. For exam- 
ple, if the utility function of B associates a
greater utility to the achievement of B's pri- 
vate goal (by executing Act) than to the social 
preference for not offending, B will decide to 
disregard A's request, both at conversational 
and behavioral level, is On the contrary, if the 
14 As (Traum, 1999) notices with reference to social 
rules, "when they directly conflict with the agent's 
personal goals, the agent may choose to violate them 
(and perhaps suffer the consequences of not meeting 
its obligations)." In our model, this roughly amounts 
to associating a greater utility to the achievement of 
the agent's own goals than to the preference for not 
offending. 
*STipically, this is the case in specific contexts when 
private goals of the addressee are very relevant and 
contrast with the satisfaction of the requester's goal; 
91 
$1 
A 
res = 20 
off = 0 
B 
res = 50 
goal =0 
SH 
grounded = 0 
refused = 1 
time : 0 
NOTIFY -  
MOTIVAT ION (B) 
ACT (B) 
S2  
A 
res = 20 
off = 0 
B 
res = 47 
goal = 0 
SH 
grounded = 1 
refused = 0 
t ime = 3 
$2  
A 
res = 20 
off = 0 
13 
res = 45 
goal = 1 
SH 
grounded : O 
:refused = 1 
1:~me = 5 
ACT (B) 
$3 
A 
res : 20 
off = 0 
B 
res = 42 
goal = 1 
SH 
grounded = 1 
refused = 0 
time = 8 
S3 
A 
tee  = 19  
off  : I 
B 
res  z 45  
goa l  : 1 
SH 
~ou.~Led = 0 
: i re fusedL = 1 
t ime= 6 
REACT (A) 
REACT (A) 
ITB = 38'7 
$3 
A 
re8  = 19  
of f  = 0 
B 
tee  = 42 
goa l  = 1 
S~ 
g ' ~ e d  = 1 
ze~ed : 0 
t ime : 9 
= 448 
Figure 4: Two of B's alternative plans in response to A's request 
(ac t ion  React  
( t ime = t ime + i)  
( res  = res  - i )  
(o f fended = o f fended + 
(not (grounded) )  * Wi  + 
( re fused  / cos t (ac t ion) )  * W~))  
Figure 5: The partner's reaction 
Us= ( ress  * Wi)  - 
( t ime * W~) - 
(o f fended * Ws)  + 
(goa l  * We)  
Figure 6: The utilitY function of B 
utility function of B models a more balanced 
tra~:le-off between the achievement of B's pri- 
vate goMs and social preferences, B will de- 
cide to ground A's request, at least, or to be 
fully cooperative by satisfying A's request. 
6 Conc lus ions  
In this paper we proposed an intention-based 
approach to dialog that aims at overcoming 
the critics posed by (Traum and Allen, 1994) 
by assuming the existence of social goals. Our 
solution does not rest on an explicit notion 
for  example ,  B cou ld  miss ing  the  t ra in .  
of obligation, even if some similarities can be 
found with (Traum and Allen, 1994). The 
advantage of not resorting to a primitive no- 
tion of obligation is to have a uniform source 
of motivations for explaining the behavior of 
agents. 
With respect to approaches which stipu- 
late a primitive notion of obligation, here, the 
same phenomena are accounted for without 
introducing further propositional attitudes. 
This explanation of the motivations leading 
to cooperation provides an explicative model 
that is uniform with the treatment of deon- 
tic reasoning in agent theories (Conte et al, 
1998), (Boella and Lesmo, 2000) and the def- 
inition of cooperation proposed in (Boella et 
al., 2000). 
It is clear that, by reducing the number 
of propositional attitudes, the reasoning pro- 
cess becomes more complex, but our model 
is aimed at constituting an explanation, and 
it does not exclude the possibility of compil- 
ing the reasoning in more compact form: as 
(Brown and Levinson, 1987) notice, %here is 
a rational basis for conventions, too". 
92 
References  
G. Airenti, B. Bara, and M. Colombetti. 1993. 
Conversational nd behavior games in the prag- 
matics of discourse. Cognitive Science, 17:197- 
256. 
J. Allwood. 1994. Obligations and options in di- 
alogue. Think, 3. 
L. Ardissono, G. Boella, and L. Lesmo. 1999. The 
role of social goals in planning polite speech 
acts. In Workshop on Attitude, Personality 
and Emotions in User-Adapted Interaction at 
UM'99 Conference, pages 41-55, Banff. 
L. Ardissono, G. Boella, and L. Lesmo. 2000. 
Plan based agent architecture for interpreting 
natural anguage dialogue. International Jour- 
nal of Human- Computer Studies, (52) :583-636. 
G. Boella and L. Lesmo. 2000. Deliberate nor- 
mative agents. In Proc. of Autonomous Agents 
2000 Workshop on Norms and Institutions., 
Barcelona. 
G. Boella, R. Damiano, and L. Lesmo. 2000. 
Cooperation and group utility. In N.R. Jen- 
nings and Y. Lesp~rance, editors, Intelligent 
Agents VI - -  Proceedings of the Sixth Interna- 
tional Workshop on Agent Theories, Architec- 
tures, and Languages (ATAL-99, Orlando FL), 
pages 319-333. Springer-Verlag, Berlin. 
G. Boella. 2000. Cooperation among economi- 
cally rational agents. Ph.D. thesis, Universit~ 
di Torino, Italy. 
P. Brown and S. C. Levinson. 1987. Politeness: 
some universals on language usage. Cambridge 
University Press, Cambridge. 
C. Castelfranchi. 1998. Modeling social action for 
AI agents. Artificial Intelligence, 103:157-182. 
H.C. Clark. 1996. Using Language. Cambridge 
University Press. 
P.R. Cohen and H.J. Levesque. 1990. Rational 
interaction as the basis for communication. In
P.R. Cohen, J. Morgan, and M.E. Pollack, ed- 
itors, Intentions in communication, pages 221- 
255. MIT Press. 
R. Conte, C. Castelfranchi, and F. Dignum. 
1998. Autonomous norm-acceptance. In J. P. 
Mueller, M.P. Singh, and A.S. Rao, editors, In- 
telligent Agents V - -  Proc. of 5th Int. Work- 
shop on Agent Theories, Architectures, and 
Languages (ATAL-98). Springer Verlag, Berlin. 
M. Coulthard. 1977. An Introduction to Dis- 
course Analysis. Longman, London. 
E. Goffman. 1967. Interaction Ritual. Penguin, 
Harmondsworth. 
E. Goffman. 1981. Forms of Talk. University of 
Pennsylavania Press. 
N. Green and S. Carberry. 1999. Interpret- 
ing and generating indirect answers. Compu- 
tational Linguistics, 25(3):389-435. 
P. Haddawy and S. Hanks. 1998. Utility models 
for goal-directed, decision-theoretic planners. 
Computational Intelligence, 14:392-429. 
A. Jameson, R. Sharer, J. Simons, and T. Weis. 
1996. How to juggle discourse obligations. In 
R. Meyer-Klabunde and C. yon Stutterheim, 
editors, Proceedings of the Symposium 'Concep- 
tual and Semantic Knowledge in Language Pro- 
duction', pages 171-185. 
J. Kreutel and C. Matheson. 2000. Obliga- 
tions, intentions and the notion of conversa- 
tional games. In Proc. Gotalog, 4th Workshop 
on the Semantics and Pragmatics of Dialogue. 
L. Lambert and S. Carberry. 1991. A tripartite 
plan-based model of dialogue. In Proc. 29th 
Annual Meeting of A CL, pages 47-54, Berkeley, 
CA. 
S.C. Levinson. 1981. The essential inadequacies 
of speech act models of dialogue. In M. Par- 
ret, M. Sbis~, and J. Verschueren, editors, Pos- 
sibilities and Limitations of Pragmatics, pages 
473-492. Benjamins, Amsterdam. 
S.C. Levinson. 1983. Pragmatics. Cambridge 
University Press, Cambridge. 
M. Merrit. 1976. On questions following questions 
(in service encounters). Language in Society, 
5(3):315-357. 
M. Poesio and D. Traum. 1998. Towards an 
axiomatization of dialogue acts. In Proc. of 
13th Twente Workshop on Language Technol- 
ogy, pages 207-222, Enschede. 
E.A. Schegloff and H. Sacks. 1973. Opening up 
closings. Semiotica, 7:289-327. 
D.R. Traum and J.F. Allen. 1994. Discourse obli- 
gations in dialogue processing. In Proc. 32nd 
Annual Meeting of A CL, pages 1-8, Las Cruces, 
New Mexico. 
D. Traum. 1999. Speech acts for dialogue agents. 
In M. Wooldridge and A. Rao, editors, Foun- 
dations and Theories of rational Agents, pages 
169-201. Kluwer. 
93 
Quantifiers in Dependency Tree Semantics
Leonardo Lesmo, Livio Robaldo, Jelle Gerbrandy
Dipartimento di Informatica - Universita? di Torino
{lesmo,robaldo,gerbrand }@di. unito. it
Abstract
Dependency Tree Semantics (DTS) is an underspecified formalism for representing
quantifier scope ambiguities in natural language. DTS features a direct interface
with a Dependency grammar and an incremental, constraint-based disambiguation
mechanism. In this paper, we discuss the meaning of quantifier dependency in DTS
by translating its well formed structures into formulae of a Second Order Logic
augmented with Mostowskian generalized quantifiers.
1 Introduction
Dependency Tree Semantics (DTS) is an underspecified formalism for deal-
ing with quantifier scope ambiguity. DTS tries to keep the advantages of
most common underspecification techniques: it has a straightforward syntax-
semantics interface with a Dependency Grammar, just as QLF has [1], and
it allows for monotonically adding constraints to take partial disambiguations
into account, just as in UDRT [12], MRS [3] or CLLS [4]. These features
have been presented in [7] and [8], whereas in [9] DTS is proposed as a
possible underspecified semantic structure of Meaning?Text Theory [10].
This paper discusses a third property of DTS in further depth: the possibility
to represent branching quantifier (BQ) readings. Branching quantification in
DTS has partially been discussed in [7] and [8], in which we compared DTS
with First Order Logic (FOL). However, FOL is limited in that it allows to
represent only standard quantifiers (? and ?); in this paper we compare DTS
with the logic developed in [13] and [14], which is a fragment of Second Or-
der Logic which allows for a representation of branching quantification with
Generalized Quantifiers.
1.1 Intuitions behind Dependency Tree Semantics
The key idea of DTS is to specify quantifier scope by explicitly showing the
dependencies between involved (quantified) groups of entities, i.e. by imple-
menting a sort of ?Skolemization? in the underspecified representation. Well-
formed structures in DTS are based on a simple graph G that represents the
predicate-arguments relations, without any quantification. The nodes of G
are either predicates or discourse referents; each arc connects a predicate with
a discourse referent and is labelled with the number of the predicate argument
position. With each discourse referent we associate a quantifier (given by a
function QUANT from discourse referents to quantifiers) and its restriction,
which is given by a function RESTR that associates a subgraph of G to each
discourse referent. In (1), we show a first simple example
(1) Two students study three theorems
study?
stud?
x y
theor?
1 2
1 1
stud?
x y
theor?
1 1Restr(x)= Restr(y)=
Quant(x)= two Quant(y)= tree
The representation in (1) is still ambiguous; to disambiguate, we need to
specify how the quantifiers depend on each other. This is done by inserting
dotted arcs between discourse referents, named semdep arc. In figure 1.a and
fig 1.b two fully-specified representations of sentence (1) are given. Fig.1.a
shows the reading in which the quantifier ?three? depends on (has scope inside)
the quantifier ?two?. In figure 1.b, the arc linking x to y specifies that the two
students depend on the theorems. In both interpretations, the wide-scope
quantifier is linked to a new node called Ctx ? the context.
But DTS allows for very natural representation of a third reading of sentence
(1): in figure 1.c, both discourse referents are linked to the context. This is
the branching quantifier (BQ) reading. As we will see, the BQ reading is true
only in those models in which we can find a set of two students and a set of
three theorems, for which it holds that each student in the first set studies each
theorem in the second one. In NL, there are many cases in which the correct
study?
stud?
x y
theor?
1 2
1 1
Ctx
study?
stud?
x y
theor?
1 2
1 1
Ctx
study?
stud?
x y
theor?
1 2
1 1
Ctxa) b) c)
Fig. 1. The three readings of sentence (1)
truth conditions can be captured only via a BQ reading; in fact, it is easy to
add some context elements in the sentence in order to force the two involved
sets to be constant; for instance, in (2.i), the involved students and theorems
are explicitly mentioned in two appositions, while in (2.ii) the prepositional
modifier with my sister favours an interpretation in which three persons, two
friends of mine and my sister, went together to three same concerts.
Finally, even if there are not explicit syntactic elements forcing a BQ reading,
in many cases this is done by world knowledge; for example, in (2.iii), world
knowledge seems to render the reading in which two students have seen the
same three drug dealers the most salient; in fact, the presence of drug-dealers
in front of a school is (fortunately) a rare event and this induces to prefer the
reading minimizing the number of involved drug dealers.
(2) (i) Two students, John and Jack, study three theorems: the first three
of the book.
(ii) Two friends of mine went to three concerts with my sister.
(iii) Two students of mine have seen three drug dealers in front of the
school.
Not all possible configurations of semdep arcs are allowed. For instance, a
well-formed DTS cannot contain cycling paths, which would correspond to a
reading in which two sets of entities depend on each other, which is clearly
absurd. Furthermore, there are constraints to reduce the available readings
to those admitted in NL. In this paper, we will focus on the expressivity of
the general formalism, and provide a precise definition of the meaning of all
configurations that respect a minimal set of syntactic constraints, and abstract
from the question whether they correspond to an actual reading in NL. In other
words, in DTS the set of logical admitted readings is kept separate from the
subset of readings admitted in NL, and this paper focus on the former.
1.2 Formalisation: Syntax of DTS
A well-formed structure (wfs) in DTS is a Scoped Dependency Graph (SDG)
as defined below. We take as given a set of predicates pred and a set of
discourse referents D.
Definition 1.1 [Flat Dependency Graphs (FDG)]
A Flat Dependency Graph is a tuple ?N,L,A,Dom, f? s.t.:
- N is a set of nodes {n1, n2, . . . , nk}.
- L is a set of labels {l1, l2, . . ., lm}; in fig.1, L?{1, 2}.
- Dom ? pred?D is a set domain objects: predicates and discourse referents
- f is a function f : N 7? Dom, specifying the node referent, i.e. the domain
object with which the node is associated. In the following, whenever f(n) ?
X, we will say that node n is of type X.
- A is a set of arcs. An arc is a triple (ns, nd, l), where ns, nd ? N , ns is of
type pred, nd is of type D and l ? L.
Without going into further details, we stipulate that Gf is a connected acyclic
graph such that each node of type pred has one node of type D for each of its
places. Note that there can be two different nodes u and v s.t. f(u)=f(v),
i.e. the nodes in N can be seen as occurrences of symbols from Dom.
Definition 1.2 [Scoped Dependency Graph (SDG)]
A Scoped Dependency Graph is a tuple ?Gf , ctx,Q, quant, restr, SemDep? s.t.:
- Gf = ?N,L,A,Dom, f? is an FDG.
- ctx is a special element called the context.
- Q is a set of 2-place Mostowskian quantifiers {every, most, two, . . .} 1
- quant is a total function ND 7? Q, where ND ? N are the nodes of type D
- restr is a function assigning to each d ? ND its restriction, which is a sub-
graph of Gf .
- SemDep is a relation ND ? (ND ? {{ctx}}).
When SemDep(d, d?), we say that d depends on d?. Note that a discourse ref-
erent can depend on more than one other discourse referent. The dependence
relation needs to satisfy the following constraints:
? The transitive closure of SemDep is a partial order on all discourse referents
and ctx, with ctx as its maximal element.
? Let d be a discourse referent, and let R(d) be the smallest set that contains
d, and for which it holds that if d? is in R(d) and d?? occurs in the restriction
of d?, then also d?? ? D. It must hold that:
? If d1 ? R(d), d2 6? R(d), and d1 depends on d2, then also d depends on d2
? If d1 ? R(d), d2 6? R(d), and d2 depends on d1, then also d depends on d1
These last two constraints serve to exclude certain dependency relations that
are ?logically impossible?, and make sure that, for example, a sentence like
?Most representatives of a company took every sample? does not get a reading
in which ?a? depends on (only) ?every? and ?every? depends (only) on ?most?.
2 Branching quantification
Branching quantification was introduced by Henkin [5] in the context of FOL;
Hintikka [6] showed that it can occur also in NL. A great step toward the
definition of a model-theoretic schema for BQ was made by Barwise [2] who
merged Hintikka?s BQ account with the theory of Generalized Quantifiers.
Barwise?s idea was that the truth-conditions of BQ readings are connected
with the monotonicity of the involved quantifiers. He claimed that there is
no uniform schema for BQ: the formulae associated to sentences featuring all
monotone increasing (M?) quantifiers are different from those associated to
sentences featuring all monotone decreasing (M?) quantifiers. According to
Barwise, sentences with mixed quantifiers (some M? and some M?) make no
1 A 2-place Mostowskian Quantifier [11] (see also [13]) is a symbol Q such that, if x is an
individual variable and ?, ? are formulae then Qx(?,?) is also a formula. Semantically, Q
denotes, in every model M with universe A, a function q which takes in input two subsets B
and C of A and returns a truth-value. Mostowskian Quantifiers are cardinality quantifiers,
in the sense that q(B,C) depends only on the cardinalities of the sets (B ? C), (B \ C),
(C \B) and (A \ (B ? C)). Some examples are
? ?Allx(P1(x), P2(x))?M = true iff |(?P1(x) ? ?P2(x)?M )| = 0
? ?Fewx(P1(x), P2(x))?M = true iff |(?P1(x) ? P2(x)?M )| > ?
sense from a linguistic point of view.
On the other hand, Sher [13], [14] observed that since the semantics of
linearly ordered quantification is provided regardless to monotonicity, there
seems to be no methodological reason for imposing further constraints in case
of partially ordered quantification. In other words, even if readings from NL
are not available, this should not exclude their logical interpretation.
Sher specified the semantics of BQ on the basis of a precise definition of
the involved groups, according to so-called maximality conditions; roughly,
her claim is that the interpretation of a BQ reading with quantifiers of any
type corresponds to the one of Barwise for M? quantifiers augmented with
a maximality condition requiring that the involved sets are maximal with
respect to the body of the formula. Consider the two following sentences:
(3) (i) Most of the dots and most of the stars are all connected by lines.
(ii) Few of the dots and few of the stars are all connected by lines.
In Sher?s logic (let us name it L0) sentences in (3) are associated with formulas
of the following form:
(4) ?P1, P2[ C1 : Q1x(dot(x), P1(x))?
C2 : Q2y(star(y), P2(y))?
IN : ?xy[(P1(x) ? P2(y)) ? conn(x, y)]?
Max(?P1, P2?, IN) ]
where Q1 and Q2 are the Mostowskian quantifiers corresponding to the deter-
miners in our example: Q1=Q2=Most for (3.i); and Q1=Q2=Few for (3.ii).
The symbols C1, C2, IN are labels on the subformulae and Max(?P1, P2?, IN)
is an abbreviation for a maximality condition that states that two sets P1 and
P2 are maximal with respect to the formula with label IN , in the sense that
there are no strict supersets of P1 and P2 that satisfy IN . Formally, the max-
imality condition in (4) is the following formula:
Max(?P1, P2?, IN) ?
?P ?1, P ?2[ ?xy[ (P1(x) ? P2(y)) ? (P ?1(x) ? P ?2(y))?
(P ?1(x) ? P ?2(y)) ? conn(x, y) ] ?
?xy[ (P ?1(x) ? P ?2(y)) ? (P1(x) ? P2(y)) ]]
Sher generalizes the schema of (4), so that it applies to any partially ordered
set of arbitrary quantifiers. To achieve this, it is necessary to existentially
quantify n-ary generalized Skolem functions Hi rather than simple sets Pi,
and to assert maximality conditions also on the subformulae with label Ci.
Here, an n-ary Skolem function is just an n + 1-ary relation H ? we will
write H(x1, . . . xn+1) if x1 . . . xn+1 stand in the relation H, but also write
H(x1 . . . xn) for the set of objects xn+1 s.t. H(x1, . . . xn+1). Consider now a
branching reading such as in the following sentence:
(5) Few men inserted a coin in three coffee machines.
Fewx(man?(x)) @@
??Threey(CoffeeMach?(y))
Az(Coin?(z)) Inserted?(x, z, y)
=df ?Hx, Hy, Hz[ Cx: Fewx(man?(x), Hx(x)) &
Cy: Threey(CoffeeMach?(y), Hy(y)) &
Cz: ?xy[(Hx(x)?Hy(y))? Az(coin?(z), Hz(x, y))] &
IN: ?xyz[Hz(x, y, z)? inserted?(x, y, z)] &
Max(?Hx, Hy?, Cz) & Max(?Hz?, IN) ]
In this reading, the quantifier A depends on both Three and Few: there can be
a different coin for every pair of a man and a coffee machine. This is reflected
by the fact that Hz, the Skolem function associated with the quantifier A, is a
2-ary function, while Hx, Hy are 0-ary Skolem functions (that is, predicates).
The formula states that we have to find witnesses Hx, Hy and Hz such that
Hz corresponds to the extension of inserted?, and Hx and Hy are maximal
sets of individuals x and y such that the set of objects z inserted by x in
y, Hz(x, y, z), includes at least one coin; Hx is a set of a ?few men? and Hy
contains ?three coffee machines?. See [14] for the formal details.
3 Nested Quantification
A limitation of Sher?s logic is that it does not handle the case in which one
quantifier occurs in the syntactical restriction of another quantifier. Consider:
(6) Two representatives of three African countries arrive.
rep?
x
af?c?
1
2
1
arrive
y
1
1
of?
y
Restr(x)=
Restr(y)= Quant(x)= two
Quant(y)= tree
af?c?
rep?
x
1
2
1
y
of?
1
In this example, the quantifier Three occurs in the syntactic restriction of
Two. This corresponds to the fact that the discourse referent y occurs in the
graph RESTR(x). This type of reading cannot be directly represented in
Sher?s logic. Therefore, we propose to extend her definitions to accommodate
for these cases as well. Lack of space does not permit us to state the precise
definitions; we will give two examples instead which should illustrate how the
definitions work. Before discussing the three possible disambiguations of (6),
we introduce a new abbreviation to increase readability.
If ? is a well formed formula, x1 . . . xn a sequence of discourse referents, and
S1, . . . , Sn a sequence of predicates, we define:
?S1, . . . , Sn? ?
max
?[x1 . . . xn] ?
Max(?S1, . . . , Sn?,?x1 . . . xn[(S1(x1) ? . . . ? Sn(xn)) ? ?])
We will omit the reference to the variables x1 . . . xn in the notation when this
does not lead to confusion. By using ?
max
, the formula in (5) can be replaced
by the following equivalent
?Hx, Hy, Hz[ Fewx(man?(x), Hx(x)) & Everyy(CoffeeMach?(y), Hy(y)) &
?Hx, Hy??
max
[ Az(coin?(z), Hz(x, y, z))&
?Hz(x, y)??
max
inserted?(x, y, z) ] ]
For representing the restriction of quantifiers in the logic, in addition to the
Skolem functions Hx that represent the body of the quantifiers, we introduce
restriction sets ?x. The three readings of (6) can now be represented as:
x
y
Ctx
?Hx, Hy,?x,?y[ Twox(?x(x), Hx(x))& ?Hx??
max
(arrive?(x)) &
??x??
max
[Threey(?y(x, y), Hy(x, y)) &
??y(x)??
max
(af?c?(y)) &
?Hy(x)??
max
(repr of?(x,y)) ]]
x
y
Ctx
?Hx, Hy,?x,?y[ Threey(?y(y), Hy(y)) & ??y??
max
(af?c?(y)) &
?Hy??
max
[Twox(?x(y, x), Hx(y, x)) &
??x(y)??
max
(repr of?(x,y)) &
?Hx(y)??
max
(arrive?(x)) ]]
x
y
Ctx
?Hx, Hy,?x,?y[ Twox(?x(x), Hx(x)) & Threey(?y(y), Hy(y)) &
??x, Hy??
max
(repr of?(x,y)) & ??y??
max
(af?c?(y)) &
?Hx??
max
(arrive?(x)) ]
Let us shortly discuss each of these readings.
In the first reading, y depends on x, which is reflected in the fact that ?y and
Hy are unary Skolem functions whose values depend on the value for x. The
restriction set of ?three?, ?y(x), is (for each x) the set of all African countries,
while Hy(x) is the set of objects represented by x. Therefore, the restriction
set of ?two?, ?x, is a maximal set of individuals x that represent three African
countries. Two of these individuals must be in Hx ? the set of those that
arrive.
In the second reading, x depends on y. The set ?y consists of all African
countries. The set Hy must contain three of these, and it is required that for
each element y in Hy there are two individuals in the set of all its representa-
tives ?x(y) that are in Hx(y), which consists of all individuals that arrive.
The third formula represents the branching reading of the sentence, in which
the two discourse referents do not depend on each other. This formula states
that there are sets ?x and Hy such that each individual in ?x represents all
elements from Hy (this is expressed by the maximality condition on the pair
(?x, Hy)), and for which it holds that Hy contains three African countries,
and that two of the representatives from ?x must arrive. In the following, we
report a last complex example:
(7) Everyx teacher failed twoy students that studied less than halfz of the
topics in thew program.
The following DTS represents a reading of (7) in which the discourse referent
w depends on both y and z, and y and z depend on x.
x
1 2
failed
y
Restr(x)=
Quant(y)= ?
Quant(x)= ?
2
zof?
stud
1
study
topic
1
1
w
teacher
1
progr
1
12 x
teacher
1 Restr(w)=
w
progr
1
Restr(z)=
1
2
1
of? Restr(y)=
1
2
1
y
topic
w
z
stud study
z
Quant(z)= < 12
Quant(w)= the
x
y
Ctx
w
z
This DTS gets the translation reported below; in this interpretation, the two
students and the program depend on a teacher, while the set of topics depends
both on a program and on a student. In the formula, the pair of students
associated to a teacher x ? Hx has to belong to the set ?y, i.e. the set of
students y such that the set of things studied by y, i.e. Hz(x, y, w), contains
less than half elements of ?z, i.e. the set of topic in Hw(x), i.e. the program
of x.
?Hx, Hy, Hz, Hw,?x,?y,?z,?w[
Everyx(?x(x), Hx(x)) & {?x}?
max
(teacher?(x)) &
{Hx}?
max
[ Thew(?w(x,w), Hw(x,w)) & {?w(x)}?
max
(progr?(w)) &
Twoy(?y(x, y), Hy(x, y))] & {Hy(x)}?
max
(failed?(x, y)) &
{?y(x), Hw(x)}?
max
[Lthz(?z(x, y, w, z), Hz(x, y, w, z)) &
{?z(x, y, w)}?
max
(topic?(z)?of?(z, w)) &
{Hz(x, y, w)}?
max
(stud?(y)?study?(y, z))]]]
4 Conclusions and further works
In this paper, a comparison between Dependency Tree Semantics and Sher?s
work on Branching Quantification and Generalized Quantifiers has been pre-
sented. In particular, we have shown how disambiguated DTS structures can
be related to formulae of an extension of the formalism from [14] to represent
branching quantification. This provides a way to model-theoretically inter-
pret disambiguated DTS structures. Concerning further work, one of the next
steps in research on DTS will be extending its expressivity in order to deal
with cumulativity, which is a topic that has received very little attention in re-
cent studies on underspecification. Cumulative readings arise from a different
kind of branching quantification, as argued in [13], so the step for including
them is more natural in DTS than in other underspecified logics that do not
take BQ into account.
References
[1] Alshawi, H., editor, ?The Core Language Engine,? Mit Press, Cambridge, MA,
1992.
[2] Barwise, J., On branching quantifiers in english, The Journal of Philosophical
Logic (1979), pp. 47?80.
[3] Copestake, A., D. Flickinger and I. Sag, Minimal recursion semantics. an
introduction, Technical report, Manuscript, Stanford University (1999).
[4] Egg, M., A. Koller and J. Niehren, The constraint language for lambda
structures, J. of Logic, Language and Information 10 (2001), pp. 457?485.
[5] Henkin, L., Some remarks on infinitely long formulas, in: Finitistic methods,
Proc. Symphosium of Foundations Math, Warsaw, 1961, pp. 167?183.
[6] Hintikka, J., Quantifiers vs quantification theory, Dialectica (1973), pp. 329?
358.
[7] Lesmo, L. and L. Robaldo, Dependency tree semantics and underspecification,
in: Proc. Int. Conf. On Natural language processing (ICON2004), Hyderabad,
India, 2004.
[8] Lesmo, L. and L. Robaldo, From dependency tree semantics to fol, in: Proc. 6th
Workshop on Computational Semantics (IWCS-6), Tilburg, 2005, pp. 384?386.
[9] Lesmo, L. and L. Robaldo, Underspecification of quantifier scope in mtt, in:
Proc. 2th Int.Conf. on Meaning Text Theory, Moscow, 2005.
[10] Melcuk, I., Semantics and the lexicon in modern linguistics., in: A. Gelbukh,
editor, In Proc. of the 1st International Conference on Intelligent Text
Processing and Computational Linguistics (CICLing), 2000, pp. 6?18.
URL www.CICLing.com
[11] Mostowski, A., On a generalization of quantifiers., Fundamenta Mathematicae
44 (1957), pp. 12?36.
[12] Reyle, U., Dealing with ambiguities by underspecification: Construction,
representation and deduction, Journal of Semantics (1993), pp. 123?179.
[13] Sher, G., Ways of branching quantifiers, Linguistics and Philosophy (1990),
pp. 393?422.
[14] Sher, G., Partially-ordered (branching) generalized quantifiers: a general
definition, The Journal of Philosophical Logic (1997), pp. 1?43.
An Ontology Based Architecture for Translation
Leonardo Lesmo, Alessandro Mazzei and Daniele P. Radicioni
Dipartimento di Informatica, Universita` degli Studi di Torino
{lesmo,mazzei,radicion}@di.unito.it
Abstract
In this paper we present some features of an architecture for the translation (Italian ? Italian Sign
Language) that performs syntactic analysis, semantic interpretation and generation. Such architec-
ture relies on an ontology that has been used to encode the domain of weather forecasts as well as
information on language as part of the world knowledge. We present some general issues of the
ontological semantic interpretation and discuss the analysis of ordinal numbers.
1 Introduction
In this paper we describe some features of a system designed to translate from Italian into Italian Sign
Language (henceforth LIS). The system is being developed within the ATLAS project.1 This architec-
ture applies a hard computational linguistic approach: knowledge-based restricted interlingua (Hutchins
and Somer, 1992). We perform a deep linguistic processing in each phase of the translation, i.e (1)
syntactic analysis of the Italian input sentence, (2) semantic interpretation and (3) LIS generation.2 The
main motivation to adopt this ambitious architecture is that Italian and LIS are very different languages.
Moreover, LIS is a poorly studied language, so no large corpus is available and statistical techniques are
hardly conceivable. We reduce our ambitions by restricting ourselves to the weather forecasts application
domain.
In this paper we describe some major issues of the semantic interpretation and illustrate a case study
on ordinal numbers. Our semantic interpretation is based on a syntactic analysis that is a dependency tree
(Hudson, 1984; Lesmo, 2007). Each word in the sentence is associated with a node of the syntactic tree.
Nodes are linked via labeled arcs that specify the syntactic role of the dependents with respect to their
head (the parent node). A key point in semantic interpretation is that the syntax-semantics interface used
in the analysis is based on an ontology. The knowledge in the ontology concerns an application domain,
i.e. weather forecasts, as well as more general information about the world: the latter information is used
to compute the sentence meaning. Indeed, the sentence meaning consists of a complex fragment of the
ontology: predicate-argument structures and semantic roles are contained in this fragment and could be
extracted by translating this fragment into usual First Order Logic predicates.3
The idea to use the ontological paradigm to represent world knowledge as well as sentence meaning
is similar to the work by Nirenburg and Raskin (2004) and Buitelaar et al (2009), but in contrast to these
approaches (1) we use a syntactic parser to account for syntactic analysis; and (2) we use a recursive
semantic interpretation function similar to Cimiano (2009).
2 The Ontology
The ontological knowledge base is a formal (partial) description of the domain of application. It is for-
mal, since its primitives are formally defined, and it is partial, since it does not include all axioms that
provide details about the relationships between the involved concepts. The top level of the domain ontol-
ogy is illustrated in Fig. 1.4 The classes most relevant to weather forecasts are ??meteo-status-situation ,
1http://www.atlas.polito.it/
2LIS, as all the signed languages do not have a natural writing form. In order to apply linguistic tools designed for written
languages, in our project we developed ?AEW-LIS?, an artificial written form for LIS.
3However, similar to other approach (among others Bunt et al (2007); White (2006)), our ontological meaning representa-
tion is totally unscoped.
4Some conventions have been adopted for ontology names: concepts (classes) have a ??prefix; instances have a ?prefix; and
relations and relation instances have a & prefix.
345
!
99$-.0.:
99.0,$"0-.$;<"1!
=0#+;$!>!
99?$5*;0@.0%-!
99#$%#;"@";."
5$1$*.0%-"
*;0.$;0+,!
99,$.$%"5.".+5"
50.+".0%-!
99?":! 99$<$-0-#
99@%50.0<$"?":!
99@%50.0<$"
$<$-0-#
99@%50.0<$"$<"1"
$-.0.:!
99$<"1+"A1$"!
$-.0.:!
990.";$#0%-
990."*";?0-"1";$#0%-!
990."B$5.$;-";$#0%-!
990."$"5.$;-";$#0%-
990."5%+.C$;-";$#0%-!
990."-%;.C$;-";$#0%-!
990."*$-.;"1";$#0%-
990.""?;0".0*"
;$#0%-
990."051"-?";$#0%-
990.""?;0".0*";$#0%-
995$"990.";$#0%-"#;%+@
99#$%#;"@C0*"
";$"
990."#$%#;"";$"
!
!
!
!
=0#+;$!D!
!
!
!
!
!
!
!
!
!
!
!
!
!
Figure 1: The top ontology used for the weather forecast domain. Dashed triangles represent collapsed regions of
the hierarchy.
??geographic-area , ??description , ??geographic-part-selection-criterium .
??meteo-status-situation It is the most relevant class in the present setting, since it refers to the possi-
ble weather situations, thus providing a starting point ?in principle? to every weather forecast. It may
concern the sea status, a generic weather status (either stable or not) or possible atmospheric events such
as snow, rain or clouds.
??geographic-area and ??time-interval Any weather situation holds in a specific place; in particular,
the relevant places are geographic areas. A ??geographic-area can be an Italian region, a group of re-
gions, a sea, or may be identified by specifying a cardinal direction (North, South, . . . ). Yet, any weather
situation holds in a specific temporal interval. Such time interval could last one or more days or a part of
a day. Expression as ?in the evening? are interpreted anaphorically, i.e. on the basis of current context: if
the context is referring to ?today?, then it is interpreted as ?today evening?, for ?tomorrow? as ?tomorrow
evening?, etc..
??description The actual situation and its description are kept separated. For instance, if today is Octo-
ber 28, then ?today? is a ??deictic-description of a particular instance (or occurrence) of a ??day . ?April
28, 2010? is another description (absolute) of the same instance. Particular relevance have the deictic de-
scriptions since most temporal descriptions (today, tomorrow, but also the weekday names, as Monday,
Tuesday, . . . ) are deictic in nature.
??geogr-part-selection-criterium In descriptions, a particular instance (or group of instances) can be
identified by a general class term (e.g. area) and a descriptor (e.g. northern). This concept refers to the
parts of the reality that can act as descriptors. For instance, the cardinal direction can be such a criterium
for geographic parts, while a date is not.
The last relevant portion of the ontology concerns relations. Although the ontology has no axioms,
class concepts are connected through relevant relations. In turn, relations constitute the basic steps to
form paths (more later on). All relations in the ontology are binary, so that the representation of relations
of arity greater than 2 requires that they be reified.
3 Semantic Interpretation
One chief assumption in our work is that words meaning can be expressed in terms of ontology nodes,
and the meaning of the sentence is a complex path on the ontology that we call ontological restriction.
We define the meaning interpretation function MO, that computes the the ontological restriction of a
sentence starting from the its dependency analysis and on the basis of an ontology O.
Given a sentence S and the corresponding syntactic analysis expressed as a dependency tree depTree(S),
the meaning of S is computed by applying the meaning interpretation function to the root of the tree, that
is MO(root(depTree(S))). In procedural terms, the meaning for a sentence is computed in two steps:
(i) we annotate each word of the input sentence with the corresponding lexical meaning; (ii) we build the
346
giorno [??day]
ultimo [??last] mese [??month]
adjc+ordin-rmod rmod
Figure 2: The dependency analysis of ultimo giorno del mese (last day of the month) enriched with lexical meaning.
actual ontological representation in a quasi-compositional way, by merging paths found in the ontology
in a single representation which is a subgraph of the ontology itself. These two steps can be formalized
as a meaning interpretation function M defined as:
MO(n) :=
{
LMO(n) if n is a leaf
??ki=1(CPO(LMO(n),MO(di))) otherwise
where n is the node of a dependency tree and d1, d2, . . . , dk are its dependents. LMO(w) is a function
that extracts the lexical meaning of a word w accessing the dictionary: that is, a class or an individual
on the ontology O. CPO(y, z) is a function that returns the shortest path on O that connects y to z.
The search for connections relies on the rationale that the shortest path between any two ontology nodes
represents the stronger semantic connection between them. In most cases the distance between two
concepts is the number of the nodes among them, but in some cases a number of constraints needs to
be satisfied too (see the example on ordinal construction). Finally, the operator ?? is used to denote a
particular merge operator, similar to Cimiano (2009). As a general strategy, shortest paths are composed
with the union operation, but each CPO(y, z) conveys a peculiar set of ontological constraints: the merge
operator takes all such constraints to build the overall complex ontological representation. In particular, a
number of semantic clashes can arise from the union operation: we use a number of heuristics to resolve
these clashes. For sake of simplicity (and space) in this definition we do not describe the heuristics
used in the ambiguity resolution. However, three distinct types of ambiguity exist: (1) lexical ambiguity,
i.e. a word can have more than one lexical meaning; (2) shortest path ambiguity, i.e. two nodes can
be connected by two equal-length paths; (3) merge ambiguity, i.e. two fragments of ontology can be
merged in different manners. Whilst lexical ambiguity has not a great impact due to the limited domain
(and could be addressed by standard word sense disambiguation techniques), handling shortest path and
merge ambiguities needs heuristics expressed as constraints that rely on general world knowledge.
A particular case of ontological constraints in merge ambiguity is present in the interpretation of
ordinal numbers, so further details on the merge operator can be found in Section 4.
4 A case study: the ordinal numbers
In order to translate from Italian into LIS, we need to cope with a number of semantic phenomena
appearing in the particular domain chosen as pilot study, i.e. weather forecast. One of the most frequent
constructions are ordinal numbers. Consider the simple phrase l?ultimo giorno del mese (the last day
of the month). The (simplified) dependency structure corresponding to this phrase is depicted in Fig. 2:
the head word giorno (day) has two modifying dependents, ultimo (last) and mese (month). Since the
interpretation relies heavily on the access to the ontology, we first describe the portion of the ontology
used for the interpretation and then we illustrate the application of the function M to the given example.
The relevant fragment of the ontology is organized as shown in Fig. 3, that has been split in two parts.
The upper part ?labeled TEMPORAL PARTS? describes the reified ??part-of relation and its temporally
specialized subclasses. The lower part ?labeled ORDINALS? is constituted by some classes that account
just for ordinal numbers. In the TEMPORAL PARTS region of the Fig. we find the ??temporal-part-of
(reified) sub-relation, which, in turn, subsumes ??day-month-part-of . This specifies that days are parts of
months, so that day of the month can be interpreted as the day which is part of the month. The ??part-of
relation has two roles: we use the term role to refer to the binary relation associated with a participant
in a reified relation. These roles are ?value-restricted? as &day-in-daymonth and &month-in-daymonth
respectively, for what concerns ??day-month-part-of . The most relevant class in the ORDINALS part
of Fig. 3 is the class ??ordinal-description . It is the domain of three roles, 1) &ord-described-item , 2)
&references-sequence and 3) &ordinal-desc-selector . The range of the first relation &ord-described-item
is the item whose position in the sequence is specified by the ordinal, that is a ??sequenceable-entity.
The range of the second relation &reference-sequence is the sequence inside which the position makes
347
??physical-entity ??part-of
&part-smaller &part-bigger
??time-interval ??temporal-part-of
&temporal-
  part-smaller &temporal-
  part-bigger
??day-month-part-of??day ??month
&day-in-
daymonth
&month-in-
daymonth
??ordinal-
description
??sequenceable-
          entity
??entity-sequence
&ord-described-item &reference-sequence
&ordinal-
   desc-selector ??ordinal-selector
??last
??day-sequence
TEMPORAL PARTS
ORDINALS
Figure 3: The fragment of the ontology accounting for ordinals.
sense, that is an ??entity-sequence . The range of the third relation &ordinal-desc-selector is item that
specifies the position, that is a ??ordinal-selector . In the example, ?last is an instance of ??ordinal-
selector . Of course, any (true) ordinal (first, second, thirtythird) can fill that role. The two portions of
the ontology are connected by two arcs. The first arc specifies that a ??time-interval is a subclass of
??sequenceable-entity (so that one can say the fourth minute, the first year, and so on). The second arc
specifies that ??month is subclass of ??day-sequence , which in turn is subclass of ??entity-sequence .
As a consequence it can play the role (can be the range) of the &reference-sequence .
We now describe how the meaning interpretation function is applied on the considered example. It
consists of three steps: 1. we compute the connection path between the concepts ??day and ?last ; 2. we
compute the connection path between ??day and ??month ; 3. we merge the connection paths previously
computed. In details:
1. By computing CP(??day, ?last) we obtain the connection path in Fig 4-a. Note that this ontological
restriction contains the concept ??ordinal-selector .
2. By computing CP(??day, ??month) we obtain the connection path in Fig 4-b. In this case the shortest
path is not actually the ?shortest? one, i.e. the presence of the preposition del (of ) constraints the value
returned by CP . Moreover, this ontological restriction contains the concept ??day-month-part-of , which
is a sub-concept of ??part-of .
3. The last step consists of the application of the meaning composition function to CP(??day, ?last) and
CP(??day, ??month). The ??ordinal-description concept is detected in the first ontological restriction;
moreover ??day is recognized as (subclass of) a possible filler for ??ordinal-description . At this point
we need establishing how ??day fits as the smaller part of a &part-of relation. We scan the remain-
ing ontological restriction(s) looking for a bigger part involved in a &part-of relation or in any of its
sub-relations. The resulting representation (Fig. 4-c) is built by assuming that the larger entity (here
??month , since &month-in-daymonth restricts &part-bigger) is the reference sequence for the ordering.
So, the direct ??day-month-part-of of the second ontological restriction is replaced by a path passing
through ??ordinal-description . In such final ontological restriction ??day is the &ord-described-item
and ??month is the &reference-sequence .
5 Conclusions and future work
In this paper we illustrated the analysis component of a knowledge-based restricted interlingua architec-
ture for the translation from Italian into LIS. The structure produced by the semantic interpretation of the
348
??physical-entity ??part-of
&part-smaller &part-bigger
??time-interval ??temporal-part-of
&temporal-
  part-smaller &temporal-
  part-bigger
??day-month-part-of??day ??month
&day-in-
daymonth
&month-in-
daymonth
??ordinal-
description
??sequenceable-
          entity
??entity-sequence
&ord-described-item &reference-sequence
&ordinal-
   desc-selector ??ordinal-selector
??last
??day-sequence
TEMPORAL PARTS
ORDINALS
1
2
3
4 5
6
7
8
9
??physical-entity ??part-of
&part-smaller &part-bigger
??time-interval ??temporal-part-of
&temporal-
  part-smaller &temporal-
  part-bigger
??day-month-part-of??day ??month
&day-in-
daymonth
&month-in-
daymonth
??ordinal-
description
??sequenceable-
          entity
??entity-sequence
&ord-described-item &reference-sequence
&ordinal-
   desc-selector ??ordinal-selector
??last
??day-sequence
TEMPORAL PARTS
ORDINALS
1 2 3
b)
c)
??physical-entity ??part-of
&part-smaller &part-bigger
??time-interval ??temporal-part-of
&temporal-
  part-smaller &temporal-
  part-bigger
??day-month-part-of??day ??month
&day-in-
daymonth
&month-in-
daymonth
??ordinal-
description
??sequenceable-
          entity
??entity-sequence
&ord-described-item &reference-sequence
&ordinal-
   desc-selector ??ordinal-selector
??last
??day-sequence
TEMPORAL PARTS
ORDINALS
2
1
3
4 5
6
a)
Figure 4: The ontology fragment computed by the semantic interpretation function.
source sentence is a complex ontology fragment obtained by the application of the function MO. As case
study we showed how this function uses the ontology O to interpret the ordinal numbers. The decision
to use an ontology fragment as semantic representation is motivated by theoretical assumptions and has
some practical appeals. From a theoretical point of view, we represent language semantics as part of the
world knowledge in ontologies (Buitelaar et al, 2009; Galanis and Androutsopoulos, 2007; Nirenburg
and Raskin, 2004). From an applicative point of view the ontology restriction produced by the semantic
interpretation is used (in logical form) as input of the OpenCCG tool, in the generation component of the
translation architecture (White, 2006). As a consequence, similar to Nirenburg and Raskin (2004), we
use ontologies in all components of our architecture (cf. Galanis and Androutsopoulos (2007); Sun and
Mellish (2007)).
We have currently implemented the main features of the MO and the ontology is being developed.
Our working hypothesis is that the weather forecast sub-language is characterized by plain and short
sentences and this guarantees scalability of our approach. In the next future we plan to broaden the
coverage of linguistic phenomena, so to unify ordinals, superlative and comparative adjective analyses.5
References
Buitelaar, P., P. Cimiano, P. Haase, and M. Sintek (2009). Towards linguistically grounded ontologies. In Proceed-
ings of the 6th Annual European Semantic Web Conference (ESWC).
Bunt, H., R. M. M. Dzikovska, M. Swift, and J. Allen (2007). Customizing Meaning: Building Domain-Specific
Semantic Representations From A Generic Lexicon, Volume 83. Springer.
Cimiano, P. (2009). Flexible semantic composition with DUDES. In Proceedings of the 8th International Confer-
ence on Computational Semantics (IWCS?09).
Galanis, D. and I. Androutsopoulos (2007). Generating multilingual descriptions from linguistically annotated
OWL ontologies: the naturalOWL system. In In Proceedings of the 11th European Workshop on Natural
Language Generation, Schloss Dagstuhl.
Hudson, R. (1984). Word Grammar. Oxford and New York: Basil Blackwell.
Hutchins, W. and H. L. Somer (1992). An Introduction to Machine Translation. London: Academic Press.
Lesmo, L. (2007, June). The Rule-Based Parser of the NLP Group of the University of Torino. Intelligenza
Artificiale 2(4), 46?47.
Nirenburg, S. and V. Raskin (2004). Ontological Semantics. The MIT Press.
Sun, X. and C. Mellish (2007). An experiment on ?free generation? from single RDF triples. In Proceedings of
ENLG ?07, pp. 105?108. Association for Computational Linguistics.
White, M. (2006). Efficient realization of coordinate structures in combinatory categorial grammar. Research on
Language and Computation 2006(4(1)), 39?75.
5Acknowledgement: This work is partly supported from the ATLAS project, that is co-funded by Regione Piemonte within
the ?Converging Technologies - CIPE 2007? framework (Research Sector: Cognitive Science and ICT).
349
