Automated Generalization of Phrasal Paraphrases from the Web*
Weigang Li 
School of Computer
Science and Tech-
nology, Box 321,
Harbin Institute of
Technology, Harbin,
 P.R. China, 150001
lee@ir.hit.edu
.cn
Ting Liu 
School of Computer
Science and Tech-
nology, Box 321,
Harbin Institute of
Technology, Harbin,
 P.R. China, 150001
tliu@ir.hit.ed
u.cn
Yu Zhang
School of Computer
Science and Tech-
nology, Box 321,
Harbin Institute of
Technology, Harbin,
 P.R. China, 150001
zhangyu@ir.hit
.edu.cn
Sheng Li 
School of Computer
Science and Tech-
nology, Box 321,
Harbin Institute of
Technology, Harbin,
 P.R. China, 150001
lis@ir.hit.edu
.cn
Wei He 
School of Computer
Science and Tech-
nology, Box 321,
Harbin Institute of
Technology, Harbin,
 P.R. China, 150001
truman@ir.hit.
edu.cn
Abstract
Rather than creating and storing thou-
sands of paraphrase examples, para-
phrase templates have strong 
representation capacity and can be used
to generate many paraphrase examples.
This paper describes a new template
representation and generalization
method. Combing a semantic diction-
ary, it uses multiple semantic codes to
represent a paraphrase template. Using
an existing search engine to extend the
word clusters and generalize the exam-
ples.  We also design three metrics to
measure our generalized templates. The 
experimental results show that the rep-
resentation method is reasonable and 
the generalized templates have a higher 
precision and coverage.
1 Introduction
Paraphrases are alternative ways to convey the 
same information (Barzilay and McKeown,
2001) and they have been applied in many fields
of natural language processing. There are many
previous work on paraphrase examples extrac-
tion or combining them with some applications
such as information retrieval and question an-
swering (Agichtein et al, 2001; Florence et al, 
2003; Rinaldi et al, 2003; Tomuro, 2003; Lin
and Pantel, 2001;), information extraction 
(Shinyama et al, 2002; Shinyama and Sekine, 
2003), machine translation (Hiroshi et al, 2003;
Zhang and Yamamoto, 2003), multi-document
(Barzilay et al, 2003).
There is also some other research about 
paraphrase. (Wu and Zhou, 2003) just extract 
the synonymy collocation, such as <turn on, 
OBJ, light> and <switch on, OBJ, light> using
both monolingual corpora and bilingual corpora 
to get an optimal result, but do not generalize
them. (Glickman and Dagan, 2003) detects verb
paraphrases instances within a single corpus
without relying on any priori structure and in-
formation. Generation of paraphrase examples
was also investigated (Barzilay and Lee, 2003;
Quirk et al, 2004).
Rather than creating and storing thousands of 
paraphrases, paraphrase templates have strong 
representation capacity and can be used to gen-
erate many paraphrase examples. As (Hirst, 
2003) said, for each aspect of paraphrase there 
are two main challenges: representation of 
knowledge and acquisition of knowledge. Cor-
responding to the problem of generalization of 
paraphrase templates, there are also two prob-
lems: the first is the representation of paraphrase
templates and the second is acquisition of para-
phrase templates.
There are several methods about paraphrase
templates representation. The first method is 
using the Part-of-Speech (Barzilay and McKe-
own, 2001; Daum? and Marcu, 2003; Zhang and 
Yamamoto, 2003), the second uses name entity 
as the variable (Shinyama et al, 2002; Shinyama
and Sekine, 2003), the third method is similar to 
the second method which is called the inference 
rules extraction (Lin and Pantel, 2001).
A paraphrases template is a pair of natural
language phrases with variables standing in for
certain grammatical constructs in (Daum? and 
*: Supported by the Key Project of National Natural Sci-
ence Foundation of China under Grant No. 60435020
49
Marcu, 2003). He used Part-of-Speech to repre-
sent templates. But for some cases, the POS will 
be very limited and for some other cases will be 
over generalized. For example:
?????????
(In my view/mind ----I feel)
The above pair of phrases is a paraphrase, it 
can be generalized using POS information: 
? [pronoun]??
(In [pronoun] view/mind)
[pronoun]??
( [pronoun] feel)
But for this template many noun words will
be excluded. From this point of view, the tem-
plate representation capacity is limited. But for 
other examples, the POS information will be 
over generally. For example:
?????????
(What's the price for the apples?)
????????
(How much is the apples per Jin?)
Here, we just generalize one variable ????.
Then, the template becomes:
[noun]???????
(What's the price for the [noun]?)
[noun]??????
(How much is the [noun] per Jin?)
If there is a sentence ??????????
(What's the price for the notebook?)?, its? para-
phrase will be ?????????(How much 
is the notebook per Jin?)? according to this tem-
plate. Obviously, the result is unreasonable.
(Shinyama et al, 2002) tried to find para-
phrases assuming that two sentences sharing
many Named Entities and a similar structure are 
likely to be paraphrases of each other. But just 
name entities are limited, too. And (Lin and 
Pantel, 2001) present an unsupervised algorithm 
for discovering inference rules from text such as 
?X writes Y? and ?X is the author of Y?. This 
generalized method has good ability. But it also
has some limited aspect. For example:
[Jack] writes [his homework].
According to the paraphrase template, the
target sentence will be transformed into ?[Jack]
is the author of [his homework]?. It?s obviously
that the generated sentence is not standard.
So how to represent paraphrase templates
and generalize the paraphrase examples is a very 
interesting task. In this paper, we present a novel
approach to represent paraphrase template with 
semantic code of words and using an existing
search engine to get the paraphrase template.
The remainder of this paper is organized as 
follows. In the next section, we give the over-
view of our method. In section 3, we define the 
representation method in details. Section 4 pre-
sents the generalization method. Some experi-
ments and discussions are shown in Section 5. 
Finally, we draw a conclusion of this method
and give some suggestions about future work. 
2 Overview of Generalization Method
The origin input of our system is a seed phrasal
paraphrase example. And the output is the gen-
eralized paraphrase templates from the given 
examples. The overall architecture of our para-
phrase generalization is represented on figure 1. 
A seed phrasal
paraphrase examples
Getting the slot word
Extend the slot word
using Search Engine
on every example
Mapping two word
sets to their semantic
code sets
Intersection operation
on the two semantic
code sets
Generalizing a
template
Figure 1: Sketch Map of Paraphrase example
Generalization
We also use the example (1) to illustrate the 
representation. Here a semantic dictionary called 
?TongYiCiCiLin? (Extension Version)1 is used. 
The pair of phrases is a phrasal paraphrase. At
first, after preprocessing which includes word
segment, POS tagging and word sense disam-
biguation, we get the slot word in the paraphrase.
In this example, the slot word is ??(I)?. Then
we search the web using the context of the slot 
word. Every phrase in the phrasal pair derives a
set of sentences which include the original 
phrase context. A dependency parser on these 
sentences is used to extract the corresponding
word with the slot word. Two word sets can be 
obtained through the two sentence sets. Then,
we map word sets to their semantic code sets
1 TongYiCiCiLin (Extended Version) can be downloaded
from the website of HIT-IRLab (Http://ir.hit.edu.cn). In the 
past section, we abbreviate the TongYiCiCiLin (Extended
Version) to Cilin (EV) 
50
according to Cilin(EV). Then an intersection 
operation is conducted on the two sets. We use 
the intersection set to replace the slot word and 
generate the final paraphrase template. 
In order to verify the validation of the gener-
alized paraphrase template, we also design an 
automatic algorithm to confirm whether the 
template is reasonable using the existing search 
engine.
3 Representation of Template 
In the section of introduction, some representa-
tion methods of paraphrase template have been 
introduced. And we proposed a new method us-
ing word semantic codes to represent the vari-
able in a template. Before we introduce the 
representation method, Firstly, we give some 
general introduction about the semantic diction-
ary of Cilin(EV). 
3.1 TongYiCiCiLin (Extended Version) 
Cilin (EV) is derived from original TongY-
iCiCilin in which word senses are decomposed 
to 12 large categories, 94 middle categories, 
1,428 small categories. Cilin (EV) removes 
some outdated words and updates many new 
words. More fine-grained categories are added 
on the base of original classification system to 
satisfy the more complex natural language ap-
plications. The encoding criterion is shown in 
the table 1:
Table 1 Encoding table of dictionary
Encoding
bit 1 2 3 4 5 6 7 8
Example D a 1 5 B 0 2 =
Attribute Big Middle Small groups Atom groups
Layer 1 2 3 4 5
The encoding bits are arranged from left to 
right. The first three layers are same with Cilin. 
The fourth layer is represented by capital letters 
and the fifth layer is two-bit decimal digit. The 
last bit is some more detailed information about 
the atom groups. 
3.2 An Example of a Paraphrase Template 
For simplicity, we just select one slot word in 
every paraphrase. And we stipulated that only 
content word can be slot word. We also use the 
above paraphrase example (1). 
?????????
(In my view/mind ----I feel)
Here, we get the slot word ??(I)?. Through 
the Word Sense Disambiguation processing, we 
get its semantic code ?Aa02A01=? according to 
the fifth layer in Cilin(EV). If we just use the 
semantic code of the slot word, we can get a 
simple paraphrase template as follows:  
? [Aa02A01=] ??
(In [Aa02A01=]  view/mind)
[Aa02A01=] ??
([Aa02A01=]  feel)
But it is obviously that the template is very 
limited. Its? representation ability is also limited. 
So how to extend the ability of a paraphrase 
template is a challenging work.  
3.3 Extending the Template Abstract Ability 
According to the feature of Cilin(EV) architec-
ture, we can use the higher layer?s semantic 
code instead of the slot word to generalize the 
paraphrase template naturally. Of course it?s a 
very simple method to extend the template abil-
ity, but it also brings more redundancy of a 
paraphrase template and it will be proven in the 
later section. 
So we use multiple semantic codes of the dif-
ferent layer instead of only one semantic code of 
slot word in Cilin (EV). The later experimental 
results prove this representation has a good per-
formance with a good precision and coverage. 
4 Generalizing to Templates 
As mentioned above, we can use multiple se-
mantic codes to generalize paraphrase examples. 
So the problem of how to generalize paraphrase 
examples is transformed into the problem of 
how to get the multiple semantic codes set. We 
proposed a new method which uses the existing 
search engine to reach the target.  
4.1 Getting the Candidate Sentences 
After we removed the slot word in the para-
phrase examples, two phrasal contexts of the 
original paraphrase phrases were obtained. Each 
phrase without slot word is used as a search 
query for an existing search engine and achiev-
ing many sentences which include the query 
word. For this example, the two queries are ??
??(in?view)? and ???(feel)?. Each query 
gets one sentence set respectively. Part of the 
two result sentence sets are shown in figure 2 
and figure 3: 
51
Figure 2. Sentence Set 1 
Figure 3. Sentence Set 2 
From the above two sentence sets, we can
find that there is some noisy information in the 
sentences. In order to extend the correspondent
words of the slot word, it is not enough that we 
just use the position information or POS tagging
information of the slot word. Even if we extract
these words, many of them can?t be found in the
dictionary because they are not simple words.
Benefiting from the idea of (Lin and Pantel, 
2001), we use a dependency parser to determine
the correspondent extended words. 
4.2 Dependency Parser 
In this paper, we use a dependency parser (Ma et 
al., 2004) to extract the candidate slot word. For 
example, the dependency parsing result of the 
phrase of ?????? is shown in figure 4. 
Figure 4. Dependency parsing result 
The arcs in the figure represent dependency
relationships. The direction of an arc is from the 
head to the modifier in the relationship. Labels 
associated with the arcs represent types of de-
pendency relations. Table 2 lists a subset of the
dependency relations in the HIT-IRLab depend-
ency parser2.
Table 2. A subset of the dependency relations 
Relation Description
ATT ????(attribute)
HED ??(head)
SBJ ??(subject)
ADV ????(adverbial)
VOB ????(verb-object)
???????????????????
??????????????????
??????????????
,7 ????????????"
??????????????????
2 More information about the dependency parser can be got
from http://ir.hit.edu.cn/cuphelp.htm
4.3 Extracting the extended words 
We just use a very simple method to get the ex-
tended words from the parsed sentences. At first, 
we record the relations of the original parsed 
phrasal examples. And then we use these rela-
tions to matched similar part in the candidate 
parsed sentence except slot word. And we omit
these unseen relations and content words which
don?t appear in the original parsed phrasal ex-
amples. Then we can get the extended words. 
????????????
?????????
???????????????
??????????
???????????B720 ????
Figure 5. Dependency parsing result 
Figure 5 shows the dependency parsing result 
of the phrase of ???????????(In for-
eign capital fund manager view). We can easily
find that the extended word of the slot word
?? ?(I) is ??? ?(manager). Two extended
word sets can be extracted from two sentence
sets. Then we map each word to their semantic
code to get two semantic code sets. Intersection
operation is conducted on these two semantic
code sets to obtain their intersection set. Finally, 
we use the semantic code set instead of the slot 
word to generate the paraphrase template.
4.4 Some tricks 
Because the precision of the current dependency
parser on Chinese is not very high, we just ex-
tract a part of the candidate sentences to parse. 
There are three patterns to segment the long 
candidate sentences according to position of slot 
word in paraphrase examples. They are called
FRONT, MIDDLE and BACK. Here we use an
example to illustrate it as shown in table 3: 
Table 3 Examples of sentence segmentation
Pattern Origin Phrase Segment examples
FRONT (SW)?? ????????
?????
MIDDLE ?(SW)?? ????????
????????
????
The bold section in the sentence will be ex-
tracted to parse. Pattern type can be decided by 
52
the position relation between slot word and con-
text words. And these patterns can reduce the 
relative error rate of the dependency parser. That 
is to say, if the original phrase is parsed wrongly, 
the extracted segments may be parsed wrongly 
with the similar error. But according to our 
method, this kind of parser error has little influ-
ence on the final extracting result. 
5 Experiments and Discussions 
5.1 Setting 
We extract about 510 valid paraphrase examples 
from a Chinese paraphrase corpus (Li et al, 
2004). For simplicity, we just select those 
phrasal paraphrase examples which own same 
word. And we stipulate only content word can 
be as slot word. We just use four seed phrasal 
paraphrases as the original paraphrases in this 
paper. And the generalized paraphrase templates 
represented by semantic codes of the fifth layer 
in Cinlin (EV) are also shown in the Table 4: 
Table 4: Examples of the generalized template 
Origin 
Phrases 
Generalized Paraphrase  
templates 
??? [Aa01A01=,Aa01A05=,   
Aa01C03=,Aa02A01=,  ?]??
1 ? ? ?
?
?[Aa01A01=,Aa01A05=, 
  Aa01C03=,Aa02A01=,...  ]??
??? ? [Ac03A01=,Ah04A01=, 
Ah05A01=,Am03D01@,?]?2 ??? [Ac03A01=,Ah04A01=, 
Ah05A01=,Am03D01@,?]??
? ? ?
?
?[Fb01A01=,Gb07B01=, 
Hb06A01=,He15B01=,? ]??
3 ? ? ?
?
?[Fb01A01=,Gb07B01=, 
Hb06A01=,He15B01=,?  ]??
? ? ?
? ? ?
??
[Aa03A01=,Ac03A01=, 
Ba05A10#,Bb02A01=,?]???
???4
? ? ?
???
[Aa03A01=,Ac03A01=,Ba05A10#,
Bb02A01=,?]?????
5.2 Evaluation on Templates 
The goal of the evaluations is to confirm how 
reasonable this kind of representation method of 
paraphrase templates is and how well the tem-
plate is. We evaluated the generalized para-
phrase template in three ways. They are listed in 
the following three categories: 1) Reasonability; 
2) Precision; 3) Coverage. 
1) Reasonability 
The reasonability of a paraphrase template aims 
to measure the reasonable extent of the presenta-
tion method with multiple semantic codes. For 
example, if we use POS to generalize a para-
phrase template, its reasonability is very lower; 
that is to say, POS is not suitable to represent 
paraphrase template in some extent.  
We use an existing search engine to calcu-
late the reasonability of every paraphrase tem-
plate. Firstly, we instantiate all paraphrase 
examples from a template. Then all these exam-
ples are as the queries of the search engine. If 
two phrases in one paraphrase can be matched 
completely from the search engine, it also means 
that one or more examples are found on the Web 
via search engine, we then consider this para-
phrase is reasonable. Using this method we can 
get the approximate evaluation of all the exam-
ples. We define two metrics: 
Strict_Reasonability = S / N 
Loose_Reasonability = (L + S) / N 
Where N is the total number of the instanti-
ated examples; S is the number of the para-
phrase examples which two phrases in it can be 
matched all; L is the number of paraphrase ex-
amples only one phrase in a paraphrase can be 
matched.
2) Precision 
Every template is correspondent to the examples 
number with the semantic code of different layer 
in Cilin (EV) as shown in table 5.  
Table 5 Templates and their correspond exam-
ples number 
Instantiated examples 
number
Number of 
Paraphrase
templates Cilin3 Cilin4 Cilin5
1 2696 1815 478
2 13032 6354 3011
3 1057 587 177
4 3004 2229 429
From the above table, we can find that every 
template can instantiate many examples. If 
manually judging all of these examples will 
spend plenty of time. So we just sample part of 
all instantiate examples, 200 paraphrase exam-
ples for each template in this paper. For each 
53
phrase in a sample paraphrase example, it is as 
search query to get the first two matched sen-
tences. Evaluators would be asked whether it is
semantically okay to replace the query in the
sentence by the correspondent phrase in a para-
phrase. They were given only two options: Yes
or No. If search query have no matched results, 
we consider that this phrase cannot be replace 
with its correspondent paraphrase. According to 
the above regulations, we know that every para-
phrase examples correspondent to 4 sentences. If 
we sample n examples from a template, the pre-
cision of a paraphrase template can be calculated
by:
Precision = R / (4 * n) 
Where, R is the number of sentences which
is considered to be correct by the evaluator.
3) Coverage 
Evaluating directly the coverage of a paraphrase 
template is difficult because humans can?t enu-
merate all the words to be suitable to the tem-
plate. We use an approximate method to get the
coverage of a template. At first we use another 
search engine to get candidate sentences with 
similar method for generalization of a para-
phrase template. From these retrieved sentences
we can get many different words with the 
known generalized words because more than
85% of search results from different search en-
gine are different. Evaluators extract every sen-
tence which can be replaced with the 
correspondent phrase in a paraphrase and the
new sentences retain the origin meaning. We 
know each sentence is correspondent to a word. 
Then we define two metrics: 
Surface_Coverage = M / NS
Semantic_Coverage =
Map(K) / (Map(NS-M) + Map(K)) 
Where, NS is the number of all manually
tagged right words, M is the number of words 
which can be instantiated from a paraphrase
template, K is the number of all the words that 
generalized the template at the front. Map(X) is 
the total word number of the word clusters 
which derived from X word in the semantic dic-
tionary of Cilin(EV).
5.3 Result 
In order to exhibit the merit of our method, we 
conduct four groups of experiment. They are
POS-Tag, Cilin3, Cilin4 and Ciln5, respectively.
Especially, we just randomly select 400 words 
to satisfy the POS information.
Table 6: Experiment Results 
Reasonability
(%)
Coverage
(%)
St_R Lo_R Su_C Se_C
Preci-
sion
(%)
POS 10.50 17.00 90.00 ---- 11.75
Cilin3 45.57 84.50 27.55 38.71 45.75
Cilin4 46.89 84.54 23.87 44.48 64.13
Cilin5 46.24 83.12 20.39 39.47 69.88
Every value in table 6 is a average value of 
four values correspondent to four templates.
From the table we can find that the reasonability
of the Cilin-based representation template
changes little, and that of POS-based representa-
tion is very lower. We find that the longer origi-
nal phrases are, the lower the coverage of the
generalized template is. Although the average 
coverage of generalized template is relatively
low, we can draw a conclusion that using multi-
ple semantic codes to generalize phrasal para-
phrase examples is reasonable.
The column of the coverage shows that the 
coverage rates of Cilin-based templates are all
not more than 50%. And the POS-based tem-
plate has a very high coverage rate. And we 
know that the extended information is not
enough only depending on one search engine. 
We will combine several different search en-
gines with together to solve this problem in the 
future work. 
1.0 1.5 2.0 2.5 3.0 3.5 4.0
0
10
20
30
40
50
60
70
80
90
100
 strict_Reasonability  loose_Reasonability
 surface_Coverage  semantic_Coverage
 Precision
Va
lu
es
 o
f P
er
ce
nt
Different Template Representation Method
Figure 6. Experimental Results
The numbers from one to four on the X-axis
are correspondent to POS, Cilin3, Cilin4 and 
Cilin5 in figure 6. We can see the features
clearly of different representation methods of 
template from the figure 6. We can find that
54
Cilin5-based template has the highest precision, 
but its coverage is lower. And Cilin3-based 
template has opposite feature. This is because 
that one semantic code of Cilin3 includes more 
words than that of Cilin5. At the same time, 
more words bring more redundant information. 
And Cilin4-based template has a good tradeoff 
between coverage and precision. So we con-
clude that the semantic code of fourth layer in 
Cilin (EV) is more suitable to represent para-
phrase template.  
Some additional information can be extracted 
from the generalized template. Such as, the col-
location information between the slot word and 
the context words can be extract. For example, 
in the fourth template, we can get the informa-
tion about which words can be collocated with 
??(Jin)?.
Although this kind of representation of para-
phrase template has a good performance, it is 
weak for those words or structures that don?t 
exist in dictionary. Also, this method is not suit-
able to the named entities representation. 
6 Conclusion
In this paper, a novel method for automated 
generalization of paraphrase examples is pro-
posed. This method is not dependent on the tra-
ditional limited texts instead it is based on the 
richness of the Web. It uses the multiple seman-
tic codes to generalize a paraphrase example 
combing a semantic dictionary (Cilin (EV)). The 
experimental results proved that this representa-
tion method is reasonable and the generalized 
templates have a good precision and coverage.  
But this is just the beginning of the para-
phrase examples generalization. And we sim-
plify the problem in some aspects, such as we 
limited the number of the slot word in a para-
phrase example, and we stipulate only the same 
word can be slot word. Also, we find that our 
templates are weak for those words or structures 
that don?t exist in dictionary. Some methods in 
information extraction about named entities 
generalization can be used for reference in the 
future. Moreover, how to combine the semantic 
code with other representation forms together is 
also an interesting work. 
References
[1] Chris Quirk, Chris Brockett, and William Dolan. 
Monolingual Machine Translation for Para-
phrase Generation. editors, Dekang Lin and 
Dekai Wu, In Proceedings of EMNLP 2004, 
Barcelona, pages 142-149  
[2] Dekang Lin and Patrick Pantel. 2001. Discovery 
of Inference Rules for Question Answering. 
Natural Language Engineering 7(4):343-360 
[3] Dekang Lin and Patrick Pantel. Discovery of 
inference rules for question answering. Natural 
Language Engineering, 1, 2001.  
[4] E. Agichtein, S. Lawrence, and L. Gravano. 
Learning search engine specific query transfor-
mations for question answering. In Proceedings 
of the 10th International World-Wide Web Con-
ference (WWW10), 2001 
[5] Fabio Rinaldi, James Dowdall, Kaarel Kalju-
rand, Michael Hess, Diego Molla. 2003. Ex-
ploiting Paraphrases in a Question Answering 
System. The Second International Workshop on 
Paraphrasing: Paraphrase Acquisition and Ap-
plications 
[6] Florence Duclaye France. Learning paraphrases 
to improve a question-answering system. In 
EACL Natural Language Processing for Ques-
tion Answering, 2003 
[7] Graeme Hirst. Paraphrasing Paraphrased. In 
Proceedings of the Second International Work-
shop on Paraphrasing, 2003 
[8] Hal Daum? III and Daniel Marcu. Acquiring 
paraphrase templates from document/abstract 
pairs. In NL Seminar in ISI, 2003 
[9] Hua Wu, Ming Zhou. Optimizing Synonym 
Extraction Using Monolingual and Bilingual 
Resources. In Proceedings of the Second Inter-
national Workshop on Paraphrasing, 2003 
[10] Hua Wu, Ming Zhou. Synonymous Collocation 
Extraction Using Translation Information. In 
Proceedings of the 41st Annual Meeting of the 
Association for Computational Linguistics, 
2003 
[11] Jinshan Ma, Yu Zhang, Ting Liu, and Sheng Li. 
A Statistical Dependency Parser of Chinese un-
der Small Training Data. Workshop: Beyond 
shallow analyses - Formalisms and statistical 
modeling for deep analyses, IJCNLP-04, 4 2004. 
[12] Noriko Tomuro. 2003. Interrogative Reformula-
tion Patterns and Acquisition of Question Para-
phrases. The Second International Workshop on 
Paraphrasing: Paraphrase Acquisition and Ap-
plications 
[13] Oren Glickman and Ido Dagan. Identifying 
lexical paraphrases from a single corpus: A case 
study for verbs. In Proceedings of Recent Ad-
vantages in Natural Language Processing, Sep-
tember 2003 
55
[14] Regina Barzilay and Kathleen McKeown. Ex-
tracting paraphrases from a parallel corpus. In 
Proceedings of the ACL/EACL, Toulouse, 2001 
[15] Regina Barzilay and Lillian Lee. Learning to 
Paraphrase: An Unsupervised Approach Using 
Multiple-Sequence Alignment. In Proceedings 
of HLT-NAACL 2003, pages 16-23  
[16] Regina Barzilay, Noemie Elhadad, Kathleen R. 
McKeown. 2003. Inferring Strategies for Sen-
tence Ordering in Multidocument News Sum-
marization. The Second International Workshop 
on Paraphrasing: Paraphrase Acquisition and 
Applications 
[17] Weigang Li, Ting Liu, Sheng Li. Combining 
Sentence Length with Location Information to 
Align Monolingual Parallel Texts. AIRS, 2004, 
pages 71-77 
[18] Yusuke Shinyama and Satoshi Sekine. Para-
phrase acquisition for information extraction. 
editors, Kentaro Inui and Ulf Hermjakob, In 
Proceedings of the Second International Work-
shop on Paraphrasing, 2003, pages 65-71 
[19] Yusuke Shinyama, Satoshi Sekine, Kiyoshi 
Sudo, and Ralph Grishman. Automatic para-
phrase acquisition from news articles, In Pro-
ceedings of Human Language Technology 
Conference (HLT2002), San Diego, USA, Mar. 
15, 2002 
[20] Zhang Yujie, Kazuhide Yamamoto. Automatic 
Paraphrasing of Chinese Utterances. Journal of 
Chinese Information Processing. Vol. 117 No. 
16: 31-38(Chinese) 
56
Aligning Bilingual Corpora Using Sentences Location Information* 
Li Weigang   Liu Ting   Wang Zhen   Li Sheng 
Information Retrieval Lab, Computer Science & Technology School, 
Harbin Institute of Technology 321# 
Harbin, China, 150001 
{LEE, tliu, wangzhen, lis}@ir.hit.edu.cn 
 
 
Abstract 
Large amounts of bilingual resource on the Internet 
provide us with the probability of building a large 
scale of bilingual corpus. The irregular characteris-
tics of the real texts, especially without the strictly 
aligned paragraph boundaries, bring a challenge to 
alignment technology. The traditional alignment 
methods have some difficulties in competency for 
doing this. This paper describes a new method for 
aligning real bilingual texts using sentence pair 
location information. The model was motivated by 
the observation that the location of a sentence pair 
with certain length is distributed in the whole text 
similarly. It uses (1:1) sentence beads instead of 
high frequency words as the candidate anchors. 
The method was developed and evaluated through 
many different test data. The results show that it 
can achieve good aligned performance and be ro-
bust and language independent. It can resolve the 
alignment problem on real bilingual text. 
1 Introduction 
There have been a number of papers on aligning 
parallel texts at the sentence level in the last cen-
tury, e.g., (Brown et al 1991; Gale and Church, 
1993; Simard et al 1992; Wu DeKai 1994). On 
clean inputs, such as the Canadian Hansards and 
the Hong Kang Hansards, these methods have been 
very successful.  
(Church, Kenneth W, 1993; Chen, Stanley, 1993) 
proposed some methods to resolve the problem in 
noisy bilingual texts. Cognate information between 
Indo-European languages pairs are used to align n- 
 
 
oisy texts. But these methods are limited when 
aligning the language pairs which are not in the 
same genre or have no cognate information. (Fung, 
1994) proposed a new algorithm to resolve this 
problem to some extent. The algorithm uses fre-
quency, position and recency information as fea-
tures for pattern matching. (W. Bin, 2000) adapted 
the similar idea with (Fung, 1994) to align special 
domain bilingual texts. Their algorithms need 
some high frequency word pairs as anchor points. 
When processing the texts that include less high-
frequency words, these methods will perform 
weakly and with less precision because of the scar-
city of the data problem.  
 (Haruno and Yamazaki, 1996) tried to align 
short texts without enough repeated words in struc-
turally different languages, such as English and 
Japanese. They applied the POS information of 
content words and an online dictionary to find 
matching word pairs. But this is only suitable for 
the short texts. 
The real text always includes some noisy infor-
mation. It has the following characteristics as fol-
lows: 
1) There are no strict aligned paragraph bounda-
ries in real bilingual text;  
2) Some paragraphs may be merged into a larger 
paragraph because of the translator?s individual 
idea;  
3) There are many complex translation patterns 
in real text; 
4)  There exist different styles and themes; 
5) Different genres have different inherent char-
acteristics.  
The tradition approaches to alignment fall into 
two main classes: lexical and length. All these 
methods have limitations when facing the real text 
according to the characteristics mentioned above. 
    * This research was supported by National Natural 
Science Foundation (60203020) and Science Founda-
tion of Harbin Institute of technology (hit.2002.73). 
We proposed a new alignment method based on 
the sentences location information. Its basic idea is 
that the location of a sentence pair with certain 
length is distributed in the whole text similarly. 
The local and global location information of a sen-
tence pair is fully combined together to determine 
the probability with which the sentence pair is a 
sentence bead. 
In the first of the following sections, we describe 
several concepts. The subsequent section reports 
the mathematical model of our alignment approach. 
Section 4 presents the process of anchors selection 
and algorithm implementation is shown in section 
5. The experiment results and discussion are shown 
in section 6. In the final section, we conclude with 
a discussion of future work. 
2 Several conceptions 
1) Alignment anchors: (Brown, 1991) firstly in-
troduced the concept of alignment anchors when 
he aligned Hansard corpus. He considered that the 
whole texts were divided into some small frag-
ments by these alignment anchors. Anchors are 
some aligned sentence pairs. 
2) Sentence bead:  and at the same time, (Brown, 
1991) called each aligned sentence pair a sentence 
bead. Sentence bead has some different styles, 
such as (0:1), (1:0), (1:1), (1:2), (1: more), (2:1), 
(2:2), (2: more), (more: 1), (more: 2), (more: more).  
3) Sentence pair: Any two sentences in the bilin-
gual text can construct a sentence pair. 
4) Candidate anchors: Candidate anchors are 
those that can be possible alignment anchors. In 
this paper, all (1:1) sentence beads are categorized 
as candidate anchors. 
3 Mathematical Model of Alignment 
The alignment process has two steps: the first 
step is to integrate all the origin paragraphs into 
one large paragraph. This can eliminate the prob-
lem induced by the vague paragraph boundaries. 
The second step is the alignment process. After 
alignment, the bilingual text becomes sequences of 
translated fragments. The unit of a fragment can be 
one sentence, two sentences or several sentences. 
The traditional alignment method can be used with 
the fragment with several sentences to improve the 
alignment granularity. In this paper the formal de-
scription of the alignment task was given by ex-
tending the concepts of bipartite graph and 
matching in graph theory. 
3.1 Bipartite graph 
Bipartite graph: Here, we assumed G to be an 
undirected graph, then it could be defined as G=<V, 
E>. The vertex+ set of V has two finite subsets: V1 
and V2, also V1 ? V2?V, V1?V2??. Let E be a 
collection of pairs, when e?E, then e={vi, vj}, 
where vi?V1,vj?V2. The triple G was described 
as, G=<V1, E, V2>, called bipartite graph. In a bi-
partite graph G, if each vertex of V1 is joined with 
each vertex of V2, or vice versa, here an edge 
represents a sentence pair. The collection E is the 
set of all the edges. The triple G=<V1, E, V2> is 
called complete bipartite graph. We considered 
that: |V1|?m, |V2|?n, where the parameters m and 
n are respectively the elements numbers of V1 and 
V2. The complete bipartite graph was usually ab-
breviated as Km, n (as shown in figure 1). 
 
 
 
 
 
 
 
3.2 Matching 
Matching: Assuming G?<V1, E, V2> was a bi-
partite graph. A matching of G was defined as M, a 
subset of E with the property that no two edges of 
M have a common vertex. 
3.3 Best Alignment Matching 
The procedure of alignment using sentence loca-
tion information can be seen as a special matching. 
We defined this problem as ?Best Alignment 
Matching? (BAM). 
BAM: If M=<S, EM, T> is a best alignment 
matching of G=<S, E, T>, then M must meet the 
following conditions:  
1) All the vertexes in the complete bipartite 
graph are ordered; 
2) The weight of any edges in EM d(si, tj) has: 
d(si, tj)< D (where D is alignment threshold); at the 
same time, there are no edges {sk, tr} which made 
k<i and r>j, or k>i and r<j; 
Figure 1 K3,3 complete bipartite graph 
3) If we consider: |S|=m and |T|=n, then the edge 
{sm, tn} belonged to EM; 
Best alignment matching can be attained by 
searching for the smallest weight of edge in collec-
tion E, until the weight of every edge d(si, tj) is 
equal or more than the alignment threshold D. 
Generally, the alignment threshold D is determined 
according to experience because different texts 
have different styles. 
 
 
 
 
 
 
 
 
 
If each sentence in the text S (or T) corre-
sponds with a vertex in V1(or V2), the text S or T 
can be denoted by S(s1, s2, s3,?si, ?sj, ?sm) or 
T(t1, t2, t3?ti, ?tj, ?tn). Considering the form 
merely, each element in S combined with any ele-
ment in T can create a complete bipartite graph. 
Thus the alignment task can be seen as the process 
of searching for the BAM in the complete bipartite 
graph. As shown in figure 2, the edge e = {si, tj} 
belongs to M; this means that the i-th sentence in 
text S and the j-th sentence in text T can make an 
alignment anchor. Each edge is corresponding to 
an alignment value. In order to ensure the bilingual 
texts are divided with the same fragment number, 
we default that the last sentence in the bilingual 
text is aligned. That is to say, {sm, tn} E? M was 
correct, if |S|=m and |T|=n in the BAM mathemati-
cal model.  
We stipulated the smaller the alignment value is, 
the more similar the sentence pair is to a candidate 
anchor. The smallest value of the sentence pair is 
found from the complete bipartite graph. That 
means the selected sentence pair is the most prob-
able aligned (1:1) sentence bead. Alignment proc-
ess is completed until the alignment anchors 
become saturated under alignment threshold value. 
Sentence pairs extracted from all sentence pairs 
are seen as alignment anchors. These anchors di-
vide the whole texts into short aligned fragments. 
The definition of BAM ensures that the selected 
sentence pairs cannot produce cross-alignment er-
rors, and some cases of (1: more) or (more: 1) 
alignment fragments can be attained by the frag-
ments pairs between two selected alignment an-
chors. 
4 Anchors Selection during Alignment 
All (1:1) sentence beads are extracted from dif-
ferent styles of bilingual texts. The distribution 
states that all of them are similar as presented in 
figure 3. The horizontal axis denotes the sentence 
number in Chinese text, and the vertical axis de-
notes the sentence number in English text. 
-20 0 20 40 60 80 100 120 140 160 180
-20
0
20
40
60
80
100
120
140
160
180
200
 
Se
nte
nc
e N
um
be
r in
 E
ng
lis
h T
ex
t
Sentence Number in Chinese Text
Beads
 
 
 
 
Statistical results show that more than 85% sen-
tence beads are (1:1) sentence beads in bilingual 
texts and their distributions obey an obvious law 
well. (DeKai Wu, 1994) offered that (1:1) sentence 
beads occupied 89% in English-Chinese as well. If 
we select these style sentence beads as candidate 
anchors, the alignment method will be general on 
any other language pairs. The main points of our 
alignment method using sentences location infor-
mation are: locating by the whole text, collocating 
by sentence length and checking by a bilingual 
dictionary. Location information of any sentence 
pair is used fully. Three lengths are used: are sen-
tence length, upper context length above the sen-
tence pair and nether context length below the 
sentence. All this information is considered to cal-
culate the alignment weight of each sentence pair. 
Finally, the sentence pair with high weight will be 
checked by a English-Chinese bilingual dictionary. 
In order to study the relationship between every 
sentence pair of {si, tj}, four parameters are defined: 
Whole text length ratio: P0 = Ls / Lt; 
Upper context length ratio: Pu[i, j] = Usi / Utj; 
Nether context length ratio: Pd[i, j] = Dsi / Dtj 
Sentence length ratio: Pl[i, j] = Lsi / Ltj; 
Figure 2 Sketch map of Km, n BAM under 
alignment threshold D 
t1  t2   t3  t4  t5  t6  t7      ti     tj                      tn-2   tn-1  tn  
s1  s2  s3   s4  s5   s6  s7      si   sj                    sm-2  sm-1 sm  
????
????
Figure 3 Distribution of (1:1) sentence beads 
in bilingual texts 
Where  
si    the i-th sentence of S; 
tj    the j-th sentence of T; 
Ls  the length of source language text S; 
Lt   the length of target language text T; 
Lsi  the length of si; 
Ltj  the length of tj; 
Usi  the upper context length above sentence si; 
Utj  the upper context length above sentence tj; 
Dsi  the nether context length below sentence si; 
Dtj  the nether context length below sentence tj; 
Figure 4 illustrates clearly the relationship of all 
variables.   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
If si and tj can construct a (1:1) alignment anchor, 
P[i, j] must be less than the alignment threshold, 
where P[i,j] denotes the integrated alignment value 
between si and tj. We assume that the weight coef-
ficient of Pl[i, j] is 1. Only considering the form, 
Pu[i, j] and Pd[i, j] must have the same weight co-
efficient. Here the weight coefficient is set ?. We 
constructed a formal alignment function on every 
sentence pair: 
P[i,j] = 
?(Pu[i, j]-P0)? + (Pl[i, j] -P0)? +?(Pd[i, j] -P0)? 
Where, the parameter ? is the weight coefficient, 
if can adjust the weight of sentence pair length and 
the weight of context lengths well. The longer the 
text is, the more insensitive the effect of the con-
text-length is. So ??s value should increase in order 
to balance the whole proportion. The short text is 
vice versa. In this paper we define: 
?= (Ls/Lsi + Lt/Ltj)/2 
According to the definition of BAM, the smaller 
the alignment function value of P[i, j] is, the more 
the probability of sentence pair {si, tj} being a (1:1) 
sentence bead is. In this paper, we adopt a greedy 
algorithm to select alignment anchors according to 
all the alignment function values of P[i, j] which 
are less than the alignment threshold. This proce-
dure can be implemented with a time complexity 
of O(m*n).  
To obtain further improvement in alignment ac-
curacy requires calculation of the similarity of the 
sentence pairs. An English-Chinese bilingual dic-
tionary is adopted to calculate the semantic simi-
larity between the two sentences in a sentence pair. 
The similarity formula based on a bilingual dic-
tionary is followed: 
 
 
 
Where L| | is the bytes number of all elements, 
Match (T) is (according to English-Chinese dic-
tionary) the English words which have Chinese 
translation in the Chinese sentence, Match (S) is 
the matched Chinese fragments. 
According to the above dictionary check, align-
ment precision is improved greatly. We take a sta-
tistic on all the errors and find that most errors are 
partial alignment errors. Partial alignment means 
that the alignment location is correct, but a half 
pair of the alignment pairs is not integrated. It is 
very difficult to avoid these errors when only tak-
ing into account the sentence location and length 
information. Thus in order to reduce this kind of 
error, we check the semantic similarity of the con-
text-adjacent sentence pairs also. Because these 
pairs could be other alignment patterns, such as 
(1:2) or (2:1), the similarity formulas have some 
difference from the (1:1) sentence pair formula. 
Here, a simple judgement is performed. It is  
shown as: 
If?Lsi-1 * P0 > Ltj-1? 
 
   
 
else 
 
   
 
Here, those alignment anchors whose similari-
ties exceed the similarity threshold based on the 
bilingual dictionary will become the final align-
ment anchors. These final anchors divide the whole 
bilingual texts into aligned fragments. 
Figure 4 Sketch map of variables relationship 
si tjLsi Ltj
Usi Utj
Dsi Dtj
Ls Lt
Chinese Text English Text
s1 t1
tnsm
| ( ) | | ( ) |
| | | |
L Match S L Match TH L S L T
+= +
adjacent
adjacent *)01(
|)(||)(|
LsP
TMatchLSMatchLH +
+=
adjacent
adjacent *)0/11(
|)(||)(|
LtP
TMatchLSMatchLH +
+=
5 Algorithm Implementation 
According to the definition of BAM, the first se-
lected anchor will divide the whole bilingual texts 
into two parts.  We stipulated that the sentences in 
the upper part of source text cannot match any sen-
tence in the nether part of target text. As shown in 
Fig 5, after the first alignment anchors were se-
lected, the second candidate anchors must be se-
lected in the first quadrant or the third quadrant 
and exclusive from the boundary. It is obvious that 
if the candidate anchors exist in the second quad-
rant or fourth quadrant, the cross alignment will 
happen. For example, if the (i, j) is the first se-
lected alignment anchor, and the (i-1, j+1) is the 
second selected alignment anchor, the cross align-
ment appears. We can limit the anchors selection 
field to prevent the cross-alignment errors. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
In addition, in order to resolve the problem that 
the first sentence pair is not a (1:1) sentence bead, 
we use a virtual sentence length as the origin 
alignment sentence bead when we initialize the 
alignment process. 
The implementation of alignment algorithm is 
described as followed: 
1) Load the bilingual text and English-Chinese 
dictionary; 
2) Identify the English and Chinese sentences 
boundaries and number each sentence; 
3) Default the last sentence pair to be aligned 
and calculate every sentence pair?s alignment value; 
4) Search for sentence pair that is corresponding 
to the smallest alignment function value; 
5) If the smallest alignment function value is 
less than the alignment threshold and the go to step 
6), and if the smallest value is equal to or more 
than the threshold, then go to step 7); 
6) If the similarity of the sentence pair is more 
than a certain threshold, the sentence pair will be-
come an alignment anchor and divide the bilingual 
text into two parts respectively, then limit the 
search field of the next candidate anchors and go to 
the step 4) 
7) Output the aligned texts, and go to the end. 
6 Results and Discussion 
We use the real bilingual texts of the seven-
teenth chapter in the literary masterpiece ?Wuther-
ing Heights? as our test data. The basic 
information of the data is shown in the table 1. 
 English text size 38.1K 
Chinese text size  25.1K 
English sentence number 273 
Chinese sentence number 277 
Table 1 Basic information of the test data  
In order to verify the validity of our algorithm, 
we implement the classic length-based sentence 
alignment method using dynamic programming. 
The precision is defined:  
Precision = The correct aligned sentence pairs / 
All alignment sentence pairs in bilingual texts 
The comparison results are presented in table 2.  
Method Precision (%) 
Length-based 
alignment method  20.3 
Location-based 
alignment method 87.8 
Table 2 Comparison results between two methods 
Because the origin bilingual texts have no obvi-
ous aligned paragraph boundaries, the error exten-
sion phenomena happen easily in the length-based 
alignment method if the paragraphs are not strictly 
aligned correctly. Its alignment results are so 
weaker that it cannot be used. If we omit all of the 
origin paragraphs information, we merge all the 
paragraphs in the bilingual text into one larger 
paragraph respectively. The length-based align-
ment method rated the precision of 25.4%. This is 
mainly because the English and Chinese languages 
don?t belong to the same genre and have large dif-
ference between the language pairs. But our 
Figure 5 Anchors selection in Bilingual Texts 
j+1
second 
quadrant
first 
quadrant
third 
quadrant
fourth 
quadrant
0 m
n
i
j
i-1
method rated 129 (1:1) sentence pairs as alignment 
anchors which divide the bilingual text into aligned 
fragments. The length-based classic method was 
applied to these aligned fragments and got a high 
precision. Fig 6 shows 129 selected anchors distri-
bution which is in the same trend with all the (1:1) 
sentence beads. Their only difference is the sparse 
extent of the aligned pairs. 
0 50 100 150 200 250 300
0
50
100
150
200
250
300
 
En
gli
sh
 S
en
ten
ce
 N
um
be
r
Chinese Sentence Number
 A
 
Figure 6 Distribution of alignment anchors 
In order to evaluate the adaptability of our 
method, we select texts with different themes and 
styles as the test set. We merge two news bilingual 
texts and two novel texts. The data information is 
show in Table 3. 
Our method is applied on the fixed data and re-
ceives the precision rating of 86.9%. The result 
shows that this alignment method is theme inde-
pendent.  
English text size 63.9K  
Chinese text size  41.5K  
English sentence number 510 
Chinese sentence number 526 
 Table 3 Basic information of the fixed test data 
 (Haruno and Yamazaki, 1996) tried to align 
short texts in structurally different languages, such 
as English and Japanese. In this paper the aligned 
language pairs of English and Chinese belongs to 
structurally different languages as well. Our 
method gets the highest precision in aligning short 
texts. A bilingual news text is selected to be test 
data. The result is shown in table 4. There are two 
aligned sentence error pairs which are induced by 
the lack the corresponding translation.  
English text size 5.6K  
Chinese text size  3.4K  
English sentence number 40 
Chinese sentence number 38 
Precision (%) 94.4 
Table 4 Alignment results of short test data 
It is difficult to attain large test set because do-
ing so need more manual work. We construct the 
test set by merging the aligned sentence pairs in 
the existing sentence aligned bilingual corpus into 
two files. Then the two translated files can be as 
test set. Here we merge 2000 aligned sentence 
pairs. The file information is as follows:  
English text size 200.3K  
Chinese text size  144.2K  
English sentence number 2069 
Chinese sentence number 2033 
Table 5 Basic information of the large test data 
From the table 4, it is evident that there are 
many different styles of sentence beads. The 
method is developed on this large test set and gets 
the precision of 90.5%. The reason of the slight 
precision increase is that the last test set is rela-
tively clean and the sentence length distribution 
relatively average. But overall, our method per-
forms very well to align the real bilingual texts. It 
shows the high robustness and is not related to the 
languages, text themes, text length. This method 
can resolve the alignment problem of the real text. 
7 Conclusion 
This paper proposed a new method for fully 
aligning real bilingual texts using sentence location 
information, described concretely in section 3 and 
4. The model was motivated by the observation 
that the location of a sentence pair with certain 
length is distributed in the whole text similarly. It 
uses the (1:1) sentence beads instead of the high 
frequency words as the candidate anchors. Local 
and global location characteristics of sentence pairs 
are involved to determine the probability which the 
sentence pair is an alignment anchors. 
Every sentence pair corresponds to an alignment 
value which is calculated according to the formal 
alignment function. Then the process of BAM is 
performed to get the alignment anchors. This 
alignment method can restrain the errors extension 
effectively in comparison to the traditional align-
ment method. Furthermore, it has shown strong 
robustness, even if when it meets ill-quality texts 
that include incorrect sentences. To obtain further 
improvement in alignment accuracy sentence simi-
larity based on an English-Chinese dictionary was 
performed. It need not segment the Chinese sen-
tence. The whole procedure requires little cost to 
implement. 
Additionally, we can adjust the alignment and 
similarity thresholds dynamically to get high preci-
sion alignment anchors, for example, applying the 
first test set, even if we get only 105 (1:1) sentence 
beads but the precision is 100%. We found that this 
method can perform the function of paragraph 
alignment very well and ensure simultaneous the 
alignment precision.  
Of these pairs about half of total number of (1:1) 
sentence beads can be even extracted from the bi-
lingual text directly to build a large scale bilingual 
corpus if the original bilingual text is abundant. 
And the rest bilingual text can be used as spare 
resource. Now, we have obtained about 500,000 
English-Chinese aligned sentence pairs with high 
quality. 
In the future, we hope to do further alignment on 
the basis of current work and extend the method to 
align other language pairs. 
References 
Wu, DeKai. 1994. Aligning a parallel English-
Chinese corpus statistically with lexical criteria. 
In Proceedings of the 32nd Annual Conference 
of the Association for Computational Linguistics, 
80--87, Las Cruces, New Mexico 
Simard, M., Foster, G., and Isabelle, P. 1992. Us-
ing Cognates to Align Sentences in Bilingual 
Corpora.Fourth International Conference on 
Theoretical and Methodological Issues in Ma-
chine Translation (TMI-92), Montreal, Canada 
Brown, P., Lai, J. and Mercer, R. 1991. Aligning 
Sentences in Parallel Corpora. ACL-91 
Fung Pascale and Kathleen Mckeown. 1994. Align-
ing noisy parallel corpora across language 
groups: Word pair feature matching by dynamic 
time warping. In AMTA-94, Association for 
Machine Translation in the Americas, 81--88, 
Columbia, Maryland 
Wang Bin, Liu Qin, Zhang Xiang. 2000. Auto-
matic Chinese-English Paragraph Segmentation 
and Alignment. Journal of Software, 
11(11):1547-1553 (Chinese) 
Church, Kenneth W. 1993. Char_align: A Pro-
gram for Aligning Parallel Texts at the Charac-
ter Level. Proceedings of ACL-93, Columbus 
OH  
Chen, Stanley. 1993. Aligning Sentences in Bilin-
gual Corpora Using Lexical Information. In Pro-
ceedings of the 31st Annual Meeting of the 
Association for Computational Linguistics 
(ACL-1993) 
Gale, W.A. Church, K.W. 1993. A Program for 
Aligning Sentences in Bilingual Corpora. Com-
putational Linguistics, 19(2): 75-102 
Haruno, Masahiko & Takefumi Yamazaki (1996), 
High-performance bilingual text alignment using 
statistical and dictionary information, In Pro-
ceedings of ACL '96, Santa Cruz, California, 
USA, pp. 131-138 
M. Kay & M. Roscheisen. 1993. Text-Translation 
Alignment. Computational Linguistics 19:1 
 
