Proceedings of the 12th Conference of the European Chapter of the ACL, pages 86?93,
Athens, Greece, 30 March ? 3 April 2009. c?2009 Association for Computational Linguistics
Syntactic Phrase Reordering for English-to-Arabic Statistical Machine
Translation
Ibrahim Badr Rabih Zbib
Computer Science and Artificial Intelligence Lab
Massachusetts Institute of Technology
Cambridge, MA 02139, USA
{iab02, rabih, glass}@csail.mit.edu
James Glass
Abstract
Syntactic Reordering of the source lan-
guage to better match the phrase struc-
ture of the target language has been
shown to improve the performance of
phrase-based Statistical Machine Transla-
tion. This paper applies syntactic reorder-
ing to English-to-Arabic translation. It in-
troduces reordering rules, and motivates
them linguistically. It also studies the ef-
fect of combining reordering with Ara-
bic morphological segmentation, a pre-
processing technique that has been shown
to improve Arabic-English and English-
Arabic translation. We report on results in
the news text domain, the UN text domain
and in the spoken travel domain.
1 Introduction
Phrase-based Statistical Machine Translation has
proven to be a robust and effective approach to
machine translation, providing good performance
without the need for explicit linguistic informa-
tion. Phrase-based SMT systems, however, have
limited capabilities in dealing with long distance
phenomena, since they rely on local alignments.
Automatically learned reordering models, which
can be conditioned on lexical items from both the
source and the target, provide some limited re-
ordering capability when added to SMT systems.
One approach that explicitly deals with long
distance reordering is to reorder the source side
to better match the target side, using predefined
rules. The reordered source is then used as input
to the phrase-based SMT system. This approach
indirectly incorporates structure information since
the reordering rules are applied on the parse trees
of the source sentence. Obviously, the same re-
ordering has to be applied to both training data and
test data. Despite the added complexity of parsing
the data, this technique has shown improvements,
especially when good parses of the source side ex-
ist. It has been successfully applied to German-to-
English and Chinese-to-English SMT (Collins et
al., 2005; Wang et al, 2007).
In this paper, we propose the use of a similar
approach for English-to-Arabic SMT. Unlike most
other work on Arabic translation, our work is in
the direction of the more morphologically com-
plex language, which poses unique challenges. We
propose a set of syntactic reordering rules on the
English source to align it better to the Arabic tar-
get. The reordering rules exploit systematic differ-
ences between the syntax of Arabic and the syntax
of English; they specifically address two syntac-
tic constructs. The first is the Subject-Verb order
in independent sentences, where the preferred or-
der in written Arabic is Verb-Subject. The sec-
ond is the noun phrase structure, where many dif-
ferences exist between the two languages, among
them the order of adjectives, compound nouns
and genitive constructs, as well as the way defi-
niteness is marked. The implementation of these
rules is fairly straightforward since they are ap-
plied to the parse tree. It has been noted in previ-
ous work (Habash, 2007) that syntactic reordering
does not improve translation if the parse quality is
not good enough. Since in this paper our source
language is English, the parses are more reliable,
and result in more correct reorderings. We show
that using the reordering rules results in gains in
the translation scores and study the effect of the
training data size on those gains.
This paper also investigates the effect of using
morphological segmentation of the Arabic target
86
in combination with the reordering rules. Mor-
phological segmentation has been shown to benefit
Arabic-to-English (Habash and Sadat, 2006) and
English-to-Arabic (Badr et al, 2008) translation,
although the gains tend to decrease with increas-
ing training data size.
Section 2 provides linguistic motivation for the
paper. It describes the rich morphology of Arabic,
and its implications on SMT. It also describes the
syntax of the verb phrase and noun phrase in Ara-
bic, and how they differ from their English coun-
terparts. In Section 3, we describe some of the rel-
evant previous work. In Section 4, we present the
preprocessing techniques used in the experiments.
Section 5 describes the translation system, the data
used, and then presents and discusses the experi-
mental results from three domains: news text, UN
data and spoken dialogue from the travel domain.
The final section provides a brief summary and
conclusion.
2 Arabic Linguistic Issues
2.1 Arabic Morphology
Arabic has a complex morphology compared to
English. The Arabic noun and adjective are in-
flected for gender and number; the verb is inflected
in addition for tense, voice, mood and person.
Various clitics can attach to words as well: Con-
junctions, prepositions and possessive pronouns
attach to nouns, and object pronouns attach to
verbs. The example below shows the decompo-
sition into stems and clitics of the Arabic verb
phrase wsyqAblhm1 and noun phrase wbydh, both
of which are written as one word:
(1) a. w+
and
s+
will
yqAbl
meet-3SM
+hm
them
and he will meet them
b. w+
and
b+
with
yd
hand
+h
his
and with his hand
An Arabic corpus will, therefore, have more
surface forms than an equivalent English corpus,
and will also be sparser. In the LDC news corpora
used in this paper (see Section 5.2), the average
English sentence length is 33 words compared to
the Arabic 25 words.
1All examples in this paper are writ-
ten in the Buckwalter Transliteration System
(http://www.qamus.org/transliteration.htm)
Although the Arabic language family consists
of many dialects, none of them has a standard
orthography. This affects the consistency of the
orthography of Modern Standard Arabic (MSA),
the only written variety of Arabic. Certain char-
acters are written inconsistently in different data
sources: Final ?y? is sometimes written as ?Y? (Alif
mqSwrp), and initial Alif hamza (The Buckwal-
ter characters ?<? and ?{?) are written as bare alif
(A). Arabic is usually written without the diacritics
that denote short vowels. This creates an ambigu-
ity at the word level, since a word can have more
than one reading. These factors adversely affect
the performance of Arabic-to-English SMT, espe-
cially in the English-to-Arabic direction.
Simple pattern matching is not enough to per-
form morphological analysis and decomposition,
since a certain string of characters can, in princi-
ple, be either an affixed morpheme or part of the
base word itself. Word-level linguistic information
as well as context analysis are needed. For exam-
ple the written form wly can mean either ruler or
and for me, depending on the context. Only in the
latter case should it be decomposed.
2.2 Arabic Syntax
In this section, we describe a number of syntactic
facts about Arabic which are relevant to the
reordering rules described in Section 4.2.
Clause Structure
In Arabic, the main sentence usually has
the order Verb-Subject-Object (VSO). The order
Subject-Verb-Object (SVO) also occurs, but is less
frequent than VSO. The verb agrees with the sub-
ject in gender and number in the SVO order, but
only in gender in the VSO order (Examples 2c and
2d).
(2) a. Akl
ate-3SM
Alwld
the-boy
AltfAHp
the-apple
the boy ate the apple
b. Alwld
the-boy
Akl
ate-3SM
AltfAHp
the-apple
the boy ate the apple
c. Akl
ate-3SM
AlAwlAd
the-boys
AltfAHAt
the-apples
the boys ate the apples
d. AlAwlAd
the-boys
AklwA
ate-3PM
AltfAHAt
the-apples
the boys ate the apples
87
In a dependent clause, the order must be SVO,
as illustrated by the ungrammaticality of Exam-
ple 3b below. As we discuss in more detail later,
this distinction between dependent and indepen-
dent clauses has to be taken into account when the
syntactic reordering rules are applied.
(3) a. qAl
said-3SM
An
that
Alwld
the-boy
Akl
ate
AltfAHp
the-apple
he said that the boy ate the apple
b. *qAl
said-3SM
An
that
Akl
ate
Alwld
the-boy
AltfAHp
the-apple
he said that the boy ate the apple
Another pertinent fact is that the negation parti-
cle has to always preceed the verb:
(4) lm
not
yAkl
eat-3SM
Alwld
the-boy
AltfAHp
the-apple
the boy did not eat the apple
Noun Phrase
The Arabic noun phrase can have constructs
that are quite different from English. The adjective
in Arabic follows the noun that it modifies, and it
is marked with the definite article, if the head noun
is definite:
(5) AlbAb
the-door
Alkbyr
the-big
the big door
The Arabic equivalent of the English posses-
sive, compound nouns and the of -relationship is
the Arabic idafa construct, which compounds two
or more nouns. Therefore, N1?s N2 and N2 of N1
are both translated as N2 N1 in Arabic. As Exam-
ple 6b shows, this construct can also be chained
recursively.
(6) a. bAb
door
Albyt
the-house
the house?s door
b. mftAH
key
bAb
door
Albyt
the-house
The key to the door of the house
Example 6 also shows that an idafa construct is
made definite by adding the definite article Al- to
the last noun in the noun phrase. Adjectives follow
the idafa noun phrase, regardless of which noun in
the chain they modify. Thus, Example 7 is am-
biguous in that the adjective kbyr (big) can modify
any of the preceding three nouns. The same is true
for relative clauses that modify a noun.
(7) mftAH
key
bAb
door
Albyt
the-house
Alkbyr
the-big
These and other differences between the Arabic
and English syntax are likely to affect the qual-
ity of automatic alignments, since corresponding
words will occupy positions in the sentence that
are far apart, especially when the relevant words
(e.g. the verb and its subject) are separated by sub-
ordinate clauses. In such cases, the lexicalized dis-
tortion models used in phrase-based SMT do not
have the capability of performing reorderings cor-
rectly. This limitation adversely affects the trans-
lation quality.
3 Previous Work
Most of the work in Arabic machine translation
is done in the Arabic-to-English direction. The
other direction, however, is also important, since
it opens the wealth of information in different do-
mains that is available in English to the Arabic
speaking world. Also, since Arabic is a morpho-
logically richer language, translating into Arabic
poses unique issues that are not present in the
opposite direction. The only works on English-
to-Arabic SMT that we are aware of are Badr et
al. (2008), and Sarikaya and Deng (2007). Badr
et al show that using segmentation and recom-
bination as pre- and post- processing steps leads
to significant gains especially for smaller train-
ing data corpora. Sarikaya and Deng use Joint
Morphological-Lexical Language Models to re-
rank the output of an English-to-Arabic MT sys-
tem. They use regular expression-based segmen-
tation of the Arabic so as not to run into recombi-
nation issues on the output side.
Similarly, for Arabic-to-English, Lee (2004),
and Habash and Sadat (2006) show that vari-
ous segmentation schemes lead to improvements
that decrease with increasing parallel corpus size.
They use a trigram language model and the Ara-
bic morphological analyzer MADA (Habash and
Rambow, 2005) respectively, to segment the Ara-
bic side of their corpora. Other work on Arabic-
to-English SMT tries to address the word reorder-
ing problem. Habash (2007) automatically learns
syntactic reordering rules that are then applied to
the Arabic side of the parallel corpora. The words
are aligned in a sentence pair, then the Arabic sen-
tence is parsed to extract reordering rules based on
how the constituents in the parse tree are reordered
on the English side. No significant improvement is
88
shown with reordering when compared to a base-
line that uses a non-lexicalized distance reordering
model. This is attributed in the paper to the poor
quality of parsing.
Syntax-based reordering as a preprocessing step
has been applied to many language pairs other
than English-Arabic. Most relevant to the ap-
proach in this paper are Collins et al (2005)
and Wang et al (2007). Both parse the source
side and then reorder the sentence based on pre-
defined, linguistically motivated rules. Signifi-
cant gain is reported for German-to-English and
Chinese-to-English translation. Both suggest that
reordering as a preprocessing step results in bet-
ter alignment, and reduces the reliance on the dis-
tortion model. Popovic and Ney (2006) use sim-
ilar methods to reorder German by looking at the
POS tags for German-to-English and German-to-
Spanish. They show significant improvements on
test set sentences that do get reordered as well
as those that don?t, which is attributed to the im-
provement of the extracted phrases. (Xia and
McCord, 2004) present a similar approach, with
a notable difference: the re-ordering rules are au-
tomatically learned from aligning parse trees for
both the source and target sentences. They report
a 10% relative gain for English-to-French trans-
lation. Although target-side parsing is optional
in this approach, it is needed to take full advan-
tage of the approach. This is a bigger issue when
no reliable parses are available for the target lan-
guage, as is the case in this paper. More generally,
the use of automatically-learned rules has the ad-
vantage of readily applicable to different language
pairs. The use of deterministic, pre-defined rules,
however, has the advantage of being linguistically
motivated, since differences between the two lan-
guages are addressed explicitly. Moreover, the im-
plementation of pre-defined transfer rules based
on target-side parses is relatively easy and cheap
to implement in different language pairs.
Generic approaches for translating from En-
glish to more morphologically complex languages
have been proposed. Koehn and Hoang (2007)
propose Factored Translation Models, which ex-
tend phrase-based statistical machine translation
by allowing the integration of additional morpho-
logical features at the word level. They demon-
strate improvements for English-to-German and
English-to-Czech. Tighter integration of fea-
tures is claimed to allow for better modeling of
the morphology and hence is better than using
pre-processing and post-processing techniques.
Avramidis and Koehn (2008) enrich the English
side by adding a feature to the Factored Model that
models noun case agreement and verb person con-
jugation, and show that it leads to a more gram-
matically correct output for English-to-Greek and
English-to-Czech translation. Although Factored
Models are well equipped for handling languages
that differ in terms of morphology, they still use
the same distortion reordering model as a phrase-
based MT system.
4 Preprocessing Techniques
4.1 Arabic Segmentation and Recombination
It has been shown previously work (Badr et al,
2008; Habash and Sadat, 2006) that morphologi-
cal segmentation of Arabic improves the transla-
tion performance for both Arabic-to-English and
English-to-Arabic by addressing the problem of
sparsity of the Arabic side. In this paper, we use
segmented and non-segmented Arabic on the tar-
get side, and study the effect of the combination of
segmentation with reordering.
As mentioned in Section 2.1, simple pattern
matching is not enough to decompose Arabic
words into stems and affixes. Lexical information
and context are needed to perform the decompo-
sition correctly. We use the Morphological Ana-
lyzer MADA (Habash and Rambow, 2005) to de-
compose the Arabic source. MADA uses SVM-
based classifiers of features (such as POS, num-
ber, gender, etc.) to score the different analyses
of a given word in context. We apply morpho-
logical decomposition before aligning the training
data. We split the conjunction and preposition pre-
fixes, as well as possessive and object pronoun suf-
fixes. We then glue the split morphemes into one
prefix and one suffix, such that any given word is
split into at most three parts: prefix+ stem +suffix.
Note that plural markers and subject pronouns are
not split. For example, the word wlAwlAdh (?and
for his children?) is segmented into wl+ AwlAd
+P:3MS.
Since training is done on segmented Arabic, the
output of the decoder must be recombined into its
original surface form. We follow the approach of
Badr et. al (2008) in combining the Arabic out-
put, which is a non-trivial task for several reasons.
First, the ending of a stem sometimes changes
when a suffix is attached to it. Second, word end-
89
ings are normalized to remove orthographic incon-
sistency between different sources (Section 2.1).
Finally, some words can recombine into more than
one grammatically correct form. To address these
issues, a lookup table is derived from the training
data that maps the segmented form of the word to
its original form. The table is also useful in re-
combining words that are erroneously segmented.
If a certain word does not occur in the table, we
back off to a set of manually defined recombina-
tion rules. Word ambiguity is resolved by picking
the more frequent surface form.
4.2 Arabic Reordering Rules
This section presents the syntax-based rules used
for re-ordering the English source to better match
the syntax of the Arabic target. These rules are
motivated by the Arabic syntactic facts described
in Section 2.2.
Much like Wang et al (2007), we parse the En-
glish side of our corpora and reorder using prede-
fined rules. Reordering the English can be done
more reliably than other source languages, such
as Arabic, Chinese and German, since the state-
of-the-art English parsers are considerably better
than parsers of other languages. The following
rules for reordering at the sentence level and the
noun phrase level are applied to the English parse
tree:
1. NP: All nouns, adjectives and adverbs in the
noun phrase are inverted. This rule is moti-
vated by the order of the adjective with re-
spect to its head noun, as well as the idafa
construct (see Examples 6 and 7 in Section
2.2. As a result of applying this rule, the
phrase the blank computer screen becomes
the screen computer blank .
2. PP: All prepositional phrases of the form
N1ofN2 ...ofNn are transformed to
N1N2 ...Nn . All N i are also made indefi-
nite, and the definite article is added to Nn ,
the last noun in the chain. For example, the
phrase the general chief of staff of the armed
forces becomes general chief staff the armed
forces. We also move all adjectives in the
top noun phrase to the end of the construct.
So the real value of the Egyptian pound
becomes value the Egyptian pound real. This
rule is motivated by the idafa construct and
its properties (see Example 6).
3. the: The definite article the is replicated be-
fore adjectives (see Example 5 above). So the
blank computer screen becomes the blank the
computer the screen. This rule is applied af-
ter NP rule abote. Note that we do not repli-
cate the before proper names.
4. VP: This rule transforms SVO sentences to
VSO. All verbs are reordered on the condi-
tion that they have their own subject noun
phrase and are not in the participle form,
since in these cases the Arabic subject occurs
before the verb participle. We also check that
the verb is not in a relative clause with a that
complementizer (Example 3 above). The fol-
lowing example illustrates all these cases: the
health minister stated that 11 police officers
were wounded in clashes with the demonstra-
tors? stated the health minister that 11 po-
lice officers were wounded in clashes with the
demonstrators. If the verb is negated, the
negative particle is moved with the verb (Ex-
ample 4. Finally, if the object of the reordered
verb is a pronoun, it is reordered with the
verb. Example: the authorities gave us all
the necessary help becomes gave us the au-
thorities all the necessary help.
The transformation rules 1, 2 and 3 are applied
in this order, since they interact although they do
not conflict. So, the real value of the Egyptian
pound ? value the Egyptian the pound the real
The VP reordering rule is independent.
5 Experiments
5.1 System description
For the English source, we first tokenize us-
ing the Stanford Log-linear Part-of-Speech Tag-
ger (Toutanova et al, 2003). We then proceed
to split the data into smaller sentences and tag
them using Ratnaparkhi?s Maximum Entropy Tag-
ger (Ratnaparkhi, 1996). We parse the data us-
ing the Collins Parser (Collins, 1997), and then
tag person, location and organization names us-
ing the Stanford Named Entity Recognizer (Finkel
et al, 2005). On the Arabic side, we normalize
the data by changing final ?Y? to ?y?, and chang-
ing the various forms of Alif hamza to bare Alif,
since these characters are written inconsistently in
some Arabic sources. We then segment the data
using MADA according to the scheme explained
in Section 4.1.
90
The English source is aligned to the seg-
mented Arabic target using the standard
MOSES (MOSES, 2007) configuration of
GIZA++ (Och and Ney, 2000), which is IBM
Model 4, and decoding is done using the phrase-
based SMT system MOSES. We use a maximum
phrase length of 15 to account for the increase
in length of the segmented Arabic. We also
use a lexicalized bidirectional reordering model
conditioned on both the source and target sides,
with a distortion limit set to 6. We tune using
Och?s algorithm (Och, 2003) to optimize weights
for the distortion model, language model, phrase
translation model and word penalty over the
BLEU metric (Papineni et al, 2001). For the
segmented Arabic experiments, we experiment
with tuning using non-segmented Arabic as a
reference. This is done by recombining the output
before each tuning iteration is scored and has been
shown by Badr et. al (2008) to perform better than
using segmented Arabic as reference.
5.2 Data Used
We report results on three domains: newswire text,
UN data and spoken dialogue from the travel do-
main. It is important to note that the sentences
in the travel domain are much shorter than in the
news domain, which simplifies the alignment as
well as reordering during decoding. Also, since
the travel domain contains spoken Arabic, it is
more biased towards the Subject-Verb-Object sen-
tence order than the Verb-Subject-Object order
more common in the news domain. Also note
that since most of our data was originally intended
for Arabic-to-English translation, our test and tun-
ing sets have only one reference, and therefore,
the BLEU scores we report are lower than typi-
cal scores reported in the literature on Arabic-to-
English.
The news training data consists of several LDC
corpora2. We construct a test set by randomly
picking 2000 sentences. We pick another 2000
sentences randomly for tuning. Our final training
set consists of 3 million English words. We also
test on the NIST MT 05 ?test set while tuning on
both the NIST MT 03 and 04 test sets. We use the
first English reference of the NIST test sets as the
source, and the Arabic source as our reference. For
2LDC2003E05 LDC2003E09 LDC2003T18
LDC2004E07 LDC2004E08 LDC2004E11 LDC2004E72
LDC2004T18 LDC2004T17 LDC2005E46 LDC2005T05
LDC2007T24
Scheme
RandT MT 05
S NoS S NoS
Baseline 21.6 21.3 23.88 23.44
VP 21.9 21.5 23.98 23.58
NP 21.9 21.8
NP+PP 21.8 21.5 23.72 23.68
NP+PP+VP 22.2 21.8 23.74 23.16
NP+PP+VP+The 21.3 21.0
Table 1: Translation Results for the News Domain
in terms of the BLEU Metric.
the language model, we use 35 million words from
the LDC Arabic Gigaword corpus, plus the Arabic
side of the 3 million word training corpus. Exper-
imentation with different language model orders
shows that the optimal model orders are 4-grams
for the baseline system and 6-grams for the seg-
mented Arabic. The average sentence length is 33
for English, 25 for non-segmented Arabic and 36
for segmented Arabic.
To study the effect of syntactic reordering on
larger training data sizes, we use the UN English-
Arabic parallel text (LDC2003T05). We experi-
ment with two training data sizes: 30 million and
3 million words. The test and tuning sets are
comprised of 1500 and 500 sentences respectively,
chosen at random.
For the spoken domain, we use the BTEC 2007
Arabic-English corpus. The training set consists
of 200K words, the test set has 500 sentences and
the tuning set has 500 sentences. The language
model consists of the Arabic side of the training
data. Because of the significantly smaller data
size, we use a trigram LM for the baseline, and
a 4-gram for segmented Arabic. In this case, the
average sentence length is 9 for English, 8 for Ara-
bic, and 10 for segmented Arabic.
5.3 Translation Results
The translation scores for the News domain are
shown in Table 1. The notation used in the table is
as follows:
? S: Segmented Arabic
? NoS: Non-Segmented Arabic
? RandT: Scores for test set where sentences
were picked at random from NEWS data
? MT 05: Scores for the NIST MT 05 test set
The reordering notation is explained in Section
4.2. All results are in terms of the BLEU met-
91
S NoS
Short Long Short Long
Baseline 22.57 25.22 22.40 24.33
VP 22.95 25.05 22.95 24.02
NP+PP 22.71 24.76 23.16 24.067
NP+PP+VP 22.84 24.62 22.53 24.56
Table 2: Translation Results depending on sen-
tence length for NIST test set.
Scheme Score % Oracle reord
VP 25.76 59%
NP+PP 26.07 58%
NP+PP+VP 26.17 53%
Table 3: Oracle scores for combining baseline sys-
tem with other reordered systems.
ric. It is important to note that the gain that we
report in terms of BLEU are more significant that
comparable gains on test sets that have multiple
references, since our test sets have only one refer-
ence. Any amount of gain is a result of additional
n-gram precision with one reference. We note that
the gain achieved from the reordering of the non-
segmented and segmented systems are compara-
ble. Replicating the before adjectives hurts the
scores, possibly because it increases the sentence
length noticeably, and thus deteriorates the align-
ments? quality. We note that the gains achieved by
reordering on the NIST test set are smaller than
the improvements on the random test set. This is
due to the fact that the sentences in the NIST test
set are longer, which adversely affects the parsing
quality. The average English sentence length is 33
words in the NIST test set, while the random test
set has an average sentence length of 29 words.
Table 2 shows the reordering gains of the non-
segmented Arabic by sentence length. Short sen-
tences are sentences that have less that 40 words of
English, while long sentences have more than 40
words. Out of the 1055 sentence in the NIST test
set 719 are short and 336 are long. We also report
oracle scores in Table 3 for combining the base-
line system with the reordering systems, as well
as the percentage of oracle sentences produced by
the reordered system. The oracle score is com-
puted by starting with the reordered system?s can-
didate translations and iterating over all the sen-
tences one by one: we replace each sentence with
its corresponding baseline system translation then
Scheme 30M 3M
Baseline 32.17 28.42
VP 32.46 28.60
NP+PP 31.73 28.80
Table 4: Translation Results on segmentd UN data
in terms of the BLEU Metric.
compute the total BLEU score of the entire set. If
the score improves, then the sentence in question
is replaced with the baseline system?s translation,
otherwise it remains unchanged and we move on
to the next one.
In Table 4, we report results on the UN corpus
for different training data sizes. It is important to
note that although gains from VP reordering stay
constant when scaled to larger training sets, gains
from NP+PP reordering diminish. This is due to
the fact that NP reordering tend to be more local-
ized then VP reorderings. Hence with more train-
ing data the lexicalized reordering model becomes
more effective in reordering NPs.
In Table 5, we report results on the BTEC
corpus for different segmentation and reordering
scheme combinations. We should first point out
that all sentences in the BTEC corpus are short,
simple and easy to align. Hence, the gain intro-
duced by reordering might not be enough to offset
the errors introduced by the parsing. We also note
that spoken Arabic usually prefers the Subject-
Verb-Object sentence order, rather than the Verb-
Subject-Object sentence order of written Arabic.
This explains the fact that no gain is observed
when the verb phrase is reordered. Noun phrase
reordering produces a significant gain with non-
segmented Arabic. Replicating the definite arti-
cle the in the noun phrase does not create align-
ment problems as is the case with the newswire
data, since the sentences are considerably shorter,
and hence the 0.74 point gain observed on the seg-
mented Arabic system. That gain does not trans-
late to the non-segmented Arabic system since in
that case the definite article Al remains attached to
its head word.
6 Conclusion
This paper presented linguistically motivated rules
that reorder English to look like Arabic. We
showed that these rules produce significant gains.
We also studied the effect of the interaction be-
tween Arabic morphological segmentation and
92
Scheme S NoS
Baseline 29.06 25.4
VP 26.92 23.49
NP 27.94 26.83
NP+PP 28.59 26.42
The 29.8 25.1
Table 5: Translation Results for the Spoken Lan-
guage Domain in the BLEU Metric.
syntactic reordering on translation results, as well
as how they scale to bigger training data sizes.
Acknowledgments
We would like to thank Michael Collins, Ali Mo-
hammad and Stephanie Seneff for their valuable
comments.
References
Eleftherios Avramidis, and Philipp Koehn 2008. En-
riching Morphologically Poor Languages for Statis-
tical Machine Translation. In Proc. of ACL/HLT.
Ibrahim Badr, Rabih Zbib, and James Glass 2008. Seg-
mentation for English-to-Arabic Statistical Machine
Translation. In Proc. of ACL/HLT.
Michael Collins 1997. Three Generative, Lexicalized
Models for Statistical Parsing. In Proc. of ACL.
Michael Collins, Philipp Koehn, and Ivona Kucerova
2005. Clause Restructuring for Statistical Machine
Translation. In Proc. of ACL.
Jenny Rose Finkel, Trond Grenager, and Christopher
Manning 2005. Incorporating Non-local Informa-
tion into Information Extraction Systems by Gibbs
Sampling. In Proc. of ACL.
Nizar Habash, 2007. Syntactic Preprocessing for Sta-
tistical Machine Translation. In Proc. of the Ma-
chine Translation Summit (MT-Summit).
Nizar Habash and Owen Rambow, 2005. Arabic Tok-
enization, Part-of-Speech Tagging and Morphologi-
cal Disambiguation in One Fell Swoop. In Proc. of
ACL.
Nizar Habash and Fatiha Sadat, 2006. Arabic Pre-
processing Schemes for Statistical Machine Trans-
lation. In Proc. of HLT.
Philipp Koehn and Hieu Hoang, 2007. Factored
Translation Models. In Proc. of EMNLP/CNLL.
Young-Suk Lee, 2004. Morphological Analysis
for Statistical Machine Translation. In Proc. of
EMNLP.
MOSES, 2007. A Factored Phrase-based Beam-
search Decoder for Machine Translation. URL:
http://www.statmt.org/moses/.
Franz Och 2003. Minimum Error Rate Training in
Statistical Machine Translation. In Proc. of ACL.
Franz Och and Hermann Ney 2000. Improved Statisti-
cal Alignment Models. In Proc. of ACL.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu 2001. BLUE: a Method for Automatic
Evaluation of Machine Translation. In Proc. of
ACL.
Maja Popovic and Hermann Ney 2006. POS-based
Word Reordering for Statistical Machine Transla-
tion. In Proc. of NAACL LREC.
Adwait Ratnaparkhi 1996. A Maximum Entropy
Model for Part-of-Speech Tagging. In Proc. of
EMNLP.
Ruhi Sarikaya and Yonggang Deng 2007. Joint
Morphological-Lexical Language Modeling for Ma-
chine Translation. In Proc. of NAACL HLT.
Kristina Toutanova, Dan Klein, Christopher Manning,
and Yoram Singer. 2003. Feature-Rich Part-of-
Speech Tagging with a Cyclic Dependency Network.
In Proc. of NAACL HLT.
Chao Wang, Michael Collins, and Philipp Koehn 2007.
Chinese Syntactic Reordering for Statistical Ma-
chine Translation. In Proc. of EMNLP.
Fei Xia and Michael McCord 2004. Improving a
Statistical MT System with Automatically Learned
Rewrite Patterns. In COLING.
93
Proceedings of ACL-08: HLT, Short Papers (Companion Volume), pages 153?156,
Columbus, Ohio, USA, June 2008. c?2008 Association for Computational Linguistics
Segmentation for English-to-Arabic Statistical Machine Translation
Ibrahim Badr Rabih Zbib
Computer Science and Artificial Intelligence Lab
Massachusetts Institute of Technology
Cambridge, MA 02139, USA
{iab02, rabih, glass}@csail.mit.edu
James Glass
Abstract
In this paper, we report on a set of ini-
tial results for English-to-Arabic Statistical
Machine Translation (SMT). We show that
morphological decomposition of the Arabic
source is beneficial, especially for smaller-size
corpora, and investigate different recombina-
tion techniques. We also report on the use
of Factored Translation Models for English-
to-Arabic translation.
1 Introduction
Arabic has a complex morphology compared to
English. Words are inflected for gender, number,
and sometimes grammatical case, and various cli-
tics can attach to word stems. An Arabic corpus
will therefore have more surface forms than an En-
glish corpus of the same size, and will also be more
sparsely populated. These factors adversely affect
the performance of Arabic?English Statistical Ma-
chine Translation (SMT). In prior work (Lee, 2004;
Habash and Sadat, 2006), it has been shown that
morphological segmentation of the Arabic source
benefits the performance of Arabic-to-English SMT.
The use of similar techniques for English-to-Arabic
SMT requires recombination of the target side into
valid surface forms, which is not a trivial task.
In this paper, we present an initial set of experi-
ments on English-to-Arabic SMT. We report results
from two domains: text news, trained on a large cor-
pus, and spoken travel conversation, trained on a sig-
nificantly smaller corpus. We show that segmenting
the Arabic target in training and decoding improves
performance. We propose various schemes for re-
combining the segmented Arabic, and compare their
effect on translation. We also report on applying
Factored Translation Models (Koehn and Hoang,
2007) for English-to-Arabic translation.
2 Previous Work
The only previous work on English-to-Arabic SMT
that we are aware of is by Sarikaya and Deng (2007).
It uses shallow segmentation, and does not make
use of contextual information. The emphasis of that
work is on using Joint Morphological-Lexical Lan-
guage Models to rerank the output.
Most of the related work, though, is on Arabic-to-
English SMT. Lee (2004) uses a trigram language
model to segment Arabic words. She then pro-
ceeds to deleting or merging some of the segmented
morphemes in order to make the segmented Arabic
source align better with the English target. Habash
and Sadat (2006) use the Arabic morphological an-
alyzer MADA (Habash and Rambow, 2005) to seg-
ment the Arabic source; they propose various seg-
mentation schemes. Both works show that the im-
provements obtained from segmentation decrease as
the corpus size increases. As will be shown later, we
observe the same trend, which is due to the fact that
the model becomes less sparse with more training
data.
There has been work on translating from En-
glish to other morphologically complex languages.
Koehn and Hoang (2007) present Factored Transla-
tion Models as an extension to phrase-based statisti-
cal machine translation models. Factored models al-
low the integration of additional morphological fea-
153
tures, such as POS, gender, number, etc. at the word
level on both source and target sides. The tighter in-
tegration of such features was claimed to allow more
explicit modeling of the morphology, and is better
than using pre-processing and post-processing tech-
niques. FactoredModels demonstrate improvements
when used to translate English to German or Czech.
3 Arabic Segmentation and
Recombination
As mentioned in Section 1, Arabic has a relatively
rich morphology. In addition to being inflected for
gender, number, voice and case, words attach to var-
ious clitics for conjunction (w+ ?and?)1, the definite
article (Al+ ?the?), prepositions (e.g. b+ ?by/with?,
l+ ?for?, k+ ?as?), possessive pronouns and object
pronouns (e.g. +ny ?me/my?, +hm ?their/them?). For
example, the verbal form wsnsAEdhm and the nomi-
nal formwbsyAratnA can be decomposed as follows:
(1) a. w+
and+
s+
will+
n+
we+
sAEd
help
+hm
+them
b. w+
and+
b+
with+
syAr
car
+At
+PL
+nA
+our
Also, Arabic is usually written without the diacritics
that denote the short vowels, and different sources
write a few characters inconsistently. These issues
create word-level ambiguity.
3.1 Arabic Pre-processing
Due to the word-level ambiguity mentioned above,
but more generally, because a certain string of char-
acters can, in principle, be either an affixed mor-
pheme or part of the base word, morphological
decomposition requires both word-level linguistic
information and context analysis; simple pattern
matching is not sufficient to detect affixed mor-
phemes. To perform pre-translation morphologi-
cal decomposition of the Arabic source, we use the
morphological analyzer MADA. MADA uses SVM-
based classifiers for features (such as POS, number
and gender, etc.) to choose among the different anal-
yses of a given word in context.
We first normalize the Arabic by changing final
?Y? to ?y? and the various forms of Alif hamza to bare
1In this paper, Arabic text is written using Buckwalter
transliteration
Alif. We also remove diacritics wherever they occur.
We then apply one of two morphological decompo-
sition schemes before aligning the training data:
1. S1: Decliticization by splitting off each con-
junction clitic, particle, definite article and
pronominal clitic separately. Note that plural
and subject pronoun morphemes are not split.
2. S2: Same as S1, except that the split clitics are
glued into one prefix and one suffix, such that
any given word is split into at most three parts:
prefix+ stem +suffix.
For example the word wlAwlAdh (?and for his kids?)
is segmented to w+ l+ AwlAd +P:3MS according to
S1, and to wl+ AwlAd +P:3MS according to S2.
3.2 Arabic Post-processing
As mentioned above, both training and decoding use
segmented Arabic. The final output of the decoder
must therefore be recombined into a surface form.
This proves to be a non-trivial challenge for a num-
ber of reasons:
1. Morpho-phonological Rules: For example, the
feminine marker ?p? at the end of a word
changes to ?t? when a suffix is attached to the
word. So syArp +P:1S recombines to syArty
(?my car?)
2. Letter Ambiguity: The character ?Y? (Alf
mqSwrp) is normalized to ?y?. In the recom-
bination step we need to be able to decide
whether a final ?y? was originally a ?Y?. For
example, mdy +P:3MS recombines to mdAh
?its extent?, since the ?y? is actually a Y; but fy
+P:3MS recombines to fyh ?in it?.
3. Word Ambiguity: In some cases, a word can
recombine into 2 grammatically correct forms.
One example is the optional insertion of nwn
AlwqAyp (protective ?n?), so the segmented
word lkn +O:1S can recombine to either lknny
or lkny, both grammatically correct.
To address these issues, we propose two recombina-
tion techniques:
1. R: Recombination rules defined manually. To
resolve word ambiguity we pick the grammat-
ical form that appears more frequently in the
154
training data. To resolve letter ambiguity we
use a unigram language model trained on data
where the character ?Y? had not been normal-
ized. We decide on the non-normalized from of
the ?y? by comparing the unigram probability of
the word with ?y? to its probability with ?Y?.
2. T: Uses a table derived from the training set
that maps the segmented form of the word to its
original form. If a segmented word has more
than one original form, one of them is picked
at random. The table is useful in recombin-
ing words that are split erroneously. For ex-
ample, qrDAy, a proper noun, gets incorrectly
segmented to qrDAn +P:1S which makes its re-
combination without the table difficult.
3.3 Factored Models
For the Factored Translation Models experiment, the
factors on the English side are the POS tags and the
surface word. On the Arabic side, we use the sur-
face word, the stem and the POS tag concatenated
to the segmented clitics. For example, for the word
wlAwlAdh (?and for his kids?), the factored words are
AwlAd and w+l+N+P:3MS. We use two language
models: a trigram for surface words and a 7-gram
for the POS+clitic factor. We also use a genera-
tion model to generate the surface form from the
stem and POS+clitic, a translation table from POS
to POS+clitics and from the English surface word to
the Arabic stem. If the Arabic surface word cannot
be generated from the stem and POS+clitic, we back
off to translating it from the English surface word.
4 Experiments
The English source is aligned to the segmented Ara-
bic target using GIZA++ (Och and Ney, 2000), and
the decoding is done using the phrase-based SMT
system MOSES (MOSES, 2007). We use a max-
imum phrase length of 15 to account for the in-
crease in length of the segmented Arabic. Tuning
is done using Och?s algorithm (Och, 2003) to op-
timize weights for the distortion model, language
model, phrase translation model and word penalty
over the BLEU metric (Papineni et al, 2001). For
our baseline system the tuning reference was non-
segmented Arabic. For the segmented Arabic exper-
iments we experiment with 2 tuning schemes: T1
Scheme Training Set Tuning Set
Baseline 34.6% 36.8%
R 4.04% 4.65%
T N/A 22.1%
T + R N/A 1.9%
Table 1: Recombination Results. Percentage of sentences
with mis-combined words.
uses segmented Arabic for reference, and T2 tunes
on non-segmented Arabic. The Factored Translation
Models experiments uses the MOSES system.
4.1 Data Used
We experiment with two domains: text news and
spoken dialogue from the travel domain. For the
news training data we used corpora from LDC2. Af-
ter filtering out sentences that were too long to be
processed by GIZA (> 85 words) and duplicate sen-
tences, we randomly picked 2000 development sen-
tences for tuning and 2000 sentences for testing. In
addition to training on the full set of 3 million words,
we also experimented with subsets of 1.6 million
and 600K words. For the language model, we used
20 million words from the LDC Arabic Gigaword
corpus plus 3 million words from the training data.
After experimenting with different language model
orders, we used 4-grams for the baseline system and
6-grams for the segmented Arabic. The English
source is downcased and the punctuations are sepa-
rated. The average sentence length is 33 for English,
25 for non-segmented Arabic and 36 for segmented
Arabic.
For the spoken language domain, we use the
IWSLT 2007 Arabic-English (Fordyce, 2007) cor-
pus which consists of a 200,000 word training set, a
500 sentence tuning set and a 500 sentence test set.
We use the Arabic side of the training data to train
the language model and use trigrams for the baseline
system and a 4-grams for segmented Arabic. The av-
erage sentence length is 9 for English, 8 for Arabic,
and 10 for segmented Arabic.
2Since most of the data was originally intended for Arabic-
to-English translation our test and tuning sets have only one
reference
155
4.2 Recombination Results
To test the different recombination schemes de-
scribed in Section 3.2, we run these schemes on
the training and development sets of the news data,
and calculate the percentage of sentences with re-
combination errors (Note that, on average, there
is one mis-combined word per mis-combined sen-
tence). The scores are presented in Table 1. The
baseline approach consists of gluing the prefix and
suffix without processing the stem. T +Rmeans that
the words seen in the training set were recombined
using scheme T and the remainder were recombined
using scheme R. In the remaining experiments we
use the scheme T + R.
4.3 Translation Results
The 1-reference BLEU score results for the news
corpus are presented in Table 2; those for IWSLT are
in Table 3. We first note that the scores are generally
lower than those of comparable Arabic-to-English
systems. This is expected, since only one refer-
ence was used to evaluate translation quality and
since translating to a more morphologically com-
plex language is a more difficult task, where there
is a higher chance of translating word inflections in-
correctly. For the news corpus, the segmentation of
Arabic helps but the gain diminishes as the training
data size increases, since the model becomes less
sparse. This is consistent with the larger gain ob-
tained from segmentation for IWSLT. The segmen-
tation scheme S2 performs slightly better than S1.
The tuning scheme T2 performs better for the news
corpus, while T1 is better for the IWSLT corpus.
It is worth noting that tuning without segmentation
hurts the score for IWSLT, possibly because of the
small size of the training data. Factored models per-
form better than our approach with the large train-
ing corpus, although at a significantly higher cost in
terms of time and required resources.
5 Conclusion
In this paper, we showed that making the Arabic
match better to the English through segmentation,
or by using additional translation model factors that
model grammatical information is beneficial, espe-
cially for smaller domains. We also presented sev-
eral methods for recombining the segmented Arabic
Large Medium Small
Training Size 3M 1.6M 0.6M
Baseline 26.44 20.51 17.93
S1 + T1 tuning 26.46 21.94 20.59
S1 + T2 tuning 26.81 21.93 20.87
S2 + T1 tuning 26.86 21.99 20.44
S2 + T2 tuning 27.02 22.21 20.98
Factored Models + tuning 27.30 21.55 19.80
Table 2: BLEU (1-reference) scores for the News data.
No Tuning T1 T2
Baseline 26.39 24.67
S1 29.07 29.82
S2 29.11 30.10 28.94
Table 3: BLEU (1-reference) scores for the IWSLT data.
target. Our results suggest that more sophisticated
techniques, such as syntactic reordering, should be
attempted.
Acknowledgments
We would like to thank Ali Mohammad, Michael Collins and
Stephanie Seneff for their valuable comments.
References
Cameron S. Fordyce 2007. Overview of the 2007 IWSLT Eval-
uation Campaign . In Proc. of IWSLT 2007.
Nizar Habash and Owen Rambow, 2005. Arabic Tokenization,
Part-of-Speech Tagging and Morphological Disambiguation
in One Fell Swoop. In Proc. of ACL.
Nizar Habash and Fatiha Sadat, 2006. Arabic Preprocessing
Schemes for Statistical Machine Translation. In Proc. of
HLT.
Philipp Koehn and Hieu Hoang, 2007. Factored Translation
Models. In Proc. of EMNLP/CNLL.
Young-Suk Lee, 2004. Morphological Analysis for Statistical
Machine Translation. In Proc. of EMNLP.
MOSES, 2007. A Factored Phrase-based Beam-
search Decoder for Machine Translation. URL:
http://www.statmt.org/moses/.
Franz Och, 2003. Minimum Error Rate Training in Statistical
Machine Translation. In Proc. of ACL.
Franz Och and Hermann Ney, 2000. Improved Statistical
Alignment Models. In Proc. of ACL.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing
Zhu, 2001. Bleu: a Method for Automatic Evaluation of
Machine Translation. In Proc. of ACL.
Ruhi Sarikaya and Yonggang Deng 2007. Joint
Morphological-Lexical Language Modeling for Machine
Translation. In Proc. of NAACL HLT.
156
Proceedings of the ACL-08: HLT Workshop on Mobile Language Processing, pages 1?9,
Columbus, Ohio, USA, June 2008. c?2008 Association for Computational Linguistics
A Multimodal Home Entertainment Interface via a Mobile Device
Alexander Gruenstein Bo-June (Paul) Hsu James Glass Stephanie Seneff
Lee Hetherington Scott Cyphers Ibrahim Badr Chao Wang Sean Liu
MIT Computer Science and Artificial Intelligence Laboratory
32 Vassar St, Cambridge, MA 02139 USA
http://www.sls.csail.mit.edu/
Abstract
We describe a multimodal dialogue system for
interacting with a home entertainment center
via a mobile device. In our working proto-
type, users may utilize both a graphical and
speech user interface to search TV listings,
record and play television programs, and listen
to music. The developed framework is quite
generic, potentially supporting a wide variety
of applications, as we demonstrate by integrat-
ing a weather forecast application. In the pro-
totype, the mobile device serves as the locus
of interaction, providing both a small touch-
screen display, and speech input and output;
while the TV screen features a larger, richer
GUI. The system architecture is agnostic to
the location of the natural language process-
ing components: a consistent user experience
is maintained regardless of whether they run
on a remote server or on the device itself.
1 Introduction
People have access to large libraries of digital con-
tent both in their living rooms and on their mobile
devices. Digital video recorders (DVRs) allow peo-
ple to record TV programs from hundreds of chan-
nels for subsequent viewing at home?or, increas-
ingly, on their mobile devices. Similarly, having
accumulated vast libraries of digital music, people
yearn for an easy way to sift through them from the
comfort of their couches, in their cars, and on the go.
Mobile devices are already central to accessing
digital media libraries while users are away from
home: people listen to music or watch video record-
ings. Mobile devices also play an increasingly im-
portant role in managing digital media libraries. For
instance, a web-enabled mobile phone can be used to
remotely schedule TV recordings through a web site
or via a custom application. Such management tasks
often prove cumbersome, however, as it is challeng-
ing to browse through listings for hundreds of TV
channels on a small display. Indeed, even on a large
screen in the living room, browsing alphabetically,
or by time and channel, for a particular show using
the remote control quickly becomes unwieldy.
Speech and multimodal interfaces provide a nat-
ural means of addressing many of these challenges.
It is effortless for people to say the name of a pro-
gram, for instance, in order to search for existing
recordings. Moreover, such a speech browsing ca-
pability is useful both in the living room and away
from home. Thus, a natural way to provide speech-
based control of a media library is through the user?s
mobile device itself.
In this paper we describe just such a prototype
system. A mobile phone plays a central role in pro-
viding a multimodal, natural language interface to
both a digital video recorder and a music library.
Users can interact with the system?presented as a
dynamic web page on the mobile browser?using
the navigation keys, the stylus, or spoken natural
language. In front of the TV, a much richer GUI is
also available, along with support for playing video
recordings and music.
In the prototype described herein, the mobile de-
vice serves as the locus of natural language in-
teraction, whether a user is in the living room or
walking down the street. Since these environments
may be very different in terms of computational re-
1
sources and network bandwidth, it is important that
the architecture allows for multiple configurations in
terms of the location of the natural language pro-
cessing components. For instance, when a device
is connected to a Wi-Fi network at home, recogni-
tion latency may be reduced by performing speech
and natural language processing on the home me-
dia server. Moreover, a powerful server may enable
more sophisticated processing techniques, such as
multipass speech recognition (Hetherington, 2005;
Chung et al, 2004), for improved accuracy. In sit-
uations with reduced network connectivity, latency
may be improved by performing speech recognition
and natural language processing tasks on the mobile
device itself. Given resource constraints, however,
less detailed acoustic and language models may be
required. We have developed just such a flexible ar-
chitecture, with many of the natural language pro-
cessing components able to run on either a server or
the mobile device itself. Regardless of the configu-
ration, a consistent user experience is maintained.
2 Related Work
Various academic researchers and commercial busi-
nesses have demonstrated speech-enabled interfaces
to entertainment centers. A good deal of the work
focuses on adding a microphone to a remote con-
trol, so that speech input may be used in addition
to a traditional remote control. Much commercial
work, for example (Fujita et al, 2003), tends to fo-
cus on constrained grammar systems, where speech
input is limited to a small set of templates corre-
sponding to menu choices. (Berglund and Johans-
son, 2004) present a remote-control based speech
interface for navigating an existing interactive tele-
vision on-screen menu, though experimenters man-
ually transcribed user utterances as they spoke in-
stead of using a speech recognizer. (Oh et al, 2007)
present a dialogue system for TV control that makes
use of concept spotting and statistical dialogue man-
agement to understand queries. A version of their
system can run independently on low-resource de-
vices such as PDAs; however, it has a smaller vo-
cabulary and supports a limited set of user utterance
templates. Finally, (Wittenburg et al, 2006) look
mainly at the problem of searching for television
programs using speech, an on-screen display, and a
remote control. They explore a Speech-In List-Out
interface to searching for episodes of television pro-
grams.
(Portele et al, 2003) depart from the model of
adding a speech interface component to an exist-
ing on-screen menu. Instead, they a create a tablet
PC interface to an electronic program guide, though
they do not use the television display as well. Users
may search an electronic program guide using con-
straints such as date, time, and genre; however, they
can?t search by title. Users can also perform typi-
cal remote-control tasks like turning the television
on and off, and changing the channel. (Johnston et
al., 2007) also use a tablet PC to provide an inter-
face to television content?in this case a database of
movies. The search can be constrained by attributes
such as title, director, or starring actors. The tablet
PC pen can be used to handwrite queries and to point
at items (such as actor names) while the user speaks.
We were also inspired by previous prototypes in
which mobile devices have been used in conjunc-
tion with larger, shared displays. For instance, (Paek
et al, 2004) demonstrate a framework for building
such applications. The prototype we demonstrate
here fits into their ?Jukebox? model of interaction.
Interactive workspaces, such as the one described in
(Johanson et al, 2002), also demonstrate the utility
of integrating mobile and large screen displays. Our
prototype is a departure from these systems, how-
ever, in that it provides for spoken interactions.
Finally, there is related work in the use of mobile
devices for various kinds of search. For instance, of-
ferings from Microsoft (Acero et al, 2008), Vlingo,1
and Promptu2 allow users to search for items like
businesses and songs using their mobile phones.
These applications differ from ours in that speech
is used only for search, without any accompanying
command and control capabilities. Also, these ser-
vices do not allow interaction with your own de-
vices at home. Efforts have been made to use mo-
bile devices for control of devices in the home, such
as in (Nichols and Myers, 2006), however these ef-
forts have not involved the use of speech as an input
modality.
1http://www.vlingo.com
2http://www.promptu.com
2
Na
vig
ati
on
 pa
d o
r s
tyl
us 
can
 
be
 us
ed
 to
 na
vig
ate
 G
UI
Sta
tus
 ic
on
 in
dic
ate
s c
on
ne
cti
on
 to
 se
rve
r, 
mi
cro
ph
on
e i
co
n w
he
n l
ist
en
ing
Ho
ld-
to-
tal
k 
bu
tto
n
Op
era we
b 
bro
ws
er
Sy
nc
hro
niz
ed
 se
lec
tio
n o
n m
ob
ile
 an
d 
tel
ev
isi
on
 di
spl
ay
s
Fir
efo
x
we
b b
row
ser
Ta
bs 
all
ow
 ea
sy 
sw
itc
hin
g 
am
on
g d
om
ain
s
Me
dia
 pl
ay
ba
ck
 
co
ntr
ols
Figure 1: User interface overview.
(a) Program Guide
(b) Scheduled Recordings
(c) Music Library
U: What?s on tonight at seven o?clock?
S: I found seventy entries. [Displays program guide.]
U: Are there any action movies on HBO tomorrow?
S: I found two entries. [Displays results.]
U: When is American Idol on?
S: I found three entries. [Displays results.]
U: Record the first one.
S: I have added American Idol to the list of programs to be
recorded. [Displays recording settings.]
U: Please record Nova on Wednesday night.
S: I have added Nova to the list of programs to be recorded.
[Displays recording settings.]
U: Show all my scheduled recordings.
S: There are seven scheduled recordings. [Shows list.]
U: Delete BBC World News.
S: I have deleted the scheduled recording: BBC World
News. [Updates List.]
U: Show my videos.
S: [Displays list of videos.]
U: Delete Frasier.
S: I have deleted the recording Frasier. [Updates list.]
U: Play Grey?s Anatomy.
S: Playing Grey?s Anatomy. [Plays recording.]
U: Stop Playing.
S: Stopping. [Stops playback.]
U: [Clicks on Music tab.]
S: [Displays artist list.]
U: Show albums by Billie Holiday.
S: I found three albums by Billie Holiday. [Shows albums.]
U: Please play A Hard Rain?s A-Gonna Fall by Bob Dylan.
S: Playing A Hard Rain?s A-Gonna Fall. [Plays song.]
Figure 2: Screenshots and an example interaction. Utterances are labeled with U for user and S for system.
3
3 User Experience
Our current prototype system implements the basic
functionalities that one expects from a home enter-
tainment center. Users can navigate through and
record programs from the television?s electronic pro-
gram guide, manage recording settings, and play
recorded videos. They can also browse and listen to
selections from their music libraries. However, un-
like existing prototypes, ours employs a smartphone
with a navigation pad, touch-sensitive screen, and
built-in microphone as the remote control. Figure 1
provides an overview of the graphical user interface
on both the TV and mobile device.
Mirroring the TV?s on-screen display, the proto-
type system presents a reduced view on the mobile
device with synchronized cursors. Users can navi-
gate the hierarchical menu structure using the arrow
keys or directly click on the target item with the sty-
lus. While away from the living room, or when a
recording is playing full screen, users can browse
and manage their media libraries using only the mo-
bile device.
While the navigation pad and stylus are great for
basic navigation and control, searching for media
with specific attributes, such as title, remains cum-
bersome. To facilitate such interactions, the cur-
rent system supports spoken natural language inter-
actions. For example, the user can press the hold-to-
talk button located on the side of the mobile device
and ask ?What?s on the National Geographic Chan-
nel this afternoon?? to retrieve a list of shows with
the specified channel and time. The system responds
with a short verbal summary ?I found six entries on
January seventh? and presents the resulting list on
both the TV and mobile displays. The user can then
browse the list using the navigation pad or press the
hold-to-talk button to barge in with another com-
mand, e.g. ?Please record the second one.? Depress-
ing the hold-to-talk button not only terminates any
current spoken response, but also mutes the TV to
minimize interference with speech recognition. As
the previous example demonstrates, contextual in-
formation is used to resolve list position references
and disambiguate commands.
The speech interface to the user?s music library
works in a similar fashion. Users can search by
artist, album, and song name, and then play the
songs found. To demonstrate the extensibility of
the architecture, we have also integrated an exist-
ing weather information system (Zue et al, 2000),
which has been previously deployed as a telephony
application. Users simply click on the Weather tab
to switch to this domain, allowing them to ask a wide
range of weather queries. The system responds ver-
bally and with a simple graphical forecast.
To create a natural user experience, we designed
the multimodal interface to allow users to seam-
lessly switch among the different input modalities
available on the mobile device. Figure 2 demon-
strates an example interaction with the prototype, as
well as several screenshots of the user interface.
4 System Architecture
The system architecture is quite flexible with re-
gards to the placement of the natural language pro-
cessing components. Figure 3 presents two possible
configurations of the system components distributed
across the mobile device, home media server, and
TV display. In 3(a), all speech recognition and nat-
ural language processing components reside on the
server, with the mobile device acting as the micro-
phone, speaker, display, and remote control. In 3(b),
the speech recognizer, language understanding com-
ponent, language generation component, and text-
to-speech (TTS) synthesizer run on the mobile de-
vice. Depending on the capabilities of the mobile
device and network connection, different configu-
rations may be optimal. For instance, on a power-
ful device with slow network connection, recogni-
tion latency may be reduced by performing speech
recognition and natural language processing on the
device. On the other hand, streaming audio via a fast
wireless network to the server for processing may
result in improved accuracy.
In the prototype system, flexible and reusable
speech recognition and natural language processing
capabilities are provided via generic components de-
veloped and deployed in numerous spoken dialogue
systems by our group, with the exception of an off-
the-shelf speech synthesizer. Speech input from the
mobile device is recognized using the landmark-
based SUMMIT system (Glass, 2003). The result-
ing N-best hypotheses are processed by the TINA
language understanding component (Seneff, 1992).
4
Gala
xy
Spee
ch?R
ecog
nize
r
Lang
uage
?Und
ersta
ndin
g
Dialo
gue?
Man
ager
Lang
uage
?Gen
erat
ion
Text
?To?S
peec
h
Web
?
Serv
er
Tele
visio
n Web
?Bro
wse
r
Med
ia?Pl
ayer
TV?G
uide
?
Med
ia
Mob
ile?D
evic
e
Web
?Bro
wse
r
Hom
e?M
edia
?Serv
er
Wea
ther
Mob
ile?
Man
ager
Aud
io?In
put?
/?Ou
tput
Gala
xy
Dialo
gue?
Man
ager
Web
?
Serv
er Tele
visio
n Web
?Bro
wse
r
Med
ia?Pl
ayer
TV?G
uide
?
Med
ia
Mob
ile?D
evic
e
Web
?Bro
wse
r
Hom
e?M
edia
?Serv
er
Wea
ther
Mob
ile?
Man
ager
Aud
io?In
put?
/?Ou
tput
Spee
ch?R
ecog
nize
r
Lang
uage
?Gen
erat
ion
Text
?To?S
peec
h
Lang
uage
?Und
ersta
ndin
g
(a) (b)
Figure 3: Two architecture diagrams. In (a) speech recognition and natural language processing occur on the server,
while in (b) processing is primarily performed on the device.
Based on the resulting meaning representation, the
dialogue manager (Polifroni et al, 2003) incorpo-
rates contextual information (Filisko and Seneff,
2003), and then determines an appropriate response.
The response consists of an update to the graph-
ical display, and a spoken system response which
is realized via the GENESIS (Baptist and Seneff,
2000) language generation module. To support on-
device processing, all the components are linked via
the GALAXY framework (Seneff et al, 1998) with
an additional Mobile Manager component responsi-
ble for coordinating the communication between the
mobile device and the home media server.
In the currently deployed system, we use a mo-
bile phone with a 624 MHz ARM processor run-
ning the Windows Mobile operating system and
Opera Mobile web browser. The TV program and
music databases reside on the home media server
running GNU/Linux. The TV program guide data
and recording capabilities are provided via MythTV,
a full-featured, open-source digital video recorder
software package.3 Daily updates to the program
guide information typically contain hundreds of
unique channel names and thousands of unique pro-
gram names. The music library is comprised of
5,000 songs from over 80 artists and 13 major gen-
res, indexed using the open-source text search en-
gine Lucene.4 Lastly, the TV display can be driven
by a web browser on either the home media server or
a separate computer connected to the server via a fast
Ethernet connection, for high quality video stream-
ing.
3http://www.mythtv.org/
4http://lucene.apache.org/
While the focus of this paper is on the natural lan-
guage processing and user interface aspects of the
system, our work is actually situated within a larger
collaborative project at MIT that also includes sim-
plified device configuration (Mazzola Paluska et al,
2008; Mazzola Paluska et al, 2006), transparent ac-
cess to remote servers (Ford et al, 2006), and im-
proved security.
5 Mobile Natural Language Components
Porting the implementation of the various speech
recognizer and natural language processing com-
ponents to mobile devices with limited computa-
tion and memory presents both a research and en-
gineering challenge. Instead of creating a small vo-
cabulary, fixed phrase dialogue system, we aim to
support?on the mobile device?the same flexible
and natural language interactions currently available
on our desktop, tablet, and telephony systems; see
e.g., (Gruenstein et al, 2006; Seneff, 2002; Zue et
al., 2000). In this section, we summarize our ef-
forts thus far in implementing the SUMMIT speech
recognizer and TINA natural language parser. Ports
of the GENESIS language generation system and of
our dialogue manager are well underway, and we ex-
pect to have these components working on the mo-
bile device in the near future.
5.1 PocketSUMMIT
To significantly reduce the memory footprint and
overall computation, we chose to reimplement our
segment-based speech recognizer from scratch, uti-
lizing fixed-point arithmetic, parameter quantiza-
tion, and bit-packing in the binary model files.
The resulting PocketSUMMIT recognizer (Hether-
5
ington, 2007) utilizes only the landmark features,
initially forgoing segment features such as phonetic
duration, as they introduce algorithmic complexities
for relatively small word error rate (WER) improve-
ments.
In the current system, we quantize the mean and
variance of each Gaussian mixture model dimension
to 5 and 3 bits, respectively. Such quantization not
only results in an 8-fold reduction in model size, but
also yields about a 50% speedup by enabling table
lookups for Gaussian evaluations. Likewise, in the
finite-state transducers (FSTs) used to represent the
language model, lexical, phonological, and class di-
phone constraints, quantizing the FST weights and
bit-packing not only compress the resulting binary
model files, but also reduce the processing time with
improved processor cache locality.
In the aforementioned TV, music, and weather do-
mains with a moderate vocabulary of a few thou-
sand words, the resulting PocketSUMMIT recog-
nizer performs in approximately real-time on 400-
600 MHz ARM processors, using a total of 2-4
MB of memory, including 1-2 MB for memory-
mapped model files. Compared with equivalent non-
quantized models, PocketSUMMIT achieves dra-
matic improvements in speed and memory while
maintaining comparable WER performance.
5.2 PocketTINA
Porting the TINA natural language parser to mobile
devices involved significant software engineering to
reduce the memory and computational requirements
of the core data structures and algorithms. TINA
utilizes a best-first search that explores thousands of
partial parses when processing an input utterance.
To efficiently manage memory allocation given the
unpredictability of pruning invalid parses (e.g. due
to subject-verb agreement), we implemented a mark
and sweep garbage collection mechanism. Com-
bined with a more efficient implementation of the
priority queue and the use of aggressive ?beam?
pruning, the resulting PocketTINA system provides
identical output as server-side TINA, but can parse
a 10-best recognition hypothesis list into the corre-
sponding meaning representation in under 0.1 sec-
onds, using about 2 MB of memory.
6 Rapid Dialogue System Development
Over the course of developing dialogue systems for
many domains, we have built generic natural lan-
guage understanding components that enable the
rapid development of flexible and natural spoken di-
alogue systems for novel domains. Creating such
prototype systems typically involves customizing
the following to the target domain: recognizer lan-
guage model, language understanding parser gram-
mar, context resolution rules, dialogue management
control script, and language generation rules.
Recognizer Language Model Given a new do-
main, we first identify a set of semantic classes
which correspond to the back-end application?s
database, such as artist, album, and genre. Ideally,
we would have a corpus of tagged utterances col-
lected from real users. However, when building pro-
totypes such as the one described here, little or no
training data is usually available. Thus, we create
a domain-specific context-free grammar to generate
a supplemental corpus of synthetic utterances. The
corpus is used to train probabilities for the natural
language parsing grammar (described immediately
below), which in turn is used to derive a class n-
gram language model (Seneff et al, 2003).
Classes in the language model which corre-
spond to contents of the database are marked as
dynamic, and are populated at runtime from the
database (Chung et al, 2004; Hetherington, 2005).
Database entries are heuristically normalized into
spoken forms. Pronunciations not in our 150,000
word lexicon are automatically generated (Seneff,
2007).
Parser Grammar The TINA parser uses a prob-
abilistic context-free grammar enhanced with sup-
port for wh-movement and grammatical agreement
constraints. We have developed a generic syntac-
tic grammar by examining hundreds of thousands
of utterances collected from real user interactions
with various existing dialogue systems. In addition,
we have developed libraries which parse and inter-
pret common semantic classes like dates, times, and
numbers. The grammar and semantic libraries pro-
vide good coverage for spoken dialogue systems in
database-query domains.
6
To build a grammar for a new domain, a devel-
oper extends the generic syntactic grammar by aug-
menting it with domain-specific semantic categories
and their lexical entries. A probability model which
conditions each node category on its left sibling and
parent is then estimated from a training corpus of
utterances (Seneff et al, 2003).
At runtime, the recognizer tags the hypothesized
dynamic class expansions with their class names,
allowing the parser grammar to be independent of
the database contents. Furthermore, each semantic
class is designated either as a semantic entity, or as
an attribute associated with a particular entity. This
enables the generation of a semantic representation
from the parse tree.
Dialogue Management & Language Generation
Once an utterance is recognized and parsed, the
meaning representation is passed to the context res-
olution and dialogue manager component. The con-
text resolution module (Filisko and Seneff, 2003)
applies generic and domain-specific rules to re-
solve anaphora and deixis, and to interpret frag-
ments and ellipsis in context. The dialogue man-
ager then interacts with the application back-end
and database, controlled by a script customized for
the domain (Polifroni et al, 2003). Finally, the
GENESIS module (Baptist and Seneff, 2000) ap-
plies domain-specific rules to generate a natural lan-
guage representation of the dialogue manager?s re-
sponse, which is sent to a speech synthesizer. The
dialogue manager also sends an update to the GUI,
so that, for example, the appropriate database search
results are displayed.
7 Mobile Design Challenges
Dialogue systems for mobile devices present a
unique set of design challenges not found in tele-
phony and desktop applications. Here we describe
some of the design choices made while developing
this prototype, and discuss their tradeoffs.
7.1 Client/Server Tradeoffs
Towards supporting network-less scenarios, we have
begun porting various natural language processing
components to mobile platforms, as discussed in
Section 5. Having efficient mobile implementations
further allows the natural language processing tasks
to be performed on either the mobile device or the
server. While building the prototype, we observed
that the Wi-Fi network performance can often be un-
predictable, resulting in erratic recognition latency
that occasionally exceeds on-device recognition la-
tency. However, utilizing the mobile processor for
computationally intensive tasks rapidly drains the
battery. Currently, the component architecture in the
prototype system is pre-configured. A more robust
implementation would dynamically adjust the con-
figuration to optimize the tradeoffs among network
use, CPU utilization, power consumption, and user-
perceived latency/accuracy.
7.2 Speech User Interface
As neither open-mic nor push-to-talk with automatic
endpoint detection is practical on mobile devices
with limited battery life, our prototype system em-
ploys a hold-to-talk hardware button for microphone
control. To guide users to speak commands only
while the button is depressed, a short beep is played
as an earcon both when the button is pushed and
released. Since users are less likely to talk over
short audio clips, the use of earcons mitigates the
tendency for users to start speaking before pushing
down the microphone button.
In the current system, media audio is played over
the TV speakers, whereas TTS output is sent to
the mobile device speakers. To reduce background
noise captured from the mobile device?s far-field mi-
crophone, the TV is muted while the microphone
button is depressed. Unlike telephony spoken di-
alogue systems where the recognizer has to con-
stantly monitor for barge-in, the use of a hold-to-
talk button significantly simplifies barge-in support,
while reducing power consumption.
7.3 Graphical User Interface
In addition to supporting interactive natural lan-
guage dialogues via the spoken user interface, the
prototype system implements a graphical user in-
terface (GUI) on the mobile device to supplement
the TV?s on-screen interface. To faciliate rapid pro-
totyping, we chose to implement both the mobile
and TV GUI using web pages with AJAX (Asyn-
chronous Javascript and XML) techniques, an ap-
proach we have leveraged in several existing mul-
timodal dialogue systems, e.g. (Gruenstein et al,
7
2006; McGraw and Seneff, 2007). The resulting in-
terface is largely platform-independent and allows
display updates to be ?pushed? to the client browser.
As many users are already familiar with the TV?s
on-screen interface, we chose to mirror the same in-
terface on the mobile device and synchronize the
selection cursor. However, unlike desktop GUIs,
mobile devices are constrained by a small display,
limited computational power, and reduced network
bandwidth. Thus, both the page layout and infor-
mation detail were adjusted for the mobile browser.
Although AJAX is more responsive than traditional
web technology, rendering large formatted pages?
such as the program guide grid?is often still un-
acceptably slow. In the current implementation, we
addressed this problem by displaying only the first
section of the content and providing a ?Show More?
button that downloads and renders the full content.
While browser-based GUIs expedite rapid prototyp-
ing, deployed systems may want to take advantage
of native interfaces specific to the device for more
responsive user interactions. Instead of limiting the
mobile interface to reflect the TV GUI, improved us-
ability may be obtained by designing the interface
for the mobile device first and then expanding the
visual content to the TV display.
7.4 Client/Server Communication
In the current prototype, communication between
the mobile device and the media server consists of
AJAX HTTP and XML-RPC requests. To enable
server-side ?push? updates, the client periodically
pings the server for messages. While such an im-
plementation provides a responsive user interface, it
quickly drains the battery and is not robust to net-
work outages resulting from the device being moved
or switching to power-saving mode. Reestablish-
ing connection with the server further introduces la-
tency. In future implementations, we would like to
examine the use of Bluetooth for lower power con-
sumption, and infrared for immediate response to
common controls and basic navigation.
8 Conclusions & Future Work
We have presented a prototype system that demon-
strates the feasibility of deploying a multimodal,
natural language interface on a mobile device for
browsing and managing one?s home media library.
In developing the prototype, we have experimented
with a novel role for a mobile device?that of a
speech-enabled remote control. We have demon-
strated a flexible natural language understanding ar-
chitecture, in which various processing stages may
be performed on either the server or mobile device,
as networking and processing power considerations
require.
While the mobile platform presents many chal-
lenges, it also provides unique opportunities.
Whereas desktop computers and TV remote controls
tend to be shared by multiple users, a mobile device
is typically used by a single individual. By collect-
ing and adapting to the usage data, the system can
personalize the recognition and understanding mod-
els to improve the system accuracy. In future sys-
tems, we hope to not only explore such adaptation
possibilities, but also study how real users interact
with the system to further improve the user interface.
Acknowledgments
This research is sponsored by the TParty Project,
a joint research program between MIT and Quanta
Computer, Inc.; and by Nokia, as part of a joint MIT-
Nokia collaboration. We are also thankful to three
anonymous reviewers for their constructive feed-
back.
References
A. Acero, N. Bernstein, R. Chambers, Y. C. Jui, X. Li,
J. Odell, P. Nguyen, O. Scholz, and G. Zweig. 2008.
Live search for mobile: Web services by voice on the
cellphone. In Proc. of ICASSP.
L. Baptist and S. Seneff. 2000. Genesis-II: A versatile
system for language generation in conversational sys-
tem applications. In Proc. of ICSLP.
A. Berglund and P. Johansson. 2004. Using speech and
dialogue for interactive TV navigation. Universal Ac-
cess in the Information Society, 3(3-4):224?238.
G. Chung, S. Seneff, C. Wang, and L. Hetherington.
2004. A dynamic vocabulary spoken dialogue inter-
face. In Proc. of INTERSPEECH, pages 327?330.
E. Filisko and S. Seneff. 2003. A context resolution
server for the GALAXY conversational systems. In
Proc. of EUROSPEECH.
B. Ford, J. Strauss, C. Lesniewski-Laas, S. Rhea,
F. Kaashoek, and R. Morris. 2006. Persistent personal
names for globally connected mobile devices. In Pro-
ceedings of the 7th USENIX Symposium on Operating
Systems Design and Implementation (OSDI ?06).
8
K. Fujita, H. Kuwano, T. Tsuzuki, and Y. Ono. 2003.
A new digital TV interface employing speech recog-
nition. IEEE Transactions on Consumer Electronics,
49(3):765?769.
J. Glass. 2003. A probabilistic framework for segment-
based speech recognition. Computer Speech and Lan-
guage, 17:137?152.
A. Gruenstein, S. Seneff, and C. Wang. 2006. Scalable
and portable web-based multimodal dialogue interac-
tion with geographical databases. In Proc. of INTER-
SPEECH.
I. L. Hetherington. 2005. A multi-pass, dynamic-
vocabulary approach to real-time, large-vocabulary
speech recognition. In Proc. of INTERSPEECH.
I. L. Hetherington. 2007. PocketSUMMIT: Small-
footprint continuous speech recognition. In Proc. of
INTERSPEECH, pages 1465?1468.
B. Johanson, A. Fox, and T. Winograd. 2002. The in-
teractive workspaces project: Experiences with ubiq-
uitous computing rooms. IEEE Pervasive Computing,
1(2):67?74.
M. Johnston, L. F. D?Haro, M. Levine, and B. Renger.
2007. A multimodal interface for access to content in
the home. In Proc. of ACL, pages 376?383.
J. Mazzola Paluska, H. Pham, U. Saif, C. Terman, and
S. Ward. 2006. Reducing configuration overhead with
goal-oriented programming. In PerCom Workshops,
pages 596?599. IEEE Computer Society.
J. Mazzola Paluska, H. Pham, U. Saif, G. Chau, C. Ter-
man, and S. Ward. 2008. Structured decomposition of
adapative applications. In Proc. of 6th IEEE Confer-
ence on Pervasive Computing and Communications.
I. McGraw and S. Seneff. 2007. Immersive second lan-
guage acquisition in narrow domains: A prototype IS-
LAND dialogue system. In Proc. of the Speech and
Language Technology in Education Workshop.
J. Nichols and B. A. Myers. 2006. Controlling home and
office appliances with smartphones. IEEE Pervasive
Computing, special issue on SmartPhones, 5(3):60?
67, July-Sept.
H.-J. Oh, C.-H. Lee, M.-G. Jang, and Y. K. Lee. 2007.
An intelligent TV interface based on statistical dia-
logue management. IEEE Transactions on Consumer
Electronics, 53(4).
T. Paek, M. Agrawala, S. Basu, S. Drucker, T. Kristjans-
son, R. Logan, K. Toyama, and A. Wilson. 2004. To-
ward universal mobile interaction for shared displays.
In Proc. of Computer Supported Cooperative Work.
J. Polifroni, G. Chung, and S. Seneff. 2003. Towards
the automatic generation of mixed-initiative dialogue
systems from web content. In Proc. EUROSPEECH,
pages 193?196.
T. Portele, S. Goronzy, M. Emele, A. Kellner, S. Torge,
and J. te Vrugt. 2003. SmartKom-Home - an ad-
vanced multi-modal interface to home entertainment.
In Proc. of INTERSPEECH.
S. Seneff, E. Hurley, R. Lau, C. Pao, P. Schmid, and
V. Zue. 1998. GALAXY-II: A reference architecture
for conversational system development. In Proc. IC-
SLP.
S. Seneff, C. Wang, and T. J. Hazen. 2003. Automatic in-
duction of n-gram language models from a natural lan-
guage grammar. In Proceedings of EUROSPEECH.
S. Seneff. 1992. TINA: A natural language system
for spoken language applications. Computational Lin-
guistics, 18(1):61?86.
S. Seneff. 2002. Response planning and generation in
the MERCURY flight reservation system. Computer
Speech and Language, 16:283?312.
S. Seneff. 2007. Reversible sound-to-letter/letter-to-
sound modeling based on syllable structure. In Proc.
of HLT-NAACL.
K. Wittenburg, T. Lanning, D. Schwenke, H. Shubin, and
A. Vetro. 2006. The prospects for unrestricted speech
input for TV content search. In Proc. of AVI?06.
V. Zue, S. Seneff, J. Glass, J. Polifroni, C. Pao, T. J.
Hazen, and L. Hetherington. 2000. JUPITER: A
telephone-based conversational interface for weather
information. IEEE Transactions on Speech and Audio
Processing, 8(1), January.
9
