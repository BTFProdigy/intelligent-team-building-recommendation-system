Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the ACL, pages 281?289,
Boulder, Colorado, June 2009. c?2009 Association for Computational Linguistics
Domain Adaptation with Latent Semantic Association
for Named Entity Recognition
Honglei Guo Huijia Zhu Zhili Guo Xiaoxun Zhang Xian Wu and Zhong Su
IBM China Research Laboratory
Beijing, P. R. China
{guohl, zhuhuiji, guozhili, zhangxx, wuxian, suzhong}@cn.ibm.com
Abstract
Domain adaptation is an important problem in
named entity recognition (NER). NER classi-
fiers usually lose accuracy in the domain trans-
fer due to the different data distribution be-
tween the source and the target domains. The
major reason for performance degrading is
that each entity type often has lots of domain-
specific term representations in the different
domains. The existing approaches usually
need an amount of labeled target domain data
for tuning the original model. However, it
is a labor-intensive and time-consuming task
to build annotated training data set for every
target domain. We present a domain adapta-
tion method with latent semantic association
(LaSA). This method effectively overcomes
the data distribution difference without lever-
aging any labeled target domain data. LaSA
model is constructed to capture latent seman-
tic association among words from the unla-
beled corpus. It groups words into a set of
concepts according to the related context snip-
pets. In the domain transfer, the original term
spaces of both domains are projected to a con-
cept space using LaSA model at first, then the
original NER model is tuned based on the se-
mantic association features. Experimental re-
sults on English and Chinese corpus show that
LaSA-based domain adaptation significantly
enhances the performance of NER.
1 Introduction
Named entities (NE) are phrases that contain names
of persons, organizations, locations, etc. NER is an
important task in information extraction and natu-
ral language processing (NLP) applications. Super-
vised learning methods can effectively solve NER
problem by learning a model from manually labeled
data (Borthwick, 1999; Sang and Meulder, 2003;
Gao et al, 2005; Florian et al, 2003). However, em-
pirical study shows that NE types have different dis-
tribution across domains (Guo et al, 2006). Trained
NER classifiers in the source domain usually lose
accuracy in a new target domain when the data dis-
tribution is different between both domains.
Domain adaptation is a challenge for NER and
other NLP applications. In the domain transfer,
the reason for accuracy loss is that each NE type
often has various specific term representations and
context clues in the different domains. For ex-
ample, {?economist?, ?singer?, ?dancer?, ?athlete?,
?player?, ?philosopher?, ...} are used as context
clues for NER. However, the distribution of these
representations are varied with domains. We expect
to do better domain adaptation for NER by exploit-
ing latent semantic association among words from
different domains. Some approaches have been pro-
posed to group words into ?topics? to capture im-
portant relationships between words, such as Latent
Semantic Indexing (LSI) (Deerwester et al, 1990),
probabilistic Latent Semantic Indexing (pLSI) (Hof-
mann, 1999), Latent Dirichlet Allocation (LDA)
(Blei et al, 2003). These models have been success-
fully employed in topic modeling, dimensionality
reduction for text categorization (Blei et al, 2003),
ad hoc IR (Wei and Croft., 2006), and so on.
In this paper, we present a domain adaptation
method with latent semantic association. We focus
281
on capturing the hidden semantic association among
words in the domain adaptation. We introduce the
LaSA model to overcome the distribution difference
between the source domain and the target domain.
LaSA model is constructed from the unlabeled cor-
pus at first. It learns latent semantic association
among words from their related context snippets.
In the domain transfer, words in the corpus are as-
sociated with a low-dimension concept space using
LaSA model, then the original NER model is tuned
using these generated semantic association features.
The intuition behind our method is that words in one
concept set will have similar semantic features or
latent semantic association, and share syntactic and
semantic context in the corpus. They can be consid-
ered as behaving in the same way for discriminative
learning in the source and target domains. The pro-
posed method associates words from different do-
mains on a semantic level rather than by lexical oc-
currence. It can better bridge the domain distribu-
tion gap without any labeled target domain samples.
Experimental results on English and Chinese corpus
show that LaSA-based adaptation significantly en-
hances NER performance across domains.
The rest of this paper is organized as follows. Sec-
tion 2 briefly describes the related works. Section 3
presents a domain adaptation method based on latent
semantic association. Section 4 illustrates how to
learn LaSA model from the unlabeled corpus. Sec-
tion 5 shows experimental results on large-scale En-
glish and Chinese corpus across domains, respec-
tively. The conclusion is given in Section 6.
2 Related Works
Some domain adaptation techniques have been em-
ployed in NLP in recent years. Some of them
focus on quantifying the generalizability of cer-
tain features across domains. Roark and Bacchiani
(2003) use maximum a posteriori (MAP) estimation
to combine training data from the source and target
domains. Chelba and Acero (2004) use the param-
eters of the source domain maximum entropy clas-
sifier as the means of a Gaussian prior when train-
ing a new model on the target data. Daume III and
Marcu (2006) use an empirical Bayes model to esti-
mate a latent variable model grouping instances into
domain-specific or common across both domains.
Daume III (2007) further augments the feature space
on the instances of both domains. Jiang and Zhai
(2006) exploit the domain structure contained in the
training examples to avoid over-fitting the training
domains. Arnold et al (2008) exploit feature hier-
archy for transfer learning in NER. Instance weight-
ing (Jiang and Zhai, 2007) and active learning (Chan
and Ng, 2007) are also employed in domain adap-
tation. Most of these approaches need the labeled
target domain samples for the model estimation in
the domain transfer. Obviously, they require much
efforts for labeling the target domain samples.
Some approaches exploit the common structure of
related problems. Ando et al (2005) learn pred-
icative structures from multiple tasks and unlabeled
data. Blitzer et al (2006, 2007) employ structural
corresponding learning (SCL) to infer a good fea-
ture representation from unlabeled source and target
data sets in the domain transfer. We present LaSA
model to overcome the data gap across domains by
capturing latent semantic association among words
from unlabeled source and target data.
In addition, Miller et al (2004) and Freitag
(2004) employ distributional and hierarchical clus-
tering methods to improve the performance of NER
within a single domain. Li and McCallum (2005)
present a semi-supervised sequence modeling with
syntactic topic models. In this paper, we focus on
capturing hidden semantic association among words
in the domain adaptation.
3 Domain Adaptation Based on Latent
Semantic Association
The challenge in domain adaptation is how to cap-
ture latent semantic association from the source and
target domain data. We present a LaSA-based do-
main adaptation method in this section.
NER can be considered as a classification prob-
lem. Let X be a feature space to represent the ob-
served word instances, and let Y be the set of class
labels. Let ps(x, y) and pt(x, y) be the true under-
lying distributions for the source and the target do-
mains, respectively. In order to minimize the efforts
required in the domain transfer, we often expect to
use ps(x, y) to approximate pt(x, y).
However, data distribution are often varied with
the domains. For example, in the economics-to-
282
entertainment domain transfer, although many NE
triggers (e.g. ?company? and ?Mr.?) are used in
both domains, some are totally new, like ?dancer?,
?singer?. Moreover, many useful words (e.g.
?economist?) in the economics NER are useless in
the entertainment domain. The above examples
show that features could change behavior across do-
mains. Some useful predictive features from one do-
main are not predictive or do not appear in another
domain. Although some triggers (e.g. ?singer?,
?economist?) are completely distinct for each do-
main, they often appear in the similar syntactic and
semantic context. For example, triggers of per-
son entity often appear as the subject of ?visited?,
?said?, etc, or are modified by ?excellent?, ?popu-
lar?, ?famous? etc. Such latent semantic association
among words provides useful hints for overcoming
the data distribution gap of both domains.
Hence, we present a LaSA model ?s,t to cap-
ture latent semantic association among words in the
domain adaptation. ?s,t is learned from the unla-
beled source and target domain data. Each instance
is characterized by its co-occurred context distribu-
tion in the learning. Semantic association feature
in ?s,t is a hidden random variable that is inferred
from data. In the domain adaptation, we transfer the
problem of semantic association mapping to a pos-
terior inference task using LaSA model. Latent se-
mantic concept association set of a word instance x
(denoted by SA(x)) is generated by ?s,t. Instances
in the same concept set are considered as behaving
in the same way for discriminative learning in both
domains. Even though word instances do not ap-
pear in a training corpus (or appear rarely) but are in
similar context, they still might have relatively high
probability in the same semantic concept set. Obvi-
ously, SA(x) can better bridge the gap between the
two distributions ps(y|x) and pt(y|x). Hence, LaSA
model can enhance the estimate of the source do-
main distribution ps(y|x; ?s,t) to better approximate
the target domain distribution pt(y|x; ?s,t).
4 Learning LaSA Model from Virtual
Context Documents
In the domain adaptation, LaSA model is employed
to find the latent semantic association structures of
?words? in a text corpus. We will illustrate how
to build LaSA model from words and their context
snippets in this section. LaSA model actually can
be considered as a general probabilistic topic model.
It can be learned on the unlabeled corpus using the
popular hidden topic models such as LDA or pLSI.
4.1 Virtual Context Document
The distribution of content words (e.g. nouns, adjec-
tives) is usually varied with domains. Hence, in the
domain adaptation, we focus on capturing the latent
semantic association among content words. In or-
der to learn latent relationships among words from
the unlabeled corpus, each content word is charac-
terized by a virtual context document as follows.
Given a content word xi, the virtual context docu-
ment of xi (denoted by vdxi) consists of all the con-
text units around xi in the corpus. Let n be the total
number of the sentences which contain xi in the cor-
pus. vdxi is constructed as follows.
vdxi = {F (xs1i ), ..., F (xski ), ..., F (xsni )}
where, F (xski ) denotes the context feature set of
xi in the sentence sk, 1 ? k ? n.
Given the context window size {-t, t} (i.e. pre-
vious t words and next t words around xi in sk).
F (xski ) usually consists of the following features.
1. Anchor unit AxiC : the current focused word unit xi.
2. Left adjacent unit AxiL : The nearest left adjacent
unit xi?1 around xi, denoted by AL(xi?1).
3. Right adjacent unit AxiR : The nearest right adjacent
unit xi+1 around xi, denoted by AR(xi+1).
4. Left context set CxiL : the other left adjacent units
{xi?t, ..., xi?j , ..., xi?2} (2 ? j ? t) around xi, de-
noted by {CL(xi?t), ..., CL(xi?j), ..., CL(xi?2)}.
5. Right context set CxiR : the other right adjacent units
{xi+2, ..., xi+j , ..., xi+t} (2 ? j ? t ) around xi, de-
noted by {CR(xi+2), ..., CR(xi+j), ..., CR(xi+t)}.
For example, given xi=?singer?, sk=?This popu-
lar new singer attended the new year party?. Let
the context window size be {-3,3}. F (singer)
= {singer, AL(new), AR(attend(ed)), CL(this),
CL(popular), CR(the), CR(new) }.
vdxi actually describes the semantic and syntac-
tic feature distribution of xi in the domains. We
construct the feature vector of xi with all the ob-
served context features in vdxi . Given vdxi =
283
{f1, ..., fj , ..., fm}, fj denotes jth context feature
around xi, 1 ? j ? m, m denotes the total num-
ber of features in vdxi . The value of fj is calculated
by Mutual Information (Church and Hanks, 1990)
between xi and fj .
Weight(fj , xi) = log2 P (fj , xi)P (fj)P (xi) (1)
where, P (fj , xi) is the joint probability of xi and
fj co-occurred in the corpus, P (fj) is the probabil-
ity of fj occurred in the corpus. P (xi) is the proba-
bility of xi occurred in the corpus.
4.2 Learning LaSA Model
Topic models are statistical models of text that posit
a hidden space of topics in which the corpus is em-
bedded (Blei et al, 2003). LDA (Blei et al, 2003) is
a probabilistic model that can be used to model and
discover underlying topic structures of documents.
LDA assumes that there are K ?topics?, multinomial
distributions over words, which describes a collec-
tion. Each document exhibits multiple topics, and
each word in each document is associated with one
of them. LDA imposes a Dirichlet distribution on
the topic mixture weights corresponding to the doc-
uments in the corpus. The topics derived by LDA
seem to possess semantic coherence. Those words
with similar semantics are likely to occur in the same
topic. Since the number of LDA model parameters
depends only on the number of topic mixtures and
vocabulary size, LDA is less prone to over-fitting
and is capable of estimating the probability of un-
observed test documents. LDA is already success-
fully applied to enhance document representations
in text classification (Blei et al, 2003), information
retrieval (Wei and Croft., 2006).
In the following, we illustrate how to construct
LDA-style LaSA model ?s,t on the virtual con-
text documents. Algorithm 1 describes LaSA
model training method in detail, where, Function
AddTo(data, Set) denotes that data is added to
Set. Given a large-scale unlabeled data set Du
which consists of the source and target domain data,
virtual context document for each candidate content
word is extracted from Du at first, then the value of
each feature in a virtual context document is calcu-
lated using its Mutual Information ( see Equation 1
in Section 4.1) instead of the counts when running
Algorithm 1: LaSA Model Training
Inputs:1
? Unlabeled data set: Du ;2
Outputs:3
?LaSA model: ?s,t;4
Initialization:5
? Virtual context document set: V Ds,t = ?;6
? Candidate content word set: Xs,t = ?;7
Steps:8
begin9
foreach content word xi ?Du do10
if Frequency(xi)? the predefined threshold then11
AddTo(xi, Xs,t);12
foreach xk ?Xs,t do13
foreach sentence Si ?Du do14
if xk ? Si then15
F (xSik ) ??16
{xk, A
xk
L , A
xk
R , C
xk
L , C
xk
R };
AddTo(F (xSik ), vdxk );
AddTo(vdxk , V Ds,t);17
? Generate LaSA model ?s,t with Dirichlet distribution on V Ds,t .18
end19
LDA. LaSA model ?s,t with Dirichlet distribution is
generated on the virtual context document set V Ds,t
using the algorithm presented by Blei et al(2003).
1 2 3 4 5
customer theater company Beijing music
president showplace government Hongkong film
singer courtyard university China arts
manager center community Japan concert
economist city team Singapore party
policeman gymnasium enterprise New York Ballet
reporter airport bank Vienna dance
director square market America song
consumer park organization Korea band
dancer building agency international opera
Table 1: Top 10 nouns from 5 randomly selected topics
computed on the economics and entertainment domains
LaSA model learns the posterior distribution to
decompose words and their corresponding virtual
context documents into topics. Table 1 lists top 10
nouns from a random selection of 5 topics computed
on the unlabeled economics and entertainment do-
main data. As shown, words in the same topic are
representative nouns. They actually are grouped into
broad concept sets. For example, set 1, 3 and 4
correspond to nominal person, nominal organization
and location, respectively. With a large-scale unla-
beled corpus, we will have enough words assigned
to each topic concept to better approximate the un-
derlying semantic association distribution.
In LDA-style LaSA model, the topic mixture
is drawn from a conjugate Dirichlet prior that re-
mains the same for all the virtual context docu-
284
ments. Hence, given a word xi in the corpus, we
may perform posterior inference to determine the
conditional distribution of the hidden topic feature
variables associated with xi. Latent semantic asso-
ciation set of xi (denoted by SA(xi)) is generated
using Algorithm 2. Here, Multinomial(?s,t(vdxi))
refers to sample from the posterior distribution over
topics given a virtual document vdxi . In the domain
adaptation, we do semantic association inference on
the source domain training data using LaSA model
at first, then the original source domain NER model
is tuned on the source domain training data set by
incorporating these generated semantic association
features.
Algorithm 2: Generate Latent Semantic As-
sociation Set of Word xi Using K-topic
LaSA Model
Inputs:1
? ?s,t: LaSA model with multinomial distribution;2
?Dirichlet(?): Dirichlet distribution with parameter ?;3
? xi: Content word;4
Outputs:5
? SA(xi): Latent semantic association set of xi ;6
Steps:7
begin8
? Extract vdxi from the corpus.9
? Draw topic weights ?s,t(vdxi ) from Dirichlet(?);10
? foreach fj in vdxi do11
draw a topic zj?{ 1,...,K} from Multinomial(?s,t(vdxi ));12
AddTo(zj , Topics(vdxi ));13
? Rank all the topics in Topics(vdxi );14
? SA(xi)?? top n topics in Topics(vdxi );15
end16
LaSA model better models latent semantic asso-
ciation distribution in the source and the target do-
mains. By grouping words into concepts, we effec-
tively overcome the data distribution difference of
both domains. Thus, we may reduce the number
of parameters required to model the target domain
data, and improve the quality of the estimated pa-
rameters in the domain transfer. LaSA model ex-
tends the traditional bag-of-words topic models to
context-dependence concept association model. It
has potential use for concept grouping.
5 Experiments
We evaluate LaSA-based domain adaptation method
on both English and Chinese corpus in this section.
In the experiments, we focus on recognizing person
(PER), location (LOC) and organization (ORG) in
the given four domains, including economics (Eco),
entertainment (Ent), politics (Pol) and sports (Spo).
5.1 Experimental setting
In the NER domain adaptation, nouns and adjectives
make a significant impact on the performance. Thus,
we focus on capturing latent semantic association
for high-frequency nouns and adjectives (i.e. occur-
rence count ? 50 ) in the unlabeled corpus. LaSA
models for nouns and adjectives are learned from
the unlabeled corpus using Algorithm 1 (see section
4.2), respectively. Our empirical study shows that
better adaptation is obtained with a 50-topic LaSA
model. Therefore, we set the number of topics N as
50, and define the context view window size as {-
3,3} (i.e. previous 3 words and next 3 words) in the
LaSA model learning. LaSA features for other irre-
spective words (e.g. token unit ?the?) are assigned
with a default topic value N+1.
All the basic NER models are trained on the
domain-specific training data using RRM classifier
(Guo et al, 2005). RRM is a generalization Winnow
learning algorithm (Zhang et al, 2002). We set the
context view window size as {-2,2} in NER. Given a
word instance x, we employ local linguistic features
(e.g. word unit, part of speech) of x and its context
units ( i.e. previous 2 words and next 2 words ) in
NER. All Chinese texts in the experiments are auto-
matically segmented into words using HMM.
In LaSA-based domain adaptation, the semantic
association features of each unit in the observation
window {-2,2} are generated by LaSA model at first,
then the basic source domain NER model is tuned on
the original source domain training data set by incor-
porating the semantic association features. For ex-
ample, given the sentence ?This popular new singer
attended the new year party?, Figure 1 illustrates
various features and views at the current word wi=
?singer? in LaSA-based adaptation.
? Tagging ?
Position wi?2 wi?1 wi wi+1 wi+2
Word popular new singer attend the
POS adj adj noun verb article
SA SA(popular) SA(new) SA(singer) SA(attend) SA(the)
.....
Tag ti?2 ti?1 ti
Figure 1: Feature window in LaSA-based adaptation
In the viewing window at the word ?singer? (see
Figure 1), each word unit around ?singer? is codi-
fied with a set of primitive features (e.g. POS, SA,
Tag), together with its relative position to ?singer?.
285
Here, ?SA? denotes semantic association feature set
which is generated by LaSA model. ?Tag? denotes
NE tags labeled in the data set.
Given the input vector constructed with the above
features, RRM method is then applied to train linear
weight vectors, one for each possible class-label. In
the decoding stage, the class with the maximum con-
fidence is then selected for each token unit.
In our evaluation, only NEs with correct bound-
aries and correct class labels are considered as the
correct recognition. We use the standard Precision
(P), Recall (R), and F-measure (F = 2PRP+R ) to mea-
sure the performance of NER models.
5.2 Data
We built large-scale English and Chinese anno-
tated corpus. English corpus are generated from
wikipedia while Chinese corpus are selected from
Chinese newspapers. Moreover, test data do not
overlap with training data and unlabeled data.
5.2.1 Generate English Annotated Corpus
from Wikipedia
Wikipedia provides a variety of data resources for
NER and other NLP research (Richman and Schone,
2008). We generate all the annotated English corpus
from wikipedia. With the limitation of efforts, only
PER NEs in the corpus are automatically tagged us-
ing an English person gazetteer. We automatically
extract an English Person gazetteer from wikipedia
at first. Then we select the articles from wikipedia
and tag them using this gazetteer.
In order to build the English Person gazetteer
from wikipdedia, we manually selected several key
phrases, including ?births?, ?deaths?, ?surname?,
?given names? and ?human names? at first. For
each article title of interest, we extracted the cate-
gories to which that entry was assigned. The en-
try is considered as a person name if its related
explicit category links contain any one of the key
phrases, such as ?Category: human names?. We to-
tally extracted 25,219 person name candidates from
204,882 wikipedia articles. And we expanded this
gazetteer by adding the other available common
person names. Finally, we obtained a large-scale
gazetteer of 51,253 person names.
All the articles selected from wikipedia are further
tagged using the above large-scale gazetteer. Since
human annotated set were not available, we held out
more than 100,000 words of text from the automat-
ically tagged corpus to as a test set in each domain.
Table 2 shows the data distribution of the training
and test data sets.
Domains Training Data Set Test Data Set
Size PERs Size PERs
Pol 0.45M 9,383 0.23M 6,067
Eco 1.06M 21,023 0.34M 6,951
Spo 0.47M 17,727 0.20M 6,075
Ent 0.36M 12,821 0.15M 5,395
Table 2: English training and test data sets
We also randomly select 17M unlabeled English
data (see Table 3) from Wikipedia. These unlabeled
data are used to build the English LaSA model.
All Domain
Pol Eco Spo Ent
Data Size(M) 17.06 7.36 2.59 3.65 3.46
Table 3: Domain distribution in the unlabeled English
data set
5.2.2 Chinese Data
We built a large-scale high-quality Chinese NE
annotated corpus. All the data are news articles from
several Chinese newspapers in 2001 and 2002. All
the NEs (i.e. PER, LOC and ORG ) in the corpus are
manually tagged. Cross-validation checking is em-
ployed to ensure the quality of the annotated corpus.
Domain Size NEs in the training data set
(M) PER ORG LOC Total
Pol 0.90 11,388 6,618 14,350 32,356
Eco 1.40 6,821 18,827 14,332 39,980
Spo 0.60 11,647 8,105 7,468 27,220
Ent 0.60 12,954 2,823 4,665 20,442
Domain Size NEs in the test data set
(M) PER ORG LOC Total
Pol 0.20 2,470 1,528 2,540 6,538
Eco 0.26 1,098 2,971 2,362 6,431
Spo 0.10 1,802 1,323 1,246 4,371
Ent 0.10 2,458 526 738 3,722
Table 4: Chinese training and test data sets
All the domain-specific training and test data are
selected from this annotated corpus according to the
domain categories (see Table 4). 8.46M unlabeled
Chinese data (see Table 5) are randomly selected
from this corpus to build the Chinese LaSA model.
5.3 Experimental Results
All the experiments are conducted on the above
large-scale English and Chinese corpus. The overall
performance enhancement of NER by LaSA-based
286
All Domain
Pol Eco Spo Ent
Data Size(M) 8.46 2.34 1.99 2.08 2.05
Table 5: Domain distribution in the unlabeled Chinese
data set
domain adaptation is evaluated at first. Since the
distribution of each NE type is different across do-
mains, we also analyze the performance enhance-
ment on each entity type by LaSA-based adaptation.
5.3.1 Performance Enhancement of NER by
LaSA-based Domain Adaptation
Table 6 and 7 show the experimental results for
all pairs of domain adaptation on both English and
Chinese corpus, respectively. In the experiment,
the basic source domain NER model Ms is learned
from the specific domain training data set Ddom
(see Table 2 and 4 in Section 5.2). Here, dom ?
{Eco,Ent, Pol, Spo}. F indom denotes the top-line
F-measure of Ms in the source trained domain dom.
When Ms is directly applied in a new target do-
main, its F-measure in this basic transfer is consid-
ered as baseline (denoted by FBase). FLaSA de-
notes F-measure of Ms achieved in the target do-
main with LaSA-based domain adaptation. ?(F ) =
FLaSA?FBase
FBase , which denotes the relative F-measure
enhancement by LaSA-based domain adaptation.
Source ? Performance in the domain transfer
Target
FBase FLaSA ?(F ) ?(loss) FTop
Eco?Ent 57.61% 59.22% +2.79% 17.87% F inEnt=66.62%
Pol?Ent 57.5 % 59.83% +4.05% 25.55% F inEnt=66.62%
Spo?Ent 58.66% 62.46% +6.48% 47.74% F inEnt=66.62%
Ent?Eco 70.56 % 72.46% +2.69% 19.33% F inEco=80.39%
Pol?Eco 63.62% 68.1% +7.04% 26.71% F inEco=80.39%
Spo?Eco 70.35% 72.85% +3.55% 24.90% F inEco=80.39%
Eco?Pol 50.59% 52.7% +4.17% 15.81% F inPol=63.94%
Ent?Pol 56.12% 59.82% +6.59% 47.31% F inPol=63.94%
Spo?Pol 60.22% 62.6% +3.95% 63.98% F inPol=63.94%
Eco?Spo 60.28% 61.21% +1.54% 9.93% F inSpo=69.65%
Ent?Spo 60.28% 62.68% +3.98% 25.61% F inSpo=69.65%
Pol?Spo 56.94% 60.48% +6.22% 27.85% F inSpo=69.65%
Table 6: Experimental results on English corpus
Experimental results on English and Chinese cor-
pus indicate that the performance of Ms signifi-
cantly degrades in each basic domain transfer with-
out using LaSA model (see Table 6 and 7). For ex-
ample, in the ?Eco?Ent? transfer on Chinese cor-
pus (see Table 7), F ineco of Ms is 82.28% while FBase
of Ms is 60.45% in the entertainment domain. F-
measure of Ms significantly degrades by 21.83 per-
Source ? Performance in the domain transfer
Target
FBase FLaSA ?(F ) ?(loss) FTop
Eco?Ent 60.45% 66.42% +9.88% 26.29% F inEnt=83.16%
Pol?Ent 69.89% 73.07% +4.55% 23.96% F inEnt =83.16%
Spo?Ent 68.66% 70.89% +3.25% 15.38% F inEnt =83.16%
Ent?Eco 58.50% 61.35% + 4.87% 11.98% F inEco=82.28%
Pol?Eco 62.89% 64.93% +3.24% 10.52% F inEco=82.28%
Spo?Eco 60.44% 63.20% + 4.57 % 12.64% F inEco=82.28%
Eco?Pol 67.03% 70.90 % +5.77% 27.78% F inPol=80.96%
Ent?Pol 66.64 % 68.94 % +3.45% 16.06% F inPol=80.96%
Spo?Pol 65.40% 67.20% +2.75% 11.57% F inPol=80.96%
Eco?Spo 67.20% 70.77% +5.31% 15.47% F inSpo=90.24%
Ent?Spo 70.05% 72.20% +3.07% 10.64% F inSpo=90.24%
Pol?Spo 70.99% 73.86% +4.04% 14.91% F inSpo=90.24%
Table 7: Experimental results on Chinese corpus
cent points in this basic transfer. Significant perfor-
mance degrading of Ms is observed in all the basic
transfer. It shows that the data distribution of both
domains is very different in each possible transfer.
Experimental results on English corpus show that
LaSA-based adaptation effectively enhances the per-
formance in each domain transfer (see Table 6).
For example, in the ?Pol?Eco? transfer, FBase is
63.62% while FLaSA achieves 68.10%. Compared
with FBase, LaSA-based method significantly en-
hances F-measure by 7.04%. We perform t-tests on
F-measure of all the comparison experiments on En-
glish corpus. The p-value is 2.44E-06, which shows
that the improvement is statistically significant.
Table 6 also gives the accuracy loss due to transfer
in each domain adaptation on English corpus. The
accuracy loss is defined as loss = 1 ? FF indom . And
the relative reduction in error is defined as ?(loss)=
|1 ? lossLaSAlossBase |. Experimental results indicate that
the relative reduction in error is above 9.93% with
LaSA-based transfer in each test on English cor-
pus. LaSA model significantly decreases the ac-
curacy loss by 29.38% in average. Especially for
?Spo?Pol? transfer, ?(loss) achieves 63.98% with
LaSA-based adaptation. All the above results show
that LaSA-based adaptation significantly reduces the
accuracy loss in the domain transfer for English
NER without any labeled target domain samples.
Experimental results on Chinese corpus also show
that LaSA-based adaptation effectively increases the
accuracy in all the tests (see Table 7). For example,
in the ?Eco?Ent? transfer, compared with FBase,
LaSA-based adaptation significantly increases F-
measure by 9.88%. We also perform t-tests on F-
287
measure of 12 comparison experiments on Chinese
corpus. The p-value is 1.99E-06, which shows that
the enhancement is statistically significant. More-
over, the relative reduction in error is above 10%
with LaSA-based method in each test. LaSA model
decreases the accuracy loss by 16.43% in average.
Especially for the ?Eco?Ent? transfer (see Table 7),
?(loss) achieves 26.29% with LaSA-based method.
All the above experimental results on English and
Chinese corpus show that LaSA-based domain adap-
tation significantly decreases the accuracy loss in the
transfer without any labeled target domain data. Al-
though automatically tagging introduced some er-
rors in English source training data, the relative re-
duction in errors in English NER adaptation seems
comparable to that one in Chinese NER adaptation.
5.3.2 Accuracy Enhancement for Each NE
Type Recognition
Our statistic data (Guo et al, 2006) show that the
distribution of NE types varies with domains. Each
NE type has different domain features. Thus, the
performance stability of each NE type recognition is
very important in the domain transfer.
Figure 2 gives F-measure of each NE type recog-
nition achieved by LaSA-based adaptation on En-
glish and Chinese corpus. Experimental results
show that LaSA-based adaptation effectively in-
creases the accuracy of each NE type recognition in
the most of the domain transfer tests. We perform
t-tests on F-measure of the comparison experiments
on each NE type, respectively. All the p-value is
less than 0.01, which shows that the improvement
on each NE type recognition is statistically signifi-
cant. Especially, the p-value of English and Chinese
PER is 2.44E-06 and 9.43E-05, respectively, which
shows that the improvement on PER recognition is
very significant. For example, in the ?Eco?Pol?
transfer on Chinese corpus, compared with FBase,
LaSA-based adaptation enhances F-measure of PER
recognition by 9.53 percent points. Performance en-
hancement for ORG recognition is less than that one
for PER and LOC recognition using LaSA model
since ORG NEs usually contain much more domain-
specific information than PER and LOC.
The major reason for error reduction is that exter-
nal context and internal units are better semantically
associated using LaSA model. For example, LaSA
Figure 2: PER, LOC and ORG recognition in the transfer
model better groups various titles from different do-
mains (see Table 1 in Section 4.2). Various industry
terms in ORG NEs are also grouped into the seman-
tic sets. These semantic associations provide useful
hints for detecting the boundary of NEs in the new
target domain. All the above results show that LaSA
model better compensates for the feature distribution
difference of each NE type across domains.
6 Conclusion
We present a domain adaptation method with LaSA
model in this paper. LaSA model captures latent se-
mantic association among words from the unlabeled
corpus. It better groups words into a set of concepts
according to the related context snippets. LaSA-
based domain adaptation method projects words to
a low-dimension concept feature space in the trans-
fer. It effectively overcomes the data distribution gap
across domains without using any labeled target do-
main data. Experimental results on English and Chi-
nese corpus show that LaSA-based domain adapta-
tion significantly enhances the performance of NER
across domains. Especially, LaSA model effectively
increases the accuracy of each NE type recogni-
tion in the domain transfer. Moreover, LaSA-based
domain adaptation method works well across lan-
guages. To further reduce the accuracy loss, we will
explore informative sampling to capture fine-grained
data difference in the domain transfer.
References
Rie Ando and Tong Zhang. 2005. A Framework for
Learning Predictive Structures from Multiple Tasks
288
and Unlabeled Data. In Journal of Machine Learning
Research 6 (2005), pages 1817?1853.
Andrew Arnold, Ramesh Nallapati, and William W. Co-
hen. 2008. Exploiting Feature Hierarchy for Trans-
fer Learning in Named Entity Recognition. In Pro-
ceedings of 46th Annual Meeting of the Association of
Computational Linguistics (ACL?08), pages 245-253.
David Blei, Andrew Ng, and Michael Jordan. 2003. La-
tent Dirichlet Allocation. Journal of Machine Learn-
ing Research, 3:993?1022.
John Blitzer, Ryan McDonald, and Fernando Pereira.
2006. Domain Adaptation with Structural Correspon-
dence Learning. In Proceedings of the 2006 Confer-
ence on Empirical Methods in Natural Language Pro-
cessing (EMNLP 2006), pages 120-128.
John Blitzer, Mark Dredze, and Fernando Pereira. 2007.
Biographies, Bollywood, Boom-boxes and Blenders:
Domain Adaptation for Sentiment Classification. In
Proceedings of the 45th Annual Meeting of the Asso-
ciation of Computational Linguistics (ACL?07), pages
440-447.
Andrew Borthwick. 1999. A Maximum Entropy Ap-
proach to Named Entity Recognition. Ph.D. thesis,
New York University.
Yee Seng Chan and Hwee Tou Ng. 2007. Domain Adap-
tation with Active Learning for Word Sense Disam-
biguation. In Proceedings of the 45th Annual Meet-
ing of the Association of Computational Linguistics
(ACL?07).
Ciprian Chelba and Alex Acero. 2004. Adaptation of
maximum entropy capitalizer: Little data can help a
lot. In Proceedings of the 2004 Conference on Empir-
ical Methods in Natural Language Processing.
Kenneth Ward Church and Patrick Hanks. 1990. Word
association norms, mutual information and lexicogra-
phy. Computational Linguistics, 16(1):22?29.
Hal Daume III. 2007. Frustratingly Easy Domain Adap-
tation. In Proceedings of the 45th Annual Meeting of
the Association of Computational Linguistics.
Hal Daume III and Daniel Marcu. 2006. Domain adap-
tation for statistical classifiers. Journal of Artificial
Intelligence Research, 26:101?126.
Scott Deerwester, Susan T. Dumais, and Richard Harsh-
man. 1990. Indexing by latent semantic analysis.
Journal of the American Society for Information Sci-
ence, 41(6):391?407.
Radu Florian, Abe Ittycheriah, Hongyan Jing, and Tong
Zhang. 2003. Named entity recogintion through clas-
sifier combination. In Proceedings of the 2003 Confer-
ence on Computational Natural Language Learning.
Freitag. 2004. Trained Named Entity Recognition Using
Distributional Clusters. In Proceedings of the 2004
Conference on Empirical Methods in Natural Lan-
guage Processing (EMNLP 2004).
Scott Miller, Jethran Guinness, and Alex Zamanian.
2004. Name Tagging with Word Clusters and Discrim-
inative Training. In Proceedings of HLT-NAACL 04.
Jianfeng Gao, Mu Li, Anndy Wu, and Changning Huang.
2005. Chinese Word Segmentation and Named Entity
Recognition: A Pragmatic Approach. Computational
Linguisitc, 31(4):531?574.
Honglei Guo, Jianmin Jiang, Gang Hu, and Tong Zhang.
2005. Chinese Named Entity Recognition Based on
Multilevel Linguistic Features. In Lecture Notes in Ar-
tificial Intelligence, 3248:90?99.
Honglei Guo, Li Zhang, and Zhong Su. 2006. Empirical
Study on the Performance Stability of Named Entity
Recognition Model across Domains. In Proceedings
of the 2006 Conference on Empirical Methods in Nat-
ural Language Processing (EMNLP 2006), pages 509-
516.
Thomas Hofmann. 1999. Probabilistic latent semantic
indexing. In Proceedings of the 22th Annual Inter-
national SIGIR Conference on Research and Develop-
ment in Information Retrieval (SIGIR?99).
Jing Jiang and ChengXiang Zhai. 2006. Exploiting Do-
main Structure for Named Entity Recognition. In Pro-
ceedings of HLT-NAACL 2006, pages 74?81.
Jing Jiang and ChengXiang Zhai. 2007. Instance
Weighting for Domain Adaptation in NLP. In Pro-
ceedings of the 45th Annual Meeting of the Associ-
ation of Computational Linguistics (ACL?07), pages
264?271.
Wei Li and Andrew McCallum. 2005. Semi-supervised
sequence modeling with syntactic topic models. In
Proceedings of Twenty AAAI Conference on Artificial
Intelligence (AAAI-05).
Alexander E. Richman and Patrick Schone. 2008. Min-
ing Wiki Resources for Multilingual Named Entity
Recognition. In Proceedings of the 46th Annual Meet-
ing of the Association of Computational Linguistics.
Brian Roark and Michiel Bacchiani. 2003. Supervised
and unsupervised PCFG adaptation to novel domains.
In Proceedings of the 2003 Human Language Technol-
ogy Conference of the North American Chapter of the
Association for Computational Linguistics.
Erik F. Tjong Kim Sang and Fien De Meulder. 2003.
Introduction to the conll-2003 shared task: Language
independent named entity recognition. In Proceed-
ings of the 2003 Conference on Computational Natural
Language Learning (CoNLL-2003), pages 142?147.
Xing Wei and Bruce Croft. 2006. LDA-based document
models for ad-hoc retrieval. In Proceedings of the 29th
Annual International SIGIR Conference on Research
and Development in Information Retrieval.
Tong Zhang, Fred Damerau, and David Johnson. 2002
Text chunking based on a generalization of Winnow.
Journal of Machine Learning Research, 2:615?637.
289
Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing (EMNLP 2006), pages 509?516,
Sydney, July 2006. c?2006 Association for Computational Linguistics
Empirical Study on the Performance Stability of Named Entity
Recognition Model across Domains
Hong Lei Guo Li Zhang and Zhong Su
IBM China Research Laboratory
Building 19, Zhongguancun Software Park
8 Dongbeiwang WestRoad, Haidian District, Beijing, 100094, P.R.C.
{guohl, lizhang , suzhong }@cn.ibm.com
Abstract
When a machine learning-based named
entity recognition system is employed in
a new domain, its performance usually de-
grades. In this paper, we provide an em-
pirical study on the impact of training data
size and domain information on the per-
formance stability of named entity recog-
nition models. We present an informative
sample selection method for building high
quality and stable named entity recogni-
tion models across domains. Experimen-
tal results show that the performance of
the named entity recognition model is en-
hanced significantly after being trained
with these informative samples.
1 Introduction
Named entities (NE) are phrases that contain
names of persons, organizations, locations, etc.
Named entity recognition (NER) is an important
task in many natural language processing appli-
cations, such as information extraction and ma-
chine translation. There have been a number of
conferences aimed at evaluating NER systems,
for example, MUC6, MUC7, CoNLL2002 and
CoNLL2003, and ACE (automatic content extrac-
tion) evaluations.
Machine learning approaches are becoming
more attractive for NER in recent years since they
are trainable and adaptable. Recent research on
English NER has focused on the machine learning
approach (Sang and Meulder, 2003). The relevant
algorithms include Maximum Entropy (Borth-
wick, 1999; Klein et al, 2003), Hidden Markov
Model (HMM) (Bikel et al, 1999; Klein et al,
2003), AdaBoost (Carreras et al, 2003), Memory-
based learning (Meulder and Daelemans, 2003),
Support Vector Machine (Isozaki and Kazawa,
2002), Robust Risk Minimization (RRM) Classi-
fication method (Florian et al, 2003), etc.
For Chinese NER, most of the existing ap-
proaches use hand-crafted rules with word (or
character) frequency statistics. Some machine
learning algorithms also have been investigated in
Chinese NER, including HMM (Yu et al, 1998;
Jing et al, 2003), class-based language model
(Gao et al, 2005; Wu et al, 2005), RRM (Guo
et al, 2005; Jing et al, 2003), etc.
However, when a machine learning-based NER
system is directly employed in a new domain, its
performance usually degrades. In order to avoid
the performance degrading, the NER model is of-
ten retrained with domain-specific annotated cor-
pus. This retraining process usually needs more
efforts and costs. In order to enhance the perfor-
mance stability of NER models with less efforts,
some issues have to be considered in practice. For
example, how much training data is enough for
building a stable and applicable NER model? How
does the domain information and training data size
impact the NER performance?
This paper provides an empirical study on the
impact of training data size and domain informa-
tion on NER performance. Some useful observa-
tions are obtained from the experimental results
on a large-scale annotated corpus. Experimental
results show that it is difficult to significantly en-
hance the performance when the training data size
is above a certain threshold. The threshold of the
training data size varies with domains. The perfor-
mance stability of each NE type recognition also
varies with domains. Corpus statistical data show
that NE types have different distribution across do-
mains. Based on the empirical investigations, we
present an informative sample selection method
509
for building high quality and stable NER models.
Experimental results show that the performance of
the NER model is enhanced significantly across
domains after being trained with these informative
samples. In spite of our focus on Chinese, we be-
lieve that some of our observations can be poten-
tially useful to other languages including English.
This paper is organized as follows. Section 2
describes a Chinese NER system using multi-level
linguistic features. Section 3 discusses the impact
of domain information and training data size on
the NER performance. Section 4 presents an in-
formative sample selection method to enhance the
performance of the NER model across domains.
Finally the conclusion is given in Section 5.
2 Chinese NER Based on Multilevel
Linguistic Features
In this paper, we focus on recognizing four types
of NEs: Persons (PER), Locations (LOC), Orga-
nizations (ORG) and miscellaneous named enti-
ties (MISC) which do not belong to the previous
three groups (e.g. products, conferences, events,
brands, etc.). All the NER models in the follow-
ing experiments are trained with a Chinese NER
system. In this section, we simply describe this
Chinese NER system. The Robust Risk Minimiza-
tion (RRM) Classification method and multi-level
linguistic features are used in this system (Guo et
al., 2005).
2.1 Robust Risk Minimization Classifier
We can view the NER task as a sequential classi-
fication problem. If toki (i = 0, 1, ..., n) denotes
the sequence of tokenized text which is the input
to the system, then every token toki should be as-
signed a class-label ti.
The class label value ti associated with each to-
ken toki is predicted by estimating the conditional
probability P (ti = c|xi) for every possible class-
label value c, where xi is a feature vector associ-
ated with token toki.
We assume that P (ti = c|xi) = P (ti =
c|toki, {tj}j?i). The feature vector xi can depend
on previously predicted class labels {tj}j?i, but
the dependency is typically assumed to be local.
In the RRM method, the above conditional proba-
bility model has the following parametric form:
P (ti = c|xi, ti?l, ..., ti?1) = T (wTc xi + bc),
where T (y) = min(1,max(0, y)) is the truncation
of y into the interval [0, 1]. wc is a linear weight
vector and bc is a constant. Parameters wc and bc
can be estimated from the training data. Given
training data (xi, ti) for i = 1, ..., n, the model
is estimated by solving the following optimization
problem for each c (Zhang et al, 2002):
inf
w,b
1
n
n
?
i=1
f(wTc xi + bc, yic),
where yic = 1 when ti = c, and yic = ?1 other-
wise. The function f is defined as:
f(p, y) =
?
?
?
?
?
?2py py < 1
1
2(py ? 1)2 py ? [?1, 1]
0 py > 1
Given the above conditional probability model,
the best possible sequence of ti?s can be estimated
by dynamic programming in the decoding stage
(Zhang et al, 2002).
2.2 Multilevel Linguistic Features
This Chinese NER system uses Chinese charac-
ters (not Chinese words) as the basic token units,
and then maps word-based features that are as-
sociated with each word into corresponding fea-
tures of those characters that are contained in the
word. This approach can effectively incorporate
both character-based features and word-based fea-
tures. In general, we may regard this approach
as information integration from linguistic views at
different abstraction levels.
We integrate a diverse set of local linguistic fea-
tures, including word segmentation information,
Chinese word patterns, complex lexical linguis-
tic features (e.g. part of speech and semantic fea-
tures), aligned at the character level. In additional,
we also use external NE hints and gazetteers, in-
cluding surnames, location suffixes, organization
suffixes, titles, high-frequency Chinese characters
in Chinese names and translation names, and lists
of locations and organizations. In this system, lo-
cal linguistic features of a token unit are derived
from the sentence containing this token unit. All
special linguistic patterns (i.e. date, time, numeral
expression) are encoded into pattern-specific class
labels aligned with the tokens.
3 Impact of Training Data Size And
Domain Information on the NER
Performance
It is very important to keep the performance sta-
bility of NER models across domains in practice.
510
However, the performance usually becomes unsta-
ble when NER models are applied in different do-
mains. We focus on the impact of the training data
size and domain information on the NER perfor-
mance in this section.
3.1 Data
We built a large-scale high-quality Chinese NE an-
notated corpus. The corpus size is 114.25M Chi-
nese characters. All the data are news articles se-
lected from several Chinese newspapers in 2001
and 2002. All the NEs in the corpus are manually
tagged. Documents in the corpus are also man-
ually classified into eight domain categories, in-
cluding politics, sports, science, economics, enter-
tainment, life, society and others. Cross-validation
is employed to ensure the tagging quality.
All the training data and test data in the exper-
iments are selected from this Chinese annotated
corpus. The general training data are randomly se-
lected from the corpus without distinguishing their
domain categories. All the domain-specific train-
ing data are selected from the corpus according to
their domain categories. One general test data set
and seven domain-specific test data sets are used
in our experiments (see Table 1). The size of the
general test data set is 1.34M Chinese characters.
Seven domain-specific test sets are extracted from
the general test data set according to the document
domain categories.
Domain NE distribution in the domain-oriented test data set Test set
PER ORG LOC MISC Total Size
General 11,991 9,820 12,353 1,820 35,984 1.34M
Politics 2,470 1,528 2,540 480 7,018 0.2M
Economics 1,098 2,971 2,362 493 6,924 0.26M
Sports 1,802 1,323 1,246 478 4,849 0.10M
Entertainment 2,458 526 738 542 4,264 0.10M
Society 916 418 823 349 2,506 0.08M
Life 2,331 1,690 3,634 763 8,418 0.39M
Science 1,802 1,323 1,246 478 4,849 0.10M
Table 1: NE distribution in the general and
domain-specific test data sets
In our evaluation, only NEs with correct bound-
aries and correct class labels are considered as the
correct recognition. We use the standard P (i.e.
Precision), R (i.e. Recall), and F-measure (de-
fined as 2PR/(P+R)) to measure the performance
of NER models.
3.2 Impact of Training Data Size on the NER
Performance across Domains
The amount of annotated data is always a bottle-
neck for supervised learning methods in practice.
Figure 1: Performance curves of the general and
specific domain NER models
Thus, we evaluate the impact of training data size
on the NER performance across domains.
In this baseline experiment, an initial general
NER model is trained with 0.1M general data at
first. Then the NER model is incrementally re-
trained by adding 0.1M new general training data
each time till the performance isn?t enhanced sig-
nificantly. The NER performance curve (labelled
with the tag ?General? ) in the whole retraining
process is shown in Figure 1. Experimental results
show that the performance of the general NER
model is significantly enhanced in the first several
retraining cycles since more training data are used.
However, when the general training data set size is
more than 2.4M, the performance enhancement is
very slight.
In order to analyze how the training data size
impacting the performance of NER models in spe-
cific domains, seven domain-specific NER mod-
els are built using the similar retraining process.
Each domain-specific NER model is also trained
with 0.1M domain-specific data at first. Then,
each initial domain-specific NER model is incre-
mentally retrained by adding 0.1M new domain-
specific data each time.
NER F(%) Size NE distribution in the training set
Model thre-
shold
(M) PER ORG LOC MISC Total
General 80.38 2.4 24,960 27,231 21,098 7,439 80,728
Politics 83.09 0.9 11,388 6,618 14,350 1,974 34,330
Econ-
omics 85.46 1.7 7,197 21,113 15,582 3,466 47,358
Sports 90.78 0.6 11,647 8,105 7,468 3,070 30,290
Entert-
ainment 83.31 0.6 12,954 2,823 4,665 3,518 32,860
Society 76.55 0.6 7,099 3,279 6,946 1,909 19,233
Life 81.06 1.7 10,502 5,675 18,980 2,420 37,577
Science 70.02 0.4 1,625 3,010 2,083 902 7,620
Table 2: Performance of NER models, size thresh-
old and NE distribution in the corresponding train-
ing data sets
511
The performance curves of these domain-
specific NER models are also shown in Figure 1
(see the curves labelled with the domain tags). Al-
though the initial performance of each domain-
specific NER model varies with domains, the per-
formance is also significantly enhanced in the first
several retraining cycles. When the size of the
domain-specific training data set is above a certain
threshold, the performance enhancement is very
slight as well.
The final performance of the trained NER mod-
els, and the corresponding training data sets are
shown in Table 2.
From these NER performance curves, we obtain
the following observations.
1. More training data are used, higher NER per-
formance can be achieved. However, it is
difficult to significantly enhance the perfor-
mance when the training data size is above a
certain threshold.
2. The threshold of the training data size and
the final achieved performance vary with do-
mains (see Table 2). For example, in enter-
tainment domain, the threshold is 0.6M and
the final F-measure achieves 83.31%. In eco-
nomic domain, the threshold is 1.7M, and the
corresponding F-measure is 85.46%.
3.3 The Performance Stability of Each NE
Type Recognition across Domains
Statistic data on our large-scale annotated corpus
(shown in Table 3) show that the distribution of NE
types varies with domains. We define ? NE density
? to quantitatively measure the NE distribution in
an annotated data set. NE density is defined as ?the
count of NE instances in one thousand Chinese
characters?. Higher NE density usually indicates
that more NEs are contained in the data set. We
may easily measure the distribution of each NE
type across domains using NE density. In this an-
notated corpus, PER, LOC, and ORG have similar
NE density while MISC has the smallest NE den-
sity. All the NE types also have different NE den-
sity in each domain. For example, the NE density
of ORG and LOC is much higher than that of PER
in economic domain. PER and LOC have higher
NE density than ORG in politics domain. PER
has the highest NE density among these NE types
in both sports and entertainment domains. The
unbalanced NE distribution across domains shows
that news articles on different domains usually fo-
cus on different specific NE types. These NE dis-
tribution features imply that each NE type has dif-
ferent domain dependency feature. The perfor-
mance stability of domain-focused NE type recog-
nition becomes more important in domain-specific
applications. For example, since economic news
articles usually focus on ORG and LOC NEs, the
high-quality LOC and ORG recognition models
will be more valuable in economic domain. In ad-
dition, these distribution features also can be used
to guide training and test data selection.
Domain NE distribution in the specific domain
PER LOC ORG MISC ALL Ratio
(%)
Politics 167,989 180,193 105,936 30,830 484,948 16.43
Econ-
omics 117,459 200,261 352,323 76,320 746,363 25.29
Sports 129,137 73,435 98,618 33,304 334,494 11.33
Entert- 154,193 50,408 40,444 52,460 297,505 10.08
ainment
Life 200,222 234,150 145,138 65,733 645,243 21.86
Society 63,793 53,724 43,657 21,162 182,336 6.18
Science 27,878 30,737 72,413 16,824 147,852 5.00
Others 31,723 40,730 26,666 13,926 113,045 3.83
All 892,394 863,638 885,195 310,559 2,951,786 ?
Domain NE density in the Chinese annotated corpus Size
PER LOC ORG MISC ALL (M)
Politics 10.70 11.48 6.75 1.96 31.21 15.70
Econ-
omics 4.18 7.13 12.55 2.72 26.58 28.08
Sports 16.43 9.34 12.55 4.24 42.57 7.86
Entert-
ainment 16.81 5.05 4.14 5.72 32.44 9.17
Life 5.64 6.59 4.09 1.85 18.17 35.52
Society 8.57 7.22 5.87 2.84 24.51 7.44
Science 4.30 4.74 11.17 2.60 22.82 6.48
Others 7.9 10.18 6.67 3.48 28.26 4.00
All 7.81 7.56 7.75 2.72 25.89 114.25
Table 3: NE distribution in the Chinese annotated
corpus
In this experiment, the performance stability
of NER models across domains is evaluated, es-
pecially the performance stability of each NE
type recognition. The general NER model is
trained with 2.4M general data. Seven domain-
specific models are trained with the corresponding
domain-specific training sets (see Table 2 in Sec-
tion 3.2).
The performance stability of the general NER
model is firstly evaluated on the general and
domain-specific test data sets (see Table 1 in Sec-
tion 3.1 ). The experimental results are shown in
Table 4. The performance curves of the general
model are shown in Figure 2, including the total
F-measure curve of the NER model (labelled with
the tag ?All?) and F-measure curves of each NE
type recognition in the specific domains (labelled
with the NE tags respectively).
The performance stability of the seven domain-
specific NER models are also evaluated. Each
domain-specific NER model is tested on the gen-
512
Domain F(%) of general NER model
PER LOC ORG MISC ALL
General 86.69 85.55 73.59 56.00 80.38
Economic 85.11 88.22 75.91 49.53 80.50
Politics 86.26 87.00 71.31 61.50 81.90
Sports 91.87 89.03 81.67 67.41 86.10
Entertainment 84.24 85.85 68.65 60.96 79.31
Life 86.62 83.54 70.30 58.49 79.73
Society 84.53 76.16 68.89 41.14 74.50
Science 87.74 86.42 65.85 24.10 69.55
Table 4: Performance of the general NER model
in specific domains
Figure 2: Performance curves of the general NER
model in specific domains
eral test data and the other six different domain-
specific test data sets. The experimental results are
shown in Table 5. The performance curves of three
domain-specific NER models are shown in Figure
3, Figure 4 and Figure 5 respectively.
From these experimental results, we have the
following conclusions.
1. The performance stability of all the NER
models is limited across domains. When a
NER model is employed in a new domain, its
performance usually decreases. Moreover, its
performance is usually much lower than the
performance of the corresponding domain-
specific model.
2. The general NER model has better per-
Figure 3: Performance curves of economic do-
main NER model in the other specific domains
NER F(%) in specific domain
Model Gen- Eco- Poli- Spo- Enter- Life Soc- Sci-
eral nomic tics rts tainment iety ence
General 80.38 80.50 81.90 86.10 79.31 79.73 74.50 69.55
Econ-
omic 75.30 85.46 74.32 72.89 68.46 76.23 65.75 68.97
Politics 73.37 66.39 83.09 76.37 71.51 74.83 67.31 53.76
Sports 71.23 62.56 68.99 90.78 73.48 71.18 64.82 53.85
Entert-
ainment 70.82 61.52 72.04 75.34 83.31 71.80 69.10 52.50
Life 73.53 66.92 75.07 73.86 72.68 81.06 69.61 57.36
Society 70.29 62.55 72.70 70.69 72.24 74.10 76.55 53.42
Science 67.26 67.57 69.00 64.32 63.84 69.05 64.85 70.02
Table 5: Performance of NER models in specific
domains
Figure 4: Performance curves of sports domain
NER model in the other specific domains
formance stability than the domain-specific
NER model when they are applied in new do-
mains (see Table 5). Domain-specific mod-
els usually could achieve a higher perfor-
mance in its corresponding domain after be-
ing trained with a smaller amount of domain-
specific annotated data (see Table 2 in Sec-
tion 3.2). However, the performance stability
of domain-specific NER model is poor across
different domains. Thus, it is very popular to
build a general NER model for the general
applications in practice.
3. The performance of PER, LOC and ORG
recognition is better than that of MISC recog-
Figure 5: Performance curves of politics domain
NER model in the other specific domains
513
nition in NER (see Figure 2 ? Figure 5).
The main reason for the poor performance of
MISC recognition is that there are less com-
mon indicative features among various MISC
NEs which we do not distinguish. In addi-
tion, NE density of MISC is much less than
that of PER, LOC, and ORG. There are a
relatively small number of positive training
samples for MISC recognition.
4. NE types have different domain dependency
attribute. The performance stability of each
NE type recognition varies with domains (see
Figure 2 ? Figure 5). The performance of
PER and LOC recognition are more stable
across domains. Thus, few efforts are needed
to adapt the existing high-quality general
PER and LOC recognition models in domain-
specific applications. Since ORG and MISC
NEs usually contain more domain-specific
semantic information, ORG and MISC are
more domain-dependent than PER and LOC.
Thus, more domain-specific features should
be mined for ORG and MISC recognition.
4 Use Informative Training Samples to
Enhance the Performance of NER
Models across Domains
A higher performance system usually requires
more features and a larger number of training data.
This requires larger system memory and more effi-
cient training method, which may not be available.
Within the limitation of available training data and
computational resources, it is necessary for us to
either limit the number of features or select more
informative data which can be efficiently handled
by the training algorithm. Active learning method
is usually employed in text classification (McCal-
lum and Nigam et al, 1998). It is only recently
employed in NER (Shen et al, 2004).
In order to enhance the performance and over-
come the limitation of available training data and
computational resources, we present an informa-
tive sample selection method using a variant of
uncertainty-sampling (Lewis and Catlett, 1994).
The main steps are described as follows.
1. Build an initial NER model (F-
measure=76.24%) using an initial data
set. The initial data set (about 1M Chinese
characters) is randomly selected from the
large-scale candidate data set (about 9M ).
Figure 6: Performance curves of general NER
models after being trained with informative sam-
ples and random samples respectively
2. Refine the training set by adding more infor-
mative samples and removing those redun-
dant samples. In this refinement phase, all of
the data are annotated by the current recogni-
tion model (e.g. the initial model built in Step
1). Each annotation has a confidence score
associated with the prediction. In general, an
annotation with lower confidence score usu-
ally indicates a wrong prediction. The con-
fidence score of the whole sample sentence
is defined as the average of the confidence
scores of all the annotations contained in the
sentence. Thus, we add those sample sen-
tences with lower confidence scores into the
training set. Meanwhile, in order to keep a
reasonable size of the training set, those old
training sample sentences with higher confi-
dence scores are removed from the current
training set. In each retraining phase, all of
the sample sentences are sorted by the con-
fidence score. The top 1000 new sample
sentences with lowest confidence scores are
added into the current training set. The top
500 old training sample sentences with high-
est confidence scores are removed from the
current training set.
3. Retrain a new Chinese NER model with the
newly refined training set
4. Repeat Step 2 and Step 3, until the perfor-
mance doesn?t improve any more.
We apply this informative sample selection
method to incrementally build the general domain
NER model. The size of the final informative
training sample set is 1.05M Chinese characters.
This informative training sample set has higher
NE density than the random training data set (see
Table 6).
514
We denote this general NER model trained with
the informative sample set as ?general informa-
tive model?, and denote the general-domain model
which is trained with 2.4M random general train-
ing data as ?general random model?. The perfor-
mance curves of the general NER models after be-
ing trained with informative samples and random
data respectively are shown in Figure 6. Experi-
ment results (see Table 6) show that there is a sig-
nificant enhancement in F-measure if using infor-
mative training samples. Compared with the ran-
dom model, the informative model can increase F-
measure by 4.21 percent points.
Type Using informative sample set Using random training set
(1.05M) (2.4M)
F(%) NEs NE density F(%) NEs NE density
PER 89.87 18,898 18.00 86.69 24,960 10.38
LOC 89.68 24,862 23.68 85.55 21,089 11.33
ORG 79.22 22,173 21.12 73.59 27,231 8.78
MISC 64.27 8,067 7.68 56.00 7,439 3.10
Total 84.59 74,000 70.48 80.38 80,728 33.58
Table 6: Performance of informative model and
random model in the general domain
Domain F(%) of general informative model
PER LOC ORG MISC ALL
Economic 89.26 90.66 81.24 61.14 84.63
Politics 89.36 89.37 74.76 65.95 84.70
Sports 93.65 90.66 86.00 72.05 88.71
Entertainment 88.38 87.54 73.88 58.32 82.74
Life 89.15 88.35 75.68 72.01 84.66
Society 86.61 82.15 72.99 58.55 79.49
Science 90.91 88.35 71.69 25.16 72.71
Table 7: Performance of the general informative
model in specific domains
This informative model is also evaluated on the
domain-specific test sets. Experimental results are
shown in Table 7. We view the performance of the
domain-specific NER model as the baseline per-
formance in its corresponding domain (see Table
8), denoted as Fbaseline. The performance of in-
formative model in specific domains is very close
to the corresponding Fbaseline (see Figure 7). We
define the domain-specific average F-measure as
the average of all the F-measure of the NER model
in seven specific domains, denote as F . The av-
erage of all the Fbaseline in specific domains is
denoted as F baseline. The average F-measure of
the informative model and the random model in
specific domains is denoted as F informative and
F random respectively. Compared with F baseline
(F =81.47%), the informative model increases F
by 1.05 percent points. However, F decreases by
2.67 percent points if using the random model. Es-
pecially, the performance of the informative model
is better than the corresponding baseline perfor-
Figure 7: Performance comparison of informa-
tive model, random model, and the corresponding
domain-specific models
mance in politics, life, society and science do-
mains. Moreover, the size of the informative sam-
ple set is much less than the life domain training
set (1.7M).
NER F(%) in specific domains
model Eco- Poli- Spo- Entert- Life So- Sci- F
nomic tics rts ainment ciety ence
domain-
specific 85.46 83.09 90.78 83.31 81.06 76.55 70.02 81.47
(baseline)
Infor-
mative 84.63 84.70 88.71 82.74 84.66 79.49 72.71 82.52
Random 80.50 81.90 86.10 79.31 79.73 74.50 69.55 78.80
NER ?(F ) in specific domain
model ?(F ) = (F ? F ) ?
Eco- Poli- Spo- Entert- Life So- Sci-
nomic tics rts ainment ciety ence
Infor-
mative 2.11 2.18 6.19 0.22 2.14 -3.03 -9.81 4.74
Random 1.7 3.1 7.3 0.51 0.93 -4.3 -9.25 4.94
Table 8: Performance comparison of informa-
tive model, random model and the corresponding
domain-specific model in each specific domain
The informative model has much better perfor-
mance than the random model in specific domains
(see Table 8 and Figure 7). F informative is 82.52%
while F random is 78.80%. The informative model
can increase F by 3.72 percent points. The infor-
mative model is also more stable than the random
model in specific domains (see Table 8). Standard
deviation of F-measure for the informative model
is 4.74 while that for the random model is 4.94.
Our experience with the incremental sample se-
lection provides the following hints.
1. The performance of the NER model across
domains can be significantly enhanced after
being trained with informative samples. In
515
order to obtain a high-quality and stable NER
model, it is only necessary to keep the infor-
mative samples. Informative sample selec-
tion can alleviate the problem of obtaining a
large amount of annotated data. It is also an
effective method for overcoming the poten-
tial limitation of computational resources.
2. In learning NER models, annotated results
with lower confidence scores are more use-
ful than those samples with higher confidence
scores. This is consistent with other studies
on active learning.
5 Conclusion
Efficient and robust NER model is very impor-
tant in practice. This paper provides an empirical
study on the impact of training data size and do-
main information on the performance stability of
NER. Experimental results show that it is difficult
to significantly enhance the performance when the
training data size is above a certain threshold. The
threshold of the training data size varies with do-
mains. The performance stability of each NE type
recognition also varies with domains. The large-
scale corpus statistic data also show that NE types
have different distribution across domains. These
empirical investigations provide useful hints for
enhancing the performance stability of NER mod-
els across domains with less efforts. In order to en-
hance the NER performance across domains, we
present an informative training sample selection
method. Experimental results show that the per-
formance is significantly enhanced by using infor-
mative training samples.
In the future, we?d like to focus on further
exploring more effective methods to adapt NER
model to a new domain with much less efforts,
time and performance degrading.
References
Daniel M. Bikel, Richard L. Schwartz, and Ralph M.
Weischedel. 1999. An algorithm that learns what?s
in a name. Machine Learning, 34(1-3):211?231.
Andrew Borthwick. 1999. A Maximum Entropy Ap-
proach to Named Entity Recognition. Ph.D. thesis,
New York University.
Xavier Carreras, Llu??s Ma`rquez, and Llu??s Padro?.
2003. A simple named entity extractor using ad-
aboost. In Proceedings of CoNLL-2003, pages 152?
155.
Radu Florian, Abe Ittycheriah, Hongyan Jing, and
Tong Zhang. 2003. Named entity recogintion
through classifier combination. In Proceedings
CoNLL-2003, pages 168?171.
Jian F. Gao, Mu Li, Anndy Wu, and Chang N., Huang.
2005. Chinese Word Segmentation and Named En-
tity Recognition: A Pragmatic Approach. Computa-
tional Linguisitc,31(4):531-574.
Hong L. Guo, Jian M. Jiang, Gang Hu, and Tong
Zhang. 2005. Chinese Named Entity Recognition
Based on Multilevel Linguistic Features. Lecture
Notes in Artificial Intelligence,3248:90-99,Springer.
Hideki Isozaki and Hideto Kazawa. 2002. Efficient
support vector classifiers for named entity recogni-
tion. In Proceedings of Coling-2002, pages 1-7.
Hongyan Jing, Radu Florian, Xiaoqiang Luo, Tong
Zhang, and Abraham Ittycheriah. 2003. Howtoge-
tachinesename (entity) : Segmentation and combi-
nation issues. In EMNLP 2003, pages 200-207.
Dan Klein, Joseph Smarr, Huy Nguyen, and Christo-
pher D. Manning. 2003. Named entity recogni-
tion with character-level models. In Proceedings of
CoNLL-2003, pages 180?183.
David D. Lewis and Jason Catlett. 1994. Heteroge-
neous uncertainty sampling for supervised learning.
In Proceedings of the Eleventh International Con-
ference on Machine Learning, pages 148?156.
Andrew Kamal McCallum and K. Nigam. 1998. Em-
ploying EM in pool-based active learning for text
classification. Proceedings of 15th International
Conference on Machine Learning, pages 350-358.
Fien De Meulder and Walter Daelemans. 2003.
Memory-based named entity recognition using
unannotated data. In Proceedings of CoNLL-2003,
pages 208?211.
Erik F. Tjong Kim Sang and Fien De Meulder. 2003.
Introduction to the conll-2003 shared task: Lan-
guage independent named entity recognition. In
Walter Daelemans and Miles Osborne, editors, Pro-
ceedings of CoNLL-2003, pages 142?147.
Dan Shen, Jie Zhang, Jian Su, Gou D. Zhou, and Chew
L.Tan, 2004. Multi-Criteria-based Active Learn-
ing for Named Entity Recognition. Proceedings of
ACL04, pages 589-596.
Yu Z. Wu, Jun Zhao, Bo Xu, and Hao Yu. 2005. Chi-
nese Named Entity Recognition Based on Multiple
Features. Proceedings of EMNLP05, pages 427-434
Shi H. Yu, Shuan H. Bai, and Paul Wu. 1998. De-
scription of the kent ridge digital labs system used
for muc-7. In Proceedings of the Seventh Message
Understanding Conference (MUC-7).
Tong Zhang, Fred Damerau, and David E. Johnson.
2002. Text chunking based on a generalization of
Winnow. Journal of Machine Learning Research,
2:615?637.
516
