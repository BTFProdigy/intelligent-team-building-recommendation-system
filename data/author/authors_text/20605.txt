Proceedings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 25?28,
Gothenburg, Sweden, April 26-30 2014.
c
?2014 Association for Computational Linguistics
CASMACAT: A Computer-assisted Translation Workbench
V. Alabau
?
, C. Buck
?
, M. Carl
?
, F. Casacuberta
?
, M. Garc??a-Mart??nez
?
U. Germann
?
, J. Gonz
?
alez-Rubio
?
, R. Hill
?
, P. Koehn
?
, L. A. Leiva
?
B. Mesa-Lao
?
, D. Ortiz
?
, H. Saint-Amand
?
, G. Sanchis
?
, C. Tsoukala
?
?
PRHLT Research Center, Universitat Polit`ecnica de Val`encia
{valabau,fcn,jegonzalez,luileito,dortiz,gsanchis}@dsic.upv.es
?
Copenhagen Business School, Department of International Business Communication
{ragnar.bonk,mc.isv,mgarcia,bm.ibc}@cbs.dk
?
School of Informatics, University of Edinburgh
{cbuck,ugermann,rhill2,pkoehn,hsamand,ctsoukal}@inf.ed.ac.uk
Abstract
CASMACAT is a modular, web-based
translation workbench that offers ad-
vanced functionalities for computer-aided
translation and the scientific study of hu-
man translation: automatic interaction
with machine translation (MT) engines
and translation memories (TM) to ob-
tain raw translations or close TM matches
for conventional post-editing; interactive
translation prediction based on an MT en-
gine?s search graph, detailed recording and
replay of edit actions and translator?s gaze
(the latter via eye-tracking), and the sup-
port of e-pen as an alternative input device.
The system is open source sofware and in-
terfaces with multiple MT systems.
1 Introduction
CASMACAT
1
(Cognitive Analysis and Statistical
Methods for Advanced Computer Aided Trans-
lation) is a three-year project to develop an
advanced, interactive workbench for computer-
assisted translation (CAT). Currently, at the end of
the second year, the tool includes an array of inno-
vative features that combine to offer a rich, user-
focused working environment not available in any
other CAT tool.
CASMACAT works in close collaboration with
the MATECAT project
2
, another open-source web-
based CAT tool. However, while MATECAT is
concerned with conventional CAT, CASMACAT is
focused on enhancing user interaction and facili-
tating the real-time involvement of human trans-
lators. In particular, CASMACAT provides highly
interactive editing and logging features.
1
http://www.casmacat.eu
2
http://www.matecat.com
Through this combined effort, we hope to foster
further research in the area of CAT tools that im-
prove the translation workflow while appealing to
both professional and amateur translators without
advanced technical skills.
GUI
web
server
CAT
server
MT
server
Javascript      PHP
    Python
  Python
web socket
HTTP
HTTP
Figure 1: Modular design of the workbench: Web-
based components (GUI and web server), CAT
server and MT server can be swapped out.
2 Design and components
The overall design of the CASMACAT workbench
is modular. The system consists of four com-
ponents. (1) a front-end GUI implemented in
HTML5 and JavaScript; (2) a back-end imple-
mented in PHP; (3) a CAT server that manages the
editing process and communicates with the GUI
through web sockets; (4) a machine translation
(MT) server that provides raw translation of source
text as well as additional information, such as a
search graph that efficiently encodes alternative
translation options. Figure 1 illustrates how these
components interact with each other. The CAT
and MT servers are written in Python and inter-
act with a number of software components imple-
mented in C++. All recorded information (source,
translations, edit logs) is permanently stored in a
MySQL database.
These components communicate through a
well-defined API, so that alternative implementa-
tions can be used. This modular architecture al-
25
Figure 2: Translation view for an interactive post-editing task.
lows the system to be used partially. For instance,
the CAT and MT servers can be used separately as
part of a larger translation workflow, or only as a
front-end when an existing MT solution is already
in place.
2.1 CAT server
Some of the interactive features of CASMACAT
require real-time interaction, such as interactive
text-prediction (ITP), so establishing an HTTP
connection every time would cause a significant
network overhead. Instead, the CAT server relies
on web sockets, by means of Python?s Tornadio.
When interactive translation prediction is en-
abled, the CAT server first requests a translation
together with the search graph of the current seg-
ment from the MT server. It keeps a copy of the
search graph and constantly updates and visualizes
the translation prediction based on the edit actions
of the human translator.
2.2 MT server
Many of the functions of the CAT server require
information from an MT server. This information
includes not only the translation of the input sen-
tence, but also n-best lists, search graphs, word
alignments, and so on. Currently, the CASMACAT
workbench supports two different MT servers:
Moses (Koehn et al., 2007) and Thot (Ortiz-
Mart??nez et al., 2005).
The main call to the MT server is a request for
a translation. The request includes the source sen-
tence, source and target language, and optionally
a user ID. The MT server returns an JSON object,
following an API based on Google Translate.
3 Graphical User Interface
Different views, based on the MATECAT GUI,
perform different tasks. The translation view is
the primary one, used when translating or post-
editing, including logging functions about the
translation/post-editing process. Other views im-
plement interfaces to upload new documents or to
manage the documents that are already in the sys-
tem. Additionally, a replay view can visualize all
edit actions for a particular user session, including
eye tracking information, if available.
3.1 Post-Editing
In the translation view (Figure 2), the document
is presented in segments and the assistance fea-
tures provided by CASMACAT work at the segment
level. If working in a post-editing task without
ITP, up to three MT or TM suggestions are pro-
vided for the user to choose. Keyboard shortcuts
are available for performing routine tasks, for in-
stance, loading the next segment or copying source
text into the edit box. The user can assign different
status to each segment, for instance, ?translated?
for finished ones or ?draft? for segments that still
need to be reviewed. Once finished, the translated
document can be downloaded in XLIFF format.
3
In the translation view, all user actions re-
lated to the translation task (e.g. typing activity,
mouse moves, selection of TM proposals, etc.) are
recorded by the logging module, collecting valu-
able information for off-line analyses.
3.2 Interactive Translation Prediction
Here we briefly describe the main advanced CAT
features implemented in the workbench so far.
Intelligent Autocompletion: ITP takes place
every time a keystroke is detected by the sys-
tem (Barrachina et al., 2009). In such event, the
system produces a prediction for the rest of the
sentence according to the text that the user has al-
ready entered. This prediction is placed at the right
of the text cursor.
Confidence Measures: Confidence mea-
sures (CMs) have two main applications in
3
XLIFF is a popular format in the translation industry.
26
MT (Gonz?alez-Rubio et al., 2010). Firstly, CMs
allow the user to clearly spot wrong translations
(e.g., by rendering in red those translations
with very low confidence according to the MT
module). Secondly, CMs can also inform the user
about the translated words that are dubious, but
still have a chance of being correct (e.g., rendered
in orange). Figure 3 illustrates this.
Figure 3: Visualisation of Confidence Measures
Prediction Length Control: Providing the user
with a new prediction whenever a key is pressed
has been proved to be cognitively demanding (Al-
abau et al., 2012). Therefore, the GUI just displays
the prediction up to the first wrong word according
to the CMs provided by the system (Figure 4).
Figure 4: Prediction Length Control
Search and Replace: Most of CAT tools pro-
vide the user with intelligent search and replace
functions for fast text revision. CASMACAT fea-
tures a straightforward function to run search and
replacement rules on the fly.
Word Alignment Information: Alignment of
source and target words is an important part of
the translation process (Brown et al., 1993). To
display their correspondence, they are hihglighted
every time the user places the mouse or the text
cursor on a word; see Figure 5.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Figure 5: Visualisation of Word Alignment
Prediction Rejection: With the purpose of eas-
ing user interaction, CASMACAT also supports a
one-click rejection feature (Sanchis-Trilles et al.,
2008). This feature invalidates the current predic-
tion made for the sentence that is being translated,
and provides the user with an alternate one.
3.3 Replay mode and logging functions
The CASMACAT workbench implements detailed
logging of user activity data, which enables both
automatic analysis of translator behaviour and
retrospective replay of a user session. Replay
takes place in the translation view of the GUI
and it displays the screen status of the recorded
translation/post-editing process. The workbench
also features a plugin to enrich the replay mode
with gaze data coming from an eye-tracker. This
eye-tracking integration is possible through a
project-developed web browser extension which,
at the moment, has only been fully tested with SR-
Research EyeLinks
4
.
4 E-pen Interaction
E-pen interaction is intended to be a complemen-
tary input rather than a substitution of the key-
board. The GUI features the minimum compo-
nents necessary for e-pen interaction; see Figure 6.
When the e-pen is enabled, the display of the cur-
rent segment is changed so that the source seg-
ment is shown above the target segment. Then the
drawing area is maximised horizontally, facilitat-
ing handwriting, particularly in tablet devices. An
HTML canvas is also added over the target seg-
ment, where the user?s drawings are handled. This
is achieved by means of MINGESTURES (Leiva
et al., 2013), a highly accurate, high-performance
gesture set for interactive text editing that can dis-
tinguish between gestures and handwriting. Ges-
tures are recognised on the client side so the re-
sponse is almost immediate. Conversely, when
handwritten text is detected, the pen strokes are
sent to the server. The hand-written text recog-
nition (HTR) server is based on iAtros, an open
source HMM decoder.
if any feature not
is available on your network
substitution
Figure 6: Word substitution with e-pen interaction
5 Evaluation
The CASMACAT workbench was recently evalu-
ated in a field trial at Celer Soluciones SL, a
language service provider based in Spain. The
trial involved nine professional translators work-
ing with the workbench to complete different post-
editing tasks from English into Spanish. The pur-
4
http://www.sr-research.com
27
pose of this evaluation was to establish which of
the workbench features are most useful to profes-
sional translators. Three different configurations
were tested:
? PE: The CASMACAT workbench was used
only for conventional post-editing, without
any additional features.
? IA: Only the Intelligent Autocompletion fea-
ture was enabled. This feature was tested sep-
arately because it was observed that human
translators substantially change the way they
interact with the system.
? ITP: All features described in Section 3.2
were included in this configuration, except-
ing CMs, which were deemed to be not accu-
rate enough for use in a human evaluation.
For each configuration, we measured the aver-
age time taken by the translator to produce the fi-
nal translation (on a segment basis), and the aver-
age number of edits required to produce the final
translation. The results are shown in Table 1.
Setup Avg. time (s) Avg. # edits
PE 92.2 ? 4.82 141.39 ? 7.66
IA 86.07 ? 4.92 124.29 ? 7.28
ITP 123.3 ? 29.72 137.22 ? 13.67
Table 1: Evaluation of the different configurations
of the CASMACAT workbench. Edits are measured
in keystrokes, i.e., insertions and deletions.
While differences between these numbers are
not statistically significant, the apparent slowdown
in translation with ITP is due to the fact that all
translators had experience in post-editing but none
of them had ever used a workbench featuring in-
telligent autocompletion before. Therefore, these
were somewhat unsurprising results.
In a post-trial survey, translators indicated that,
on average, they liked the ITP system the best.
They were not fully satisfied with the freedom of
interactivity provided by the IA system. The lack
of any visual aid to control the intelligent auto-
completions provided by the system made transla-
tors think that they had to double-check any of the
proposals made by the system when making only
a few edits.
6 Conclusions
We have introduced the current CASMACAT work-
bench, a next-generation tool for computer as-
sisted translation. Each of the features available
in the most recent prototype of the workbench has
been explained. Additionally, we have presented
an executive report of a field trial that evaluated
genuine users? performance while using the work-
bench. Although E-pen interaction has not yet
been evaluated outside of the laboratory, it will the
subject of future field trials, and a working demon-
stration is available.
Acknowledgements
Work supported by the European Union 7
th
Framework Program (FP7/2007-2013) under the
CASMACAT project (grant agreement n
o
287576).
References
Vicent Alabau, Luis A. Leiva, Daniel Ortiz-Mart??nez,
and Francisco Casacuberta. 2012. User evaluation
of interactive machine translation systems. In Proc.
EAMT, pages 20?23.
Sergio Barrachina et al. 2009. Statistical approaches to
computer-assisted translation. Computational Lin-
guistics, 35(1):3?28.
Peter Brown et al. 1993. The mathematics of statistical
machine translation: Parameter estimation. Compu-
tational linguistics, 19(2):263?311.
Jes?us Gonz?alez-Rubio, Daniel Ortiz-Mart??nez, and
Francisco Casacuberta. 2010. On the use of confi-
dence measures within an interactive-predictive ma-
chine translation system. In Proc. of EAMT.
Philipp Koehn et al. 2007. Moses: Open source toolkit
for statistical machine translation. In Proc. of ACL,
pages 177?180.
Luis A. Leiva, Vicent Alabau, and Enrique Vidal.
2013. Error-proof, high-performance, and context-
aware gestures for interactive text edition. In Proc.
of CHI, pages 1227?1232.
Daniel Ortiz-Mart??nez, Ismael Garc??a-Varea, and Fran-
cisco Casacuberta. 2005. Thot: a toolkit to train
phrase-based statistical translation models. In Proc.
of MT Summit X, pages 141?148.
G. Sanchis-Trilles et al. 2008. Improving interactive
machine translation via mouse actions. In Proc. of
EMNLP, pages 485?494.
28
Proceedings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 45?48,
Gothenburg, Sweden, April 26-30 2014.
c?2014 Association for Computational Linguistics
The New THOT Toolkit for Fully-Automatic and Interactive Statistical
Machine Translation
Daniel Ortiz-Mart??nez
Dpto. de Sist. Inf. y Comp.
Univ. Polit?ec. de Valencia
46071 Valencia, Spain
dortiz@dsic.upv.es
Francisco Casacuberta
Dpto. de Sist. Inf. y Comp.
Univ. Polit?ec. de Valencia
46071 Valencia, Spain
fcn@dsic.upv.es
Abstract
We present the new THOT toolkit for fully-
automatic and interactive statistical ma-
chine translation (SMT). Initial public ver-
sions of THOT date back to 2005 and did
only include estimation of phrase-based
models. By contrast, the new version of-
fers several new features that had not been
previously incorporated. The key innova-
tions provided by the toolkit are computer-
aided translation, including post-editing
and interactive SMT, incremental learn-
ing and robust generation of alignments
at phrase level. In addition to this, the
toolkit also provides standard SMT fea-
tures such as fully-automatic translation,
scalable and parallel algorithms for model
training, client-server implementation of
the translation functionality, etc. The
toolkit can be compiled in Unix-like and
Windows platforms and it is released un-
der the GNU Lesser General Public Li-
cense (LGPL).
1 Introduction
Open-source software constitutes a valuable re-
source for researchers or companies. Due to the
inherent difficulties of developing good quality
software (correct, efficient, modular, extensible,
well-documented, etc.), there are interesting re-
search ideas that not always receive enough atten-
tion from the open-source software community.
We present the THOT toolkit for statistical ma-
chine translation (SMT). The first public version
of THOT was initially created in 2005 (Ortiz et
al., 2005) and its functionality was restricted to
train phrase-based models (Koehn et al., 2003).
Here we present a new version of THOT which
includes several new features related to phrase-
based translation. More specifically, the set of fea-
tures provided by THOT can be classified into ad-
vanced features and standard features. Advanced
features correspond to sophisticated functionality
that has received poor or no attention in existing
SMT toolkits. By contrast, standard features cor-
respond to functionality already provided by pop-
ular tools such as Moses (Koehn et al., 2007). In
this regard, THOT neither is based on Moses nor
shares any source code with it.
THOT includes the following advanced features:
? Computer-aided translation, including post-
editing and interactive machine translation
(IMT). This functionality has been inte-
grated in a translation tool developed in the
CasMaCat project
1
(the so-called CasMaCat
Workbench).
? Incremental estimation of all of the models
involved in the translation process.
? Robust generation of phrase-based align-
ments.
Computer-aided translation and more specifi-
cally two of its applications, post-editing and IMT,
constitute a field of increasing interest in SMT. In
particular, IMT has been studied in numerous re-
search papers during the last years. In spite of
this, this application has not previously been im-
plemented in open-source software tools.
Incremental (or online) learning is a hot re-
search topic in SMT due to the great interest of
quickly incorporating incoming data into exist-
ing translation systems. In spite of the fact that
the Moses toolkit already implements incremental
learning techniques, such techniques are designed
to work by incrementally processing large blocks
of data and not in a sentence-wise manner, as it is
pointed out in (Mirking and Cancedda, 2013). By
1
http://www.casmacat.eu/
45
contrast, the incremental learning techniques im-
plemented by THOT allows to process new train-
ing samples individually in real time.
Finally, the necessity of generating phrase-level
alignments is present in a wide range of tasks,
from multisource SMT to discriminative training.
However, as far as we know this functionality also
is not included in existing SMT tools.
In addition to the above mentioned advanced
features, THOT offers a set of standard features:
? Phrase-based SMT decoder.
? Scalable training and search algorithms.
? Client-server implementation.
? Miscellaneous SMT tools
2 The THOT toolkit
THOT can be downloaded from GitHub
2
and is
distributed under the GNU Lesser General Public
License (LGPL). It has been developed using C++
and shell scripting. The design principles that have
led the development process were:
? Modularity: The THOT code is organised
into separate packages for each main func-
tional component (training of phrase-based
and language models, decoding, etc.). Each
component can be treated as a stand-alone
tool and does not rely on the rest of the code.
? Extensibility: The functionality provided by
each package is structured into classes. Ab-
stract classes are used when appropriate to
define the basic behaviour of the functional
components of the toolkit, allowing us to eas-
ily extend the toolkit functionality.
? Scalability: THOT is able to train statisti-
cal models from corpora of an arbitrary size.
Moreover, the toolkit takes advantage of par-
allel and distributed computing to reduce the
time cost of the implemented algorithms. Ad-
ditionally, the parameters of the resulting
models can be pruned or accessed from disk
during the decoding process.
? Portability: It is known to compile on Unix-
like and Windows (using Cygwin) systems.
In the rest of the paper we give additional details
about the different toolkit features that have been
mentioned above.
2
https://github.com/daormar/thot
3 Computer-Aided Translation
Current MT systems are not able to produce ready-
to-use texts. Indeed, they usually require hu-
man post-editing in order to achieve high-quality
translations. This motivates an alternative applica-
tion of MT in which the MT system collaborates
with the user to generate the output translations.
This alternative application receives the name of
computer-assisted translation (CAT).
CAT can be instantiated in different ways. The
THOT toolkit incorporates tools that are useful
in two different CAT instantations, namely, post-
editing and interactive machine translation.
3.1 Post-Editing
Post-editing (PE) involves making corrections and
amendments to machine generated translations
(see (TAUS, 2010) for a detailed study). In the
PE scenario, the user only edits the output of the
MT system without further system intervention.
3.2 Interactive Machine Translation
In the IMT framework (Foster et al., 1997;
Langlais et al., 2002), the user obtains her desired
translations in a series of interactions with an MT
system. Specifically, the system initially generates
a translation without human intervention and af-
ter that, the user validates a prefix of the transla-
tion and introduce the next correct character of it.
With this information, the IMT system returns the
suffix which best completes the user prefix. This
process is repeated until the user gets the sentence
she has in mind. In (Barrachina et al., 2009), SMT
techniques were embedded within the interactive
translation environment.
A common problem in IMT arises when the
user sets a prefix which cannot be explained by the
statistical models. This problem requires the in-
troduction of specific techniques to guarantee that
the suffixes can be generated. The majority of the
IMT systems described in the literature use error-
correcting techniques based on the concept of edit
distance to solve the coverage problems. Such
error-correction techniques, although they are not
included in the statistical formulation of the IMT
process, are crucial to ensure that the suffixes com-
pleting the user prefixes can be generated.
THOT implements an alternative formalisation
that introduces stochastic error-correction models
in the IMT statistical formulation. Such a formal-
isation was introduced in (Ortiz-Mart??nez, 2011)
46
and it generates the suffixes required in IMT by
partially aligning a prefix of the target hypotheses
with the user prefix. Once the partial alignment
is determined, the suffix is given by the unaligned
portion of the target sentence.
Experiments to test the above mentioned IMT
proposal were carried out using THOT. The re-
sults showed that the proposed IMT system out-
performs the results of other state-of-the-start IMT
systems that are based on word graphs (see (Ortiz-
Mart??nez, 2011) for more details).
3.3 Integration with the CasMaCat
Workbench
THOT can be combined with the CasMaCat Work-
bench
3
that is being developed within the project
of the same name. The CasMaCat Workbench of-
fers novel types of assistance for human transla-
tors, using advanced computer aided translation
technology that includes PE and IMT.
4 Incremental Learning for SMT
Thot incorporates techniques to incrementally up-
date the parameters of the statistical models in-
volved in the translation process. Model updates
can be quickly executed in a sentence-wise man-
ner allowing the system to be used in a real time
scenario. For this purpose, a log-linear SMT
model where all its score components are incre-
mentally updateable is defined. The implemented
proposal uses the incremental version of the EM
algorithm (Neal and Hinton, 1998) and the spe-
cific details can be found in (Ortiz-Mart??nez et al.,
2010; Ortiz-Mart??nez, 2011).
Empirical results obtained with THOT and re-
ported in (Ortiz-Mart??nez et al., 2010; Ortiz-
Mart??nez, 2011) show that incremental learning al-
lows to significantly reduce the user effort in IMT
tasks with respect to that required by a conven-
tional IMT system.
Additionally, the incremental learning tech-
niques provided by THOT are currently being used
in other sophisticated applications such as active
learning for SMT (Gonz?alez-Rubio et al., 2012).
5 Generation of Phrase-Based
Alignments
The generation of phrase-level alignments is inter-
esting due to its utility in a wide range of appli-
3
See installation instructions at http://www.casmacat.
eu/index.php?n=Workbench.Workbench
cations, including multi-source SMT, Viterbi-like
estimation of phrase-based models or discrimina-
tive training, just to name a few.
A very straightforward technique can be pro-
posed for finding the best phrase-alignment.
Specifically, the search process only requires a
regular SMT system which filters its phrase table
in order to obtain those target translations for the
source sentence that are compatible with the given
target sentence. Unfortunately, this technique has
no practical interest when applied on regular tasks
due to problems with unseen events.
To overcome the above-mentioned difficulty, an
alternative technique that is able to consider every
source phrase of the source sentence as a possi-
ble translation of every target phrase of the target
sentence can be defined. The THOT toolkit imple-
ments the proposal described in (Ortiz-Mart??nez et
al., 2008), which combines a specific search al-
gorithm with smoothing techniques to enable ef-
ficient exploration of the set of possible phrase-
alignments for a sentence pair.
Phrase-based alignment quality was difficult to
evaluate since there is not a gold standard for this
task. One way to solve this problem consists in re-
fining the phrase alignments to word alignments
and compare them with those obtained in exist-
ing shared tasks on word alignment evaluation.
Results obtained with THOT reported in (Ortiz-
Mart??nez et al., 2008) clearly show the efficacy of
the implemented method.
6 Standard Features
THOT incorporates a number of standard features
that are present in existing translation tools. Such
standard features are briefly enumerated and de-
scribed in the following paragraphs.
Phrase-Based SMT Decoder The toolkit im-
plements a state-of-the-art phrase-based SMT de-
coder. The decoder uses a log-linear model with
a complete set of components similar to those im-
plemented in other tools such as Moses. Results
reported in (Ortiz-Mart??nez, 2011) show that the
translation quality obtained by THOT is compara-
ble to that obtained by means of Moses.
Scalable Training and Search Algorithms
Due to the increasing availability of large train-
ing corpora, it is necessary to implement scalable
training and search algorithms. THOT incorpo-
rates tools to train statistical models from corpora
47
of an arbitrary size. Such tools can take advan-
tage of the availability of multiple processors or
computer clusters. The parameters of the result-
ing models can be pruned or accessed from disk
during the decoding stage.
Client-Server Implementation An important
part of the functionality provided by the toolkit can
be accessed using a client-server model. This is a
useful feature to build web applications offering
SMT services.
Miscellaneous SMT tools THOT reduces de-
pendencies with third-party software by integrat-
ing most critical components of a typical machine
translation pipeline, from the estimation of phrase-
based and language models to the generation of
translations and their automatic evaluation. The
estimation of word-alignment models using the in-
cremental EM algorithm is also implemented by
the toolkit.
7 Conclusions
THOT is an open-source toolkit for SMT de-
signed for its use in Unix-like and Windows sys-
tems. It has been developed using C++ and shell
scripting, and it is released under LGPL license.
THOT incorporates three advanced features that
have received little attention in previous publicly-
available SMT tools, namely, interactive machine
translation, incremental learning and generation of
phrase-based alignments. Additionally, THOT also
implements standard features such as training of
statistical models or decoding. The functionality
of the toolkit has been empirically tested, showing
its efficacy in different SMT-related tasks.
Acknowledgments
Work supported by the European Union 7
th
Framework Program (FP7/2007-2013) under the
CasMaCat project (grant agreement n
o
287576),
by Spanish MICINN under grant TIN2012-31723,
and by the Generalitat Valenciana under grant
ALMPR (Prometeo/2009/014).
References
S. Barrachina, O. Bender, F. Casacuberta, J. Civera,
E. Cubel, S. Khadivi, A. L. Lagarda, H. Ney,
J. Tom?as, E. Vidal, and J. M. Vilar. 2009. Statistical
approaches to computer-assisted translation. Com-
putational Linguistics, 35(1):3?28.
G. Foster, P. Isabelle, and P. Plamondon. 1997. Target-
text mediated interactive machine translation. Ma-
chine Translation, 12(1):175?194.
Jes?us Gonz?alez-Rubio, Daniel Ortiz-Mart??nez, and
Francisco Casacuberta. 2012. Active learning for
interactive machine translation. In Procs. of the 13th
Conference of the European Chapter of the Associa-
tion for Computational Linguistics, pages 245?254.
P. Koehn, F. J. Och, and D. Marcu. 2003. Statisti-
cal phrase-based translation. In Procs. of the Hu-
man Language Technology and North American As-
sociation for Computational Linguistics Conference,
pages 48?54, Edmonton, Canada, May.
P. Koehn, H. Hoang, A. Birch, C. Callison-Burch,
M. Federico, N. Bertoldi, B. Cowan, W. Shen,
C. Moran, R. Zens, C. Dyer, O. Bojar, A. Constantin,
and E. Herbst. 2007. Moses: Open source toolkit
for statistical machine translation. In Procs. of the
45th Annual Meeting of the Association for Compu-
tational Linguistics, pages 177?180, Prague, Czech
Republic, June.
P. Langlais, G. Lapalme, and M. Loranger. 2002.
Transtype: Development-evaluation cycles to boost
translator?s productivity. Machine Translation,
15(4):77?98.
S. Mirking and N. Cancedda. 2013. Assessing quick
update methods of statistical translation models. In
Procs. of International Workshop of Spoken Lan-
guage Translation, pages 264?271, Heidelberg, Ger-
many.
R.M. Neal and G.E. Hinton. 1998. A view of the
EM algorithm that justifies incremental, sparse, and
other variants. In Procs. of the NATO-ASI on Learn-
ing in graphical models, pages 355?368, Norwell,
MA, USA.
D. Ortiz, I. Garc??a-Varea, and F. Casacuberta. 2005.
Thot: a toolkit to train phrase-based statistical trans-
lation models. In Machine Translation Summit,
pages 141?148, Phuket, Thailand, September.
D. Ortiz-Mart??nez, I. Garc??a-Varea, and F. Casacuberta.
2008. Phrase-level alignment generation using a
smoothed loglinear phrase-based statistical align-
ment model. In Procs. of the European Association
for Machine Translation.
D. Ortiz-Mart??nez, I. Garc??a-Varea, and F. Casacuberta.
2010. Online learning for interactive statistical ma-
chine translation. In Procs. of the 2010 Conference
of the North American Chapter of the Association
for Computational Linguistics, pages 546?554.
D. Ortiz-Mart??nez. 2011. Advances in Fully-
Automatic and Interactive Phrase-Based Statistical
Machine Translation. Ph.D. thesis, Universidad
Polit?ecnica de Valencia.
TAUS. 2010. Postediting in practice. a TAUS report.
Technical report, March.
48
