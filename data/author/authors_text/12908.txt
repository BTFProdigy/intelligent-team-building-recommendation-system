Dialogue Management in the Agreement Negotiation Process: 
A Model that Involves Natural Reasoning 
Mare KOIT 
Institute of Computer Science, Tartu University 
Liivi 2 
50409 Tartu, Estonia 
koit@ut.ee 
Haldur ~)IM 
Dept. of General Linguistics, Tartu University 
Tiigi 78 
51014 Tartu, Estonia 
hoim@psych.ut.ee 
Abstract 
In the paper we describe an approach to 
dialogue management in the agreement 
negotiation where one of the central roles is 
attributed to the model of natural human 
reasoning. The reasoning model consists of 
the model of human motivational sphere, 
and of reasoning algorithms. The reasoning 
model is interacting with the model of 
communication process. "/'he latter is 
considered as rational activity where central 
role play the concepts of communicative 
strategies and tactics. 
Introduction 
Several researches have modelled the process of 
argument negotiation in cooperative dialogue 
where one participant makes a proposal to 
another participant and as the result of 
negotiation this is accepted or rejected. 
Chu-Carroll and Carberry (1998) present a 
cooperative response-generation model as a 
recursive cycle Propose-Evaluate-Modify. They 
concentrate on dialogues of information sharing 
and negotiation. An information sharing 
dialogue is started, when the agent recognised a 
turn of his/her partner as a proposal, but does not 
have enough information to decide whether to 
accept it or not. A negotiation dialogue is 
started, when the agent concludes that the 
proposal is in conflict with his/her beliefs and 
preferences, i.e. tends to reject it. 
Heeman and Hirst (1995) model cooperation by 
the cycle Present-Judge-Refashion. They use 
two levels of modelling - planning and 
cooperation. On the first level utterances are 
generated and interpreted, on the second level 
the cooperation of agents is modelled, relating it 
to agent's mental states and planning processes. 
The Shared Plans cooperation model deals with 
planning processes in which participate multiple 
agents, see Lochbaurn (1998). The model 
concentrates on group tasks that can be divided 
into separate, but interacting subtasks, and the 
central problem is coordination of intentions and 
goals of partners. 
Di Eugenio et al (2000) present a model 
BalanceProposeDispose: first, the relevant 
information concerning the task is considered 
and discussed, then a proposal is made and, 
lastly, the decision concerning the proposal is 
made - it is accepted or rejected. 
In our model we depart from the same type of 
situation. One agent, A, addresses another agent, 
B, with the intention that B will carry out an 
action D. After some negotiation, B agrees or 
rejects the proposal. 
In this paper we concentrate on the problems 
connected with modelling participants as 
conversation agents who are able to participate 
in negotiation i  the form of natural dialogue - 
dialogue that is carried out in natural anguage 
and according to the rules of human 
communication. 
Such a dialogue can be considered as rational 
behaviour which is based on beliefs, wants and 
intentions of agents, at the same time being 
restricted by their resources, ee Jokinen (1995), 
Webber (2000). Conversation agent is a kind of 
intelligent agent - a computer program that is 
able to communicate with humans as another 
human being. 
As it is generally accepted, in a model of  
conversation agent it is necessary to represent its 
cognitive states as well as cognitive processes. 
102 
One of the most well-known models of this type 
is the BDI model, see Allen (1994). 
Our main point in this paper is that the general 
concepts of cognitive states and processes used 
in BDI-type models hould be extended in order 
to include certain factors from human 
motivational sphere and certain social principles 
in order to guarantee naturalness of dialogues of 
the type we are concerned with. This is 
especially important in connection with the fact 
that interest in modelling cooperative dialogues 
where partners are pursuing a common goal has 
considerably increased in recent years. On the 
one hand, this is connected with rapid spreading 
of Internet-based services. On the other hand, 
the interest in models of full natural dialogue 
derives from the possibility of building speech 
interfaces with different knowledge and 
databases, ee Dybkjaer (2000). Both of these 
developments broaden the concept of 
naturalness of dialogue considerably and present 
to it much stronger requirements concerning its 
empirical adequacy as it has been generally 
accepted thus far. 
1 Model of Conversation Agent 
In our model a conversation agent, A, is a 
program that consists of 6 (interacting) modules: 
A = (PL, PS, DM, INT, GEN, LP), 
where PL - planner, PS - problem solver, DM - 
dialogue manager, INT - interpreter, GEN - 
generator, LP - linguistic processor. PL directs 
the work of both DM and PS, where DM 
controls communication process and PS solves 
domain-related tasks. The task of INT is to make 
semantic analysis of partner's utterances and 
that of GEN is to generate semantic 
representations of agent's own contributions. LP 
carries out linguistic analysis and generation. 
Conversation agent uses in its work goal base 
GB and knowledge base KB. In our model, KB 
consists of 4 components: 
KB = (KBw, KBL, KBD, KBs), 
where KBw contains world knowledge, KBL - 
linguistic knowledge, KBD - knowledge about 
dialogue and KBs - knowledge about interacting 
subjects. For instance, KBD contains definitions 
of communicative acts, turns and transactions 
(declarative knowledge), and algorithms that are 
applied to reach communicative goals - 
communicative strategies and tactics (procedural 
knowledge); KBs contains knowledge about 
evaluative dispositions of participants towards 
the world (e.g. what do they consider as pleasant 
or unpleasant, useful or harmful), and, on the 
other hand, algorithms that are used to generate 
plans for acting on the world. 
A necessary precondition of a communicative 
interaction is existence of shared (mutual) 
knowledge of interacting agents. This concerns 
goal bases as well as all types of knowledge 
bases; the intersections of the corresponding 
bases of interacting agents A and B cannot be 
empty: GB g n GB a ~:~, KBAw n KBBw ~,  
KBAL n KBBL ~O, KI3AD n KBBD ~,  KB ABS 
KBBs :.7~:~, KBBAs ("h KBAs -~:~. 
In this paper we will consider a specific type of 
dialogue where the communicative goal of agent 
A is to get agent B to agree to carry out an 
action D - so-called agreement negotiation 
dialogue. We will concentrate here on dialogue 
management i  such kind of interaction, i.e. on 
the functioning of the module DM. 
2 Dialogue Management 
2.1 Reasoning Model 
A dialogue participant chooses his/her esponses 
to the parter's communicative acts as a result of 
certain reasoning process. After A has made B a 
proposal to do D, B can respond with agreement 
or rejection, depending on the result of his/her 
reasoning. 
Because we consider the model of natural 
human reasoning as one of the important 
components in attaining naturalness of dialogue 
as a whole, we will discuss our model of 
reasoning in some detail. From the point of view 
of practical NLP the approach we will present 
below may seem too abstract. But without solid 
theoretical basis it will appear impossible to 
guarantee naturalness ofdialogues carried out by 
computers with human users. We think that the 
model we describe here can be taken as a basis 
for the corresponding discussion. 
Our model is not based on any scientific theory 
of how human reasoning proceeds; our aim is to 
model a "naive theory of reasoning" which 
humans follow in everyday life when trying to 
understand, predict and influence other persons' 
decisions and behavior, see Koit and C)im 
(2000). The reasoning model consists of two 
functionally linked parts: 1) a model of human 
motivational sphere; 2) reasoning schemes. 
103 
In the motivational sphere three basic factors 
that regulate reasoning of a subje, ct concerning D 
are differentiated. First, subject may wish to do 
D, if pleasant aspects of D for him/her 
overweight unpleasant ones; .second, subject 
may fmd reasonable to do D, if D is needed to 
reach some higher goal, and useful aspects of D 
overweight harmful ones; and tlfird, subject can 
be in a situation where he/she must (is obliged) 
to do D - if not doing D will lead to some kind 
of punishment. We call these; factors wish-, 
needed- and must-factors, respectively. 
For instance, in reasoning about some action D 
(e.g. proposed by another agent), an agent as an 
individual subject ypically starts with checking 
his/her wish-factor, i.e. whether D's pleasant 
aspects overweight unpleasant ones. If this 
holds, then the subject checks his/her esources, 
and if these exist, proceeds to other positive and 
negative aspects of D: its usefulness and 
harmfulness, and if D is prohibited, then also 
possible punishment(s). If the positive aspects in 
sum overweight negative ones, the resulting 
decision will be to do D, otherwise - not to do 
D. 
There can exist other typical situations. If the 
agent is an "official" person, or a group of 
subjects formed to fulfil certain tasks and/or to 
pursue certain pre-established goal(s), then 
typically the starting point of reasoning is 
needed- and/or mast-factor. 
This means that there exist certain general 
principles that determine how the reasoning 
process proceeds. These principles depend, in 
part, on the type of the reasoning agent. Before 
starting to construct a concrete reasoning model 
the types of agents involved should be 
established. In our implementation the agent is 
supposed to be a "simple" human being and the 
actions under consideration are from everyday 
life. In this case as examples of such principles 
used in our model we can present the following 
ones. For more details, see Oim (1996). 
P1. People prefer pleasant (more pleasant) 
states to unpleasant (less pleasant) ones. 
P2. People don "t take an action of which they 
don't assume that its consequence will be a 
pleasant (useful) situation, or avoidance of an 
unpleasant (harmful) situation. 
The following principles illustrate more concrete 
(operational) rules. 
P3. In assessing an action D the values of 
(internal - wish- and needed-)factors are 
checked before the external (must-) factors. 
P4. I f  D is found pleasant enough (i.e. D's 
pleasant aspects overweight unpleasant ones), 
then the needed- and must-factors will first be 
checked from the point of view of their negative 
aspects ("to what harmful consequences or 
punishments D would lead? "~). 
The rule P4 explains, for example, why in 
Figure 1 step 1 is immediately followed by step 
2. 
The weights of different aspects of D 
(pleasantness, unpleasantness, usefulness, 
harmfulness, punishment for doing a prohibited 
action or not-doing an obligatory action) must be 
summed up in some way. Thus, in a 
computational model weights must have 
numerial values. In reality people do not operate 
with numbers but, rather, with some fuzzy sets. 
On the other hand, existence of certain scales 
also in human everyday reasoning is apparent. 
For instance, for the characterisation of pleasant 
and unpleasant aspects of some action there are 
specific words: enticing, delighOCul, enjoyable, 
attractive, acceptable, unattractive, displeasing, 
repulsive etc. Each of these adjectives can be 
expressed quantitatively. This presupposes 
empirical studies, though. 
We have represented the model of motivational 
sphere by the following vector of weights: 
w A = (w(resourcesAol), w(pleasAm), 
w(unpleasAm), w(useAm), w(harmAm), 
w(obligatoryAm), w(prohibitedAm), 
w(punishgm), w(punishAnot.Di),..., 
w(resourcesADn), w(pleasAon), w(unpleasADn), 
W(useAD~), w(harmAo,), w(obligatoryAD,), 
w(prohibitedADn), w(punishAm), 
W(punishAnot.Dn)). 
Here D~, ..., Dn represent human actions; 
W(resourcesADi)=I, if A has resources necessary 
to do Di (otherwise 0); w(obligatoryAsi)=l, if Di 
is obligatory for A (otherwise 0); 
w(prohibitedADi)=l, if Di is prohibited for A 
(otherwise 0). The values of other weights are 
non-negative natural numbers. 
The second part of the reasoning model consists 
of reasoning schemas, that supposedly regulate 
human action-oriented reasoning. A reasoning 
scheme represents teps that the agent goes 
through in his reasoning process; these consist in 
computing and comparing the weights of 
104 
different aspects of D; and the result is the 
decision to do or not to do D. 
Figure 1 presents the reasoning scheme that 
departs from the wish of a subject o do D. 
The scheme also illustrates one of the general 
principles referred to above. It explains the order 
the steps are taken by the reasoning agent: if a 
subject is in a state where he/she wishes to do D, 
then he/she checks first the harmful/useful 
aspects of D, and after this proceeds to aspects 
connected with possible punishments. 
Presuppos i t ion :  
w(pleas)  > w(unp leas) .  
i) 
for do ing  D? 
If not  then not  to do D. 
2) I s  w(p leas)  > w(unpleas)  + 
w(harm)?  
If not  then go to step 6. 
3) Is D proh ib i ted?  
If not  then to do D. 
4) Is w(pleas)  > w(unpleas)  + 
w(harm) + w(punishD)? 
If yes then to do D. 
5) Is w(pleas)  + w(use) > 
w(unpleas)  + w(harm) + 
w(punish~)? 
If yes  then to do D else 
not  to do D. 
6) Is w(p leas)  + w(use) > 
w(unpleas)  + w(harm)?  
If yes  then go to step 9. 
7) Is D ob l igatory?  
If not  then not  to do D. 
8) Is w (pleas) + w (use) + 
w (punishnot. ~) > w (unpleas) + 
w (harm) ? 
If yes  then to do D else 
not  to do D. 
9) Is D proh ib i ted?  
If not  then to do D. 
i0) Is w (pleas) + w(use) > 
w (unpleas) + w (harm) + 
w (punish~) ? 
Are there  enough resources  
If yes  then to do D else 
not  to do D. 
Figure 1. The reasoning procedure that departs 
from the wish of  a subject to do D. 
The prerequisite for triggering this reasoning 
procedure is w(pleas) > w(unpleas), which is 
based on the following assumption: if a person 
wishes to do something, then he/she assumes 
that the pleasant aspects of D (including its 
consequences) overweigh its unpleasant aspects. 
The same kinds of reasoning schemes are 
constructed for the needed- and must-factors. 
The reasoning model is connected with the 
general model of conversation agent in the 
following way. First, the planner PL makes use 
of reasoning schemes and second, the KBs 
contains the vector w A (A's subjective 
evaluations of all possible actions) as well as 
vectors w AB (A's beliefs concerning B's 
evaluations, where B denotes agents A may 
communicate with). The vector w As do not 
represent truthful knowledge, it is used as a 
partner model. 
When comparing our model with BDI model, 
then belier are represented byknowledge of the 
conversation agent with reliability less than 1; 
desires are generated by the vector of weights 
WA; and intentions correspond togoals in GB. In 
addition to desires, from the weights vector we 
also can derive some parameters of the 
motivational sphere that are not explicitly 
covered by the basic BDI model: needs, 
obligations and prohibitions. Some wishes or 
needs can be stronger than others: if w(pleasADi) 
- W(unpleasAoi) > w(pleasAoj) - w(unpleasAt~), 
then the wish to do Di is stronger than the wish 
to do Dj. In the same way, some obligations 
(prohibitions) can be stronger than others, 
depending on the weight of the corresponding 
punishment. I  should be mentioned that adding 
obligations to the standard BDI model is not 
new. Traum and Allen (1994) show how 
discourse obligations can be used to account in a 
natural manner for the connection between a 
question and its answer in dialogue and how 
obligations can be used along with other parts of 
the discourse context to extend the coverage of a 
dialogue system. 
2.2 Communicative Strategies and 
Tactics 
Knowledge about dialogue KBD, which is used 
by the Dialogue Manager, consists of two 
functional parts: knowledge of the regularities of 
dialogue, and rules of constructing and 
combining speech acts. 
The top level concept of dialogue rules in our 
model is communicative strategy. This concept 
is reserved for such basic communication types 
as information exchange, directive dialogue, 
105 
phatic communication, etc. On the more 
concrete level, the conversation agent can realise 
a communicative strategy by means of several 
communicative tactics; this concept more 
closely corresponds to the: concept of 
communicative strategy as us~l in some other 
approaches, ee e.g. Jokinen (1996). In the case 
of directive communication (which is the 
strategy we are interested in) the agent A can use 
tactics of enticing, persuading, threatening. In 
the case of enticing, A stresses pleasant aspects, 
in the case of persuading - usel~ aspects of D 
for B; in the case of ordering A addresses 
obligations of B, in the case of threatening A 
explicitly refers to possible punishment for not 
doing D. 
Which one of these tactics A chooses depends 
on several factors. There is one: relevant aspect 
of human-human communication which is 
relatively well studied in pragmatics of human 
communication a d which we have included in 
our model as the concept of communicative 
space. 
Communicative space is defined by a number of 
coordinates that characterise the relationships of 
participants in a communicative ncounter. 
Communication can be collaborative or 
confrontational, personal or impersonal; it can 
be characterised by the social distance between 
participants; by the modality (friendly, ironic, 
hostile, etc.) and by intensity (peaceful, 
vehement, etc.). Just as in case of motivations of 
human behaviour, people have an intuitive, 
"naive theory" of these coordinates. This 
constitutes a part of the social conceptualisation 
of communication, and it also should not be 
ignored in serious attempts to model natural 
communication in NLP systems. 
In our model the choice of a communicative 
tactics depends on the "point" of the 
communicative space in which the participants 
place themselves. The values of the coordinates 
are again given in the form of numerical values. 
The communicative strategy can be presented as 
an algofithra (Figure 2). 
Figure 3 presents a tactic of  enticement. 
In our model there are three different 
communicative tactics that A can use within the 
frames of the directive communicative strategy: 
those of enticement, persuasion and threatening. 
Each communicative tactic constitutes a 
procedure for compiling aturn in the ongoing 
dialogue. 
i) Choose the communicat ive 
tactic. 
2) Implement the tactic to 
generate an expression (inform 
the partner of the communicat ive 
goal). 
3) Did the partner agree to do 
D? If yes then f inish (the 
communicat ive goal has been 
reached). 
4) Give up? If yes then f inish 
(the communicat ive goal has not 
been reached). 
5) Change the communicat ive 
tactic? If yes then choose the 
new tactic. 
6) Implement the tactic to 
generate an expression. Go to 
step 3. 
Figure 2. Communicative strategy used by the 
initiator of communication. 
i) If wB(resources)=0 then 
present a counterargument in 
order to point at the presence 
of possible resources or at the 
poss ib i l i ty  to gain them. 
2) If w s(harm) > w as(harm) then 
present a counterargument in 
order to downgrade the value of 
harm. 
3) If wB(obligatory)=l & 
w B (punish .... o) < w~ (punishno~-~) then 
present a counterargument in 
order to decrease the weight of 
the punishment. 
4) If wB (prohibited) =l & 
w ~(punis~) > w ~(punis~)  then 
present a counterargument in 
order to downgrade the weight of 
the punishment. 
5) If wB(unpleas) > w~(unpleas) 
then 
present a counterargument in 
order to downgrade the value of 
the unpleasant aspects of D. 
6) Present a counterargument in 
order to stress the p leasant  
aspects of D. 
Figure 3. A's tactics of enticement 
106 
The tactic of enticement consists in increasing 
B's wish to do D; the tactic of persuasion 
consists in increasing B's belief of the usefulness 
of D for him/her, and the tactic of threatening 
consists in increasing B's understanding that 
he/she must do D. 
Communicative tactics are directly related to the 
reasoning process of the partner. I rA is applying 
the tactics of enticement he/she should be able to 
imagine the reasoning process in B that is 
triggered by the input parameter wish. If B 
refuses to do D, then A should be able to guess 
at which point the reasoning of B went into the 
"negative branch", in order to adequately 
construct his/her eactive turn. 
Analogously, the tactic of persuasion is related 
to the reasoning process triggered by the needed- 
parameter, and the threatening tactic is related to 
the reasoning process triggered by the must- 
parameter. For more details see, for example, 
Koit (1996), Koit and 0im (1998), Koit and Oim 
(1999). 
Thus, in order to model various communicative 
tactics, one must know how to model the process 
of reasoning. 
2.3 Speech Acts 
The minimal communicative unit in our model is 
speech act (SA). In the implementation wemake 
use of a limited number of SAs the 
representational formalism of which is flames. 
Figure 4 presents the frame of SA Proposal in 
the context of co-operative interaction. Other 
SAs are represented in the same form. Each SA 
contains a static (declarative) and a dynamic 
(procedural) part. The static part consists of 
preconditions, goal, content (immediate act) and 
consequences. The dynamic part is made up 
from two kinds of procedures: 1) those that the 
author of the SA applies in the generation of a 
communicative turn that contains the given SA; 
2) those that the addressee applies in the process 
of response generation. 
As one can see, such a two-part representation 
contains also rules for combining SAs in a turn, 
and on the other hand, guarantees coherence of 
turn-takings: when we have tagged in KBD 
initiating SAs (such as Question or Proposal), 
then the following chain of SAs follows from 
the interpretation-generation procedures as 
applied by participants. 
PROPOSAL (author A, rec ip ient  B, 
A proposes  B to do an act ion D) 
I. Stat ic  part  
SETTING 
(i) A has a goal G 
(2) A be l ieves  that B in the 
same way has the goal G 
(3) A be l ieves  that in order  to 
reach G an inst rumenta l  goal  
G i shou ld  be reached 
(4) A be l ieves  that B in the 
same way be l ieves  that in 
order  to reach G an 
inst rumenta l  goal  G i shou ld  be 
reached 
(5) A be l ieves  that to a t ta in  
the goal Gi B has to do D 
(6) A be l ieves  that B has 
resources  for do ing  D 
(7) A be l ieves  that B wi l l  
dec ide to do D 
GOAL:  B dec ides  to  do D 
CONTENT:  A in fo rms B that  
he /she  w ishes  B to  do D 
CONSEQUENCES 
(i) B knows the SETTING, GOAL 
and CONTENT 
(2) A knows that B knows the 
SETTING, GOAL and CONTENT 
II. Dynamic  part  
Generating procedures (A's 
poss ib i l i t i es  to bu i ld  h i s /her  
turn that conta ins Proposal  as 
the dominant  SA). 
A has Goal G; A be l ieves  that B 
also has Goal  G; A be l ieves  that 
in order  to reach G, Gi shou ld  be 
reached; A has dec ided  to 
formulate this as Proposal  to B 
to do D. 
Procedures (before fo rmulat ing  
the turn) cons ist  in check ing  
whether  the precond i t ions  of 
proposa l  ho ld  and in mak ing  
dec is ions about in format ion  to 
be added in the turn: 
- in case of (2) : is G 
actua l i sed  in B? If not, then 
actua l i se  it by adding SA 
Inform; 
- in case of (4) : does B 
be l ieve  that in order  to 
reach B, G~ shou ld  be reached 
first. If not, then add SA 
Exp lanat ion  (Argument); 
- in case of (6) : if A is not  
sure that B has resources  for 
D, then add Quest ion;  
- in case of (7) : if A is not  
sure that B wi l l  agree to do 
107 
D (for this A shou ld  model  
B's reasoning)  , then add 
Argument .  
Procedures of interpretation- 
generation 
(B's poss ib i l i t i es  to react  to 
proposal )  are s tar ted  after  B 
has recogn ised  SA Proposal :  
- in case of (2), (4), (5) : if 
B does not  have  Goal  G and/or  
he /she  does not  haw~ the 
cor respond ing  be l ie fs  and A 
has not  p rov ided  the needed 
add i t iona l  in format ion,  then 
add Quest ion  (ask for 
add i t iona l  in format ion)  ; 
- in case of (6) : if B does 
not  have  Resources  for D, 
then Re jec t  + Argument ;  
- in case of (7) : if the 
dec is ion  of B to do D (as the 
resu l t  of the app l i ca t ion  of 
reason ing  scheme (s)) is 
negat ive ,  then Re jec t  + 
Argument .  
Figure 4. Speech act Proposal in the context of 
co-operative interaction. 
Such a representation does not guarantee 
coherence of dialogic encounters (transactions) 
on a more general level. For instance, it does not 
cover such phenomena as topic change, 
inadequate responses caused by 
misunderstandings; but, more importantly, also 
various kinds of initiative overtakings. For 
instance, after rejecting the Proposal made by A, 
B can, in addition to explaining the rejection by 
Argument, initiate various "compensatory" 
communicative activities. Such things are 
normal in human co-operative interaction and 
they are regulated by general pragmatic 
principles that require from participants, in 
addition to being co-operative and informative, 
also being considerate and helpful. In our case 
this means that KBo should also include general 
level dialogue scenarios (in the form of a graph) 
and formalisations of the mentioned pragmatic 
principles; for an example of the latter, see 
Jokinen (1996). 
3 Process of Dialogue 
Let us describe the case where both A and B are 
intelligent agents; i.e. computer programs. 
1. A constructs 
a) the frame exemplar of D, putting in it all 
relevant information A has about D; 
b) the model of partner B, putting in it all 
relevant information it has about B's 
evaluations concerning the contents of the 
slots in D's frame. 
2. A chooses the point in communicative space 
from which it intents to start he interaction. 
3. A starts to apply communicative strategy. A
models B's reasoning process, using B's 
model. First A applies the reasoning scheme 
based on the wish of B. If it results in 'to do 
D', then A actualises the tactic of enticing 
and generates its first turn which contains a
frame exemplar of Proposal. If the result of 
modelled reasoning results in 'not to do D', 
then A tries reasoning which starts from 
needed-factor and then the one triggered by 
must-factor, and according to the result 
actualises tactics of persuading or 
threatening, and generates the first utterance. 
If the application of all reasoning schemes 
results in 'not to do D', then A abandons its 
goal. 
4. B interprets A's turn and recognises 
Proposal in it. B constructs it's the exemplar 
representation f D (this may not coincide 
with that of A). B starts reasoning, in the 
course of which it may need additional 
information from A. On the basis of the 
frame of Proposal B formulates the result of 
reasoning as its response turn: yes/no + 
(maybe) Argument. 
5. A interprets B's answer and determines 
which point in the dialogue scenario this 
corresponds to. If B's answer was positive 
(decision to do D), then according to 
communicative strategy the encounter has 
come to its successful end. If B's answer is 
negative, then according to the dialogue 
scenario A must formulate a 
(counter)Argument. The communicative 
strategy also allows to choose a new point in 
communicative space and/or a new merle. 
To formulate the counter-argument, A uses 
information from the exemplar of D (it may 
be updated on the basis of B's negative 
answer) and its model of B (which it had to 
108 
change because of B's negative answer). A 
models anew B's reasoning, i.e. the process 
is repeated cyclically. 
4 Dialogue examples 
4.1 Example 1 
The example represents a dialogue where the 
computer plays A's role and is implementing the 
tactic of enticement. The user implements the 
simple tactic: point out little pleasantness and 
unpleasantness of the action. 
Let us suppose that the action D is "travel to 
Venice and conclude a contract there". The 
computer has chosen the tactics of enticement 
and has generated the following user model: 
wAa(resources) = 1, wAB(pleas) =10, 
wAB(unpleas)=4, w~a3(use)=0, wAB(harm)=l 0,
wAB(obligatory)= 1, wAB(prohibited)=0, 
wAB(puniShD)=0 , WAB(puniShnot.D)=6. 
The reasoning procedure WISH on this model 
yields a positive decision. A following dialogue 
was generated (translated from Estonian): 
C(omputer): Do you want to travel to Venice? 
Our f irm needs to conclude a contract here. 
The computer informed the user about its 
communicative goal. 
U(ser) : It.is not interesting for me. 
The user pointed out little pleasantness of the 
action. The computer must correct win(pleas) in 
the user model. The new value of wAS(pleas) 
will be 8. 
C: You can meet interesting people. 
The computer chose its reply from the class of 
expressions for increasing pleasantness. After 
this turn the value ofwaB(pleas) will be 9. 
U: What's so pleasant about this trip? 
The user pointed out little pleasantness once 
more. The corrected value of wAS(pleas) will be 
8. 
C: There are many nice men in Italy. 
After this turn wAB(pleas)=9. 
U: This trip is too intense for me. 
The user indicated unpleasantness of D. The 
corrected value for wm(unpleas) will be 5. 
C: The company will pay all your expenses. 
The computer chose its reply from the class of 
expressions for decreasing unpleasantness and 
supposes that after its reply the value of 
wAa(unpleas) will be 4. 
U: I don "t like to travel. 
The user indicated unpleasantness of the action 
once more. Thus, the new value of wAB(unpleas) 
will be 5. 
C: You can take plane. 
The computer decreased the unpleasantness of D 
once more. The new value of wAB(unpleas) is4. 
U: You are right - I shall travel. 
The user agreed to do D, the communicative 
goal of the computer is achieved. 
C: I am glad. 
4.2 Example 2 
The example represents a dialogue where the 
computer is implementing the tactic of 
threatening. The user implements the tactic as 
before: point out little pleasantness and 
unpleasantness of the action. 
The action D is "travel to Venice and conclude a
contract here" as before. The computer has 
chosen the tactic of threatening and has 
generated the following user model: 
wAB(resources) = 1, wAB(pleas)= 10, 
wAB(unpleas)=4, wAB(use)=4, wAB(harm)=6, 
WAB(obligatory)=l, wAa(prohibited)=0, 
wAB(puniShD)=0, w~(punishnot.D)=8. 
The reasoning procedure MUST on this model 
yields a positive decision thus threatening is
possible. A following dialogue was generated: 
C: You must travel to Venice. Our firm needs to 
conclude a contract here. 
U: It is not interesting for  me. 
The user pointed out little pleasantness of the 
action. The computer must correct wAB(pleas) in 
the user model. The new value of wAB(pleas) 
will be 0. 
C: There are many people interested on getting 
your job. 
Using the tactic of threatening the computer 
chose its reply from the class of expressions for 
increasing punishment for not doing D. After 
this turn the value of wAB(punish~ot.D) will be 9. 
U: What ~ so pleasant about this trip?. 
The user pointed out little pleasantness once 
more. 
C: Refusing will be harmful for  your reputation. 
After this turn WAB(punishnot.D)=10. 
U: This trip is too intense for  me. 
The user indicated unpleasantness of D. The 
corrected value for waB(unpleas) will be 14. 
C: l f  you have money ou can travel by plane. 
109 
The computer chose its reply fi:om the class of 
expressions for decreasing unpleasantness. The 
value ofwAS(unpleas) will be 13. 
U: 1don "t like to travel 
The user indicated unpleasantness of the action 
once more. 
The reasoning procedure MUST on the user 
model will give the negatiw~ decision thus 
threatening is impossible. The computer can't 
choose new tactics because reasoning 
procedures WISH and NEEDED will give on the 
user model the negative decision too. The 
computer must give up. 
C: 1am sorry. 
Conclusion 
At present here exists implemented program 
which can play the role of both A and B in a 
simple communication situation where the goal 
of A is that B would decide to do D. At the 
moment he computer operates with semantic 
representations of linguistic input/output only, 
the surface linguistic part of interaction is 
provided in the form of a list of possible 
utterances. The work on linguistic processor is 
in progress. 
We have deliberately concentrated onmodelling 
the processes of reasoning of conversation 
agents, as these processes form the heart of the 
"cognitive" part of human communication, and 
on modelling the use of communicative 
strategies and tactics which constitute the 
"social" part of communication. 
Although the concepts and models we have 
reported in the paper may seem too abstract 
from the point of view of practical NLP, we are 
convinced that without serious study and 
modelling of  cognitive and social aspects of 
human communication it will appear impossible 
to guarantee naturalness of dialogues carried out 
by a computer system with a human user. 
As we have so far mostly dealt with agre ment 
negotiation dialogues, we have planned as one 
of the practical applications of the system as a 
participant in communication training sessions. 
Here the system can, for instance, establish 
certain restrictions on argument types, on the 
order in the use of arguments and counter- 
arguments, etc. 
Second, we have started to work, using our 
experience in modelling cognitive and social 
aspects of dialogue, on modelling information 
seeking dialogues in the same lines. This type of 
dialogue clearly will be the area where in the 
next few years already systems will be required 
that would be practically reliable, but at the 
same time could follow the rules of natural 
human communication. 
Acknowledgements 
This research was supported by 
Science Foundation (grant No 4467). 
Estonian 
References 
James Allen (1994) Natural Language 
Understanding. 2nd ed. The Benjamin/Cummings 
Publ. Comp., Inc. 
Jennifer Chu-Carroll and Sandra Carberry (1998) 
Collaborative Response Generation in Planning 
Dialogues. Computational Linguistics, 24/3, pp. 
355-400. 
Barbara Di Eugenio, Pamela W. Jordan, Richmond 
H. Tlaomason, Johanna D. Moore (2000) The 
Acceptance Cycle: An empirical investigation of 
human-human collaborative dialogues, to appear 
in International Journal of Human Computer 
Studies. 
Laila Dybkj~er (2000) Preface. - From Spoken 
Dialogue to Full Natural Interactive Dialogue- 
Theory, Empirical Analysis and Evaluation. LREC 
2000 Workshop Proceedings. L. Dybkjaer, ed. 
Athen, pp. 1-2. 
Peter Heeman and Graeme Hirst (1995) 
Collaborating on referring expressions. 
Computational Linguistics, 21/3, pp. 351-382. 
Kristiina Jokinen (1995) Rational Agency. In 
"Rational Agency: Concepts, Theories, Models, 
and Applications", M. Fehling, ed.. Proe. of the 
AAAI Fall Symposium. MIT, Boston, pp. 89-93. 
Kristiina Jokinen (1996) Cooperative Response 
Planning in CDM." Reasoning about 
Communicative Strategies. In "TWLT11. Dialogue 
Management in Natural Language Systems", S. 
LuperFoy, A. Nijholt & G. Veldhuijzen van 
Zauten, ed. Enschede: Universiteit Twente, pp. 
159-168. 
Mare Koit (1996) lmplementing a dialogue model on 
the computer. In "Estonian in the Changing World. 
Papers in Theoretical and Computational 
Linguieties", H. Oim, ed. Tartu, pp.. 99-114. 
Mare Koit and Haldur Oim (2000) Developing a 
model of natural dialogue. In "From spoken 
dialogue to full natural interactive dialogue-theory, 
110 
Empirical analysis and evaluation. LREC2000 
Workshop proceedings", L. Dybkj~r, ed. Athen, 
pp. 18-21. 
Mare Koit and Haldur 0im (1999) Communicative 
strategies in human-computer interaction: amodel 
that involves natural reasoning. In "23. Deutsche 
Jahrestag fiir Kfmstliche Intelligenz". Bonn, 
http://www.ikp.uni-bonn.de/NDS 99/Finals/1 2.ps 
Mare Koit and Haldur Oim (1998) Developing a 
model of dialog strategy. In "Text, Speech, 
Dialogue - TSD'98 Proceedings". Brno, pp. 387- 
390. 
Karen Lochbaum (1998) A Collaborative Planning 
Model of Intentional Structure. Computational 
Linguistics, 24/4, pp. 525-572. 
Haldur Oim (1996) Na~'ve theories and 
communicative competence: reasoning in 
communication. In "Estonian in the Changing 
World. Papers in Theoretical and Computational 
Linguictics", H. C)im, ed. Tartu, pp. 211-231. 
David R. Traum and James F. Allen (1994) 
Discourse Obligations in Dialogue Processing. In 
"Proceedings of the 32rid Annual Meeting of the 
Association for Computational Linguistics (ACL- 
94)", pp 1-8. 
Bonnie Webber (2000) Computational Perspectives 
on Discourse and Dialogue. In "The Handbook of 
Discourse Analysis". D. Schiffrin, D. Tannen, H. 
Hamilton, ed. Blackwell Publishers Ltd. 
111 
Teaching Computational Linguistics at the University of Tartu: 
Experience, Perspectives and Challenges 
 
Mare Koit 
Institute of Computer Science 
University of Tartu 
koit@ut.ee 
Tiit Roosmaa 
Institute of Computer Science 
University of Tartu 
roosmaa@ut.ee 
Haldur ?im 
Department of Linguistics 
University of Tartu 
hoim@psych.ut.ee
 
 
 
 
 
Abstract 
The paper gives a review of teaching 
Computational Linguistics (CL) at the 
University of Tartu. The current 
curriculum foresees the possibility of 
studying CL as an independent 4-year 
subject in the Faculty of Philosophy on 
the bachelor stage. In connection with 
the higher education reform in Estonia, 
new curricula will be introduced from 
the next study year where the 3-year 
bachelor stage will be followed by a 2-
year master?s stage. It will then be 
possible to study CL proceeding from 
two paths: in the Faculty of Philosophy, 
and additionally also in the Faculty of 
Mathematics and Computer Science. 
This way two types of specialists will 
be trained who will hopefully be able to 
complement each other in team-work. 
1 Introduction 
Computational Linguistics as a special subject can 
in Estonia only be studied at the University of 
Tartu (UT). 
Computational linguistics as an independent 
subject has been taught at UT from the study year 
1998/99, various separate courses from the study 
year 1996/97. The curriculum and various new 
courses were developed with the support provided 
by a number of HESP projects. Based on the 
experience of Western universities, the topics of 
linguistics, computer science, mathematics and 
computational linguistics were selected. As the 
subject was launched in the Department of 
Estonian and Finno-Ugric Linguistics, Faculty of 
Philosophy, then linguistic subjects prevail in the 
curriculum. But the tuition is provided jointly by 
two faculties: Faculty of Philosophy teaches 
linguistic subjects, Faculty of Mathematics and 
Computer Science teaches mathematics and 
informatics subjects, the computational linguistic 
subjects have been divided between these two 
faculties. Language of instruction is Estonian. 
Preparing the lectures in new subjects has been 
mostly accompanied by making available these 
materials on the web as well. A number of 
students of computer science and linguistics also 
listen to several computational linguistics lectures 
as electives or optional subjects. Therefore we 
face the problem how to make these subjects 
interesting and manageable for students with 
various qualifications.  
New curricula will take effect as of the study 
year 2002/2003 at UT. According to them, the 3 
year bachelor study is followed by 2-year master 
studies which in turn may be followed by 4-year 
doctoral studies (so far the 4+2+4 year model was 
used). Bachelor studies will provide the general 
basic higher education, master studies will lead to 
a qualification in a specific subject. The new 
modified curriculum takes into account the 
experience obtained in the process of teaching so 
far. In addition to that, the new curriculum for 
                     July 2002, pp. 85-90.  Association for Computational Linguistics.
              Natural Language Processing and Computational Linguistics, Philadelphia,
         Proceedings of the Workshop on Effective Tools and Methodologies for Teaching
computer science foresees the (new) possibility to 
major in language technology. In the following, 
we will present the structure of the curricula and 
our experience so far in teaching the subjects of 
computational linguistics. 
2 Background to tuition 
Tuition can be efficient only when the lecturers 
themselves are active researchers. 
R&D work in computational linguistics and 
language technology  in Estonia is being carried 
out, in addition to UT, in the Institute of the 
Estonian Language (IEL is a research institution) 
and the Institute of Cybernetics of Tallinn 
Technical University. The IEL focuses on 
compiling computer lexicons but also on the 
computer (morphological) processing of Estonian. 
The topics at the Institute of Cybernetics include 
the generation of spoken Estonian (together with 
IEL), the Institute has also started compiling 
databases necessary for speech recognition.  
The R&D at the University of Tartu has 
focused on the computer analyses of Estonian 
texts and compiling the text corpora of Estonian 
underlying that research. The major research 
topics include  
 
 Formalising the morphology and syntax of the 
Estonian language  
 
 Formalising the semantics of Estonian (incl 
compiling a lexico-semantic database) 
 
 Pragmatics: modelling the Estonian (spoken) 
dialogue. 
Based on the results of the research, various 
linguistic software and resources have been 
elaborated at UT: 
 
   
 
 The morphological analyser and generator of 
Estonian; the university spin-off language 
software company Filosoft in turn has used 
these resources for creating the Estonian spell 
checker and hyphenator (included in the MS 
Office package)  
 
 Estonian morphologic disambiguator and 
syntax analyser 
 
 Various corpora of written Estonian for the 
period 1890-1990 (total 3 million words), 
partly morphologically and syntactically 
tagged 
 
 A corpus of spoken Estonian (300 000 words 
transliterated), and a corpus of Estonian 
dialogues based on it (60 000 words). 
 
UT computational linguists have participated in a 
number of international projects, e.g. GLOSSER, 
MULTEXT-EAST, TELRI-I, TELRI-II, 
CONCEDE, EuroWordNet, BABEL, to name 
some, and carried out numerous projects 
commissioned by the Estonian Science 
Foundation and the Estonian Informatics Centre.  
The plans for the next years include further 
development of language software, incl 
morphological and semantic disambiguator and 
the syntactic analyser and generator, to study and 
model the formal structure of dialogues, to expand 
the tagged corpora. All these outputs can be used 
in various language technology applications, from 
aids to the text compiler (e.g. grammar and style 
checkers in a text editing programme) to machine 
translation or man-machine dialogue in Estonian. 
Previously, in 1960s, UT was engaged in 
language statistics and automated information 
retrieval (in 1970s, an information retrieval 
system for legal texts was developed at UT).  
In the second half of 1960s, a special structural 
linguistics work group (the so-called generative 
grammar group) was active at the Department of 
the Estonian Language. It included lecturers, 
doctoral students and students. Quite a few of the 
present computational linguists received their first 
knowledge of CL from that group.   
Until 1998, obtaining the CL education was 
only possible according to individually tailored 
study plans.  
3 Curriculum 
3.1 Earlier experience 
While elaborating the CL curriculum and 
preparing and modifying new courses, we have 
tried to take into account the experience of other 
universities.  
As demonstrated by a questionnaire carried out 
in March 1999 in 60 European universities where 
CL is being taught (de Smedt et al, 1999), three 
options are basically used in teaching CL and 
language technology: 

 A minor in philology (dominating) 

 A minor in Computer  Science  

 An independent subject.  
The curricula typically include 4 blocks of 
subjects: 
1) Linguistics 
2) Computer Science 
3) Mathematics 
4) Computational Linguistics 
At UT, as already mentioned, CL is taught as 
an independent subject in the Faculty of 
Philosophy. The amount of studies is 
characterised by the number of credit points (CP) 
where 1 CP corresponds to 40 hours of work by 
the student (incl. independent work). The total 
amount of the 4-year bachelor studies is 160 CP. 
In the current curriculum, the amount of CL is 
60 CP and it includes the same 4 typical blocks as 
named above: 
Linguistics 20 CP 
Computer Science 3 CP 
Mathematics 10 CP 
Computational Linguistics 27 CP, from them 
electives 4 CP and the bachelor thesis 12 CP.  
As may be seen, the block of Computer 
Science is very small (presently, it includes only 
the subjects ?Prolog for linguists?, 2 CP, and 
?UNIX for linguists?, 1 CP). In the new 
curriculum, we have increased the importance of 
that block. 
3.2 New curriculum 
The necessity for the new curriculum was 
prompted by the higher education reform in 
Estonia. The reform was launched in 2000 and is 
based on various international documents and 
agreements (Magna Charta Universitatum). 
The main objectives of the Estonian higher 
education reform are:  
 
 to expand the cross-curriculum share 
of subject areas by widening the 
opportunities of interdisciplinary 
studies; 
 
 to simplify the system of university 
education levels; 
 
 to simplify and expand the 
opportunities of students from 
different specialities to continue their 
studies in other universities (also 
outside Estonia). 
The Bachelor level education will be achieved 
after completing a 3-year curriculum (nominal 
study period, 120 CP). The Master level education 
will be achieved upon completing a 5-year 
curriculum (nominal study period, 200 CP). The 
Doctoral level education will be achieved upon 
completing a 9-year curriculum (nominal study 
period, 360 CP) and defending the doctoral thesis. 
Bachelor studies will provide general 
theoretical education at the university level. In the 
first year, the students study subjects shared by 
the curricula of one broad field. The second year 
they study following the narrow field module and 
the third year is devoted to specialised subjects. 
Master studies will provide special, 
professional knowledge and vocational skills. 
The ?Estonian and Finno-Ugric linguistics? 
curriculum that will become operational in the 
Faculty of Philosophy foresees the possibility of 
majoring in computational linguistics. 
In the bachelor studies one has to take 
 
 two obligatory  base modules: 
?Humanities? (16 CP) and ?Estonian 
philology? (16 CP);  
 
 obligatory narrow field module ?Estonian 
and Finno-Ugric linguistics? (16 CP);   
 
 obligatory speciality module 
?Computational linguistics? (20 CP, incl a 
bachelor?s thesis 4 CP);  
 
 two modules of elective subjects  (each 16 
CP) from the list of  the following subjects: 
?Estonian language?, ?Estonian language 
and culture for non-Estonians?, ?Finnish 
language and culture?, ?Finno-Ugric 
languages?, ?Hungarian language and 
culture? and ?General linguistics?;  
 
 electives and optional subjects (20 CP) that 
may be chosen from any curriculum.  
The CL speciality module entails the following 
subjects: ?Mathematics for computational 
linguists I?, ?Programming?, ?Data analysis in 
humanities?, ?Linguistic theories for 
computational linguists?, each amounting to 4 CP. 
Upon completing bachelor studies, the student 
will receive the Bachelor degree in Estonian and 
Finno-Ugric linguistics. As a rule, this education 
will not guarantee entry to the labour market (at 
least not as a computational linguist) but has to be 
followed by master studies. It is assumed that at 
least 75% of students admitted to bachelor studies 
will continue their master studies. 
Master studies curriculum comprises of 
speciality studies (56 CP), master thesis (20 CP) 
and optional subjects (4 CP). A prerequisite for 
starting the master?s studies is either a bachelor?s 
degree or education level corresponding to it. A 
preliminary condition for entrance to the CL 
speciality is having taken the speciality module 
during the bachelor studies. Thus every person 
with a bachelor?s degree who has taken the 4 
subjects comprising the CL speciality module may 
enter the CL master?s studies.  
In master studies, the CL speciality studies will 
consist of compulsory subjects (22 CP) and 
electives (34 CP). The compulsory subjects are 
?Introduction to CL?, ?Corpus linguistics?, 
?Language technology?, ?Mathematics for 
computational linguists II? and the master?s 
seminar. The list of electives is open and will be 
updated according to requirements and 
possibilities. 
The present list includes subjects from 
linguistics, computer science and CL.  
Linguistics subjects include, for example 
?Phonology and morphology?, ?Syntax of 
Estonian?, ?Semantics?, ?Theories of linguistic 
communication?, ?Pragmatics?. Computer science 
subjects included in the list are ?Artificial 
Intelligence I and II?, ?Applied software: Perl?, 
?Databases?; Computational Linguistics subjects 
include such as ?Computational morphology?, 
?Computational lexicology?, ?Syntactic analyser?, 
etc.  
The majority of the subjects are the same that 
have been and are taught within the existing 
curriculum but there will also be several new 
ones, e.g. ?Statistical models of natural 
languages? and ?Introduction to speech 
technology?. 
The qualification conferred to a graduate  will 
be that of master of Estonian and Finno-Ugric 
linguistics (computational linguistics). This is a 
specialist whose computational linguistics 
education is based on linguistics (this has been the 
case up to now when studying according to the 
present curriculum). 
4 A new opportunity: language 
technology 
In connection with preparing new curricula it 
became possible to start preparing computational 
linguists with a different  education at UT based 
on computer science ?language technology 
studies. Proceeding from the new computer 
science curriculum to come into force in the 
Faculty of Mathematics and Computer Science it 
is possible to choose  blocks of linguistics and CL 
subjects that have been named language 
technology modules (to differentiate them from 
the CL modules of the curriculum of Estonian and 
Finno-Ugric linguistics in the Faculty of 
Philosophy). 
Bachelor studies in computer science will 
provide general knowledge in the classical 
branches of mathematics and basic knowledge of 
computer software, hardware, networks and 
systems, artificial intelligence, software 
technologies and data protection and a certain 
amount of practical skills for work in the 
computer science (incl programming skills). It is 
possible to choose between theoretical computer 
science, software systems and  language 
technology. Upon completing bachelor studies, 
the student will receive the Bachelor degree in 
Computer Science. 
The language technology narrow field module 
(16 CP) comprises the subjects ?Language 
technology?, ?Introduction to CL?, ?Corpus 
linguistics?, ?Introduction to general linguistics? 
and ?Database theory?. 
Master studies in computer science will 
provide profound knowledge in one area of the 
computer science enabling the person to carry out 
development activities in that area; skills to 
provide consultations; team-work and project  
management skills. It is possible to major in   
theoretical computer science, cryptology or 
language technology. 
The qualification conferred to a graduate will 
be that of master of computer science.  
A prerequisite for entrance to master?s studies 
is the bachelor?s degree in the computer science 
(or in a close speciality) and prerequisite subjects 
amounting to 20 CP (Object-oriented 
programming, Algorithms and data structures, 
Introduction to mathematical logics, Elements of 
discrete mathematics, Algebra I, Data bases). 
The didactics of informatics and master 
seminar are compulsory for all master students 
(both 4 CP); optional subjects may be chosen for 
the amount of 4 CP. 
Those who major in language technology will 
have the following compulsory subjects in master 
studies: Software technology, Automata, 
languages and translators, Graphs, Theory of 
databases, Artificial Intelligence I, Computational 
morphology, Syntax theories and models, 
Computational lexicology, Semantics, Statistical 
models of natural languages, total 32 CP. In 
addition to that, 16 CP of electives from the open 
list that will be updated according to needs and 
opportunities as the similar list for computational 
linguistics 
Although these two lists have a quite big 
overlapping area they are not the same. In case of 
computational linguistics, linguistic subject will 
take up a major part of the list; in case of 
language technology, computer science subjects 
will replace them (e.g. Methods of logical 
programming, Methods of functional 
programming, Systems modelling, Formal 
languages). 
Therefore, a person who has completed this 
curriculum is an information scientist who has 
additionally studied linguistic and  computational 
linguistic subjects to such an extent that he/she 
will have a systematic picture of the tasks of 
natural language processing and will be able to 
solve these tasks in co-operation with linguists. 
5 Problems 
The modules of CL and LT contain a number of 
common subjects that have also to be taught 
jointly to the students majoring in CL and LT. 
Preceding from earlier experience it may be 
assumed that the total number of listeners will not 
be big but they are with varied  preparation. While 
teaching according to the present curriculum there 
have been groups including CL students, students 
from different linguistics fields (Roman-German 
philology or Estonian as a foreign language) as 
well as students of computer science. The new 
curricula have ?legalised? the different 
backgrounds of the students. This will be a 
challenge to the lecturers: how to present the 
material in a way that is understandable and  
manageable for the students, at the same time not 
being too simple for some students. So far we 
have overcome the problem by giving different 
assignments to students with different 
background. E.g. the students of computer science 
compile a language processing program while the 
students of linguistics work with language 
corpora. In the future these problems will be more 
acute and require a complex solution. For 
example, how to compose teams of students with 
different qualification in such a way that by 
complementing each other they would be able to 
solve a joint problem.  
Another problem is a small number of students 
attending special courses. One solution to it could 
be the web-based tuition, i.e. not only the 
availability of teaching materials over the web but 
a special distance learning environment 
integrating lecture materials, individualised/ 
personally tailored assignments and check of 
knowledge. UT has successfully implemented the 
learning environment WebCT that already 
includes a number of courses (in the framework of 
the eUniversity project). These do not include any 
CL courses so far which means that we have to 
start preparing them by using the already existing 
web course materials. 
6 Summary 
Our experience in teaching and preparing 
computational linguists is not extensive yet. 
Nevertheless, the first CL students have finished 
their studies and it seems that there will be 
interested students in the future as well. In 
addition to that, students of different subjects 
have attended various CL courses (mainly 
?Introduction to CL? and ?Language 
technology?). Students of CL take part in our 
projects and in our joint seminars thus being 
exposed from the very beginning to real-life tasks. 
Therefore we expect them to become qualified 
labour to universities, research institutions and 
language software companies. 
 
References 
Konraad de Smedt, Hazel Gardiner, Espen Ore, Tito 
Orlandi, Harold Short, Jacques Souillot and William 
Vaughan (eds). 1999. Computing in Humanities 
Education. A European Perspective. 
SOCRATES/ERASMUS thematic network project 
on Advanced Computing in the Humanities. 
University of Bergen. 
Magna Charta Universitatum 
http://www.unige.ch/cre/activities/Magna%20Char-
ta/magna_charta.html    (used 26.03.2002) 
Proceedings of the EACL 2009 Demonstrations Session, pages 25?28,
Athens, Greece, 3 April 2009. c?2009 Association for Computational Linguistics
A comparison of clausal coordinate ellipsis in Estonian and German:  Remarkably similar elision rules allow a language-independent ellipsis-generation module   
Karin Harbusch Computer Science Department University of Koblenz-Landau Koblenz, Germany harbusch@uni-koblenz.de 
Mare Koit & Haldur ?im Research Group of Computational Linguistics University of Tartu Tartu, Estonia mare.koit@ut.ee & haldur.oim@ut.ee  Abstract 
We compare the phenomena of clausal coor-dinate ellipsis in Estonian, a Finno-Ugric lan-guage, and German, an Indo-European lan-guage. The rules underlying these phenomena appear to be remarkably similar. Thus, the software module ELLEIPO, which was origi-nally developed to generate clausal coordi-nate ellipsis in German and Dutch, works for Estonian as well. In order to extend ELLEIPO?s coverage to Estonian, we only had to adapt the lexicon and some syntax rules unrelated to coordination. We describe the language-independent rules for coordinate el-lipsis that ELLEIPO applies to non-elliptical syntactic structures in both target languages. 1 Introduction In written German newspaper text, clausal coor-dination occurs in about 14% of the sentences, and coordinate ellipsis (e.g. (1)) in about 7% (see a corpus study by Harbusch and Kempen, 2007). Studies of ellipsis in Estonian are hardly avail-able (cf. Erelt, 2003). (1) Monopole    sollen  geknackt werden und         Monopolies should shattered     be     and         M?rkte   sollen   getrennt werden         markets should      split       be       'Monopolies should be shattered and markets split? In order to deal with these relatively frequent phenomena, we develop an Estonian coordinate-ellipsis generator based on ELLEIPO, the software module written in JAVA that generates clausal coordinate ellipsis in German and Dutch (Har-busch and Kempen, 2006; 2009). Given the fact that the two target languages belong to two rather different language families (German is an Indo-European, Estonian a Finno-Ugric language) we expected the two target languages to differ con-siderably with respect to the rules for generating coordinate elisions; however, this expectation 
was falsified. As we will detail below, a pairwise comparison of a heterogeneous set of elliptical constructions in the target languages reveals that the German rules we had implemented in ELLEIPO also generate the Estonian structures. We only needed to adapt the lexicon and some syntax rules unrelated to coordination. The core algorithm worked language-independently for both languages. The paper is organized as follows. In section 2, we first define the four main groups of clausal coordinate ellipsis phenomena, and show that the elisions in the two target languages obey basi-cally the same rules. This implies that the Esto-nian version of the software system ELLEIPO can use the same core algorithm as the German and Dutch version. In section 3, we discuss other lin-guistic theories for clausal coordinate ellipsis, especially focussing on implementations for gen-eration. In final section 4, we draw some conclu-sions and address options for future work.  2 Clause-level coordinate ellipsis in Es-tonian and German In the literature, one often distinguishes four ma-jor types of clause-level coordinate ellipsis (which can become combined; cf. example (1)).1 ? GAPPING, with three special variants called LONG DISTANCE GAPPING (LDG), SUB-GAPPING, and STRIPPING, ? FORWARD CONJUNCTION REDUCTION (FCR), ? BACKWARD CONJUNCTION REDUCTION (BCR;                                                 1 We will not deal with the elliptical constructions known as VP Ellipsis, VP Anaphora and Pseudogapping because they involve the generation of pro-forms instead of, or in addi-tion to, the ellipsis proper. For example, John laughed, and Mary did, too?a case of VP Ellipsis?includes the pro-form did. Nor do we deal with recasts of clausal coordina-tions as coordinate NPs (e.g., John likes skating and Peter likes skiing becoming John and Peter like skating and ski-ing, respectively). Presumably, such conversions involve a logical rather than syntactic mechanism. 
25
also called Right Node Raising), and ? SUBJECT GAP IN CLAUSES WITH FINITE/ FRONTED VERBS (SGF). They are illustrated in the English sentences (2) through (8). The subscripts denote the elliptical mechanism at work: g stands for Gapping, Sub-gapping, and Stripping, respectively; g(g)+is re-cursively added for LDG; f = FCR; s = SGF; b = BCR. (2) GAPPING: J?ri lives in Tallinn and his children liveg in Tartu (3) LDG: My wife wants to buy a car and my son wantsg [to buy]gg a motorcycle (4) SUBGAPPING: The driver was killed and the pas-sengers wereg severely wounded (5) STRIPPING: My sister lives in Narva and my brother [lives in Narva]g too (6) FCR: P?rnu is the city [S where Ainar lives and wheref Peeter works]  (7) BCR: Riina arrived before three [o?clock]b and Terje left after six o?clock (8) SGF: Into the wood went the hunter and [the hunter]s shot a hare In the theoretical framework by Kempen (2009) and its implementation for German and Dutch in ELLEIPO, the elision process is guided by constraints on lemma- and wordform-identity constraints and, to some extent, linear order.2 ELLEIPO?s functioning is based on the as-sumption that coordinate ellipsis does not result from the application of declarative grammar rules for clause formation but from a procedural component that interacts with the sentence gen-erator and may block the overt expression of cer-tain constituents. Thus, the rules apply to assem-bled non-elliptical (unreduced) tree structures in the final stage of generation. Due to this feature, ELLEIPO can be combined, at least in principle, with various lexicalized-grammar formalisms. However, this advantage does not come entirely for free: The module needs a formalism-dependent interface that converts generator out-put to a canonical form consisting of ?flat? syn-tactic trees where all major clause constituents                                                 2 Coordinate structures consist of two or more conjuncts connected by a coordinating conjunction (in our exam-ples: and). Rules of coordinate ellipsis license elision of some consituent in one conjunct under ?identity? with a constituent in another conjunct. We distinguish between  lemma identity, where only the word-stems of the constitu-ents have to be identical, and wordform identity, which re-quires not only identity of the stems but also of their mor-phological features. Gapping only requires lemma identity (cf. examples (2) and (4)). In FCR, word-form identity is checked, i.e. the identical word string referring to the same referent (cf. *The boy loves dogs and [the boys]f hate cats). 
are represented at the same hierarchical level (see Harbusch and Kempen 2006; 2007). In the following, we introduce ELLEIPO?s eli-sion rules only in an informal manner (for the pseudocode of the algorithm, see Harbusch and Kempen, 2006; 2009). The rules described in the following can be applied in any order to unre-duced syntactic structures in canonical form. In case of a successful rule application, the elidable constituents (and its non-elided counterpart in the other conjunct) is adorned with a subscript indi-cating the ellipsis type (as illustrated in (2) through (8)). ELLEIPO?s final step executes all possible elliptical combinations (e.g., for exam-ple (1), it also realizes a version with Subgapping and LDG, respectively, i.e.: Monopole sollen geknackt werden und M?rkte solleng getrennt werdengg). In Gapping (see examples (9) and (10)), lemma-identical verbs can be elided from the second conjunct, if and only if a contrast is ex-pressed, i.e. each remaining constituent in this conjunct has a counterpart with the same gram-matical function in the first conjunct (cf. (11)).3 (9)   Mari loeb artikleid ja tema pojad _g pakse raa-matuid        Mari liest  Artikel und ihre S?hne _g dicke B?cher        Mari reads articles and her sons          thick books (10)  J?ri elab  Tartus    ja    Tallinnas  _g tema pojad          J?ri lebt   in Tartu und  in Tallinn _g seine S?hne         J?ri lives  in Tartu  and  in Tallinn       his   sons  (11)  *Mari ostab  pirne   ja    J?ri _g  turul         *Mari kauft Birnen und J?ri _g  auf dem Markt           Mari buys   pears   and  J?ri      on the market In Long-Distance Gapping (LDG), the rem-nants, i.e. the non-elided constituents in the pos-terior conjunct, include constituents whose ante-rior counterparts belong to different clauses. My wife in (12) (translation of (3)) belongs to the main clause whereas a car is  part  of  the infini-tival complement clause. Notice that LDG does not require adjacency of the elided verbs (cf. the German example in (12)). (12)  Minu naine soovib osta autot ja minu poeg soo-vibg ostagg mootorratast         Meine Frau will ein Auto kaufen und mein Sohn               willg ein Motorrad kaufengg In Subgapping, the posterior conjunct includes a remnant in the form of a non-finite complement                                                  3 For lack of space, here we cannot go into aspects of word-order variation (both Estonian and German are languages with relatively free word order). For the same reason, we only discuss examples with two conjuncts (although, ELLEIPO analyses n-ary coordinations as well), and cannot pay attention to coordinate structures that include negation. 
26
clause (?VP?; severely wounded in (13); transla-tion of (4)).  (13)   Juht sai  surma ja reisijad  _g  t?siselt vigastada           Der Fahrer  wurde  get?tet  und die  Passagiere                  _g ernsthaft verletzt Stripping is Gapping with the posterior con-junct consisting of one constituent only. This remnant is not a verb, and it is often supple-mented by a modifier (such too in (14), the trans-lation of (5)). (14)  Mu ?de elab Narvas ja mu vend _g samuti/ka.         Meine Schwester lebt in Narva und mein Bruder          _g ebenso/ auch In Forward-Conjunction Reduction (FCR), a left-peripheral string of major constituents in the right conjunct is elided under wordform-identity with its counterpart in the right conjunct. In FCR example (15), the left-peripheral string compris-ing complementizer, subject and direct object are elided from the right-hand conjunct. If modifiers that are neither lemma- nor wordform-identical, are placed in between subject and object?as in (16)?, then elision of the object is blocked. (Ac-tually, example (16) is not ill-formed but its right-hand conjunct cannot be interpreted as cleaning the bike.) In main-clause variant (17), elision of the direct object is blocked for similar reasons. (15)   ... et  Jan oma jalgratta asjatundlikult parandas      ? dass Jan sein Fahrrad fachkundig     reparierte        ... that   Jan his   bike        expertly         repaired        ja    [et     Jan oma jalgratta]f hoolikalt  puhastas        und [dass Jan sein Fahrrad]f eifrig        putzte         and that   Jan  his   bike          diligently cleaned (16) *? et  Jan asjatundlikult oma jalgratta parandas         ... dass Jan fachkundig   sein Fahrrad reparierte       ja   [et     Jan]f hoolikalt [oma jalgratta]f puhastas        und [dass Jan]f eifrig     [sein Fahrrad]f  putzte (17) *      Jan parandas  oma jalgratta asjatundlikult        *      Jan reparierte sein Fahrrad  fachkundig        ja    Janf puhastas  [oma jalgratta]f hoolikalt         und Janf putzte      [sein Fahrrad]f  eifrig Backward-Conjunction Reduction (BCR) li-censes elision of a right-peripheral string in the left-hand conjunct under lemma-identity4 with its counterpart in the right conjunct. However, un-like FCR?s mirror image, BCR may cut into ma-jor constituents of the clause. In BCR example (18), the direct object can be elided in the first conjunct whereas in word-order variant (19), the verb blocks this elision. Example (20) illustrates that BCR, unlike the three other ellipsis types, may cut into major clausal constituents and only                                                 4 ELLEIPO also checks case-identity to rule out ?Hilf _b[DAT] und reanimier [den Mann]ACC ?Help and reanimate the man? 
checks lemma-identity. Varying the objects to ?new bike?/?old bikes?, and the second subject ?Peter? to ?his brothers? does not rule out ellipsis as long as peripheral access is guaranteed.  (18)        Jan    parandas   [oma jalgratta]b               Jan    reparierte  [sein Fahrrad]b               Jan     repaired     his     bike         ja   Peeter puhastas   oma jalgratta        und Peter  putzte        sein Fahrrad  and Peter  cleaned      his   bike (19) *...  et      Jan      [oma jalgratta]b parandas        * ... dass  Jan     [sein Fahrrad]b  reparierte          ja et        Peeter oma jalgratta puhastas         und dass Peter  sein Fahrrad putzte (20)           Jan            parandas  oma  uue    jalgrattab                  Jan           reparierte sein  neues Fahrradb         ja tema vennad puhastasid oma vanad jalgrattad        und seine Br?der putzten    ihre  alten  Fahrr?der Examples (21)-(23) embody word-order vari-ants within two simple coordinated clauses. The (il)licit elision patterns verify that in BCR the ellipsis should be right-peripheral in the left-hand conjunct, whereas in FCR the ellipsis is located left-peripherally in the right-hand conjunct. (21) Mari loeb _ b  ja   J?ri kirjutab  raamatuid           Mari liest  _ b und J?ri schreibt B?cher         Mari reads      and J?ri  writes    books (22)  * _ b Loeb Mari  ja   raamatuid kirjutab J?ri    * _ b Liest Mari und B?cher     schreibt J?ri            reads Mari and books    writes    J?ri (23)  Raamatuid loeb Mari  ja     _ f  kirjutab J?ri   B?cher      liest  Mari  und _ f   schreibt J?ri   Books       reads Mari and            writes    J?ri SGF (Subject Gap in clauses with Fi-nite/Fronted verb) licenses elision of the subject of the right conjunct if in the left conjunct the subject follows the verb; however, the first con-stituent of the unreduced right-hand clausal con-junct must meet certain special requirements. In particular, it should be the subject of this clause (as in (24), translation of  (8)) or a modifier (25), but not an argument other than the subject, e.g. neither complement nor (in)direct object (26). Additionally, if FCR is also possible, it should actually be realized in order to license SGF (for additional discussion of these restrictions, see Harbusch and Kempen, 2009). (24) Metsa           l?ks  jahimees   ja    _s tappis j?nese In den Wald ging der J?ger und _s schoss einen Hasen.  (25) Miks/Eile oled  sa    l?inud        ja         Warum      bist   du   gegangen  und         Why          have you  left            and            _f    ei ole _s  midagi                                  ?elnud?        _f hast _ s  mich  nicht                              gewarnt?             have not me (Est.)/have me not (Ger.) warned        ?Why did you leave but didn?t you warn me?? 
27
(26) *Seda      veini   ei  joo ma                  *Diesen Wein  trinke ich nicht      This     wine  drink not I (Est.)/drink I not (Ger.)     enam      ja    [selle    veini]f  kallan mas  ?ra     mehr      und [diesen Wein]f  gie?e  ichs  weg          anymore and   this     wine     throw   I     away    ?I don?t drink this wine and  throw it away? Given the similarities between the rules that appear to control clausal coordinate ellipsis in German and Estonian, it is not surprising that  the German/Dutch version of ELLEIPO could be tailored to Estonian easily. ELLEIPO?s language-independent core algorithm generates Estonian ellipsis as well, as shown by the demonstrator. For the sake of completeness, we should add here that we have not been able to find types of clausal coordinate ellipsis in Estonian that go beyond the above four types; hence, as far as we can tell, Estonian does not require additional rules over and above those we needed for Ger-man and Dutch. 3 State of the art in ellipsis generation All major grammar formalisms provide rules for clausal coordinate ellipsis?rules that tend to be intertwined with rules for nonelliptical coordina-tion (e.g. Sarkar and Joshi (1996) for Tree Ad-joining Grammar; Steedman (2000) for Combi-natory Categorial Grammar; Frank (2002) for Functional Grammar; Crysman (2003) and Bea-vers and Sag (2004) for HPSG; and te Velde (2006) for the Minimalist Program). This also applies to many NLG systems (cf. Reiter and Dale, 2000). Generators that do include an autonomous component for coordinate ellipsis? that is, a component that takes unreduced coordi-nations expressed in the system?s grammar for-malism as input and return elliptical versions as output (Shaw, 1998; Dalianis, 1999; Hielkema, 2005)?use incomplete rule sets, thus risking over- or undergeneration, and incorrect or un-natural output.  4 Conclusion Finally, we do not expect that the four types of clausal coordinate ellipsis presented here are ? ?universal? ? in the sense that all natural languages exhibit all four of them and no language has ad-ditional types (see Harbusch and Kempen 2009 for some discussion based on language-typological work by Haspelmath, 2007). How-ever, the experience described in this paper makes us confident that the ??modular ?? approach taken in the ELLEIPO project will prove efficient 
when it comes to writing coordinate ellipsis rules for other languages?especially for languages belonging other language families. References  John Beavers and Ivan A. Sag. 2004. Coordinate El-lipsis and Apparent Non-Constituent Coordination. In: Procs. of  11th Int. HPSG Conf., Leuven, 48-69.  Hercules Dalianis. 1999. Aggregation in natural lan-guage generation. Computational Intelligence, 15: 384-414. Berthold Crysmann. 2003. An asymmetric theory of peripheral sharing in HPSG. In: Procs. of 8th Conf. on Formal Grammar, Vienna. Mati Erelt (Ed.). 2003. Estonian Language. Estonian Academy Publishers, Tallinn. Anette Frank. 2002. A (discourse) functional analysis of asymmetric coordination. In: Procs. of the LFG02 Conf., Athens, pp. 174-196. Karin Harbusch and Gerard Kempen. 2006. ELLEIPO: A module that computes coordinate el-lipsis for language generators that don?t. In: Procs. of 11th EACL, Trento, pp. 115-118. Karin Harbusch and Gerard Kempen. 2007. Clausal coordinate ellipsis in German. In: Procs. of 16th NODALIDA, Tartu, pp. 81-88. Karin Harbusch and Gerard Kempen. 2009. Generat-ing clausal coordinate ellipsis multilingually. In: Procs. of 12th ENLG, Athens.  Martin Haspelmath. 2007. Coordination. In: Timothy Shopen (Ed.), Language typology and linguistic description. Cambridge University Press, Cam-bridge, UK. [2nd Ed] Feikje Hielkema. 2005. Performing syntactic aggre-gation using discourse structures. Unpublished Master?s thesis, Artificial Intelligence Unit, Uni-versity of Groningen. Gerard Kempen. 2009. Clausal coordination and co-ordinate ellipsis in a model of the speaker. Lin-guistics, 47(3).  Ehud Reiter and Robert Dale. 2000. Building natural language generation systems. Cambridge Univer-sity Press, Cambridge, UK. Anoop Sarkar and Aravind Joshi. 1996. Coordination in Tree Adjoining Grammars: Formalization and implementation. In: Procs. of 16th COLING, Co-penhagen, pp. 610?615. James Shaw. 1998. Segregatory coordination and el-lipsis in text generation. In: Procs. of 17th COLING, Montreal, pp. 1220-1226. Mark Steedman.  2000. The syntactic process. MIT Press, Cambridge, MA. John R. te Velde. 2006. Deriving Coordinate Symme-tries: A Phase-Based Approach Integrating Select, Merge, Copy and Match. John Benjamins, Amster-dam. 
28
