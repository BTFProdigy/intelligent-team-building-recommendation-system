Proceedings of the Multiword Expressions: From Theory to Applications (MWE 2010), pages 77?80,
Beijing, August 2010
Contrastive Filtering of Domain-Specific Multi-Word Terms from
Different Types of Corpora
Francesca Bonin? ?, Felice Dell?Orletta?, Giulia Venturi? and Simonetta Montemagni?
? Istituto di Linguistica Computazionale ?Antonio Zampolli? (ILC-CNR)
?Dipartimento di Informatica, Universita` di Pisa,
?CLIC Language Interaction and Computation Lab
{francesca.bonin, felice.dellorletta,
giulia.venturi, simonetta.montemagni}@ilc.cnr.it
Abstract
In this paper we tackle the challenging
task of Multi-word term (MWT) extrac-
tion from different types of specialized
corpora. Contrastive filtering of previ-
ously extracted MWTs results in a con-
siderable increment of acquired domain-
specific terms.
1 Introduction
Multi-word term (MWT) extraction is a challeng-
ing and well-known automatic term recognition
(ATR) subtask, aimed at retrieving complex do-
main terminology from specialized corpora. Al-
though domain sublanguages are characterized by
specific vocabularies, a well-defined border be-
tween specific sublanguages (SLs) and general
language (GL) vocabularies is difficult to establish
since lexicon shifts in a continuum from a highly
specialized area to a transition area between GL
and SLs (Rondeau et al, 1984). Within this con-
tinuum, Cabre? (1999) identifies three types of lex-
ical items: a. GL lexical items; b. SL terms, c.
lexical items belonging to a borderline area be-
tween GL and SL. The proportion of these dif-
ferent types of lexical items varies depending on
the text type. To our knowledge, automatic term
recognition methods proposed so far in the litera-
ture focussed on highly specialized corpora (typ-
ically, technical and scientific literature), mainly
characterized by SL terminology. However, the
same ATR methods may not be equally effective
when dealing with corpora characterized by a dif-
ferent proportion of term types; e.g. from texts
such as Wikipedia articles, which are conceived
for a more extended audience, both SL terms and
common words are acquired as long as they show
a statistically significant distribution. In this pa-
per, we claim that the contrastive approach to
MWT extraction described in Bonin et al (2010)
can be effectively exploited to distinguish be-
tween common words and domain-specific termi-
nology in different types of corpora as well as to
identify terms belonging to different SLs when oc-
curring in the same text. The latter is the case of
legal texts, characterized by a mixture of differ-
ent SLs, the legal and the regulated-domain SLs
(Breuker et al, 2004). Effectiveness and flexibil-
ity of the proposed ATR approach has been tested
with different experiments aimed at the extrac-
tion of domain terminology from corpora charac-
terized by different degrees of difficulty as far as
ATR is concerned, namely (i) environmental sci-
entific literature, (ii) Wikipedia environmental ar-
ticles, and (iii) a corpus of legal texts on environ-
mental domain.
2 General Extraction Method
The MWT extraction methodology we follow is
organized in two steps, described in detail in
Bonin et al (2010). Firstly, a shortlist of well-
formed and relevant candidate MWTs is extracted
from a given target corpus and secondly a con-
trastive method is applied against the selected
MWTs only. In fact, in the first stage, candi-
date MWTs are searched for in an automatically
POS-tagged and lemmatized text and they are then
weighted with the C-NC Value method (Frantzi et
al., 1999). In the second stage, the list of MWTs
extracted is revised and re-ranked with a con-
trastive score, based on the distribution of terms
across corpora of different domains; in particu-
77
lar, the Contrastive Selection of multi-word terms
(CSmw) function, newly introduced in Bonin et
al. (2010), was used, which proved to be partic-
ularly suitable for handling variation in low fre-
quency events. The main benefit of such an ap-
proach consists in its modularity; by first selecting
valid MWTs which have significant distributional
tendencies, and then by assessing their domain-
relevance using a contrastive function, the MWT
sparsity problem is overcome or at lest signifi-
cantly reduced.
3 Experiments
The MWT extraction methodology described
above has been followed in order to acquire envi-
ronmental terminology from three different kinds
of domain corpora. The first experiment has been
carried out on a corpus of scientific articles con-
cerning climate change research of Italian Na-
tional Research Council (CNR), of 397,297 to-
kens, while the second experiment has been car-
ried out on a corpus of Wikipedia articles from
the Italian Portal ?Ecologia e Ambiente? (Ecol-
ogy and Environment) (174,391 tokens). As gen-
eral contrastive corpus, we used, in both cases,
the PAROLE Corpus (Marinelli et al, 2003)1, in
order to filter out GL lexical items. The third
and more challenging experiment has been car-
ried out on a collection of Italian European legal
texts concerning the environmental domain for a
total of 394,088 word tokens. In this case, as con-
trastive corpus we exploited a collection of Ital-
ian European legal texts regulating a domain other
than the environmental one2, in order to extract
MWTs belonging to the environmental domain,
but also to single out legal-domain terms, used in
legal texts. For each acquisition corpus we fol-
lowed the two-layered approach described above,
selecting, firstly, a top list of 2000 environmental
MWTs from the candidate term list ranked on the
C-NC Value score and, secondly, re-ranking this
2000-term list on the basis of the CSmw function;
then we extracted the final top list of 300 envi-
ronmental MWTs. In order to assess the effec-
1It is made up of about 3 million word tokens and it in-
cludes Italian texts of different types.
2A corpus of Italian European Directives on consumer
protection domain for a total of 74,210 word tokens.
tiveness of the approach against different types of
corpora, we analyzed the two 300-term top lists
of MWTs acquired respectively after the first and
the second extraction steps. In both cases, we
divided the 300-term top lists in 30-term groups
which show domain-specific terms? distribution,
so that they could be easily compared. The eval-
uation has been carried out by comparing the lists
of MWTs extracted against a gold standard re-
source, i.e. the thesaurus EARTh (Environmen-
tal Applications Reference Thesaurus).3. In ad-
dition, a second resource has been used in the
third experiment for evaluating legal terms: the
Dizionario giuridico (Edizioni Simone)4. Those
terms which could not find a positive matching
against the gold standard resources were manually
validated by domain experts.
Scient.Lit. Wikipedia
Group C-NC CSmw C-NC CSmw
0-30 22 27 27 29
30-60 28 25 28 26
60-90 24 30 25 25
90-120 19 28 23 27
120-150 25 29 23 24
Sub-TOT 118 139 126 131
150-180 25 25 22 20
180-210 23 27 20 30
210-240 24 29 23 26
240-270 23 25 24 24
270-300 21 19 15 25
TOT 234 264 230 256
Table 1: Environmental terms in the 300-term top
lists from scientific articles (columns 2 and 3) and
from Wikipedia (columns 4 and 5).
3.1 Discussion of Results
Achieved experimental results highlight two main
issues. Firstly, they show that the proposed con-
trastive approach to domain-specific MWTs ex-
traction has a general good performance. As Fig-
ures 1, 2 and 3 show, the amount of environ-
mental MWTs after the contrastive stage increases
with respect to the amount of MWTs acquired af-
ter the candidate MWT extraction stage carried
3http://uta.iia.cnr.it/earth.htm#EARTh%202002. Con-
taining 12,398 environmental terms.
4Available online: http://www.simone.it/newdiz and in-
cluding 1,800 terms.
78
C-NC Value CSmw
Group Env Leg Env Leg
0-30 12 12 21 4
30-60 10 8 16 4
60-90 11 10 20 3
90-120 22 1 19 3
120-150 10 13 13 6
Sub-TOT 65 44 89 20
150-180 9 13 14 6
180-210 13 10 17 6
210-240 16 5 11 9
240-270 11 9 16 9
270-300 12 8 9 13
TOT 126 90 156 63
Table 2: Env(ironmental) and Leg(al) MWTs in
the 300-term top list from the legal corpus.
Type of text % relative increment
Wikipedia 11.30%
Scientific articles 12.82%
Legal texts 23.81%
Table 3: Relative increment of environmental
MWTs in the contrastive re-ranking stage.
out with the C-NC Value method. Secondly, re-
ported results witness that such performances are
differently affected by the different types of in-
put corpora: as summarized in Table 3, the rela-
tive increment of environmental MWTs after the
contrastive filtering stage ranges from 11.3% to
23.81%. Interestingly, as shown in Table 1, the
results obtained in the first and second experi-
ments show similar trends. This is due to the over-
whelming occurrence in the two input corpora of
specialized terminology with respect to the GL
items. Differently from what could have been
Figure 1: Scientific articles. Comparative pro-
gressive trend of environmental extracted terms.
expected, Wikipedia texts contain highly special-
ized terminology. However, a qualititative evalu-
ation of MTWs extracted revealed that this latter
corpus includes terms which belong to that bor-
derline area between GL and SL (case c. in the
Cabre? (1999) classification). It follows that in
the Wikipedia case the contrastive stage filtered
out not only common words, such as milione di
dollari ?a million dollars?, but also terms such as
unita` immobiliare ?real estate? belonging to such
borderline area of terminology; their difficult clas-
sification slightly decreases the contrastive stage
performance.
In the third experiment, the total amount of
environmental MWTs percentually increased by
23.81% after the second stage of contrastive re-
ranking. Differently from the previous experi-
ments, in this case we faced the need for dis-
cerning terms belonging to the vocabulary of two
SLs, i.e. regulated domain (i.e. environmental)
terms and legal ones (e.g. norma nazionale, na-
tional rule): this emerges clearly from the results
reported in Table 2 where it is shown that the
same number of environmental and legal MWTs
(i.e. 12 terms) are extracted at the first stage in
the first 30-term group, and that the contrastive
re-ranking allows the emergence of 21 environ-
mental MWTs against 4 legal MWTs only. This
trend can be observed in Figure 4, where the di-
vergent lines show the different distributions of
environmental and legal terms: interestingly, lines
cross each other where legal terms outnumber en-
vironmental terms, i.e. in the last 30-term group.
Such a relative increment with respect to the C-
NC Value ranking can be easily explained in terms
of the main features of the two methods, where C-
NC Value method is overtly aimed at extracting
domain-specific terminology (both environmental
and legal terms), and the contrastive re-ranking
step is specifically aimed at distinguishing the rel-
evance of acquired MWTs with respect to the in-
volved domains.
4 Conclusion
In this paper we tackled the challenging task of
MWT extraction from different kinds of domain
79
Figure 2: Wikipedia articles. Comparative pro-
gressive trend of environmental extracted terms.
Figure 3: Legal texts. Comparative progressive
trend of environmental extracted terms.
corpora, characterized by different types of termi-
nologies. We demonstrated that the multi-layered
approach proposed in Bonin et al (2010) can be
successfully exploited in distinguishing between
GL and SL items and in assessing the domain-
relevance of extracted terms. The latter is the case
of type of multi-domain corpora, characterized by
the occurrence of terms belonging to different SLs
(e.g. legal texts). Moreover, the results obtained
from different text types proved that the perfor-
mance of the contrastive filtering stage is dramat-
ically influenced by the nature of the acquisition
corpus.
5 Acknowledgments
The research has been supported in part by a grant
from the Italian FIRB project RBNE07C4R9.
Thanks are also due to Angela D?Angelo (Scuola
Figure 4: Legal texts. Trend of contrastive func-
tion.
Superiore Sant?Anna, Pisa) and Paolo Plini (EKO-
Lab, CNR, Rome), who contributed as domain ex-
perts to the evaluation.
References
Bonin, Francesca, Felice Dell?Orletta, Giulia Venturi,
and Simonetta Montemagni, 2010. A Contrastive
Approach to Multi-word Term Extraction from Do-
main Corpora, in Proceedings of the ?7th Interna-
tional Conference on Language Resources and Eval-
uation?, Malta, 19-21 May, 3222-3229.
Breuker, Joost, and Rinke Hoekstra, 2004. Epistemol-
ogy and Ontology in Core Ontologies: FOLaw and
LRI-Core, two core ontologies for law, in Proceed-
ings of the ?Workshop on Core Ontologies in Ontol-
ogy Engineering?, UK, 15-27.
Cabre?, M.Teresa, 1999. The terminology. Theory,
methods and applications. John Benjamins Publish-
ing Company.
Frantzi, Katerina, and Sofia Ananiadou, 1999. The
C-value / NC Value domain independent method for
multi-word term extraction. In Journal of Natural
Language Processing, 6(3):145-179.
Marinelli, Rita, et al, 2003. The Italian PAROLE cor-
pus: an overview. In A. Zampolli et al (eds.), Com-
putational Linguistics in Pisa, XVI-XVII, IEPI., I,
401-421.
Rondeau, Guy, and Juan Sager, 1984. Introduction
a` la terminologie (2nd ed.). Chicoutimi, Gatan
Morin.
80
Proceedings of the Fifteenth Conference on Computational Natural Language Learning, pages 115?124,
Portland, Oregon, USA, 23?24 June 2011. c?2011 Association for Computational Linguistics
ULISSE:
an Unsupervised Algorithm for Detecting Reliable Dependency Parses
Felice Dell?Orletta, Giulia Venturi and Simonetta Montemagni
Istituto di Linguistica Computazionale ?Antonio Zampolli? (ILC?CNR)
via G. Moruzzi, 1 ? Pisa (Italy)
{felice.dellorletta,giulia.venturi,simonetta.montemagni}@ilc.cnr.it
Abstract
In this paper we present ULISSE, an unsu-
pervised linguistically?driven algorithm to se-
lect reliable parses from the output of a de-
pendency parser. Different experiments were
devised to show that the algorithm is robust
enough to deal with the output of different
parsers and with different languages, as well
as to be used across different domains. In
all cases, ULISSE appears to outperform the
baseline algorithms.
1 Introduction
While the accuracy of state?of?the?art parsers is in-
creasing more and more, this is still not enough for
their output to be used in practical NLP?based ap-
plications. In fact, when applied to real?world texts
(e.g. the web or domain?specific corpora such as
bio?medical literature, legal texts, etc.) their accu-
racy decreases significantly. This is a real problem
since it is broadly acknowledged that applications
such as Information Extraction, Question Answer-
ing, Machine Translation, and so on can benefit sig-
nificantly from exploiting the output of a syntactic
parser. To overcome this problem, over the last few
years a growing interest has been shown in assessing
the reliability of automatically produced parses: the
selection of high quality parses represents nowadays
a key and challenging issue. The number of stud-
ies devoted to detecting reliable parses from the out-
put of a syntactic parser is spreading. They mainly
differ with respect to the kind of selection algo-
rithm they exploit. Depending on whether training
data, machine learning classifiers or external parsers
are exploited, existing algorithms can be classified
into i) supervised?based, ii) ensemble?based and iii)
unsupervised?based methods.
The first is the case of the construction of a ma-
chine learning classifier to predict the reliability of
parses on the basis of different feature types. Yates
et al (2006) exploited semantic features derived
from the web to create a statistical model to de-
tect unreliable parses produced by a constituency
parser. Kawahara and Uchimoto (2008) relied on
features derived from the output of a supervised de-
pendency parser (e.g. dependency lengths, num-
ber of unknown words, number of coordinated con-
junctions, etc.), whereas Ravi et al (2008) exploited
an external constituency parser to extract text?based
features (e.g. sentence length, unknown words, etc.)
as well as syntactic features to develop a super-
vised predictor of the target parser accuracy. The
approaches proposed by Reichart and Rappoport
(2007a) and Sagae and Tsujii (2007) can be classi-
fied as ensemble?based methods. Both select high
quality parses by computing the level of agreement
among different parser outputs: wheras the former
uses several versions of a constituency parser, each
trained on a different sample from the training data,
the latter uses the parses produced by different de-
pendency parsing algorithms trained on the same
data. However, a widely acknowledged problem of
both supervised?based and ensemble?based meth-
ods is that they are dramatically influenced by a) the
selection of the training data and b) the accuracy and
the typology of errors of the used parser.
To our knowledge, Reichart and Rappoport
(2009a) are the first to address the task of high qual-
115
ity parse selection by resorting to an unsupervised?
based method. The underlying idea is that syntactic
structures that are frequently created by a parser are
more likely to be correct than structures produced
less frequently. For this purpose, their PUPA (POS?
based Unsupervised Parse Assessment Algorithm)
uses statistics about POS tag sequences of parsed
sentences produced by an unsupervised constituency
parser.
In this paper, we address this unsupervised sce-
nario with two main novelties: unlike Reichart and
Rappoport (2009a), a) we address the reliable parses
selection task using an unsupervised method in a
supervised parsing scenario, and b) we operate on
dependency?based representations. Similarly to Re-
ichart and Rappoport (2009a) we exploit text inter-
nal statistics: but whereas they rely on features that
are closely related to constituency representations,
we use linguistic features which are dependency?
motivated. The proposed algorithm has been eval-
uated for selecting reliable parses from English and
Italian corpora; to our knowledge, this is the first
time that such a task has been applied to a less re-
sourced language such as Italian. The paper is or-
ganised as follows: in Section 2 we illustrate the
ULISSE algorithm; sections 3 and 4 are devoted to
the used parsers and baselines. Section 5 describes
the experiments and discusses achieved results.
2 The ULISSE Algorithm
The ULISSE (Unsupervised LInguiStically?driven
Selection of dEpendency parses) algorithm takes as
input a set of parsed sentences and it assigns to each
dependency tree a score quantifying its reliability. It
operates in two different steps: 1) it collects statis-
tics about a set of linguistically?motivated features
extracted from a corpus of parsed sentences; 2) it
calculates a quality (or reliability) score for each an-
alyzed sentence using the feature statistics extracted
from the whole corpus.
2.1 Selection of features
The features exploited by ULISSE are all linguis-
tically motivated and rely on the dependency tree
structure. Different criteria guided their selection.
First, as pointed out in Roark et al (2007), we
needed features which could be reliably identified
within the automatic output of a parser. Second,
we focused on dependency structures that are widely
agreed in the literature a) to reflect sentences? syn-
tactic and thus parsing complexity and b) to impose
a high cognitive load on the parsing of a complete
sentence.
Here follows the list of features used in the exper-
iments reported in this paper, which turned out to be
the most effective ones for the task at hand.
Parse tree depth: this feature is a reliable indicator
of sentence complexity due to the fact that, with sen-
tences of approximately the same length, parse tree
depth can be indicative of increased sentence com-
plexity (Yngve, 1960; Frazier, 1985; Gibson, 1998;
Nenkova, 2010).
Depth of embedded complement ?chains?: this
feature is a subtype of the previous one, focusing on
the depth of chains of embedded complements, ei-
ther prepositional complements or nominal and ad-
jectival modifiers. Long chains of embedded com-
plements make the syntactic structure more complex
and their analysis much more difficult.
Arity of verbal predicates: this feature refers to the
number of dependency links sharing the same ver-
bal head. Here, there is no obvious relation between
the number of dependents and sentence complexity:
both a small number and a high number of depen-
dents can make the sentence processing quite com-
plex, although for different reasons (elliptical con-
structions in the former case, a high number of mod-
ifiers in the latter).
Verbal roots: this feature counts the number of ver-
bal roots with respect to number of all sentence roots
in the target corpus.
Subordinate vs main clauses: subordination is gen-
erally considered to be an index of structural com-
plexity in language. Two distinct features are con-
sidered for monitoring this aspect: one measuring
the ratio between main and subordinate clauses and
the other one focusing on the relative ordering of
subordinate clauses with respect to the main clause.
It is a widely acknowledged fact that highly com-
plex sentences contain deeply embedded subordi-
nate clauses; however, subordinate clauses are easier
to process if they occur in post?verbal rather than in
pre?verbal position (Miller, 1998).
Length of dependency links: McDonald and Nivre
(2007) report that statistical parsers have a drop in
116
accuracy when analysing long distance dependen-
cies. This is in line with Lin (1996) and Gibson
(1998) who claim that the syntactic complexity of
sentences can be predicted with measures based on
the length of dependency links, given the memory
overhead of very long distance dependencies. Here,
the dependency length is measured in terms of the
words occurring between the syntactic head and the
dependent.
Dependency link plausibility (henceforth, Arc-
POSFeat): this feature is used to calculate the plausi-
bility of a dependency link given the part?of?speech
of the dependent and the head, by also considering
the PoS of the head father and the dependency link-
ing the two.
2.2 Computation Score
The quality score (henceforth, QS) of parsed sen-
tences results from a combination of the weights as-
sociated with the monitored features. ULISSE is
modular and can use several weights combination
strategies, which may be customised with respect to
the specific task exploiting the output of ULISSE.
For this study, QS is computed as a simple prod-
uct of the individual feature weights. This follows
from the necessity to recognize high quality parses
within the input set of parsed sentences: the prod-
uct combination strategy is able to discard low qual-
ity parse trees even in presence of just one low
weight feature. Therefore, QS for each sentence i
in the set of input parsed sentences I is QS(Si) =?n
y=1 Weight(Si, fy), where Si is the i?th sentence
of I , n is the total number of selected features and
Weight(Si, fy) is the computed weight for the y?th
feature.
Selected features can be divided into two classes,
depending on whether they are computed with re-
spect to each sentence and averaged over all sen-
tences in the target corpus (global features), or they
are computed with respect to individual dependency
links and averaged over all of them (local features).
The latter is the case of the ArcPOSFeat feature,
whereas the all other ones represent global features.
For the global features, the Weight(Si, fy) is de-
fined as:
Weight(Si, fy) = F (V (fy), range(L(Si), r))|range(L(Si), r)| ,
(1)
where V (fy) is the value of the y?th feature (ex-
tracted from Si), L(Si) is the length of the sen-
tence Si, range(L(Si), r) defines a range cov-
ering values from L(Si) ? r and L(Si) + r,
F (V (fy), range(L(Si), r)) is the frequency of
V (fy) in all sentences in I that has a value of
length in range(L(Si), r1) and |range(L(Si), r)|
is the total number of sentences in I with length
in range(L(Si), r). For what concerns the lo-
cal feature ArcPOSFeat, ULISSE assigns a weight
for each arc in Si: in principle different strate-
gies can be used to compute a unique weight for
this feature for Si. Here, the sentence weight
for the feature ArcPOSFeat is computed as the
minimum weight among the weights of all arcs
of Si. Therefore, Weight(Si, ArcPOSFeat) =
min{weight((Pd, Ph, t)), ?(Pd, Ph, t) ? Si},
where the triple (Pd, Ph, t) is an arc in Si in which
Pd is the POS of the dependent, Ph is the POS
of the syntactic head and t is the type of the de-
pendency relation and weight((Pd, Ph, t)) is the
weight of the specific arc (Pd, Ph, t). The individ-
ual arc weight is computed as follows:
weight((Pd, Ph, t)) = F ((Pd, Ph, t))F ((Pd,X, t)) ?
? F ((Pd, Ph, t))F ((X,Ph, t)) ?
? F (((Pd, Ph, t)(Ph, Ph2, t2)))F ((Pd, Ph, t)) ?
? F (((Pd, Ph, t)(Ph, Ph2, t2)))F ((Ph, Ph2, t2)) ?
? F (((Pd, Ph, t)(Ph, Ph2, t2)))F ((((Pd,X, t))(X,Ph2, t2))) ,
where F (x) is the frequency of x in I , X is a vari-
able and (arc1 arc2) represent two consecutive arcs
in the tree.
3 The Parsers
ULISSE was tested against the output of two really
different data?driven parsers: the first?order Max-
imum Spanning Tree (MST) parser (McDonald et
al., 2006) and the DeSR parser (Attardi, 2006) using
Support Vector Machine as learning algorithm. The
1We set r=0 in the in?domain experiments and r=2 in the
out?of?domain experiment reported in Sec 5.3.
117
former is a graph?based parser (following the so?
called ?all?pairs? approach Buchholz et al (2006))
where every possible arc is considered in the con-
struction of the optimal parse tree and where depen-
dency parsing is represented as the search for a max-
imum spanning tree in a directed graph. The latter
is a Shift?Reduce parser (following a ?stepwise? ap-
proach, Buchholz et al (2006)), where the parser
is trained and learns the sequence of parsing actions
required to build the parse tree.
Although both parser models show a similar accu-
racy, McDonald and Nivre (2007) demonstrate that
the two types of models exhibit different behaviors.
Their analysis exemplifies how different the two
parsers behave when their accuracies are compared
with regard to some linguistic features of the ana-
lyzed sentences. To mention only a few, the Shift?
Reduce parser tends to perform better on shorter
sentences, while the MST parser guarantees a higher
accuracy in identifying long distance dependencies.
As regards the identification of dependency types,
the MST parser shows a better ability to identify
the dependents of the sentences? roots whereas the
Shift?Reduce tends to better recognize specific rela-
tions (e.g. Subject and Object).
McDonald and Nivre (2007) describe how the
systems? behavioral differences are due to the dif-
ferent parsing algorithms implemented by the Shift?
Reduce and the MST parsing models. The Shift
Reduce parser constructs a dependency tree by per-
forming a sequence of parser actions or transitions
through a greedy parsing strategy. As a result of
this parsing procedure, a Shift Reduce parser cre-
ates shorter arcs before longer arcs. The latter could
be the reason for the lower accuracy in identifying
longer arcs when compared to the MST parser. This
also influences a lower level of accuracy in the anal-
ysis of longer sentences that usually contain longer
arcs than shorter sentences. The MST parser?s abil-
ity to analyze both short and long arcs is invariant
as it employs a graph-based parsing method where
every possible arc is considered in the construction
of the dependency tree.
4 The Baselines
Three different increasingly complex baseline mod-
els were used to evaluate the performance of
ULISSE.
The first baseline is constituted by a Random Se-
lection (RS ) of sentences from the test sets. This
baseline is calculated in terms of the scores of the
parser systems on the test set.
The second baseline is represented by the Sen-
tence Length (SL ), starting from the assumption,
demonstrated by McDonald and Nivre (2007), that
long sentences are harder to analyse using statistical
dependency parsers than short ones. This is a strong
unsupervised baseline based on raw text features,
ranking the parser results from the shortest sentence
to the longest one.
The third and most advanced baseline, exploiting
parse features, is the PUPA algorithm (Reichart and
Rappoport, 2007a). PUPA uses a set of parsed sen-
tences to compute the statistics on which its scores
are based. The PUPA algorithm operates on a con-
stituency based representation and collects statistics
about the POS tags of the words in the yield of the
constituent and of the words in the yields of neigh-
boring constituents. The sequences of POS tags that
are more frequent in target corpus receive higher
scores after proper regularization is applied to pre-
vent potential biases. Therefore, the final score as-
signed to a constituency tree results from a combina-
tion of the scores of its extracted sequences of POSs.
In order to use PUPA as a baseline, we imple-
mented a dependency?based version, hencefoth re-
ferred to as dPUPA. dPUPA uses the same score
computation of PUPA and collects statistics about
sequences of POS tags: the difference lies in the fact
that in this case the POS sequences are not extracted
from constituency trees but rather from dependency
trees. To be more concrete, rather than represent-
ing a sentence as a collection of constituency?based
sequences of POSs, dPUPA represents each sen-
tence as a collection of sequences of POSs cov-
ering all identified dependency subtrees. In par-
ticular, each dependency tree is represented as the
set of all subtrees rooted by non?terminal nodes.
Each subtree is then represented as the sequence
of POS tags of the words in the subtree (reflect-
ing the word order of the original sentence) inte-
grated with the POS of the leftmost and rightmost
in the sentence (NULL when there are no neigh-
bors). Figure 1 shows the example of the depen-
dency tree for the sentence I will give you the ball.
118
Figure 1: Example of dependency tree.
If we consider the subtree rooted by give (in the
dotted circle), the resulting POS sequence is as
follows: POS2 POS3 POS4 POS5 POS6 NULL,
where POS3 POS4 POS5 POS6 is the sequence of
POS tags in the subtree, POS2 is the left neighbor
POS tag and NULL marks the absence of a right
neighbor.
5 Experiments and Results
The experiments were organised as follows: a target
corpus was automatically POS tagged (Dell?Orletta,
2009) and dependency?parsed; the ULISSE and
baseline algorithms of reliable parse selection were
run on the POS?tagged and dependency?parsed tar-
get corpus in order to identify high quality parses;
results achieved by the selection algorithms were
evaluated with respect to a subset of the target cor-
pus of about 5,000 word?tokens (henceforth referred
to as ?test set?) for which gold-standard annotation
was available. Different sets of experiments were
devised to test the robustness of our algorithm. They
were performed with respect to i) the output of the
parsers described in Section 3, ii) two different lan-
guages, iii) different domains.
For what concerns the languages, we chose Italian
and English for two main reasons. First of all, they
pose different challenges to a parser since they are
characterised by quite different syntactic features.
For instance, Italian, as opposed to English, is char-
acterised by a relatively free word order (especially
for what concerns subject and object relations with
respect to the verb) and by the possible absence of
an overt subject. Secondly, as it is shown in Section
5.1, Italian is a less resourced language with respect
to English. This is a key issue, since as demonstrated
by Reichart and Rappoport (2007b) and McClosky
et al (2008), small and big treebanks pose different
problems in the reliable parses selection.
Last but not least, we aimed at demonstrating that
ULISSE can be successfully used not only with texts
belonging to the same domain as the parser train-
ing corpus. For this purpose, ULISSE was tested
on a target corpus of Italian legislative texts, whose
automatic linguistic analysis poses domain?specific
challenges (Venturi, 2010). Out?of?domain experi-
ments are being carried out also for English.
5.1 The Corpora
The Italian corpora Both parsers were trained on
ISST?TANL2, a dependency annotated corpus used
in Evalita?093, an evaluation campaign carried out
for Italian (Bosco et al, 2009). ISST?TANL in-
cludes 3,109 sentences (71,285 tokens) and consists
of articles from newspapers and periodicals.
Two different target corpora were used for the
in?domain and out?of?domain experiments. For
the former, we used a corpus of 1,104,237 sen-
tences (22,830,739 word?tokens) of newspapers
texts which was extracted from the CLIC-ILC Cor-
pus (Marinelli et al, 2003); for the legal domain,
we used a collection of Italian legal texts (2,697,262
word?tokens; 97,564 sentences) regulating a vari-
ety of domains, ranging from environment, human
rights, disability rights, freedom of expression to pri-
vacy, age disclaimer, etc. In the two experiments,
the test sets were represented respectively by: a) the
test set used in the Evalita?09 evaluation campaign,
constituted by 260 sentences and 5,011 tokens from
newpapers text; b) a set of 102 sentences (corre-
sponding to 5,691 tokens) from legal texts.
The English corpora For the training of parsers
we used the dependency?based version of Sections
2?11 of the Wall Street Journal partition of the
Penn Treebank (Marcus et al, 2003), which was de-
veloped for the CoNLL 2007 Shared Task on De-
pendency Parsing (Nivre et al, 2007): it includes
447,000 word tokens and about 18,600 sentences.
As target data we took a corpus of news, specif-
ically the whole Wall Street Journal Section of the
2http://medialab.di.unipi.it/wiki/SemaWiki
3http://evalita.fbk.eu/index.html
119
Penn Treebank4, from which the portion of text cor-
responding to the training corpus was removed; the
English target corpus thus includes 39,285,425 to-
kens (1,625,606 sentences). For testing we used
the test set of the CoNLL 2007 Shared Task, cor-
responding to a subset of Section 23 of the Wall
Street Journal partition of the Penn Treebank (5,003
tokens, 214 sentences).
5.2 Evaluation Methodology
Performances of the ULISSE algorithm have been
evaluated i) with respect to the accuracy of ranked
parses and ii) in terms of Precision and Recall. First,
for each experiment we evaluated how the ULISSE
algorithm and the baselines classify the sentences in
the test set with respect to the ?Labelled Attachment
Score? (LAS) obtained by the parsers, i.e. the per-
centage of tokens for which it has predicted the cor-
rect head and dependency relation. In particular, we
computed the LAS score of increasingly wider top
lists of k tokens, where k ranges from 500 word to-
kens to the whole size of the test set (with a step size
of 500 word tokens, i.e. k=500, k=1000, k=1500,
etc.).
As regards ii), we focused on the set of ranked
sentences showing a LAS ? ?. Since imposing
a 100% LAS was too restrictive, for each experi-
ment we defined a different ? threshold taking into
account the performance of each parser across the
different languages and domains. In particular, we
took the top 25% and 50% of the list of ranked sen-
tences and calculated Precision and Recall for each
of them. To this specific end, a parse tree showing
a LAS ? ? is considered as a trustworthy analysis.
Precision has been computed as the ratio of the num-
ber of trustworthy analyses over the total number of
sentences in each top list. Recall has been computed
as the ratio of the number of trustworthy analyses
which have been retrieved over the total number of
trustworthy analyses in the whole test set.
In order to test how the ULISSE algorithm is able
to select reliable parses by relying on parse fea-
tures rather than on raw text features, we computed
the accuracy score (LAS) of a subset of the top list
of sentences parsed by both parsers and ranked by
4This corpus represents to the unlabelled data set distributed
for the CoNLL 2007 Shared Task on Dependency Parsing, do-
main adaptation track.
ULISSE: in particular, we focused on those sen-
tences which were not shared by the MST and DeSR
top lists.
5.3 Results
We will refer to the performed experiments as fol-
lows: ?IT in?domain? and ?IT out?of?domain? for
the Italian experiments using respectively the ISST?
TANL test set (henceforth ISST TS) and the Legal-
Corpus test set (henceforth Legal TS); ?EN in?
domain? for the English experiment using the PTB
test set (PTB TS).
As a starting point let us consider the accuracy
of DeSR and MST parsers on the whole test sets,
reported in Table 1. The accuracy has been com-
puted in terms of LAS and of Unlabelled Attach-
ment Score (UAS), i.e. the percentage of tokens with
a correctly identified syntactic head. It can be no-
ticed that the performance of the two parsers is quite
similar for Italian (i.e. wrt ISST TS and Legal TS),
whereas there is a 2.3% difference between the MST
and DeSR accuracy as far as English is concerned.
ISST TS Legal TS PTB TS
Parser LAS UAS LAS UAS LAS UAS
DeSR 80.22 84.96 73.40 76.12 85.95 87.25
MST 79.52 85.43 73.99 78.72 88.25 89.55
Table 1: Overall accuracy of DeSR and MST parsers.
The plots in Figure 2 show the LAS of parses
ranked by ULISSE and the baselines across the dif-
ferent experiments. Each plot reports the results of a
single experiment: plots in the same row report the
LAS of DeSR and MST parsers with respect to the
same test set. In all experiments, ULISSE turned out
to be the best ranking algorithm since it appears to
select top lists characterised by higher LAS scores
than the baselines. As Figure 2 shows, all ranking
algorithms perform better than Random Selection
(RS), i.e. all top lists (for each k value) show a LAS
higher than the accuracy of DeSR and MST parsers
on the whole test sets. In the EN in?domain experi-
ment, the difference between the results of ULISSE
and the other ranking algorithms is smaller than in
the corresponding Italian experiment, a fact result-
ing from the higher accuracy of DeSR and MST
parsers (i.e. LAS 85.95% and 88.25% respectively)
on the PTB TS. It follows that, for example, the
first top list (with k=500) of the SL baseline has a
120
1000 2000 3000 4000 5000
80
82
84
86
88
90
 
 
 ULISSE
 LS
 dPUPA
 RS
(a) IT in?domain experiment (DeSR).
1000 2000 3000 4000 5000
79
80
81
82
83
84
85
86
 
 
 ULISSE
 LS
 dPUPA
 RS
(b) IT in?domain experiment (MST).
1000 2000 3000 4000 5000
74
76
78
80
82
 
 
 ULISSE
 LS
 dPUPA
 RS
(c) IT out?of?domain experiment (DeSR).
1000 2000 3000 4000 5000
66
68
70
72
74
76
78
80
82
84
 
 
 ULISSE
 LS
 dPUPA
 RS
(d) IT out?of?domain experiment (MST).
1000 2000 3000 4000 5000
86
88
90
92
94
 
 
 ULISSE
 LS
 dPUPA
 RS
(e) EN in?domain experiment (DeSR).
1000 2000 3000 4000 5000
88
89
90
91
92
93
94
 
 
 ULISSE
 LS
 dPUPA
 RS
(f) EN in?domain experiment (MST).
Figure 2: LAS of parses ranked by ULISSE algorithm and by the three baselines.
LAS accuracy of 93.36% and 93.96% respectively
for DeSR and MST: even in this case, ULISSE out-
performs all baselines. This is also the case in the
IT out?of?domain experiment. As reported in Table
1, parsing legal texts is a quite challenging task due
to a number of domain?specific peculiarities at the
level of syntax: this is testified by the average sen-
tence length which in the Legal TS is 56 word to-
kens. Nevertheless, ULISSE is able also in this case
to highly rank long sentences showing a high LAS.
For example, while in the first top list of 500 word
tokens the sentences parsed by DeSR and ordered by
SL have an average sentence length of 24 words and
a LAS of 79.37%, ULISSE includes in the same top
list longer sentences (with average sentence length =
29) with a higher LAS (82.72%). Also dPUPA ranks
in the same top list quite long sentences (with 27 av-
erage sentence length), but compared to ULISSE it
shows a lower LAS (i.e. 73.56%).
IT in?domain IT out?of?domain EN in?domain
DeSR MST DeSR MST DeSR MST
MST top?list 80.93 80.27 68.84 74.58 83.37 90.39
DeSR top?list 82.46 77.82 75.47 74.88 86.50 86.74
Table 3: LAS of not?shared sentences in the DeSR and
MST top?lists.
Results in Table 2 show that in the top 25% of
the ranked sentences with a LAS ? ? ULISSE has
the highest Precision and Recall in all experiments.
We believe that the low performance of dPUPA with
respect to all other ranking algorithms can be due to
121
DeSR MST
25% 50% 25% 50%
Prec Rec LAS AvgSL Prec Rec LAS AvgSL Prec Rec LAS AvgSL Prec Rec LAS AvgSL
IT in?domain: LAS ? 85% (DeSR: 120 sentences; MST: 112 sentences)
ULISSE 66.15 35.83 88.25 5.25 59.23 64.17 84.30 14.60 60 34.82 86.16 5.68 55.38 64.29 83.39 15.27
LS 63.08 34.17 84.54 4.15 53.08 57.50 82.07 11.90 58.46 33.93 82.73 4.45 53.08 61.61 82.14 12.75
dPUPA 61.54 33.33 86.89 6.68 59.23 64.17 84.36 14.82 53.85 31.25 82.26 8.61 50.00 58.04 79.94 17.04
IT out?of?domain: LAS ? 75% (DeSR: 51 sentences; MST: 57 sentences)
ULISSE 73.08 37.25 80.75 16.71 69.23 70.59 79.17 41.80 69.23 31.58 81.47 13.63 67.31 61.40 78.36 36
LS 53.85 27.45 76.71 12.63 67.31 68.63 78.34 34.14 61.54 28.07 78.42 11.30 69.23 63.16 79.78 30.54
dPUPA 57.69 29.41 73.97 15.67 61.54 62.74 75.24 40.39 46.15 21.05 72.08 22.56 57.69 52.63 74.86 42.91
EN in?domain: LAS ? 90% (DeSR: 118 sentences; MST: 120 sentences)
ULISSE 81.48 37.29 94.50 6.31 69.44 63.56 90.93 16.36 77.78 35 93.74 5.82 69.44 62.5 91.20 16.48
LS 77.78 35.59 93.39 4.87 65.74 60.17 91.01 13.67 75.92 34.17 93.55 4.79 68.52 61.67 90.84 13.44
dPUPA 74.07 33.90 89.76 7.95 65.74 60.17 88.37 18.14 77.78 35 93.43 5.08 68.52 61.67 91.03 14.49
Table 2: In all Tables: the number of sentences with a LAS ? ? parsed by DeSr and MST parsers (first row); Precision
(Prec), Recall (Rec), the corresponding parser accuracy (LAS) of the top 25% and 50% of the list of sentences and
ranked by the ULISSE algorithm, Length of Sentence (LS) and dependency PUPA (dPUPA) and the corresponding
average length in tokens of ranked sentence (AvgSL).
the fact that PUPA is based on constituency?specific
features that once translated in terms of dependency
structures may be not so effective.
In order to show that the ranking of sentences
does not follow from raw text features but rather
from parse features, we evaluated the accuracy of
parsed sentences that are not?shared by MST and
DeSR top?lists selected by ULISSE. For each test
set we selected a different top list: a set of 100
sentences in the IT and EN in?domain experiments
and of 50 sentences in the IT out?of?domain exper-
iment. For each of them we have a different number
of not?shared sentences: 24, 15 and 16 in the IT
in?domain, IT out?of?domain and EN in?domain
experiments respectively. Table 3 reports the LAS
of DeSR and MST for these sentences: it can be
observed that the LAS of not?shared sentences in
the DeSR top list is always higher than the LAS
assigned by the same parser to the not?shared sen-
tences in the MST top list, and viceversa. For in-
stance, in the English experiment the LAS achieved
by DeSR on the not?shared top list is higher (86.50)
than the LAS of DeSR on the not?shared MST top
list (83.37); viceversa, the LAS of MST on the not?
shared DeSR top list is higher (86.74) than the LAS
of MST on the not?shared MST top list (90.39). The
unique exception is MST in the IT out?of?domain
experiment, but the difference in terms of LAS be-
tween the parses is not statistically relevant (p?value
< 0.05). These results demonstrate that ULISSE is
able to select parsed sentences on the basis of the
reliability of the analysis produced by each parser.
6 Conclusion
ULISSE is an unsupervised linguistically?driven
method to select reliable parses from the output of
dependency parsers. To our knowledge, it repre-
sents the first unsupervised ranking algorithm oper-
ating on dependency representations which are more
and more gaining in popularity and are arguably
more useful for some applications than constituency
parsers. ULISSE shows a promising performance
against the output of two supervised parsers se-
lected for their behavioral differences. In all experi-
ments, ULISSE outperforms all baselines, including
dPUPA and Sentence Length (SL), the latter repre-
senting a very strong baseline selection method in a
supervised scenario, where parsers have a very high
performance with short sentences. The fact of car-
rying out the task of reliable parse selection in a su-
pervised scenario represents an important novelty:
however, the unsupervised nature of ULISSE could
also be used in an unsupervised scenario (Reichart
and Rappoport, 2010). Current direction of research
include a careful study of a) the quality score func-
tion, in particular for what concerns the combination
of individual feature weights, and b) the role and ef-
fectivess of the set of linguistic features. This study
is being carried out with a specific view to NLP tasks
which might benefit from the ULISSE algorithm.
This is the case, for instance, of the domain adap-
tation task in a self?training scenario (McClosky et
al., 2006), of the treebank construction process by
minimizing the human annotators? efforts (Reichart
and Rappoport, 2009b), of n?best ranking methods
for machine translation (Zhang, 2006).
122
References
Giuseppe Attardi. 2006. Experiments with a multilan-
guage non-projective dependency parser. In Proceed-
ings of the Tenth Conference on Computational Nat-
ural Language Learning (CoNLL-X ?06), New York
City, New York, pp. 166?170.
Cristina Bosco, Simonetta Montemagni, Alessandro
Mazzei, Vincenzo Lombardo, Felice Dell?Orletta and
Alessandro Lenci. 2009. Parsing Task: comparing
dependency parsers and treebanks. In Proceedings of
Evalita?09, Reggio Emilia.
Sabine Buchholz and Erwin Marsi. 2006. CoNLL-X
shared task on multilingual dependency parsing. In
Proceedings of CoNLL.
Felice Dell?Orletta. 2009. Ensemble system for Part-of-
Speech tagging. In Proceedings of Evalita?09, Eval-
uation of NLP and Speech Tools for Italian, Reggio
Emilia, December.
Lyn Frazier. 1985. Syntactic complexity. In D.R.
Dowty, L. Karttunen and A.M. Zwicky (eds.), Natural
Language Parsing, Cambridge University Press, Cam-
bridge, UK.
Edward Gibson. 1998. Linguistic complexity: Locality
of syntactic dependencies. In Cognition, 68(1), pp. 1-
76.
Daisuke Kawahara and Kiyotaka Uchimoto. 2008.
Learning Reliability of Parses for Domain Adaptation
of Dependency Parsing. In Proceedings of IJCNLP
2008, pp. 709?714.
Dekan Lin. 1996. On the structural complexity of nat-
ural language sentences. In Proceedings of COLING
1996, pp. 729?733.
Ryan McDonald, Kevin Lerman, and Fernando Pereira.
2006. Multilingual dependency analysis with a two-
stage discriminative parser. In Proceedings of CoNLL
2006.
Ryan McDonald and Joakim Nivre. 2007. Character-
izing the Errors of Data-Driven Dependency Parsing
Models. In Proceedings of EMNLP-CoNLL, 2007, pp.
122-131.
Mitchell P. Marcus, Mary Ann Marcinkiewicz and Beat-
rice Santorini. 1993. Building a large annotated cor-
pus of English: the penn treebank. In Comput. Lin-
guist.,vol. 19, issue 2, MIT Press, pp. 313?330.
Rita Marinelli, et al 2003. The Italian PAROLE cor-
pus: an overview. In A. Zampolli et al (eds.), Compu-
tational Linguistics in Pisa, XVI?XVII, Pisa?Roma,
IEPI., I, 401?421.
David McClosky, Eugene Charniak and Mark Johnson.
2006. Reranking and self?training for parser adap-
tation. In Proceedings of ICCL?ACL 2006, pp. 337?
344.
David McClosky, Eugene Charniak and Mark Johnson.
2008. When is Self?Trainig Effective for parsing?. In
Proceedings of COLING 2008, pp. 561?568.
Jim Miller and Regina Weinert. 1998. Spontaneous spo-
ken language. Syntax and discourse. Oxford, Claren-
don Press.
Ani Nenkova, Jieun Chae, Annie Louis, and Emily Pitler.
2010. Structural Features for Predicting the Linguistic
Quality of Text Applications to Machine Translation,
Automatic Summarization and Human?Authored Text.
In E. Krahmer, M. Theune (eds.), Empirical Methods
in NLG, LNAI 5790, Springer-Verlag Berlin Heidel-
berg, pp. 222241.
Joakim Nivre, Johan Hall, Sandra Ku?bler, Ryan Mc-
Donald, Jens Nilsson, Sebastian Riedel, Deniz Yuret.
2007. The CoNLL 2007 Shared Task on Dependency
Parsing. In Proceedings of the EMNLP-CoNLL, pp.
915?932.
Sujith Ravi, Kevin Knight and Radu Soricut. 2008. Auto-
matic Prediction of Parser Accuracy. In Proceedings
of the EMNLP 2008, pp. 887?896.
Roi Reichart and Ari Rappoport. 2007a. An ensemble
method for selection of high quality parses. In Pro-
ceedings of ACL 2007, pp. 408?415.
Roi Reichart and Ari Rappoport. 2007b. Self?Training
for Enhancement and Domain Adaptation of Statisti-
cal Parsers Trained on Small Datasets. In Proceedings
of ACL 2007, pp. 616?623.
Roi Reichart and Ari Rappoport. 2009a. Automatic Se-
lection of High Quality Parses Created By a Fully Un-
supervised Parser. In Proceedings of CoNLL 2009,
pp. 156?164.
Roi Reichart and Ari Rappoport. 2009b. Sample Selec-
tion for Statistical Parsers: Cognitively Driven Algo-
rithms and Evaluation Measures. In Proceedings of
CoNLL 2009, pp. 3?11.
Roi Reichart and Ari Rappoport. 2010. Improved Fully
Unsupervised Parsing with Zoomed Learning. In Pro-
ceedings of EMNLP 2010.
Brian Roark, Margaret Mitchell and Kristy Hollingshead.
2007. Syntactic complexity measures for detecting
Mild Cognitive Impairment. In Proceedings of ACL
Workshop on Biological, Translational, and Clinical
Language Processing (BioNLP?07), pp. 1?8.
Kenji Sagae and Junichi Tsujii. 2007. Dependency
Parsing and Domain Adaptation with LR Models and
Parser Ensemble. In Proceedings of the EMNLP?
CoNLL 2007, pp. 1044?1050.
Giulia Venturi. 2010. Legal Language and Legal Knowl-
edge Management Applications. In E. Francesconi, S.
Montemagni, W. Peters and D. Tiscornia (eds.), Se-
mantic Processing of Legal Texts, Lecture Notes in
Computer Science, Springer Berlin / Heidelberg, vol.
6036, pp. 3-26.
123
Alexander Yates, Stefan Schoenmackers and Oren Et-
zioni. 2006. Detecting Parser Errors Using Web?
based Semantic Filters. In Proceedings of the EMNLP
2006, pp. 27?34.
Victor H.A. Yngve. 1960. A model and an hypothesis for
language structure. In Proceedings of the American
Philosophical Society, pp. 444-466.
Ying Zhang, Almut Hildebrand and Stephan Vogel.
2006. Distributed language modeling for N-best list
re-ranking. In Proceedings of the EMNLP 2006, pp.
216?223.
124
Proceedings of the 2nd Workshop on Speech and Language Processing for Assistive Technologies, pages 73?83,
Edinburgh, Scotland, UK, July 30, 2011. c?2011 Association for Computational Linguistics
READ?IT:
Assessing Readability of Italian Texts with a View to Text Simplification
Felice Dell?Orletta, Simonetta Montemagni and Giulia Venturi
Istituto di Linguistica Computazionale ?Antonio Zampolli? (ILC?CNR)
via G. Moruzzi, 1 ? Pisa (Italy)
{felice.dellorletta,simonetta.montemagni,giulia.venturi}@ilc.cnr.it
Abstract
In this paper, we propose a new approach to
readability assessment with a specific view to
the task of text simplification: the intended
audience includes people with low literacy
skills and/or with mild cognitive impairment.
READ?IT represents the first advanced read-
ability assessment tool for what concerns Ital-
ian, which combines traditional raw text fea-
tures with lexical, morpho-syntactic and syn-
tactic information. In READ?IT readability
assessment is carried out with respect to both
documents and sentences where the latter rep-
resents an important novelty of the proposed
approach creating the prerequisites for align-
ing the readability assessment step with the
text simplification process. READ?IT shows
a high accuracy in the document classification
task and promising results in the sentence clas-
sification scenario.
1 Introduction
Recently, there has been increasing interest in the
exploitation of results from Natural Language Pro-
cessing (NLP) for the development of assistive tech-
nologies. Here, we address this topic by reporting
the first but promising results in the development
of a software architecture for the Italian language
aimed at assisting people with low literacy skills
(both native and foreign speakers) or who have lan-
guage disabilities in reading texts.
Within an information society, where everyone
should be able to access all available information,
improving access to written language is becoming
more and more a central issue. This is the case, for
instance, of administrative and governmental infor-
mation which should be accessible to all members of
the society, including people who have reading dif-
ficulties for different reasons: because of a low edu-
cation level or because of the fact that the language
in question is not their mother tongue, or because
of language disabilities. Health related information
represents another crucial domain which should be
accessible to a large and heterogenous target group.
Understandability in general and readability in par-
ticular is also an important issue for accessing infor-
mation over the web as stated in the Web Content
Accessibility Guidelines (WCAG) proposed by the
Web Accessibility Initiative of the W3C.
In this paper, we describe the approach we devel-
oped for automatically assessing the readability of
newspaper texts with a view to the specific task of
text simplification. The paper is organized as fol-
lows: Section 2 describes the background literature
on the topic; Section 3 introduces the main features
of our approach to readability assessment, with Sec-
tion 4 illustrating its implementation in the READ-
IT prototype; Sections 5 and 6 describe the experi-
mental setting and discuss achieved results.
2 Background
Readability assessment has been a central research
topic for the past 80 years which is still attracting
considerable interest nowadays. Over the last ten
years, within the NLP community the automatic as-
sessment of readability has received increasing at-
tention: if on the one hand the availability of sophis-
ticated NLP technologies makes it possible to moni-
tor a wide variety of factors affecting the readability
73
of a text, on the other hand there is a wide range
of both human- and machine-oriented applications
which can benefit from it.
Traditional readability formulas focus on a lim-
ited set of superficial text features which are taken
as rough approximations of the linguistic factors at
play in readability assessment. For example, the
Flesch-Kincaid measure (the most common reading
difficulty measure still in use, Kincaid (1975)) is a
linear function of the average number of syllables
per word and of the average number of words per
sentence, where the former and latter are used as
simple proxies for lexical and syntactic complexity
respectively. For Italian, there are two readability
formulas: an adaptation of the Flesh-Kincaid for En-
glish to Italian known as the Flesch-Vacca formula
(Franchina and Vacca, 1986); the GulpEase index
(Lucisano and Piemontese, 1988), assessing read-
ability on the basis of the average number of char-
acters per word and the average number of words
per sentence.
A widely acknowledged fact is that all traditional
readability metrics are quick and easy to calculate
but have drawbacks. For example, the use of sen-
tence length as a measure of syntactic complexity as-
sumes that a longer sentence is more grammatically
complex than a shorter one, which is often but not
always the case. Word syllable count is used start-
ing from the assumption that more frequent words
are more likely to have fewer syllables than less fre-
quent ones (an association that is related to Zipf?s
Law, Zipf (1935)); yet, similarly to the previous
case, word length does not necessarily reflects its
difficulty. The unreliability of these metrics has been
experimentally demonstrated by several recent stud-
ies in the field: to mention only a few Si and Callan
(2001), Petersen and Ostendorf (2006), Feng (2009).
On the front of the assessment of the lexical dif-
ficulty of a given text, a first step forward is rep-
resented by vocabulary-based formulas such as the
Dale-Chall formula (Chall and Dale, 1995), using
a combination of average sentence length and word
frequency counts. In particular, for what concerns
the latter it reconstructs the percentage of words
not on a list of 3000 ?easy? words by matching its
own list to the words in the material being evalu-
ated, to determine the appropriate reading level. If
vocabulary-based measures represent an improve-
ment in assessing the readability of texts which was
possible due to the availability of frequency dictio-
naries and reference corpora, they are still unsatis-
factory for what concerns sentence structure.
Over the last ten years, work on readability de-
ployed sophisticated NLP techniques, such as syn-
tactic parsing and statistical language modeling, to
capture more complex linguistic features and used
statistical machine learning to build readability as-
sessment tools. A variety of different NLP-based
approaches to the automatic readability assessment
has been proposed so far, differing with respect to:
a) the typology of features taken into account (e.g.
lexical, syntactic, semantic, discourse), and, for each
type, at the level of the inventory of used individual
features; b) the intended audience of the texts under
evaluation, which strongly influences the readability
assessment, and last but not least c) the application
within which readability assessment is carried out.
Interesting alternatives to static vocabulary-based
measures have been put forward by Si and Callan
(2001) who used unigram language models com-
bined with sentence length to capture content in-
formation from scientific web pages, or by Collins-
Thompson and Callan (2004) who adopted a sim-
ilar language modeling approach (Smoothed Uni-
gram model) to predict reading difficulty of short
passages and web documents. These approaches can
be seen as a generalization of the vocabulary-based
approach, aimed at capturing finer-grained and more
flexible information about vocabulary usage. If un-
igram language models help capturing important
content information and variation of word usage,
they do not cover other types of features which are
reported to play a significant role in the assessment
of readability. More recently, the role of syntac-
tic features started being investigated (Schwarm and
Ostendorf, 2005; Heilman et al, 2007; Petersen and
Ostendorf, 2009): in these studies syntactic structure
is tracked through a combination of features from n-
gram (trigram, bigram and unigram) language mod-
els and parse trees (parse tree height, number of
noun phrases, verb phrases and subordinated clauses
or SBARs) with more traditional features.
Yet, besides lexical and syntactic complexity fea-
tures there are other important factors, such as the
structure of the text, the definition of discourse topic,
discourse cohesion and coherence and so on, play-
74
ing a central role in determining the reading diffi-
culty of a text. More recent approaches esplored
the role of these features in readability assessment:
this is the case, for instance, of Barzilay and Lap-
ata (2008) or Feng (2010). The last few years have
been characterised by approaches based on the com-
bination of features ranging over different linguistic
levels, namely lexical, syntactic and discourse (see
e.g. Pitler and Nenkova (2008), Kate (2010)).
Another important factor determining the typol-
ogy of features to be considered for assessing read-
ability has to do with the intended audience of
readers: it is commonly agreed that reading ease
does not follow from intrinsic text properties alone,
but it is also affected by the expected audience.
Among the studies addressing readability with re-
spect to specific audiences, it is worth mentioning
here: Schwarm and Ostendorf (2005) and Heilman
et al (2007) dealing with language learners, or Feng
(2009) focussing on people with mild intellectual
disabilities. Interestingly,Heilman et al (2007) dif-
ferentiate the typology of used features when ad-
dressing first (L1) or second (L2) language learn-
ers: they argue that grammatical features are more
relevant for L2 than for L1 learners. Feng (2009)
propose a set of cognitively motivated features op-
erating at the discourse level specifically addressing
the cognitive characteristics of the expected users.
When readability is targeted towards adult compe-
tent language users a more prominent role is played
by discourse features (Pitler and Nenkova, 2008).
Applications which can benefit from an automatic
readability assessment range from the selection of
reading material tailored to varying literacy levels
(e.g. for L1/L2 students or low literacy people)
and the ranking of documents by reading difficulty
(e.g. in returning the results of web queries) to NLP
tasks such as automatic document summarization,
machine translation as well as text simplification.
Again, also the application making use of the read-
ability assessment, which is in turn strictly related to
the intended audience of readers, strongly influences
the typology of features to be taken into account.
Advanced NLP?based readability metrics devel-
oped so far typically deal with English, with a few
attempts devoted to other languages, namely French
(Collins-Thompson and Callan, 2004), Portuguese
(Aluisio et al, 2010) and German (Bru?ck, 2008).
3 Our Approach
Our approach to readability assessment was devel-
oped with a specific application in mind, i.e. text
simplification, and addresses a specific target audi-
ence of readers, namely people characterised by low
literacy skills and/or by mild cognitive impairment.
Following the most recent approaches, we treat read-
ability assessment as a classification task: in partic-
ular, given the available corpora for the Italian lan-
guage as well as the type of target audience, we re-
sorted to a binary classification aimed at discerning
easy?to?read textual objects from difficult?to?read
ones. The language dealt with is Italian: to our
knowledge, this is the first attempt of an advanced
methodology for readability assessment for this lan-
guage. Our approach focuses on lexical and syntac-
tic features, whose selection was influenced by the
application, the intended audience and the language
dealt with (both for its intrinsic linguistic features
and for the fact of being a less resourced language).
Following Roark (2007), in the features selection
process we preferred easy-to-identify features which
could be reliably identified within the output of NLP
tools. Last but not least, as already done by Aluisio
et al (2010) the set of selected syntactic features also
includes simplification oriented ones, with the final
aim of aligning the readability assessment step with
the text simplification process.
Another qualifying feature of our approach to
readability assessment consists in the fact that we
are dealing with two types of textual objects: docu-
ments and sentences. The latter represents an impor-
tant novelty of our work since so far most research
focused on readability classification at the document
level (Skory and Eskenazi, 2010). When the tar-
get application is text simplification, we strongly be-
lieve that also assessing readability at the sentence
level could be very useful. We know that methods
developed so far perform well to characterize the
level of an entire document, but they are unreliable
for short texts and thus also for single sentences.
Sentence-based readability assessment thus repre-
sents a further challenge we decided to tackle: in
fact, if all sentences occurring in simplified texts can
be assumed to be easy-to-read sentences, the reverse
does not necessarily hold since not all sentences oc-
curring in complex texts are difficult-to-read sen-
75
tences. Since there are no training data at the sen-
tence level, it becomes difficult ? if not impossible
? to evaluate the effectiveness of our approach, i.e.
erroneous readability assessments within the class
of difficult-to-read texts may either correspond to
those easy?to?read sentences occurring within com-
plex texts or represent real classification errors. In
order to overcome this problem in the readability as-
sessment of individual sentences, we introduced a
notion of distance with respect to easy-to-read sen-
tences. In this way, the prerequisites are created for
the integration of the two processes of readability as-
sessment and text simplification. Before, text read-
ability was assessed with respect to the entire doc-
ument and text simplification was carried out at the
sentence level: due to the decoupling of the two pro-
cesses, the impact of simplification operations on the
overall readability level of the text was not always
immediately clear. With sentence-based readability
assessment, this should be no longer a problem.
4 READ?IT
Our approach to readability assessment has been im-
plemented in a software prototype, henceforth re-
ferred to as READ?IT. READ?IT operates on syn-
tactically (i.e. dependency) parsed texts and it as-
signs to each considered reading object - either a
document or a sentence - a score quantifying its
readability. READ?IT is a classifier based on Sup-
port Vector Machines using LIBSVM (Chang and
Lin, 2001) that, given a set of features and a training
corpus, creates a statistical model using the feature
statistics extracted from the training corpus. Such
a model is used in the assessment of readability of
unseen documents and sentences.
The set of features used to build the statistical
model can be parameterized through a configura-
tion file: as we will see, the set of relevant fea-
tures used for readability assessment at the docu-
ment level differs from the those used at the sen-
tence level. This also creates the prerequisites for
specialising the readability assessment measure with
respect to more specific target audiences: as pointed
out in Heilman et al (2007) different types of fea-
tures come into play e.g. when addressing L1 or L2
language learners. Here follows the complete list of
features used in the reported experiments.
4.1 Features
The features used for predicting readability are or-
ganised into four main categories: namely, raw text
features, lexical features as well as morpho-syntactic
and syntactic features. This proposed four?fold par-
tition closely follows the different levels of linguis-
tic analysis automatically carried out on the text be-
ing evaluated, i.e. tokenization, lemmatization, PoS
tagging and dependency parsing. Such a partition
was meant to identify those easy to extract features
with high discriminative power in order to reduce
the linguistic pre-processing of texts guaranteeing at
the same time a reliable readability assessment.
Raw Text Features
They refer to those features typically used within tra-
ditional readability metrics. They include Sentence
Length, calculated as the average number of words
per sentence, and Word Length, calculated as the av-
erage number of characters per words.
Lexical Features
Basic Italian Vocabulary rate features: these fea-
tures refer to the internal composition of the vocab-
ulary of the text. To this end, we took as a refer-
ence resource the Basic Italian Vocabulary by De
Mauro (2000), including a list of 7000 words highly
familiar to native speakers of Italian. In particular,
we calculated two different features corresponding
to: i) the percentage of all unique words (types)
on this reference list (calculated on a per?lemma
basis); ii) the internal distribution of the occurring
basic Italian vocabulary words into the usage clas-
sification classes of ?fundamental words? (very fre-
quent words), ?high usage words? (frequent words)
and ?high availability words? (relatively lower fre-
quency words referring to everyday objects or ac-
tions and thus well known to speakers). Whereas
the latter represents a novel feature in the readability
assessment literature, the former originates from the
Dale-Chall formula (Chall and Dale, 1995) and, as
implemented here, it can be seen as the complement
of the type out-of-vocabulary rate features used by
Petersen and Ostendorf (2009).
Type/Token Ratio: this feature refers to the ratio
between the number of lexical types and the num-
ber of tokens. This feature, which can be consid-
ered as an indicator of expressive language delay or
76
disorder as shown in Wright (2003) for adults and
in Retherford (2003) for children, has already been
used for readability assessment purposes by Aluisio
et al (2010). Due to its sensitivity to sample size,
this feature has been computed for text samples of
equivalent length.
Morpho?syntactic Features
Language Model probability of Part-Of-Speech
unigrams: this feature is based on a unigram lan-
guage model assuming that the probability of a token
is independent of its context. The model is simply
defined by a list of types (POS) and their individual
probabilities. This feature has already been shown
to be a reliable indicator for automatic readability
assessment (see, for example, Pitler and Nenkova
(2008) and Aluisio et al (2010)).
Lexical density: this feature refers to the ratio of
content words (verbs, nouns, adjectives and adverbs)
to the total number of lexical tokens in a text. Con-
tent words have already been used for readability as-
sessment by Aluisio et al (2010) and Feng (2010).
Verbal mood: this feature refers to the distribution
of verbs according to their mood. It is a novel and
language?specific feature exploiting the predictive
power of the Italian rich verbal morphology.
Syntactic Features
Unconditional probability of dependency types:
this feature refers to the unconditional probability of
different types of syntactic dependencies (e.g. sub-
ject, direct object, modifier, etc.) and can be seen
as the dependency-based counterpart of the ?phrase
type rate? feature used by Nenkova (2010).
Parse tree depth features: parse tree depth can be
indicative of increased sentence complexity as stated
by, to mention only a few, Yngve (1960), Frazier
(1985) and Gibson (1998). This set of features is
meant to capture different aspects of the parse tree
depth and includes the following measures: a) the
depth of the whole parse tree, calculated in terms of
the longest path from the root of the dependency tree
to some leaf; b) the average depth of embedded com-
plement ?chains? governed by a nominal head and
including either prepositional complements or nomi-
nal and adjectival modifiers; c) the probability distri-
bution of embedded complement ?chains? by depth.
The first feature has already been used in syntax-
based readability assessment studies (Schwarm and
Ostendorf, 2005; Heilman et al, 2007; Nenkova,
2010); the latter two are reminiscent of the ?head
noun modifiers? feature used by Nenkova (2010).
Verbal predicates features: this set of features cap-
tures different aspects of the behaviour of verbal
predicates. They range from the number of verbal
roots with respect to number of all sentence roots
occurring in a text to their arity. The arity of verbal
predicates is calculated as the number of instanti-
ated dependency links sharing the same verbal head
(covering both arguments and modifiers). Although
there is no obvious relation between the number of
verb dependents and sentence complexity, we be-
lieve that both a low and a high number of depen-
dents can make sentence readability quite complex,
although for different reasons (elliptical construc-
tions in the former case, a high number of modifiers
in the latter). Within this feature set we also con-
sidered the distribution of verbal predicates by arity.
To our knowledge, this set of features has never been
used so far for readability assessment purposes.
Subordination features: subordination is widely
acknowledged to be an index of structural complex-
ity in language. As in Aluisio et al (2010), this set
of features has been introduced here with a specific
view to the text simplification task. A first feature
was meant to measure the distribution of subordi-
nate vs main clauses. For subordinates, we also
considered their relative ordering with respect to
the main clause: according to Miller and Weinert
(1998), sentences containing subordinate clauses in
post?verbal rather than in pre?verbal position are
easier to read. Two further features were intro-
duced to capture the depth of embedded subordinate
clauses since it is a widely acknowledged fact that
highly complex sentences contain deeply embedded
subordinate clauses: in particular, a) the average
depth of ?chains? of embedded subordinate clauses
and b) the probability distribution of embedded sub-
ordinate clauses ?chains? by depth.
Length of dependency links feature: both Lin
(1996) and Gibson (1998) showed that the syntactic
complexity of sentences can be predicted with mea-
sures based on the length of dependency links. This
is also demonstrated in McDonald and Nivre (2007)
who claim that statistical parsers have a drop in ac-
curacy when analysing long dependencies. Here, the
77
dependency length is measured in terms of the words
occurring between the syntactic head and the depen-
dent. This feature is the dependency-based counter-
part of the ?phrase length? feature used for readabil-
ity assessment by Nenkova (2010) and Feng (2010).
5 The Corpora
One challenge in this work was finding an appropri-
ate corpus. Although a possibly large collection of
texts labelled with their target grade level (such as
the Weekly Reader for English) would be ideal, we
are not aware of any such collection that exists for
Italian in electronic form. Instead, to test our ap-
proach to automatically identify the readability of a
given text, we used two different corpora: a news-
paper corpus, La Repubblica (henceforth, ?Rep?),
and an easy?to?read newspaper, Due Parole (hence-
forth, ?2Par?) which was specifically written for an
audience of adults with a rudimentary literacy level
or with mild intellectual disabilities. The articles in
2Par were written by Italian linguists expert in text
simplification using a controlled language both at
the lexicon and sentence structure levels (Piemon-
tese, 1996) .
There are different motivations underlying the se-
lection of these two corpora for our study. On the
practical side, to our knowledge 2Par is the only
available corpus of simplified texts addressing a
wide audience characterised by a low literacy level.
So, the use of 2Par represented the only possible op-
tion on the front of simplified texts. For the selection
of the second corpus we opted for texts belonging
to the same class, i.e. newspapers: this was aimed
at avoiding interferences due to textual genre varia-
tion in the measure of text readability. This is con-
firmed by the fact that the two corpora show a sim-
ilar behaviour with respect to a number of different
parameters, which according to the literature on reg-
ister variation (Biber, 2009) are indicative of textual
genre differences: e.g. lexical density, the noun/verb
ratio, the percentage of verbal roots, etc. On the
other hand, the two corpora differ significantly with
respect to the distribution of features typically cor-
related with text complexity, e.g. the composition of
the used vocabulary (e.g. the percentage of words
belonging to the Basic Italian Vocabulary in Rep is
4.14% and in 2Par is 48.04%) or, from the syntactic
point of view, the average parse tree height (which in
Rep is 5.71 and in 2Par 3.67), the average number of
verb phrases per sentence (which in Rep is 2.40 and
in 2Par 1.25), the depth of nested structures (e.g. the
average depth of embedded complement ?chains? in
Rep is 1.44 and in 2Par is 1.30), the proportion of
main vs subordinate clauses (in Rep main and sub-
ordinate clauses represent respectively 65.11% and
34.88% of the cases; in 2Par there is 79.66% of main
clauses and 20.33% of subordinate clauses).
The Rep/2Par pair of corpora is somehow remi-
niscent of corpora used in other readability studies,
such as Encyclopedia Britannica and Britannica El-
ementary, but with a main difference: whereas the
English corpora consist of paired original/simplified
texts, which we might define as ?parallel monolin-
gual corpora?, the selected Italian corpora rather
present themselves as ?comparable monolingual
corpora?, without any pairing of the full?simplified
versions of the same article. Comparability is guar-
anteed here by the inclusion of texts belonging to the
same textual genre: we expect such comparable cor-
pora to be usefully exploited for readability assess-
ment because of the emphasis on style over topic.
Although these corpora do not provide an ex-
plicit grade?level ranking for each article, broad
categories are distinguished, namely easy?to?read
vs difficult?to?read texts. The two paired com-
plex/simplified corpora were used to train and test
different language models described in Section 6.
As already pointed out, such a distinction is reliable
in a document classification scenario, while at the
sentence classification level it poses the remarkable
issue of discerning easy?to?read sentences within
difficult?to?read documents (i.e. Rep).
6 Experiments and Results
READ?IT was tested on the 2Par and Rep cor-
pora automatically POS tagged by the Part?Of?
Speech tagger described in Dell?Orletta (2009) and
dependency?parsed by the DeSR parser (Attardi,
2006) using Support Vector Machine as learning al-
gorithm. Three different sets of experiments were
devised to test the performance of READ-IT in the
following subtasks: i) document readability classifi-
cation, ii) sentence readability classification and iii)
detection of easy?to?read sentences within difficult?
78
to?read texts.
For what concerns the document classification
subtask, we used a corpus made up of 638 docu-
ments of which 319 were extracted from 2Par (taken
as representative of the class easy?to?read texts) and
319 from Rep (representing the class of difficult?
to?read texts). We have followed a 5?fold cross?
validation process: the corpus was randomly split
into 5 training and test sets. The test sets consisted
of 20% of the individual documents belonging to the
two considered readability levels, with each docu-
ment being included in one test set only. With re-
gard to the sentence classification subtask, we used a
training set of about 3,000 sentences extracted from
2Par and of about 3,000 sentences from Rep and a
test corpus of 1,000 sentences of which 500 were ex-
tracted from 2Par (hereafter, 2Par test set) and 500
from Rep (hereafter, Rep test set). In the third ex-
periment, readability assessment was carried out by
READ?IT with respect to a much bigger corpus of
2,5 milion of words extracted from the newspaper
La Repubblica (hereafter, Rep 2.5), for a total of
123,171 sentences, with the final aim of detecting
easy?to?read sentences.
All the experiments were carried out using four
different readability models, described as follows:
1. Base Model, using raw text features only;
2. Lexical Model, using a combination of raw
text and lexical features;
3. MorphoS Model: using raw text, lexical and
morpho?syntactic features;
4. Syntax Model: combining all feature types,
namely raw text, lexical, morpho?syntactic and
syntactic features.
Note that in the Lexical and Syntax Models, dif-
ferent sets of features were selected for the subtasks
of document and sentence classification. In particu-
lar, for sentence?based readability assesment we did
not take into account the Type/Token Ratio feature,
all features concerning the distribution of ?chains?
of embedded complements and subordinate clauses
and the distribution of verbal predicates by arity.
Since, to our knowledge, a machine learning read-
ability classifier does not exist for the Italian lan-
guage we consider the Base Model as our baseline:
this can be seen as an approximation of the Gul-
pEase index, which is based on the same raw text
features (i.e. sentence and word length).
6.1 Evaluation Methodology
Different evaluation methods have been defined in
order to assess achieved results in the three afore-
mentioned experiment sets. The performance of
both document and sentence classification experi-
ments have been evaluated in terms of i) overall Ac-
curacy of the system and ii) Precision and Recall.
In particular, Accuracy is a global score referring
to the percentage of documents or sentences cor-
rectly classified, either as easy?to?read or difficult?
to?read objects. Precision and Recall have been
computed with respect to two the target reading lev-
els: in particular, Precision is the ratio of the number
of correctly classified documents or sentences over
the total number of documents and sentences classi-
fied by READ?IT as belonging to the easy?to?read
(i.e. 2Par) or difficult?to?read (i.e. Rep) classes; Re-
call has been computed as the ratio of the number of
correctly classified documents or sentences over the
total number of documents or sentences belonging
to each reading level in the test sets. For each set of
experiments, evaluation was carried out with respect
to the four models of the classifier.
Following from the assumption that 2Par con-
tains only easy?to?read sentences while Rep does
not necessarily contain only difficult?to?read ones,
we consider READ?IT errors in the classification of
2Par sentences as erroneously classified sentences.
On the other hand, classification errors within the
set of Rep sentences deserve an in?depth error anal-
ysis, since we need to discern real errors from mis-
classifications due to the fact that we are in front of
easy?to?read sentences occurring in a difficult?to?
read context. In order discern errors from ?correct?
misclassifications, we introduced a new evaluation
methodology, based on the notion of Euclidean dis-
tance between feature vectors. Each feature vec-
tor is a n?dimensional vector of linguistic features
(see Section 4.1) that represents a set of sentences.
Two vectors with 0 distance represent the same set
of sentences, i.e. those sentences sharing the same
values for the monitored linguistic features. Con-
versely, the bigger the distance between two vectors
is, the more distant are the two represented sets of
79
sentences with respect to the monitored features.
The same notion of distance has also been used
to test which model was more effective in predicting
the readability of n?word long sentences.
6.2 Results
In Table 1, the Accuracy, Precision and Recall scores
achieved with the different READ?IT models in the
document classification subtask are reported. It can
be noticed that the Base Model shows the lowest per-
formance, while the MorphoS Model outperforms
all other models. Interestingly, the Lexical Model
shows a high accuracy for what concerns the doc-
ument classification subtask (95.45%), by signifi-
cantly improving the accuracy score of the Base
Model (about +19%). This result demonstrates that
for assessing the readability of documents a combi-
nation of raw and lexical features provides reliable
results which can be further improved (about +3%)
by also taking into account morpho-syntax.
2Par Rep
Model Accuracy Prec Rec Prec Rec
Base 76.65 74.71 80.56 78.91 72.73
Lexical 95.45 95.60 95.30 95.31 95.61
MorphoS 98.12 98.12 98.12 98.12 98.12
Syntax 97.02 97.17 96.87 96.88 97.18
Table 1: Document classification results
Consider now the sentence classification subtask.
Table 2 shows that in this case the most reliable re-
sults are achieved with the Syntax Model. It is inter-
esting to note that the morpho?syntactic and syntac-
tic features allow a much higher increment in terms
of Accuracy, Precision and Recall scores than in the
document classification scenario: i.e. the difference
between the performance of the Lexical Model and
the best one in the document classification experi-
ment (i.e. the MorphoS Model) is equal to 2.6%,
while in the sentence classification case (i.e. Syntax
Model) is much higher, namely 17% .
In Table 3, we detail the performance of the best
READ?IT model (i.e. the Syntax Model) on the
Rep test set. In order to evaluate those sentences
which were erroneously classified as belonging to
2Par, we calculated the distance between 2Par and i)
these sentences (140 sentences referred to as wrong
in the Table), ii) the correctly classified sentences
2Par Rep
Model Accuracy Prec Rec Prec Rec
Base 59.6 55.6 95.0 82.9 24.2
Lexical 61.6 57.3 91.0 78.1 32.2
MorphoS 76.1 72.8 83.4 80.6 68.8
Syntax 78.2 75.1 84.4 82.2 72.0
Table 2: Sentence classification results
(360 sentences, referred to as correct in the Table),
iii) the whole Rep test set. As we can see, the dis-
tance between the wrong sentences and 2Par is much
lower than the distance holding between 2Par and
the correcly classified sentences (correct). This en-
tails that the sentences which were erroneously clas-
sified as easy?to?read sentences (i.e. belonging to
2Par) are in fact more readable than the correctly
classified ones (as belonging to Rep).It is obvious
that the Rep test set, which contains both correct and
wrong sentences, has an intermediate distance value
with respect to 2Par.
Distance
Correct 52.072
Rep test set 45.361
Wrong 37.843
Table 3: Distances between 2Par and Rep on the basis of
the Syntax Model
In Table 4, the percentage of Rep 2.5 sentences
classified as difficult?to?read is reported. The re-
sults show that the Syntax Model classifies the higher
number of sentences as difficult?to?read, but from
these results we cannot say whether this model is the
best one or not since Rep 2.5 sentences are not anno-
tated with readability information. Therefore, in or-
der to compare the performance of the four READ?
IT models and to identify which is the best one, we
computed the distance between the sentences clas-
sified as easy?to?read and 2Par, which is reported,
for each model, in Table 5. It can be noticed that
the Syntax Model appears to be the best one since it
shows the lowest distance with respect to 2Par; on
the other hand, the whole Rep 2.5 corpus shows a
higher distance since it contains both difficult? and
easy?to?read sentences. Obviously, the sentences
classified as difficult?to?read by the Syntax Model
(Diff Syntax in the Table) show the broader distance.
80
Accuracy
Base 0.234
Lexical 0.387
MorphoS 0.705
Syntax 0.755
Table 4: Accuracy in sentence classification of Rep 2.5.
Distance
Diff Syntax 66.526
Rep 2.5 64.040
Base 61.135
Lexical 60.529
MorphoS 55.535
Syntax 51.408
Table 5: Distance between 2Par and i) difficult?to?read
sentences according to the Syntax Model, ii) Rep 2.5, iii)
easy?to?read sentences by the four models.
In order to gain an in?depth insight into the
different behaviour of the four READ?IT models,
we evaluated their performances for sentences of a
fixed length. We considered sentences whose length
ranges between 8 and 30. For every set of sentences
of the same legth, we compared the easy?to-read
sentences of Rep 2.5 classified by the four models
with respect to 2Par. In Figure 1, each point rep-
resents the distance between a set of sentences of
the same length and the same n?word long set of
sentences in the 2Par corpus. As it can be seen, the
bottom line which represents the sentences classified
as easy?to?read by the Syntax Model is the closest
to the 2Par sentences of the same length. On the
contrary, the line representing the sentences classi-
fied by the Base Model is the most distant amongst
the four READ?IT models. Interestingly, it over-
laps with the line representing the Rep 2.5 sentences:
this suggests that a classification model based only
on raw text features (i.e. sentence and word length)
is not able to identify easy?to?read sentences if we
consider sets of sentences of a fixed length. Obvi-
ously, the line representing the sentences classified
as difficult?to?read by the Syntax Model shows the
broadest distance. This experiment has shown that
linguistically motivated features (and in particular
syntactic ones) have a fundamental role in the sen-
tence readability assessment subtask.
Figure 1: Distance between 2Par and i) difficult?to?read
sentences according to the Syntax Model, ii) Rep 2.5, iii)
easy?to?read sentences by the four models for sets of sen-
tences of fixed length
7 Conclusion
In this paper, we proposed a new approach to read-
ability assessment with a specific view to the task of
text simplification: the intended audience includes
people with low literacy skills and/or with mild cog-
nitive impairment. The main contributions of this
work can be summarised as follows: i) READ?
IT represents the first advanced readability assess-
ment tool for what concerns Italian; ii) it combines
traditional raw text features with lexical, morpho-
syntactic and syntactic information; iii) readability
assessment is carried out with respect to both doc-
uments and sentences. Sentence?based readability
assessment is an important novelty of our approach
which creates the prerequisites for aligning readabil-
ity assessment with text simplification. READ?IT
shows a high accuracy in the document classification
task and promising results in the sentence classifica-
tion scenario. The two different tasks appear to en-
force different requirements at the level of the under-
lying linguistic features. To overcome the lack of an
Italian reference resource annotated with readability
information at the sentence level we introduced the
notion of distance to assess READ?IT performance.
81
Acknowledgements
The research reported in the paper has been partly
supported by the national project ?Migrations? of
the National Council of Research (CNR) in the
framework of the line of research Advanced tech-
nologies and linguistic and cultural integration in
the school. In particular the authors would like
to thank Eva Maria Vecchi who contributed to the
prerequisites of the proposed readability assessment
methodology reported in the paper.
References
Sandra Aluisio, Lucia Specia, Caroline Gasperin and
Carolina Scarton. 2010. Readability assessment for
text simplification. In Proceedings of the NAACL HLT
2010 Fifth Workshop on Innovative Use of NLP for
Building Educational Applications, pp. 1?9.
Giuseppe Attardi. 2006. Experiments with a multilan-
guage non-projective dependency parser. In Proceed-
ings of the Tenth Conference on Computational Nat-
ural Language Learning (CoNLL-X ?06), New York
City, New York, pp. 166?170.
Regina Barzilay and Mirella Lapata. 2008. Modeling
local coherence: An entity-based approach. In Com-
putational Linguistics, 34(1), pp. 1?34.
Douglas Biber and Susan Conrad. 2009. Register, genre,
and style. Cambridge, Cambridge University Press.
Tim vor der Bru?ck, Sven Hartrumpf, Hermann Helbig.
2008. A Readability Checker with Supervised Learn-
ing using Deep Syntactic and Semantic Indicators. In
Proceedings of the 11th International Multiconference:
Information Society - IS 2008 - Language Technolo-
gies, Ljubljana, Slovenia, pp. 92?97.
Jeanne S. Chall and Edgar Dale. 1995. Readability
Revisited: The New Dale?Chall Readability Formula.
Brookline Books, Cambridge, MA.
Chih-Chung Chang and Chih-Jen Lin. 2001. LIB-
SVM: a library for support vector machines. Soft-
ware available at http://www.csie.ntu.edu.
tw/?cjlin/libsvm
Kevyn Collins-Thompson and Jamie Callan. 2004. A
language modeling approach to predicting reading dif-
ficulty. In Proceedings of the HLT / NAACL, pp. 193?
200.
Felice Dell?Orletta. 2009. Ensemble system for Part-of-
Speech tagging. In Proceedings of Evalita?09, Eval-
uation of NLP and Speech Tools for Italian, Reggio
Emilia, December.
Tullio De Mauro. 2000. Il dizionario della lingua ital-
iana. Torino, Paravia.
Lijun Feng, Martin Jansche, Matt Huenerfauth and
Noe?mie Elhadad. 2010. A comparison of features for
automatic readability assessment. In Proceedings of
the 23rd International Conference on Computational
Linguistics (COLING 2010), pp. 276?284.
Lijun Feng, Noe?mie Elhadad and Matt Huenerfauth.
2009. Cognitively motivated features for readability
assessment. In Proceedings of the 12th Conference of
the European Chapter of the Association for Compu-
tational Linguistics (EACL ?09), pp. 229?237.
V. Franchina and Roberto Vacca. 1986. Adaptation of
Flesh readability index on a bilingual text written by
the same author both in Italian and English languages.
In Linguaggi (3), pp. 47?49.
Lyn Frazier. 1985. Syntactic complexity. In D.R.
Dowty, L. Karttunen and A.M. Zwicky (eds.), Natural
Language Parsing, Cambridge University Press, Cam-
bridge, UK.
Edward Gibson. 1998. Linguistic complexity: Locality
of syntactic dependencies. In Cognition, 68(1), pp. 1-
76.
Michael J. Heilman, Kevyn Collins and Jamie Callan.
2007. Combining Lexical and Grammatical Features
to Improve Readability Measures for First and Second
Language Texts. In Proceedings of the Human Lan-
guage Technology Conference, pp. 460?467.
Michael J. Heilman, Kevyn Collins and Maxine Eske-
nazi. 2008. An analysis of statistical models and fea-
tures for reading difficulty prediction. In Proceedings
of the Third Workshop on Innovative Use of NLP for
Building Educational Applications (EANL ?08), pp.
71?79.
Rohit J. Kate, Xiaoqiang Luo, Siddharth Patwardhan,
Martin Franz, Radu Florian, Raymond J. Mooney,
Salim Roukos, Chris Welty. 2010. Learning to Pre-
dict Readability using Diverse Linguistic Features. In
Proceedings of the 23rd International Conference on
Computational Linguistics (COLING 2010), pp. 546?
554.
J. Peter Kincaid, Lieutenant Robert P. Fishburne, Richard
L. Rogers and Brad S. Chissom. 1975. Derivation
of new readability formulas for Navy enlisted person-
nel. Research Branch Report, Millington, TN: Chief
of Naval Training, pp. 8?75.
George Kingsley Zipf. 1988. The Psychobiology of Lan-
guage. Houghton?Miflin, Boston.
Dekan Lin. 1996. On the structural complexity of nat-
ural language sentences. In Proceedings of COLING
1996, pp. 729?733.
Pietro Lucisano and Maria Emanuela Piemontese. 1988.
Gulpease. Una formula per la predizione della diffi-
colta` dei testi in lingua italiana. In Scuola e Citta` (3),
pp. 57?68.
82
Ryan McDonald and Joakim Nivre. 2007. Character-
izing the Errors of Data-Driven Dependency Parsing
Models. In Proceedings of EMNLP-CoNLL, 2007, pp.
122-131.
Jim Miller and Regina Weinert. 1998. Spontaneous spo-
ken language. Syntax and discourse. Oxford, Claren-
don Press.
Ani Nenkova, Jieun Chae, Annie Louis, and Emily Pitler.
2010. Structural Features for Predicting the Linguistic
Quality of Text Applications to Machine Translation,
Automatic Summarization and Human?Authored Text.
In E. Krahmer, M. Theune (eds.), Empirical Methods
in NLG, LNAI 5790, Springer-Verlag Berlin Heidel-
berg, pp. 222?241.
Sarah E. Petersen and Mari Ostendorf. 2006. A machine
learning approach to reading level assessment. Uni-
versity of Washington CSE Technical Report.
Sarah E. Petersen and Mari Ostendorf. 2009. A ma-
chine learning approach to reading level assessment.
In Computer Speech and Language (23), pp. 89?106.
Maria Emanuela Piemontese. 1996. Capire e farsi
capire. Teorie e tecniche della scrittura controllata
Napoli, Tecnodid.
Emily Pitler and Ani Nenkova. 2008. Revisiting read-
ability: A unified framework for predicting text qual-
ity. In Proceedings of the 2008 Conference on Em-
pirical Methods in Natural Language Processing, pp.
186?195.
Kristine Retherford. 2003. Normal development: a
database of communication and related behaviors.
Eau Claire, WI: Thinking Publications.
Brian Roark, Margaret Mitchell and Kristy Hollingshead.
2007. Syntactic complexity measures for detecting
mild cognitive impairment. In Proceedings of the
Workshop on BioNLP 2007: Biological, Translational,
and Clinical Language Processing, pp. 1?8.
Sarah E. Schwarm and Mari Ostendorf. 2005. Read-
ing level assessment using support vector machines
and statistical language models. In Proceedings of
the 43rd Annual Meeting on Association for Compu-
tational Linguistics (ACL 05), pp. 523?530.
Luo Si and Jamie Callan. 2001. A statistical model for
scientific readability. In Proceedings of the tenth in-
ternational conference on Information and knowledge
management, pp. 574?576.
Adam Skory and Maxine Eskenazi. 2010. Predicting
cloze task quality for vocabulary training. In Proceed-
ings of the NAACL HLT 2010 Fifth Workshop on In-
novative Use of NLP for Building Educational Appli-
cations, pp. 49?56.
Victor H.A. Yngve. 1960. A model and an hypothesis for
language structure. In Proceedings of the American
Philosophical Society, pp. 444-466.
Heather Harris Wright, Stacy W. Silverman and Marilyn
Newhoff. 2003. Measures of lexical diversity in apha-
sia. In Aphasiology, 17(5), pp. 443-452.
83
Proceedings of the Eighth Workshop on Innovative Use of NLP for Building Educational Applications, pages 207?215,
Atlanta, Georgia, June 13 2013. c?2013 Association for Computational Linguistics
Linguistic Profiling based on General?purpose Features and Native
Language Identification
Andrea Cimino, Felice Dell?Orletta, Giulia Venturi and Simonetta Montemagni
Istituto di Linguistica Computazionale ?Antonio Zampolli? (ILC?CNR)
ItaliaNLP Lab - www.italianlp.it
via G. Moruzzi, 1 ? Pisa (Italy)
{name.surname}@ilc.cnr.it
Abstract
In this paper, we describe our approach to na-
tive language identification and discuss the re-
sults we submitted as participants to the First
NLI Shared Task. By resorting to a wide set of
general?purpose features qualifying the lexi-
cal and grammatical structure of a text, rather
than to ad hoc features specifically selected
for the NLI task, we achieved encouraging re-
sults, which show that the proposed approach
is general?purpose and portable across differ-
ent tasks, domains and languages.
1 Introduction
Since the seminal work by Koppel et al (2005),
within the Computational Linguistics community
there has been a growing interest in the NLP?based
Native Language Identification (henceforth, NLI)
task. However, so far, due to the unavailability
of balanced and wide?coverage benchmark corpora
and the lack of evaluation standards it has been dif-
ficult to compare the results achieved for this task
with different methods and techniques (Tetreault et
al., 2013). The First Shared Task on Native Lan-
guage Identification (Tetreault et al, 2013) can be
seen as an answer to the above mentioned problems.
In this paper, we describe our approach to na-
tive language identification and discuss the results
we submitted as participants to the First NLI Shared
Task. Following the guidelines by the Shared Task
Organizers based on the previous literature on this
topic, Native Language Identification is tackled as
a text classification task combining NLP?enabled
feature extraction and machine learning: see e.g.
Tetreault et al (2013) and Brooke and Hirst (2012).
Interestingly, the same methodological paradigm is
shared by other tasks like e.g. author recognition and
verification (see e.g. van Halteren (2004), author-
ship attribution (see Juola (2008) for a survey), genre
identification (Mehler et al, 2011) as well as read-
ability assessment (see Dell?Orletta et al (2011a) for
an updated survey), all relying on feature extraction
from automatically parsed texts and state?of?the?art
machine learning algorithms. Besides obvious dif-
ferences at the level of the typology of selected lin-
guistic features and of learning techniques, these dif-
ferent tasks share a common approach to the prob-
lems they tackle: i.e. they succeed in determining
the language variety, the author, the text genre or the
level of readability of a text by exploiting the distri-
bution of different types of linguistic features auto-
matically extracted from texts.
Our approach to NLI relies on multi?level lin-
guistic analysis, covering morpho?syntactic tagging
and dependency parsing. In the NLI literature, the
range of features used is wide and includes char-
acteristics of the linguistic structure underlying the
L2 text, encoded in terms of sequences of charac-
ters, words, grammatical categories or of syntac-
tic constructions, as well as of the document struc-
ture: note however that, in most part of the cases,
the exploited features are task?specific. In our ap-
proach, we decided to resort to a wide set of fea-
tures ranging across different levels of linguistic de-
scription (i.e. lexical, morpho?syntactic and syntac-
tic) without any a priori selection: the same set of
features was successfully exploited in NLI?related
tasks, i.e. focusing on the linguistic form rather than
207
the content of texts, such as readability assessment
(Dell?Orletta et al, 2011a) or the classification of
textual genres (Dell?Orletta et al, 2012).
The exploitation of general features qualifying the
lexical and grammatical structure of a text, rather
than ad hoc features specifically selected for the task
at hand, is not the only peculiarity of our approach
to NLI. Following Biber (1993), we start from the
assumption that ?linguistic features from all levels
function together as underlying dimensions of vari-
ation?. This choice stems from studies on linguis-
tic variation, in particular from Biber and Conrad
(2009) who claim that linguistic varieties ? called
?registers? from a functional perspective ? differ ?in
their characteristic distributions of pervasive linguis-
tic features, not the single occurrence of an indi-
vidual feature?. This is to say that by carrying out
the linguistic analysis of collections of essays each
written by different L1 native speakers, we need to
quantify the extent to which a given feature occurs
in each collection, in order to reconstruct the lin-
guistic profile underlying each L1 collection: dif-
ferences lie at the level of the distribution of linguis-
tic features, which can be common and pervasive in
some L1 collections but comparatively rare in oth-
ers. This approach is the basis of so?called ?linguis-
tic profiling? of texts, within which ?the occurrences
of a large number of linguistic features in a text, ei-
ther individual items or combinations of items, are
counted? (van Halteren, 2004) with the final aim of
reconstructing the profile of a text.
We carried out native language identification in
two steps. The first step consisted of the identifi-
cation of the set of linguistic features characteriz-
ing the essays written by different L1 native speak-
ers, i.e. the linguistic profiling of the different sec-
tions of TOEFL11 corpus (Blanchard et al, 2013)
distributed as training and development data. In
the second step, the features which turned out to
have highly discriminative power were used for the
classification of essays written by different L1 na-
tive speakers. Essay classification has been carried
out by experimenting with different approaches: i.e.
a single?classifier method and two different multi?
model ensemble approaches.
The paper is organised as follows: after introduc-
ing the set of used linguistic features (Section 2),
Section 3 illustrates a selection of the linguistic
profiling results obtained with respect to the train-
ing section of the TOEFL11 corpus; Section 4 de-
scribes the different classification approaches we
followed and the feature selection process; in Sec-
tion 5 achieved results are reported and discussed.
2 Features
In this study, we focused on a wide set of features
ranging across different levels of linguistic descrip-
tion. Differing from previous work on NLI, no a
priori selection of features was carried out. Instead
of focusing on particular classes of errors or on dif-
ferent types of stylistic idiosyncrasies, we took into
account a wide range of features which are typically
used in studies focusing on the ?form? of a text,
e.g. on issues of genre, style, authorship or read-
ability. As previously pointed out, this represents a
peculiarity of our approach. This choice makes the
selected features language?independent, domain?
independent and reusable across different types of
tasks, as empirically demonstrated in Dell?Orletta
et al (2011a) where the same set of features has
been successfully exploited for readability assess-
ment, and in Dell?Orletta et al (2012) where the fea-
tures have been used for the classification of differ-
ent types of textual genre. Note that in both cases the
language dealt with was Italian: for the NLI Shared
Task we had to specialize the feature extraction pro-
cess with respect to the English language as well as
to the annotation scheme used to represent the un-
derlying linguistic structure.
The whole set of features we started with is de-
scribed below, organised into four main categories:
namely, raw text and lexical features as well as
morpho-syntactic and syntactic features. This pro-
posed four?fold partition closely follows the differ-
ent levels of linguistic analysis automatically car-
ried out on the text being evaluated, i.e. tokeniza-
tion, lemmatization, morpho-syntactic tagging and
dependency parsing.
2.1 Raw and Lexical Text Features
Sentence Length, calculated as the average number
of words per sentence.
Word Length, calculated as the average number of
characters per word.
Document Length, calculated as the total number
208
of words per document.
Character bigrams.
Word n-grams, including both unigrams and bi-
grams.
Type/Token Ratio: the Type/Token Ratio (TTR) is
a measure of vocabulary variation which has shown
to be a helpful measure of lexical variety within
a text as well as style marker in an authorship at-
tribution scenario: a text characterized by a low
type/token ratio will contain a great deal of repeti-
tion whereas a high type/token ratio reflects vocabu-
lary richness and variation. Due to its sensitivity to
sample size, TTR has been computed for text sam-
ples of equivalent length (the first 50 tokens).
2.2 Morpho?syntactic Features
Coarse grained Part-Of-Speech n-grams: distri-
bution of unigrams and bigrams of coarse?grained
PoS, corresponding to the main grammatical cate-
gories (e.g. noun, verb, adjective, etc.).
Fine grained Part-Of-Speech n-grams: distribu-
tion of unigrams and bigrams of fine?grained PoS,
which represent subdivisions of the coarse?grained
tags (e.g. the class of nouns is subdivided into proper
vs common nouns, verbs into main verbs, gerund
forms, past particles, etc.).
Verbal chunks: distribution of sequences of verbal
PoS (also including adverbs). This feature can be
seen as a proxy to capture different aspects of verbal
predication, with particular attention to idiosyncratic
usages of verbal mood, tense, person and adverbial
modification.
Lexical density: ratio of content words (verbs,
nouns, adjectives and adverbs) to the total number
of lexical tokens in a text.
2.3 Syntactic Features
Dependency types n-grams: distribution of uni-
grams and bigrams of dependency types calculated
with respect to i) the hierarchical parse tree structure
and ii) the surface linear ordering of words.
Dependency triples: distribution of triplets repre-
senting a dependency relation consisting of a syn-
tactic head (h), the dependency relation type (t) and
the dependent (d). Two different variants of this fea-
ture are distinguished, based on the fact that either
the coarse?grained PoS or the word?form of h and d
is considered: we will refer to the former as Coarse
grained Part-Of-Speech dependency triples and to
the latter as Lexical dependency triples. In both
cases, the relative ordering of h and d, i.e. whether h
precedes or follows d at the level of the linear order-
ing of words within the sentence, is also considered.
Dependency Subtrees: distribution of dependency
subtrees consisting of a dependency relation (repre-
sented as the dependency triple {h, t, d}), the head
father and the dependency relation linking the two.
As in the previous case, two different variants of this
feature are distinguished, based on the fact that ei-
ther the coarse grained PoS or the word?forms of
the nodes in the dependency subtree are considered.
Parse tree depth features: this set of features is
meant to capture different aspects of the parse tree
depth and includes: a) the depth of the whole parse
tree, calculated in terms of the longest path from
the root of the dependency tree to some leaf; b)
the average depth of embedded complement ?chains?
governed by a nominal head and including either
prepositional complements or nominal and adjecti-
val modifiers; c) the probability distribution of em-
bedded complement ?chains? by depth. These fea-
tures represent reliable indicators of sentence com-
plexity, as stated by, among others, Yngve (1960),
Frazier (1985) and Gibson (1998), and they can thus
allow capturing specific difficulties of L2 learners.
Coarse grained Part-Of-Speech of sentence root:
this feature refers to coarse grained POS of the syn-
tactic root of a sentence.
Arity of verbal predicates: this feature refers to
the number of dependencies (corresponding to either
subcategorized arguments or modifiers) governed by
the same verbal head. In the NLI context, it can al-
low capturing improper verbal usage by L2 learners
due to language transfer (e.g. with pro?drop lan-
guages as L1).
Subordination features: this set of features is
meant to capture different aspects of the use of sub-
ordination and includes: a) the distribution of sub-
ordinate vs main clauses; b) the average depth of
?chains? of embedded subordinate clauses and c)
the probability distribution of embedded subordinate
clauses ?chains? by depth. Similarly to parse tree
depth, this set of features can be taken to reflect the
structural complexity of sentences and can thus be
indicative of specific difficulties of L2 learners.
Length of dependency links: measured in terms
209
of the words occurring between the syntactic head
and the dependent. This is another feature which
reflects the syntactic complexity of sentences (Lin,
1996; Gibson, 1998) and which can be successfully
exploited to capture syntactic idiosyncracies of L2
learners due to L1 interferences.
2.4 Other features
Two further features have been considered for NLI
purposes, which were included in the distributed
datasets. For each document, we have also consid-
ered i) the English language proficiency level (high,
medium, or low) based on human assessment by lan-
guage specialists, and ii) the topic of the essays.
3 Linguistic Profiling of TOEFL11 Corpus
In this section, we illustrate the results of linguis-
tic profiling carried out on the training and devel-
opment sets extracted from the TOEFL11 corpus.
This corpus, described in Blanchard et al (2013),
contains 1,100 essays per 11 languages (for a to-
tal of 12,100 essays) sampled as evenly as possi-
ble from 8 prompts (i.e., topics) along with score
levels (low/medium/high) for each essay. The con-
sidered L1s are: Arabic, Chinese, French, German,
Hindi, Italian, Japanese, Korean, Spanish, Telugu,
and Turkish. For the specific purposes of the NLI
Shared Task, a total of 9,900 essays has been dis-
tributed as training data (900 essays per L1), 1,100
as development data (100 per L1) and the remaining
1,100 essays have been used as test data.
We started from the automatic linguistic annota-
tion of training and development data whose output
has been searched for with respect to the features il-
lustrated in Section 2.
3.1 Linguistic Pre?processing
Both training and development data were au-
tomatically morpho-syntactically tagged by the
POS tagger described in Dell?Orletta (2009) and
dependency?parsed by the DeSR parser using
Multi?Layer Perceptron as learning algorithm (At-
tardi et al, 2009), a state?of?the?art linear?time
Shift?Reduce dependency parser. Feature extraction
is carried out against the output of the multi?level
automatic linguistic analysis carried out during the
pre?processing stage: lexical and grammatical pat-
terns corresponding to the wide typology of selected
features are looked for within each annotation layer
and quantified.
3.2 Linguistic Profiling
Generally speaking, linguistic profiling makes it
possible to identify (groups of) texts which are sim-
ilar, at least with respect to the ?profiled? features
(van Halteren, 2004). In what follows we report
the results of linguistic profiling obtained with re-
spect to the 11 L1 sub?corpora considered in this
study. Figure 1 shows the results obtained with re-
spect to a selection of the features described in Sec-
tion 2. These results refer to the combined training
and development data sets: note, however, that we
also calculated the values of these features in the two
datasets separately and it turned out that they do not
vary significantly between the two sets. This fact
can be taken as a proof both of the reliability of our
approach to linguistic profiling and of the relevance
of these features for NLI purposes.
Starting from raw textual features (Figures 1(a)
and 1(b)), both average sentence length and aver-
age word length vary significantly across L1s. In
particular, if on the one hand the essays written by
Arabic and Spanish L1 speakers contain the shortest
words and the longest sentences, on the other hand
the Hindi and Telugu L1 essays are characterized by
the longest words; the L1 Japanese and Korean cor-
pora contain the shortest sentences.
Let us focus now on the distribution of unigrams
of coarse grained Parts?Of?Speech. If we consider
the distributions of determiners and nouns, two fea-
tures typically used for NLI purposes (Wong and
Dras, 2009) which also represent stylistic markers
associated with different linguistic varieties (Biber
and Conrad, 2009), it can be noticed (see Fig-
ures 1(c) and 1(d)) that for Japanese and Korean the
essays show the lowest percentage of determiners,
while for Hindi and Telugu they are characterized
by the highest percentage of nouns.
For what concerns syntactic features, we observe
that essays by Japanese and Korean speakers are
characterized by quite a different distribution with
respect to the other L1 corpora. In particular, they
show the shallowest parse trees, the shortest depen-
dency links as well as the shortest ?chains? of em-
bedded complements governed by a nominal head.
On the other hand, the essays by Spanish and Ara-
210
(a) Average word length (b) Average sentence length
(c) Distribution of Determiners (d) Distribution of Nouns
(e) Average parse tree depth (f) Average depth of embedded complement ?chains?
(g) Average length of the longest dependency link (h) Arity of verbal predicates
Figure 1: Results of linguistic profiling carried out on the combined training and development sections of the TOEFL11
corpus.
211
bic speakers contain the deepest parse trees, for Ital-
ian and Spanish we observe the longest dependency
links and for Hindi and Telugu the longest sequences
of embedded complements. Moreover, while the
essays by Italians are characterised by the highest
value of arity of verbal predicates, for Hindi, Telugu
and Korean essays much lower values are recorded.
Interestingly, these linguistic profiling results
show similar trends across the 11 languages at dif-
ferent levels of linguistic analysis. For instance, it
can be noted that Japanese and Korean or Italian
and Spanish, which belong to two different language
families, show similar distributions of features. Sim-
ilarities have also been recorded in the sub?corpora
by Hindi and Telugu speakers, even if these lan-
guages do not belong to the same family; we can
hypothesize that this might originate from language
contact phenomena.
4 System Description
4.1 Machine Learning Classifier
Our approach to Native Language Identification has
been implemented in a software prototype, i.e. a
classifier operating on mopho?syntactically tagged
and dependency parsed texts which assigns to each
document a score expressing its probability of be-
longing to a given L1 class. The highest score rep-
resents to the most probable class. Given a set of
features and a training corpus, the classifier creates a
statistical model using the feature statistics extracted
from the training corpus. This model is used in the
classification of unseen documents. The set of fea-
tures and the machine learning algorithm can be pa-
rameterized through a configuration file.
For each feature, we have implemented three dif-
ferent variants, depending on whether the feature
value is encoded in terms of: i ) presence/absence
of the feature (binary variant), ii ) the normalized
frequency (normalized frequency variant), and iii )
the normalized tf*idf value (normalized tf*idf vari-
ant). Since the binary feature variant outperformed
the other two, in all the experiments carried out on
the development set reported in Section 5 we illus-
trate the results obtained using this variant only. This
is in line with the results obtained by Brooke and
Hirst (2012) and Tetreault et al (2013). According
to (Brooke and Hirst, 2012), a possible explanation
is that ?in these relatively short texts, there is high
variability in normalized frequencies, and a simpler
metric, by having less variability, is easier for the
classifier to leverage?. Support Vector Machines
(SVM) using LIBSVM (Chang and Lin, 2001) and
Maximum Entropy (ME) using MaxEnt1 have been
used as machine learning algorithms.
We experimented two classification approaches: a
single classifier method and two ensemble systems,
combining the output of several classifiers.
The single classifier uses the set of features re-
sulting from the feature selection process described
in Section 4.2 and the SVM using linear kernel as
machine learning algorithm. This choice is due to
the fact that in all the experiments the linear SVM
outperformed the SVM using polynomial kernel.
There are two possible explanations for this fact,
namely: a) the number of features is much higher
than the number of training instances, accordingly
it might not be necessary to map data to a higher
dimensional space, therefore the nonlinear mapping
does not improve the performance; b) Weston et al
(2000) showed that SVMs can indeed suffer in high
dimensional spaces where many features are irrele-
vant. Note that in Section 5, we report the results of
this classifier using different sets of features corre-
sponding to the lexical, morpho?syntactic and syn-
tactic levels of linguistic analysis.
The two ensemble systems combine the outputs
of the component classifiers following two different
strategies. The first one is based on the majority vot-
ing method (henceforth, VoteComb ): the combina-
tion strategy is seen as a classical voting problem
where for each essay is assigned the L1 class that
has been selected from the majority of classifiers. In
case of ties, the L1 class predicted from the best indi-
vidual model (as resulting from the experiments car-
ried out on the development set) is selected. The sec-
ond strategy combines the outputs of the component
classifiers via another classifier (henceforth referred
to as meta?classifier): we will refer to this second
strategy as ClassComb. The meta?classifier uses as
a feature the probability score predicted from each
component classifier for each L1 class. Differently
from the component classifiers, the meta?classifier
is based on polynomial kernel SVM. In both en-
1https://github.com/lzhang10/maxent#readme
212
semble systems, the component classifiers use linear
SVM and ME as machine learning algorithms and
exploit different sets of features among the ones re-
sulting from the feature selection process described
below.
4.2 Features Selection Process
Since our approach to NLI relies on a wide num-
ber of general?purpose features, a feature selection
process was necessary in order to prune irrelevant
and redundant features which could negatively af-
fect the classification results. The selection process
starts taking into account all the n features described
in Section 2. In each iteration, for each feature fi we
generate a configuration ci such that fi is disabled
and all the other features are enabled. When an it-
eration finishes, we obtain for each ci a correspond-
ing accuracy score score(ci) which is computed as
the average of the accuracy obtained by the classi-
fier on the development set (ad) and on an internal
development set (ai), corresponding to the 10% of
the training set, used in order to reduce the overfit-
ting risk. Being cb the best configuration among all
the ci configurations, if score(cb) ? of the accuracy
scores resulting from the previous iterations the pro-
cess stops. Otherwise:
1. store in F the pair ?fb, disabled? ;
2. for each configuration ci, if score(ci) ? of the
accuracy scores resulting from the previous it-
erations, we store in F the pair ?fi, enabled?;
3. set C = ?cb, score(cb)?
where F is a map containing elements
feature ? {disabled, enabled} and C is a
pair that contains the current best configuration cb
and the corresponding score score(cb). In each
iteration, we consider only the features which do
not occur in F . At the initialization step F is empty
and C contains the configuration where all the
considered features are enabled.
In spite of the fact that the described selection
process does not guarantee to obtain the global opti-
mum, it however permitted us to obtain an improve-
ment of about 8% with respect to the starting model
indiscriminately using all features.
Table 1 lists the features resulting from the fea-
ture selection process. It can be noted that some
Lexical features:
Word n-grams
Morpho?syntactic features:
Coarse grained Part-Of-Speech unigrams
Fine grained Part-Of-Speech bigrams
Syntactic features:
Dependency types unigrams
Lexical dependency triples
Parse tree depth features
Coarse grained Part-Of-Speech of sentence root
Arity of verbal predicates
Subordination features
Length of dependency links
Table 1: Features resulting from the feature selection pro-
cess.
of them coincide with those typically used for NLI
purposes: this is the case of n?grams of words,
Parts-Of-Speech and syntactic dependencies. Inter-
estingly, to our knowledge, other features such as ar-
ity of verbal predicates, length of dependency links
as well as subordination and parse tree depth fea-
tures have not been used for NLI so far, in spite of
their being widely exploited in the syntactic com-
plexity literature (as discussed in Section 2).
5 Results
Table 2 reports the overall Accuracy achieved with
the different classifier models in the NLI classifi-
cation task on the official test set as well as the
F-measure score recorded for each L1 class. The
first two lines show the accuracies of the two com-
bination models, while the last three report the re-
sults obtained by the single classifier using i) the set
of features resulting by the features selection pro-
cess (Best Single), ii) the selected lexical features
only (see Table 1) (Lexical ) and iii) the lexical and
morpho?syntactic features (Lex+Morph ).
The two combination models outperform all
the single model classifiers: note that ClassComb
achieved much better results with respect to Vote-
Comb. By comparing these results with the F-
measure scores obtained on the distributed develop-
ment data (see Table 3), it can be seen that the rank-
ing of the scores achieved by the different classifiers
remains the same even if on the test data we obtained
a performance of -2,2% with respect to the develop-
213
Accuracy ARA CHI FRE GER HIN ITA JAP KOR SPA TEL TUR
ClassComb 77,9 73,8 77,5 83,2 87,3 71,1 86,0 78,8 74,2 70,8 76,2 78,0
VoteComb 77,2 74,3 77,0 80,0 87,0 72,8 81,6 79,6 73,8 67,7 77,6 77,6
Best Single 76,6 71,9 77,6 75,8 85,7 73,2 82,0 80,0 74,0 69,0 76,9 76,5
Lex+Morph 76,4 77,2 76,2 78,6 85,9 72,1 80,4 76,8 71,9 68,0 76,4 76,4
Lexical 76,2 71,1 76,5 79,0 87,6 74,5 80,8 77,7 70,8 66,7 79,2 73,4
Table 2: Classification results of different classifiers on official test data.
ment test set.
Let us consider now the results obtained by the
single model classifiers. In all cases the Best Single
outperforms the other two models demonstrating the
reliability of the features selection process and that
a combination of lexical, morpho?syntactic and syn-
tactic features leads to better results.
Although the best performing model is the Class-
Comb, this is not true for all the 11 languages. In
Table 2, the best results for each L1 are bolded. In-
terestingly, even though Lexical is the worst model,
it is the best performing one for three L1s while the
best model, i.e. ClassComb, for five only.
It can be noted that with respect to the devel-
opment data set the syntactic features used by the
Best Single model allow an increment of +1% as
opposed to the Lexical model: this represents a
much higher increase if compared with the result
obtained on the test data, which is +0,4%. This is
an unexpected result since the feature selection de-
scribed in Section 4.2 was carried out on an internal
development set in order to prevent the risk of over-
fitting on the distributed development data.
Classifier Accuracy
ClassComb 80,1
VoteComb 79,3
Best Single 78,8
Lex+Morph 78,2
Lexical 77,8
Table 3: Classification results of different classifiers on
distributed development data.
6 Conclusion
In this paper, we reported our participation results
to the First Native Language Identification Shared
Task. By resorting to a wide set of general?
purpose features qualifying the lexical and grammat-
ical structure of a text, rather than to ad hoc fea-
tures specifically selected for the task at hand, we
achieved encouraging results. After a feature se-
lection process, new features which to our knowl-
edge have never been exploited so far for NLI pur-
poses turned out to contribute significantly to the
task. Interestingly, the same set of features we
started from has been previously successfully ex-
ploited in other related tasks, such as readability
assessment and genre classification, operating on
the Italian language. The obtained results suggest
that our approach is general?purpose and portable
across different domains and languages. Further di-
rections of research currently include: i) comparison
of results obtained with general purpose features and
with NLI?specific features (e.g. typical errors or dif-
ferent types of stylistic idiosyncrasies specific to L2
learners), with a view to combining them to achieve
better results; ii) design and development of new en-
semble classification methods as well as new fea-
ture selection methods considering not only classes
of features but also individual features; iii) testing
our approach to NLI on different L2s (e.g. Italian) .
References
Giuseppe Attardi, Felice Dell?Orletta, Maria Simi and
Joseph Turian. 2009. Accurate dependency parsing
with a stacked multilayer perceptron. In Proceedings
of EVALITA, Evaluation of NLP and Speech Tools for
Italian, Reggio Emilia, Italy.
Douglas Biber. 1993. Using Register?diversified Cor-
pora for General Language Studies. Computational
Linguistics Journal, 19(2): 219?241.
Douglas Biber and Susan Conrad. 2009. Genre, Register,
Style. Cambridge: CUP.
Daniel Blanchard, Joel Tetreault, Derrick Higgins, Aoife
Cahill and Martin Chodorow. 2013. TOEFL11: A
Corpus of Non-Native English. Educational Testing
Service.
214
Julian Brooke and Graeme Hirst. 2012. Robust, Lexical-
ized Native Language Identification. In Proceedings
of COLING 2012, Mumbai, India, 391?408.
Chih-Chung Chang and Chih-Jen Lin. 2001. LIBSVM:
a library for support vector machines. Software avail-
able at http://www.csie.ntu.edu.tw/ cjlin/libsvm
Walter Daelemans. 2012. Explanation in Computational
Stylometry. In A. Gelbukh (ed.) CICLing 2012, Part
II, LNCS 7817, Springer?Verlag, 451?462.
Felice Dell?Orletta. 2009. Ensemble system for Part-of-
Speech tagging. In Proceedings of Evalita?09, Eval-
uation of NLP and Speech Tools for Italian, Reggio
Emilia, December.
Felice Dell?Orletta, Simonetta Montemagni and Giulia
Venturi. 2011a. READ-IT: Assessing Readability of
Italian Texts with a View to Text Simplification. In
Proceedings of the Workshop on ?Speech and Lan-
guage Processing for Assistive Technologies? (SLPAT
2011), Edinburgh, July 30, 73?83.
Felice Dell?Orletta, Simonetta Montemagni and Giulia
Venturi. 2012. Genre?oriented Readability Assess-
ment: a Case Study. In Proceedings of the Workshop
on Speech and Language Processing Tools in Educa-
tion (SLP-TED), 91?98.
Lyn Frazier. 1985. Syntactic complexity. In D.R.
Dowty, L. Karttunen and A.M. Zwicky (eds.), Natural
Language Parsing, Cambridge University Press, Cam-
bridge, UK.
Edward Gibson. 1998. Linguistic complexity: Locality
of syntactic dependencies. In Cognition, 68(1), pp. 1?
76.
Patrick Juola. 2008. Authorship Attribution. Now Pub-
lishers Inc.
Moshe Koppel, Jonathan Schler and Kfir Zigdon. 2005.
Automatically determining an anonymous author?s na-
tive language. In Intelligence and Security Informat-
ics, vol. 3495, LNCS, Springer?Verlag, 209?217.
Dekan Lin. 1996. On the structural complexity of natural
language sentences. In Proceedings of COLING 1996,
pp. 729?733.
Ryan McDonald and Joakim Nivre. 2007. Character-
izing the Errors of Data-Driven Dependency Parsing
Models. In Proceedings of EMNLP-CoNLL, 2007,
122?131.
Alexander Mehler, Serge Sharoff and Marina Santini
(Eds.). 2011. Genres on the Web. Computational
Models and Empirical Studies. Springer Series: Text,
Speech and Language Technology.
Sze?Meng Jojo Wong and Mark Dras. 2009. Contrastive
Analysis and Native Language Identification. In Pro-
ceedings of the Australasian Language Technology As-
sociation Workshop.
Hans van Halteren. 2004. Linguistic profiling for author
recognition and verification. In Proceedings of the
Association for Computational Linguistics (ACL04),
200?207.
Joel Tetreault, Daniel Blanchard, Aoife Cahill and Mar-
tin Chodorow. 2012. Native Tongues, Lost and
Found: Resources and Empirical Evaluations in Na-
tive Language Identification. In Proceedings of COL-
ING 2012, Mumbai, India, 2585?2602.
Joel Tetreault, Daniel Blanchard and Aoife Cahill. 2013.
Summary Report on the First Shared Task on Native
Language Identification. In Proceedings of the Eighth
Workshop on Building Educational Applications Us-
ing NL, Atlanta, GA, USA.
Victor H.A. Yngve. 1960. Amodel and an hypothesis for
language structure. In Proceedings of the American
Philosophical Society, 444?466.
Jason Weston, Sayan Mukherjee, Oliver Chapelle, Mas-
similiano Pontil, Tomaso Poggio and Vladimir Nau-
movich Vapnik. 2000. Feature selection for SVMs. In
Advances in Neural Information Processing Systems
13, MIT Press, 668?674.
215
Proceedings of the 2013 Workshop on Biomedical Natural Language Processing (BioNLP 2013), pages 45?53,
Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational Linguistics
Unsupervised Linguistically-Driven Reliable Dependency Parses
Detection and Self-Training for Adaptation to the Biomedical Domain
Felice Dell?Orletta, Giulia Venturi, Simonetta Montemagni
Istituto di Linguistica Computazionale ?Antonio Zampolli? (ILC?CNR)
Via G. Moruzzi, 1 ? Pisa (Italy)
{felice.dellorletta,giulia.venturi,simonetta.montemagni}@ilc.cnr.it
Abstract
In this paper, a new self?training method
for domain adaptation is illustrated, where
the selection of reliable parses is car-
ried out by an unsupervised linguistically?
driven algorithm, ULISSE. The method
has been tested on biomedical texts with
results showing a significant improve-
ment with respect to considered baselines,
which demonstrates its ability to capture
both reliability of parses and domain?
specificity of linguistic constructions.
1 Introduction
As firstly demonstrated by (Gildea, 2001), pars-
ing systems have a drop of accuracy when tested
against domain corpora outside of the data from
which they were trained. This is a real prob-
lem in the biomedical domain where, due to the
rapidly expanding body of biomedical literature,
the need for increasingly sophisticated and effi-
cient biomedical text mining systems is becom-
ing more and more pressing. In particular, the ex-
istence of natural language parsers reliably deal-
ing with biomedical texts represents the prerequi-
ste for identifying and extracting knowledge em-
bedded in them. Over the last years, this prob-
lem has been tackled within the biomedical NLP
community from different perspectives. The de-
velopment of a domain?specific annotated corpus,
i.e. the Genia Treebank (Tateisi, Yakushiji, Ohta,
& Tsujii, 2005), played a key role by providing a
sound basis for empirical performance evaluation
as well as training of parsers. On the other hand,
several attempts have been made to adapt general
parsers to the biomedical domain. First experi-
ments in this direction are reported in (Clegg &
Shepherd, 2005) who first compared the perfor-
mance of three different parsers against the Ge-
nia treebank and a sample of the Penn Treebank
(PTB) (Mitchell P. Marcus & Santorini, 1993) in
order to carry out an inter?domain analysis of
the typology of errors made by each parser and
demonstrated that by integrating the output of the
three parsers they achieved statistically significant
performance gains. Three different methods of
parser adaptation for the biomedical domain have
been proposed by (Lease & Charniak, 2005) who,
starting from the results of unknown word rate
experiments carried out on the Genia treebank,
adapted a PTB?trained parser by improving the
Part?Of?Speech tagging accuracy and by relying
on an external domain?specific lexicon. More re-
cently, (McClosky, Charniak, & Johnson, 2010)
and (Plank & van Noord, 2011) devised adaptation
methods based on domain similarity measures. In
particular, both of them adopted lexical similar-
ity measures to automatically select from an anno-
tated collection of texts those training data which
is more relevant, i.e. lexically closer, to adapt the
parser to the target domain.
A variety of semi?supervised approaches,
where unlabeled data is used in addition to labeled
training data, have been recently proposed in the
literature in order to adapt parsing systems to new
domains. Among these approaches, the last few
years have seen a growing interest in self?training
for domain adaptation, i.e. a method for using au-
tomatically annotated data from a target domain
when training supervised models. Self?training
methods proposed so far mainly differ at the level
of the selection of parse trees to be added to the
in?domain gold trees as further training data. De-
pending on whether or not external supervised
classifiers are used to select the parses to be added
to the gold?training set, two types of methods are
envisaged in the literature. The first is the case,
among others, of: (Kawahara & Uchimoto, 2008),
using a machine learning classifier to predict the
reliability of parses on the basis of different fea-
ture types; or (Sagae & Tsujii, 2007), selecting
45
identical analyses for the same sentence within the
output of different parsing models trained on the
same dataset; or (McClosky, Charniak, & John-
son, 2006), using a discriminative reranker against
the output of a n?best generative parser for select-
ing the best parse for each sentence to be used
as further training data. Yet, due to the fact that
several supervised classifiers are resorted to for
improving the base supervised parser, this class
of methods cannot be seen as a genuine istance
of self?training. The second type of methods is
exemplified, among others, by (Reichart & Rap-
poport, 2007) who use the whole set of automat-
ically analyzed sentences, and by (McClosky &
Charniak, 2008) and (Sagae, 2010) who add dif-
ferent amounts of automatically parsed data with-
out any selection strategy. Note that (McClosky
& Charniak, 2008) tested their self?training ap-
proach on the Genia Treebank: they self?trained
a PTB?trained costituency parser using a random
selection of Medline abstracts.
In this paper, we address the second scenario
with a main novelty: we use an unsupervised ap-
proach to select reliable parses from automatically
parsed target domain texts to be combined with the
gold?training set. Two unsupervised algorithms
have been proposed so far in the literature for
selecting reliable parses, namely: PUPA (POS?
based Unsupervised Parse Assessment Algorithm)
(Reichart & Rappoport, 2009) and ULISSE (Un-
supervised LInguiStically?driven Selection of dE-
pendency parses) (Dell?Orletta, Venturi, & Mon-
temagni, 2011). Both algorithms assign a qual-
ity score to each parse tree based on statistics
collected from a large automatically parsed cor-
pus, with a main difference: whereas PUPA oper-
ates on costituency trees and uses statistics about
sequences of part?of?speech tags, ULISSE uses
statistics about linguistic features checked against
dependency?based representations. The self?
training strategy presented in this paper is based
on an augmented version of ULISSE. The reasons
for this choice are twofold: if on the one hand
ULISSE appears to outperform PUPA (namely, a
dependency?based version of PUPA implemented
in (Dell?Orletta et al, 2011)), on the other hand the
linguistically?driven nature of ULISSE makes our
self?training strategy for domain adaptation able
to capture reliable parses which are also represen-
tative of the syntactic peculiarities of the target do-
main.
After introducing the in? and out?domain cor-
pora used in this study (Section 2), we discuss
the results of the multi?level linguistic analysis of
these corpora carried out (Section 3) with a view
to identifying the main features differentiating the
biomedical language from ordinary language. In
Section 4, the algorithm used to select reliable
parses from automatically parsed domain?specific
texts is described. In Section 5 the proposed self?
training method is illustrated, followed by a dis-
cussion of achieved results (Section 6).
2 Corpora
Used domain corpora include i) the two out?
domain datasets used for the ?Domain Adaptation
Track? of the CoNLL 2007 Shared Task (Nivre
et al, 2007) and ii) the dependency?based version
of the Genia Treebank (Tateisi et al, 2005). The
CoNLL 2007 datasets are represented by chemical
(CHEM) and biomedical abstracts (BIO), made of
5,001 tokens (195 sentences) and of 5,017 tokens
(200 sentences) respectively. The dependency?
based version of Genia includes?493k tokens and
?18k sentences which was generated by convert-
ing the PTB version of Genia created by Illes Solt1
using the (Johansson & Nugues, 2007) tool with
the -conll2007 option to produce annotations in
line with the CoNLL 2007 data set2. As unla-
belled data, we used the datasets distributed in the
framework of the CoNLL 2007 Domain Adapta-
tion Track. For CHEM the set of unlabelled data
consists of 10,482,247 tokens (396,128 sentences)
and for BIO of 9,776,890 tokens (375,421 sen-
tences). For the experiments using Genia as test
set, we used the BIO unlabelled data. This was
possible due to the fact that both the Genia Tree-
bank and the BIO dataset consist of biomedical
abstracts extracted (though using different query
terms) from PubMed.com.
As in?domain training data we have used the
CoNLL 2007 dependency?based version of Sec-
tions 2?11 of the Wall Street Journal (WSJ) par-
tition of the Penn Treebank (PTB), for a total of
447,000 tokens and about 18,600 sentences. For
testing, we used the subset of Section 23 of WSJ
consisting of 5,003 tokens (214 sentences).
All corpora have been morpho?syntactically
tagged and lemmatized by a customized version
1http://categorizer.tmit.bme.hu/?illes/genia ptb/
2In order to be fully compliant with the PTB PoS tagset,
we changed the PoS label of all punctuation marks.
46
of the pos?tagger described in (Dell?Orletta, n.d.)
and dependency parsed by the DeSR parser us-
ing Multi?Layer Perceptron (MLP) as learning al-
gorithm (Attardi, Dell?Orletta, Simi, & Turian,
n.d.), a state?of?the?art linear?time Shift?Reduce
dependency parser following a ?stepwise? ap-
proach (Buchholz & Marsi, 2006).
3 Linguistic analysis of biomedical
abstrats vs newspaper articles
For the specific concerns of this study, we carried
out a comparative linguistic analysis of four dif-
ferent corpora, taken as representative of ordinary
language and biomedical language. In each case,
we took into account a gold (i.e. manually an-
notated) corpus, and an unlabelled corpus, which
was automatically annotated. By comparing the
results obtained with respect to gold and automat-
ically annotated texts, we intend to demonstrate
the reliability of features extracted from automat-
ically annotated texts. As data representative of
ordinary language we took i) the whole WSJ sec-
tion of the Penn Treebank3 including 39,285,425
tokens (1,625,606 sentences) and ii) the sections
2?11 of the WSJ. For what concerns the biomed-
ical domain, we relied on the Genia Treebank in
order to guarantee comparability of the results of
our linguistic analysis with previous studies car-
ried out on this reference corpus. As automatically
annotated data we used the corpus of biomedical
abstract (BIO) distributed as out?domain dataset
used for the ?Domain Adaptation Track? of the
CoNLL 2007 Shared Task.
In order to get evidence of the differences hold-
ing between the WSJ newspaper articles and the
selected biomedical abstracts, the four corpora
have been compared with respect to a wide typol-
ogy of features (i.e. raw text, lexical, morpho?
syntactic and syntactic). Let us start from raw
text features, in particular from average sen-
tence length (calculated as the average number
of words per sentence): as Figure 1 shows, both
the corpus of automatically parsed newspaper ar-
ticles (WSJ unlab) and the manually annotated
one (WSJ gold) contain shorter sentences with re-
spect to both the automatically parsed biomedi-
cal abstrats (BIO unlab) and the manually anno-
tated ones (Genia gold), a result which is in line
3This corpus represents to the unlabelled data set dis-
tributed for the CoNLL 2007 Shared Task on Dependency
Parsing, domain adaptation track.
Figure 1: Average sentence length in biomedical
and newspaper corpora.
with (Clegg & Shepherd, 2005) findings. When
we focus on the lexical level, BIO unlab and
Genia gold appear to have quite a similar per-
centage of lexical items which is not contained
in WSJ gold (23.13% and 26.14% respectively)
while the out?of?vocabulary rate of WSJ unlab
is much lower, i.e. 8.69%. Similar results were
recorded by (Lease & Charniak, 2005) who report
the unknown word rate for various genres of tec-
nical literature.
Let us focus now on the morpho?syntactic level.
If we consider the distribution of nouns, verbs
and adjectives, three features typically represent-
ing stylistic markers associated with different lin-
guistic varieties (Biber & Conrad, 2009), it can
be noticed (see Figures 2(a) and 2(c)) that the
biomedical abstracts contain a higher percentage
of nouns and adjectives while showing a signif-
icantly lower percentage of verbs (Figure 2(b)).
The syntactic counterpart of the different distri-
bution of morpho?syntactic categories can be ob-
served in Table 1, reporting the percentage distri-
bution of the first ten Parts?of?Speech dependency
triplets occurring in the biomedical and newspaper
corpora: each triplet is described as the sequence
of the PoS of a dependent and a head linked by a
depedency arc, by also considering the PoS of the
head father. It turned out that biomedical abstracts
are characterized by nominal dependency triplets,
e.g. two nouns and a preposition (NN?NN?IN)
or noun, preposition, noun (NN?IN?NN) or ad-
jective, noun and preposition (JJ?NN?IN), which
occur more frequently than verbal triplets, such
as determiner, noun and verb (DT?NN?VBZ) or a
verbal root (.?VBD?ROOT)4. Interestingly, in Ge-
nia gold no verbal triplet occurs within the top ten
triplets, which cover the 21% of the total amount
4We named ?ROOT? the artificial root node.
47
(a) Distribution of Nouns (b) Distribution of Verbs (c) Distribution of Adjectives
Figure 2: Distribution of some Parts?of?Speech in biomedical and newspaper corpora.
of triplets occurring in the corpus. By contrast,
the same top ten triplets represent only ?11% in
WSJ gold, testifying the wider variety of syntac-
tic constructions occurring in newspaper articles
with respect to texts of the biomedical domain.
This is also proved by the total amount of differ-
ent PoS dependency triplets occurring in the two
gold datasets, i.e. 7,827 in WSJ gold and 5,064
in Genia gold even though the Genia Treebank is
?50,000?tokens bigger.
Further differences can be observed at a deeper
syntactic level of analysis. This is the case of the
average depth of embedded complement ?chains?
governed by a nominal head. Figure 3(a) shows
that biomedical abstracts are characterized by an
average depth which is higher than the one ob-
served in newspaper articles. A similar trend
can be observed for what concerns the distribu-
tion of ?chains? by depth. In Figure 3(b) shows
that WSJ unlab and WSJ gold ?chains?, on the one
hand, and BIO unlab and Genia gold ?chains?,
on the other hand, overlap. The corpora have
also been compared with respect to i) the av-
erage length of dependency links, measured in
terms of the words occurring between the syntac-
tic head and the dependent (excluding punctua-
tion marks), and ii) the average depth of the whole
parse tree, calculated in terms of the longest path
from the root of the dependency tree to a leaf. In
both cases it can be noted that i) the biomedical
abstracts contain much longer dependency links
than newswire texts (Figure 3(c)) and ii) the av-
erage depth of BIO unlab and Genia gold parse
trees is higher than in the case of the WSJ unlab
and WSJ gold (Figure 3(d)). A further distin-
guishing feature of the biomedical abstracts con-
cerns the average depth of ?chains? of embed-
ded subordinate clauses, calculated here by taking
into account both clausal arguments and comple-
ments linked to a verbal sentence root. As Figure
3(e) shows, both BIO unlab and Genia gold have
shorter ?chains? with respect to the ones contained
in the newspaper articles. Interestingly, a careful
analysis of the distributions by depth of ?chains?
of embedded subordinate clauses shows that the
biomedical abstracts appear to have i) a higher oc-
currence of ?chains? including just one subordinate
clause and ii) a lower percentage of deep ?chains?
with respect to newswire texts. Finally, we com-
pared the two types of corpora with respect to the
distribution of verbal roots. The biomedical ab-
stracts resulted to be characterised by a lower per-
centage of verbal roots with respect to newspaper
articles (see Figure 3(f)). This is in line with the
distribution of verbs as well as of the nominal de-
pendency triplets observed in the biomedical ab-
stracts at the morpho?syntactic level of analysis.
Interestingly, the results obtained with respect
to automatically parsed and manually annotated
data show similar trends for both considered in?
and out?domain corpora, thus demonstrating the
reliability of features monitored against automat-
ically annotated data. In what follows, we will
show how detected linguistic peculiarities can be
exploited in a domain adaptation scenario.
4 Linguistically?driven Unsupervised
Ranking of Parses for Self?training
In the self?training approach illustrated in this pa-
per, the selection of parses from the automatically
annotated target domain dataset is guided by an
augmented version of ULISSE, an unsupervised
linguistically?driven algorithm to select reliable
parses from the output of dependency annotated
texts (Dell?Orletta et al, 2011) which has shown
a good performance for two different languages
48
WSJ gold WSJ unlab Genia gold BIO unlab
Triplet % Freq Triplet % Freq Triplet % Freq Triplet % Freq
DT-NN-IN 2.03 DT-NN-IN 1.72 NN-NN-IN 3.66 DT-NN-IN 2.87
.-VBD-ROOT 1.61 .-VBD-ROOT 1.30 NN-IN-NN 2.93 NN-IN-NN 2.39
NN-IN-NN 1.11 JJ-NN-IN 0.99 DT-NN-IN 2.48 JJ-NN-IN 2.08
JJ-NN-IN 1.10 NN-IN-NN 0.97 JJ-NN-IN 1.96 NN-NN-IN 1.73
.-VBZ-ROOT 1.09 NNP-NNP-IN 0.87 NN-NNS-IN 1.88 IN-NN-IN 1.72
NNP-NNP-IN 0.95 DT-NN-VBD 0.85 JJ-NNS-IN 1.77 JJ-NNS-IN 1.36
DT-NN-VBZ 0.89 NN-VBD-ROOT 0.80 IN-NN-IN 1.65 .-VBD-ROOT 1.33
DT-NN-VBD 0.87 JJ-NNS-IN 0.79 NN-CC-IN 1.64 NNS-IN-NN 1.13
JJ-NNS-IN 0.87 NNP-NNP-VBD 0.78 NNS-IN-NN 1.56 NNP-NN-IN 1.03
IN-NN-IN 0.87 .-VBZ-ROOT 0.75 NN-NN-CC 1.47 NN-IN-VBN 0.93
Table 1: Frequency distribution of the first ten Parts?of?Speech dependency triplets in biomedical and
newspaper corpora.
(a) Depth of embedded complement
?chains?
(b) Distribution of embedded com-
plement ?chains? by depth
(c) Length of dependency links
(d) Parse tree depth (e) Depth of embedded subordinate
clauses ?chains?
(f) Distribution of verbal roots
Figure 3: Syntactic features in biomedical and newspaper corpora.
(English and Italian) against the output of two su-
pervised parsers (MST, (McDonald, Lerman, &
Pereira, 2006) and DeSR, (Attardi, 2006)) se-
lected for their behavioral differences (McDonald
& Nivre, 2007). ULISSE assigns to each depen-
dency tree a score quantifying its reliability based
on a wide range of linguistic features. After col-
lecting statistics about selected features from a
corpus of automatically parsed sentences, for each
newly parsed sentence ULISSE computes a relia-
bility score using the previously extracted feature
statistics. In its reliability assessment, ULISSE ex-
ploits both global and local features, where global
features (listed in Table 2 and discussed in Sec-
tion 3) are computed with respect to each sen-
tence and averaged over all sentences in the cor-
pus, and the local features with respect to indi-
vidual dependency links and averaged over all of
them. Local features include the plausibility of
a dependency link calculated by considering se-
lected features of the dependent and its govern-
ing head as well as of the head father: whereas
in ULISSE the selected features were circum-
scribed to part?of?speech information (so?called
?ArcPOSFeat? feature), in this version of the al-
gorithm a new local feature has been introduced,
named ?ArcLemmaFeat?, which exploits lemma
information. ?ArcPOSFeat? is able to capture the
different distribution of PoS dependency triplets
(see Table 1), along with the type of dependency
link, while the newly introduced ?ArcLemmaFeat?
is meant to capture the lexical peculiarities of the
target domain (see Section 3). As demonstrated
in (Dell?Orletta et al, 2011), both global and lo-
49
cal linguistic features contribute to the selection
of reliable parses. Due to the typology of linguis-
tic features underlying ULISSE, selected reliable
parses typically include domain?specific construc-
tions. This peculiarity of the ULISSE algorithm
turned out to be particularly useful to maximize
the self?training effect in improving the parsing
performance in a domain adaptation scenario.
The reliability score assigned by this augmented
version of ULISSE to newly parsed sentences re-
sults from a combination of the weights associ-
ated with individual features, both global and local
ones. In this study, the reliability score was com-
puted as a simple product of the individual feature
weights: in this way, one low weight feature is suf-
ficient to qualify a parse as low quality and thus to
exclude it from the self?training dataset5.
Feature
Parse tree depth
Embedded complement ?chains? headed by a noun
- Average depth
- Distribution by depth
Verbal roots
Arity of verbal predicates
- Distribution by arity
Subordinate vs main clauses
- Relative ordering of subordinate clauses with respect to the main clause
- Average depth of ?chains? of embedded subordinate clauses
- Distribution of embedded subordinate clauses ?chains? by depth
Length of dependency links
Table 2: Global features underlying ULISSE.
5 Experimental set?up
In the reported experiments, we used the DeSR
parser. Its performance using the proposed domain
adaptation strategy was tested against i) the two
out?domain datasets distributed for the ?Domain
Adaptation Track? of the CoNLL 2007 Shared
Task and ii) the dependency?based version of the
Genia Treebank, described in Section 2. For test-
ing purposes, we selected from the dependency?
based version of the Genia Treebank sentences
with a maximum length of 39 tokens (for a total
of 375,912 tokens and 15,623 sentences).
Results achieved with respect to the CHEM and
BIO test sets were evaluated in terms of ?Labelled
Attachment Score? (LAS), whereas for Genia the
only possible evaluation was in terms of ?Un-
labelled Attachment Score? (UAS). This follows
from the fact that, as reported by Illes, this ver-
sion of Genia is annotated with a Penn Treebank?
style phrase?structure, where a number of func-
tional tags are missing: this influences the type
5See (Dell?Orletta et al, 2011) for a detailed description
of the quality score computation.
Test corpus LAS UAS
PTB 86.09% 87.29%
CHEM 78.50% 81.10%
BIO 78.65% 79.97%
GENIA n/a 80.25%
Table 3: The BASE model tested on PTB, CHEM,
BIO and GENIA.
of evaluation which can be carried out against the
Genia test set.
Achieved results were compared with two base-
lines, represented by: i) the Baseline model
(BASE), i.e. the parsing model trained on the PTB
training set only; ii) the Random Selection (RS) of
parses from automatically parsed out?domain cor-
pora, calculated as the mean of a 10?fold cross?
validation process. As proved by (Sagae, 2010)
and by (McClosky & Charniak, 2008) for the
biomedical domain, the latter represents a strong
unsupervised baseline showing a significant accu-
racy improvement which was obtained by adding
incremental amounts of automatically parsed out?
domain data to the training dataset without any se-
lection strategy.
The experiments we carried out to test the ef-
fectiveness of our self?training strategy were or-
ganised as follows. ULISSE and the baseline al-
gorithms were used to produce different rankings
of parses of the unlabelled target domain corpora.
From the top of these rankings different pools of
parses were selected to be used for training. In
particular, two different sets of experiments were
carried out, namely: i) using only automatically
parsed data as training corpus and ii) combining
automatically parsed data with the PTB training
set. For each set of experiments, different amounts
of unlabelled data were used to create the self?
training models.
6 Results
Table 3 reports the results of the BASE model
tested on PTB, CHEM, BIO and GENIA. When
applied without adaptation to the out?domain
CHEM, BIO and GENIA test sets, the BASE pars-
ing model has a drop of about 7.5% of LAS in both
CHEM and BIO cases. For what concerns UAS,
the drop is about 6% for CHEM and about 7% for
BIO and GENIA.
The results of the performed experiments are
shown in Figures 4 and 5, where each plot re-
ports the accuracy scores (LAS and UAS respec-
tively) of the self?trained parser using the ULISSE
50
(a) LAS for CHEM without PTB training set. (b) LAS for BIO without the PTB training set.
(c) LAS for CHEM with the PTB training set. (d) LAS for BIO with the PTB training set.
Figure 4: LAS of the different self?training models in the two sets of performed experiments.
(a) UAS for GENIA without the PTB training set. (b) UAS for GENIA with the PTB training set.
Figure 5: UAS of the different self?training models for GENIA.
algorithm (henceforth, ULISSE?Stp) and of the
baseline models (RS and BASE). The parser ac-
curacy was computed with respect to different
amounts of automatically parsed data which were
used to create the self?trained parsing model. For
this purpose, we considered six different pools of
250k, 450k, 900k, 1000k, 1350k and 1500k to-
kens. Plots are organized by experiment type: i.e.
the results in subfigures 4(a), 4(b) and 5(a) are
achieved by using only automatically parsed data
as training corpus, whereas those reported in the
other subfigures refer to models trained on auto-
matically parsed data combined with PTB. Note
that in all figures the line named best?RS repre-
sents the best RS score for each pool of k tokens in
the 10?fold cross?validation process.
For what concerns BIO and CHEM, in the first
set of experiments ULISSE?Stp turned out to be
the best self?training algorithm: this is always the
case for CHEM (see subfigure 4(a)), whereas for
BIO (see subfigure 4(b)) it outperforms all base-
lines only when pools of tokens >= 900k are
added. When 900k tokens are used, ULISSE?Stp
allows a LAS improvement of 0.81% on CHEM
and of 0.61% on BIO with respect to RS, and
of 0.62% on CHEM and of 0.48% on BIO with
respect to BASE. It is interesting to note that
ULISSE?Stp using only automatically parsed data
for training achieves better results than BASE (us-
ing the PTB gold training set): to our knowledge,
a similar result has never been reported in the lit-
erature. The behaviour is similar also when the
51
experiments are evaluated in terms of UAS6.
The results achieved in the first set of experi-
ments carried out on the GENIA test set (see 5(a))
differ significantly from what we observed for
CHEM and BIO: in this case, the BASE model ap-
pears to outperform all the other algorithms, with
the ULISSE?Stp algorithm being however more
effective than the RS baselines.
Figures 4(c), 4(d) and 5(b) report the results of
the second set of experiments, i.e. those carried
out by also including PTB in the training set. Note
that in these plots the RS+PTB lines represent the
score of the parser models trained on the pools
of tokens used to obtain the best?RS line com-
bined with the PTB gold training set. It can be
observed that the ULISSE?Stp+PTB self?training
model outperforms all baselines for CHEM, BIO
and GENIA for all the different sizes of pools of
selected tokens. For each pool of parsed data, Ta-
ble 4 records the improvement and the error reduc-
tion observed with respect to the BASE model.
Pool of tokens CHEM Err. red. BIO Err. red. GENIA Err. red.
250k 0.8 3.72 0.76 3.55 0.97 4.91
450k 1.1 5.12 0.54 2.53 1.52 7.7
900k 1.14 5.3 1.02 4.77 1.31 6.63
1000k 0.8 3.72 1.56 7.29 1.2 6.08
1350k 0.4 1.49 1.46 6.82 0.94 4.76
1500k 0.78 3.62 0.75 3.37 0.66 3.34
Table 4: % improvement of ULISSE?Stp+PTB vs
BASE reported in terms of LAS for CHEM and
BIO and of UAS for GENIA.
Differently from (Sagae, 2010) (with a
constituency?based parser), in this set of experi-
ments the self?training approach based on random
selection of sentences (i.e. the best?RS+PTB
baseline) doesn?t achieve any improvement with
respect to the BASE model with only minor
exceptions (observed e.g. with 250k and 450k
pools of added tokens for CHEM and with 250k
for GENIA). Moreover, even when the best?RS
LAS is higher than the ULISSE?Stp score (e.g.
in the first pools of k of Figure 4(b)), ULISSE?
Stp+PTB turns out to be more effective than
the best?RS+PTB baseline (Figure 4(d)). These
results may follow from the fact that ULISSE?Stp
is able to capture not only reliable parses but also,
and more significantly here, parses which reflect
the syntactic peculiarities of the target domain.
Table 5 shows the results of the different
ULISSE?Stp+PTB models tested on the PTB test
6In this paper, for CHEM and BIO experiments we report
only the LAS scores since this is the standard evaluation met-
ric for dependency parsing.
set: no LAS improvement is observed with respect
to the results obtained with the BASE model, i.e.
86.09% (see Table 3). This result is in line with
(McClosky et al, 2010) and (Plank & van No-
ord, 2011) who proved that parsers trained on the
union of gold corpora belonging to different do-
mains achieve a lower accuracy with respect to the
same parsers trained on data belonging to a sin-
gle target domain. Last but not least, it should be
noted that the performance of ULISSE?Stp across
the experiments carried out with pools of automat-
ically parsed tokens of different sizes is in line
with the behaviour of the ULISSE ranking algo-
rithm (Dell?Orletta et al, 2011), where increas-
ingly wider top lists of parsed tokens show de-
creasing LAS scores. This helps explaining why
the performance of ULISSE?Stp starts decreasing
after a certain threshold when wider top?lists of
tokens are added to the parser training data.
Pool of tokens CHEM BIO
250k 83.53 85.55
450k 85.53 86.01
900k 85.95 84.79
1000k 86.03 85.45
1350k 85.49 85.71
1500k 85.67 86.39
Table 5: ULISSE?Stp+PTB on PTB test set with
automatically parsed data.
Conclusion
In this paper we explored a new self?training
method for domain adaptation where the selec-
tion of reliable parses within automatically an-
notated texts is carried out by an unsupervised
linguistically?driven algorithm, ULISSE. Results
achieved for the CoNLL 2007 datasets as well
as for the larger test set represented by GENIA
show a significant improvement with respect to
considered baselines. This demonstrates a two?
fold property of ULISSE, namely its reliablity
and effectiveness both in capturing peculiarities
of biomedical texts, and in selecting high quality
parses. Thanks to these properties the proposed
self?training method is able to improve the parser
performances when tested in an out?domain sce-
nario. The same approach could in principle be
applied to deal with biomedical sub?domain varia-
tion: as reported by (Lippincott, Se?aghdha, & Ko-
rhonen, 2011), biomedical texts belonging to dif-
ferent sub?domains do vary along many linguistic
dimensions, with a potential negative impact on
biomedical NLP tools.
52
References
Attardi, G. (2006). Experiments with a multi-
language non-projective dependency parser.
In Proceedings of CoNLL-X ?06 (pp. 166?
170). New York City, New York.
Attardi, G., Dell?Orletta, F., Simi, M., & Turian, J.
(n.d.). Accurate dependency parsing with a
stacked multilayer perceptron. In Proceed-
ings of EVALITA 2009.
Biber, D., & Conrad, S. (2009). Genre, regis-
ter, style. Cambridge: Cambridge Univer-
sity Press.
Buchholz, S., & Marsi, E. (2006). CoNLL-
X shared task on multilingual dependency
parsing. In Proceedings of CoNLL 2006.
Clegg, A. B., & Shepherd, A. J. (2005). Evalu-
ating and integrating treebank parsers on a
biomedical corpus. In In proceedings of the
ACL 2005 workshop on software.
Dell?Orletta, F. (n.d.). Ensemble system for
part-of-speech tagging. In Proceedings of
EVALITA 2009.
Dell?Orletta, F., Venturi, G., & Montemagni, S.
(2011). Ulisse: an unsupervised algorithm
for detecting reliable dependency parses. In
Proceedings of CoNLL 2011 (pp. 115?124).
Portland, Oregon.
Gildea, D. (2001). Corpus variation and parser
performance. In Proceedings of EMNLP
2001 (p. 167-202). Pittsburgh, PA.
Johansson, R., & Nugues, P. (2007). Ex-
tended constituent-to-dependency conver-
sion for english. In Proceedings of NODAL-
IDA 2007. Tartu, Estonia.
Kawahara, D., & Uchimoto, K. (2008). Learning
reliability of parses for domain adaptation
of dependency parsing. In Proceedings of
IJCNLP 2008 (pp. 709?714).
Lease, M., & Charniak, E. (2005). Parsing
biomedical literature. In Proceedings of
the second international joint conference on
natural language processing (IJCNLP-05),
Jeju Island, Korea (pp. 58?69).
Lippincott, T., Se?aghdha, D. O?., & Korhonen, A.
(2011). Exploring subdomain variation in
biomedical language. BMC Bioinformatics,
12, 212?233.
McClosky, D., & Charniak, E. (2008). Self-
training for biomedical parsing. In Proceed-
ings of ACL?HLT 2008 (pp. 101?104).
McClosky, D., Charniak, E., & Johnson, M.
(2006). Reranking and self-training for
parser adaptation. In Proceedings of ACL
2006 (pp. 337?344). Sydney, Australia.
McClosky, D., Charniak, E., & Johnson, M.
(2010). Automatic domain adaptation for
parsing. In Proceedings of NAACL?HLT
2010 (pp. 28?36). Los Angeles, California.
McDonald, R., Lerman, K., & Pereira, F. (2006).
Multilingual dependency analysis with a
two-stage discriminative parser. In Proceed-
ings of CoNLL 2006.
McDonald, R., & Nivre, J. (2007). Character-
izing the errors of data-driven dependency
parsing models. In Proceedings of EMNLP-
CoNLL 2007 (p. 122-131).
Mitchell P. Marcus, M. A. M., & Santorini, B.
(1993). Building a large annotated corpus
of english: the penn treebank. Comput. Lin-
guist., 19(2), 313?330.
Nivre, J., Hall, J., Ku?bler, S., McDonald, R., Nils-
son, J., Riedel, S., & Yuret, D. (2007).
The conll 2007 shared task on dependency
parsing. In Proceedings of EMNLP-CoNLL
2007 (pp. 915?932).
Plank, B., & van Noord, G. (2011). Effective mea-
sures of domain similarity for parsing. In
Proceedings of ACL 2011 (pp. 1566?1576).
Portland, Oregon.
Reichart, R., & Rappoport, A. (2007). Self?
training for enhancement and domain adap-
tation of statistical parsers trained on small
datasets. In Proceedings of ACL 2007 (pp.
616?623).
Reichart, R., & Rappoport, A. (2009). Automatic
selection of high quality parses created by a
fully unsupervised parser. In Proceedings of
CoNLL 2009 (pp. 156?164).
Sagae, K. (2010). Self-training without reranking
for parser domain adaptation and its impact
on semantic role labeling. In Proceedings
of the 2010 workshop on domain adaptation
for natural language processing (DANLP
2010) (pp. 37?44). Uppsala, Sweden.
Sagae, K., & Tsujii, J. (2007). Dependency pars-
ing and domain adaptation with lr models
and parser ensemble. In Proceedings of
EMNLP?CoNLL 2007 (pp. 1044?1050).
Tateisi, Y., Yakushiji, A., Ohta, T., & Tsujii, J.
(2005). Syntax annotation for the GENIA
corpus. In Proceedings of IJCNLP?05 (pp.
222?227). Jeju Island, Korea.
53
Proceedings of the Ninth Workshop on Innovative Use of NLP for Building Educational Applications , pages 163?173,
Baltimore, Maryland USA, June 26, 2014.
c?2014 Association for Computational Linguistics
Assessing the Readability of Sentences: Which Corpora and Features?
Felice Dell?Orletta

, Martijn Wieling
??
, Andrea Cimino

, Giulia Venturi

and Simonetta Montemagni


Istituto di Linguistica Computazionale ?Antonio Zampolli? (ILC?CNR)
ItaliaNLP Lab - www.italianlp.it
{name.surname}@ilc.cnr.it
?
Department of Humanities Computing, University of Groningen, The Netherlands
?
Department of Quantitative Linguistics, University of T?ubingen, Germany
wieling@gmail.com
Abstract
The paper investigates the problem of
sentence readability assessment, which is
modelled as a classification task, with a
specific view to text simplification. In par-
ticular, it addresses two open issues con-
nected with it, i.e. the corpora to be used
for training, and the identification of the
most effective features to determine sen-
tence readability. An existing readabil-
ity assessment tool developed for Italian
was specialized at the level of training cor-
pus and learning algorithm. A maximum
entropy?based feature selection and rank-
ing algorithm (grafting) was used to iden-
tify to the most relevant features: it turned
out that assessing the readability of sen-
tences is a complex task, requiring a high
number of features, mainly syntactic ones.
1 Introduction
Over the last ten years, work on automatic read-
ability assessment employed sophisticated NLP
techniques (such as syntactic parsing and statisti-
cal language modeling) to capture highly complex
linguistic features, and used statistical machine
learning to build readability assessment tools. A
variety of different NLP?based approaches has
been proposed so far in the literature, differing
at the level of the number of identified readabil-
ity classes, the typology of features taken into ac-
count, the intended audience of the texts under
evaluation, or the application within which read-
ability assessment is carried out, etc.
Research focused so far on readability assess-
ment at the document level. However, as pointed
out by Skory and Eskenazi (2010), methods devel-
oped perform well when the task is characterizing
the readability level of an entire document, while
they are unreliable for short texts, including single
sentences. Yet, for specific applications, assessing
the readability level of individual sentences would
be desirable. This is the case, for instance, for text
simplification: in current approaches, text read-
ability is typically assessed with respect to the en-
tire document, while text simplification is carried
out at the sentence level, as e.g. done in Alu??sio
et al. (2010), Bott and Saggion (2011) and Inui et
al. (2003). By decoupling the readability assess-
ment and simplification processes, the impact of
simplification operations on the overall readabil-
ity level of a given text may not always be clear.
With sentence?based readability assessment, this
is expected to be no longer a problem. Sentence
readability assessment thus represents an open is-
sue in the literature which is worth being further
explored. To our knowledge, the only attempts
in this direction are represented by Dell?Orletta et
al. (2011) and Sj?oholm (2012) for the Italian and
Swedish languages respectively, followed more
recently by Vajjala and Meurers (2014) dealing
with English.
In this paper, we tackle the challenge of assess-
ing the readability of individual sentences as a first
step towards text simplification. The task is mod-
elled as a classification task, with the final aim
of shedding light on two open issues connected
with it, namely the reference corpora to be used
for training (i.e. collections of sentences classified
according to their readability level), and the iden-
tification of the most effective features to deter-
mine sentence readability. For what concerns the
former, sentence readability assessment poses the
remarkable issue of classifying sentences accord-
ing to their difficulty: if all sentences occurring in
simplified texts can be assumed to be easy?to?read
sentences, the reverse does not necessarily hold
since not all sentences occurring in complex texts
are to be assumed difficult?to?read. This fact has
important implications at the level of the composi-
tion of the corpora to be used for training. The sec-
163
ond issue is concerned with whether and to what
extent the features playing a significant role in the
assessment of readability at the sentence level co-
incide with those exploited at the level of docu-
ment. In particular, the following research ques-
tions are addressed:
1. in assessing sentence readability, is it bet-
ter to use a small gold standard training cor-
pus of manually classified sentences or a
much bigger training corpus automatically
constructed from readability?tagged docu-
ments possibly containing misclassified sen-
tences?
2. which are the features maximizing sentence
readability assessment?
3. to what extent do important features for sen-
tence readability classification match those
playing a role in the document readability
classification?
We will try to answer these questions by work-
ing on Italian, which is a less?resourced language
as far as readability is concerned. To this end,
READ?IT (Dell?Orletta et al., 2011; Dell?Orletta
et al., 2014), which represents the first NLP?based
readability assessment tool for Italian, was spe-
cialized in different respects, namely at the level of
the training corpus and of the learning algorithm;
to investigate questions 2. and 3. above, a maxi-
mum entropy?based feature selection and ranking
algorithm (i.e. grafting) was selected. The specific
target audience of readers addressed in this study
is represented by people characterised by low lit-
eracy skills and/or by mild cognitive impairment.
The paper is organized as follows: Section 2 de-
scribes the background literature, Section 3 intro-
duces our approach to the task, in terms of used
corpora, features and learning algorithm. Finally,
Sections 4 and 5 describe the experimental setting
and discuss achieved results.
2 Background
In spite of the acknowledged need of perform-
ing readability assessment at the sentence level,
so far very few attempts have been made to sys-
tematically investigate the issues and challenges
concerned with the readability assessment of sen-
tences (as opposed to documents). The first two
studies in this direction focused on languages
other than English, namely Italian (Dell?Orletta
et al., 2011) and Swedish (Sj?oholm, 2012). In
both cases, the authors start from the assump-
tion that while all sentences occurring in simpli-
fied texts can be assumed to be easy?to?read sen-
tences, the reverse is not true, since not all sen-
tences occurring in complex texts are difficult?to?
read. This has important consequences at the level
of the evaluation of sentence classification results:
i.e. erroneous readability assessments within the
class of difficult?to?read texts may either corre-
spond to those easy?to?read sentences occurring
within complex texts or represent real classifi-
cation errors. To overcome this problem in the
readability assessment of individual sentences, a
notion of distance with respect to easy-to-read
sentences was introduced by Dell?Orletta et al.
(2011). Focusing on English, a similar issue is
addressed more recently by Vajjala and Meur-
ers (2014) who developed a binary sentence clas-
sifier trained on Wikipedia and Simple English
Wikipedia: they showed that the low accuracy ob-
tained by their classifier stems from the incorrect
assumption that all Wikipedia sentences are more
complex than the Simple Wikipedia ones.
Besides readability, sentence?based analyses
are reported in the literature for related tasks: for
instance, in a text simplification scenario by Drn-
darevi?c et al. (2013), Alu??sio et al. (2008),
?
Stajner
and Saggion (2013) and Barlacchi and Tonelli
(2013); or to predict writing quality level by Louis
and Nenkova (2013). Sheikha and Inkpen (2012)
report the results of both document? and sentence?
based classification in the different but related task
of assessing formal vs. informal style of a docu-
ment/sentence. For students learning English, An-
dersen et al. (2013) made a self?assessment and
tutoring system available which was able to assign
a quality score for each individual sentence they
write: this provides automated feedback on learn-
ers? writing.
A further important issue, largely investigated
in previous readability assessment studies, is the
identification of linguistic factors playing a role
in assessing the readability of documents. If tra-
ditional readability metrics (see e.g., Kincaid et
al. (1975)) typically rely on raw text characteris-
tics, such as word and sentence length, the new
NLP?based readability indices exploit wider sets
of features ranging across different linguistic lev-
els. Starting from Schwarm and Ostendorf (2005)
and Heilman et al. (2007), the role of syntactic
164
features in this task was considered, and more re-
cently, the role of discourse features (e.g., dis-
course topic, discourse cohesion and coherence)
has also been taken into account (see e.g., Barzi-
lay and Lapata (2008), Pitler and Nenkova (2008),
Kate et al. (2010), Feng et al. (2010) and Tonelli
et al. (2012)). Many of these studies also explored
the usefulness of features belonging to individual
levels of linguistic description in predicting text
readability. For example, Feng et al. (2010) sys-
tematically evaluated a wide range of features and
compared the results of different statistical classi-
fiers trained on different classes of features. Sim-
ilarly, the correlation between level?specific fea-
tures has been calculated by Pitler and Nenkova
(2008) with respect to human readability judg-
ments, and by Franc?ois and Fairon (2012) with
respect to readability levels. In both cases, the
classes of features which turned out to be highly
correlated with readability judgments were used
in a readability assessment tool to test their effi-
cacy. Note, however, that in all cases the predic-
tive power of the selected features was evaluated
at the document level only.
3 Our Approach
In this section, we introduce the main ingredi-
ents of our approach to sentence readability as-
sessment, corpora used for training and testing,
selected features and the learning and feature se-
lection algorithm.
3.1 Corpora
We relied on two different corpora: a newspaper
corpus, La Repubblica (henceforth, Rep), and an
easy?to?read newspaper, Due Parole (henceforth,
2Par). 2Par includes articles specifically written
by Italian linguists experts in text simplification
for an audience of adults with a rudimentary lit-
eracy level or with mild intellectual disabilities
(Piemontese, 1996), which represents the target
audience of this study. The two corpora ? selected
as representative of complex vs. simplified texts
within the journalistic genre ? differ significantly
with respect to the distribution of features typi-
cally correlated with text complexity (Dell?Orletta
et al., 2011) and thus represent reliable training
datasets. However, whereas such a distinction is
valid as far as documents are concerned, it appears
to be a simplistic generalization when the focus is
on sentences. In other words, whereas we can con-
sider all sentences of 2Par as easy?to?read, not all
Rep sentences are expected to be difficult?to?read.
From this it follows that whereas the internal com-
position of 2Par is homogeneous at the sentence
level, this is not the case for Rep.
To overcome this asymmetry and in particular
to assess the impact of the noise in the Rep train-
ing corpus, we constructed different training sets
differing in size and internal composition, going
from a noisy set which assumes all Rep sentences
to be difficult?to?read to a clean but smaller set
in which the easy?to?read sentences occurring in
Rep were manually filtered out. These training
sets were used in different experiments whose re-
sults are reported in Section 4.2.
The corpus containing only difficult?to?read
sentences was manually built by annotating Rep
sentences according to their readability (i.e. easy
vs. difficult). The annotation process was car-
ried out by two annotators with a background in
computational linguistics. In order to assess the
reliability of their judgements, we started with a
small annotation experiment: the two annotators
were provided with the same 5 articles from the
Rep corpus (for a total of 107 sentences) and were
asked to extract the difficult?to?read sentences (as
opposed to both easy?to?read and not?easy?to?
classify sentences). The first annotator carried out
the task in 5 minutes and 46 seconds, while the
second annotator took 9 minutes and 8 seconds.
The two annotators agreed on the classification of
81 difficult?to?read sentences out of 107 consid-
ered ones (in particular, the first annotator iden-
tified 90 difficult?to?read?sentences and the sec-
ond one 93 sentences). The agreement between
the two annotators was calculated in terms of pre-
cision, by taking one of the annotation sets as the
gold standard and the other as response: on aver-
age, we obtained a precision of 0.88 in the retrieval
of sentences definitely classified as difficult?to?
read. Given the high level of agreement, the two
annotators were asked to select difficult sentences
from two sets of distinct Rep articles. This re-
sulted in a set of 1,745 difficult?to?read sentences
which were used together with a random selection
of easy?to?read sentences from 2Par for training
and testing.
1
1
The collection can be downloaded from
www.italianlp.it/?page id=22.
165
Feature Ranking position Feature Ranking position
Sent. class. Doc. class. Sent. class. Doc. class.
Raw text features:
[1] Sentence length 1 1 [2] Word length 2 2
Lexical features:
[3] Word types in the Basic Italian Vocabu-
lary
14 42 [6] ?High availability words? 21 22
[4] ?Fundamental words? 10 9 [7] TTR (form) 7
[5] ?High usage words? 22 38 [8] TTR (lemma) 53
Morpho?syntactic features:
[9] Adjective 46 [26] Aux. verb ? inf. mood 64
[10] Adverb 29 59 [27] Aux. verb ? part. mood 51
[11] Article 49 25 [28] Aux. verb ? subj. mood 55
[12] Conjunction 40 [29] Main verb ? cond. mood 40 43
[13] Determiner 43 54 [30] Main verb ? ger. mood 48 48
[14] Interjection [31] Main verb ? imp. mood 37 57
[15] Noun 12 19 [32] Main verb ? indic. mood 16 11
[16] Number 65 44 [33] Main verb ? inf. mood 13 13
[17] Predeterminer [34] Main verb ? part. mood 26 28
[18] Preposition 61 [35] Main verb ? subj. mood 46 32
[19] Pronoun 27 30 [36] Modal verb - inf. mood 54 56
[20] Punctuation 35 [37] Modal verb ? cond. mood 41 36
[21] Residual [38] Modal verb ? imp. mood
[22] Verb 63 34 [39] Modal verb ? indic. mood 18 23
[23] Lexical density 34 33 [40] Modal verb ? part. mood
[24] Aux. verb ? cond. mood 59 60 [41] Modal verb ? subj. mood 60 58
[25] Aux. verb ? indic. mood 17 17
Syntactic features:
[42] Argument 62 [65] Sentence root 35 62
[43] Auxiliary 70 [66] Subject 39 52
[44] Clitic 63 [67] Subordinate clause 64
[45] Complement 28 29 [68] Temporal complement 45 55
[46] Concatenation 66 [69] Temporal modifier
[47] Conjunct in a disjunctive compound 58 67 [70] Temporal predicate
[48] Conjunct linked by a copulative con-
junction
38 37 [71] Parse tree depth 5 4
[49] Copulative conjunction 31 39 [72] Embedded complement ?chains? 8 24
[50] Determiner 50 26 [73] Verbal Root 6 3
[51] Direct object 44 27 [74] Arity of verbal predicates 3 15
[52] Disjunctive conjunction 57 68 [75] Pre?verbal subject 4 12
[53] Indirect complement/object 66 [76] Post?verbal subject 25 16
[54] Locative complement 52 51 [77] Pre?verbal object 36 41
[55] Locative modifier [78] Post?verbal object 9 21
[56] Locative predicate [79] Main clauses 23 14
[57] Modal verb 61 [80] Subordinate clauses 42 45
[58] Modifier 20 47 [81] Subordinate clauses in pre?verbal posi-
tion
32 10
[59] Negative 56 69 [82] Subordinate clauses in post?verbal po-
sition
19 20
[60] Passive subject [83] ?Chains? of embedded subordinate
clauses
11 5
[61] Predicative complement 49 [84] Finite complement clauses 30 18
[62] Preposition [85] Infinitive clauses 53 50
[63] Punctuation 24 31 [86] Length of dependency links 15 8
[64] Relative modifier 47 65 [87] Maximum length of dependency links 7 6
Table 1: Typology of features and ranking position in sentence and document readability assessment
experiments. Only about 14 features are needed for an adequate model of document readability, whereas
this number increases to 30 for sentence readability (marked in boldface). Features which were not
selected during ranking have no rank.
3.2 Linguistic Features
The set of features used in the experiments re-
ported in this paper is wide, spanning across dif-
ferent levels of linguistic analysis. They can
be broadly classified into four main classes, as
reported in Table 1: raw text features, lexical
features, morpho?syntactic features and syntactic
features, shortly described below.
2
2
For an exhaustive discussion including the motivations
underlying this selection of features, the interested reader is
Raw text features (Features [1?2] in Table 1)
refer to those features typically used within tra-
ditional readability metrics and include sentence
length, calculated as the average number of words
per sentence, and word length, calculated as the
average number of characters per words.
The cover category of lexical features (Features
[3?8] in Table 1) includes features referring to
referred to Dell?Orletta et al. (2011, 2014) where these fea-
tures were successfully used for assessing the readability of
Italian texts.
166
both the internal composition of the vocabulary
and the lexical richness of the text. For what con-
cerns the former, the Basic Italian Vocabulary by
De Mauro (2000) was taken as a reference re-
source, including a list of 7000 words highly fa-
miliar to native speakers of Italian. In particular,
we consider: a) the percentage of all unique words
(types) on this reference list occurring in the text,
and b) the internal distribution of the occurring ba-
sic Italian vocabulary words into the usage classi-
fication classes of ?fundamental words? (very fre-
quent words), ?high usage words? (frequent words)
and ?high availability words? (relatively lower fre-
quency words referring to everyday life). Lexical
richness of texts is monitored by computing the
Type/Token Ratio (TTR), which refers to the ratio
between the number of lexical types and the num-
ber of tokens within a text. Due to its sensitivity
to sample size, this feature is computed for text
samples of equivalent length.
The set of morpho?syntactic features (Features
[9?41] in Table 1) is aimed at capturing differ-
ent aspects of the linguistic structure affecting in
one way or another the readability of a text. They
range from the probability distribution of part?
of?speech (POS) types, to the lexical density of
the text, calculated as the ratio of content words
(verbs, nouns, adjectives and adverbs) to the to-
tal number of lexical tokens in a text. This class
also includes features referring to the distribution
of verbs by mood and/or tense, which can be seen
as a language?specific feature exploiting the pre-
dictive power of the Italian rich morphology.
The set of syntactic features (Features [42?87]
in Table 1) captures different aspects of the syntac-
tic structure which are taken as reliable indicators
for automatic readability assessment, namely:
? the unconditional probability of syntactic de-
pendency types, e.g. subject, direct object,
modifier, etc. (Features 42?70);
? parse tree depth features (71?72), going from
the depth of the whole parse tree, calculated
in terms of the longest path from the root
of the dependency tree to some leaf, to a
more specific feature referring to the aver-
age depth of embedded complement ?chains?
governed by a nominal head and including
either prepositional complements or nominal
and adjectival modifiers;
? verbal predicate features (73?78) aimed at
capturing different aspects of the behaviour
of verbal predicates: they range from the
number of verbal roots with respect to num-
ber of all sentence roots occurring in a text,
to more specific features such as the arity
of verbs, meant as the number of instanti-
ated dependency links sharing the same ver-
bal head (covering both arguments and modi-
fiers) and the relative ordering of subject and
object with respect to the verbal head;
? as subordination is widely acknowledged
to be an index of structural complexity
in language, subordination features (79?
85) include: the distribution of subordinate
vs. main clauses; for subordinates, the dis-
tribution of infinitives vs finite complement
clauses, their relative ordering with respect
to the main clause and the average depth of
?chains? of embedded subordinate clauses;
? the length of dependency links is another
characteristic connected with the syntactic
complexity of sentences. Features 86?87
measure dependency length in terms of the
words occurring between the syntactic head
and the dependent: they focus on all depen-
dency links vs. maximum dependency links
only.
3.3 Model Training and Feature Ranking
Given the twofold goal of this study, i.e. re-
liably assessing sentence readability and finding
the most predictive features undelying it, we used
GRAFTING (Perkins et al., 2003), as this approach
allows to train a maximum entropy model while si-
multaneously including incremental feature selec-
tion. The method uses a gradient?based heuristic
to select the most promising feature (to add to the
set of selected features S), and then performs a full
weight optimization over all features in S. This
process is repeated until a certain stopping crite-
rion is reached. As the grafting approach we use
integrates the l
1
regularization (preventing overfit-
ting), features are only included (i.e. have a non-
zero weight) when the reduction of the objective
function is greater than a certain treshold. In our
case, the l
1
prior we use was selected on the basis
of evaluating maximum entropy models with vary-
ing l
1
values (range: 1e-11, 1e-10, ..., 0.1, 1) via
10?fold cross validation. We used TINYEST
3
, a
3
http://github.com/danieldk/tinyest
167
grafting-capable maximum entropy parameter es-
timator for ranking tasks (de Kok, 2011; de Kok,
2013), to select the features and estimate their
weights. Whereas our task is not a ranking task,
but rather a binary classification problem, we were
able to model it as a ranking task by assigning a
high score (1) to difficult?to?read sentences and a
low score (0) to easy?to?read sentences. Conse-
quently, a sentence having a score < 0.5 was in-
terpreted as an easy?to?read sentence, whereas a
sentence which was assigned a score ? 0.5 was
interpreted to be a difficult?to?read sentence.
4 Experiments and Results
4.1 Experimental Setup
In all experiments, the corpora were automatically
tagged by the part?of?speech tagger described
in Dell?Orletta (2009) and dependency?parsed by
the DeSR parser (Attardi, 2006) using Support
Vector Machines as learning algorithm. We de-
vised two different experiments, aimed at explor-
ing the research questions investigated in this pa-
per. To this end, READ?IT was adapted by inte-
grating a specialized training corpus and a maxi-
mum entropy?based feature selection and ranking
algorithm (i.e. grafting).
Experiment 1
This experiment, investigating the first research
question, is aimed at identifying what is the most
effective training data for sentence readability as-
sessment. In particular, the goal is to compare
the results on the basis of using a small set of
gold standard data with respect to a (potentially
larger, but) noisy data set (i.e. without manual re-
vision) where every Rep sentence was assumed to
be difficult?to?read. In particular, the comparison
involved four datasets:
? a collection of gold standard data consisting
of 1,310 easy?to?read sentences randomly
extracted from the 2Par corpus and 1,310
manually selected difficult?to-read sentences
from the Rep corpus;
? a large and unbalanced collection of uncor-
rected data consisting of the whole 2Par cor-
pus (3,910 easy?to?read sentences) and the
whole Rep corpus (8,452 sentences, classi-
fied a priori as difficult?to?read);
? a balanced collection of uncorrected sen-
tences, consisting of 3,910 sentences from
2Par and 3,910 sentences from Rep;
? a balanced collection of uncorrected sen-
tences having the same size as the gold stan-
dard dataset, namely 1,310 sentences from
2Par and 1,310 sentences from Rep.
To assess similarities and differences at the level
of the different corpora used for training in this
experiment, in Table 2 we report a selection of
linguistic features (see Section 3.2) characterizing
the four datasets with respect to the whole 2Par
corpus.We can observe that 2Par differs from all
four Rep corpora for all reported features, and that
the four Rep corpora show similar trends. Inter-
estingly, however, the Rep Gold corpus is almost
always the most distant one from 2Par (i.e. at the
level of sentence length, word length, distribution
of adjectives and subjects, average length of de-
pendency links and parse tree depth).
On the basis of the four Rep datasets, four mod-
els were built which we evaluated using a held?
out test set consisting of 435 sentences from 2Par
and 435 manually classified difficult?to?read sen-
tences from Rep. Using the grafting method, we
calculated the classification score for each sen-
tence in our test set on the basis of an increasing
number of features (ranging from 1 to all non-zero
weighted features for the specific dataset): sen-
tences with a score below 0.5 were classified as
easy?to?read, whereas sentences having a score
greater or equal to 0.5 were classified as difficult?
to?read. This procedure was repeated for each of
the four models.
Experiment 2
The second experiment is aimed at answering our
second and third research questions, focusing on
the features relevant for sentence readability, and
the relationship of those features with document
readability classification. For this purpose, we
compared sentence? and document?based read-
ability classification results. In particular, we com-
pared the features used by the sentence?based
readability model trained on the gold standard
data and the features used by the document?based
model trained on Rep and 2Par. With respect
to the document classification, we used a cor-
pus of 638 documents (319 extracted from 2Par
representating easy?to?read texts, and 319 ex-
tracted from Rep representing difficult?to?read
texts) with 20% of the documents constituting the
held?out test set.
168
Features Rep Unbalan. large Rep Balan. small Rep Balan. large Rep Gold 2Par
Sentence length 24.98 26.03 25.26 28.14 18.66
Word length 5.14 5.24 5.14 5.28 5
?Fundamental words? 75.05% 75.08% 74.83% 74.99% 76.38
Adjective 6.19% 6.25% 6.36% 6.42% 6.03%
Noun 25.65% 27.09% 25.74% 26.10% 29.13%
Subject 4.62% 4.75% 4.64% 4.42% 6%
Max. length of dependency links 9.73 10.13 9.85 10.98 7.67
Parse tree depth 6.18 6.57 6.30 6.83 5.2
Table 2: Distribution of some linguistic features in Rep and 2Par training data
Accuracy Precision (all ft)
Training data 2 ft 10 ft 30 ft 50 ft all ft Easy Difficult
Unbalanced large 50 63.7 74.9 78.4 78.9 (85 ft) 69.2 88.5
Balanced small 64 67.9 79.2 80.8 82.5 (82 ft) 82.5 82.5
Balanced large 63.9 70.6 79.7 81.0 82.3 (85 ft) 83.0 81.6
Gold data 65.6 69.8 79.9 81.3 83.7 (66 ft) 84.8 82.5
Table 3: Sentence classification results using four training datasets and a varying number of features
4.2 Which Training Corpus for Sentence
Classification?
Table 3 reports the results for the sentence classi-
fication task using the four training datasets de-
scribed above. Results are reported in terms of
both overall accuracy (calculated as the proportion
of correct answers against all answers) and preci-
sion within each readability class (when using all
features), defined as the number of easy or diffi-
cult sentences correctly identified as such (in their
respective columns).
Accuracy was computed for all training models
tested using an increasing number of features (2,
10, 30, 50 and all features) as resulting from the
GRAFTING?based ranking and detailed in Table 1.
Note that the first two features correspond in all
cases to the traditional readability features of sen-
tence length and word length. The classification
model trained on the small gold standard dataset
turned out to almost always outperform all other
models: it achieved the best accuracy (83.7%) us-
ing a relatively small number of features (66), and
also for a fixed number of features (i.e. 2, 30
and 50). Only when using the top?10 features,
the uncorrected balanced large dataset slightly out-
performed the gold standard dataset. The accu-
racy when using the unbalanced dataset for train-
ing was always significantly (p < 0.05) worse (us-
ing McNemar?s test) than the accuracy based on
the other training data. The only other significant
difference existed between the balanced small and
large dataset for 10 features. All other differences
are non?significant.
It is also interesting to note that in the results
reported in column 2 ft of Table 3 a significant
difference is observed when comparing the accu-
racy achieved using the unbalanced large data set
with that achieved with the gold standard data: i.e.
about 15.5 percentage points of difference for the
2 ft model against 3 ? 6% using higher numbers
of features. This result originates from the fact that
the unbalanced corpus contains to a larger extent
sentences which are short and complex at the same
time whose correct readability assessment requires
linguistically?grounded features (see below).
The last two columns of Table 3 report preci-
sion results for easy? vs. difficult?to?read sen-
tences for each of the four training datasets (all
features). It is clear that for the class of difficult?
to?read sentences the highest precision (88.5%) is
obtained when using the whole 2Par and Rep cor-
pora for training (i.e. unbalanced large), whereas
for the class of easy?to?read sentences the best
precision results (84.8%) are obtained with the
system trained on the gold standard dataset. In-
terestingly, the worst precision results (69.2%) are
reported for the class of easy?to?read sentences
with the unbalanced large training data set.
These results suggest that the advantages of us-
ing the gold standard data over the uncorrected
training data sets are limited. From this it fol-
lows that treating the whole Rep corpus as a col-
lection of difficult?to?read sentences is not com-
pletely unjustified: this is in line with the satisfac-
tory results reported by Dell?Orletta et al. (2011)
where Rep was used for training a sentence read-
169
ability classifier without any manual filtering of
sentences. Nevertheless, the results of this ex-
periment demonstrate that readability assessment
accuracy and in particular the precision in identi-
fying easy?to?read sentences can be improved by
using a manually selected training dataset. Bal-
ancing the size of larger but potentially noisy (i.e.
without manual revision) data sets appears to cre-
ate a positive trade?off between accuracy and pre-
cision for both classes, thus representing a viable
alternative to the construction of a gold standard
dataset.
4.3 Sentence vs. Document Classification:
which and how many features?
To identify the typology of features needed for
sentence readability assessment and compare them
to those needed for assessing document read-
ability, we compared the results obtained by the
grafting?based feature selection in the sentence
classification task (using the gold standard dataset
for training, see Table 3) to those obtained in the
document classification task whose accuracy on
the test set is reported in Table 4 for increasing
numbers of features selected via GRAFTING.
Train. data 2 ft 10 ft 30 ft 50 ft 70 ft (all)
Rep - 2Par 80 93.3 96.6 96.6 95
Table 4: Accuracy of document classification for
a varying number of features
By comparing the document classification re-
sults with respect to those obtained for sentences,
it can be noticed that the best accuracy is achieved
using a set of 30 features: in contrast to sentence
classification where adding features keeps increas-
ing the performance, more features do not appear
to help for document classification. Sentence read-
ability classification thus seems to be a more com-
plex task, requiring a higher amount of features.
This trend emerges more clearly in Figures 1(a)
and 1(b), where the classification results on the
training set (using 10?fold cross?validation) and
the held?out test set are visualized for increas-
ing amounts of features selected via GRAFTING.
As Figure 1(a) shows, the document classifica-
tion task requires about 14 features after which
the performance appears to stabilize (97.4% accu-
racy for the ten?fold cross-validation and 96.7%
for the held?out test set). In contrast, Figure
1(b) shows that sentence classification requires at
least 30 features (83.4% accuracy for the ten?fold
cross-validation and 79.9% for the test set).
Noticeable differences can also be observed in
the typology of features playing a prominent role
in the two tasks. For each feature taken into ac-
count, Table 1 reports its ranking as resulting from
sentence? and document?based classification ex-
periments (columns ?Sent. class.? and ?Doc.
class.? respectively). Note that in interpreting
the rank associated with each feature it should
be considered that in sentence? and document?
classification the number of required features is
significantly different, i.e. 30 and 14 respectively:
this is to say that approximately the same rank as-
sociated to the same feature does not entail a com-
parable role across the two classification tasks.
As already pointed out, for both sentences and
documents raw text features (i.e. Sentence length
and Word length) turned out to be the top features,
leading however to significantly different results:
i.e. 80% accuracy for documents vs. 65% for
sentences. Among the remaining features, graft-
ing results show that syntactic features do play
a central role in both sentence? and document?
based readability assessment: many of these are
highly ranked, with some differences. Syntactic
features playing a similar role in both readabil-
ity classification tasks include: Verbal root [73],
Parse tree depth [71], ?Chains? of embedded sub-
ordinate clauses [83] and Max. length of depen-
dency links [87], covering important aspects of
syntactic complexity such as depth of the syntactic
dependency (sub?)tree and length of dependency
links. Features that are mainly useful for sentence
readability turned out to be Arity of verbal pred-
icates [74], Pre?verbal subject [75], Post?verbal
object [78] and Embedded complement ?chains?
[72], which can all be seen as representing local
features referring to sentence parts. The feature
Subordinate clauses in pre?verbal position [81],
focusing on the global distribution of pre?verbal
subordinate clauses within the document, is rele-
vant for document classification only. It is interest-
ing to note that features capturing different facets
of the same phenomenon can play quite a different
role for assessing the readability of sentences vs.
documents: this is the case of dependency length,
measured in terms of the words occurring between
the syntactic head and the dependent, where fea-
ture [86] refers to the average length of all de-
pendency links and [87] to the average length of
170
(a) Document classification (b) Sentence classification
Figure 1: Document vs Sentence classification results
maximum dependency links from each sentence.
Whereas [86] plays a similar role for sentences
and documents (in both cases it is a middle rank
feature), [87] is a global feature playing a more
prominent role in document classification.
At the morpho?syntactic level, the feature rank-
ing is more comparable. However, it is interest-
ing to note that very few morpho?syntactic fea-
tures were selected by the feature selection pro-
cess: this is particularly true for document classi-
fication. This can follow from the fact that these
features can be considered as proxies of the syn-
tactic structure which in these experiments was
represented through specific features: in this situ-
ation, the grafting process preferred syntactic fea-
tures over morpho?syntactic ones, in spite of the
lower accuracy of the dependency parser with re-
spect to the part?of?speech tagger. Interestingly,
this result is in contrast with what reported by
Falkenjack and J?onsson (2014) for what concerns
document readability assessment, who claim that
an optimal subset of text features for readability
based document classification does not need fea-
tures induced via parsing. Among the morpho?
syntactic features, it appears that verbal features
play an important role: this can follow both by the
language dealt with which is a a morphologically
rich language, and by the fact that these features
do not have a counterpart at the syntactic level.
Lexical features show a much more mixed re-
sult. Type?Token Ratio (TTR) is only important
for document classification, whereas most of the
other features are important for sentence readabil-
ity, but not for document readability (with the ex-
ception of the presence of ?fundamental words? of
the Basic Italian Vocabulary).
5 Discussion
In this study we have focused on three research
questions. First, we asked which type of train-
ing corpus is best to assess sentence readability.
Whereas we found that using a set of manually
selected complex sentences was better than using
a simple corpus?based distinction, the extra ef-
fort needed to construct the training corpus might
not be worthwhile as observed improvements were
quite modest. However, we did not consider a
more sensitive measure of the difficulty of a sen-
tence (such as a number ranging between 0 and
1), and this might be able to offer a more sub-
stantial improvement (at the cost of needing more
time to create the training material). Of course,
when the goal is to identify the best features for
assessing sentence readability, it does make sense
to have high?quality training data to prevent se-
lecting inadequate features. The second research
question involved identifying which features were
most useful for assessing sentence readability. Be-
sides raw text features, syntactic but also morpho?
syntactic features turned out to play a central role
to achieve adequate performance. The third re-
search question investigated the overlap between
the features needed for document and sentence
readability classification. Whereas there certainly
was overlap between the top features (with dif-
ferent levels of performance), most of the fea-
tures had a different rank across the two tasks,
with local features being more predictive for sen-
tence classification and global ones for documents.
This suggests that the sentence readability task is
more complex than assessing document readabil-
ity, given that there is much less information avail-
able for a sentence than for a document.
171
Acknowledgments
The research reported in this paper was carried out
in the framework of the Short Term Mobility pro-
gram of international exchanges funded by CNR
(Italy). We thank Dani?el de Kok for his help in
applying TINYEST to our data and Giulia Benotto
for her help in manual revision of training data.
References
Sandra M. Alu??sio, Lucia Specia, Thiago A.S. Pardo,
Erick G. Maziero, and Renata P.M. Fortes. 2008.
Towards brazilian portuguese automatic text simpli-
fication systems. In Proceedings of the Eighth ACM
Symposium on Document Engineering, pages 240?
248.
Sandra Alu??sio, Lucia Specia, Caroline Gasperin, and
Carolina Scarton. 2010. Readability assessment for
text simplification. In Proceedings of the NAACL
HLT 2010 Fifth Workshop on Innovative Use of NLP
for Building Educational Applications, pages 1?9.
?istein E. Andersen, Helen Yannakoudakis, Fiona
Barker, and Tim Parish. 2013. Developing and
testing a self-assessment and tutoring system. In
Proceedings of the Eighth Workshop on Innovative
Use of NLP for Building Educational Applications,
pages 32?41.
Giuseppe Attardi. 2006. Experiments with a multi-
language non-projective dependency parser. In Pro-
ceedings of the Tenth Conference on Computational
Natural Language Learning (CoNLL-X ?06), New
York City, New York, pages 166?170.
Gianni Barlacchi and Sara Tonelli. 2013. Ernesta: A
sentence simplification tool for children?s stories in
italian. In Proceedings of the 14th Conferences on
Computational Linguistics and Natural Language
Processing (CICLing 2013), pages 476?487.
Regina Barzilay and Mirella Lapata. 2008. Model-
ing local coherence: An entity-based approach. vol-
ume 34.
Stefan Bott and Horacio Saggion. 2011. An un-
supervised alignment algorithm for text simplifica-
tion corpus construction. In Proceedings of the
Workshop on Monolingual Text-To-Text Generation,
pages 20?26.
Dani?el de Kok. 2011. Discriminative features in
reversible stochastic attribute-value grammars. In
Proceedings of the EMNLP Workshop on Language
Generation and Evaluation, pages 54?63. Associa-
tion for Computational Linguistics.
Dani?el de Kok. 2013. Reversible Stochastic Attribute-
Value Grammars. Ph.D. thesis, Rijksuniversiteit
Groningen.
Tullio De Mauro. 2000. Il dizionario della lingua ital-
iana. Paravia, Torino.
Felice Dell?Orletta, Simonetta Montemagni, and Giu-
lia Venturi. 2011. Read-it: Assessing readability
of italian texts with a view to text simplification. In
Proceedings of the Workshop on Speech and Lan-
guage Processing for Assistive Technologies (SLPAT
2011), pages 73?83.
Felice Dell?Orletta, Simonetta Montemagni, and Giulia
Venturi. 2014. Assessing document and sentence
readability in less resourced languages and across
textual genres. In International Journal of Applied
Linguistics (ITL). Special Issue on Readability and
Text Simplification. To appear.
Felice Dell?Orletta. 2009. Ensemble system for part-
of-speech tagging. In Proceedings of Evalita?09,
Evaluation of NLP and Speech Tools for Italian,
Reggio Emilia, December.
Biljana Drndarevi?c, Sanja
?
Stajner, Stefan Bott, Susana
Bautista, and Horacio Saggion. 2013. Automatic
text simplification in spanish: A comparative evalu-
ation of complementing modules. In Computational
Linguistics and Intelligent Text Processing, pages
488?500. Springer Berlin Heidelberg.
Johan Falkenjack and Arne J?onsson. 2014. Classify-
ing easy-to-read texts without parsing. In Proceed-
ings of the Proceedings of the 3rd Workshop on Pre-
dicting and Improving Text Readability for Target
Reader Populations (PITR), Gothenburg, Sweden.
Association for Computational Linguistics.
Lijun Feng, Martin Jansche, Matt Huenerfauth, and
No?emie Elhadad. 2010. A comparison of features
for automatic readability assessment. In Proceed-
ings of the 23rd International Conference on Com-
putational Linguistics (COLING 2010), pages 276?
284.
Thomas Franc?ois and C?edrick Fairon. 2012. An ?AI
readability? formula for french as a foreign lan-
guage. In Proceedings of the 2012 Joint Confer-
ence on Empirical Methods in Natural Language
Processing and Computational Natural Language
Learning, Jeju Island, Korea, pages 466?477.
Michael J. Heilman, Kevyn Collins, and Jamie Callan.
2007. Combining lexical and grammatical features
to improve readability measures for first and second
language texts. In Proceedings of the Human Lan-
guage Technology Conference, pages 460?467.
Kentaro Inui, Atsushi Fujita, Tetsuro Takahashi, Ryu
Iida, and Tomoya Iwakura. 2003. Text simplifica-
tion for reading assistance: A project note. In Pro-
ceedings of the Second International Workshop on
Paraphrasing, pages 9?16.
Rohit J. Kate, Xiaoqiang Luo, Siddharth Patwardhan,
Martin Franz, Radu Florian, Raymond J. Mooney,
Salim Roukos, and Chris Welty. 2010. Learning to
172
predict readability using diverse linguistic features.
In oceedings of the 23rd International Conference
on Computational Linguistics, pages 546?554.
J. Peter Kincaid, Lieutenant Robert P. Fishburne,
Richard L. Rogers, and Brad S. Chissom. 1975.
Derivation of new readability formulas for navy
enlisted personnel. In Research Branch Report,
Millington, TN: Chief of Naval Training, pages 8?
75.
Annie Louis and Ani Nenkova. 2013. A corpus of sci-
ence journalism for analysing writing quality. vol-
ume 4.
Simon Perkins, Kevin Lacker, and James Theiler.
2003. Grafting: Fast, incremental feature selection
by gradient descent in function space. The Journal
of Machine Learning Research, 3:1333?1356.
Maria Emanuela Piemontese. 1996. Capire e farsi
capire. Teorie e tecniche della scrittura controllata.
Tecnodid, Napoli.
Emily Pitler and Ani Nenkova. 2008. Revisiting
readability: A unified framework for predicting text
quality. In Proceedings of the 2008 Conference on
Empirical Methods in Natural Language Process-
ing, pages 186?195.
Sarah E. Schwarm and Mari Ostendorf. 2005. Reading
level assessment using support vector machines and
statistical language models. In Proceedings of the
43rd Annual Meeting on Association for Computa-
tional Linguistics (ACL 05), pages 523?530.
Fadi Abu Sheikha and Diana Inkpen. 2012. Learning
to classify documents according to formal and infor-
mal style. volume 8.
Johan Sj?oholm. 2012. Probability as readability: A
new machine learning approach to readability as-
sessment for written Swedish. LiU Electronic Press,
Master thesis.
Adam Skory and Maxine Eskenazi. 2010. Predicting
cloze task quality for vocabulary training. In Pro-
ceedings of the NAACL HLT 2010 Fifth Workshop
on Innovative Use of NLP for Building Educational
Applications, pages 49?56.
Sara Tonelli, Ke Tran Manh, and Emanuele Pianta.
2012. Making readability indices readable. In Pro-
ceedings of the First Workshop on Predicting and
Improving Text Readability for Target Reader Popu-
lations, pages 40?48.
Sowmya Vajjala and Detmar Meurers. 2014. On as-
sessing the reading level of individual sentences for
text simplification. In Proceedings of the 14th Con-
ference of the European Chapter of the Association
for Computational Linguistics (EACL-14), Gothen-
burg, Sweden. Association for Computational Lin-
guistics.
Sanja
?
Stajner and Horacio Saggion. 2013. Readabil-
ity indices for automatic evaluation of text simplifi-
cation systems: A feasibility study for spanish. In
Proceedings of the International Joint Conference
on Natural Language Processing.
173
