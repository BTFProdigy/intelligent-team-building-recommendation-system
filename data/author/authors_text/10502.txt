Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 430?439,
Singapore, 6-7 August 2009.
c?2009 ACL and AFNLP
Language Models Based on Semantic Composition
Jeff Mitchell and Mirella Lapata
School of Informatics, University of Edinburgh
Edinburgh EH8 9LW, UK
jeff.mitchell@ed.ac.uk, mlap@inf.ed.ac.uk
Abstract
In this paper we propose a novel statistical
language model to capture long-range se-
mantic dependencies. Specifically, we ap-
ply the concept of semantic composition to
the problem of constructing predictive his-
tory representations for upcoming words.
We also examine the influence of the un-
derlying semantic space on the composi-
tion task by comparing spatial semantic
representations against topic-based ones.
The composition models yield reductions
in perplexity when combined with a stan-
dard n-gram language model over the
n-gram model alone. We also obtain per-
plexity reductions when integrating our
models with a structured language model.
1 Introduction
Statistical language modeling plays an important
role in many areas of natural language process-
ing including speech recognition, machine trans-
lation, and information retrieval. The prototypi-
cal use of language models is to assign proba-
bilities to sequences of words. By invoking the
chain rule, these probabilities are generally es-
timated as the product of conditional probabili-
ties P(w
i
|h
i
) of a word w
i
given the history of
preceding words h
i
? w
i?1
1
. In theory, the history
could span any number of words up to w
i
such as
sentences or even a paragraphs. In practice, how-
ever, it has proven challenging to deal with the
combinatorial growth in the number of possible
histories which in turn impacts reliable parame-
ter estimation. A simple and effective strategy is
to truncate the chain rule to include only the n-1
preceding words (n is often set within the range
of 3?5). The simplification reduces the number of
free parameters. However, low values of n impose
an artificially local horizon to the language model,
and compromise its ability to capture long-range
dependencies, such as syntactic relationships, se-
mantic or thematic constraints.
The literature offers many examples of how to
overcome this limitation, essentially by allowing
the modulation of probabilities by dependencies
which extend to words beyond the n-gram horizon.
Cache language models (Kuhn and de Mori, 1992)
increase the probability of words observed in the
history, e.g., by some factor which decays expo-
nentially with distance. Trigger models (Rosen-
feld, 1996) go a step further by allowing arbi-
trary word pairs to be incorporated into the cache.
Structured language models (e.g., Roark (2001))
go beyond the representation of history as a lin-
ear sequence of words to capture the syntactic con-
structions in which these words are embedded.
It is also possible to build representations of
history which are semantic rather than syntactic
(Bellegarda (2000; Coccaro and Jurafsky (1998;
Gildea and Hofmann (1999)). In this approach, es-
timates for the probabilities of upcoming words
are derived from a comparison of their semantic
content with the content of the history so far. The
semantic representations, in this case, are vectors
derived from the distributional properties of words
in a corpus, based on the insight that words which
are semantically similar will be found in similar
contexts (Harris, 1968; Firth, 1957). Although the
the construction of a semantic representation for
the history is crucial to this approach, the under-
lying vector-based models are primarily designed
to represent isolated words rather than word se-
quences. Ideally, we would like to compose the
meaning of the history out of its constituent parts.
This is by no means a new idea. Much work in lin-
guistic theory (Partee, 1995; Montague, 1974) has
been devoted to compositionality, the process of
determining the meaning of complex expressions
from simpler ones. Previous work either ignores
this issue (e.g., Bellegarda (2000)) or simply com-
430
putes the centroid of the vectors representing the
history (e.g., Coccaro and Jurafsky (1998)). This is
motivated primarily by mathematical convenience
rather than by empirical evidence.
In our earlier work (Mitchell and Lapata, 2008)
we formulated composition as a function of two
vectors and introduced a variety of models based
on addition and multiplication. In this paper we
apply vector composition to the problem of con-
structing predictive history representations for lan-
guage modeling. Besides integrating composition
with language modeling, a task which is novel to
our knowledge, our approach also serves as a valu-
able testbed of our earlier framework which we
originally evaluated on a small scale verb-subject
similarity task. We also investigate how the choice
of the underlying semantic representation inter-
acts with the choice of composition function by
comparing a spatial model that represents words
as vectors in a high-dimensional space against a
probabilistic model that represents words as topic
distributions.
Our results show that the proposed composi-
tion models yield reductions in perplexity when
combined with a standard n-gram model over
the n-gram model alone. We also show that with
an appropriate composition function spatial mod-
els outperform the more sophisticated topic mod-
els. Finally, we obtain further perplexity reduc-
tions when our models are integrated with a struc-
tured language model, indicating that the two ap-
proaches to language modeling are complemen-
tary.
2 Background
2.1 Distributional Models of Semantics
The insight that words with similar meanings will
tend to be distributed in similar contexts has given
rise to a number of approaches that construct
semantic representations from corpora. Broadly
speaking, these models come in two flavors. Se-
mantic space models represent the meaning of
words in terms of vectors, with the vector compo-
nents being derived from the distributional statis-
tics of those words. Essentially, these models pro-
vide a simple procedure for constructing spatial
representations of word meaning. Topic models, in
contrast, impose a probabilistic model onto those
distributional statistics, under the assumption that
hidden topic variables drive the process that gener-
ates words. Both approaches represent the mean-
ings of words in terms of an n-dimensional series
of values, but whereas the semantic space model
treats those values as defining a vector with spatial
properties, the topic model treats them as a proba-
bility distribution.
A simple and popular (McDonald, 2000; Bul-
linaria and Levy, 2007; Lowe, 2000) way to con-
struct a semantic space model is to associate each
vector component with a particular context word,
and assign it a value based on the strength of
its co-occurrence with the target (i.e., the word
for which a semantic representation is being con-
structed). For example, in Mitchell and Lapata
(2008) we used the 2,000 most frequent content
words in a corpus as their contexts, and defined
co-occurrence in terms of the context word be-
ing present in a five word window on either side
of the target word. We calculated the ratio of the
probability of the context word given the target
word to the overall probability of the context word
and use these values as their vector components.
This procedure has the benefits of simplicity and
also of being largely free of any additional the-
oretical assumptions over and above the distribu-
tional approach to semantics. This is not to say that
more sophisticated approaches have not been de-
veloped or that they are not useful. Much work has
been devoted to enriching semantic space mod-
els with syntactic information (e.g., Grefenstette
(1994; Pad?o and Lapata (2007)), selectional pref-
erences (Erk and Pad?o, 2008) or with identifying
optimal ways of defining the vector components
(e.g., Bullinaria and Levy (2007)).
The semantic space discussed thus far is based
on word co-occurrence statistics. However, the
statistics of how words are distributed across the
documents also carry useful semantic informa-
tion. Latent Semantic Analysis (LSA, Landauer
and Dumais (1997) utilizes precisely this distribu-
tional information to uncover hidden semantic fac-
tors by means of dimensionality reduction. Singu-
lar value decomposition (SVD, Berry et al (1994))
is applied to a word-document co-occurrence ma-
trix which is factored into a product of a number
of other matrices; one of them represents words in
terms of the semantic factors and another repre-
sents documents in terms of the same factors. The
algebraic relation between these matrices can be
used to show that any document vector is a linear
combination of the vectors representing the words
it contains. Thus, within this paradigm it is nat-
431
ural to treat multi-word structures as a ?pseudo-
document? and represent them via linear combi-
nations of word vectors.
Due to its generality, LSA has proven a valuable
analysis tool with a wide range of applications.
However, the SVD procedure is somewhat ad-hoc
lacking a sound statistical foundation. Probabilis-
tic Latent Semantic Analysis (pLSA, Hofmann
(2001)) casts the relationship between documents
and words in terms of a generative model based on
a set of hidden topics. Documents are represented
by distributions over topics and topics are distri-
butions over words. Thus the mixture of topics
in any document determines its vocabulary. Maxi-
mum likelihood estimation of these distributions
over a word-document matrix has a comparable
effect to SVD in LSA: a set of hidden semantic
factors, in this case topics, are extracted and docu-
ments and words are represented by these topics.
Latent Dirichlet Allocation (Griffiths et al,
2007; Blei et al, 2003) enhances further the math-
ematical foundation of this approach. Whereas
pLSA treats each document as a separate, inde-
pendent mixture of topics, LDA assumes that the
topic distributions of documents are generated by
a Dirichlet distribution. Thus, LDA is a probabilis-
tic model of the whole document collection. In this
model the process of generating a document can
be described as follows:
1. draw a multinomial distribution ? from a
Dirichlet distribution parametrized by ?
2. for each word in a document:
(a) draw a topic z
k
from the multinomial
distribution characterized by ?
(b) draw a word from a multinomial distri-
bution conditioned on the topic z
k
and
word probabilities ?
Under this model, constructing a representation
for a multi-word sequence amounts to estimating
the topic proportions for that sequence.
1
Struc-
ture here arises from the mathematical form of the
model, as opposed to any linguistic assumptions.
Without anticipating our results too much, we
should point out that several features of the LDA
model are likely to affect the representation of
1
Estimating the posterior distribution P(?,z|w,?,?) of
the hidden variables given an observed collection of docu-
ments w is intractable in general; however, a variety of ap-
proximate inference algorithms have been proposed in the
literature (e.g., Blei et al (2003; Griffiths et al (2007)).
multi-word sequences. Firstly, it is a top-down
generative model (the topic proportions for a doc-
ument are first selected and then this drives the
generation of words) as opposed to a bottom-up
constructive process (words modulate each other
to produce a complex representation of their com-
bination). Secondly, the top level Dirichlet distri-
bution is likely to lead to documents being dom-
inated by a small number of topics, producing
sparse vectors. And lastly, the assumption that
words are generated independently means the in-
teraction between them is not modeled.
2.2 Language Modeling using Semantic
Representations
A common approach to embedding semantic rep-
resentations within language modeling is to mea-
sure the semantic similarity between an upcoming
word and its history and use it to modify the prob-
abilities from an n-gram model. In this way, the
n-gram?s sensitivity to short-range dependencies
is enriched with information about longer-range
semantic coherence. Much of previous work has
taken this approach (Bellegarda, 2000; Coccaro
and Jurafsky, 1998; Wandmacher and Antoine,
2007), whilst relying on LSA to provide seman-
tic representations for individual words. Some au-
thors (Coccaro and Jurafsky, 1998; Wandmacher
and Antoine, 2007) use the geometric notion of
a vector centroid to construct representations of
history, whereas others (Bellegarda, 2000; Deng
and Khundanpur, 2003) use the idea of a ?pseudo-
document?, which is derived from the algebraic
relation between documents and words assumed
within LSA. They all derive P(w
i
|h
i
), the probabil-
ity of an upcoming word given its history, from the
cosine similarity measure which must be somehow
normalized in order to yield well-formed probabil-
ity estimates.
The approach of Gildea and Hofmann (1999)
overcomes this difficulty by using representations
constructed with pLSA, which have a direct prob-
abilistic interpretation. As a result, the probabil-
ity of an upcoming word given the history can be
derived naturally and directly, avoiding the need
for ad-hoc transformations. In constructing their
representation of history, Gildea and Hofmann
(1999) use an online Expectation Maximization
process, which derives from the probabilistic basis
of pLSA, to update the history with new words.
Extensions on the basic semantic language
432
models sketched above involve representing the
history by multiple LSA models of varying granu-
larity in an attempt to capture topic, subtopic, and
local information (Zhang and Rudnicky, 2002); in-
corporating syntactic information by building the
semantic space over words and their syntactic an-
notations (Kanejiya et al, 2004); and treating the
LSA similarity as a feature in a maximum entropy
language model (Deng and Khundanpur, 2003).
3 Composition Models
The problem of vector composition has re-
ceived relatively little attention within natural lan-
guage processing. Attempts to use tensor products
(Smolensky, 1990; Clark et al, 2008; Widdows,
2008) as a means of binding one vector to another
face major computational difficulties as their di-
mensionality grows exponentially with the num-
ber of constituents being composed. To overcome
this problem, other techniques (Plate, 1995) have
been proposed in which the binding of two vectors
results in a vector which has the same dimension-
ality as its components. Crucially, the success of
these methods depends on the assumption that the
vector components are randomly distributed. This
is problematic for modeling language which has
regular structure.
Given the above considerations, in Mitchell and
Lapata (2008) we introduce a general framework
for studying vector composition, which we formu-
late as a function f of two vectors u and v:
h= f (u,v) (1)
where h denotes the composition of u and v. Dif-
ferent composition models arise, depending on
how f is chosen. Our earlier work (Mitchell and
Lapata, 2008) explored two broad classes of mod-
els based on additive and multiplicative functions.
Additive models are the most common method
of vector combination in the literature. They have
been applied to a wide variety of tasks includ-
ing document coherence (Foltz et al, 1998), es-
say grading (Landauer and Dumais, 1997), mod-
eling selectional restrictions (Kintsch, 2001), and
notably language modeling (Coccaro and Jurafsky,
1998; Wandmacher and Antoine, 2007):
h
i
= u
i
+ v
i
(2)
Vector addition (or averaging, which is equivalent
under the cosine similarity measure) is a computa-
tionally efficient composition model as it does not
increase the dimensionality of the resulting vector.
However, the idea of averaging is somewhat coun-
terintuitive from a linguistic perspective. Compo-
sition of simple elements onto more complex ones
must allow the construction of novel meanings
which go beyond those of the individual elements
(Pinker, 1994).
In Mitchell and Lapata (2008) we argue that
composition models based on multiplication ad-
dress this problem:
h
i
= u
i
? v
i
(3)
Whereas the addition of vectors ?lumps their con-
tent together?, multiplication picks out the content
relevant to their combination by scaling each com-
ponent of one with the strength of the correspond-
ing component of the other. This argument is ap-
pealing, especially if one is interested in explain-
ing how the meaning of a verb is modulated by
its subject. Here, we also develop a complemen-
tary, probabilistic argument for the validity of this
model.
Let us assume that semantic vectors are based
on components defined as the ratio of the condi-
tional probability of a context word given the tar-
get word to the overall probability of the context
word.
v
i
=
p(context
i
|target)
p(context
i
)
(4)
These vectors represent the distributional proper-
ties of a given target word in terms of the strength
of its co-occurrence with a set of context words.
Dividing through by the overall probability of each
context word prevents the vectors being dominated
by the most frequent context words, which will of-
ten also have the highest conditional probabilities.
Let us assume vectors u and v represent tar-
get words w
1
and w
2
. Now, when we compose
these vectors using the multiplicative model and
the components definition in (4), we obtain:
h
i
= v
i
?u
i
=
p(c
i
|w
1
)
p(c
i
)
p(c
i
|w
2
)
p(c
i
)
(5)
And by Bayes? theorem:
h
i
=
p(w
1
|c
i
)p(w
2
|c
i
)
p(w
1
)p(w
2
)
(6)
Assuming w
1
and w
2
are independent and apply-
ing Bayes? theorem again, h
i
becomes:
h
i
?
p(w
1
w
2
|c
i
)
p(w
1
w
2
)
=
p(c
i
|w
1
w
2
)
p(c
i
)
(7)
433
By comparing to (4), we can see that the expres-
sion on the right hand side gives us something akin
to the vector components we would expect when
our target is the co-occurrence of w
1
and w
2
. Thus,
for the multiplicative model, the combined vec-
tor h
i
can be thought of as an approximation to
a vector representing the distributional properties
of the phrase w
1
w
2
.
If multiplication results in a vector which is
something like the representation of w
1
and w
2
,
then addition produces a vector which is more like
the representation of w
1
or w
2
. Suppose we were
unsure whether a word token x was an instance
of w
1
or of w
2
. It would be reasonable to express
the probabilities of context words around this to-
ken in terms of the probabilities for w
1
and w
2
,
assuming complete uncertainty between them:
p(c
i
|x) =
1
2
p(c
i
|w
1
)+
1
2
p(c
i
|w
2
) (8)
Therefore, we could represent x with a vector,
based on these probabilities, having the compo-
nents:
x
i
=
1
2
p(c
i
|w
1
)
p(c
i
)
+
1
2
p(c
i
|w
2
)
p(c
i
)
(9)
Which is exactly the vector averaging approach to
semantic composition. As more vectors are com-
bined, vector addition will lead to greater general-
ity rather than greater specificity. The multiplica-
tive approach, on the other hand, picks out the
components of the constituents that are relevant
to the combination, and represents more faithfully
the properties of their conjunction.
As an aside, we should point out that our earlier
work (Mitchell and Lapata, 2008) introduced sev-
eral other models, additive and multiplicative, be-
sides the ones discussed here. We selected the ad-
ditive model as a baseline and also due to its over-
whelming popularity in the language modeling lit-
erature. The multiplicative model presented above
performed best in our evaluation study (i.e., pre-
dicting verb-subject similarity).
4 Language Modeling
Estimating Probabilities In language modeling
our aim is to derive probabilities, p(w|h), given
the semantic representations of word, w, and its
history, h, based on the assumption that probable
words should be semantically coherent with the
history. Semantic coherence is commonly mea-
sured via the cosine of the angle between two vec-
tors:
sim(w,h) =
w ?h
|w||h|
(10)
w ?h=
?
i
w
i
h
i
(11)
where w ? h is the dot product of w and h. Coc-
caro and Jurafsky (1998) utilize this measure in
their approach to language modeling. Unfortu-
nately, they find it necessary to resort to a number
of ad-hoc mechanisms to turn the cosine similari-
ties into useful probabilities. The primary problem
with the cosine measure is that, although its values
lie between 0 and 1, they do not sum to 1, as prob-
abilities must. Thus, some form of normalization
is required. A further problem concerns the fact
that such a measure takes no account of the under-
lying frequency of w, which is crucial for a proba-
bilistic model. For example, encephalon and brain
are roughly synonymous, and may be equally sim-
ilar to some context, but brain may nonetheless be
much more likely, as it is generally more common.
An ideal measure would take account of the un-
derlying probabilities of the elements involved and
produce values that sum to 1. Our approach is to
modify the dot product (equation (11)) on which
the cosine measure is based. Assuming that our
vector components are given by equation (4), the
dot product becomes:
w ?h=
?
i
p(c
i
|w)
p(c
i
)
p(c
i
|h)
p(c
i
)
(12)
which we modify to derive probabilities as fol-
lows:
p(w|h) = p(w)
?
i
p(c
i
|w)
p(c
i
)
p(c
i
|h)
p(c
i
)
p(c
i
) (13)
This expression now weights the sum with the in-
dependent probabilities of the context words and
the word to be predicted. That this is indeed a valid
probability can be seen by the fact it is equiva-
lent to
?
i
p(w|c
i
)p(c
i
|h). However, in constructing
a representation of the history h, it is more conve-
nient to work with equation (13) as it is based on
vector components and can be readily used with
the composition models presented in Mitchell and
Lapata (2008).
Equation (13) allows us to derive probabilities
from vectors representing a word and its prior his-
tory. We must also construct a representation of
434
the history up to the nth word of a sentence. To do
this, we combine, via some (additive or multiplica-
tive) function f , the vector representing that word
with the vector representing the history up to n?1
words:
h
n
= f (w
n
,h
n?1
) (14)
h
1
= w
1
(15)
One issue that must be resolved in implement-
ing equation (14) is that the history vector should
remain correctly normalized. In other words, the
products h
i
? p(c
i
) must themselves be a valid dis-
tribution over context words. So, after each vec-
tor composition the history vector is normalized
as follows:
h
i
=
?
h
i
?
j
?
h
j
? p(c
i
)
(16)
Equations (13)?(16) define a language model
that incorporates vector composition. To generate
probability estimates, it requires a set of word vec-
tors whose components are based on the ratio of
probabilities described by equation (4).
Our discussion thus far has assumed a spatial
semantic space model similar to that employed in
Mitchell and Lapata (2008). However, there is no
reason why the vectors should not be constructed
by some other means. As mentioned earlier, in the
LDA topic model, words are represented as dis-
tributions over topics. These distributions are es-
sentially components of a vector v corresponding
to the target word for which we wish to construct
a semantic representation. Analogously to equa-
tion (4), we convert these probabilities to ratios of
probabilities:
v
i
=
p(topic
i
|target)
p(topic
i
)
(17)
Integrating with Other LanguageModels The
models defined above are based on little more than
semantic coherence. As such they will be only
weakly predictive, since they largely ignore word
order, which n-grammodels primarily exploit. The
simplest means to integrate semantic information
with a standard language model involves combin-
ing two probability estimates as a weighted sum:
p(w|h) = ?
1
p
1
(w|h)+(1??)p
2
(w|h) (18)
Linear interpolation is guaranteed to produce
valid probabilities, and has been used, for exam-
ple, to integrate structured language models with
n-gram models (Roark, 2001). However, it will
work best when the models being combined are
roughly equally predictive and have complemen-
tary strengths and weaknesses. If one model is
much weaker than the other, linear interpolation
will typically produce a model of intermediate
strength (i.e., worse than the better model), with
the weaker model contributing a form of smooth-
ing at best.
Therefore, based on equation (13), we express
our semantic probabilities as the product of the
unigram probability, p(w), and a semantic com-
ponent, ?, which determines the factor by which
this probability should be scaled up or down given
the context in which it occurs.
p(w|h) = p(w) ??(w,h) (19)
?(w,h) =
?
i
p(c
i
|w)
p(c
i
)
p(c
i
|h)
p(c
i
)
p(c
i
) (20)
Thus, it seems reasonable to integrate the n-gram
model by replacing the unigram probabilities with
the n-gram versions.
2
p?(w
n
) = p(w
n
|w
n?1
n?2
) ??(w
n
,h) (21)
To obtain a true probability estimate we normalize
p?(w
n
) by dividing through the sum of all word
probabilities:
p(w
n
|w
n?1
n?2
,h) =
p?(w
n
)
?
w
p?(w)
(22)
In integrating our semantic model with an n-gram
model, we allow the latter to handle short range
dependencies and have the former handle the
longer dependencies outside the n-gram window.
For this reason, the history h used by the semantic
model in the prediction of w
n
only includes words
up to w
n?3
(i.e., only words outside the n-gram).
We also integrate our models with a structured
language model (Roark, 2001). However, in this
case we use linear interpolation (equation (18))
because the models are roughly equally predic-
tive and also because linear interpolation is widely
used when structured language models are com-
bined with n-grams and other information sources.
This approach also has the benefit of allowing the
2
Equation (21) can also be expressed as p(w
n
|w
n?1
n?2
,h) ?
p(w
n
|w
n?1
n?2
)p(w
n
|h)
p(w
n
)
, Which is equivalent to assuming that h is
conditionally independent of w
n?1
n?2
(Gildea and Hofmann,
1999).
435
models to be combined without out the need to
renormalize the probabilities. In the case of the
structured language model, normalizing across the
whole vocabulary would be prohibitive.
5 Experimental Setup
In this section we discuss our experimental design
for assessing the performance of the models pre-
sented above. We give details on our training pro-
cedure and parameter estimation, and present the
methods used for comparison with our approach.
Method Following previous work (e.g., Belle-
garda (2000)) we integrated our compositional
language models with a standard n-gram model
(see equation (21)). We experimented with addi-
tive and multiplicative composition functions, and
two semantic representations (LDA and the sim-
pler semantic space model), resulting in four com-
positional models. In addition, we compared our
models against a state of the art structured lan-
guage model in order to assess the extent to which
the information provided by the semantic repre-
sentation is complementary to syntactic structure.
Our experiments used Roark?s (2001) grammar-
based language model. Similarly to standard lan-
guage models, it computes the probability of the
next word based upon the previous words of the
sentence. This is done by computing a subset of all
possible grammatical relations for the prior words
and then estimating the probability of the next
grammatical structure and the probability of see-
ing the next word given each of the prior gram-
matical relations. When estimating the probability
of the next word, the model conditions on the two
prior heads of constituents, thereby using informa-
tion about word triples (like a trigram model).
All our models were evaluated by computing
perplexity on the test set. Roughly, this quanti-
fies the degree of unpredictability in a probabil-
ity distribution, such that a fair k-sided dice would
have a perplexity of k. More precisely, perplexity
is the reciprocal of the geometric average of the
word probabilities and a lower score indicates bet-
ter predictions.
Parameter Estimation The compositional lan-
guage models were trained on the BLLIP corpus,
a collection of texts from the Wall Street Journal
(years 1987?89). The training corpus consisted of
38,521,346 words. We used a development corpus
of 50,006 words and a test corpus of similar size.
All words were converted to lowercase and num-
bers were replaced with the symbol ?num?. A vo-
cabulary of 20,000 words was chosen and the re-
maining tokens were replaced with ?unk?.
Following Mitchell and Lapata (2008), we con-
structed a simple semantic space based on co-
occurrence statistics from the BLLIP training set.
We used the 2,000 most frequent word types as
contexts and a symmetric five word window. Vec-
tor components were defined as in equation (4).
Contrary to our earlier work, we did not lemma-
tize the corpus before constructing the vectors as
in the context of language modeling this was not
appropriate. We also trained the LDA model on
BLLIP, using Blei et al?s (2003) implementation.
3
We experimented with different numbers of topics
on the development set (from 10 to 200) and re-
port results on the test set with 100 topics. In our
experiments, the hyperparameter ? was initialized
to 0.5, and the ? word probabilities were initial-
ized randomly.
We integrated our compositional models with a
trigram model which we also trained on BLLIP.
The model was built using the SRILM toolkit
(Stolcke, 2002) with backoff and Good-Turing
smoothing. Ideally, we would have liked to train
Roark?s (2001) parser on the same data as that
used for the semantic models. However, this would
require a gold standard treebank several times
larger than those currently available. Following
previous work on structured language modeling
(Roark, 2001; Charniak, 2001; Chelba and Jelinek,
1998), we therefore trained the parser on sections
2?21 of the Penn Treebank containing 936,017
words. Note that Roark?s (2001) parser produces
prefix probabilities for each word of a sentence
which we converted to conditional probabilities by
dividing each current probability by the previous
one.
6 Results
Table 1 shows perplexity results when the com-
positional models are combined with an n-gram
model. With regard to the simple semantic space
model (SSM) we observe that both additive and
multiplicative approaches to constructing history
are successful in reducing perplexity over the
n-gram baseline, with the multiplicative model
outperforming the additive one. This confirms the
3
Available from http://www.cs.princeton.edu/
?blei/lda-c/index.html.
436
Model Perplexity
n-gram 78.72
n-gram+Add
SSM
76.65
n-gram + Multiply
SSM
75.01
n-gram+Add
LDA
76.60
n-gram+Multiply
LDA
123.93
parser 173.35
n-gram + parser 75.22
n-gram + parser + Add
SSM
73.45
n-gram + parser + Multiply
SSM
71.32
n-gram + parser + Add
LDA
71.58
n-gram + parser + Multiply
LDA
87.93
Table 1: Perplexities for n-gram, composition and
structured language models, and their combina-
tions; subscripts
SSM
and
LSA
refer to the semantic
space and LDA models, respectively.
hypothesis that for this type of semantic space the
multiplicative vector combination function pro-
duces representations which have a sounder prob-
abilistic basis.
The results for the LDA model are also reported
in the table. This model reduces perplexity with an
additive composition function, but performs worse
than the n-gram with a multiplicative function. For
comparison, Figure 1 plots the perplexity of the
combined LDA and n-gram models against the
number of topics. Increasing the number of top-
ics produces higher dimensional representations
which ought to be richer, more detailed and there-
fore more predictive. While this is true for the
additive model, a greater number of topics actu-
ally increases the perplexity of the multiplicative
model, indicating it has become less predictive.
We compared these perplexity reductions
against those obtained with a structured lan-
guage model. Following Roark (2001), we com-
bined the structured language model with a
trigram model using linear interpolation (the
weights were optimized on the development
set). This model (n-gram + parser) performs
comparably to our best compositional model
(n-gram + Multiply
SSM
). While both models in-
corporate long range dependencies, the parser is
trained on a hand annotated treebank, whereas the
compositional model uses raw text, albeit from
a larger corpus. Interestingly, when interpolating
the trigram with the parser and the compositional
models, we obtain additional perplexity reduc-
tions. This suggests that the semantic models are
Figure 1: Perplexity versus Number of Topics for
the LDA models using additive and multiplicative
composition functions.
encoding useful predictive information about long
range dependencies, which is distinct from and po-
tentially complementary to the parser?s syntactic
information about such dependencies. Note that
the semantic space multiplicative model yields the
highest perplexity reduction in this suite of exper-
iments followed by the LDA additive model.
7 Conclusions
In this paper we advocated the use of vector
composition models for language modeling. Us-
ing semantic representations of words outside the
n-gram window, we enhanced a trigram model
with longer range dependencies. We compared
composition models based on addition and multi-
plication and examined the influence of the under-
lying semantic space on the composition task. Our
results indicate that the multiplicative composition
function produced the most predictive representa-
tions with a simple semantic space. Interestingly,
its effect in the LDA setting was detrimental. In-
creasing the representational power of the LDA
model, by using a greater number of topics, ren-
dered the multiplicative model less predictive.
These results, together with the basic mathe-
matical structure of the LDA model, suggest that
it may not be well suited to forming represen-
tations for word sequences. In particular, the as-
sumption that words are generated independently
within documents prevents the interactions be-
tween words being modeled. This assumption,
along with the Dirichlet prior on document distri-
butions tends to lead to highly sparse word vec-
437
tors, with a typical word being strongly associated
with only one or two topics. Multiplication of a
number of these vectors generally produces a vec-
tor in which most of these associations have been
obliterated by the sparse components, resulting in
a representation with little predictive power.
These shortcomings arise from the mathemati-
cal formulation of LDA, which is not directed at
modeling the semantic interaction between words.
An interesting future direction would be to opti-
mize the vector components of the probabilistic
model over a suitable training corpus, in order to
derive a vector model of semantics adapted specif-
ically to the task of composition. We also plan to
investigate more sophisticated composition mod-
els that take syntactic structure into account. Our
results on interpolating the compositional mod-
els with a parser indicate that there is substantial
mileage to be gained by combining syntactic and
semantic dependencies.
Acknowledgements We are grateful to Brian
Roark for making his parser available to us.
Thanks to Frank Keller and Victor Lavrenko
for insightful comments and suggestions. This
work was supported by the Economic and So-
cial Research Council [grant number PTA-030-
2006-00341] and the Engineering and Physi-
cal Sciences Research Council [grant number
GR/T04540/01].
References
Jerome R. Bellegarda. 2000. Exploiting latent se-
mantic information in statistical language modeling.
Proceedings of the IEEE, 88(8):1279?1296.
Michael W. Berry, Susan T. Dumais, and Gavin W.
O?Brien. 1994. Using linear algebra for intelligent
information retrieval. SIAM Review, 37(4):573?595.
David M. Blei, Andrew Y. Ng, and Michael I. Jordan.
2003. Latent Dirichlet alocation. Journal of Ma-
chine Learning Research, 3:993?1022.
J.A. Bullinaria and J.P. Levy. 2007. Extracting seman-
tic representations from word co-occurrence statis-
tics: A computational study. Behavior Research
Methods, 39:510?526.
Eugene Charniak. 2001. Immediate-head parsing for
language models. In Proceedings of 35th Annual
Meeting of the Association for Computational Lin-
guistics and 8th Conference of the European Chap-
ter of the Association for Computational Linguistics,
pages 116?123, Toulouse, France.
Ciprian Chelba and Frederick Jelinek. 1998. Exploit-
ing syntactic structure for language modeling. In
Proceedings of the 17th International Conference on
Computational Linguistics and 36th Annual Meet-
ing of the Association for Computational Linguis-
tics, pages 225?231, Montr?eal, Canada.
Stephen Clark, Bob Coecke, and Mehrnoosh
Sadrzadeh. 2008. A compositional distribu-
tional model of meaning. In Proceedings of the
2nd Symposium on Quantum Interaction, pages
133?140, Oxford, UK. College Publications.
Noah Coccaro and Daniel Jurafsky. 1998. Towards
better integration of semantic predictors in satistical
language modeling. In Proceedings of the 5th Inter-
national Conference on Spoken Language Process-
ing, pages 2403?2406, Sydney, Australia.
Yonggang Deng and Sanjeev Khundanpur. 2003. La-
tent semantic information in maximum entropy lan-
guage models for conversational speech recognition.
In Proceedings of the 2003 Human Language Tech-
nology Conference of the North American Chapter
of the Association for Computational Linguistics,
pages 56?63, Edmonton, AL.
Katrin Erk and Sebastian Pad?o. 2008. A structured
vector space model for word meaning in context.
In Proceedings of the 2008 Conference on Empiri-
cal Methods in Natural Language Processing, pages
897?906, Honolulu, Hawaii.
J. R. Firth. 1957. A synopsis of linguistic theory 1930?
1955. In Studies in Linguistic Analysis, pages 1?32.
Philological Society, Oxford.
Peter Foltz, Walter Kintsch, and Thomas Landauer.
1998. The measurement of textual coherence
with latent semantic analysis. Discourse Process,
15:285?307.
Daniel Gildea and Thomas Hofmann. 1999. Topic-
based language models using EM. In Proceedings of
the 6th European Conference on Speech Communi-
ation and Technology, pages 2167?2170, Budapest,
Hungary.
Gregory Grefenstette. 1994. Explorations in Auto-
matic Thesaurus Discovery. Kluwer Academic Pub-
lishers, Norwell, MA, USA.
Thomas L. Griffiths, Mark Steyvers, and Joshua B.
Tenenbaum. 2007. Topics in semantic representa-
tion. Psychological Review, 114(2):211?244.
Zellig Harris. 1968. Mathematical Structures of Lan-
guage. Wiley, New York.
Thomas Hofmann. 2001. Unsupervised learning
by probabilistic latent semantic analysis. Machine
Learning, 41(2):177?196.
Dharmendra Kanejiya, Arun Kumar, and Surendra
Prasad. 2004. Statistical language modeling with
performance benchmarks using various levels of
438
syntactic-semantic information. In Proceedings of
the 20th International Conference on Computational
Linguistics, pages 1161?1167, Geneva, Switzerland.
Walter Kintsch. 2001. Predication. Cognitive Science,
25(2):173?202.
Roland Kuhn and Renato de Mori. 1992. A cache
based natural language model for speech recogni-
tion. IEEE Transactions on Pattern Analysis and
Machine Intelligence, (14):570?583.
T. K. Landauer and S. T. Dumais. 1997. A solution
to Plato?s problem: the latent semantic analysis the-
ory of acquisition, induction and representation of
knowledge. Psychological Review, 104(2):211?240.
Will Lowe. 2000. Topographic Maps of Semantic
Space. Ph.D. thesis, University of Edinburgh.
Scott McDonald. 2000. Environmental Determinants
of Lexical Processing Effort. Ph.D. thesis, Univer-
sity of Edinburgh.
Jeff Mitchell and Mirella Lapata. 2008. Vector-based
models of semantic composition. In Proceedings of
ACL-08: HLT, pages 236?244, Columbus, OH.
R. Montague. 1974. English as a formal language. In
R. Montague, editor, Formal Philosophy. Yale Uni-
versity Press, New Haven, CT.
Sebastian Pad?o and Mirella Lapata. 2007.
Dependency-based construction of semantic space
models. Computational Linguistics, 33(2):161?199.
B. Partee. 1995. Lexical semantics and compositional-
ity. In Lila Gleitman and Mark Liberman, editors,
Invitation to Cognitive Science Part I: Language,
pages 311?360. MIT Press, Cambridge, MA.
S. Pinker. 1994. The Language Instinct: How the Mind
Creates Language. HarperCollins, New York.
Tony A. Plate. 1995. Holographic reduced represen-
tations. IEEE Transactions on Neural Networks,
6(3):623?641.
Brian Roark. 2001. Probabilistic top-down parsing
and language modeling. Computational Linguistics,
27(2):249?276.
Roni Rosenfeld. 1996. A maximum entropy approach
to adaptive statistical language modeling. Computer
Speech and Language, 10:187?228.
Paul Smolensky. 1990. Tensor product variable bind-
ing and the representation of symbolic structures
in connectionist systems. Artificial Intelligence,
46:159?216.
Andreas Stolcke. 2002. SRILM ? an extensible lan-
guage modeling toolkit. In Proceedings of the Inter-
national Conference on Spoken Language Process-
ing, pages 901?904, Denver, CO.
Tonio Wandmacher and Jean-Yves Antoine. 2007.
Methods to integrate a language model with seman-
tic information for a word prediction component.
In Proceedings of the 2007 Joint Conference on
Empirical Methods in Natural Language Process-
ing and Computational Natural Language Learning
(EMNLP-CoNLL), pages 506?513, Prague, Czech
Republic.
Dominic Widdows. 2008. Semantic vector products:
Some initial investigations. In Proceedings of the
2nd Symposium on Quantum Interaction, Oxford,
UK. College Publications.
Rong Zhang and Alexander I. Rudnicky. 2002. Im-
prove latent semantic analysis based language model
by integrating multiple level knowldege. In Pro-
ceedings of the 7th International Conference on Spo-
ken Language Processing, pages 893?897, Denver,
CO.
439
Proceedings of ACL-08: HLT, pages 236?244,
Columbus, Ohio, USA, June 2008. c?2008 Association for Computational Linguistics
Vector-based Models of Semantic Composition
Jeff Mitchell and Mirella Lapata
School of Informatics, University of Edinburgh
2 Buccleuch Place, Edinburgh EH8 9LW, UK
jeff.mitchell@ed.ac.uk, mlap@inf.ed.ac.uk
Abstract
This paper proposes a framework for repre-
senting the meaning of phrases and sentences
in vector space. Central to our approach is
vector composition which we operationalize
in terms of additive and multiplicative func-
tions. Under this framework, we introduce a
wide range of composition models which we
evaluate empirically on a sentence similarity
task. Experimental results demonstrate that
the multiplicative models are superior to the
additive alternatives when compared against
human judgments.
1 Introduction
Vector-based models of word meaning (Lund and
Burgess, 1996; Landauer and Dumais, 1997) have
become increasingly popular in natural language
processing (NLP) and cognitive science. The ap-
peal of these models lies in their ability to rep-
resent meaning simply by using distributional in-
formation under the assumption that words occur-
ring within similar contexts are semantically similar
(Harris, 1968).
A variety of NLP tasks have made good use
of vector-based models. Examples include au-
tomatic thesaurus extraction (Grefenstette, 1994),
word sense discrimination (Schu?tze, 1998) and dis-
ambiguation (McCarthy et al, 2004), collocation ex-
traction (Schone and Jurafsky, 2001), text segmen-
tation (Choi et al, 2001) , and notably information
retrieval (Salton et al, 1975). In cognitive science
vector-based models have been successful in simu-
lating semantic priming (Lund and Burgess, 1996;
Landauer and Dumais, 1997) and text comprehen-
sion (Landauer and Dumais, 1997; Foltz et al,
1998). Moreover, the vector similarities within such
semantic spaces have been shown to substantially
correlate with human similarity judgments (McDon-
ald, 2000) and word association norms (Denhire and
Lemaire, 2004).
Despite their widespread use, vector-based mod-
els are typically directed at representing words in
isolation and methods for constructing representa-
tions for phrases or sentences have received little
attention in the literature. In fact, the common-
est method for combining the vectors is to average
them. Vector averaging is unfortunately insensitive
to word order, and more generally syntactic struc-
ture, giving the same representation to any construc-
tions that happen to share the same vocabulary. This
is illustrated in the example below taken from Lan-
dauer et al (1997). Sentences (1-a) and (1-b) con-
tain exactly the same set of words but their meaning
is entirely different.
(1) a. It was not the sales manager who hit the
bottle that day, but the office worker with
the serious drinking problem.
b. That day the office manager, who was
drinking, hit the problem sales worker with
a bottle, but it was not serious.
While vector addition has been effective in some
applications such as essay grading (Landauer and
Dumais, 1997) and coherence assessment (Foltz
et al, 1998), there is ample empirical evidence
that syntactic relations across and within sentences
are crucial for sentence and discourse processing
(Neville et al, 1991; West and Stanovich, 1986)
and modulate cognitive behavior in sentence prim-
ing (Till et al, 1988) and inference tasks (Heit and
236
Rubinstein, 1994).
Computational models of semantics which use
symbolic logic representations (Montague, 1974)
can account naturally for the meaning of phrases or
sentences. Central in these models is the notion of
compositionality ? the meaning of complex expres-
sions is determined by the meanings of their con-
stituent expressions and the rules used to combine
them. Here, semantic analysis is guided by syntactic
structure, and therefore sentences (1-a) and (1-b) re-
ceive distinct representations. The downside of this
approach is that differences in meaning are qualita-
tive rather than quantitative, and degrees of similar-
ity cannot be expressed easily.
In this paper we examine models of semantic
composition that are empirically grounded and can
represent similarity relations. We present a gen-
eral framework for vector-based composition which
allows us to consider different classes of models.
Specifically, we present both additive and multi-
plicative models of vector combination and assess
their performance on a sentence similarity rating ex-
periment. Our results show that the multiplicative
models are superior and correlate significantly with
behavioral data.
2 Related Work
The problem of vector composition has received
some attention in the connectionist literature, partic-
ularly in response to criticisms of the ability of con-
nectionist representations to handle complex struc-
tures (Fodor and Pylyshyn, 1988). While neural net-
works can readily represent single distinct objects,
in the case of multiple objects there are fundamen-
tal difficulties in keeping track of which features are
bound to which objects. For the hierarchical struc-
ture of natural language this binding problem be-
comes particularly acute. For example, simplistic
approaches to handling sentences such as John loves
Mary and Mary loves John typically fail to make
valid representations in one of two ways. Either
there is a failure to distinguish between these two
structures, because the network fails to keep track
of the fact that John is subject in one and object
in the other, or there is a failure to recognize that
both structures involve the same participants, be-
cause John as a subject has a distinct representation
from John as an object. In contrast, symbolic repre-
sentations can naturally handle the binding of con-
stituents to their roles, in a systematic manner that
avoids both these problems.
Smolensky (1990) proposed the use of tensor
products as a means of binding one vector to an-
other. The tensor product u? v is a matrix whose
components are all the possible products uiv j of the
components of vectors u and v. A major difficulty
with tensor products is their dimensionality which is
higher than the dimensionality of the original vec-
tors (precisely, the tensor product has dimensional-
ity m? n). To overcome this problem, other tech-
niques have been proposed in which the binding of
two vectors results in a vector which has the same
dimensionality as its components. Holographic re-
duced representations (Plate, 1991) are one imple-
mentation of this idea where the tensor product is
projected back onto the space of its components.
The projection is defined in terms of circular con-
volution a mathematical function that compresses
the tensor product of two vectors. The compression
is achieved by summing along the transdiagonal el-
ements of the tensor product. Noisy versions of the
original vectors can be recovered by means of cir-
cular correlation which is the approximate inverse
of circular convolution. The success of circular cor-
relation crucially depends on the components of the
n-dimensional vectors u and v being randomly dis-
tributed with mean 0 and variance 1
n
. This poses
problems for modeling linguistic data which is typi-
cally represented by vectors with non-random struc-
ture.
Vector addition is by far the most common
method for representing the meaning of linguistic
sequences. For example, assuming that individual
words are represented by vectors, we can compute
the meaning of a sentence by taking their mean
(Foltz et al, 1998; Landauer and Dumais, 1997).
Vector addition does not increase the dimensional-
ity of the resulting vector. However, since it is order
independent, it cannot capture meaning differences
that are modulated by differences in syntactic struc-
ture. Kintsch (2001) proposes a variation on the vec-
tor addition theme in an attempt to model how the
meaning of a predicate (e.g., run) varies depending
on the arguments it operates upon (e.g, the horse ran
vs. the color ran). The idea is to add not only the
vectors representing the predicate and its argument
but also the neighbors associated with both of them.
The neighbors, Kintsch argues, can ?strengthen fea-
tures of the predicate that are appropriate for the ar-
gument of the predication?.
237
animal stable village gallop jokey
horse 0 6 2 10 4
run 1 8 4 4 0
Figure 1: A hypothetical semantic space for horse and
run
Unfortunately, comparisons across vector compo-
sition models have been few and far between in the
literature. The merits of different approaches are il-
lustrated with a few hand picked examples and pa-
rameter values and large scale evaluations are uni-
formly absent (see Frank et al (2007) for a criticism
of Kintsch?s (2001) evaluation standards). Our work
proposes a framework for vector composition which
allows the derivation of different types of models
and licenses two fundamental composition opera-
tions, multiplication and addition (and their combi-
nation). Under this framework, we introduce novel
composition models which we compare empirically
against previous work using a rigorous evaluation
methodology.
3 Composition Models
We formulate semantic composition as a function
of two vectors, u and v. We assume that indi-
vidual words are represented by vectors acquired
from a corpus following any of the parametrisa-
tions that have been suggested in the literature.1 We
briefly note here that a word?s vector typically rep-
resents its co-occurrence with neighboring words.
The construction of the semantic space depends on
the definition of linguistic context (e.g., neighbour-
ing words can be documents or collocations), the
number of components used (e.g., the k most fre-
quent words in a corpus), and their values (e.g., as
raw co-occurrence frequencies or ratios of probabil-
ities). A hypothetical semantic space is illustrated in
Figure 1. Here, the space has only five dimensions,
and the matrix cells denote the co-occurrence of the
target words (horse and run) with the context words
animal, stable, and so on.
Let p denote the composition of two vectors u
and v, representing a pair of constituents which
stand in some syntactic relation R. Let K stand for
any additional knowledge or information which is
needed to construct the semantics of their composi-
1A detailed treatment of existing semantic space models is
outside the scope of the present paper. We refer the interested
reader to Pado? and Lapata (2007) for a comprehensive overview.
tion. We define a general class of models for this
process of composition as:
p = f (u,v,R,K) (1)
The expression above allows us to derive models for
which p is constructed in a distinct space from u
and v, as is the case for tensor products. It also
allows us to derive models in which composition
makes use of background knowledge K and mod-
els in which composition has a dependence, via the
argument R, on syntax.
To derive specific models from this general frame-
work requires the identification of appropriate con-
straints to narrow the space of functions being con-
sidered. One particularly useful constraint is to
hold R fixed by focusing on a single well defined
linguistic structure, for example the verb-subject re-
lation. Another simplification concerns K which can
be ignored so as to explore what can be achieved in
the absence of additional knowledge. This reduces
the class of models to:
p = f (u,v) (2)
However, this still leaves the particular form of the
function f unspecified. Now, if we assume that p
lies in the same space as u and v, avoiding the issues
of dimensionality associated with tensor products,
and that f is a linear function, for simplicity, of the
cartesian product of u and v, then we generate a class
of additive models:
p = Au+Bv (3)
where A and B are matrices which determine the
contributions made by u and v to the product p. In
contrast, if we assume that f is a linear function of
the tensor product of u and v, then we obtain multi-
plicative models:
p = Cuv (4)
where C is a tensor of rank 3, which projects the
tensor product of u and v onto the space of p.
Further constraints can be introduced to reduce
the free parameters in these models. So, if we as-
sume that only the ith components of u and v con-
tribute to the ith component of p, that these com-
ponents are not dependent on i, and that the func-
tion is symmetric with regard to the interchange of u
238
and v, we obtain a simpler instantiation of an addi-
tive model:
pi = ui + vi (5)
Analogously, under the same assumptions, we ob-
tain the following simpler multiplicative model:
pi = ui ? vi (6)
For example, according to (5), the addition of the
two vectors representing horse and run in Fig-
ure 1 would yield horse+ run = [1 14 6 14 4].
Whereas their product, as given by (6), is
horse ? run = [0 48 8 40 0].
Although the composition model in (5) is com-
monly used in the literature, from a linguistic per-
spective, the model in (6) is more appealing. Sim-
ply adding the vectors u and v lumps their contents
together rather than allowing the content of one vec-
tor to pick out the relevant content of the other. In-
stead, it could be argued that the contribution of the
ith component of u should be scaled according to its
relevance to v, and vice versa. In effect, this is what
model (6) achieves.
As a result of the assumption of symmetry, both
these models are ?bag of words? models and word
order insensitive. Relaxing the assumption of sym-
metry in the case of the simple additive model pro-
duces a model which weighs the contribution of the
two components differently:
pi = ?ui +?vi (7)
This allows additive models to become more
syntax aware, since semantically important con-
stituents can participate more actively in the com-
position. As an example if we set ? to 0.4
and ? to 0.6, then horse = [0 2.4 0.8 4 1.6]
and run = [0.6 4.8 2.4 2.4 0], and their sum
horse+ run = [0.6 5.6 3.2 6.4 1.6].
An extreme form of this differential in the contri-
bution of constituents is where one of the vectors,
say u, contributes nothing at all to the combination:
pi = v j (8)
Admittedly the model in (8) is impoverished and
rather simplistic, however it can serve as a simple
baseline against which to compare more sophisti-
cated models.
The models considered so far assume that com-
ponents do not ?interfere? with each other, i.e., that
only the ith components of u and v contribute to the
ith component of p. Another class of models can be
derived by relaxing this constraint. To give a con-
crete example, circular convolution is an instance of
the general multiplicative model which breaks this
constraint by allowing u j to contribute to pi:
pi = ?
j
u j ? vi? j (9)
It is also possible to re-introduce the dependence
on K into the model of vector composition. For ad-
ditive models, a natural way to achieve this is to in-
clude further vectors into the summation. These vec-
tors are not arbitrary and ideally they must exhibit
some relation to the words of the construction under
consideration. When modeling predicate-argument
structures, Kintsch (2001) proposes including one or
more distributional neighbors, n, of the predicate:
p = u+v+?n (10)
Note that considerable latitude is allowed in select-
ing the appropriate neighbors. Kintsch (2001) con-
siders only the m most similar neighbors to the pred-
icate, from which he subsequently selects k, those
most similar to its argument. So, if in the composi-
tion of horse with run, the chosen neighbor is ride,
ride = [2 15 7 9 1], then this produces the repre-
sentation horse+ run+ ride = [3 29 13 23 5]. In
contrast to the simple additive model, this extended
model is sensitive to syntactic structure, since n is
chosen from among the neighbors of the predicate,
distinguishing it from the argument.
Although we have presented multiplicative and
additive models separately, there is nothing inherent
in our formulation that disallows their combination.
The proposal is not merely notational. One poten-
tial drawback of multiplicative models is the effect
of components with value zero. Since the product
of zero with any number is itself zero, the presence
of zeroes in either of the vectors leads to informa-
tion being essentially thrown away. Combining the
multiplicative model with an additive model, which
does not suffer from this problem, could mitigate
this problem:
pi = ?ui +?vi + ?uivi (11)
where ?, ?, and ? are weighting constants.
239
4 Evaluation Set-up
We evaluated the models presented in Section 3
on a sentence similarity task initially proposed by
Kintsch (2001). In his study, Kintsch builds a model
of how a verb?s meaning is modified in the context of
its subject. He argues that the subjects of ran in The
color ran and The horse ran select different senses
of ran. This change in the verb?s sense is equated to
a shift in its position in semantic space. To quantify
this shift, Kintsch proposes measuring similarity rel-
ative to other verbs acting as landmarks, for example
gallop and dissolve. The idea here is that an appro-
priate composition model when applied to horse and
ran will yield a vector closer to the landmark gallop
than dissolve. Conversely, when color is combined
with ran, the resulting vector will be closer to dis-
solve than gallop.
Focusing on a single compositional structure,
namely intransitive verbs and their subjects, is a
good point of departure for studying vector combi-
nation. Any adequate model of composition must be
able to represent argument-verb meaning. Moreover
by using a minimal structure we factor out inessen-
tial degrees of freedom and are able to assess the
merits of different models on an equal footing. Un-
fortunately, Kintsch (2001) demonstrates how his
own composition algorithm works intuitively on a
few hand selected examples but does not provide a
comprehensive test set. In order to establish an inde-
pendent measure of sentence similarity, we assem-
bled a set of experimental materials and elicited sim-
ilarity ratings from human subjects. In the following
we describe our data collection procedure and give
details on how our composition models were con-
structed and evaluated.
Materials and Design Our materials consisted
of sentences with an an intransitive verb and its sub-
ject. We first compiled a list of intransitive verbs
from CELEX2. All occurrences of these verbs with
a subject noun were next extracted from a RASP
parsed (Briscoe and Carroll, 2002) version of the
British National Corpus (BNC). Verbs and nouns
that were attested less than fifty times in the BNC
were removed as they would result in unreliable vec-
tors. Each reference subject-verb tuple (e.g., horse
ran) was paired with two landmarks, each a syn-
onym of the verb. The landmarks were chosen so
as to represent distinct verb senses, one compatible
2http://www.ru.nl/celex/
with the reference (e.g., horse galloped ) and one in-
compatible (e.g., horse dissolved ). Landmarks were
taken from WordNet (Fellbaum, 1998). Specifically,
they belonged to different synsets and were maxi-
mally dissimilar as measured by the Jiang and Con-
rath (1997) measure.3
Our initial set of candidate materials consisted
of 20 verbs, each paired with 10 nouns, and 2 land-
marks (400 pairs of sentences in total). These were
further pretested to allow the selection of a subset
of items showing clear variations in sense as we
wanted to have a balanced set of similar and dis-
similar sentences. In the pretest, subjects saw a
reference sentence containing a subject-verb tuple
and its landmarks and were asked to choose which
landmark was most similar to the reference or nei-
ther. Our items were converted into simple sentences
(all in past tense) by adding articles where appropri-
ate. The stimuli were administered to four separate
groups; each group saw one set of 100 sentences.
The pretest was completed by 53 participants.
For each reference verb, the subjects? responses
were entered into a contingency table, whose rows
corresponded to nouns and columns to each possi-
ble answer (i.e., one of the two landmarks). Each
cell recorded the number of times our subjects se-
lected the landmark as compatible with the noun or
not. We used Fisher?s exact test to determine which
verbs and nouns showed the greatest variation in
landmark preference and items with p-values greater
than 0.001 were discarded. This yielded a reduced
set of experimental items (120 in total) consisting of
15 reference verbs, each with 4 nouns, and 2 land-
marks.
Procedure and Subjects Participants first saw
a set of instructions that explained the sentence sim-
ilarity task and provided several examples. Then
the experimental items were presented; each con-
tained two sentences, one with the reference verb
and one with its landmark. Examples of our items
are given in Table 1. Here, burn is a high similarity
landmark (High) for the reference The fire glowed,
whereas beam is a low similarity landmark (Low).
The opposite is the case for the reference The face
3We assessed a wide range of semantic similarity measures
using the WordNet similarity package (Pedersen et al, 2004).
Most of them yielded similar results. We selected Jiang and
Conrath?s measure since it has been shown to perform consis-
tently well across several cognitive and NLP tasks (Budanitsky
and Hirst, 2001).
240
Noun Reference High Low
The fire glowed burned beamed
The face glowed beamed burned
The child strayed roamed digressed
The discussion strayed digressed roamed
The sales slumped declined slouched
The shoulders slumped slouched declined
Table 1: Example Stimuli with High and Low similarity
landmarks
glowed. Sentence pairs were presented serially in
random order. Participants were asked to rate how
similar the two sentences were on a scale of one
to seven. The study was conducted remotely over
the Internet using Webexp4, a software package de-
signed for conducting psycholinguistic studies over
the web. 49 unpaid volunteers completed the exper-
iment, all native speakers of English.
Analysis of Similarity Ratings The reliability
of the collected judgments is important for our eval-
uation experiments; we therefore performed several
tests to validate the quality of the ratings. First, we
examined whether participants gave high ratings to
high similarity sentence pairs and low ratings to low
similarity ones. Figure 2 presents a box-and-whisker
plot of the distribution of the ratings. As we can see
sentences with high similarity landmarks are per-
ceived as more similar to the reference sentence. A
Wilcoxon rank sum test confirmed that the differ-
ence is statistically significant (p < 0.01). We also
measured how well humans agree in their ratings.
We employed leave-one-out resampling (Weiss and
Kulikowski, 1991), by correlating the data obtained
from each participant with the ratings obtained from
all other participants. We used Spearman?s ?, a non
parametric correlation coefficient, to avoid making
any assumptions about the distribution of the simi-
larity ratings. The average inter-subject agreement5
was ? = 0.40. We believe that this level of agree-
ment is satisfactory given that naive subjects are
asked to provide judgments on fine-grained seman-
tic distinctions (see Table 1). More evidence that
this is not an easy task comes from Figure 2 where
we observe some overlap in the ratings for High and
Low similarity items.
4http://www.webexp.info/
5Note that Spearman?s rho tends to yield lower coefficients
compared to parametric alternatives such as Pearson?s r.
High Low0
1
2
3
4
5
6
7
Figure 2: Distribution of elicited ratings for High and
Low similarity items
Model Parameters Irrespectively of their form,
all composition models discussed here are based on
a semantic space for representing the meanings of
individual words. The semantic space we used in
our experiments was built on a lemmatised version
of the BNC. Following previous work (Bullinaria
and Levy, 2007), we optimized its parameters on a
word-based semantic similarity task. The task in-
volves examining the degree of linear relationship
between the human judgments for two individual
words and vector-based similarity values. We ex-
perimented with a variety of dimensions (ranging
from 50 to 500,000), vector component definitions
(e.g., pointwise mutual information or log likelihood
ratio) and similarity measures (e.g., cosine or confu-
sion probability). We used WordSim353, a bench-
mark dataset (Finkelstein et al, 2002), consisting of
relatedness judgments (on a scale of 0 to 10) for 353
word pairs.
We obtained best results with a model using a
context window of five words on either side of the
target word, the cosine measure, and 2,000 vector
components. The latter were the most common con-
text words (excluding a stop list of function words).
These components were set to the ratio of the proba-
bility of the context word given the target word to
the probability of the context word overall. This
configuration gave high correlations with the Word-
Sim353 similarity judgments using the cosine mea-
sure. In addition, Bullinaria and Levy (2007) found
that these parameters perform well on a number of
other tasks such as the synonymy task from the Test
of English as a Foreign Language (TOEFL).
Our composition models have no additional pa-
241
rameters beyond the semantic space just described,
with three exceptions. First, the additive model
in (7) weighs differentially the contribution of the
two constituents. In our case, these are the sub-
ject noun and the intransitive verb. To this end,
we optimized the weights on a small held-out set.
Specifically, we considered eleven models, varying
in their weightings, in steps of 10%, from 100%
noun through 50% of both verb and noun to 100%
verb. For the best performing model the weight
for the verb was 80% and for the noun 20%. Sec-
ondly, we optimized the weightings in the combined
model (11) with a similar grid search over its three
parameters. This yielded a weighted sum consisting
of 95% verb, 0% noun and 5% of their multiplica-
tive combination. Finally, Kintsch?s (2001) additive
model has two extra parameters. The m neighbors
most similar to the predicate, and the k of m neigh-
bors closest to its argument. In our experiments we
selected parameters that Kintsch reports as optimal.
Specifically, m was set to 20 and m to 1.
Evaluation Methodology We evaluated the
proposed composition models in two ways. First,
we used the models to estimate the cosine simi-
larity between the reference sentence and its land-
marks. We expect better models to yield a pattern of
similarity scores like those observed in the human
ratings (see Figure 2). A more scrupulous evalua-
tion requires directly correlating all the individual
participants? similarity judgments with those of the
models.6 We used Spearman?s ? for our correlation
analyses. Again, better models should correlate bet-
ter with the experimental data. We assume that the
inter-subject agreement can serve as an upper bound
for comparing the fit of our models against the hu-
man judgments.
5 Results
Our experiments assessed the performance of seven
composition models. These included three additive
models, i.e., simple addition (equation (5), Add),
weighted addition (equation (7), WeightAdd), and
Kintsch?s (2001) model (equation (10), Kintsch), a
multiplicative model (equation (6), Multiply), and
also a model which combines multiplication with
6We avoided correlating the model predictions with aver-
aged participant judgments as this is inappropriate given the or-
dinal nature of the scale of these judgments and also leads to a
dependence between the number of participants and the magni-
tude of the correlation coefficient.
Model High Low ?
NonComp 0.27 0.26 0.08**
Add 0.59 0.59 0.04*
WeightAdd 0.35 0.34 0.09**
Kintsch 0.47 0.45 0.09**
Multiply 0.42 0.28 0.17**
Combined 0.38 0.28 0.19**
UpperBound 4.94 3.25 0.40**
Table 2: Model means for High and Low similarity
items and correlation coefficients with human judgments
(*: p < 0.05, **: p < 0.01)
addition (equation (11), Combined). As a baseline
we simply estimated the similarity between the ref-
erence verb and its landmarks without taking the
subject noun into account (equation (8), NonComp).
Table 2 shows the average model ratings for High
and Low similarity items. For comparison, we also
show the human ratings for these items (Upper-
Bound). Here, we are interested in relative dif-
ferences, since the two types of ratings correspond
to different scales. Model similarities have been
estimated using cosine which ranges from 0 to 1,
whereas our subjects rated the sentences on a scale
from 1 to 7.
The simple additive model fails to distinguish be-
tween High and Low Similarity items. We observe
a similar pattern for the non compositional base-
line model, the weighted additive model and Kintsch
(2001). The multiplicative and combined models
yield means closer to the human ratings. The dif-
ference between High and Low similarity values es-
timated by these models are statistically significant
(p < 0.01 using the Wilcoxon rank sum test). Fig-
ure 3 shows the distribution of estimated similarities
under the multiplicative model.
The results of our correlation analysis are also
given in Table 2. As can be seen, all models are sig-
nificantly correlated with the human ratings. In or-
der to establish which ones fit our data better, we ex-
amined whether the correlation coefficients achieved
differ significantly using a t-test (Cohen and Cohen,
1983). The lowest correlation (? = 0.04) is observed
for the simple additive model which is not signif-
icantly different from the non-compositional base-
line model. The weighted additive model (? = 0.09)
is not significantly different from the baseline either
or Kintsch (2001) (? = 0.09). Given that the basis
242
High Low
0
0.2
0.4
0.6
0.8
1
Figure 3: Distribution of predicted similarities for the
vector multiplication model on High and Low similarity
items
of Kintsch?s model is the summation of the verb, a
neighbor close to the verb and the noun, it is not
surprising that it produces results similar to a sum-
mation which weights the verb more heavily than
the noun. The multiplicative model yields a better
fit with the experimental data, ? = 0.17. The com-
bined model is best overall with ? = 0.19. However,
the difference between the two models is not statis-
tically significant. Also note that in contrast to the
combined model, the multiplicative model does not
have any free parameters and hence does not require
optimization for this particular task.
6 Discussion
In this paper we presented a general framework for
vector-based semantic composition. We formulated
composition as a function of two vectors and intro-
duced several models based on addition and multi-
plication. Despite the popularity of additive mod-
els, our experimental results showed the superior-
ity of models utilizing multiplicative combinations,
at least for the sentence similarity task attempted
here. We conjecture that the additive models are
not sensitive to the fine-grained meaning distinc-
tions involved in our materials. Previous applica-
tions of vector addition to document indexing (Deer-
wester et al, 1990) or essay grading (Landauer et al,
1997) were more concerned with modeling the gist
of a document rather than the meaning of its sen-
tences. Importantly, additive models capture com-
position by considering all vector components rep-
resenting the meaning of the verb and its subject,
whereas multiplicative models consider a subset,
namely non-zero components. The resulting vector
is sparser but expresses more succinctly the meaning
of the predicate-argument structure, and thus allows
semantic similarity to be modelled more accurately.
Further research is needed to gain a deeper un-
derstanding of vector composition, both in terms of
modeling a wider range of structures (e.g., adjective-
noun, noun-noun) and also in terms of exploring the
space of models more fully. We anticipate that more
substantial correlations can be achieved by imple-
menting more sophisticated models from within the
framework outlined here. In particular, the general
class of multiplicative models (see equation (4)) ap-
pears to be a fruitful area to explore. Future direc-
tions include constraining the number of free param-
eters in linguistically plausible ways and scaling to
larger datasets.
The applications of the framework discussed here
are many and varied both for cognitive science and
NLP. We intend to assess the potential of our com-
position models on context sensitive semantic prim-
ing (Till et al, 1988) and inductive inference (Heit
and Rubinstein, 1994). NLP tasks that could benefit
from composition models include paraphrase iden-
tification and context-dependent language modeling
(Coccaro and Jurafsky, 1998).
References
E. Briscoe, J. Carroll. 2002. Robust accurate statistical
annotation of general text. In Proceedings of the 3rd
International Conference on Language Resources and
Evaluation, 1499?1504, Las Palmas, Canary Islands.
A. Budanitsky, G. Hirst. 2001. Semantic distance in
WordNet: An experimental, application-oriented eval-
uation of five measures. In Proceedings of ACL Work-
shop on WordNet and Other Lexical Resources, Pitts-
burgh, PA.
J. Bullinaria, J. Levy. 2007. Extracting semantic rep-
resentations from word co-occurrence statistics: A
computational study. Behavior Research Methods,
39:510?526.
F. Choi, P. Wiemer-Hastings, J. Moore. 2001. Latent se-
mantic analysis for text segmentation. In Proceedings
of the Conference on Empirical Methods in Natural
Language Processing, 109?117, Pittsburgh, PA.
N. Coccaro, D. Jurafsky. 1998. Towards better integra-
tion of semantic predictors in statistical language mod-
eling. In Proceedings of the 5th International Confer-
ence on Spoken Language Processsing, Sydney, Aus-
tralia.
243
J. Cohen, P. Cohen. 1983. Applied Multiple Regres-
sion/Correlation Analysis for the Behavioral Sciences.
Hillsdale, NJ: Erlbaum.
S. C. Deerwester, S. T. Dumais, T. K. Landauer, G. W.
Furnas, R. A. Harshman. 1990. Indexing by latent
semantic analysis. Journal of the American Society of
Information Science, 41(6):391?407.
G. Denhire, B. Lemaire. 2004. A computational model
of children?s semantic memory. In Proceedings of the
26th Annual Meeting of the Cognitive Science Society,
297?302, Chicago, IL.
C. Fellbaum, ed. 1998. WordNet: An Electronic
Database. MIT Press, Cambridge, MA.
L. Finkelstein, E. Gabrilovich, Y. Matias, E. Rivlin,
Z. Solan, G. Wolfman, E. Ruppin. 2002. Placing
search in context: The concept revisited. ACM Trans-
actions on Information Systems, 20(1):116?131.
J. Fodor, Z. Pylyshyn. 1988. Connectionism and cogni-
tive architecture: A critical analysis. Cognition, 28:3?
71.
P. W. Foltz, W. Kintsch, T. K. Landauer. 1998. The
measurement of textual coherence with latent semantic
analysis. Discourse Process, 15:285?307.
S. Frank, M. Koppen, L. Noordman, W. Vonk. 2007.
World knowledge in computational models of dis-
course comprehension. Discourse Processes. In press.
G. Grefenstette. 1994. Explorations in Automatic The-
saurus Discovery. Kluwer Academic Publishers.
Z. Harris. 1968. Mathematical Structures of Language.
Wiley, New York.
E. Heit, J. Rubinstein. 1994. Similarity and property ef-
fects in inductive reasoning. Journal of Experimen-
tal Psychology: Learning, Memory, and Cognition,
20:411?422.
J. J. Jiang, D. W. Conrath. 1997. Semantic similarity
based on corpus statistics and lexical taxonomy. In
Proceedings of International Conference on Research
in Computational Linguistics, Taiwan.
W. Kintsch. 2001. Predication. Cognitive Science,
25(2):173?202.
T. K. Landauer, S. T. Dumais. 1997. A solution to Plato?s
problem: the latent semantic analysis theory of ac-
quisition, induction and representation of knowledge.
Psychological Review, 104(2):211?240.
T. K. Landauer, D. Laham, B. Rehder, M. E. Schreiner.
1997. How well can passage meaning be derived with-
out using word order: A comparison of latent semantic
analysis and humans. In Proceedings of 19th Annual
Conference of the Cognitive Science Society, 412?417,
Stanford, CA.
K. Lund, C. Burgess. 1996. Producing high-dimensional
semantic spaces from lexical co-occurrence. Be-
havior Research Methods, Instruments & Computers,
28:203?208.
D. McCarthy, R. Koeling, J. Weeds, J. Carroll. 2004.
Finding predominant senses in untagged text. In
Proceedings of the 42nd Annual Meeting of the As-
sociation for Computational Linguistics, 280?287,
Barcelona, Spain.
S. McDonald. 2000. Environmental Determinants of
Lexical Processing Effort. Ph.D. thesis, University of
Edinburgh.
R. Montague. 1974. English as a formal language. In
R. Montague, ed., Formal Philosophy. Yale University
Press, New Haven, CT.
H. Neville, J. L. Nichol, A. Barss, K. I. Forster, M. F. Gar-
rett. 1991. Syntactically based sentence prosessing
classes: evidence form event-related brain potentials.
Journal of Congitive Neuroscience, 3:151?165.
S. Pado?, M. Lapata. 2007. Dependency-based construc-
tion of semantic space models. Computational Lin-
guistics, 33(2):161?199.
T. Pedersen, S. Patwardhan, J. Michelizzi. 2004. Word-
Net::similarity - measuring the relatedness of con-
cepts. In Proceedings of the 5th Annual Meeting of the
North American Chapter of the Association for Com-
putational Linguistics, 38?41, Boston, MA.
T. A. Plate. 1991. Holographic reduced representations:
Convolution algebra for compositional distributed rep-
resentations. In Proceedings of the 12th Interna-
tional Joint Conference on Artificial Intelligence, 30?
35, Sydney, Australia.
G. Salton, A. Wong, C. S. Yang. 1975. A vector space
model for automatic indexing. Communications of the
ACM, 18(11):613?620.
P. Schone, D. Jurafsky. 2001. Is knowledge-free induc-
tion of multiword unit dictionary headwords a solved
problem? In Proceedings of the Conference on Empir-
ical Methods in Natural Language Processing, 100?
108, Pittsburgh, PA.
H. Schu?tze. 1998. Automatic word sense discrimination.
Computational Linguistics, 24(1):97?124.
P. Smolensky. 1990. Tensor product variable binding and
the representation of symbolic structures in connec-
tionist systems. Artificial Intelligence, 46:159?216.
R. E. Till, E. F. Mross, W. Kintsch. 1988. Time course of
priming for associate and inference words in discourse
context. Memory and Cognition, 16:283?299.
S. M. Weiss, C. A. Kulikowski. 1991. Computer Sys-
tems that Learn: Classification and Prediction Meth-
ods from Statistics, Neural Nets, Machine Learning,
and Expert Systems. Morgan Kaufmann, San Mateo,
CA.
R. F. West, K. E. Stanovich. 1986. Robust effects of
syntactic structure on visual word processing. Journal
of Memory and Cognition, 14:104?112.
244
Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 196?206,
Uppsala, Sweden, 11-16 July 2010. c?2010 Association for Computational Linguistics
Syntactic and Semantic Factors in Processing Difficulty:
An Integrated Measure
Jeff Mitchell, Mirella Lapata, Vera Demberg and Frank Keller
University of Edinburgh
Edinburgh, United Kingdom
jeff.mitchell@ed.ac.uk, mlap@inf.ed.ac.uk,
v.demberg@ed.ac.uk, keller@inf.ed.ac.uk
Abstract
The analysis of reading times can pro-
vide insights into the processes that under-
lie language comprehension, with longer
reading times indicating greater cognitive
load. There is evidence that the language
processor is highly predictive, such that
prior context allows upcoming linguistic
material to be anticipated. Previous work
has investigated the contributions of se-
mantic and syntactic contexts in isolation,
essentially treating them as independent
factors. In this paper we analyze reading
times in terms of a single predictive mea-
sure which integrates a model of seman-
tic composition with an incremental parser
and a language model.
1 Introduction
Psycholinguists have long realized that language
comprehension is highly incremental, with readers
and listeners continuously extracting the meaning
of utterances on a word-by-word basis. As soon
as they encounter a word in a sentence, they inte-
grate it as fully as possible into a representation
of the sentence thus far (Marslen-Wilson 1973;
Konieczny 2000; Tanenhaus et al 1995; Sturt and
Lombardo 2005). Recent research suggests that
language comprehension can also be highly pre-
dictive, i.e., comprehenders are able to anticipate
upcoming linguistic material. This is beneficial as
it gives them more time to keep up with the in-
put, and predictions can be used to compensate for
problems with noise or ambiguity.
Two types of prediction have been observed in
the literature. The first type is semantic predic-
tion, as evidenced in semantic priming: a word
that is preceded by a semantically related prime
or a semantically congruous sentence fragment is
processed faster (Stanovich and West 1981; van
Berkum et al 1999; Clifton et al 2007). Another
example is argument prediction: listeners are able
to launch eye-movements to the predicted argu-
ment of a verb before having encountered it, e.g.,
they will fixate an edible object as soon as they
hear the word eat (Altmann and Kamide 1999).
The second type of prediction is syntactic predic-
tion. Comprehenders are faster at naming words
that are syntactically compatible with prior con-
text, even when they bear no semantic relationship
to the context (Wright and Garrett 1984). Another
instance of syntactic prediction has been reported
by Staub and Clifton (2006): following the word
either, readers predict or and the complement that
follows it, and process it faster compared to a con-
trol condition without either.
Thus, human language processing takes advan-
tage of the constraints imposed by the preceding
semantic and syntactic context to derive expecta-
tions about the upcoming input. Much recent work
has focused on developing computational mea-
sures of these constraints and expectations. Again,
the literature is split into syntactic and semantic
models. Probably the best known measure of syn-
tactic expectation is surprisal (Hale 2001) which
can be coarsely defined as the negative log proba-
bility of word wt given the preceding words, typ-
ically computed using a probabilistic context-free
grammar.
Modeling work on semantic constraint focuses
on the degree to which a word is related to its
preceding context. Pynte et al (2008) use La-
tent Semantic Analysis (LSA, Landauer and Du-
mais 1997) to assess the degree of contextual con-
straint exerted on a word by its context. In this
framework, word meanings are represented as vec-
tors in a high dimensional space and distance in
this space is interpreted as an index of process-
ing difficulty. Other work (McDonald and Brew
2004) models contextual constraint in information
theoretic terms. The assumption is that words
carry prior semantic expectations which are up-
dated upon seeing the next word. Expectations are
represented by a vector of probabilities which re-
flects the likely location in semantic space of the
upcoming word.
The measures discussed above are typically
computed automatically on real-language corpora
using data-driven methods and their predictions
are verified through analysis of eye-movements
that people make while reading. Ample evidence
196
(Rayner 1998) demonstrates that eye-movements
are related to the moment-to-moment cognitive ac-
tivities of readers. They also provide an accurate
temporal record of the on-line processing of nat-
ural language, and through the analysis of eye-
movement measurements (e.g., the amount of time
spent looking at a word) can give insight into the
processing difficulty involved in reading.
In this paper, we investigate a model of predic-
tion that is incremental and takes into account syn-
tactic as well as semantic constraint. The model
essentially integrates the predictions of an incre-
mental parser (Roark 2001) together with those
of a semantic space model (Mitchell and Lap-
ata 2009). The latter creates meaning representa-
tions compositionally, and therefore builds seman-
tic expectations for word sequences (e.g., phrases,
sentences, even documents) rather than isolated
words. Some existing models of sentence process-
ing integrate semantic information into a prob-
abilistic parser (Narayanan and Jurafsky 2002;
Pado? et al 2009); however, the semantic compo-
nent of these models is limited to semantic role in-
formation, rather than attempting to build a full se-
mantic representation for a sentence. Furthermore,
the models of Narayanan and Jurafsky (2002) and
Pado? et al (2009) do not explicitly model pre-
diction, but rather focus on accounting for garden
path effects. The proposed model simultaneously
captures semantic and syntactic effects in a sin-
gle measure which we empirically show is predic-
tive of processing difficulty as manifested in eye-
movements.
2 Models of Processing Difficulty
As described in Section 1, reading times provide
an insight into the various cognitive activities that
contribute to the overall processing difficulty in-
volved in comprehending a written text. To quan-
tify and understand the overall cognitive load asso-
ciated with processing a word in context, we will
break that load down into a sum of terms repre-
senting distinct computational costs (semantic and
syntactic). For example, surprisal can be thought
of as measuring the cost of dealing with unex-
pected input. When a word conforms to the lan-
guage processor?s expectations, surprisal is low,
and the cognitive load associated with processing
that input will also be low. In contrast, unexpected
words will have a high surprisal and a high cogni-
tive cost.
However, high-level syntactic and semantic fac-
tors are only one source of cognitive costs. A siz-
able proportion of the variance in reading times is
accounted for by costs associated with low-level
features of the stimuli, e.g.. relating to orthography
and eye-movement control (Rayner 1998). In ad-
dition, there may also be costs associated with the
integration of new input into an incremental rep-
resentation. Dependency Locality Theory (DLT,
Gibson 2000) is essentially a distance-based mea-
sure of the amount of processing effort required
when the head of a phrase is integrated with its
syntactic dependents. We do not consider integra-
tion costs here (as they have not been shown to
correlate reliably with reading times; see Demberg
and Keller 2008 for details) and instead focus on
the costs associated with semantic and syntactic
constraint and low-level features, which appear to
make the most substantial contributions.
In the following subsections we describe the
various features which contribute to the process-
ing costs of a word in context. We begin by look-
ing at the low-level costs and move on to con-
sider the costs associated with syntactic and se-
mantic constraint. For readers unfamiliar with the
methodology involved in modeling eye-tracking
data, we note that regression analysis (or the more
general mixed effects models) is typically used to
study the relationship between dependent and in-
dependent variables. The independent variables
are the various costs of processing effort and
the dependent variables are measurements of eye-
movements, three of which are routinely used in
the literature: first fixation duration (the duration
of the first fixation on a word regardless of whether
it is the first fixation on a word or the first of mul-
tiple fixations on the same word), first pass dura-
tion, also known as gaze duration, (the sum of all
fixations made on a word prior to looking at an-
other word), and total reading time (the sum of
all fixations on a word including refixations after
moving on to other words).
2.1 Low-level Costs
Low-level features include word frequency (more
frequent words are read faster), word length
(shorter words are read faster), and the position
of the word in the sentence (later words are read
faster). Oculomotor variables have also been
found to influence reading times. These include
previous fixation (indicating whether or not the
previous word has been fixated), launch distance
(how many characters intervene between the cur-
rent fixation and the previous fixation), and land-
ing position (which letter in the word the fixation
landed on).
Information about the sequential context of a
word can also influence reading times. Mc-
197
Donald and Shillcock (2003) show that forward
and backward transitional probabilities are pre-
dictive of first fixation and first pass durations:
the higher the transitional probability, the shorter
the fixation time. Backward transitional prob-
ability is essentially the conditional probabil-
ity of a word given its immediately preceding
word, P(wk|wk?1). Analogously, forward proba-
bility is the conditional probability of the current
word given the next word, P(wk|wk+1).
2.2 Syntactic Constraint
As mentioned earlier, surprisal (Hale 2001; Levy
2008) is one of the best known models of process-
ing difficulty associated with syntactic constraint,
and has been previously applied to the modeling of
reading times (Demberg and Keller 2008; Ferrara
Boston et al 2008; Roark et al 2009; Frank 2009).
The basic idea is that the processing costs relating
to the expectations of the language processor can
be expressed in terms of the probabilities assigned
by some form of language model to the input.
These processing costs are assumed to arise from
the change in the expectations of the language pro-
cessor as new input arrives. If we express these ex-
pectations in terms of a distribution over all possi-
ble continuations of the input seen so far, then we
can measure the magnitude of this change in terms
of the Kullback-Leibler divergence of the old dis-
tribution to the updated distribution. This measure
of processing cost for an input word, wk+1, given
the previous context, w1 . . .wk, can be expressed
straightforwardly in terms of its conditional prob-
ability as:
S =? logP(wk+1|w1 . . .wk) (1)
That is, the processing cost for a word decreases as
its probability increases, with zero processing cost
incurred for words which must appear in a given
context, as these do not result in any change in the
expectations of the language processor.
The original formulation of surprisal (Hale
2001) used a probabilistic parser to calculate these
probabilities, as the emphasis was on the process-
ing costs incurred when parsing structurally am-
biguous garden path sentences.1 Several variants
of calculating surprisal have been developed in the
literature since using different parsing strategies
1While hearing a sentence like The horse raced past the
barn fell (Bever 1970), English speakers are inclined to in-
terpreted horse as the subject of raced expecting the sentence
to end at the word barn. So upon hearing the word fell they
are forced to revise their analysis of the sentence thus far and
adopt a reduced relative reading.
(e.g., left-to-right vs. top-down, PCFGs vs de-
pendency parsing) and different degrees of lexi-
calization (see Roark et al 2009 for an overview) .
For instance, unlexicalized surprisal can be easily
derived by substituting the words in Equation (1)
with parts of speech (Demberg and Keller 2008).
Surprisal could be also defined using a vanilla
language model that does not take any structural
or grammatical information into account (Frank
2009).
2.3 Semantic Constraint
Distributional models of meaning have been com-
monly used to quantify the semantic relation be-
tween a word and its context in computational
studies of lexical processing. These models are
based on the idea that words with similar mean-
ings will be found in similar contexts. In putting
this idea into practice, the meaning of a word is
then represented as a vector in a high dimensional
space, with the vector components relating to the
strength on occurrence of that word in various
types of context. Semantic similarities are then
modeled in terms of geometric similarities within
the space.
To give a concrete example, Latent Semantic
Analysis (LSA, Landauer and Dumais 1997) cre-
ates a meaning representation for words by con-
structing a word-document co-occurrence matrix
from a large collection of documents. Each row in
the matrix represents a word, each column a doc-
ument, and each entry the frequency with which
the word appeared within that document. Because
this matrix tends to be quite large it is often trans-
formed via a singular value decomposition (Berry
et al 1995) into three component matrices: a ma-
trix of word vectors, a matrix of document vectors,
and a diagonal matrix containing singular values.
Re-multiplying these matrices together using only
the initial portions of each (corresponding to the
use of a lower dimensional spatial representation)
produces a tractable approximation to the original
matrix. In this framework, the similarity between
two words can be easily quantified, e.g., by mea-
suring the cosine of the angle of the vectors repre-
senting them.
As LSA is one the best known semantic space
models it comes as no surprise that it has been
used to analyze semantic constraint. Pynte et al
(2008) measure the similarity between the next
word and its preceding context under the assump-
tion that high similarity indicates high semantic
constraint (i.e., the word was expected) and analo-
gously low similarity indicates low semantic con-
straint (i.e., the word was unexpected). They oper-
198
ationalize preceding contexts in two ways, either
as the word immediately preceding the next word
as the sentence fragment preceding it. Sentence
fragments are represented as the average of the
words they contain independently of their order.
The model takes into account only content words,
function words are of little interest here as they can
be found in any context.
Pynte et al (2008) analyze reading times on the
French part of the Dundee corpus (Kennedy and
Pynte 2005) and find that word-level LSA similar-
ities are predictive of first fixation and first pass
durations, whereas sentence-level LSA is only
predictive of first pass duration (i.e., for a mea-
sure that includes refixation). This latter finding
is somewhat counterintuitive, one would expect
longer contexts to have an immediate effect as
they are presumably more constraining. One rea-
son why sentence-level influences are only visible
on first pass duration may be due to LSA itself,
which is syntax-blind. Another reason relates to
the way sentential context was modeled as vec-
tor addition (or averaging). The idea of averag-
ing is not very attractive from a linguistic perspec-
tive as it blends the meanings of individual words
together. Ideally, the combination of simple el-
ements onto more complex ones must allow the
construction of novel meanings which go beyond
those of the individual elements (Pinker 1994).
The only other model of semantic constraint we
are aware of is Incremental Contextual Distinc-
tiveness (ICD, McDonald 2000; McDonald and
Brew 2004). ICD assumes that words carry prior
semantic expectations which are updated upon
seeing the next word. Context is represented by
a vector of probabilities which reflects the likely
location in semantic space of the upcoming word.
When the latter is observed, the prior expecta-
tion is updated using a Bayesian inference mecha-
nism to reflect the newly arrived information. Like
LSA, ICD is based on word co-occurrence vectors,
however it does not employ singular value decom-
position, and constructs a word-word rather than a
word-document co-occurrence matrix. Although
this model has been shown to successfully simu-
late single- and multiple-word priming (McDon-
ald and Brew 2004), it failed to predict processing
costs in the Embra eye-tracking corpus (McDon-
ald and Shillcock 2003).
In this work we model semantic constraint us-
ing the representational framework put forward in
Mitchell and Lapata (2008). Their aim is not so
much to model processing difficulty, but to con-
struct vector-based meaning representations that
go beyond individual words. They introduce a
general framework for studying vector composi-
tion, which they formulate as a function f of two
vectors u and v:
h = f (u,v) (2)
where h denotes the composition of u and v. Dif-
ferent composition models arise, depending on
how f is chosen. Assuming that h is a linear func-
tion of the Cartesian product of u and v allows to
specify additive models which are by far the most
common method of vector combination in the lit-
erature:
hi = ui + vi (3)
Alternatively, we can assume that h is a linear
function of the tensor product of u and v, and thus
derive models based on multiplication:
hi = ui ? vi (4)
Mitchell and Lapata (2008) show that several ad-
ditive and multiplicative models can be formu-
lated under this framework, including the well-
known tensor products (Smolensky 1990) and cir-
cular convolution (Plate 1995). Importantly, com-
position models are not defined with a specific se-
mantic space in mind, they could easily be adapted
to LSA, or simple co-occurrence vectors, or more
sophisticated semantic representations (e.g., Grif-
fiths et al 2007), although admittedly some com-
position functions may be better suited for partic-
ular semantic spaces.
Composition models can be straightforwardly
used as predictors of processing difficulty, again
via measuring the cosine of the angle between a
vector w representing the upcoming word and a
vector h representing the words preceding it:
sim(w,h) =
w ?h
|w||h|
(5)
where h is created compositionally, via some (ad-
ditive or multiplicative) function f .
In this paper we evaluate additive and compo-
sitional models in their ability to capture seman-
tic prediction. We also examine the influence of
the underlying meaning representations by com-
paring a simple semantic space similar to Mc-
Donald (2000) against Latent Dirichlet Allocation
(Blei et al 2003; Griffiths et al 2007). Specif-
ically, the simpler space is based on word co-
occurrence counts; it constructs the vector repre-
senting a given target word, t, by identifying all the
tokens of t in a corpus and recording the counts of
context words, ci (within a specific window). The
context words, ci, are limited to a set of the n most
199
common content words and each vector compo-
nent is given by the ratio of the probability of a ci
given t to the overall probability of ci.
vi =
p(ci|t)
p(ci)
(6)
Despite its simplicity, the above semantic space
(and variants thereof) has been used to success-
fully simulate lexical priming (e.g., McDonald
2000), human judgments of semantic similarity
(Bullinaria and Levy 2007), and synonymy tests
(Pado? and Lapata 2007) such as those included in
the Test of English as Foreign Language (TOEFL).
LDA is a probabilistic topic model offering an
alternative to spatial semantic representations. It
is similar in spirit to LSA, it also operates on a
word-document co-occurrence matrix and derives
a reduced dimensionality description of words and
documents. Whereas in LSA words are repre-
sented as points in a multi-dimensional space,
LDA represents words using topics. Specifically,
each document in a corpus is modeled as a distri-
bution over K topics, which are themselves char-
acterized as distribution over words. The individ-
ual words in a document are generated by repeat-
edly sampling a topic according to the topic distri-
bution and then sampling a single word from the
chosen topic. Under this framework, word mean-
ing is represented as a probability distribution over
a set of latent topics, essentially a vector whose
dimensions correspond to topics and values to the
probability of the word given these topics. Topic
models have been recently gaining ground as a
more structured representation of word meaning
(Griffiths et al 2007; Steyvers and Griffiths 2007).
In contrast to more standard semantic space mod-
els where word senses are conflated into a single
representation, topics have an intuitive correspon-
dence to coarse-grained sense distinctions.
3 Integrating Semantic Constraint into
Surprisal
The treatment of semantic and syntactic constraint
in models of processing difficulty has been some-
what inconsistent. While surprisal is a theo-
retically well-motivated measure, formalizing the
idea of linguistic processing being highly predic-
tive in terms of probabilistic language models, the
measurement of semantic constraint in terms of
vector similarities lacks a clear motivation. More-
over, the two approaches, surprisal and similarity,
produce mathematically different types of mea-
sures. Formally, it would be preferable to have
a single approach to capturing constraint and the
obvious solution is to derive some form of seman-
tic surprisal rather than sticking with similarity.
This can be achieved by turning a vector model
of semantic similarity into a probabilistic language
model.
There are in fact a number of approaches to de-
riving language models from distributional mod-
els of semantics (e.g., Bellegarda 2000; Coccaro
and Jurafsky 1998; Gildea and Hofmann 1999).
We focus here on the model of Mitchell and La-
pata (2009) which tackles the issue of the compo-
sition of semantic vectors and also integrates the
output of an incremental parser. The core of their
model is based on the product of a trigram model
p(wn|w
n?1
n?2) and a semantic component ?(wn,h)
which determines the factor by which this proba-
bility should be scaled up or down given the prior
semantic context h:
p(wn) = p(wn|w
n?1
n?2) ??(wn,h) (7)
The factor ?(wn,h) is essentially based on a com-
parison between the vector representing the cur-
rent word wn and the vector representing the prior
history h. Varying the method for constructing
word vectors (e.g., using LDA or a simpler seman-
tic space model) and for combining them into a
representation of the prior context h (e.g., using
additive or multiplicative functions) produces dis-
tinct models of semantic composition.
The calculation of ? is then based on a weighted
dot product of the vector representing the upcom-
ing word w, with the vector representing the prior
context h:
?(w,h) =?
i
wihi p(ci) (8)
As shown in Equation (7) this semantic factor then
modulates the trigram probabilities, to take ac-
count of the effect of the semantic content outside
the n-gram window.
Mitchell and Lapata (2009) show that a com-
bined semantic-trigram language model derived
from this approach and trained on the Wall Street
Journal outperforms a baseline trigram model in
terms of perplexity on a held out set. They also
linearly interpolate this semantic language model
with the output of an incremental parser, which
computes the following probability:
p(w|h) = ?p1(w|h)+(1??)p2(w|h) (9)
where p1(w|h) is computed as in Equation (7)
and p2(w|h) is computed by the parser. Their im-
plementation uses Roark?s (2001) top-down incre-
mental parser which estimates the probability of
200
the next word based upon the previous words of
the sentence. These prefix probabilities are calcu-
lated from a grammar, by considering the likeli-
hood of seeing the next word given the possible
grammatical relations representing the prior con-
text.
Equation (9) essentially defines a language
model which combines semantic, syntactic and
n-gram structure, and Mitchell and Lapata (2009)
demonstrate that it improves further upon a se-
mantic language model in terms of perplexity. We
argue that the probabilities from this model give
us a means to model the incrementally and predic-
tivity of the language processor in a manner that
integrates both syntactic and semantic constraints.
Converting these probabilities to surprisal should
result in a single measure of the processing cost as-
sociated with semantic and syntactic expectations.
4 Method
Data The models discussed in the previous sec-
tion were evaluated against an eye-tracking cor-
pus. Specifically, we used the English portion
of the Dundee Corpus (Kennedy and Pynte 2005)
which contains 20 texts taken from The Indepen-
dent newspaper. The corpus consists of 51,502
tokens and 9,776 types in total. It is annotated
with the eye-movement records of 10 English na-
tive speakers, who each read the whole corpus.
The eye-tracking data was preprocessed following
the methodology described in Demberg and Keller
(2008). From this data, we computed total reading
time for each word in the corpus. Our statistical
analyses were based on actual reading times, and
so we only included words that were not skipped.
We also excluded words for which the previous
word had been skipped, and words on which the
normal left-to-right movement of gaze had been
interrupted, i.e., by blinks, regressions, etc. Fi-
nally, because our focus is the influence of seman-
tic context, we selected only content words whose
prior sentential context contained at least two fur-
ther content words. The resulting data set con-
sisted of 53,704 data points, which is about 10%
of the theoretically possible total.2
2The total of all words read by all subjects is 515,020.
The pre-processing recommended by Demberg and Keller?s
(2008) results in a data sets containing 436,000 data points.
Removing non-content words leaves 205,922 data points. It
only makes sense to consider words that were actually fixated
(the eye-tracking measures used are not defined on skipped
words), which leaves 162,129 data points. Following Pynte
et al (2008), we require that the previous word was fixated,
with 70,051 data points remaining. We exclude words on
which the normal left to right movement of gaze had been
interrupted, e.g., by blinks and regressions, which results in
the final total to 53,704 data points.
Model Implementation All elements of our
model were trained on the BLLIP corpus, a col-
lection of texts from the Wall Street Journal
(years 1987?89). The training corpus consisted of
38,521,346 words. We used a development cor-
pus of 50,006 words and a test corpus of similar
size. All words were converted to lowercase and
numbers were replaced with the symbol ?num?. A
vocabulary of 20,000 words was chosen and the
remaining tokens were replaced with ?unk?.
Following Mitchell and Lapata (2009), we con-
structed a simple semantic space based on co-
occurrence statistics from the BLLIP training set.
We used the 2,000 most frequent word types as
contexts and a symmetric five word window. Vec-
tor components were defined as in Equation (6).
We also trained the LDA model on BLLIP, using
the Gibb?s sampling procedure discussed in Grif-
fiths et al (2007). We experimented with different
numbers of topics on the development set (from 10
to 1,000) and report results on the test set with 100
topics. In our experiments, the hyperparameter ?
was initialized to .5, and the ? word probabilities
were initialized randomly.
We integrated our compositional models with a
trigram model which we also trained on BLLIP.
The model was built using the SRILM toolkit
(Stolcke 2002) with backoff and Kneser-Ney
smoothing. As our incremental parser we used
Roark?s (2001) parser trained on sections 2?21 of
the Penn Treebank containing 936,017 words. The
parser produces prefix probabilities for each word
of a sentence which we converted to conditional
probabilities by dividing each current probability
by the previous one.
Statistical Analysis The statistical analyses in
this paper were carried out using linear mixed
effects models (LME, Pinheiro and Bates 2000).
The latter can be thought of as generalization of
linear regression that allows the inclusion of ran-
dom factors (such as participants or items) as well
as fixed factors (e.g., word frequency). In our
analyses, we treat participant as a random factor,
which means that our models contain an intercept
term for each participant, representing the individ-
ual differences in the rates at which they read.3
We evaluated the effect of adding a factor to a
model by comparing the likelihoods of the mod-
els with and without that factor. If a ?2 test on the
3Other random factors that are appropriate for our anal-
yses are word and sentence; however, due to the large num-
ber of instances for these factors (given that the Dundee cor-
pus contains 51,502 tokens), we were not able to include
them: the model fitting algorithm we used (implemented in
the R package lme4) does not converge for such large models.
201
Factor Coefficient
Intercept ?.011
Word Length .264
Launch Distance .109
Landing Position .612
Word Frequency ?.010
Reading Time of Last Word .151
Table 1: Coefficients of the baseline LME model
for total reading time
likelihood ratio is significant, then this indicates
that the new factor significantly improves model
fit. We also experimented with adding random
slopes for participant to the model (in addition to
the random intercept); however, this either led to
non-convergence of the model fitting procedure, or
failed to result in an increase in model fit accord-
ing to the likelihood ratio test. Therefore, all mod-
els reported in the rest of this paper contain ran-
dom intercept of participants as the sole random
factor.
Rather than model raw reading times, we model
times on the log scale. This is desirable for a
number of reasons. Firstly, the raw reading times
tend to have a skew distribution and taking logs
produces something closer to normal, which is
preferable for modeling. Secondly, the regres-
sion equation makes more sense on the log scale
as the contribution of each term to raw reading
time is multiplicative rather than additive. That is,
log(t) = ?i?ixi implies t = ?i e
?ixi . In particular,
the intercept term for each participant now repre-
sents a multiplicative factor by which that partici-
pant is slower or faster.
5 Results
We computed separate mixed effects models for
three dependent variables, namely first fixation du-
ration, first pass duration, and total reading time.
We report results for total times throughout, as
the results of the other two dependent variables
are broadly similar. Our strategy was to first con-
struct a baseline model of low-level factors influ-
encing reading time, and then to take the resid-
uals from that model as the dependent variable
in subsequent analyses. In this way we removed
the effects of low-level factors before investigating
the factors associated with syntactic and semantic
constraint. This avoids problems with collinear-
ity between low-level factors and the factors we
are interested in (e.g., trigram probability is highly
correlated with word frequency). The baseline
model contained the factors word length, word fre-
Model Composition Coefficient
SSS
Additive ?.03820???
Multiplicative ?.00895???
LDA
Additive ?.02500???
Multiplicative ?.00262???
Table 2: Coefficients of LME models including
simple semantic space (SSS) or Latent Dirichlet
Allocation (LDA) as factors; ???p < .001
quency, launch distance, landing position, and the
reading time for the last fixated word, and its pa-
rameter estimates are given in Table 1. To further
reduce collinearity, we also centered all fixed fac-
tors, both in the baseline model, and in the models
fitted on the residuals that we report in the follow-
ing. Note that some intercorrelations remain be-
tween the factors, which we will discuss at the end
of Section 5.
Before investigating whether an integrated
model of semantic and syntactic constraint im-
proves the goodness of fit over the baseline, we ex-
amined the influence of semantic constraint alone.
This was necessary as compositional models have
not been previously used to model processing
difficulty. Besides, replicating Pynte et al?s
(2008) finding, we were also interested in assess-
ing whether the underlying semantic representa-
tion (simple semantic space or LDA) and com-
position function (additive versus multiplicative)
modulate reading times differentially.
We built an LME model that predicted the resid-
ual reading times of the baseline model using the
similarity scores from our composition models as
factors. We then carried out a ?2 test on the like-
lihood ratio of a model only containing the ran-
dom factor and the intercept, and a model also
containing the semantic factor (cosine similarity).
The addition of the semantic factor significantly
improves model fit for both the simple semantic
space and LDA. This result is observed for both
additive and multiplicative composition functions.
Our results are summarized in Table 2 which re-
ports the coefficients of the four LME models fit-
ted against the residuals of the baseline model, to-
gether with the p-values of the ?2 test.
Before evaluating our integrated surprisal mea-
sure, we evaluated its components individually in
order to tease their contributions apart. For ex-
ample, it may be the case that syntactic surprisal
is an overwhelmingly better predictor of reading
time than semantic surprisal, however we would
not be able to detect this by simply adding a factor
based on Equation (9) to the baseline model. The
202
Factor SSS Coef LDA Coef
? log(p) .00760??? .00760???
A
dd
? log(?) .03810??? .00622???
log(?+(1??) p2p1 ) .00953
??? .00943???
M
ul
t ? log(?) .01110??? ?.00033
log(?+(1??) p2p1 ) .00882
??? .00133
Table 3: Coefficients of nested LME models with
the components of SSS or LDA surprisal as fac-
tors; only the coefficient of the additional factor at
each step are shown
integrated surprisal measure can be written as:
S =? log(?p1 +(1??)p2) (10)
Where p2 is the incremental parser probability and
p1 is the product of the semantic component, ?,
and the trigram probability, p. This can be broken
down into the sum of two terms:
S =? log(p1)? log(?+(1??)
p2
p1
) (11)
Since the first term, ? log(p1) is itself a product it
can also be broken down further:
S =? log(p)? log(?)? log(?+(1??)
p2
p1
) (12)
Thus, to evaluate the contribution of the three
components to the integrated surprisal measure we
fitted nested LME models, i.e., we entered these
terms one at a time into a mixed effects model
and tested the significance of the improvement in
model fit for each additional term.
We again start with an LME model that only
contains the random factor and the intercept, with
the residuals of the baseline models as the depen-
dent variable. Considering the trigram model first,
we find that adding this factor to the model gives a
significant improvement in fit. Also adding the se-
mantic component (? log(?)) improves fit further,
both for additive and multiplicative composition
functions using a simple semantic space. Finally,
the addition of the parser probabilities (log(?+
(1??) p2p1 )) again improves model fit significantly.
As far as LDA is concerned, the additive model
significantly improves model fit, whereas the mul-
tiplicative one does not. These results mirror
the findings of Mitchell and Lapata (2009), who
report that a multiplicative composition function
produced the lowest perplexity for the simple se-
mantic space model, whereas an additive function
gave the best perplexity for the LDA space. Ta-
ble 3 lists the coefficients for the nested models for
Model Composition Coefficient
SSS
Additive .00804???
Multiplicative .00819???
LDA
Additive .00817???
Multiplicative .00640???
Table 4: Coefficients of LME models with inte-
grated surprisal measure (based on SSS or LDA)
as factor
all four variants of our semantic constraint mea-
sure.
Finally, we built a separate LME model where
we added the integrated surprisal measure (see
Equation (9)) to the model only containing the ran-
dom factor and the intercept (see Table 4). We
did this separately for all four versions of the in-
tegrated surprisal measure (SSS, LDA; additive,
multiplicative). We find that model fit improved
significantly all versions of integrated surprisal.
One technical issue that remains to be discussed
is collinearity, i.e., intercorrelations between the
factors in a model. The presence of collinearity
is problematic, as it can render the model fitting
procedure unstable; it can also affect the signifi-
cance of individual factors. As mentioned in Sec-
tion 4 we used two techniques to reduce collinear-
ity: residualizing and centering. Table 5 gives
an overview of the correlation coefficients for all
pairs of factors. It becomes clear that collinear-
ity has mostly been removed; there is a remaining
relationship between word length and word fre-
quency, which is expected as shorter words tend to
be more frequent. This correlation is not a prob-
lem for our analysis, as it is confined to the base-
line model. Furthermore, word frequency and tri-
gram probability are highly correlated. Again this
is expected, given that the frequencies of unigrams
and higher-level n-grams tend to be related. This
correlation is taken care of by residualizing, which
isolates the two factors: word frequency is part
of the baseline model, while trigram probability is
part of the separate models that we fit on the resid-
uals. All other correlations are small (with coeffi-
cients of .27 or less), with one exception: there is
a high correlation between the ? log(?) term and
the log(?+ (1? ?) p2p1 ) term in the multiplicative
LDA model. This collinearity issue may explain
the absence of a significant improvement in model
fit when these two terms are added to the baseline
(see Table 3).
203
Factor Len Freq ?l(p)?l(?)
Frequency ?.310
? log(p) .230?.700
S
S
S
A
dd
? log(?) .016?.120 .025
log(?+(1??) p2p1 ) .024 .036?.270 .065
S
S
S
M
ul
t ? log(?) ?.015?.110 .035
log(?+(1??) p2p1 ) .020 .028?.260 .160
L
D
A
A
dd
? log(?) ?.024?.130 .046
log(?+(1??) p2p1 ) .005 .014?.250 .030
L
D
A
M
ul
t ? log(?) ?.120 .006?.046
log(?+(1??) p2p1 )?.089?.005?.180 .740
Table 5: Intercorrelations between model factors
6 Discussion
In this paper we investigated the contributions of
syntactic and semantic constraint in modeling pro-
cessing difficulty. Our work departs from previ-
ous approaches in that we propose a single mea-
sure which integrates syntactic and semantic fac-
tors. Evaluation on an eye-tracking corpus shows
that our measure predicts reading time better than
a baseline model that captures low-level factors
in reading (word length, landing position, etc.).
Crucially, we were able to show that the semantic
component of our measure improves reading time
predictions over and above a model that includes
syntactic measures (based on a trigram model and
incremental parser). This means that semantic
costs are a significant predictor of reading time in
addition to the well-known syntactic surprisal.
An open issue is whether a single, integrated
measure (as evaluated in Table 4) fits the eye-
movement data significantly better than separate
measures for trigram, syntactic, and semantic sur-
prisal (as evaluated in Table 3. However, we are
not able to investigate this hypothesis: our ap-
proach to testing the significance of factors re-
quires nested models; the log-likelihood test (see
Section 4) is only able to establish whether adding
a factor to a model improves its fit; it cannot com-
pare models with disjunct sets of factors (such as
a model containing the integrated surprisal mea-
sure and one containing the three separate ones).
However, we would argue that a single, integrated
measure that captures human predictive process-
ing is preferable over a collection of separate mea-
sures. It is conceptually simpler (as it is more par-
simonious), and is also easier to use in applica-
tions (such as readability prediction). Finally, an
integrated measure requires less parameters; our
definition of surprisal in 12 is simply the sum of
the trigram, syntactic, and semantic components.
An LME model containing separate factors, on the
other hand, requires a coefficient for each of them,
and thus has more parameters.
In evaluating our model, we adopted a broad
coverage approach using the reading time data
from a naturalistic corpus rather than artificially
constructed experimental materials. In doing so,
we were able to compare different syntactic and
semantic costs on the same footing. Previous
analyses of semantic constraint have been con-
ducted on different eye-tracking corpora (Dundee
and Embra Corpus) and on different languages
(English, French). Moreover, comparisons of the
individual contributions of syntactic and semantic
factors were generally absent from the literature.
Our analysis showed that both of these factors can
be captured by our integrated surprisal measure
which is uniformly probabilistic and thus prefer-
able to modeling semantic and syntactic costs dis-
jointly using a mixture of probabilistic and non-
probabilistic measures.
An interesting question is which aspects of se-
mantics our model is able to capture, i.e., why
does the combination of LSA or LDA representa-
tions with an incremental parser yield a better fit of
the behavioral data. In the psycholinguistic liter-
ature, various types of semantic information have
been investigated: lexical semantics (word senses,
selectional restrictions, thematic roles), senten-
tial semantics (scope, binding), and discourse se-
mantics (coreference and coherence); see Keller
(2010) of a detailed discussion. We conjecture that
our model is mainly capturing lexical semantics
(through the vector space representation of words)
and sentential semantics (through the multiplica-
tion or addition of words). However, discourse
coreference effects (such as the ones reported by
Altmann and Steedman (1988) and much subse-
quent work) are probably not amenable to a treat-
ment in terms of vector space semantics; an ex-
plicit representation of discourse entities and co-
reference relations is required (see Dubey 2010
for a model of human sentence processing that can
handle coreference).
A key objective for future work will be to in-
vestigate models that integrate semantic constraint
with syntactic predictions more tightly. For ex-
ample, we could envisage a parser that uses se-
mantic representations to guide its search, e.g., by
pruning syntactic analyses that have a low seman-
tic probability. At the same time, the semantic
model should have access to syntactic informa-
tion, i.e., the composition of word representations
should take their syntactic relationships into ac-
count, rather than just linear order.
204
References
ACL. 2010. Proceedings of the 48th Annual Meet-
ing of the Association for Computational Lin-
guistics. Uppsala.
Altmann, Gerry T. M. and Yuki Kamide. 1999.
Incremental interpretation at verbs: Restricting
the domain of subsequent reference. Cognition
73:247?264.
Altmann, Gerry T. M. and Mark J. Steedman.
1988. Interaction with context during human
sentence processing. Cognition 30(3):191?238.
Bellegarda, Jerome R. 2000. Exploiting latent se-
mantic information in statistical language mod-
eling. Proceedings of the IEEE 88(8):1279?
1296.
Berry, Michael W., Susan T. Dumais, and
Gavin W. O?Brien. 1995. Using linear algebra
for intelligent information retrieval. SIAM re-
view 37(4):573?595.
Bever, Thomas G. 1970. The cognitive basis for
linguistic strutures. In J. R. Hayes, editor, Cog-
nition and the Development of Language, Wi-
ley, New York, pages 279?362.
Blei, David M., Andrew Y. Ng, and Michael I. Jor-
dan. 2003. Latent Dirichlet alocation. Journal
of Machine Learning Research 3:993?1022.
Bullinaria, John A. and Joseph P. Levy. 2007. Ex-
tracting semantic representations from word co-
occurrence statistics: A computational study.
Behavior Research Methods 39:510?526.
Clifton, Charles, Adrian Staub, and Keith Rayner.
2007. Eye movement in reading words and sen-
tences. In R V Gompel, M Fisher, W Murray,
and R L Hill, editors, Eye Movements: A Win-
dow in Mind and Brain, Elsevier, pages 341?
372.
Coccaro, Noah and Daniel Jurafsky. 1998. To-
wards better integration of semantic predictors
in satistical language modeling. In Proceedings
of the 5th International Conference on Spoken
Language Processing. Sydney, Australia, pages
2403?2406.
Demberg, Vera and Frank Keller. 2008. Data from
eye-tracking corpora as evidence for theories
of syntactic processing complexity. Cognition
101(2):193?210.
Dubey, Amit. 2010. The influence of discourse on
syntax: A psycholinguistic model of sentence
processing. In ACL.
Ferrara Boston, Marisa, John Hale, Reinhold
Kliegl, Umesh Patil, and Shravan Vasishth.
2008. Parsing costs as predictors of reading dif-
ficulty: An evaluation using the Potsdam Sen-
tence Corpus. Journal of Eye Movement Re-
search 2(1):1?12.
Frank, Stefan L. 2009. Surprisal-based compar-
ison between a symbolic and a connectionist
model of sentence processing. In Proceedings
of the 31st Annual Conference of the Cognitive
Science Society. Austin, TX, pages 139?1144.
Gibson, Edward. 2000. Dependency locality the-
ory: A distance-dased theory of linguistic com-
plexity. In Alec Marantz, Yasushi Miyashita,
and Wayne O?Neil, editors, Image, Language,
Brain: Papers from the First Mind Articulation
Project Symposium, MIT Press, Cambridge,
MA, pages 95?126.
Gildea, Daniel and Thomas Hofmann. 1999.
Topic-based language models using EM. In
Proceedings of the 6th European Conference
on Speech Communiation and Technology. Bu-
dapest, Hungary, pages 2167?2170.
Griffiths, Thomas L., Mark Steyvers, and
Joshua B. Tenenbaum. 2007. Topics in se-
mantic representation. Psychological Review
114(2):211?244.
Hale, John. 2001. A probabilistic Earley parser as
a psycholinguistic model. In Proceedings of the
2nd Conference of the North American Chap-
ter of the Association. Association for Compu-
tational Linguistics, Pittsburgh, PA, volume 2,
pages 159?166.
Keller, Frank. 2010. Cognitively plausible models
of human language processing. In ACL.
Kennedy, Alan and Joel Pynte. 2005. Parafoveal-
on-foveal effects in normal reading. Vision Re-
search 45:153?168.
Konieczny, Lars. 2000. Locality and parsing com-
plexity. Journal of Psycholinguistic Research
29(6):627?645.
Landauer, Thomas K. and Susan T. Dumais. 1997.
A solution to Plato?s problem: the latent seman-
tic analysis theory of acquisition, induction and
representation of knowledge. Psychological Re-
view 104(2):211?240.
Levy, Roger. 2008. Expectation-based syntactic
comprehension. Cognition 106(3):1126?1177.
Marslen-Wilson, William D. 1973. Linguistic
structure and speech shadowing at very short la-
tencies. Nature 244:522?523.
McDonald, Scott. 2000. Environmental Determi-
nants of Lexical Processing Effort. Ph.D. thesis,
University of Edinburgh.
205
McDonald, Scott and Chris Brew. 2004. A dis-
tributional model of semantic context effects in
lexical processing. In Proceedings of the 42th
Annual Meeting of the Association for Com-
putational Linguistics. Barcelona, Spain, pages
17?24.
McDonald, Scott A. and Richard C. Shillcock.
2003. Low-level predictive inference in read-
ing: The influence of transitional probabilities
on eye movements. Vision Research 43:1735?
1751.
Mitchell, Jeff and Mirella Lapata. 2008. Vector-
based models of semantic composition. In Pro-
ceedings of ACL-08: HLT . Columbus, OH,
pages 236?244.
Mitchell, Jeff and Mirella Lapata. 2009. Language
models based on semantic composition. In Pro-
ceedings of the 2009 Conference on Empirical
Methods in Natural Language Processing. Sin-
gapore, pages 430?439.
Narayanan, Srini and Daniel Jurafsky. 2002. A
Bayesian model predicts human parse prefer-
ence and reading time in sentence processing. In
Thomas G. Dietterich, Sue Becker, and Zoubin
Ghahramani, editors, Advances in Neural In-
formation Processing Systems 14. MIT Press,
Cambridge, MA, pages 59?65.
Pado?, Sebastian and Mirella Lapata. 2007.
Dependency-based construction of semantic
space models. Computational Linguistics
33(2):161?199.
Pado?, Ulrike, Matthew W. Crocker, and Frank
Keller. 2009. A probabilistic model of semantic
plausibility in sentence processing. Cognitive
Science 33(5):794?838.
Pinheiro, Jose C. and Douglas M. Bates.
2000. Mixed-effects Models in S and S-PLUS.
Springer, New York.
Pinker, Steven. 1994. The Language Instinct: How
the Mind Creates Language. HarperCollins,
New York.
Plate, Tony A. 1995. Holographic reduced repre-
sentations. IEEE Transactions on Neural Net-
works 6(3):623?641.
Pynte, Joel, Boris New, and Alan Kennedy. 2008.
On-line contextual influences during reading
normal text: A multiple-regression analysis. Vi-
sion Research 48:2172?2183.
Rayner, Keith. 1998. Eye movements in read-
ing and information processing: 20 years of re-
search. Psychological Bulletin 124(3):372?422.
Roark, Brian. 2001. Probabilistic top-down pars-
ing and language modeling. Computational
Linguistics 27(2):249?276.
Roark, Brian, Asaf Bachrach, Carlos Cardenas,
and Christophe Pallier. 2009. Deriving lex-
ical and syntactic expectation-based measures
for psycholinguistic modeling via incremental
top-down parsing. In Proceedings of the 2009
Conference on Empirical Methods in Natural
Language Processing. Association for Compu-
tational Linguistics, Singapore, pages 324?333.
Smolensky, Paul. 1990. Tensor product vari-
able binding and the representation of symbolic
structures in connectionist systems. Artificial
Intelligence 46:159?216.
Stanovich, Kieth E. and Richard F. West. 1981.
The effect of sentence context on ongoing word
recognition: Tests of a two-pricess theory. Jour-
nal of Experimental Psychology: Human Per-
ception and Performance 7:658?672.
Staub, Adrian and Charles Clifton. 2006. Syntac-
tic prediction in language comprehension: Evi-
dence from either . . .or. Journal of Experimen-
tal Psychology: Learning, Memory, and Cogni-
tion 32:425?436.
Steyvers, Mark and Tom Griffiths. 2007. Proba-
bilistic topic models. In T. Landauer, D. Mc-
Namara, S Dennis, and W Kintsch, editors, A
Handbook of Latent Semantic Analysis, Psy-
chology Press.
Stolcke, Andreas. 2002. Srilm - an extensible lan-
guage modeling toolkit. In Proceedings of the
Internatinal Conference on Spoken Language
Processing. Denver, Colorado.
Sturt, Patrick and Vincenzo Lombardo. 2005.
Processing coordinated structures: Incremen-
tality and connectedness. Cognitive Science
29(2):291?305.
Tanenhaus, Michael K., Michael J. Spivey-
Knowlton, Kathleen M. Eberhard, and Julie C.
Sedivy. 1995. Integration of visual and linguis-
tic information in spoken language comprehen-
sion. Science 268:1632?1634.
van Berkum, Jos J. A., Colin M. Brown, and Peter
Hagoort. 1999. Early referential context effects
in sentence processing: Evidence from event-
related brain potentials. Journal of Memory and
Language 41:147?182.
Wright, Barton and Merrill F. Garrett. 1984. Lex-
ical decision in sentences: Effects of syntactic
structure. Memory and Cognition 12:31?45.
206
