c? 2003 Association for Computational Linguistics
Automatic Association of Web Directories
with Word Senses
Celina Santamar??a? Julio Gonzalo? Felisa Verdejo?
UNED, Madrid UNED, Madrid UNED, Madrid
We describe an algorithm that combines lexical information (from WordNet 1.7) with Web di-
rectories (from the Open Directory Project) to associate word senses with such directories. Such
associations can be used as rich characterizations to acquire sense-tagged corpora automatically,
cluster topically related senses, and detect sense specializations. The algorithm is evaluated for
the 29 nouns (147 senses) used in the Senseval 2 competition, obtaining 148 (word sense, Web
directory) associations covering 88% of the domain-specific word senses in the test data with 86%
accuracy. The richness of Web directories as sense characterizations is evaluated in a supervised
word sense disambiguation task using the Senseval 2 test suite. The results indicate that, when
the directory/word sense association is correct, the samples automatically acquired from the Web
directories are nearly as valid for training as the original Senseval 2 training instances. The re-
sults support our hypothesis that Web directories are a rich source of lexical information: cleaner,
more reliable, and more structured than the full Web as a corpus.
1. Introduction
Combining the size and diversity of the textual material on the World Wide Web
with the power and efficiency of current search engines is an attractive possibility for
acquiring lexical information and corpora. A widespread example is spell-checking:
Many Web users routinely use search engines to assess which is the ?correct? (i.e. with
more hits in the Web) spelling of words. Among NLP researchers, Web search engines
have already been used as a point of departure for extraction of parallel corpora,
automatic acquisition of sense-tagged corpora, and extraction of lexical information.
Extraction of parallel corpora. In Resnik (1999), Nie, Simard, and Foster (2001),
Ma and Liberman (1999), and Resnik and Smith (2002), the Web is harvested in search
of pages that are available in two languages, with the aim of building parallel corpora
for any pair of target languages. This is a very promising technique, as many machine
translation (MT) and cross-language information retrieval (CLIR) strategies rely on
the existence of parallel corpora, which are still a scarce resource. Such Web-mined
parallel corpora have proved to be useful, for instance, in the context of the CLEF
(Cross-Language Evaluation Forum) CLIR competition, in which many participants
use such parallel corpora (provided by the University of Montreal) to improve the
performance of their systems (Peters et al 2002).
Automatic acquisition of sense-tagged corpora. The description of a word sense
can be used to build rich queries in such a way that the occurrences of the word in
the documents retrieved are, with some probability, associated with the desired sense.
If the probability is high enough, it is then possible to acquire sense-tagged corpora
? ETS Ingenier??a Informa?tica de la UNED, c/ Juan del Rosal, 16, Ciudad Universitaria, 28040 Madrid,
Spain. E-mail: {celina,julio,felisa}@lsi.uned.es
486
Computational Linguistics Volume 29, Number 3
in a fully automatic fashion. Again, this is an exciting possibility that would solve the
current bottleneck of supervised word sense disambiguation (WSD) methods (namely,
that sense-tagged corpora are very costly to acquire).
One example of this kind of technique is Mihalcea and Moldovan (1999), in which
a precision of 91% is reported over a set of 20 words with 120 senses. In spite of the
high accuracy obtained, such methodology did not perform well in the comparative
evaluation reported in Agirre and Mart??nez (2000), perhaps indicating that examples
obtained from the Web may have topical biases (depending on the word), and that
further refinement is required. For instance, a technique that behaves well with a small
set of words might fail in the common cases in which a new sense is predominant
on the Web (e.g., oasis or nirvana as music groups, tiger as a golfer, jaguar as a car
brand).
Extraction of lexical information. In Agirre et al (2000), search engines and the
Web are used to assign Web documents to WordNet concepts. The resulting sets of
documents are then processed to build topic signatures, that is, sets of words with
weights that enrich the description of a concept. In Grefenstette (1999), the number of
hits in Web search engines is used as a source of evidence to select optimal translations
for multiword expressions. For instance, apple juice is selected as a better translation
than apple sap for the German ApfelSaft because apple juice hits a thousand times more
documents in AltaVista. Finally, in Joho and Sanderson (2000) and Fujii and Ishikawa
(1999), the Web is used as a resource to provide descriptive phrases or definitions for
technical terms.
A common problem to all the above applications is how to detect and filter out
all the noisy material on the Web, and how to characterize the rest (Kilgarriff 2001b).
Our starting hypotheses is that Web directories (e.g., Yahoo, AltaVista or Google
directories, the Open Directory Project [ODP]), in which documents are mostly manu-
ally classified in hierarchical topical clusters, are an optimal source for acquiring lexical
information; their size is not comparable to the full Web, but they are still enormous
sources of semistructured, semifiltered information waiting to be mined.
In this article, we describe an algorithm for assigning Web directories (from the
Open Directory Project ?http://dmoz.org?) as characterizations for word senses in
WordNet 1.7 noun synsets (Miller 1990). For instance, let us consider the noun circuit,
which has six senses in WordNet 1.7. These senses are grouped in synsets, together
with their synonym terms, and linked to broader (more general) synsets via hyper-
nymy relations:
6 senses of circuit
Sense 1: {circuit, electrical circuit, electric circuit} => {electrical device}
Sense 2: {tour, circuit} => {journey, journeying}
Sense 3: {circuit} => {path, route, itinerary}
Sense 4: {circuit (judicial division)} => {group, grouping}
Sense 5: {racing circuit, circuit} => {racetrack, racecourse, raceway, track}
Sense 6: {lap, circle, circuit} => {locomotion, travel}
Our algorithm associates circuit 1 (electric circuit) with ODP directories such as
business/industries/electronics and electrical/contract manufacturers
487
Santamar??a, Gonzalo, and Verdejo Association of Web Directories with Word Senses
whereas circuit 5 (racing circuit) is tagged with directories such as
sports/motorsports/auto racing/tracks
sports/equestrian/racing/tracks
sports/motorsports/auto racing/formula one
Every ODP directory has an associated URL, which contains a description of the
directory and a number of Web sites that have been manually listed as pertaining to the
directory topic, accompanied by brief descriptions of each site. This information is com-
pleted with a list of subdirectories, each containing more Web sites and subdirectories.
Finally, some directories also have pointers to the same category in other languages.
For instance, the Web page for the directory sports/motorsports/auto racing/tracks can be
seen in Figure 1. This directory contains links and descriptions for 846 Web sites orga-
nized in 12 subdirectories, a link to a related directory (sports/motorsports/karting/tracks)
and a link to the same category in French.
The association of word senses with Web directories is related to the assignment
of domain labels to WordNet synsets as described in Magnini and Cavaglia (2000), in
which WordNet is (manually) enriched with domain categories from the Dewey Dec-
imal Classification (DDC). Some clear differences between the two are that directories
from the ODP are assigned automatically, are richer and deeper and, more importantly,
Figure 1
Contents of an ODP Web directory associated with circuit 5 (racing circuit).
488
Computational Linguistics Volume 29, Number 3
come with a large amount of associated information directly retrievable from the Web.
DDC categories, on the other hand, are a stable domain characterization compared to
Web directories.
As WordNet and ODP are both hierarchical structures, connecting them is also
related to research in mapping thesauruses for digital libraries, ontologies, and data
structures in compatible databases. A salient feature of our task is, however, that we
do not intend to map both structures, as they are of a quite different nature (lexicalized
English concepts versus topics on the Web). Our goal is rather to associate individual
items in a many-to-many fashion. A word sense may be characterized with several
Web directories, and a Web directory may be suitable for many word senses.
The most direct applications of word sense/Web directory associations are
? Clustering of senses with identical or very similar categories.
? Refinement of senses into specialized variants (e.g., equestrian circuit and
formula one circuit as specializations of racing circuit in the example above).
? Extraction of sense-tagged corpora from the Web sites listed under the
appropriate directories.
In Section 2 we describe the proposed algorithm. In Section 3, we evaluate the
precision and recall of the algorithm for the set of nouns used in the Senseval 2 WSD
competition. In Section 4, we make a preliminary experiment using the material from
ODP directories as training corpora for a supervised WSD system. In section 5, we
present the results of applying the algorithm to most WordNet 1.7 nouns. Finally, in
Section 6 we draw some conclusions.
2. Algorithm
Overall, the system takes a WordNet 1.7 noun as input, generates and submits a set
of queries into the ODP, filters the information obtained from the search engine, and
returns a set of ODP directories classified as (1) pseudo?domain labels for some word
sense, (2) noise, and (3) salient noise (i.e., directories that are not suitable for any sense
in WordNet but could reveal and characterize a new relevant sense of the noun). In
case (1), the WordNet sense ? ODP directory association also receives a probability
score. A detailed description of the algorithm steps follows.
2.1 Querying ODP Structure
For every sense wi of the noun w, a query qi is generated, including w as compulsory
term, the synonyms and direct hypernyms of wi as optional terms, and the synonyms
of other senses of w as negated (forbidden) terms. These queries are submitted to ODP,
and a set of directories is retrieved. For instance, for circuit, the following queries are
generated and sent to the ODP search engine:1
q1= [+circuit "electrical circuit" "electric circuit" "electrical device" -tour
-"racing circuit" -lap -circle]
q2= [+circuit tour journey journeying -"electrical circuit" -"electric circuit"
-"electrical device" -"racing circuit" -lap -circle]
1 In ODP queries, compulsory terms are denoted by + and forbidden terms by ?.
489
Santamar??a, Gonzalo, and Verdejo Association of Web Directories with Word Senses
q3= [+circuit path route itinerary -"electrical circuit" -"electric circuit"
-"electrical device" -tour -"racing circuit" -lap -circle ]
q4= [+circuit group grouping -"electrical circuit" -"electric circuit"
-"electrical device" -tour -"racing circuit" -lap -circle]
q5= [+circuit "racing circuit" racetrack racecourse raceway track -"electrical circuit"
-"electric circuit" -"electrical device" -tour -lap -circle]
q6= [+circuit lap circle locomotion travel -"electrical circuit" -"electric circuit"
-"electrical device" -tour -"racing circuit" -lap -circle]
2.2 Representing Retrieved Directory Descriptions
For every directory d, a list of words l(d) is obtained removing stopwords and pre-
serving all content words in the directory path. For instance, one of the directories
produced by the circuit queries is
d = business/industries/electronics and electrical/contract manufacturers
which is characterized by the following word list:
l(d) = [business, industries, electronics, electrical, contract, manufacturers]
2.3 Representing WordNet Senses
For every sense wj, a list l(wj) of words is made with
? all nouns in the hypernym chain of maximal length 6
? all hyponyms
? all meronyms, holonyms, and coordinate terms
of wj in WordNet. l(wj) is used as a description of the sense wj. For instance, circuit 1
receives the following description:
l(circuit1) = [electrical circuit, electric circuit, electrical device, bridge,
bridge circuit, Wheatstone bridge, bridged-T, closed circuit, loop, parallel circuit,
shunt circuit, computer circuit, gate, logic gate, AND circuit, AND gate, NAND circuit,
NAND gate, OR circuit, OR gate, X-OR circuit, XOR circuit, XOR gate, integrated circuit,
(..)
instrumentality, instrumentation, artifact, artefact, object, physical object, entity]
2.4 Sense/Directory Comparisons
For every sense description l(wj), a comparison is made with the terms in the directory
description l(d). This comparison is based on the hypothesis that the terms in an
appropriate directory for a word sense will have some correlation with the sense
description via WordNet semantic relations. In other words, our assumption is that the
path to the directory in the ODP topical structure will have some degree of overlapping
with the hyponymy path to the word sense in the WordNet hierarchical structure.
For this comparison, we simply count the number of co-occurrences between
words in l(wj) and words in l(d). Repeated terms are not discarded, as repetition
is correlated with stronger associations. Other, better-grounded comparisons, such as
the cosine between l(wj) and l(d), were empirically discarded because of the small size
and small amount of overlapping of the average vectors.
490
Computational Linguistics Volume 29, Number 3
2.5 Candidate Sense/Directory Associations
The association vector v(d, w) has as many components as senses for w in WordNet 1.7;
the ith component, v(d, w)i represents the number of matches between the directory
l(d) and the sense descriptor l(wj). For instance, the association vector of
business/industries/electronics and electrical/contract manufacturers
with circuit is
v(d, circuit) = (6, 0, 0, 0, 0, 0)
that is, six coincidences for sense 1 (the electric circuit sense), which has the associated
vector shown in the previous section (which includes five occurrences of electrical and
one occurrence of electronic). The rest of the sense descriptions have no coincidences
with the directory description.
v(d, w) is the basis for making candidate assignments of suitable senses for direc-
tory d: If one of the components v(d, w)j is not null, we assign the sense wj to the
directory d. If all components are null, the directory is provisionally classified as noise
or new sense. If more than one component is not null, the senses i with maximal
v(d, w)i are all considered candidates. These candidate assignments are confirmed or
discarded after passing a number of filters and receiving a confidence score C(d, wj),
both of which are described below.
2.6 Filters
Filters are simple heuristics that contribute to a more accurate classification of the
relations predicted by the co-ocurrence vector v(d, w). We are currently using two
filters: One differentiates nouns and noun modifiers to prevent wrong associations,
and another detects sense specializations.
2.6.1 Modifiers. Frequently, the ODP search engine retrieves directories in which the
noun to be searched, w, has as a noun modifier role. Such cases usually produce
erroneous associations. For instance, the directory
library/sciences/animals & wildlife/mammals/tamarins/golden lion tamarin
is erroneously associated with the mammal sense of lion, which is here a modifier for
tamarin.
Modifiers are detected with a set of simple patterns, as the syntactic properties of
descriptions in directories are quite simple. In particular, we discard most cases using
the structure of the ODP hierarchy, as in this case. The filter analyzes the structure of
the directory, detects that the parent category of golden lion tamarin is tamarin, therefore
assumes that golden lion tamarin is a specialization of tamarin, and assigns the directory
to a suitable sense of tamarin (tamarin 1 in WordNet).
An additional filter (weaker than the previous one) discards compounds according
to the position (the searched noun precedes another noun), as in
personal/kids/arts & entertainment/movies/animals/lion king
This directory could be associated with lion 1 because it contains the word animal, but
the assignment is rejected because of the modifier filter. In general, on such occasions
the searched noun plays a modifier role (as adjective or noun); discarding all such
cases favors precision over recall. In this case, the label is classified as noise.
491
Santamar??a, Gonzalo, and Verdejo Association of Web Directories with Word Senses
2.6.2 Sense Specializations (Hyponyms). A retrieved directory might be appropriate
as a characterization of a sense specialization for some of the word senses being con-
sidered; our algorithm tries to detect such cases, creating a hyponym of the sense and
characterizing the directory with the hyponym.
The filter identifies a directory as a candidate hyponym if it contains explicitly a
modifier w pattern (where w is the noun being searched). This filter detects explicit
specializations, such as office chair as a hyponym of chair 1, or fox family channel as a
hyponym of channel 7, but fails to identify, for instance, memorial day as a hyponym
of holiday.
If the candidate hyponym, as a compound, is not present in WordNet, then it is
incorporated and described with the directory. If it is already present in WordNet, an
additional checking of the hyponymy relation is made. For instance, the directory
business/industries/electronics and electrical/components/integrated circuits
is assigned to the WordNet entry integrated circuit, because integrated circuit is already
a hyponym of circuit in WordNet.
2.7 Confidence Score
Finally, a confidence score C(d, wj) for every potential association (d, wj) is calculated
using four empirical criteria:
1. Checking whether d was directly retrieved for the query associated to wj.
2. Checking whether the system associates d with one or more senses of the
word w.
3. Checking the number of coincidences between l(d) and l(wj).
4. Comparing the previous number with the number of coincidences
between l(d) and the other sense descriptions {l(w)i, i = j}.
The confidence score is a linear combination of these factors, weighted according to
an empirical estimation of their relevance:
C(d, wj) =
4
?
i=1
?iCi(d, wj)
where
C1(d, wj) =
{
1, if query(wj) retrieves d
0, otherwise
C2(d, wj) = 1 ?
k
n
C3(d, wj) =
?
?
?
1, if vj ? 5
(vj + 5)/10, if 1 < vj ? 4
0.5, if vj = 1
C4(d, wj) =
vj ? maxi=j(vi),
?n
i=1 vi
where v is the association vector v(d, w), n the number of senses, k the number of senses
for which vj is non-null, and ?i are coefficients empirically adjusted to (?1,?2,?3,?4) =
492
Computational Linguistics Volume 29, Number 3
(0.1, 0.15, 0.4, 0.35). The value of C(d, wj) ranges between 0 and 1 (all Ci range between
0 and 1, and the sum of the linear coefficients ?i is 1). Note that C2 cannot reach 1 (but
can get asymptotically close to 1), and note also that C4 cannot take negative values,
because, as (d, wj) is a candidate association, vj is maximal in v(d, w), and therefore
vj ? maxi=j(vi) ranges between 0 and vj.
Let us see an example of how this confidence measure works, calculating C(d, wj)
for the directory
d = business/industries/electronics and electrical/contract manufacturers
with circuit 1 (electric circuit):
? C1. This directory has been retrieved from the query
q1= [+circuit "electrical circuit" "electric circuit" "electrical device"
-tour -"racing circuit" -lap -circle]
corresponding to circuit 1, which agrees with the association made by the
system. Hence C1 = 1.
? C2. The association vector v(d, w) = (6, 0, 0, 0, 0, 0) presents only one
non-null coordinate; therefore C2 = 1 ? 16 = 0.83. Note that, in general,
this factor prevents C from reaching the upper bound 1.
? C3. As v1 = 6, C3 = 1. This factor increases along with the number of
coincidences between the sense and directory characterizations.
? C4. As all other components of v are null, the highest value of the
components different from sense 1 is also null (maxi=j(vi) = 0); therefore,
C4 = 1. This factor measures the strength of the association (d, w1)
compared with the other possibilities. It decreases when v(d, w) includes
more than one non-null coordinate, and their values are similar.
? C. Finally, applying the ?i coefficients, we obtain C(d, circuit 1) = 0.975.
The confidence score can be used to set a threshold for accepting/discarding associ-
ations. A higher threshold should produce a lower number of highly precise associa-
tions; a lower threshold would produce more associations with less accuracy. For the
evaluation below, we have retained all directories, regardless of their confidence score,
in order to assess how well this empirical measure correlates with correct and useful
assignments.
An example of the results produced by the algorithm can be seen in Table 1. The
system assigns directories to senses 1, 2, and 5 of circuit (six, two, and three directories,
respectively). Some of them are shown in the table, together with a sense specialization,
integrated circuit, for sense 1 (electrical circuit). Senses 3, 4, and 6, which did not receive
any directory association, do not appear to have domain specificity, but are instead
general terms.
3. Evaluation
We have analyzed the results of the algorithm for the set of nouns in the Senseval 2
WSD English lexical sample test bed (Kilgarriff 2001a). The Senseval campaigns (Ed-
monds and Cotton 2001; Kilgarriff and Palmer 2000) are devoted to the comparative
evaluation of word sense disambiguation systems in many languages. In the Senseval
2 lexical sample task, a large number of instances (occurrences in context extracted
493
Santamar??a, Gonzalo, and Verdejo Association of Web Directories with Word Senses
Table 1
Results of the association algorithm for circuit.
circuit 1 (electrical circuit)
ODP directories C
business/industries/electronics and electrical/contract manufacturers 0.98
manufacturers/printed circuit boards/fabrication 0.88
computers/cad/electronic design automation 0.78
...
sense specializations (hyponyms)
business/industries/electronics and electrical/components/integrated circuits 0.98
circuit 2 (tour, journey around a particular area)
ODP directories
sports/cycling/travel/travelogues/europe/france 0.58
regional/asia/nepal/travel and tourism/travel guides 0.66
circuit 5 (racing circuit)
ODP directories
sports/motorsports/auto racing/stock cars/drivers and teams 0.78
sports/motorsports/auto racing/tracks 0.82
sports/motorsports/auto racing/driving schools 0.78
from corpora) for a fixed set of words had to be tagged with the appropriate sense
by the participating WSD systems. For English, the sense inventory was a prerelease
of WordNet 1.7, and two sets of manually tagged instances were made available: A
first set was intended for training supervised systems, and a second set for evaluation
of all systems attempting the task. Altogether, the Senseval 2 lexical sample test bed
is one of the most widely used resources for studying and comparing word sense
disambiguation approaches.
For our evaluation, we have considered the fraction of the Senseval 2 test bed that
deals with English nouns: 29 polysemous nouns with a total of 147 word senses.
We have applied the algorithm to this set of nouns and examined the results in
terms of coverage and quality of the sense/directory associations. Coverage measures
how many senses can be characterized with directories, assuming that every domain-
specific sense should receive at least one directory. Quality is measured in terms of
precision (are the assignments correct?), relevance (are the assignments useful?), and
confidence (does the confidence score correlate well with precision and relevance of
the associations?).
3.1 Coverage
Table 2 shows the 148 directories retrieved by our algorithm, an average of 1.0 directo-
ries per sense. The directories, however, are not evenly distributed among senses, cov-
ering only 43 different senses with unique directories and 28 specialized (hyponym)
senses. In addition, 9 senses are identified as part of potential clusters (i.e., having
nonunique directories).
In order to measure the real coverage of the system, we have to estimate how
many word senses in the Senseval 2 sample are susceptible to receiving a domain
label. For instance, sense in common sense is not associated with any particular topic
or domain, whereas sense in word sense can be associated with linguistics or language-
related topics.
The decision as to whether or not a word sense might receive a domain label is
not always a simple, binary one. Hence we have manually tagged all word senses
494
Computational Linguistics Volume 29, Number 3
Table 2
Coverage of nouns in the Senseval 2 test bed.
Senseval 2
Nouns
Number of
Senses
Number of
Directories
Number of Labeled
Senses
Number of
Hyponyms
art 4 6 1 1
authority 7 4 2 1
bar 13 3 3 0
bum 4 0 0 0
chair 4 4 1 0
channel 7 5 1 1
child 4 12 2 0
church 3 24 2 4
circuit 6 11 3 1
day 10 15 1 14
detention 2 1 1 0
dyke 2 1 1 0
facility 5 10 3 0
fatigue 4 0 0 0
feeling 6 2 1 0
grip 7 3 2 0
hearth 3 5 2 0
holiday 2 2 2 0
lady 3 0 0 0
material 5 9 2 3
mouth 8 0 0 0
nation 4 4 1 1
nature 5 0 0 0
post 8 14 5 0
restraint 6 4 3 0
sense 5 0 0 0
spade 3 3 1 1
stress 5 5 2 1
yew 2 1 1 0
Total 147 148 43 28
with two criteria (with each tagging performed by a different human annotator): a
strict one (only word senses that can clearly receive a domain label are marked as
positive) and a loose one (only word senses that are completely generic are marked as
negative). The strict judgment gave 59 domain-specific senses in the sample; the loose
judgment gave 71.
With these manual judgments, the coverage of the algorithm is between 73% (loose
judgment) and 88% (strict judgment). This coverage can be increased by
? Propagating a directory/word sense association to all members of the
WordNet synset to which the word sense belongs.
? Propagating directories via hyponymy chains, as in Magnini and
Cavaglia (2000).
3.2 Quality
We have used three criteria to evaluate the directory/sense associations produced:
? Precision. Is the directory correct (suitable) for the word sense or not?
495
Santamar??a, Gonzalo, and Verdejo Association of Web Directories with Word Senses
? Relevance. Is the directory useful for characterizing the word sense?
? Confidence. How well is the confidence value C(d, wj) correlated with
the precision and relevance of the associations?
3.2.1 Precision. An assignment (d, wj) is considered correct (d is suitable for wj) unless
1. d adjusts better to some other sense wi. For instance, the association of
regional/north america/united states/government/agencies/independent/
federal labor relations authority
as a hyponym of
authority4 : assurance, self -assurance, confidence , self -confidence , authority ,
sureness
is considered an error, as the directory would be better suited for a
hyponym of sense 5 (authority as administrative unit).
2. The terms in l(d) are contradictory to the definition of the word sense or
are better suited for a sense that is not listed in the dictionary. This is the
case of
arts/music/bands and artists/offspring
which is erroneously assigned to child 2: human offspring of any age.
The results of this manual evaluation can be seen in Table 3. The overall precision is
86%.
Regarding potential topical clusters (directories associated with more than one
sense of the same word), these are considered correct if (1) the associated directory
is correct for all the senses in the cluster and (2) the occurrences of the word on the
Web page associated with the directory can be loosely assigned to any of the cluster
senses. Twelve out of the 13 clusters extracted are correct according to this criterion.
3.2.2 Confidence Measures. Table 4 shows the distribution of directories according
to the confidence measure. Eighty-four percent of the directories have a confidence C
over 0.7, and 41% over 0.8. This skewed distribution is consistent with the algorithm
filters, which are designed to favor precision rather than recall.
Table 5 shows the distribution of errors in levels of confidence. The percentage
of errors in directories with a confidence level below .6 is 25%. This error percentage
Table 3
Precision over Senseval 2 nouns.
Directories Associated
with WordNet Senses
Number of
Directories Number of Correct Number of Errors
Unique sense 148 127 21
Potential clustering 13 12 1
Total 161 139 (86%) 22 (14%)
496
Computational Linguistics Volume 29, Number 3
Table 4
Confidence distribution.
Confidence C ? 0.7 0.7 < C ? 0.8 0.8 < C
Number of directories 24 63 61
Table 5
Correlation between confidence and correctness.
Confidence Number of Directories Percentage of Errors
C ? 0.7 24 25%
0.7 < C ? 0.8 63 19%
C > 0.8 61 5%
Total 148 14%
decreases with increasing levels of confidence, down to 5% for associations with C
over .8. Table 5 indicates that the confidence value, which is assigned heuristically, is
indeed correlated with precision.
3.2.3 Relevance. Besides correctness of the associations, we want to measure the use-
fulness of the directories: How well can they be used to characterize the associated
word senses? How much information do they provide about the word senses?
We have performed a manual, qualitative classification of the directories extracted
as irrelevant, mildly relevant, or very relevant. An irrelevant directory is compatible
with the word sense but does not provide any useful characterization; a mildly rele-
vant directory illustrates the word sense, but not centrally or in some particular aspect
or domain. A very relevant directory provides a rich characterization per se and can
be considered a domain label for the word sense.
An example of a very relevant directory is
business/industries/electronics and electrical/components/integrated circuit
associated as hyponym of circuit 1 (electrical circuit) with a confidence of 98%. An
example of mildly relevant association is
regional/north america/united states/texas/../society and culture/religion
associated with church 1 (Christian church) with a 73% confidence. Obviously, Texas is
not correlated with church, but the directory contains a lot of material (for instance,
the Web page of the Northcrest Community Church and many others) that might
be used, for instance, to acquire topical signatures for the concept. Hence the mildly
relevant judgment. Finally, an example of an irrelevant association is
regional/north america/united states/new york/localities/utica
associated with art 1 (fine art) with a confidence of 66% (the directory contains a section
on Arts at Utica, which would be considered mildly relevant if pointed to explicitly
by the label). For the purposes of measuring relevance, all the directories that were
judged as incorrect are counted as irrelevant.
497
Santamar??a, Gonzalo, and Verdejo Association of Web Directories with Word Senses
Table 6
Relevance of the directories in the test set.
Relevance Irrelevant MildlyRelevant
Highly
Relevant
C ? 0.7 7 4 13
0.7 < C ? 0.8 13 12 38
0.8 < C 3 9 49
Total 23 (15%) 25 (17%) 100 (67%)
The overall relevance figures, and the correlation of relevance with the confidence
value, can be seen in Table 6. Sixty-seven percent of the directories are highly relevant
to characterize word senses, which is an encouraging result. Also, the set of irrele-
vant directories (15%) is almost identical to the set of erroneous directories (with just
one addition), indicating that (almost) all directories that are correct can be used to
characterize word senses to some extent.
4. Example Application: Automatic Acquisition of Sense-Tagged Corpora
Each ODP directory contains links to related subdirectories and to a large number of
Web sites that have been manually classified there. Every link to a Web site includes
the name of the site and a short description. For instance, under
business/industries/electronics and electrical/components/integrated circuit
we find over 30 descriptions, such as ??Multilink Technology corporation: Manufacture of
integrated circuits, modules, and boards for use in both data and telecommunications??. In
order to perform a first experiment on extraction of sense-tagged corpora, we have
used only such descriptions (without exploring the associated Web sites) to build a
sense-tagged corpus for Senseval 2 nouns.
Notice that we are not using the contents of the Web sites that belong to a directory,
but only the manually added descriptions of Web sites in the directory. Using the Web
sites themselves is also an attractive possibility that would produce a much larger
corpus at the expense of lower precision.
The extraction is straightforward: When a word sense wi has an associated direc-
tory d, we scan the site descriptions on the ODP page that corresponds to the directory
d and extract all contexts in which w occurs, assuming that in all of them w is used in
the sense i. Some examples of the training material for circuit can be seen in Table 7.
On average, these examples are shorter than Senseval 2 training instances.
The goal is to compare the performance of a supervised word sense disambigua-
tion system using Senseval 2 training data (hand made for the competition) to that
using the sense-tagged corpus from ODP (automatically extracted). We have chosen
the Duluth system (Pedersen 2001) to perform the comparison. The Duluth system is
a freely available supervised WSD system that participated in the Senseval 2 compe-
tition. As we are not concerned with absolute performance, we simply adopted the
first of the many available versions of the system (Duluth 1).
An obstacle to performing such comparative evaluation is that, as expected, our
algorithm assigns ODP directories only to a fraction of all word senses, partly because
not every sense is domain-specific, and partly because of lack of coverage. In order to
498
Computational Linguistics Volume 29, Number 3
Table 7
Examples of training material for circuit.
circuit 1 (electrical circuit)
Electromechanical products for brand name firms; offers printed circuit boards (..)
Offers surface mount, thru-hole, and flex circuit assembly, in circuit and functional (..)
circuit 2 (tour, journey around a particular area)
The Tour du Mont-Blanc is a circuit of 322km based in the northern French Alps.
A virtual tour of the circuit by Raimon Bach.
circuit 5 (racing circuit)
The Circuit is a smooth 536 yards of racing for Hot Rod and Stock Car?s at the East of (..)
(..) History of the circuit and its banked track and news of Formula 1 (..)
circumvent this problem, we have considered only the subset of 10 Senseval nouns for
which our system tags at least two senses: bar, child, circuit, facility, grip, holiday, material,
post, restraint, and stress. We have then projected the Senseval 2 training corpus, and
the test material, onto the annotations for the word senses already in our ODP-based
material. Hence we will evaluate the quality of the training material obtained from
Web directories, not the coverage of the approach.
Table 8 shows the training material obtained for that subset of Senseval 2 nouns.
A total of 66 directories are used as a source of training instances, of which 17% are
incorrect and will presumably incorporate noise into the training. Table 9 compares the
training material for the word senses in this sample, and the results of the supervised
WSD algorithm with the Senseval and the ODP training instances.
We have measured the performance of the system in terms of Senseval recall: the
number of correctly disambiguated instances over the total number of test instances.
Overall, using the Senseval training set gives .73 recall, and training with the automat-
ically extracted ODP instances gives .58 (21% worse). A decrease of 21% is significant
but nevertheless encouraging, because the Senseval training set is the gold standard
for the Senseval test set: It is larger than the ODP set (773 versus 547 instances in this
subset), well balanced, built with redundant manual annotations, and part of the same
corpus as the test set.
Table 8
Training material obtained for the WSD experiment.
Word
Senses
Number of Directories
per Sense
Number of Incorrect
Directories
Number of Training
Instances
bar 1,10 1,1 0,0 1,1
child 1,2 3,9 0,0 3,80
circuit 1,2,5 6,2,3 0,0,0 229,2,5
facility 1,4 4,5 0,0 4,18
grip 2,7 2,1 0,1 17,6
holiday 1,2 1,1 0,1 5,17
material 1,4 6,3 2,1 63,10
post 2,3,4,7,8 1,5,1,4,3 1,1,1,0,3 2,7,1,9,3
restraint 1,4,6 2,1,1 0,0,0 2,2,2
stress 1,2 1,4 0,0 8,50
Total 66 11 547
499
Santamar??a, Gonzalo, and Verdejo Association of Web Directories with Word Senses
Table 9
Results of supervised WSD.
Word
Senses
Number of
instances
Senseval
Training
Number of
instances
ODP
Training
Number of Test
Instances
Recall
Senseval
Training
Recall
ODP
Training
bar 1,10 127,11 1,1 62,6 .91 .50
child 1,2 39,78 3,80 35,27 .57 .44
circuit 1,2,5 67,6,7 229,2,5 23,2,8 .70 .70
facility 1,4 26,61 4,18 15,28 .79 .67
grip 2,7 6,1 17,6 4,0 1.00 1.00
holiday 1,2 4,57 5,17 26,2 .96 .96
material 1,4 65,7 63,10 30,9 .79 .79
post 2,3,4,7,8 1,64,20,11,7 2,7,1,9,3 2,25,13,12,4 .45 .25
restraint 1,4,6 17,32,11 2,2,2 8,14,4 .65 .50
stress 1,2 3,45 8,50 1,19 .95 .95
Total 773 547 379 .73 .58
The most similar experiment in the literature is Agirre and Mart??nez (2000), in
which the sense-tagged instances obtained using a high-performance Web-mining al-
gorithm (Mihalcea and Moldovan 1999) performed hardly better than a random base-
line as WSD training instances. A difference between the two experiments is that
Agirre et al do not limit their experiments to the fraction of the test set for which
they have automatically extracted training samples; hence a direct comparison of the
results is not possible.
A detailed examination of the results indicates that the difference in performance
is related to the smaller number of training instances rather than to the quality of
individual instances:
? In all four cases in which ODP provides a comparable?or
larger?number of training instances (circuit, grip, material, stress), ODP
training equals hand-tagged training. In one additional case (holiday), the
number of ODP instances is smaller, but still the recall is the same. For
the other five words, the number of ODP instances is substantially
smaller and the recall is worse.
? Remarkably, incorrect directories harm recall substantially only for post,
which accumulates six erroneous associations (out of 11 errors). The
other five errors (in material 1, 4, holiday 2, grip 7) do not affect the final
recall for these words. There are two possible reasons for this behavior:
? Erroneous directories tend to be less productive in terms of
training instances. Indeed, this fact could be incorporated as an
additional filter for candidate directories. This is the case, for
instance, of material 1, for which correct directories provide
much more training material than the incorrect one.
? Erroneous directories are more frequent with rare (less frequent)
word senses. This is correlated with a smaller number of test
instances (hence the influence on average recall is lower) and
also of training instances (and then the reference, hand-tagged
material does not provide good training data either). This is the
500
Computational Linguistics Volume 29, Number 3
case of grip 7 or holiday 2, which have zero and two test
instances, respectively.
Overall, our results suggest that directory-based instances, in spite of being shorter
and automatically extracted, are not substantially worse for supervised WSD than the
hand-tagged material provided by the Senseval organization. The limitation of the
approach is currently the low coverage of word senses and the amount of training
samples. Two strategies may help in overcoming such limitations: first, propagating
directories via synonymy (attaching directories to synsets rather than word senses)
and semantic relationships (propagating directories via hyponymy relations); second,
retrieving instances not only from the ODP page describing the directory contents, but
from the Web pages listed in the directory.
The only fundamental limitation of our approach for the automatic extraction
of annotated examples is the fact that directories are closely related to topics and
domains, and therefore word senses that do not pertain to any domain cannot receive
directories and training instances from them. Still, the approach can be very useful
for language engineering applications in which only domain disambiguation (versus
sense disambiguation) is required, such as information retrieval (Gonzalo et al 1998)
and content-based user modeling (Magnini and Strapparava 2000).
5. Massive Processing of WordNet Nouns
We have applied the association algorithm to all noncompound nouns in WordNet
without nonalphabetic characters (e.g., sea lion and 10 are not included in the bulk
processing). The results can be seen in Table 10. Overall, the system associates at least
one directory with 13,375 nouns (28% of the candidate set).
The most direct way of propagating directories in the WordNet structure is ex-
tending sense/directory associations to synset/directory relations (i.e., if a word sense
receives a directory, then all word senses in the same synset receive the same direc-
tory). For instance, cable 2 (transmission line) receives the following directories:
business/industries/electronics and electrical
business/industries/electronics and electrical/hardware/connectors and terminals
business/industries/electronics and electrical/contract manufacturers
As cable 2 is part of the synset {cable 2, line 9, transmission line 1}, line 9 and transmission
line 1 inherit the three directories.
With this (quite conservative) strategy, the number of characterized nouns and
word senses almost doubles: 24,558 nouns and 27,383 senses, covering 34% of the can-
Table 10
Massive association of ODP directories with WordNet 1.7 nouns.
With Propagation
Candidate nouns 51,168
Candidate senses 73,612
Associated directories 29,291
Characterized nouns 13,375 24,558
Characterized senses 14,483 27,383
Hyponyms 1,800
501
Santamar??a, Gonzalo, and Verdejo Association of Web Directories with Word Senses
didate nouns plus 7,027 multiword terms that were not in the candidate set. The results
of this massive processing, together with the results for the Senseval 2 test (including
training material) are available for public inspection at ?http://nlp.uned.es/ODP?.
6. Conclusions
Our algorithm is able to associate ODP directories with WordNet senses with 86%
accuracy over the Senseval 2 test, and with coverage between 73% and 88% of the
domain-specific senses. Such associations can be used as rich characterizations for
word senses: as a source of information to cluster senses according to their topical
relatedness, to extract topic signatures, to acquire sense-tagged corpora, etc. The only
intrinsic limitation of the approach is that Web directories are not appropriate for
characterizing general word senses (versus domain-specific ones). If such characteri-
zation is necessary for a particular natural language application, the method should
be complemented by other means of acquiring lexical information.
In the supervised WSD experiment we have carried out, the results suggest that the
characterization of word senses with Web directories provides cleaner data, without
further sophisticated filtering, than a direct use of the full Web. Indeed the WSD
results using training material from ODP directories gives better results than could be
expected from previous cross-validations of training and test WSD materials.
Our ongoing work is extending the algorithm?which works independently for
every input word?to combine and propagate sense/directory associations over the
entire WordNet. The initial coverage of WordNet nouns is 34%, but we hope to improve
this figure by taking advantage of the WordNet structure.
Perhaps the main conclusion of our work is that Web directories are a much more
structured and reliable corpus than the whole Web. In spite of being manually su-
pervised, Web directories offer immense structured corpora that deserve our attention
as sources of linguistic information. In particular, listing word sense/ODP directory
associations has the additional advantage, compared to other Web-mining approaches,
of providing a wealth of lexical information in a very condensed manner.
Acknowledgments
This work has been partially supported by
the Spanish government through project
Hermes (TIC2000-0335-C03-01).
References
Agirre, E., O. Ansa, E. Hovy, and
D. Mart??nez. 2000. Enriching very large
ontologies using the WWW. In Proceedings
of the Ontology Learning Workshop, Berlin.
Agirre, E. and D. Mart??nez. 2000. Exploring
automatic word sense disambiguation
with decision lists and the Web. In
Proceedings of the COLING Workshop on
Semantic Annotation and Intelligent Content,
Luxembourg.
Edmonds, P. and S. Cotton. 2001.
Senseval-2: Overview. In Proceedings of
Senseval 2. Association for Computational
Linguistics, New Brunswick, NJ.
Fujii, A. and T. Ishikawa. 1999. Utilizing the
World Wide Web as an encyclopedia:
Extracting term descriptions from
semi-structured texts. In Proceedings of
ACL-99. Association for Computational
Linguistics, New Brunswick, NJ.
Gonzalo, J., F. Verdejo, I. Chugur, and
J. Cigarra?n. 1998. Indexing with Wordnet
synsets can improve text retrieval. In
COLING/ACL?98 Workshop on Usage of
WordNet in Natural Language Processing
Systems. Association for Computational
Linguistics, New Brunswick, NJ.
Grefenstette, G. 1999. The WWW as a
resource for example-based MT tasks. In
Proceedings of ASLIB-99, London.
Joho, H. and M. Sanderson. 2000. Retrieving
descriptive phrases from large amounts of
free text. In Proceedings of the 9th ACM
CIKM Conference, McLean, VA.
Kilgarriff, A. 2001a. English lexical sample
task description. In Proceedings of Senseval
2. Association for Computational
Linguistics, New Brunswick, NJ.
Kilgarriff, A. 2001b. Web as corpus. In
502
Computational Linguistics Volume 29, Number 3
Proceedings of Corpus Linguistics 2001,
Lancaster, England.
Kilgarriff, A. and M. Palmer. 2000.
Introduction to the special issue on
Senseval. Computers and the Humanities,
34(1?2).
Ma, X. and M. Liberman. 1999. Bits: A
method for bilingual text search over the
Web. In Proceedings of the Machine
Translation Summit VII, Singapore.
Magnini, B. and G. Cavaglia. 2000.
Integrating subject field codes into
WordNet. In Proceedings of LREC-2000,
Second International Conference on Language
Resources and Evaluation, Athens.
Magnini, B. and C. Strapparava. 2000.
Experiments in word domain
disambiguation for parallel texts. In
ACL-2000 Workshop on Word Sense and
Multilinguality. Association for
Computational Linguistics, New
Brunswick, NJ.
Mihalcea, R. and D. Moldovan. 1999a. An
automatic method for generating sense
tagged corpora. In Proceedings of AAAI ?99,
Orlando, FL, July, pages 461?466.
Miller, G. 1990. Wordnet: An on-line lexical
database. Special issue. International
Journal of Lexicography, 3(4).
Nie, Jian-Yun, Michel Simard, and George
Foster. 2001. Multilingual information
retrieval based on parallel texts from the
Web. In Carol Peters, Editor,
Cross-Language Information Retrieval and
Evaluation: Workshop of Cross-Language
Evaluation Forum (CLEF 2000), Lisbon,
Portugal, September 21?22, 2000, Revised
Papers. Lecture Notes in Computer
Science 2069. Berlin, Springer-Verlag,
pages 188?200.
Pedersen, T. 2001. Machine Learning with
lexical features: The Duluth approach to
Senseval-2. In Proceedings of Senseval-2.
Association for Computational
Linguistics, New Brunswick, NJ.
Peters, C., M. Braschler, J. Gonzalo, and
M. Kluck, editors. 2002. Evaluation of
Cross-Language Information Retrieval
Systems. Lecture Notes in Computer
Science 2406. Springer-Verlag.
Resnik, P. 1999. Mining the Web for
bilingual text. In Proceedings of the 37th
Annual Meeting of the Association for
Computational Linguistics, College Park,
MD.
Resnik, P. and N. Smith. 2002. The Web as a
parallel corpus. Technical Report
UMIACS-TR-2002, University of
Maryland.
Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 1357?1366,
Uppsala, Sweden, 11-16 July 2010. c?2010 Association for Computational Linguistics
Wikipedia as Sense Inventory to Improve Diversity in Web Search Results
Celina Santamar??a, Julio Gonzalo and Javier Artiles
nlp.uned.es
UNED, c/Juan del Rosal, 16, 28040 Madrid, Spain
celina.santamaria@gmail.com julio@lsi.uned.es javart@bec.uned.es
Abstract
Is it possible to use sense inventories to
improve Web search results diversity for
one word queries? To answer this ques-
tion, we focus on two broad-coverage lex-
ical resources of a different nature: Word-
Net, as a de-facto standard used in Word
Sense Disambiguation experiments; and
Wikipedia, as a large coverage, updated
encyclopaedic resource which may have a
better coverage of relevant senses in Web
pages.
Our results indicate that (i) Wikipedia has
a much better coverage of search results,
(ii) the distribution of senses in search re-
sults can be estimated using the internal
graph structure of the Wikipedia and the
relative number of visits received by each
sense in Wikipedia, and (iii) associating
Web pages to Wikipedia senses with sim-
ple and efficient algorithms, we can pro-
duce modified rankings that cover 70%
more Wikipedia senses than the original
search engine rankings.
1 Motivation
The application of Word Sense Disambiguation
(WSD) to Information Retrieval (IR) has been sub-
ject of a significant research effort in the recent
past. The essential idea is that, by indexing and
matching word senses (or even meanings) , the re-
trieval process could better handle polysemy and
synonymy problems (Sanderson, 2000). In prac-
tice, however, there are two main difficulties: (i)
for long queries, IR models implicitly perform
disambiguation, and thus there is little room for
improvement. This is the case with most stan-
dard IR benchmarks, such as TREC (trec.nist.gov)
or CLEF (www.clef-campaign.org) ad-hoc collec-
tions; (ii) for very short queries, disambiguation
may not be possible or even desirable. This is
often the case with one word and even two word
queries in Web search engines.
In Web search, there are at least three ways of
coping with ambiguity:
? Promoting diversity in the search results
(Clarke et al, 2008): given the query ?oa-
sis?, the search engine may try to include rep-
resentatives for different senses of the word
(such as the Oasis band, the Organization
for the Advancement of Structured Informa-
tion Standards, the online fashion store, etc.)
among the top results. Search engines are
supposed to handle diversity as one of the
multiple factors that influence the ranking.
? Presenting the results as a set of (labelled)
clusters rather than as a ranked list (Carpineto
et al, 2009).
? Complementing search results with search
suggestions (e.g. ?oasis band?, ?oasis fash-
ion store?) that serve to refine the query in the
intended way (Anick, 2003).
All of them rely on the ability of the search en-
gine to cluster search results, detecting topic simi-
larities. In all of them, disambiguation is implicit,
a side effect of the process but not its explicit tar-
get. Clustering may detect that documents about
the Oasis band and the Oasis fashion store deal
with unrelated topics, but it may as well detect
a group of documents discussing why one of the
Oasis band members is leaving the band, and an-
other group of documents about Oasis band lyrics;
both are different aspects of the broad topic Oa-
sis band. A perfect hierarchical clustering should
distinguish between the different Oasis senses at a
first level, and then discover different topics within
each of the senses.
Is it possible to use sense inventories to improve
search results for one word queries? To answer
1357
this question, we will focus on two broad-coverage
lexical resources of a different nature: WordNet
(Miller et al, 1990), as a de-facto standard used
in Word Sense Disambiguation experiments and
many other Natural Language Processing research
fields; and Wikipedia (www.wikipedia.org), as a
large coverage and updated encyclopedic resource
which may have a better coverage of relevant
senses in Web pages.
Our hypothesis is that, under appropriate con-
ditions, any of the above mechanisms (clustering,
search suggestions, diversity) might benefit from
an explicit disambiguation (classification of pages
in the top search results) using a wide-coverage
sense inventory. Our research is focused on four
relevant aspects of the problem:
1. Coverage: Are Wikipedia/Wordnet senses
representative of search results? Otherwise,
trying to make a disambiguation in terms of a
fixed sense inventory would be meaningless.
2. If the answer to (1) is positive, the reverse
question is also interesting: can we estimate
search results diversity using our sense inven-
tories?
3. Sense frequencies: knowing sense frequen-
cies in (search results) Web pages is crucial
to have a usable sense inventory. Is it possi-
ble to estimate Web sense frequencies from
currently available information?
4. Classification: The association of Web pages
to word senses must be done with some unsu-
pervised algorithm, because it is not possible
to hand-tag training material for every pos-
sible query word. Can this classification be
done accurately? Can it be effective to pro-
mote diversity in search results?
In order to provide an initial answer to these
questions, we have built a corpus consisting of 40
nouns and 100 Google search results per noun,
manually annotated with the most appropriate
Wordnet and Wikipedia senses. Section 2 de-
scribes how this corpus has been created, and in
Section 3 we discuss WordNet and Wikipedia cov-
erage of search results according to our testbed.
As this initial results clearly discard Wordnet as
a sense inventory for the task, the rest of the pa-
per mainly focuses on Wikipedia. In Section 4 we
estimate search results diversity from our testbed,
finding that the use of Wikipedia could substan-
tially improve diversity in the top results. In Sec-
tion 5 we use the Wikipedia internal link structure
and the number of visits per page to estimate rel-
ative frequencies for Wikipedia senses, obtaining
an estimation which is highly correlated with ac-
tual data in our testbed. Finally, in Section 6 we
discuss a few strategies to classify Web pages into
word senses, and apply the best classifier to en-
hance diversity in search results. The paper con-
cludes with a discussion of related work (Section
7) and an overall discussion of our results in Sec-
tion 8.
2 Test Set
2.1 Set of Words
The most crucial step in building our test set is
choosing the set of words to be considered. We
are looking for words which are susceptible to
form a one-word query for a Web search engine,
and therefore we should focus on nouns which
are used to denote one or more named entities.
At the same time we want to have some degree
of comparability with previous research on Word
Sense Disambiguation, which points to noun sets
used in Senseval/SemEval evaluation campaigns1.
Our budget for corpus annotation was enough for
two persons-month, which limited us to handle
40 nouns (usually enough to establish statistically
significant differences between WSD algorithms,
although obviously limited to reach solid figures
about the general behaviour of words in the Web).
With these arguments in mind, we decided to
choose: (i) 15 nouns from the Senseval-3 lexi-
cal sample dataset, which have been previously
employed by (Mihalcea, 2007) in a related ex-
periment (see Section 7); (ii) 25 additional words
which satisfy two conditions: they are all am-
biguous, and they are all names for music bands
in one of their senses (not necessarily the most
salient). The Senseval set is: {argument, arm,
atmosphere, bank, degree, difference, disc, im-
age, paper, party, performance, plan, shelter,
sort, source}. The bands set is {amazon, apple,
camel, cell, columbia, cream, foreigner, fox, gen-
esis, jaguar, oasis, pioneer, police, puma, rain-
bow, shell, skin, sun, tesla, thunder, total, traffic,
trapeze, triumph, yes}.
For each noun, we looked up all its possible
senses in WordNet 3.0 and in Wikipedia (using
1http://senseval.org
1358
Table 1: Coverage of Search Results: Wikipedia vs. WordNet
Wikipedia WordNet
# senses # documents # senses # documents
available/used assigned to some sense available/used assigned to some sense
Senseval set 242/100 877 (59%) 92/52 696 (46%)
Bands set 640/174 1358 (54%) 78/39 599 (24%)
Total 882/274 2235 (56%) 170/91 1295 (32%)
Wikipedia disambiguation pages). Wikipedia has
an average of 22 senses per noun (25.2 in the
Bands set and 16.1 in the Senseval set), and Word-
net a much smaller figure, 4.5 (3.12 for the Bands
set and 6.13 for the Senseval set). For a conven-
tional dictionary, a higher ambiguity might indi-
cate an excess of granularity; for an encyclopaedic
resource such as Wikipedia, however, it is just
an indication of larger coverage. Wikipedia en-
tries for camel which are not in WordNet, for in-
stance, include the Apache Camel routing and me-
diation engine, the British rock band, the brand
of cigarettes, the river in Cornwall, and the World
World War I fighter biplane.
2.2 Set of Documents
We retrieved the 150 first ranked documents for
each noun, by submitting the nouns as queries to a
Web search engine (Google). Then, for each doc-
ument, we stored both the snippet (small descrip-
tion of the contents of retrieved document) and the
whole HTML document. This collection of docu-
ments contain an implicit new inventory of senses,
based on Web search, as documents retrieved by
a noun query are associated with some sense of
the noun. Given that every document in the top
Web search results is supposed to be highly rele-
vant for the query word, we assume a ?one sense
per document? scenario, although we allow an-
notators to assign more than one sense per doc-
ument. In general this assumption turned out to be
correct except in a few exceptional cases (such as
Wikipedia disambiguation pages): only nine docu-
ments received more than one WordNet sense, and
44 (1.1% of all annotated pages) received more
than one Wikipedia sense.
2.3 Manual Annotation
We implemented an annotation interface which
stored all documents and a short description for
every Wordnet and Wikipedia sense. The annota-
tors had to decide, for every document, whether
there was one or more appropriate senses in each
of the dictionaries. They were instructed to pro-
vide annotations for 100 documents per name; if
an URL in the list was corrupt or not available,
it had to be discarded. We provided 150 docu-
ments per name to ensure that the figure of 100 us-
able documents per name could be reached with-
out problems.
Each judge provided annotations for the 4,000
documents in the final data set. In a second round,
they met and discussed their independent annota-
tions together, reaching a consensus judgement for
every document.
3 Coverage of Web Search Results:
Wikipedia vs Wordnet
Table 1 shows how Wikipedia and Wordnet cover
the senses in search results. We report each noun
subset separately (Senseval and bands subsets) as
well as aggregated figures.
The most relevant fact is that, unsurprisingly,
Wikipedia senses cover much more search results
(56%) than Wordnet (32%). If we focus on the
top ten results, in the bands subset (which should
be more representative of plausible web queries)
Wikipedia covers 68% of the top ten documents.
This is an indication that it can indeed be useful
for promoting diversity or help clustering search
results: even if 32% of the top ten documents are
not covered by Wikipedia, it is still a representa-
tive source of senses in the top search results.
We have manually examined all documents
in the top ten results that are not covered by
Wikipedia: a majority of the missing senses con-
sists of names of (generally not well-known) com-
panies (45%) and products or services (26%); the
other frequent type (12%) of non annotated doc-
ument is disambiguation pages (from Wikipedia
and also from other dictionaries).
It is also interesting to examine the degree of
overlap between Wikipedia and Wordnet senses.
Being two different types of lexical resource,
they might have some degree of complementar-
ity. Table 2 shows, however, that this is not the
case: most of the (annotated) documents either fit
Wikipedia senses (26%) or both Wikipedia and
Wordnet (29%), and just 3% fit Wordnet only.
1359
Table 2: Overlap between Wikipedia and Wordnet in Search Results
# documents annotated with
Wikipedia & Wordnet Wikipedia only Wordnet only none
Senseval set 607 (40%) 270 (18%) 89 (6%) 534 (36%)
Bands set 572 (23%) 786 (31%) 27 (1%) 1115 (45%)
Total 1179 (29%) 1056 (26%) 116 (3%) 1649 (41%)
Therefore, Wikipedia seems to extend the cover-
age of Wordnet rather than providing complemen-
tary sense information. If we wanted to extend the
coverage of Wikipedia, the best strategy seems to
be to consider lists of companies, products and ser-
vices, rather than complementing Wikipedia with
additional sense inventories.
4 Diversity in Google Search Results
Once we know that Wikipedia senses are a rep-
resentative subset of actual Web senses (covering
more than half of the documents retrieved by the
search engine), we can test how well search results
respect diversity in terms of this subset of senses.
Table 3 displays the number of different senses
found at different depths in the search results rank,
and the average proportion of total senses that they
represent. These results suggest that diversity is
not a major priority for ranking results: the top
ten results only cover, in average, 3 Wikipedia
senses (while the average number of senses listed
in Wikipedia is 22). When considering the first
100 documents, this number grows up to 6.85
senses per noun.
Another relevant figure is the frequency of the
most frequent sense for each word: in average,
63% of the pages in search results belong to the
most frequent sense of the query word. This is
roughly comparable with most frequent sense fig-
ures in standard annotated corpora such as Sem-
cor (Miller et al, 1993) and the Senseval/Semeval
data sets, which suggests that diversity may not
play a major role in the current Google ranking al-
gorithm.
Of course this result must be taken with care,
because variability between words is high and un-
predictable, and we are using only 40 nouns for
our experiment. But what we have is a positive
indication that Wikipedia could be used to im-
prove diversity or cluster search results: poten-
tially the first top ten results could cover 6.15 dif-
ferent senses in average (see Section 6.5), which
would be a substantial growth.
5 Sense Frequency Estimators for
Wikipedia
Wikipedia disambiguation pages contain no sys-
tematic information about the relative importance
of senses for a given word. Such information,
however, is crucial in a lexicon, because sense dis-
tributions tend to be skewed, and knowing them
can help disambiguation algorithms.
We have attempted to use two estimators of ex-
pected sense distribution:
? Internal relevance of a word sense, measured
as incoming links for the URL of a given
sense in Wikipedia.
? External relevance of a word sense, measured
as the number of visits for the URL of a given
sense (as reported in http://stats.grok.se).
The number of internal incoming links is ex-
pected to be relatively stable for Wikipedia arti-
cles. As for the number of visits, we performed
a comparison of the number of visits received by
the bands noun subset in May, June and July 2009,
finding a stable-enough scenario with one notori-
ous exception: the number of visits to the noun
Tesla raised dramatically in July, because July 10
was the anniversary of the birth of Nicola Tesla,
and a special Google logo directed users to the
Wikipedia page for the scientist.
We have measured correlation between the rela-
tive frequencies derived from these two indicators
and the actual relative frequencies in our testbed.
Therefore, for each noun w and for each sense wi,
we consider three values: (i) proportion of doc-
uments retrieved for w which are manually as-
signed to each sense wi; (ii) inlinks(wi): rela-
tive amount of incoming links to each sense wi;
and (iii) visits(wi): relative number of visits to the
URL for each sense wi.
We have measured the correlation between
these three values using a linear regression corre-
lation coefficient, which gives a correlation value
of .54 for the number of visits and of .71 for the
number of incoming links. Both estimators seem
1360
Table 3: Diversity in Search Results according to Wikipedia
average # senses in search results average coverage of Wikipedia senses
Bands set Senseval set Total Bands set Senseval set Total
First 10 docs 2.88 3.2 3.00 .21 .21 .21
First 25 4.44 4.8 4.58 .28 .33 .30
First 50 5.56 5.47 5.53 .33 .36 .34
First 75 6.56 6.33 6.48 .37 .43 .39
First 100 6.96 6.67 6.85 .38 .45 .41
to be positively correlated with real relative fre-
quencies in our testbed, with a strong preference
for the number of links.
We have experimented with weighted combina-
tions of both indicators, using weights of the form
(k, 1? k), k ? {0, 0.1, 0.2 . . . 1}, reaching a max-
imal correlation of .73 for the following weights:
freq(wi) = 0.9?inlinks(wi)+0.1?visits(wi) (1)
This weighted estimator provides a slight ad-
vantage over the use of incoming links only (.73
vs .71). Overall, we have an estimator which has
a strong correlation with the distribution of senses
in our testbed. In the next section we will test its
utility for disambiguation purposes.
6 Association of Wikipedia Senses to
Web Pages
We want to test whether the information provided
by Wikipedia can be used to classify search results
accurately. Note that we do not want to consider
approaches that involve a manual creation of train-
ing material, because they can?t be used in prac-
tice.
Given a Web page p returned by the search
engine for the query w, and the set of senses
w1 . . . wn listed in Wikipedia, the task is to assign
the best candidate sense to p. We consider two
different techniques:
? A basic Information Retrieval approach,
where the documents and the Wikipedia
pages are represented using a Vector Space
Model (VSM) and compared with a standard
cosine measure. This is a basic approach
which, if successful, can be used efficiently
to classify search results.
? An approach based on a state-of-the-art su-
pervised WSD system, extracting training ex-
amples automatically from Wikipedia con-
tent.
We also compute two baselines:
? A random assignment of senses (precision is
computed as the inverse of the number of
senses, for every test case).
? A most frequent sense heuristic which uses
our estimation of sense frequencies and as-
signs the same sense (the most frequent) to
all documents.
Both are naive baselines, but it must be noted
that the most frequent sense heuristic is usually
hard to beat for unsupervised WSD algorithms in
most standard data sets.
We now describe each of the two main ap-
proaches in detail.
6.1 VSM Approach
For each word sense, we represent its Wikipedia
page in a (unigram) vector space model, assigning
standard tf*idf weights to the words in the docu-
ment. idf weights are computed in two different
ways:
1. Experiment VSM computes inverse docu-
ment frequencies in the collection of re-
trieved documents (for the word being con-
sidered).
2. Experiment VSM-GT uses the statistics pro-
vided by the Google Terabyte collection
(Brants and Franz, 2006), i.e. it replaces the
collection of documents with statistics from a
representative snapshot of the Web.
3. Experiment VSM-mixed combines statistics
from the collection and from the Google
Terabyte collection, following (Chen et al,
2009).
The document p is represented in the same vec-
tor space as the Wikipedia senses, and it is com-
pared with each of the candidate senses wi via the
cosine similarity metric (we have experimented
1361
with other similarity metrics such as ?2, but dif-
ferences are irrelevant). The sense with the high-
est similarity to p is assigned to the document. In
case of ties (which are rare), we pick the first sense
in the Wikipedia disambiguation page (which in
practice is like a random decision, because senses
in disambiguation pages do not seem to be ordered
according to any clear criteria).
We have also tested a variant of this approach
which uses the estimation of sense frequencies
presented above: once the similarities are com-
puted, we consider those cases where two or more
senses have a similar score (in particular, all senses
with a score greater or equal than 80% of the high-
est score). In that cases, instead of using the small
similarity differences to select a sense, we pick up
the one which has the largest frequency according
to our estimator. We have applied this strategy to
the best performing system, VSM-GT, resulting in
experiment VSM-GT+freq.
6.2 WSD Approach
We have used TiMBL (Daelemans et al, 2001),
a state-of-the-art supervised WSD system which
uses Memory-Based Learning. The key, in this
case, is how to extract learning examples from the
Wikipedia automatically. For each word sense, we
basically have three sources of examples: (i) oc-
currences of the word in the Wikipedia page for
the word sense; (ii) occurrences of the word in
Wikipedia pages pointing to the page for the word
sense; (iii) occurrences of the word in external
pages linked in the Wikipedia page for the word
sense.
After an initial manual inspection, we decided
to discard external pages for being too noisy, and
we focused on the first two options. We tried three
alternatives:
? TiMBL-core uses only the examples found
in the page for the sense being trained.
? TiMBL-inlinks uses the examples found in
Wikipedia pages pointing to the sense being
trained.
? TiMBL-all uses both sources of examples.
In order to classify a page p with respect to the
senses for a word w, we first disambiguate all oc-
currences of w in the page p. Then we choose the
sense which appears most frequently in the page
according to TiMBL results. In case of ties we
pick up the first sense listed in the Wikipedia dis-
ambiguation page.
We have also experimented with a variant of
the approach that uses our estimation of sense fre-
quencies, similarly to what we did with the VSM
approach. In this case, (i) when there is a tie be-
tween two or more senses (which is much more
likely than in the VSM approach), we pick up the
sense with the highest frequency according to our
estimator; and (ii) when no sense reaches 30% of
the cases in the page to be disambiguated, we also
resort to the most frequent sense heuristic (among
the candidates for the page). This experiment is
called TiMBL-core+freq (we discarded ?inlinks?
and ?all? versions because they were clearly worse
than ?core?).
6.3 Classification Results
Table 4 shows classification results. The accuracy
of systems is reported as precision, i.e. the number
of pages correctly classified divided by the total
number of predictions. This is approximately the
same as recall (correctly classified pages divided
by total number of pages) for our systems, because
the algorithms provide an answer for every page
containing text (actual coverage is 94% because
some pages only contain text as part of an image
file such as photographs and logotypes).
Table 4: Classification Results
Experiment Precision
random .19
most frequent sense (estimation) .46
TiMBL-core .60
TiMBL-inlinks .50
TiMBL-all .58
TiMBL-core+freq .67
VSM .67
VSM-GT .68
VSM-mixed .67
VSM-GT+freq .69
All systems are significantly better than the
random and most frequent sense baselines (using
p < 0.05 for a standard t-test). Overall, both ap-
proaches (using TiMBL WSD machinery and us-
ing VSM) lead to similar results (.67 vs. .69),
which would make VSM preferable because it is
a simpler and more efficient approach. Taking a
1362
Figure 1: Precision/Coverage curves for VSM-GT+freq classification algorithm
closer look at the results with TiMBL, there are a
couple of interesting facts:
? There is a substantial difference between us-
ing only examples taken from the Wikipedia
Web page for the sense being trained
(TiMBL-core, .60) and using examples from
the Wikipedia pages pointing to that page
(TiMBL-inlinks, .50). Examples taken from
related pages (even if the relationship is close
as in this case) seem to be too noisy for the
task. This result is compatible with findings
in (Santamar??a et al, 2003) using the Open
Directory Project to extract examples auto-
matically.
? Our estimation of sense frequencies turns
out to be very helpful for cases where our
TiMBL-based algorithm cannot provide an
answer: precision rises from .60 (TiMBL-
core) to .67 (TiMBL-core+freq). The differ-
ence is statistically significant (p < 0.05) ac-
cording to the t-test.
As for the experiments with VSM, the varia-
tions tested do not provide substantial improve-
ments to the baseline (which is .67). Using idf fre-
quencies obtained from the Google Terabyte cor-
pus (instead of frequencies obtained from the set
of retrieved documents) provides only a small im-
provement (VSM-GT, .68), and adding the esti-
mation of sense frequencies gives another small
improvement (.69). Comparing the baseline VSM
with the optimal setting (VSM-GT+freq), the dif-
ference is small (.67 vs .69) but relatively robust
(p = 0.066 according to the t-test).
Remarkably, the use of frequency estimations
is very helpful for the WSD approach but not for
the SVM one, and they both end up with similar
performance figures; this might indicate that using
frequency estimations is only helpful up to certain
precision ceiling.
6.4 Precision/Coverage Trade-off
All the above experiments are done at maximal
coverage, i.e., all systems assign a sense for every
document in the test collection (at least for every
document with textual content). But it is possible
to enhance search results diversity without anno-
tating every document (in fact, not every document
can be assigned to a Wikipedia sense, as we have
discussed in Section 3). Thus, it is useful to inves-
tigate which is the precision/coverage trade-off in
our dataset. We have experimented with the best
performing system (VSM-GT+freq), introducing
a similarity threshold: assignment of a document
to a sense is only done if the similarity of the doc-
ument to the Wikipedia page for the sense exceeds
the similarity threshold.
We have computed precision and coverage for
every threshold in the range [0.00? 0.90] (beyond
0.90 coverage was null) and represented the results
in Figure 1 (solid line). The graph shows that we
1363
can classify around 20% of the documents with a
precision above .90, and around 60% of the docu-
ments with a precision of .80.
Note that we are reporting disambiguation re-
sults using a conventional WSD test set, i.e., one
in which every test case (every document) has
been manually assigned to some Wikipedia sense.
But in our Web Search scenario, 44% of the
documents were not assigned to any Wikipedia
sense: in practice, our classification algorithm
would have to cope with all this noise as well.
Figure 1 (dotted line) shows how the preci-
sion/coverage curve is affected when the algo-
rithm attempts to disambiguate all documents re-
trieved by Google, whether they can in fact be as-
signed to a Wikipedia sense or not. At a coverage
of 20%, precision drops approximately from .90 to
.70, and at a coverage of 60% it drops from .80 to
.50. We now address the question of whether this
performance is good enough to improve search re-
sults diversity in practice.
6.5 Using Classification to Promote Diversity
We now want to estimate how the reported clas-
sification accuracy may perform in practice to en-
hance diversity in search results. In order to pro-
vide an initial answer to this question, we have
re-ranked the documents for the 40 nouns in our
testbed, using our best classifier (VSM-GT+freq)
and making a list of the top-ten documents with
the primary criterion of maximising the number
of senses represented in the set, and the secondary
criterion of maximising the similarity scores of the
documents to their assigned senses. The algorithm
proceeds as follows: we fill each position in the
rank (starting at rank 1), with the document which
has the highest similarity to some of the senses
which are not yet represented in the rank; once all
senses are represented, we start choosing a second
representative for each sense, following the same
criterion. The process goes on until the first ten
documents are selected.
We have also produced a number of alternative
rankings for comparison purposes:
? clustering (centroids): this method ap-
plies Hierarchical Agglomerative Clustering
? which proved to be the most competitive
clustering algorithm in a similar task (Artiles
et al, 2009) ? to the set of search results,
forcing the algorithm to create ten clusters.
The centroid of each cluster is then selected
Table 5: Enhancement of Search Results Diversity
rank@10 # senses coverage
Original rank 2.80 49%
Wikipedia 4.75 77%
clustering (centroids) 2.50 42%
clustering (top ranked) 2.80 46%
random 2.45 43%
upper bound 6.15 97%
as one of the top ten documents in the new
rank.
? clustering (top ranked): Applies the same
clustering algorithm, but this time the top
ranked document (in the original Google
rank) of each cluster is selected.
? random: Randomly selects ten documents
from the set of retrieved results.
? upper bound: This is the maximal diversity
that can be obtained in our testbed. Note that
coverage is not 100%, because some words
have more than ten meanings in Wikipedia
and we are only considering the top ten doc-
uments.
All experiments have been applied on the full
set of documents in the testbed, including those
which could not be annotated with any Wikipedia
sense. Coverage is computed as the ratio of senses
that appear in the top ten results compared to the
number of senses that appear in all search results.
Results are presented in Table 5. Note that di-
versity in the top ten documents increases from
an average of 2.80 Wikipedia senses represented
in the original search engine rank, to 4.75 in the
modified rank (being 6.15 the upper bound), with
the coverage of senses going from 49% to 77%.
With a simple VSM algorithm, the coverage of
Wikipedia senses in the top ten results is 70%
larger than in the original ranking.
Using Wikipedia to enhance diversity seems to
work much better than clustering: both strategies
to select a representative from each cluster are un-
able to improve the diversity of the original rank-
ing. Note, however, that our evaluation has a bias
towards using Wikipedia, because only Wikipedia
senses are considered to estimate diversity.
Of course our results do not imply that the
Wikipedia modified rank is better than the original
1364
Google rank: there are many other factors that in-
fluence the final ranking provided by a search en-
gine. What our results indicate is that, with simple
and efficient algorithms, Wikipedia can be used as
a reference to improve search results diversity for
one-word queries.
7 Related Work
Web search results clustering and diversity in
search results are topics that receive an increas-
ing attention from the research community. Diver-
sity is used both to represent sub-themes in a broad
topic, or to consider alternative interpretations for
ambiguous queries (Agrawal et al, 2009), which
is our interest here. Standard IR test collections do
not usually consider ambiguous queries, and are
thus inappropriate to test systems that promote di-
versity (Sanderson, 2008); it is only recently that
appropriate test collections are being built, such as
(Paramita et al, 2009) for image search and (Ar-
tiles et al, 2009) for person name search. We see
our testbed as complementary to these ones, and
expect that it can contribute to foster research on
search results diversity.
To our knowledge, Wikipedia has not explicitly
been used before to promote diversity in search
results; but in (Gollapudi and Sharma, 2009), it
is used as a gold standard to evaluate diversifica-
tion algorithms: given a query with a Wikipedia
disambiguation page, an algorithm is evaluated as
promoting diversity when different documents in
the search results are semantically similar to dif-
ferent Wikipedia pages (describing the alternative
senses of the query). Although semantic similarity
is measured automatically in this work, our results
confirm that this evaluation strategy is sound, be-
cause Wikipedia senses are indeed representative
of search results.
(Clough et al, 2009) analyses query diversity in
a Microsoft Live Search, using click entropy and
query reformulation as diversity indicators. It was
found that at least 9.5% - 16.2% of queries could
benefit from diversification, although no correla-
tion was found between the number of senses of a
word in Wikipedia and the indicators used to dis-
cover diverse queries. This result does not discard,
however, that queries where applying diversity is
useful cannot benefit from Wikipedia as a sense
inventory.
In the context of clustering, (Carmel et al,
2009) successfully employ Wikipedia to enhance
automatic cluster labeling, finding that Wikipedia
labels agree with manual labels associated by hu-
mans to a cluster, much more than with signif-
icant terms that are extracted directly from the
text. In a similar line, both (Gabrilovich and
Markovitch, 2007) and (Syed et al, 2008) provide
evidence suggesting that categories of Wikipedia
articles can successfully describe common con-
cepts in documents.
In the field of Natural Language Processing,
there has been successful attempts to connect
Wikipedia entries to Wordnet senses: (Ruiz-
Casado et al, 2005) reports an algorithm that
provides an accuracy of 84%. (Mihalcea, 2007)
uses internal Wikipedia hyperlinks to derive sense-
tagged examples. But instead of using Wikipedia
directly as sense inventory, Mihalcea then manu-
ally maps Wikipedia senses into Wordnet senses
(claiming that, at the time of writing the paper,
Wikipedia did not consistently report ambiguity
in disambiguation pages) and shows that a WSD
system based on acquired sense-tagged examples
reaches an accuracy well beyond an (informed)
most frequent sense heuristic.
8 Conclusions
We have investigated whether generic lexical re-
sources can be used to promote diversity in Web
search results for one-word, ambiguous queries.
We have compared WordNet and Wikipedia and
arrived to a number of conclusions: (i) unsurpris-
ingly, Wikipedia has a much better coverage of
senses in search results, and is therefore more ap-
propriate for the task; (ii) the distribution of senses
in search results can be estimated using the in-
ternal graph structure of the Wikipedia and the
relative number of visits received by each sense
in Wikipedia, and (iii) associating Web pages to
Wikipedia senses with simple and efficient algo-
rithms, we can produce modified rankings that
cover 70% more Wikipedia senses than the orig-
inal search engine rankings.
We expect that the testbed created for this re-
search will complement the - currently short - set
of benchmarking test sets to explore search re-
sults diversity and query ambiguity. Our testbed
is publicly available for research purposes at
http://nlp.uned.es.
Our results endorse further investigation on the
use of Wikipedia to organize search results. Some
limitations of our research, however, must be
1365
noted: (i) the nature of our testbed (with every
search result manually annotated in terms of two
sense inventories) makes it too small to extract
solid conclusions on Web searches (ii) our work
does not involve any study of diversity from the
point of view of Web users (i.e. when a Web
query addresses many different use needs in prac-
tice); research in (Clough et al, 2009) suggests
that word ambiguity in Wikipedia might not be re-
lated with diversity of search needs; (iii) we have
tested our classifiers with a simple re-ordering of
search results to test how much diversity can be
improved, but a search results ranking depends on
many other factors, some of them more crucial
than diversity; it remains to be tested how can we
use document/Wikipedia associations to improve
search results clustering (for instance, providing
seeds for the clustering process) and to provide
search suggestions.
Acknowledgments
This work has been partially funded by the Span-
ish Government (project INES/Text-Mess) and the
Xunta de Galicia.
References
R. Agrawal, S. Gollapudi, A. Halverson, and S. Leong.
2009. Diversifying Search Results. In Proc. of
WSDM?09. ACM.
P. Anick. 2003. Using Terminological Feedback for
Web Search Refinement : a Log-based Study. In
Proc. ACM SIGIR 2003, pages 88?95. ACM New
York, NY, USA.
J. Artiles, J. Gonzalo, and S. Sekine. 2009. WePS
2 Evaluation Campaign: overview of the Web Peo-
ple Search Clustering Task. In 2nd Web People
Search Evaluation Workshop (WePS 2009), 18th
WWW Conference. 2009.
T. Brants and A. Franz. 2006. Web 1T 5-gram, version
1. Philadelphia: Linguistic Data Consortium.
D. Carmel, H. Roitman, and N. Zwerdling. 2009. En-
hancing Cluster Labeling using Wikipedia. In Pro-
ceedings of the 32nd international ACM SIGIR con-
ference on Research and development in information
retrieval, pages 139?146. ACM.
C. Carpineto, S. Osinski, G. Romano, and Dawid
Weiss. 2009. A Survey of Web Clustering Engines.
ACM Computing Surveys, 41(3).
Y. Chen, S. Yat Mei Lee, and C. Huang. 2009.
PolyUHK: A Robust Information Extraction System
for Web Personal Names. In Proc. WWW?09 (WePS-
2 Workshop). ACM.
C. Clarke, M. Kolla, G. Cormack, O. Vechtomova,
A. Ashkan, S. Bu?ttcher, and I. MacKinnon. 2008.
Novelty and Diversity in Information Retrieval Eval-
uation. In Proc. SIGIR?08, pages 659?666. ACM.
P. Clough, M. Sanderson, M. Abouammoh, S. Navarro,
and M. Paramita. 2009. Multiple Approaches to
Analysing Query Diversity. In Proc. of SIGIR 2009.
ACM.
W. Daelemans, J. Zavrel, K. van der Sloot, and
A. van den Bosch. 2001. TiMBL: Tilburg Memory
Based Learner, version 4.0, Reference Guide. Tech-
nical report, University of Antwerp.
E. Gabrilovich and S. Markovitch. 2007. Computing
Semantic Relatedness using Wikipedia-based Ex-
plicit Semantic Analysis. In Proceedings of The
20th International Joint Conference on Artificial In-
telligence (IJCAI), Hyderabad, India.
S. Gollapudi and A. Sharma. 2009. An Axiomatic Ap-
proach for Result Diversification. In Proc. WWW
2009, pages 381?390. ACM New York, NY, USA.
R. Mihalcea. 2007. Using Wikipedia for Automatic
Word Sense Disambiguation. In Proceedings of
NAACL HLT, volume 2007.
G. Miller, C. R. Beckwith, D. Fellbaum, Gross, and
K. Miller. 1990. Wordnet: An on-line lexical
database. International Journal of Lexicograph,
3(4).
G.A Miller, C. Leacock, R. Tengi, and Bunker R. T.
1993. A Semantic Concordance. In Proceedings of
the ARPA WorkShop on Human Language Technol-
ogy. San Francisco, Morgan Kaufman.
M. Paramita, M. Sanderson, and P. Clough. 2009. Di-
versity in Photo Retrieval: Overview of the Image-
CLEFPhoto task 2009. CLEF working notes, 2009.
M. Ruiz-Casado, E. Alfonseca, and P. Castells. 2005.
Automatic Assignment of Wikipedia Encyclopaedic
Entries to Wordnet Synsets. Advances in Web Intel-
ligence, 3528:380?386.
M. Sanderson. 2000. Retrieving with Good Sense. In-
formation Retrieval, 2(1):49?69.
M. Sanderson. 2008. Ambiguous Queries: Test Col-
lections Need More Sense. In Proceedings of the
31st annual international ACM SIGIR conference on
Research and development in information retrieval,
pages 499?506. ACM New York, NY, USA.
C. Santamar??a, J. Gonzalo, and F. Verdejo. 2003.
Automatic Association of Web Directories to Word
Senses. Computational Linguistics, 29(3):485?502.
Z. S. Syed, T. Finin, and Joshi. A. 2008. Wikipedia
as an Ontology for Describing Documents. In Proc.
ICWSM?08.
1366
