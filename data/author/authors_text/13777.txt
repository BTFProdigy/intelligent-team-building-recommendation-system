Proceedings of the 5th International Workshop on Semantic Evaluation, ACL 2010, pages 341?344,
Uppsala, Sweden, 15-16 July 2010. c?2010 Association for Computational Linguistics
NCSU: Modeling Temporal Relations  with Markov Logic and Lexical Ontology 
 Eun Young Ha Alok Baikadi Carlyle Licata  James C. Lester Department of Computer Science North Carolina State University Raleigh, NC, USA {eha,abaikad,cjlicata,lester}@ncsu.edu     Abstract As a participant in TempEval-2, we ad-dress the temporal relations task consist-ing of four related subtasks. We take a su-pervised machine-learning technique us-ing Markov Logic in combination with rich lexical relations beyond basic and syntactic features. One of our two submit-ted systems achieved the highest score for the Task F (66% precision), untied, and the second highest score (63% precision) for the Task C, which tied with three other systems.  1 Introduction Time plays a key role in narrative. However, cor-rectly recognizing temporal order among events is a challenging task. As a follow-up to the first TempEval competition, TempEval-2 addresses this challenge. Among the three proposed tasks of TempEval-2, we address the temporal rela-tions task consisting of four subtasks: predicting temporal relations that hold between events and time expressions in the same sentence (Task C), events and the document creation time (Task D), main events in adjacent sentences (Task E), and main events and syntactically dominated events, such as those in subordinated clauses (Task F). We are primarily concerned with Task C, E, and F, because D is not relevant to our application domain.1 However, rather than eliminating Task D altogether, we build a very simple model for this task by using only those features that are shared with other task models (i.e., the document                                                 1 Our application domain concerns analysis of narrative stories written by middle school students, with the analysis being conducted a single story at a time. 
creation time data are not used because none of the other task models need them as features). It was expected that this approach would support more interesting comparisons with other systems that take a more sophisticated approach to the task. Further, we experiment with a joint model-ing technique to examine if the communication with other task models brings a boost to a per-formance of the simple model. Taking a supervised machine-learning ap-proach with Markov Logic (ML) (Richardson and Domingos, 2006), we constructed two systems, NCSU-INDI and NCSU-JOINT. NCSU-INDI con-sists of four independently trained classifiers, one for each task, whereas NCSU-JOINT models all four tasks jointly. The choice of ML as learn-ing technique for temporal relations is motivated both theoretically and practically. Theoretically, it is a statistical relational learning framework that does not make the i.i.d. assumption for the data. This is a desirable characteristic for com-plex problems such as temporal relation classifi-cation, as well as many other natural language problems, in which the features representing a given problem are often correlated with one an-other. Practically, ML allows us to build both individual and joint models in a uniform frame-work; individual models can be easily combined together into a joint model with a set of global formulae governing over them.  In previous work (Yoshikawa et al, 2009), ML was successfully applied to temporal relation classification task. Our approach is different from this work in two primary respects. First, we introduce new lexical relation features derived from English lexical ontologies. Second, our model addresses a new task introduced in Tem-pEval-2, which is to identify temporal relations between main and syntactically dominated events in the same sentence. We also employ phrase-based syntactic features (Bethard and 
341
Martin 2007) rather than dependency-based syn-tactic features. 2 Features We consider three types of features: basic, syn-tactic, and lexical relation features. Basic fea-tures represent the information directly available from the original data provided by the task orga-nizer; syntactic features are extracted from syn-tactic parses generated by Charniak parser (Charniak, 2000); and lexical semantic relations that are derived from two external lexical data-bases, VERBOCEAN (Chklovski and Pantel, 2004) and WordNet (Fellbaum, 1998). 2.1 Basic Features Basic features include the word tokens, stems of the words, and the manually annotated attributes of events and time expressions. In the TempEval-2 data, an event always consists of a single word token, but time expressions often consist of mul-tiple tokens. We treat each word in time expres-sions as a different feature. For example, two word features, ?this? and ?afternoon?, are ex-tracted from a given time expression ?this after-noon?. Stemming is done with the Porter Stemmer in NLTK (Loper and Bird, 2002). The value attributes of time expressions are treated as symbolic features, rather than being decomposed into actual integer values representing dates and times.  2.2 Syntactic Features Our syntactic features draw upon the features previously shown to be effective for temporal relation classification (Bethard and Martin, 2007), including the following: ? pos: the part-of-speech (pos) tags of the event and the time expression word to-kens, assigned by Charniak parser.  ? gov-prep: any prepositions governing the event or time expression (e.g., ?for? in ?for ten years?). ? gov-verb: the verb governing the event or time expression, similar to gov-prep. ? gov-verb-pos: the pos tag of the governing verb. We also investigate both full and partial syn-tactic paths between a pair of event and time ex-pressions, but including these features does not improve the classification results on our devel-opment data set. 
2.3 Lexical Relation Features VERBOCEAN is a graph of semantic relations between verbs. There are 22,306 relations be-tween 3,477 verbs that have been mined using Google searches for lexico-syntactic patterns. VERBOCEAN contains five different types of re-lations (Table 1). Verbs are stored in the lemma-tized forms and senses are not disambiguated. A connection between two verbs indicates that the relation holds between some senses of the verbs. VERBOCEAN?S database is presented as a list of verb pair relations, along with a confidence score. Both the transitive and symmetric closure over the relations were taken before storage in a SQLite database for queries. The transitive clo-sure was calculated using the Warshall algorithm (Agrawal and Jagadish, 1990). The confidence score for the new arc was calculated as the aver-age of the two constituents. The symmetric clo-sure was calculated using a simple pass. The confidence score is the same as the reflected edge for symmetric relations. A set of VER-BOCEAN features were calculated for each target event pair within each of the temporal relations tasks. Each verb was lemmatized using the WordNet lemmatizer in NLTK before being compared against the database. Rather than fo-cusing only on HAPPENS-BEFORE relation as in Mani et al (2006), we consider all five verb rela-tions in two different versions, unweighted and weighted. The unweighted version is a binary feature indicating the existence of an arc between the two target verbs in VERBOCEAN. In the weighted version, the existence of an arc is weighted by the associated confidence score.  In addition to VerbOcean, WordNet was used for its conceptual relations. WordNet is a large lexical database, which contains information on verbs, nouns, adjectives and adverbs, grouped into hierarchically organized cognitive synonym 
                                                2 Examples are taken from http://demo.patrickpantel.com/Content/Verbocean/. 
Relation Example  SIMILARITY ?? produce :: create STRENGTH ? wound :: kill ANTONYMY ? open :: close  ENABLEMENT  fight :: win HAPPENS-BEFORE ? buy :: own  Table 1: Semantic relations between verbs in VERBOCEAN (? and ? denotes symmetric and transitive closure, respectively, holds for the given relation)2 
342
sets (synsets). WordNet was accessed through the WordNetCorpusReader module of NLTK. For each target event pair within each of the temporal relations tasks, a semantic distance be-tween the associated tokens was computed using the path-similarity metric present within the API. The synset chosen was simply the first synset returned by the reader. Similar to the VER-BOCEAN features, we consider both unweighted and weighted versions of the feature.   3 The Systems ML is a probabilistic extension of first-order logic that allows formulae to be violated. It as-signs a weight to each formula, reflecting the strength of the constraint represented by the for-mula. A Markov logic network (MLN) is a set of weighted first-order clauses, which, together with constants, defines a Markov network.  We constructed two systems, NCSU-INDI and NCSU-JOINT using an off-the-shelf tool for ML (Riedel, 2008). 3.1 NCSU-INDI NCSU-INDI consists of four independently trained MLNs, one for each task. Each MLN is defined by a set of local formulae that are con-junctions of predicates representing the features. An example local formula used for Task C is  eventTimex(e, t)  eventWord(e, w)            relEventTimex(e, t, r)        (1)  If a pair of event e and time expression t exists and the event consists of a word token w, for-mula (1) assigns a temporal relation t to the given pair of e and t with some weights. For each task, the features described in Sec-tion 2 were examined on a held-out development data set (about 10% of the training data) for their effectiveness in predicting temporal relations and removed if they do not improve the results. Ta-ble 2 lists the features actually used for the tasks. Interestingly, none of the time expression fea-tures were effective on the development data. 3.2 NCSU-JOINT As well as the local formulae from the four local MLNs, a set of global formulae are added to NCSU-JOINT as hard constraints to ensure the consistency between the classification decisions of local MLNs. For example, formula (2) ensures that if an event e1 happens before the document creation time (dct) and another event e2 happens 
after dct, then e1 happens before e2 and vice ver-sa.  relDctEvent(e1,t,BEFORE) relDctEvent(e2,t, AFTER)                         relEvents(e1, e2, BEFORE)       (2)  A set of global constraints is defined between Tasks C and F, D and F, as well as D and E, re-spectively. 4 Results and Discussion The predicted outputs from our systems exhibit mixed results. NCSU-INDI achieves the highest precision score on the test data for Task F by a relatively large margin (6%) from the second-place system, as well as the second highest preci-sion score on Task C, tied with three other sys-tems. Given the encouraging result for Task F, we would preliminarily conclude that the VE-BOCEAN relations are effective predictors of temporal relations between main and syntacti-cally dominated events. However, the same sys-tem does not achieve the same level of accuracy 
Task Feature C  D E F event-word ? ? ?e2 ?e1,e2 Event event-stem ? ? ?e1.e2 ?e1,e2 event-polarity ? ? ?e1.e2 ?e1,e2 event-modal ? ? ?e1.e2 ?e1,e2 event-pos ? ? ?e1.e2 ?e2 event-tense ?  ?e1.e2 ?e1,e2 event-aspect ? ? ?e1.e2 ?e1,e2 
Event  Attribute 
event-class ? ? ?e1.e2 ?e1,e2 timex-word     Timex timex-stem     timex-type     Timex  Attribute timex-value     pos  ?e ?e1.e2  gov-prep ?e,t ?e ?e1.e2 ?e1,e2 gov-verb ?e,t ?e ?e1.e2 ?e1,e2 
Syntactic Parse 
gov-verb-pos ?e,t  ?e1.e2 ?e1,e2 verb-rel    ? Verb-Ocean verb-rel-w   ?  word-dist   ?  WordNet word-dist-w      Table 2: Features used for each task (subscripts e and t mean event and time expression, re-spectively. Subscripts e1 and e2 mean the first and the second main events for the Task E and the main and the syntactically dominated events for the Task F, respectively)   
343
for Task E, even though it is closely related to Task F. The major difference between the mod-els of Task E and F is that the Task E model uses weighted VERBOCEAN relations along with a WordNet feature, while the Task F model uses unweighted VERBOCEAN relations without the WordNet feature. We suspect these two features might negatively impact the classification deci-sions on the test data, even though they prelimi-narily appeared to be effective predictors on the development data.  NCSU-JOINT also yields mixed results. The performance on both Task D and F dramatically drops with the joint modeling approach, while there is a modest improvement on Task E. Man-ual examination of the results on the test data revealed that the majority of the relations in Task D and F were classified as OVERLAP, which may be due to overly strict global constraints; rather than violating global constraints, the system re-sorted to rather neutral predictions.  5 Conclusions Temporal event order recognition is a challeng-ing task. Using basic, syntactic, and lexical rela-tion features, we built two systems with ML: NCSU-INDI models each subtask independently, and NCSU-JOINT models all four tasks jointly. NCSU-INDI was most effective in predicting temporal relations between main events and syn-tactically dominated events (66% precision), as well as temporal relations between time expres-sions and events (63% precision). Future direc-tions include conducting a more rigorous exami-nation of the predictive power of the features, as well as the impact of global formulae for the joint model.  Acknowledgments This research was supported by the National Sci-ence Foundation under Grant IIS-0757535.  Any opinions, findings, and conclusions or recom-mendations expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.  
References  R. Agrawal, S. Dar, and H. V. Jagadish. 1990. Direct transitive closure algorithms: design and perform-ance evaluation. ACM Transactions on Database Systems, 15(3): 427-458. S. Bethard and J. H. Martin. 2007. CU-TMP: tempo-ral relation classification using syntactic and se-mantic features. In Proceedings of the 4th Interna-tional Workshop on Semantic Evaluations, pages 129-132, Prague, Czech Republic. E. Charniak. 2000. A maximum-entropy-inspired parser. In Proceedings of the 1st North American chapter of the Association for Computational Lin-guistics conference, pages 132-139, Seattle, WA. Y. Cheng, M. Asahara, and Y. Matsumoto. 2007. NAIST.Japan: Temporal relation identification us-ing dependency parsed tree. In Proceedings of the 4th International Workshop on Semantic Evalua-tions, pages 245-248, Prague, Czech Republic. T. Chklovski and P. Pantel. 2004.VerbOcean: Mining the Web for Fine-Grained Semantic Verb Rela-tions. In Proceedings of Conference on Empirical Methods in Natural Language Processing, pages 33-40, Barcelona, Spain. C. Fellbaum. 1998. WordNet: An Electronic Lexical Database. Cambridge, MA: MIT Press. E. Loper and S. Bird. 2002. NLTK: The Natural Lan-guage Toolkit. In Proceedings of ACL Workshop on Effective Tools and Methodologies for Teaching Natural Language Processing and Computational Linguistics, pages 62?69, Philadelphia, PA. I. Mani, M. Verhagen, B. Wellner, C. M. Lee, and J. Pustejovsky. 2006. Machine learning of temporal relations. In Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Compu-tational Linguistics, pages 753-760, Sydney, Aus-tralia. M. Richardson and P. Domingos. 2006. Markov Log-ic Networks. Machine Learning, 62(1): 107-136. 
S. Riedel. 2008. Improving the accuracy and effi-ciency of MAP inference for Markov Logic. In Proceedings of the 24th Conference in Uncertainty in Artificial Intelligence, pages 468-475, Helsinki, Finland. K. Yoshikawa, S. Riedel, M. Asahara, and Y. Matsu-moto. 2009. Jointly Identifying Temporal Relations with Markov Logic. In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Nat-ural Language Processing of the AFNLP, pages 405-413, Suntec, Singapore. 
Precision / Recall (%) System Task C Task D Task E Task F NCSU-INDI 63/63 68/68 48/48 66/66 NCSU-JOINT 62/62 21/21 51/51 25/25  Table 3: Accuracy of the systems on each task 
344
Proceedings of SIGDIAL 2010: the 11th Annual Meeting of the Special Interest Group on Discourse and Dialogue, pages 75?78,
The University of Tokyo, September 24-25, 2010. c?2010 Association for Computational Linguistics
Exploring the Effectiveness of Lexical Ontologies                                                    for Modeling Temporal Relations with Markov Logic 
  Eun Y. Ha, Alok Baikadi, Carlyle J. Licata, Bradford W. Mott, James C. Lester Department of Computer Science North Carolina State University Raleigh, NC, USA {eha,abaikad,cjlicata,bwmott,lester}@ncsu.edu     Abstract Temporal analysis of events is a central problem in computational models of dis-course. However, correctly recognizing temporal aspects of events poses serious challenges. This paper introduces a joint modeling framework and feature set for temporal analysis of events that utilizes Markov Logic. The feature set includes novel features derived from lexical on-tologies. An evaluation suggests that in-troducing lexical relation features im-proves the overall accuracy of temporal relation models. 1 Introduction Reasoning about the temporal aspects of events is a critical task in discourse understanding. Temporal analysis techniques contribute to a broad range of applications including question answering and document summarization, but temporal reasoning is complex. A recent series of shared task evaluation challenges proposed a framework with standardized sets of temporal analysis tasks, including identifying the temporal entities mentioned in text, such as events and time expressions, as well as identifying the tem-poral relations that hold between those temporal entities (Pustejovsky and Verhagen, 2009).   Our previous work (Ha et al, 2010) addressed modeling temporal relations between temporal entities and proposed a supervised machine-learning approach with Markov Logic (ML) (Richardson and Domingos, 2006). As novel fea-tures, we introduced two types of lexical rela-tions derived from VerbOcean (Chklovski and Pantel, 2004) and WordNet (Fellbaum, 1998). A 
preliminary evaluation showed the effectiveness of our approach. In this paper, we extend our previous work and conduct a more rigorous evaluation, focusing on the impact of joint opti-mization of the features and the effectiveness of the lexical relation features for modeling tempo-ral relations. 2 Related Work Recently, data-driven approaches to modeling temporal relations for written text have been gaining momentum. Boguraev and Ando (2005) apply a semi-supervised learning technique to recognize events and to infer temporal relations between time expressions and their anchored events. Mani et al (2006) model temporal rela-tions between events as well as between events and time expressions using maximum entropy classifiers. The participants of TempEval-1 in-vestigate a variety of techniques for temporal analysis of text (Verhagen et al, 2007).  While most data-driven techniques model temporal relations as local pairwise classifiers, this approach has the limitation that there is no systematic mechanism to ensure global consis-tencies among predicted temporal relations (e.g., if event A happens before event B and event B happens before event C, then A should happen before C). To avoid this drawback, a line of re-search has explored techniques for the global optimization of local classifier decisions. Cham-bers and Jurafsky (2008) add global constraints over local classifiers using Integer Linear Pro-gramming. Yoshikawa et al (2009) jointly model related temporal classification tasks using ML. These approaches are shown to improve the ac-curacy of temporal relation models. Our work is most closely related to Yoshikawa et al (2009) in that ML is used for joint model-
75
ing of temporal relations. We extend their work in three primary respects. First, we introduce new lexical relation features. Second, our model addresses a new task introduced in TempEval-2. Third, we employ phrase-based syntactic features (Bethard and Martin 2007) rather than depend-ency-based syntactic features. 3 Data and Tasks We use the TempEval-2 data for English for both training and testing of our temporal relation models. The data includes 162 news articles (to-taling about 53,000 tokens) as the training set and another 11 news articles as the test set. The corpus is labeled with events, time expressions, and temporal relations. Each labeled event and time expression is further annotated with seman-tic and syntactic attributes. Six types of temporal relations are considered: before, after, overlap, before-or-overlap, overlap-or-after, and vague. Consider the following example from the TempEval-2 data, marked up with a time expres-sion t1 and three events e1, e2, and e3, where e1 and e2 are the main events of the first and the second sentences, respectively, and e3 is syntac-tically dominated by e2. But a [minute and a half]t1 later, a pilot from a nearby flight [calls]e1 in. Ah, we just [saw]e2 an [explosion]e3 up ahead of us here about sixteen thousand feet or something like that. In the first sentence, t1 and e1 are linked by a temporal relation overlap. Temporal relation af-ter holds between the two consecutive main events: e1 occurs after e2. The main event e2 of the second sentence overlaps with e3, which is syntactically dominated by e2. In this paper, we focus on three subproblems of the temporal relation identification task as de-fined by TempEval-2: identifying temporal rela-tions between (1) events and time expressions in the same sentence (ET); (2) two main events in consecutive sentences (MM); and (3) two events in the same sentence when one syntactically dominates another (MS), which is a new task in-troduced in TempEval-2. 4 Features Surface features include the word tokens and stems of the words. In the TempEval-2 data, an event always consists of a single word token, but 
time expressions often consist of multiple tokens. We treat the entire string of words in a given time expression as a single feature. Semantic features are the semantic attributes of individual events and time expressions de-scribed in Section 3. In this work, we use the gold-standard values for these features that were manually assigned by human annotators in the training and the test data.  Syntactic features include three features adopted from Bethard and Martin (2007): gov-prep, any prepositions governing the event or time expression (e.g., ?for? in ?for ten years?); gov-verb, the verb governing the event or time expression; gov-verb-pos, the part-of-speech (pos) tag of the governing verb. We also consider the pos tag of the word in the event and the time expression. Lexical relations are the semantic relations be-tween two events derived from VerbOcean (Chklovski and Pantel, 2004) and WordNet (Fellbaum, 1998). VerbOcean contains five types of relations (similarity, strength, antonymy, en-ablement, and happens-before) that commonly occur between pairs of verbs. To overcome data sparseness, we expanded the original VerbOcean database by calculating symmetric and transitive closures of key relations. With WordNet, a se-mantic distance between the associated tokens of each target event pair was computed. 5 Modeling Temporal Relations with Markov Logic ML is a statistical relational learning framework that provides a template language for defining Markov Logic Networks (MLNs). A MLN is a set of weighted first-order clauses constituting a Markov network in which each ground formula represents a feature (Richardson and Domingos, 2006). Our MLN consists of a set of formulae com-bining two types of predicates: hidden and ob-served. Hidden predicates are those that are not directly observable during test time. A hidden predicate is defined for each task: relEventTimex (temporal relation between an event and a time expression), relMainEvents (temporal relation between two main events), and relMainSub (temporal relation between a main and a domi-nated event). Observed predicates are those that can be fully observed during test time and repre-sent each of the features described in Section 4.  The following is an example formula used in our MLN: 
76
eventTimex(d, e, t)  eventWord(d, e, w)            relEventTimex(d, e, t, r)       (1) The predicate eventTimex(d, e, t) represents the existence of a candidate pair of event e and time expression t in a document d. Given this candi-date pair, formula (1) assigns weights to a tem-poral relation r whenever it observes a word to-ken w in the given event from the training data. This formula is local because it considers only one hidden predicate (relEventTimex). In addition to local formulae, we also define a set of global formulae to ensure consistency be-tween local decisions: relEventTimex(d, e1, t, r1)  relEventTimex(d, e2, t, r2)  relMainSub(d, e1, e2, r3)           (2) Formula (2) is global because it jointly concerns more than one hidden predicate (relEventTimex and relMainSub) at the same time. This formula ensures consistency between the predicted tem-poral relations r1, r2, and r3 given a main event e1, a syntactically dominated event e2, and a time expression t shared by both of these events. Two additional global formulae (3) and (4) are simi-larly defined to ensure consistency as below.  relMainSub(d, e1, e2, r3)  relEventTimex(d, e2, t, r2)    relEventTimex(d, e1, t, r1)       (3) relMainSub(d, e1, e2, r3)  relEventTimex(d, e1, t, r1)    relEventTimex(d, e2, t, r2)       (4) 6 Evaluation To evaluate the proposed approach, we built and compared two models: one model (NoLex) used all of the features described in Section 4 except for the lexical relation features, and the other model (Full) included the full set of features. The features were generated using the Porter Stemmer and WordNet Lemmatizer in NLTK (Loper and Bird, 2002) and the Charniak Parser (Charniak, 2000). The semantic distance between two word tokens was computed using the path-similarity metric provided by NLTK. All of the models were constructed using Markov TheBeast (Riedel, 2008) The feature set was optimized for each task on a held-out development data set consisting of approximately 10% of the entire training set (Ta-ble 1). Our previous work (Ha et al, 2010) ob-served that a local optimization approach that selects for each individual task (i.e., each hidden predicate in the given MLN) in isolation from the other tasks could harm the overall accuracy of a joint model because of resulting inconsistencies 
among individual tasks. In the new experiment described in this section, features were selected for each task to improve overall accuracy of the joint model combining all three tasks, similar to Yoshikawa et al (2009).  Table 2 reports the resulting performance (F1 scores) of the models. To isolate the potential effects of global constraints, we first compare the accuracies of the Full and the NoLex model, av-eraged from a ten-fold cross validation on the training data before global constraints are added. Full achieves relative 12% and 3% improve-ments over NoLex for temporal relation between events and time expressions (ET) and between two main events (MM), respectively. The im-provement for MM was statistically significant (p<0.05) from a two-tailed paired t-test. Note that the ET task itself does not use lexical rela-tion features but still achieves an improved result in Full over NoLex. This is an effect of joint modeling. There is a slight degradation (relative 2%) in the accuracy for temporal relations be-tween main and syntactically dominated events (MS). Overall, Full achieves relative 5% im-provement over NoLex. A similar trend of per-formance improvement in Full over NoLex was observed when the global formulae were added to each model. The second column (Global Con-straints) of Table 2 compares the two models trained on the entire training set and tested on the test set after the global formulae were added. However, no statistical significance was found on these improvements. Compared to the state-
Task Feature ET MM MS event-word ? ? ? event-stem ? ? ? timex-word ?   
Surface Features 
timex-stem ?   event-polarity ? ? ? event-modal ? ? ? event-pos ? ?   ?* event-tense ? ? ? event-aspect ? ? ? event-class ? ? ? timex-type ?   
Semantic Attributes 
timex-value ?   pos ? ? ? gov-prep ? ? ? gov-verb ? ? ? 
Syntactic Features 
gov-verb-pos ? ? ? verb-rel  ? ? Lexical  Relations word-dist  ?   Table 1: Features used to model each task. *The feature is extracted only from the second event in the pair being compared. 
77
of-the-art results achieved by the TempEval-2 participants, Full achieves the same or better re-sults on all three addressed tasks. 7 Conclusions Temporal relations can be modeled with Markov Logic using a variety of features including lexi-cal ontologies. Three tasks relating to the Tem-pEval-2 data were addressed: predicting tempo-ral relations between (1) events and time expres-sions in the same sentence, (2) two main events in consecutive sentences, and (3) two events in the same sentence when one syntactically domi-nates the other. An evaluation suggests that util-izing lexical relation features within a joint mod-eling framework using Markov Logic achieves state-of-the-art performance. The results suggest a promising direction for future work. The proposed approach assumes events and time expressions are already marked in the data. To construct a fully automatic tempo-ral relation identification system, the approach needs to be extended to include models that rec-ognize events and time expressions in text as well as their semantic attributes. A data-driven approach similar to the one described in this pa-per may be feasible for this new modeling task. It will entail exploring a variety of features to fur-ther understand the complexity underlying the problem of temporal analysis of events. Acknowledgments This research was supported by the National Sci-ence Foundation under Grant IIS-0757535. References  S. Bethard and J. H. Martin. 2007. CU-TMP: Temporal relation classification using syntactic and semantic features. In Proceedings of the 4th Inter-national Workshop on Semantic Evaluations, pages 129-132, Prague, Czech Republic. B. Boguraev and R. K. Ando. 2005. TimeML-compliant text analysis for temporal reasoning. In Proceedings of the 19th International Joint Conference on Artificial intelligence, pages 997-1003, Edinburgh, Scotland.  N. Chambers and D. Jurafsky. 2008. Jointly combin-ing implicit constraints improves temporal order-ing. In Proceedings of the Conference on Empiri-cal Methods in Natural Language Processing, pages 698-706, Honolulu, HI. E. Charniak. 2000. A maximum-entropy-inspired parser. In Proceedings of the 1st North American Chapter of the Association for Computational Lin-
Chapter of the Association for Computational Lin-guistics Conference, pages 132-139, Seattle, WA. T. Chklovski and P. Pantel. 2004. VerbOcean: Mining the web for fine-grained semantic verb relations. In Proceedings of the Conference on Empirical Meth-ods in Natural Language Processing, pages 33-40, Barcelona, Spain. E. Ha, A. Baikadi, C. Licata, and J. Lester. 2010. NCSU: Modeling temporal relations with Markov Logic and lexical ontology. In Proceedings of the 5th International Workshop on Semantic Evaluation, pages 341-344, Uppsala, Sweden. E. Loper and S. Bird. 2002. NLTK: The natural lan-guage toolkit. In Proceedings of ACL Workshop on Effective Tools and Methodologies for Teaching Natural Language Processing and Computational Linguistics, pages 62-69, Philadelphia, PA. J. Pustejovsky and M. Verhagen. 2009. SemEval-2010 task 13: Evaluating events, time expressions, and temporal relations. In Proceedings of the Workshop on Semantic Evaluations: Recent Achievements and Future Directions, pages 112-116, Boulder, CO. S. Riedel. 2008. Improving the accuracy and effi-ciency of MAP inference for Markov Logic. In Proceedings of the 24th Conference in Uncertainty in Artificial Intelligence, pages 468-475, Helsinki, Finland. M. Richardson and P. Domingos. 2006. Markov Logic networks. Machine Learning, 62(1):107-136. M. Verhagen, R. Gaizauskas, F. Schilder, M. Hepple, G. Katz, and J. Pustejovsky. 2007. Semeval-2007 task 15: Tempeval temporal relation identification. In Proceedings of the 4th International Workshop on Semantic Evaluations, pages 75-80, Prague, Czech Republic. K. Yoshikawa, S. Riedel, M. Asahara, and Y. Matsu-moto. 2009. Jointly identifying temporal relations with Markov Logic. In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pages 405-413, Suntec, Singapore. 
No Global Constraints Global Constraints Task NoLex Full NoLex Full State-of-the-art Overall 0.60 0.63 (+5%) 0.59 0.61 (+3%) NA ET 0.52 0.58 (+12%) 0.62 0.65 (+5%) 0.63 MM 0.65 0.67 (+3%)* 0.52 0.56 (+8%) 0.55 MS 0.66 0.65 (- 2%) 0.66 0.66 (+0%) 0.66 Table 2. Performance comparison between mod-els in F1 score. *Statistical significance (p<0.05) 
78
