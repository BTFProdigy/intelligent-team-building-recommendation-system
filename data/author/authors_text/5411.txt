Rapid Development of Translation Tools: 
Appl ication to Persian and Turkish 
Jan W. Amtrup~ Karine Megerdoomian and Rdmi Zajac 
Comput ing  Research  Lab  
New Mex ico  S ta te  Un ivers i ty  
{j  amtrup ,  kar  ?ne,  za j  ac}Ocr l ,  nmsu. edu 
Abstract 
The Computing Research laboratory (CRL) is devel- 
oping a machine translation toolkit that allows rapid 
deployment of translation capabilities. This toolkit 
has been used to develop several machine translation 
systems, including a Persian-English and a Turkish- 
English system, which will be demonstrated. We 
present he architecture of these systems as well as 
the development methodology. 
1 Introduction 
At CRL, one of the major research topics is the de- 
velopment and deployment of machine translation 
systems for low-density languages in a short amount 
of time. As the availability of knowledge sources 
suitable for automatic processing in those languages 
(e.g. Persian, Turkish, Serbo-Croatian) is usually 
scarce, the systems developed have to assist the ac- 
quisition process in an incremental fashion, starting 
out fl'om low-level translation on a word-fo>word 
basis and gradually extending to the incorporation 
of syntactic and world knowledge. 
The tasks and requirements for a machine trans- 
lation enviromnent that supports linguists with the 
necessary tools to develop and debug increasingly 
complex knowledge about a specific language in- 
elude: 
? The development of a bilingual dictionary that 
is used for initial basic translation and can fur- 
ther be utilized in the more complex translation 
system stages. 
? Methods to describe and process morpholog- 
ically rich languages, either by integrating 
already existing processors or by developing 
a morphologicM processor within the system 
framework. 
? Glossing a text to ensure the correctness ofmor- 
phological analysis and the colnpleteness of the 
dictionary for a given corpus. 
? Processors and grammar development tools for 
the syntactic analysis of the source language. 
? In order to allow rapid development cycles, the 
translation system itself has to be reasonably 
fast and provide the user with a rich envi- 
ronment for debugging of linguistic data and 
knowledge. 
? The system used for development must be con- 
figurable for a large variety of tasks that emerge 
during the development process. 
We have developed a component-based transla- 
tion system that meets all of the criteria men- 
tioned above. In the next section, we will describe 
the m:chitecture of the system MEAT (Multilingual 
Environment for Advanced Trmlslations) , which is 
used to translate between a number of languages 
(Persian, Turkish, Arabic, Japanese, Korean, Rus- 
sian, Serbo-Croatian and Spanish) and English. In 
the following sections, we will describe the general 
development cycle for a new language, going into 
nmre detail for two such languages, Persian and 
Turkish. 
2 Genera l  a rch i tec ture  
MEAT is a publicly available nvironmeut I hat as- 
sists a linguist in rapidly developing a machine trans- 
lation system, in order to keep the overhead in- 
volved in learning and using the system as low as 
possible, the linguist uses use simple yet powerful ba- 
sic data and control structures. These structures are 
oriented towards contemporary linguistic and con> 
putationM linguistic theories. 
In MEAT, linguistic knowledge is entirely repre- 
sented using Typed Feature Structures (TFS) (Car- 
penter, 1992; Zajac, 1992), the most widely used rep- 
resentational formalism today. We developed a fast 
implementation of Typed Feature Structm:es with 
appropriateness, based on an abstract machine view 
(eft Carpenter and Qu (1995), Wintner and Francez 
(1995). Bilingual dictionary entries as well as all 
kinds of rules (morphology, syntax, transfer, gener- 
ation) are expressed as feature structures of specific 
types, so only one description language has to be 
mastered. This usually leads to a rapid familiarity 
with the system, yielding a high productivity almost 
from the start. 
i ht tp ://crl.nmsu. edu/~j aratrup/Meat 
982 
Runtime linguistic objects (words, syntactic struc- 
tures etc.) are stored in a central data struct.ure. 
We use an extension of the well-known concept of 
a chart (Kay, 1973) to hold all temporary and fi- 
nal results. As nmltiple components have to process 
different origins of data, the chart is equipped with 
several different layers, each of which denotes a spe- 
cific aspect of processing. Thus, at every point dur- 
ing the runtime of the system, the contents of the 
chart reflect what operations have been performed 
so far (Amtrup, 1999). The complete chart is avail- 
able to the user using a graphical interface. This 
chart browser can be used to exactly trace why a 
specific solution was produced, a significant aid in 
developing and debugging rammars. 
MEAT addresses the necessity of carrying out sev- 
eral different asks by providing a component-based 
architecture. The core of the system consists of the 
formalism and the chart data representation. All 
processing components arc implemented in the form 
of plug-ins, components that obey a small interface 
to comumnicate with the main application. The 
choice of which components to apply to an actual 
input, the order in which the components are pro- 
cessed, and individual parameters for components 
can be specified by the user, allowing for a highly 
flexible way of configuring a machine translation (or 
word-lookup, of glossing etc.) system (el. Amtrup 
et al (2000) for a more detailed description of the 
architecture). 
The MEAT system is completely implemented in
G++,  resulting in a relatively tast mode of op-- 
eration. The implenrentation of the TFS formal- 
ism supports between 3000 and 4500 unifications 
per second, depending on the application it is used 
in. Translating an average length sentence (20-25 
words) takes about 3.5 seconds on a Pentium PII400 
(in non-optimized ebug mode). The system sup.- 
ports Unix (tested on Solaris and Linux) and Win-- 
dows95/98/NT. We use Unicode to represent charac- 
ter data, as we face translations of several different, 
non-European languages with a variety of scripts. 
3 Development cycle 
One of the main requirement facilitating the deploy- 
ment of a new language with possibly scarce pre- 
existing resources is the ability to incrementally de- 
velop knowledge sources and translation capability 
(the incremental pproach to MT development is de- 
scribed in (Zajac, 1999)). In the case of translation 
sy,~tems at our laboratory, we mostly translate into 
English. Thus, a complete s t of English resources i
already available (dictionary, generation grammars 
and morphological generation) and does not need to 
be developed. 
The first step in bootstrapping a running system 
is to build a bilingual dictionary. The work on the 
dictionary usually continues throughout he devel.- 
opment process of higher level knowledge sources. 
We use dictionaries where entries are encoded as flat 
feature-value pairs, as shown in Figure 1. 
$Headword OJ lyb hftglnh 
$Category Noun 
$Number Plural 
$Regular False 
$English Seven Wonder<nc plur>; 
$$ 
Figure h A Persian--English dictionary entry. 
While this is already enough information to faciL 
irate a basic word-.for-word translation, in general 
a morphological analyzer for the source language is 
needed to translate real-world text. For MEAT, one 
can either import the results of an existing morpho- 
logical analyzer, or use the native description lan- 
guage, based on a finite-state transducer using char- 
acters as left projections and typed feature struc- 
tures as right projections (Zajac, 1998). After com- 
pleting the morphological nalysis of the source lan- 
guage and specifying the mapping of lexical features 
to English, glossing is available. The Glosser is an 
MEAT application consisting of morphological nal- 
ysis of source language words, tbllowed by dictionary 
lookup for single words and compounds, and the 
translation into English inflected word forms. An 
example of the interface \[br the glosser is shown in. 
l?igure 2. 
. . . . . . . . . . . . . . . . . . . . . .  
File Edit View G0 C0mlaun\[c~2ot Helo 
- :  - "7 -  . . . .  
~' ,~3~ t~l ?ndont ts ia ;  
J and; 
~3/z~}J_~ cont ract  j 
~ @rant; ~st i t~o;  p~.ttir~/; 
&~- to; atl in; on; for; 
)~  )~ East TJ2~O=; 
b .; 
L~I  mi~j~at~r~; approval.; slanatu~; 
u~ wine; 
~I~E dig; pull ofl; do; 
~ J / i  IndonQ=ia; 
J an~ 
3J~i today; t odag; 
&~a;(&~3; (Ve?\ ]  . . . . . . . . .  
diq; pu l l  o f f ;  
Pre~ent ;  Th/x~;  P lura l _  
~c~ive; S~o3~ctive 
1~ unstgned Javn ~pFl~t Whqd~v 
'c-A i . . . .  iAp~a taeat~p~ ;~ r,~,~ '.~ " -  -5 "J ~ -2 -  
Figure :2: The Glosser interface 
The next step in developing a nmdium-.quality, 
broad coverage translation system is to develop 
983 
.-,C _2227.7_Z:22_C-_~TfT2L27AL--Z:ZZT~:7:hfZ.._~\[_ 2 -,~Nv,~-:c~_ j~ ~-::27 _~ ~ T--_ZiLT.\[  Z.::__22 2 7J:.7-.-_L_2_..2Y Y_~:2-__-? . I . :  .4_ 
I 
Q~II% ; 
Vtn'Ilces 
I -dgeS 
161Z 
Sta~.  Ima 
i0 ...... 
N~k i 
~-~: : -2 -L77  ............ 7"-"---,A,/"-->..# / 
_--J - - .  " -" , , '> -~ / j~<-~2 '  
"-. / ,",  . ->%/" . / . .C , -< .~Z- - ,  ~ . .  / , ~ . . . . , . , .  _ . , .~ .~ 
\ // ' .  I /  ,'::;G ~ > "';-5-"..'~,~ .... 
~1/5 I/' /.'-'/2?" ~51"-'2-.~,-I-~.:--.<<." 
" II I "  t /  ':" - "  1/.-~2,./-~ / . /~ . . , .  7 
\ 1' ,/ //.$.-'L>:'7..~;v, .... IK,*; '  .'%-,~ - 
\ f/ ~?,~" ~,h'~ 2 ...... ~,?7:-.. \ 
by lqYy  Iz sh  mD l)y'~ 
~.~'~c'_. -~ .~_~ . . . .  :--. "-.. ;.q<*j -.. "-, %,.  ~.* 
....... ~" 7-Yb?:--'" ...... :-v~<~, .... "-3,.',q../" 
_ _~,~7<---7..2;.=~ . . . . . . . . .  ~ ~- . .~ .  ~_ .  , zv%,>,y .  x 'q . , , \  . . . . .  -~- - 
~ \ ,x~* .~ J~"  --.. ,, . . . . . .  ---.-?.. v:>:< "-~--'>. ";~.y" _ 
I f z ly "s  ^s l Iydy  y l f th  Is /  v 
I 
83 gg g9 ?3  ?7 6'~ fib g6 100 l i l t  I'" 
Cam lamt: Sentence \[ . . . . .  i- 
. . . . . . . . . . .  l : \ [aer . l~ .~M~lra~ ounaTZeel \[Ad\]ecti'3e" \[ I \[ \[Pre m~l ta0nA.  \ ]~ ' \ ]N '  \] ICPoIIIP \[ \[ \[ \[ \[~lu~er a l \]l'!u~' I Nu:'~ \] $"" : "Verh lUP lS  ", \[NounlN' INPo \[ \[ \[Noun\]If' I NP0l,'ct; ~ IPP IX IXP \[ \[ \[ \[M l' i 
~ :lmr.l:~le ..~e rdetg: e he~d VerbPhraae I
a~er . rml~.~nm,~ head f:nt~y( ~ "' 
form g,,~m I 
4:per.R111e. Se.te|i?~ ;~orph Ve ;.bllo i:pholo~-i \[ 
,~ ,~ ,  \[blle. ,~e,~ |~Ice lex Ve rha\]J, ox~call 
\[i:laa i*. FRIIIt. ~.!~, telll?~ ~ poa 9eeb. 
7:ger .Ru le .~e. te i *ce i  p~, : : )entS  te~. "y lh% 
regul.a," T~uel .  
I I :p~ r.  l'Illl~l. ~n  ll~llrA~ infl Ve~bal.lnf kect\].on\[ 
,~: NF.  ~t1111. ~\[~n ~t II g ~ voice Undeflned, 
t lhper.Rtl leo~len~m;e clztzc : C?.Jtic\[ 
function : Nulll, 
11:~.Rtde.8~It~I1C8 tense ' Part ic lp1~L 
IZ:per.RtdmS6~ten~s I causat lw  False, I 
1:J - -e l '  ~UlI~ ~lall|/eligli~ i , person  Unde~:tned. , \[ 
. 4' ? ' ~ood Un(~f~.ned. { 
14 : l l l~? .Rt~e 'Se"~t tce  \[ nu~erAg~eement  Undefined, 
nege, t lon  Fa lse \ ]  l ,  
, og~ Or rhography ! 
key : "ylftn", * 
!~ \[:--~ Li . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  ~ .... 
............... . . . . . . . . . . . . . . . . . . . . . . . .  . . . . . . .  :.::: : : : : _ : : .  :: .:: : -= ._ :  ....... : . . . .  - :  =-  :_-.::_ .:_ :. : : _  ' : : - : : - _  _: .  _ _ :  :_;: . :_ ._  _ -_ . _=>-:_ -  2 : : J  
Figure 3: Viewing  a eomple :~c  aual&,;is 
knowledge sources  for the stt?uctural analysis of in- 
put sentences. Mt';AT supports the use of modm 
lar mfific.ation grammars, which facilitate,," develop. 
merit and debugging. E;ach grammar module ca,~. be 
developed and tested irJ isolation, the final system 
applying each gtammar in a linear fashion (Zajac 
and Amtrup, 2000). The main. component used is a 
bidirectional island-.parser (cf. Stock et al (1988)) 
for unification-based gra.mmars. The grammar ules 
are usually writtet~ in the style of context-free rules 
with  \ [~ssoc ia ted  unification constraints as shown i~ 
Figure 4. The rules allow for the specification of 
the right-hand side as a regular-.expression of feature 
structures. We plan to add more restricted types of 
grammars (e.g. based on finite-.state transducers) to 
give the linguist a richer choice of syntactic processes 
to choose from. 
For the time being, the transfer capabilities of the 
system are restricted to lexical transDr, as we have 
not finished the implementation f a complex trans- 
fer module. Thus, the grammar developer either 
needs to create structural descriptions that match 
the English generation, or the English generation 
grammar has to be modified for each language. 
At each point during the development of a trans-. 
Adj  ~ ::: ' i ;u :c , thdLc ;  \[ 
J im : i;u~:', g djBa~: \[ 
\ [ \ [c :x :}. !eAd : #Ld\ ] j  
g}pe{. : :  : '~adv\ ]  , 
#adv: : tl**. &dvg~Et;ry "Y" 
#ad. j ' : : :  i:.u:~.', gd jEnt : ! :y  
:>  
\ ] ;  
Figm'e 4: A Turldsh syntax rule 
lation syste.m, we consider it essential to be ahle 
not ouly to see the resuRs, but also to monitor 
the processing history of a result. Thus, th.e chart 
that leads 1;o the construction of all English o l t tp t l t  
can be viewed in order to examine all intermediate 
constructions. In the MEAT system, each module 
records various steps of computations in the chart 
which can be inspected statically after processing. A
unified data interface for all modules in the systein 
allows both the inspection of recorded internal data 
structures for each module (when it makes sen:-;e, 
984 
such aq ill a ch.art parser), aml tile im;pecticm of tit(.' 
input/ou?put of all module,';. The graphical i~terfa.ce 
used to view complex a.t~alyscs i.r; shown in Figure 3. 
d A.pp\] J .ca{; ions 
In this section, we give an overview of the capal)i!i. 
ti(~'; of MEA71' using ~wo (-l!ri{~.nt examples from work 
af, our laboratory. In the Shiraz pro jec t  ? (Amtrup 
ei; al., 2000), we developed a machine translatio~ 
sys tem from Farsi tO English, for which no previous 
knowledge sources were awdlable. We mainly target 
news material and the transl~tion of web pages. Tile 
Tm'kish~English ystem has been developed with the 
Expedition project a, an enterprise for the rapid de- 
velopment of MT systems for low-density languages. 
Botl /systems use a common user interface for ac~ 
cess to MEAT, which is shown in Figure 5. The 
MT systems are targeted t() the translation of newsy. 
paper text and other sources available online (e.g. 
web pages). The emphasis is therefore put ou exten+ 
sive coverage rather than very-+high quality transta+ 
tion+ Currently, we reach for bol;h systmns a level 
of quality that allows to assess in detail tile content 
of source texts, at the expense of some rmfelicitous 
English. 
r~ t a ~  
. . . . . . . . . . . . .  D vc~lv~ {ll;t,~c s:/Im~oa~tj am~ In Iplr,eanhltm-! C fl t g '~A.  t..R ~d~q~ ~f~l  ,+01. bl t 
. . . . . . . . . . . . . . .  i?i ~ZL2Z -2-~?2-?.27 ~-+ ~2Z7-~ -_._ _L_,7 
. . . . . . . . . . . . . . . .  T~ak~tma 
c~,~ :\[iT~;i-;;,a;;~Eh Tg~GiTg~'TggU~..,.-gJ~ g ;gTJE.TKg7 \[y 
T7:2~: 7 7 ~ 7 ~ 7  : I}IC~W: CriaX~ =true\]( ocon0~, 
Dm ( rL~Rhlh ) I I 
' '  ~ " ~t" j C . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  \[ :  
~-~ ............................. s~,2~, ,~  . . . . .  
~ht~l~llt~a }lONer gx~cut in  9 llodu\[~ cll~rgS~v~r +~ 
. . . . . . . .  ~5:___.::~ . . . . . .  : \ [chartsauer  Size-ag, re~xde~t-S~, toCah,.O, C~U.,0 010a ' ? 
ht~l -~ IRt |~  Execut in~ Nodule su ' fce  I 
\[c+ Sueface0ener~nor  S tar t inq  t~ 1 +OZ L~t s 
t~tl-O3,lxt ": : S~tcfGcn:Ur f~ e0onor~orsiz~+0E ~=~tdeltt=~K'znL~h~d" to~cl-0,  ~pII-00{\]0s . J  
hl~*1-0/'bct I r }Tot~\]." g~ze=S2R, re~id~nt-48g, toeal~99800 C~J=2 3~0s (croat ~/  
\ ] Iu , - .+ ;  =~ , i ~ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  
Figure 5: The MEAT user interface 
4,1 Persian..+Englisb MT 
The input for the Persian-English system is usu- 
ally taken from web pages (on-line news articles), 
although plain text can be handled as well. The im 
ternal encoding is Unicode, and various codeset con- 
w.'rters are available; we also developed an ASCII- 
based transliteration to facilitate the easy acquisi~ 
tion of dictionaries and grammars (see Figure 1). 
The dictionary consists of approximately 50,000 en+ 
tries, single words as well as multi-word compounds. 
Additionally, we utilize a multi-lingual onomasticon 
maintained locally to identify proper names. 
2http  : / / c r l .  ransu, edu/sh i raz  
3ht tp  : / / c r l .  nmsu. edu/exped i t  ion 
we developed a, morphological grammar for Per- 
siai~ using a unifies.lion-based formalism (Zajac, 
1998). A sample rule is showtt in Figure 6 (of. 
Megerdoomian (2000) for a more thorough descrip 
~ion of the Persian morphological analyzer). 
PresentStem = < 
Regu l  a rPx 'e  sent  S t  em 
< < <" In"  "y"?> 
per .  Verba l \ [ in f \ ] . . causat ive :  Trne\]> I
< per .Verba . \ ]o \ [ in f l . causat ive :  Fa lse\ ]> 
>>; 
Figu.re 6: A Persian morphological rule 
The knowledge sources for syntax were (manually) 
developed using a corpus of 3,000 tagged and brack- 
eted setrt, ences extracted h:om a 10MB corpus of Per.? 
sian news articles. We use three grammars, respon.- 
sible lor the attaetunent of auxiliaries to main verbs, 
the recognition and processing of light verb phenom-. 
ena, and phrasal and sentential syntax, respectively. 
The combined size is about 110 rules. The develop. 
ment of the Persian resources took several months, 
primarily due to the fact that the translation system 
was developed in parallel to the linguistic knowl.. 
edge. The Persian resources were developed by a 
team of one computational linguist (morphological 
and syntactic grammars, overall supervision ibr lan-- 
guage resources), and 3 lexicographers (dictionary 
and corpus annotation). 
4?2 'lti~urkish+-English MT 
Withii~ yet another project (Expedition), we devel- 
oped a machine translation system, for Turkish. This 
application functioned as a benchnrark on how much 
effort the building of a medium-quality system re-- 
quires, given that an appropriate framework is al-. 
ready available. 
For Turkish, we use a pre-existing morphologi- 
cal analyzer (Oflazer, 1994). Turkish shows a rich 
derivational and inflectional morphology, which ac- 
counts for most of the system development work 
that was necessary to build a wrapper for inte- 
grating the Turkish morphological analyzer in the 
system (approximatly 60 person-hours) 4. The de- 
velopment of the Turkish syntactic grammars took 
around 100 person-hours, resulting in 85 unification- 
based phrase structure rules describing the basics of 
Turkish syntax. The development of the bilingual 
Turkish-English dictionary had been going on for 
4The main problem dur ing the adaptat ion was the treat- 
ment  of derivational information, where the morphologically 
analyzed input does not conform exactly to the contents of 
the dictionary 
985 
some time prior to the application of MEAT, and 
currently contains approximately 43,000 headwords. 
5 Conc lus ion 
The development of automatic machine translation 
systems for several languages is a complicated task, 
even more so if it has to be done in a short amount 
of time. We have shown how the availability of a 
machine translation environment based on contem- 
porary computational linguistic theories and using 
a sound system design aids a linguist in building 
a complete system, starting out with relatively siln- 
ple tasks as word-for-word translation and increlnen- 
tally increasing the complexity and capabilities of 
the system. Using the current library of modules, it 
is possible to achieve a level of quality on par with 
the best transfer-based MT systems. Some of the 
strong points of the system are: (1) The system can 
be used by a linguist with reasonable knowledge of 
computational linguistics and does not require spe- 
cific programming skills. (2) It can be easily con- 
figured for building a variety of applications, includ- 
ing a complete MT system, by reusing a library of 
generic modular components. (3) It supports an in- 
crelnental develol)ment methodology which allows to 
develop a system in a step-wise fashion and enables 
to deliver rumfing systems early in the development 
cycle. (4) Based on the experiences in building the 
MT systems mentioned in the paper, we estimate 
that a team of one linguist and three lexicographers 
can build a basic transfer-based MT system with 
medium-size coverage (dictionary of 50,000 head- 
words, all most fi'equent syntactic onstructions in
the language) in less than a year. 
One major improve,nent of the system would be 
a nmre integrated test and debug cycle linked to a 
corpus and to a database of test items. Although ex- 
isting testing methodologies and tools could be used 
(l)auphin E., 1996; Judith Klein and Wegst, 1998), 
building test sets is a rather time-consulning task 
and some new approach to testing supporting rapid 
development of MT systems with an emphasis on 
wide coverage would be needed. 
References 
Jan W. Amtrup, Hmnid Mansouri Rad, Karine 
Megerdoomian, and Rdmi Zajac. 2000. Persian- 
English Machine Translation: An Overview of 
the Shiraz Project. Memoranda in Computer and 
Cognitive Science MCCS-00-319, Colnputing Re- 
search Laboratory, New Mexico State University, 
Las Cruces, NM, April. 
Jan W. Amtrup. 1999. Incrcmcntal Speech TraTtsla- 
tion. Nmnber 1735 in Lecture Notes in Artificial 
Intelligence. Springer Verlag, Berlin, Heidelberg, 
New York. 
Bob Carpenter and Yan Qu. 1995. An Abstract 
Machine for Attribute-Value Logics. In Proceed- 
ings of the ~th International Workshop on Pars- 
ing Technologies (II/VPT95), pages 59-70, Prague. 
Charles University. 
Bob Carpenter. 1992. The Logic of 2~ped Feature 
Structures. Tracts in Theoretical Computer Sci- 
ence. Cambridge University Press, Cambridge. 
Lux V. Dauphin E. 1996. Corpus-Based annotated 
Test Set for Machine Translation Evaluation by 
an Industrial User. In Proceedings of the 16th 
International Conference on Computational Lin- 
guistics, COLING-96, pages 1061-1065, Center 
for Sprogteknologi, Copenhagell, Demnark, Au- 
gust 5-9. 
Klaus Netter Judith Klein, Sabine Lehmann and 
Tillman Wegst. 1998. DIET in the context of MT 
evaluation. In Proceedings of KONVENS-98. 
Martin Kay. 1973. The MIND System. In. 
R. Rustin, editor, Natural Language Processing, 
pages 155-188. Algorithmic Press, New York. 
Karine Megerdoomian. 2000. Unification-Based 
Persian Morphology. In Proceedings of the CI- 
Cling 2000, Mexico City, Mexico, February. 
Kemal Oflazer. 1994. Two-level Description of 
Tnrkish MorI)hology. Literary and Linguistic 
Computing, 9(2). 
Oliviero Stock, Rino Falcone, and Patrizia Insin- 
namo. 1988. Island Parsing and Bidirectional 
Charts. In Proc. of the 12 t1~ COLING, pages 636- 
641, Budapest, Hungary, August. 
Shuly Wintner and Nissim Francez. 1995. Pars- 
ing with Typed Feature Structures. In Proceed- 
ings of the ~th International Workshop on Parsing 
Technologies (\]WPT95), pages 273 287, Prague, 
September. Charles University. 
Rdmi Zajac and Jan W. Amtrup. 2000. Modular 
Unification-Based Parsers. In Proc. Sizth lr~,tcrna- 
tional Workshop on Parsing Technologies, trento, 
Italy, February. 
Rdmi Zajac. 1992. Inheritance and Constraint- 
Based Grammar FormMislns. Computational Lin- 
guistics, 18(2):159-182. 
R&mi Zajac. 1998. Feature Structures, Unification 
and Finite-State Transducers. In FSMNLP'98, 
Intcrnational Workshop on Finite State Methods 
in Natural Language Processing, Ankara, ~lhlrkey, 
June. 
Remi Zajac. 1999. A Multilevel Frmnework for In- 
cremental Development of MT Systems. In Ma- 
chine Translation Summit VII, pages 131-157, 
University of Singapore, September 1.3-17. 
986 
Finite-State Morphological Analysis of Persian 
Karine Megerdoomian 
Inxight Software, Inc. 
500 Macara Avenue  
Sunnyvale, CA 94085, USA 
karinem@inxight.com 
University of California, San Diego 
Linguistics Department 
9500 Gilman Drive, #0108 
La Jolla, CA 92093, USA 
karinem@ling.ucsd.edu 
 
 
Abstract 
This paper describes a two-level 
morphological analyzer for Persian using a 
system based on the Xerox finite state tools. 
Persian language presents certain challenges to 
computational analysis: There is a complex 
verbal conjugation paradigm which includes 
long-distance morphological dependencies; 
phonological alternations apply at morpheme 
boundaries; word and noun phrase boundaries 
are difficult to define since morphemes may 
be detached from their stems and distinct 
words can appear without an intervening 
space. In this work, we develop these 
problems and provide solutions in a finite-
state morphology system. 
1 Introduction 
This paper describes the design of a two-level 
morphological analyzer for Persian developed at 
Inxight Software, based on Xerox finite-state 
technology (Beesley and Karttunen, 2001), by 
focusing on some of the issues that arise in a 
computational analysis of the language.  
Persian morphology raises some interesting 
issues for a computational analysis. One of the 
main challenges of Persian resides in the 
tokenization of the input text, since word 
boundaries are not always respected in written text. 
Hence, morphemes may appear detached from 
their stems while distinct tokens may be written 
without an intervening space. Furthermore, the use 
of the Arabic script and the fact that short vowels 
are not written and capitalization is not used create 
ambiguities that impede computational analysis of 
text. Persian includes complex tokens whereby two 
distinct part of speech items may be joined; these 
attaching elements (e.g., prepositions, pronominal 
clitics or verbs) should be treated as inflectional 
morphemes in the morphological analyzer. Persian 
does not have the problems that have been 
observed in Semitic languages such as the 
template-based morphology of Arabic, and is in 
general more concatenative. However, the verbal 
conjugation consists of a complex paradigm, which 
includes long-distance dependencies that may be 
problematic for a linear approach depending solely 
on surface forms. Finally, the phonetic 
representation of Persian nominals directly affects 
the phonological alternations applying at 
morpheme boundaries; however, the orthographic 
realization of certain words may not reflect their 
phonetics and require special manipulations to 
eliminate the ambiguities. 
Although there have been some significant 
studies in the area of parsing and syntactic analysis 
for Persian, very little work has been done on 
computational morphology in this language. In this 
paper, we elaborate on some of the challenges 
presented by a morphological analysis of Persian 
and discuss the solutions provided with a two-level 
finite-state formalism. 
2 System Description 
The Persian system is developed using Xerox 
Finite-State Technology. The lexicons and 
morphological rules are written in the format of 
lexc, which is the lexicon compiler (Karttunen and 
Beesley, 1992).  The lexicon and grammar are 
compiled into a finite-state transducer (fst) where 
the lower side consists of the input string and the 
upper side provides the baseform of the word with 
associated morphosyntactic features. In this 
system, the fsts for each part of speech category 
are created separately and then composed. 
Similarly, phonological rules are composed on the 
relevant fst, thus performing the required phonetic 
and phonological alternations on the word forms. 
The composition of all the part of speech 
transducers with the rules results in the final lexical 
transducer used for morphological analysis. Since 
all intermediate levels disappear during a 
composition, the final transducer consists of a 
single two-level fst with surface strings in the 
bottom and the morphological output on the top. 
Consider the simple lexc example below. This 
lexc consists of three small LEXICONs, beginning 
with the one named Root, which marks the start of 
the network. The lexicon class named Root 
includes three entries and each entry consists of a 
form and a continuation class.  
 
LEXICON Root 
dog Noun ; 
cat Noun ; 
laugh Verb ; 
 
LEXICON Noun 
+Plural:s # ; 
+Singular:0 # ; 
 
LEXICON Verb 
+Present:s # ; 
+Past:ed # ; 
+Gerund:ing # ; 
 # ; !empty string 
 
The forms, such as ?dog?, are interpreted by the 
lexc as a regular expression as in {d o g}. 
Continuation classes are used to account for word-
formation by capturing morphotactic rules. In the 
example under consideration, the string ?dog? is 
followed by the continuation class Noun. As the 
Noun lexicon shows, the rule allows ?dog? to be 
followed either by the morpheme ?s? or by a null 
morpheme represented as ?0?. The Noun 
continuation class maps the lower string ?s? to the 
+Plural tag on the upper side of the two-level 
transducer. Similarly, the Verb continuation class 
allows the concatenation of the verbal stem ?laugh? 
with the various inflectional morphemes.  
The Persian morphological analyzer at Inxight 
currently consists of about 55,000 stem forms, 
including multiword tokens, and a system of rules 
that identify the baseform of each token. Examples 
of the output of the morphological analyzer are 
shown below where the left hand side represents 
the lower input string and the right hand side is the 
upper side output1: 
 
???????   ?travelers?     
 ms?fryn ? ms?fr+Noun+Pl 
???  ?he/she left?        
 rft ? rftn+Verb+Ind+Pret+3P+Sg  
?????? ?he/she is a lawyer?    
 vkylst?vkyl+Noun>bvdn+Verb+Ind+Pres+3P+Sg 
 
The rules are written as regular expressions and 
are represented as continuation paths within the 
lexc grammar. The morphological analyzer covers 
                                                     
1 Unless otherwise specified, the Persian examples 
are direct transliterations of the Persian script and do not 
include short vowels, since that would require 
disambiguation of word senses and is beyond the scope 
of the current application. For issues in automatic 
diacritization of Arabic script-based tests see (Vergyri 
and Kirchhoff, 2004) in this volume.  
all main features of the Persian language with full 
verbal conjugation and nonverbal inflection, 
including irregular morphology. In addition, about 
twenty phonological rules are used to capture the 
various surface word forms and alternations that 
occur in the language. Common Proper Nouns are 
also recognized and tagged. 
3 Challenges of the Persian System 
This section outlines some of the main issues 
that arise in a computational analysis of Persian 
text and presents the approach adopted in the 
current finite-state system. Comparisons are made 
with past work on Persian morphological analyzers 
when relevant. 
Persian is an affixal system consisting mainly of 
suffixes and a number of prefixes appearing in 
strict morphotactic order. The nonverbal paradigm 
consists of a relatively small number of affixes 
marking number, indefiniteness or comparatives, 
but the language has a complete verbal inflectional 
system, which can be obtained by the various 
combinations of prefixes, stems, person and 
number inflections and auxiliaries.  
3.1 Nonverbal Morphology 
The Arabic script used in Persian distinguishes 
between the attached and unattached (or final) 
forms of the characters. Thus, letters in a word are 
often connected to each other, whereas all but six 
characters have a final form if they appear at the 
end of a word or token. Thus, most characters have 
a different form depending on their position within 
the word and the final forms can therefore be used 
to mark word boundaries. But as we will see in this 
section, these boundaries are not without 
ambiguity. 
 
Detached inflectional morphemes. The 
Persian writing system allows certain morphemes 
to appear either as bound to the host or as free 
affixes ? free affixes could be separated by a final 
form character or with an intervening space. The 
three possible cases are illustrated for the plural 
suffix h? (??) in flsTyny h? (??????? ??) 
?Palestinians? and the imperfective prefix my  
(??) in my rvnd (?? ????) ?they are going?. In these 
examples, the tilde (~) is used to indicate the final 
form marker which is represented as the control 
character \u200C in Unicode (also known as the 
zero-width non-joiner). As shown, the affixes may 
be attached to the stem, they may be separated with 
the final form control marker, or they can be 
detached and appear with the intervening control 
marker as well as a whitespace. All of these 
surface forms are attested in various Persian 
corpora. 
 
Attached Final Form  Intervening Space
flsTynyh? flsTyny~h? flsTyny~ h?  
myrvnd  my~rvnd my~ rvnd 
 
In his two-level morphological analyzer, 
(Riazati, 1997) is unable to analyze the detached 
affixes and decides to treat these elements in 
syntax. Thus, the two surface realizations of 
morphemes such as the plural h? are analyzed in 
different levels of the system (the attached version 
in the morphological analyzer and the detached 
form in the syntactic parser). In the unification-
based system developed at CRL (Megerdoomian, 
2000), a post-tokenization component is used to 
join the detached morpheme to the stem, separated 
by the control character. The morphological 
grammar is then designed to recognize both 
surface forms.  
The advantage of the finite-state system 
described here is the ability to process multiword 
tokens in the analyzer. Thus, by treating the final 
form character (the zero-width non-joiner) as a 
space in the tokenization rules, we are able to 
analyze the detached morphemes in Persian as part 
of multiword tokens within the lexc grammar 
module. This allows us to treat both forms 
uniformly in the morphological analyzer and there 
is no need for a preprocessing module or for 
delaying the analysis of the detached morphemes 
to the syntactic level. 
 
Complex tokens. ?Complex tokens? refer to 
multi-element forms, which consist of affixes that 
represent a separate lexical category or part of 
speech than the one they attach to. As in languages 
such as Arabic and Hebrew, Persian also allows 
attached word-like morphemes such as the 
preposition bh (??) (b- in attached form), the 
determiner ayn (???), the postposition r? (??), or the 
relativizer kh (??), that form such complex tokens 
and need to be analyzed within the morphological 
analyzer. Similarly, a number of pronominal or 
verbal clitic elements may appear on various parts 
of speech categories, giving rise to complex 
tokens. The examples below illustrate some of 
these complex constructions where two distinct 
part of speech items appear attached. The word-
like affixes are shown in bold in the examples 
below. 
 
(i) beqydh    Sm?  ?????? ???   
 to+opinion you 
?in your opinion? 
(ii) aynk?r         ??????  
 this+work 
 ?this work? 
(iii) anqlaby-tryn-ha-ySan-nd     ??????????????????? 
 revolutionary+Sup+Plur+Pron.3pl+Cop.3pl 
  ?they are the most revolutionary ones? 
 
To account for these cases in the Persian system, 
the different part of speech items are analyzed 
within the morphological analyzer and they are 
separated with an angle bracket as shown below 
for ktabhayman ) ??????????(  ?our books? and 
beqydh )??????(   ?to+opinion?.  
 
ktabhayman  
?ktab+Noun+Pl>av+Pron+Pers+Poss+1P+Pl+Clit 
beqydh 
? bh+Prep< eqydh +Noun+Sg 
 
The angle brackets are used to distinguish these 
elements from regular inflectional morphemes 
since the distinct part of speech information may 
be needed at a later stage of processing, e.g., for 
parsing or machine translation. Each word-like 
prefix is presented by its stem form: av )??(  
?he/she? for the pronominal clitic and bh )??(  ?to? 
for the baseform of the preposition. This stem form 
is then followed by the relevant morphosyntactic 
tags. If the information is not required, as in the 
case of certain information retrieval applications, 
the elements separated by the angle brackets can 
easily be stripped off without losing the 
information of the content carrying category, 
namely the noun in these examples. 
In certain cases, two distinct syntactic categories 
may appear without an intervening space even 
though they are not attached. For instance, the 
preposition dr )??(  ?in? ends in the character ?r? 
which does not distinguish between a final form 
and an attached form. Sometimes dr appears 
without a space separating it from the following 
word and the tokenizer is not able to segment the 
two words since there is no final form to mark the 
word boundary. Similarly, in many online corpora 
sources, the coordination marker v )?(  ?and? 
appears juxtaposed with the following word 
without an intervening space; and since the letter 
?v? does not distinguish between a final and 
attached form, the tokenizer cannot determine the 
word boundary. These common words that often 
appear written without an intervening space, 
though not actually inflectional morphemes, are 
treated as prefixes in the system as illustrated 
below: 
 
vgft ? v+Coord< gftn+Verb+Pret+3P+Sg     ???? 
drdftr ? dr+Prep< dftr+Noun+Sg                ?????? 
 
Phonetics & Phonological Rules. In Persian, 
the form of morphological affixes varies based on 
the ending character of the stem. Hence, if an 
animate noun ends in a consonant, it receives the 
plural morpheme ??n as in zn?n )????(  ?women?. If 
the animate noun ends in a vowel, the glide ?y? is 
inserted between the stem and the plural 
morpheme as in gd?y?n )??????(  ?the poor?. 
Similarly, for animate nouns that end in a silent ?h? 
(i.e., the letter ?h? which is pronounced as ? ), they 
take the morpheme ?g?n as in frSth )?????(  ? 
frStg?n )???????(  ?angels?.  
A problem arises in Persian with characters that 
may be either vowels or consonants and cannot be 
analyzed correctly simply based on the 
orthography. For instance, the character ?v? is a 
consonant in g?v )???(  ?cow? (pronounced ?gaav?) 
but a vowel in d?nSJv )??????(  ?university student? 
(pronounced ?daneshjoo?). The character ?h? is 
pronounced as a consonant in m?h )???(  ?moon? but 
as a vowel in bynndh  )??????(  ?viewer? (pronounced 
?binand??).  Similarly, ?y? is a glide in r?ay ?vote? 
but a vowel  in m?hy )????(  ?fish? (pronounced 
?maahee?). Hence, it is clear that in Persian, the 
orthographic realization of a character does not 
necessarily correspond to the phonetic 
pronunciation, yet phonological alternations of 
morphemes are sensitive to the phonetics of stems. 
In the finite-state lexicon, the nonverbal and 
closed class lexical items are separated based on 
their final character, i.e., whether they end in a 
consonant or a vowel, and word boundary tags are 
used to determine the relevant phonological 
alternations. In particular, the words ending in a 
vowel sound are marked with a word boundary tag 
^WB. Hence, the words d?nSJv, bynndh and m?hy 
will be marked with a ^WB tag but not those 
ending in the consonant pronunciation of the same 
characters, namely g?v, m?h and r?ay. This allows 
us to convert the nominal endings of these words 
to their phonetic pronunciation rather than 
maintaining their orthographic realization, helping 
us disambiguate phonological rules for nominal 
affixes.  
The words tagged with the boundary marker 
^WB undergo phonetic alternations which convert 
the ending characters ?v?, ?h? and ?y? to ?u?, ?e? and 
?i?, respectively, in order to distinguish vowels and 
consonants when the phonological rules apply. 
Thus, after the phonetic alternations have applied, 
the word m?h ending in the consonant ?h? is 
transliterated as [mah] while the word bynndh 
ending in the vowel or silent ?h? is represented as 
[bynnde]. 
Once the ending vowel and consonant characters 
have been differentiated orthographically, the 
phonological alternation rules can apply correctly. 
We mark morpheme boundaries in the lexc with 
the tag ^NB. This permits the analysis routine to 
easily locate the area of application of the 
phonological alternations when the rules are 
composed with the lexicon transducer. One such 
phonological rule for the animate plural marker -?n 
is exemplified below: 
 
define plural [e %^NB ? g || _ a n]; 
 
This regular expression rule indicates that the 
word ending in the vowel ?e? and followed by a 
morpheme boundary marker is to be replaced by 
?g?, in the context of the plural morpheme ?an?. 
This rule captures the phonological alternation for 
bynndh )??????(  ?viewer? ? bynndg?n )????????(  
?viewers?. 
Thus, since the phonetic representation of 
Persian nouns and adjectives plays a crucial role in 
the type of phonological rule that should apply to 
morpheme boundaries, we manipulate the 
orthographic realization of certain words in order 
to eliminate the ambiguities that may arise 
otherwise. 
Past morphological analysis systems have either 
not captured the pronunciation-orthography 
discrepancy in Persian thus not constraining the 
analyses allowed, or they have preclassified the 
form of the morpheme that can appear on each 
token. The advantage of the current system is that, 
by using phonological rules that apply across the 
board at all morpheme boundaries, we can capture 
important linguistic generalizations. For instance, 
there is no need to write three distinct plural rules 
to represent the various surface forms of the plural 
suffix ??n (namely, -?n, -g?n, and ?y?n). Instead, 
we can write one single rule adding the ??n 
morpheme and apply phonological rules that can 
also apply to the boundaries for the pronoun clitic, 
indefinite, ?ezafe? and relativizing enclitic 
morphemes, providing a very effective linguistic 
generalization. 
3.2 Verbal Paradigm 
The inflectional system for Persian verbs is quite 
complex and consists of simple forms and 
compound forms; the latter are forms that require 
an auxiliary verb. There are two stems used in the 
formation of the verbal conjugation, which may 
combine with prefixes marking the imperfective, 
negation or subjunctive, person and number 
inflections, suffixes for marking participle forms, 
and the causative infix. Certain tenses also use 
auxiliaries to form the perfect forms, the future 
tense or the passive constructions. 
Two stems. One of the intricacies of the 
Persian verbal system  (and of Indo-Aryan verbal 
systems in general) is the existence of two distinct 
stem types used in the formation of different 
tenses: The present stem is used in the creation of 
Form Tense Prefix Stem Inflection Auxiliary 
mygryzd 
      ?? ????? 
Present Imperfective 
my 
Present 
gryz 
Present.3sg 
d 
--- 
 
mygryxt  
     ?? ????? 
Imperfect Imperfective 
my 
Past 
gryxt 
Past.3sg 
? ? 
--- 
 
mygryxth ast 
  ?? ?????? ???  
Compound 
Imperfect 
Imperfective 
my 
Past 
gryxt 
Participle 
h 
Present be.3sg) 
and 
bgryz  
            ????? 
Imperative Subjunctive 
b 
Present 
gryz 
Imperative.2sg 
? ? 
--- 
Table 1: Long-distance dependency between prefix and personal inflection 
the present tense, the simple subjunctive, the 
imperative and the present participle. On what is 
known as the past stem are formed the preterite, 
the imperfect, the past participle and past 
compounds. Furthermore, all infinitives and future 
tenses are built on the past stem while all 
causatives, regardless of tense, are created on the 
present stem. For computational purposes, the two 
stems are treated as distinct entities because they 
often have different surface forms and cannot be 
derived from each other. Two examples are given 
below for krdn (????) and gryxtn (??????) in the 
actual pronunciation2: 
 
Infinitival Present Stem  Past Stem
kardan kon kard ?to do/make? 
gorixtan goriz gorixt  ?to flee? 
 
Since the infinitival or citation form of the verbs 
is built on the past stem, the verbal finite-state 
transducer has to produce the past stem on the 
upper side, allowing the derivation of the 
infinitive. A problem arises when the input string 
is the present stem form as in the present tense  
my gryznd )?? ?????? (  ?they are fleeing?. In this 
instance, we would need to output the past stem 
form of the verb, namely gryxt )????? ( . In order to 
capture the association between the present and 
past stems in Persian, we link these forms in the 
verbal lexicon by allowing all present stems to map 
to the
transd
class 
listed
the pa
and u
forme
     
2 N
are n
transli
 
 
imperfect my gryxtnd  )?? ??????? ( ?they were 
fleeing?. 
 
LEXICON PresentStem 
gryxt:gryz VerbReg ; ! to flee 
nvSt:nvys VerbReg ; ! to write 
aftad:aft VerbReg ; ! to fall 
 
LEXICON PastStem 
gryxt InfBoundary ; ! to flee 
nvSt InfBoundary ; ! to write 
aftad InfBoundary ; ! to fall 
 
In both cases the upper side past stem string is 
marked with a delimiter tag ^INF which is later 
mapped to ?n?, forming the surface form of the 
infinitive. The resulting stem form for the finite 
verb my gryznd )?? ??????  (  ?they are fleeing? is 
thus the infinitival gryxtn  )?????? (  ?to flee?. 
  
Long-distance dependencies3.  As can be 
seen in the examples given above for the verb 
gryxtn )?????? (  ?to flee?, the prefix my- )??(  cannot 
be used to distinguish the tense of the verbal entry 
since it is used in the formation of the present, the 
imperfect or the compound imperfect. In order to 
decide whether my is forming e.g., the present 
tense or the past imperfect, the stem and final 
inflection need to be taken into account. Thus, if 
my is attached to the present stem, it forms the 
regular present tense forms but if it is attached to 
 simple 
ending 
le 1). 
 only 
unctive 
able 1, 
used if 
2) for a 
al long-
els of  past stem form in the upper side of the 
ucer, as illustrated in the first continuation 
below. In addition, the same verbs have to be 
 in a different lexical continuation class with 
st stems alone (i.e., past stem on both lower 
pper sides) in order to analyze the tenses 
d on the past stem of the verb such as the 
                                                
                                                     ote that in Persian, the short vowels such as o,a,e 
ot generally transcribed, hence the direct 
teration of the examples would be 
krdn kn krd ?to do, to make? 
gryxtn gryz gryxt ?to flee? 
the past stem, then it gives rise to either the
imperfect or the compound imperfect, dep
on the final inflection forms (see Tab
Similarly, the imperative inflection can
appear on a present stem with the subj
prefix ?b?, as shown in bgryz )????? (   in T
whereas only the present inflection can be 
3 See for instance (Sproat, 1992; pages 91-9
description of the issue raised by ?morphologic
distance dependencies? in finite-state mod
morphology. 
the imperfective prefix ?my? is used, as shown with 
my gryzd  )?? ?????  (  . 
Accounting for the long-distance dependency 
between the prefix and the personal inflection in 
Persian in a finite-state two-level morphological 
analyzer leads to very complex paths and 
continuation class structures in the lexical 
grammar. Also, using filters to capture long-
distance dependencies can sometimes largely 
increase the size of the transducer. Since there 
exist several cases of interdependencies between 
non-adjacent morphemes in Persian verb 
formation, we have opted to keep a simpler 
continuation class structure in the lexc grammars 
and to instead take advantage of  flag diacritics 
and their unification process.  
Flag diacritics are multicharacter symbols and 
can be used within the lexc grammar to permit the 
analysis routines to use the information provided in 
terms of feature-value settings to constrain 
subsequent paths. Hence, whether a transition to 
the following path would apply depends on the 
success of the operation defined by the flag 
diacritic. In essence, the flag diacritic allows the 
system to perform a unification of the features set 
in the analysis process. Xerox finite state 
technology includes a number of different flag 
diacritic operators but the only one used in this 
Persian system is the U-type or the Unification flag 
diacritic. The template for the format of these flags 
is as follows: @U.feature.value@. Flag diacritics 
are used to keep the fst small and yet be able to 
apply certain constraints, in particular when 
dealing with interdependencies between non-
adjacent morphemes within a word. 
For example, to capture the choice of the 
imperative vs. the present tense inflection based on 
the prefix that appears on the present stem of the 
verb, we use a flag diacritic with the attribute 
PFXTYP (PrefixType) which is then set to IMP 
(for imperfective) or SUB (for subjunctive). This 
flag diacritic is set when the prefixes are read and 
they are unified with the PFXTYP flags at the 
lexical class defining the personal inflectional 
paradigm. If the values of the PFXTYP flag 
diacritic match at this point, unification takes place 
allowing the concatenation of the prefix and 
present stem combination with the personal 
inflection. 
Similarly, the agentive, infinitive and participial 
forms can be formed only if there is no prefix at all 
on the verbal stem. This is captured by the flag 
diacritic attribute PFX, which has the two possible 
values PRESENT and ABSENT. Thus, the lexc 
rule for the Infinitive, for instance, requires that the 
PFX flag?s value be set to ABSENT. This, in 
effect, captures the fact that mygryxtn (my 
?imperfective? + gryxt ?past stem? + n ?infinitive 
marker?) is not a valid form since the infinitive 
marker ?n can only appear on a past stem that 
lacks an overt prefix. 
4 Evaluation 
The lexicon used in the Inxight system currently 
consists of 43,154 lemmas, which include nouns, 
adjectives, verbs, adverbs and closed class items. 
In addition, there are about 12,000 comomon 
proper noun entities listed in the lexicon. The 
system also recognizes date, number and internet 
expressions.  
The current Persian morphological analyzer has 
a coverage of 97.5% on a 7MB corpus collected 
mostly from online news sources. The accuracy of 
the system is about 95%. The unanalyzed tokens 
are often proper nouns or words missing from the 
lexicon. In addition, colloquial forms of speech are 
not covered in the current system.  
The finite state transducer consists of 178,452 
states and 928,982 arcs before optimization. And 
the speed of the analyzer is 20.84 CPU time in 
seconds for processing a 10MB file executed on a 
modern Sun SparcStation. 
5 Conclusion 
This paper describes some of the challenges 
encountered in a computational morphological 
analysis of Persian and discusses the solutions 
proposed within the finite state system developed 
at Inxight Software based on the Xerox Finite State 
Technology. The approaches adopted are 
compared with past systems of Persian whenever 
relevant. The paper presents the problems arising 
from detached inflectional morphemes, as well as 
attached word-like elements forming complex 
tokens, the discrepancy between orthography and 
phonetics in application of phonological rules, and 
the interdependency between non-adjacent 
morphemes in a word. In each case, it was argued 
that methods adopted from the finite-state calculus 
can capture linguistic generalizations and reduce 
the transducer to a manageable and commercially 
viable size. 
6 Acknowledgements 
We gratefully acknowledge the help and support 
provided by the development team at Inxight 
Software and the insightful suggestions of the 
members of the Lingware group. I would also like 
to thank the anonymous reviewers for their 
detailed comments. 
References  
Mohammad-Reza Bateni. 1995. Towsif-e 
Sakhteman-e Dastury-e Zaban-e Farsi 
[Description of the Linguistic Structure of 
Persian Language]. Amir Kabir Publishers, 
Tehran, Iran. 
Kenneth R. Beesley and Lauri Karttunen. 2003. 
Finite-State Morphology: Xerox Tools and 
Techniques. CSLI Publications, Palo Alto. 
Lauri Karttunen and Kenneth R. Beesley. 1992. 
Two-Level Rule Compiler. Technical Report. 
ISTL-1992-2. Xerox Palo Alto Research Center. 
Palo Alto, California. 
Gilbert Lazard. 1992. A Grammar of 
Contemporary Persian. Mazda Publishers. 
Shahrzad Mahootian. 1997. Persian.Routledge. 
Karine Megerdoomian. 2000. Unification-Based 
Persian Morphology. In Proceedings of CICLing 
2000. Alexander Gelbukh, ed. Centro de 
Investigaci?n en Computaci?n-IPN, Mexico. 
Dariush Riazati.1997. Computational Analysis of 
Persian Morphology. MSc thesis, Department of 
Computer Science, RMIT. 
Richard Sproat. 1992. Morphology and 
Computation.MIT Press, Cambridge, 
Massachusetts. 
Proceedings of the NAACL HLT 2010 Second Workshop on Computational Approaches to Linguistic Creativity, pages 6?13,
Los Angeles, California, June 2010. c?2010 Association for Computational Linguistics
Mining and Classification of Neologisms in Persian Blogs 
 
 
Karine Megerdoomian Ali Hadjarian 
The MITRE Corporation The MITRE Corporation 
7515 Colshire Drive 7515 Colshire Drive 
McLean, VA 22102, USA McLean, VA 22102, USA 
karine@mitre.org ahadjarian@mitre.org 
 
 
 
 
 
 
Abstract 
The exponential growth of the Persian blo-
gosphere and the increased number of neolog-
isms create a major challenge in NLP 
applications of Persian blogs. This paper de-
scribes a method for extracting and classifying 
newly constructed words and borrowings from 
Persian blog posts. The analysis of the occur-
rence of neologisms across five distinct topic 
categories points to a correspondence between 
the topic domain and the type of neologism 
that is most commonly encountered. The re-
sults suggest that different approaches should 
be implemented for the automatic detection 
and processing of neologisms depending on 
the domain of application.  
1 Introduction* 
Since its beginnings in 2001, the Persian blogos-
phere has undergone a dramatic growth making 
Persian one of the top ten languages of the global 
blog community in 2007 [Sifry 2007].  
One of the main challenges in the automatic 
analysis and processing of Persian language blogs 
is the accelerated emergence of neologisms in on-
line discourse. These newly created words that 
cannot be found in traditional lexicons primarily 
consist of adopted English loanwords, such as ?????? 
d?nlod ?GRZQORDG? RU  ?????? ?nl?yn ?RQOLQH? DQG 
innovative constructions based on Persian word-
                                                          
* This research is part of a larger project on the study of Per-
sian language blogs supported by a Mission-Oriented Investi-
gation and Experimentation (MOIE) program at MITRE. 
formation principles, as in  ???????? filtershekan ?Dn-
ti-ILOWHU VRIWZDUH? RU  ????? chatidan ?WR FKDW?. 
In this paper, we investigate the distinct classes 
of neologisms encountered in Persian language 
blogs. Since the main goal of the project is to build 
a topic classification system for blogs, we focused 
on extracting neologisms that would have the most 
discriminatory power in distinguishing between the 
various classes.  
For the purposes of this study, we collected a 
corpus of Persian language blogs from five differ-
ent topic categories of sports, medicine, politics, 
Internet, and cinema. The neologisms are automat-
ically extracted by running the documents through 
a morphological analyzer. Since these new word 
coinages are not recognized by the analyzer, they 
are tagged as unknowns. A weight-ordered list of 
unknown words is then generated for each topic 
category, using information gain as the measure, as 
described in Section 2.3. The more significant neo-
logisms for each category are then manually identi-
fied from the generated weight-ordered lists, 
focusing on the top 200 words, and classified 
based on their linguistic characteristics. The results 
indicate that the type of neologism found in the 
blog posts in fact corresponds to the topic domain. 
Hence, for example, while English loans are highly 
prominent in technical and Internet related posts, 
new morphological constructions are more com-
mon in the domain of politics. Building on these 
results, we argue that distinct approaches are re-
quired for processing the adopted loan words and 
the morphologically constructed neologisms. 
 
 
6
2 Extraction Process 
2.1 Blog Data 
The blog data for this study comes from Blogfa1, a 
popular Persian blog hosting site. The topic index 
provided by Blogfa itself has allowed us to rapidly 
collect large amounts of blog data coming from 
topic categories of interest, by eliminating the need 
to manually label the data.  Table 1 provides a list 
of the five topic categories used in this study, as 
well as the total number and the median size of the 
collected blogs for each. The table also includes 
the average number of words in each topic catego-
ry. The blogs were collected in February 2010, 
starting with the most recent blog posted in each 
topic and moving back chronologically.  
 
topic category 
# of  
blogs 
median  
size 
average 
 # of words 
Internet 497 14 kb 986 
Cinema and theatre 
(sinama va ta?atr) 
255 18 kb 1380 
Political 
(siyasat-e-rooz) 
500 22 kb 2171 
Medical 
(pezeshki) 
499 27 kb 2285 
Sports  
(varzesh) 
498 19 kb 1528 
Table 1 ? Topic categories of interest and the total  
number, median size, and average length of the  
collected blogs for each topic 
2.2 Linguistic Parsing 
The collected documents are run through a Persian 
morphological parser that analyzes all word forms 
including compounds and provides a part of speech 
tag for the valid analyses [Amtrup 2003]. The 
morphological analyzer was developed for use in a 
Persian-English machine translation system and 
provides part of speech as well as all syntactically 
relevant inflectional features for a word [cf. Me-
gerdoomian 2000]. The morphological formalism 
consists of a declarative description of rules utiliz-
ing typed feature structures with unification. The 
morphological analysis component takes advantage 
of a lexicon of about 40,000 entries in citation 
form that had been developed in the period of 
1999-2002 for coverage of online news articles and 
includes nouns, adjectives, verbs, adverbs and 
                                                          
1 www.blogfa.com 
closed class items. In addition, there are about 
5,000 common proper noun entities listed in the 
lexicon. After morphological analysis, dictionary 
lookup eliminates all erroneous analyses.  Any 
element that is not successfully associated with a 
word in the lexicon is tagged as an unknown.  
The current morphological analyzer has a cover-
age of 97% and an accuracy of 93% on a 7MB 
corpus collected from online news sources. The 
system fails to analyze conversational forms. Other 
unanalyzed tokens are mainly proper nouns and 
words missing in the lexicon.   
2.3 Information Gain 
To automatically detect the most pertinent un-
known terms per blog category, we employ an in-
formation gain (IG) based feature selection 
DSSURDFK ,*?V HIIHFWLYHQHVV DV D IHDWXUH VHOHFWLRQ 
measure for text topic categorization, the ultimate 
objective of this project, has been well studied 
[Yang and Pedersen 1997]. 
Information gain is a statistical measure for cal-
culating the expected reduction in entropy [Mit-
chell 1997]. Entropy, a common measure in 
information theory, captures the impurity of a col-
lection of examples relative to the intended classi-
fication. For a binary classification task, the 
entropy of a set of examples E is defined as: 
 
???? ??? ppppEEntropy 22 loglog)(  
 
where 
?p  is the proportion of positive examples 
and 
?p  is the proportion of negative examples in 
E. Moreover, it is assumed that 0log0 2  is equal 
to zero. The discriminatory power of an attribute 
for a given class can then be measured by IG, 
which is the reduction in entropy caused by the 
partitioning of the data using that attribute. The IG 
for example set E and attribute A is defined as: 
 
)()(),(
)(
v
AValuesv
v EEntropyE
EEEntropyAEIG ?
?
??
 
where Values(A) represents the set of all possible 
values that attribute A can take on and 
vE  is the set 
of examples for which attribute A takes on value v. 
In this study, each attribute has a binary value 
which signifies the presence or absence of a given 
unknown term in the document. So for the purpos-
7
es of this study, the above equation can be formu-
lated as: 
 
)()()(),( tttt DEntropyD
DDEntropyDDEntropytDIG ???
 
where  D is the set of all documents, t  is a given 
term, Dt is the set of documents in which term t 
occurs, and 
tD   is the set of documents in which 
term t does not occur.  
 
Translit. Weight Translation 
vyndvz 0.100033 Windows 
danlvd 0.080559 download 
fayl 0.058319 file 
karbran 0.051595 users 
Java 0.048287 Java 
klyk 0.048180 click 
yahv 0.044999 Yahoo  
nvkya 0.044807 Nokia 
flG 0.042718 Flash 
mrvrgr 0.041374 browser 
hk 0.041074 hack 
msnJr 0.040853 Messenger 
Ct 0.039987 chat 
psvrd 0.039213 password 
kd 0.035936 code 
Table 2 ?The top weighted unknown terms for the In-
ternet topic category and their associated  
information gain 
 
Since the aim of feature selection for this paper 
is that of identifying the most pertinent unknown 
terms for each topic category, an additional con-
straint is imposed on the feature selection process. 
Here, for a term to be selected, it not only needs to 
have a high IG, but it needs to be present in a high-
er proportion of positive examples than the nega-
tive ones. This prevents the selection of terms that 
while are good descriptors of the negative class 
and thus carry a high IG, are not necessarily perti-
nent to the positive class (i.e., the topic category 
under consideration). So IG of a term not meeting 
the above constraint is effectively set to zero.  
As indicated previously, the 200 unknown 
terms with the highest IG for each topic category 
are thus selected for the analysis portion of this 
study. Table 2 depicts a sample set of the top 
weighted terms for the Internet category in transli-
teration and translation. The transliteration schema 
was designed to display the results of the morpho-
logical analyzer system. It directly represents the 
Persian script and provides a bijective, one-to-one 
mapping of the characters. The transliteration 
omits any diacritics, including vowels, that are not 
represented in the original script. 
2.4 Candidate List 
The weight-ordered list of unknown words pro-
vides a candidate list of potential neologisms. 
However, the set of unknown terms extracted from 
each topic category includes proper names, spel-
ling errors, conversational language forms and 
neologisms. We therefore manually study the can-
didate list in order to identify the appropriate 
classes of neologisms. The results are classified 
based on the observed linguistic characteristics and 
a quantitative analysis is performed for each topic 
category. 
3 Neologism Classification 
Persian language blogs include a large number of 
neologisms ranging from new usages in conversa-
tional language to newly coined words to designate 
new technology or political concepts. We per-
formed a qualitative, linguistic investigation of 
Persian language blogs, consisting of posts from 
four main categories of technical, political, arts, 
and personal diary [Megerdoomian 2008]. The 
goal of this study was to identify elements of Per-
sian Blogspeak that indicate language change and 
which fail to be analyzed by the existing Persian 
machine translation and information extraction 
systems that had been developed for online news 
sources. The study pointed to four main categories 
of new word formation found in Persian language 
blogs: 
 
? Borrowings (mainly from English and 
French) 
? Compounding 
? Affixation 
? Conversion: Semantic and functional shift 
 
These neologisms were identified based on the 
prevalent linguistic classification of newly formed 
words (see for instance the classification of neo-
logisms described in [Grzega and Schoener 2007]). 
8
These four classes of neologisms are described in 
more detail in the rest of this section. 
3.1 Borrowings 
A large number of new loan words can be found in 
blogs. Although they may sometimes be inserted 
within the text in the original language, they are 
generally transcribed into Persian script. These 
loans are used as regular words and can take Per-
sian inflectional affixes. Some examples are pro-
vided in Table 3. 
 
Persian Transcription Translation 
??????? monitor Monitor 
??????????? filteringeshun their filtering 
?????? s?yth? sites 
????????  pasvordet?n your password 
?????? v?yerles Wireless 
???? ????  t?ym l?yn Timeline 
????????? seksu?liteh Sexuality 
???????? nost?lji Nostalgy 
Table 3 ? Loan words in Persian blogs 
 
 An analysis of the occurrence of loans with re-
spect to the various topic domains shows that the 
Internet category contains a large number of Eng-
lish language loans, whereas the more established 
scientific domain of medicine tends to use French 
borrowings. Also within the same category, new 
technological or scientific additions are generally 
expressed in English. For instance, in the cinema 
category, most technical words are of French ori-
gin ? e.g., ????? from ?cran ?VFUHHQ? RU ?????? from 
titrage ?RSHQLQJ FUHGLWV? However, new loans have 
entered the field from English, e.g., ??????? animey-
shen ?DQLPDWLRQ? 
3.2 Compounding 
Compounding is a productive word-formation 
process in Persian and refers to cases where two or 
more roots are combined to form a new word. Ex-
amples of compounding include   ?????? r?hk?r 
(consisting of r?h ?SDWK? DQG k?r ?ZRUN? DQG now 
EHLQJ XVHG WR PHDQ ?JXLGHOLQH? RU ?VROXWLRQ?); 
????? sarbarg (from sar ?KHDG? DQG barg ?OHDI 
SLHFH RI SDSHU? VLJQLI\LQJ ?OHWWHUKHDG?; and ?????? 
degarb?sh (formed with degar ?RWKHU? DQG b?sh
?EHLQJ? PHDQLQJ ?TXHHU?. In many cases, howev-
er, one of the roots is a borrowing that is combined 
with a Persian root form. Examples of this multi-
lingual compounding construction include ???????? 
t?bus?zi (taboo + to make) ?PDNLQJ WDERR? DQG 
???????? linkduni OLQN  VWRUDJH PHDQLQJ ?EOo-
JUROO?. 
Recently, there has been a concerted effort by 
the Persian Language Academy to replace borrow-
ings from foreign languages by equivalent Persian 
constructions. Thus, the traditional ???????? helikop-
ter ?KHOLFRSWHU? KDV EHHQ UHSODFHG E\ ?????? b?lgard  
by combining Persian b?l ?ZLQJ? DQG gard ?WXUQ? 
Similarly, the French loanword ?????? sen?ryo 
?VFUHHQSOD\? LV QRZ EHLQJ UHSODFHG E\ ???????? 
filmn?m? composed of film and n?m? ?OHWWHU 
ERRN? 
Persian has a very productive compounding 
strategy for forming new verbs where a nominal or 
adjectival root is combined with a light verb, i.e., a 
verb that has lost some of its semantic value. Many 
new verbs, especially in the technical domain, are 
formed following this construction as illustrated in 
Table 4. 
 
Persian Transcription Translation 
???? ???? kelik kardan to click 
?? ???? chat kardan to chat 
??  ??? ?? ??  es-em-es zadan to send a text 
message 
???? ??? kansel shodan to be cancelled 
Table 4 ? Compound verb formation 
3.3 Affixation 
New words are often created following a produc-
tive word-formation pattern using suffixes. For 
instance, the agentive suffix ?gar is used to form 
?????? morurgar ?EURZVHU? by combining with 
morur ?UHYLHZ? and  ?? ????  fetne-gar ?VHGLWLRXV? 
when combined with fetne ?VHGLWLRQ?2. Another 
common affix used to form new words is ?est?n 
which indicates a place. This suffix can be found in 
terms like ????????? vebl?gest?n (weblog + -stan) 
?EORJRVSKHUH? RU ???????? linkest?n (link + -stan) 
?EORJUROO?. 
In addition to the compound verb formation, 
bloggers have started creating simple verbs by 
combining the verbal ending ?idan with nominal 
                                                          
2 Fetne-gar is a relatively new creation that is used alongside 
the traditional fetne-ju ?VHGLWLRXV? 7KHUH LV D FOHDU VHQVH 
among native speakers, however, that fetne-gar refers to a 
person who is more agentive, actively causing discord. 
9
  
Figure 1 ? Loan neologisms across topic categories 
 
0
10
20
30
40
50
60
70
80
Internet Cinema Medical Political Sport
count
Loan English 
Transliterated
Loan French 
Transliterated
roots as in ????? chatidan ?WR FKDW? RU ?????? l?gidan 
?WR EORJ?  
3.4 Conversion 
Another type of neologism found in Persian lan-
guage blogs consists of existing words that are be-
ing used in a new context, bringing about a 
semantic shift. In certain instances, the part-of-
speech category may also shift. One example is the 
adjective ???? shaf?f ?WUDQVSaUHQW? WKDW LV Eeing 
used more and more frequently as an adverb in 
political contexts with the meanLQJ ?RSHQO\ WUDQs-
SDUHQWO\? 
This category, however, is difficult to detect au-
tomatically with the methodology used since these 
words already exist in traditional lexicons and are 
not tagged as unknowns by the morphological 
parser. Identifying conversions and semantic shifts 
currently requires a manual exploration of the data; 
we leave a study of this class of neologisms for 
future work.  
4 Topic and Neologism Correspondence 
An investigation of the neologisms for each topic 
category clearly suggests that there is a close rela-
tionship between the class of neologisms and the 
topic domain.  
Starting from the weight-ordered candidate list 
for each topic category, we manually examined 
and labeled each unknown word according to the 
neologism classification described in Section 3. In 
order to identify the correct class, each unknown 
word was considered within its context of occur-
rence in the corresponding blog posts and classi-
fied according to the usage within the sentence. In 
addition, proper names, conversational forms of 
existing words, and spelling errors were tagged 
separately.  
10
Figure 1 illustrates the correspondence of the 
number of borrowings per topic category in the 
corresponding candidate list. The results show that 
the most common way of forming new words with-
in blogs dealing with Internet and computer tech-
nology is to use borrowings from English. In the 
medical domain, however, most neologisms are 
scientific terms borrowed mainly from the French 
language. The domain of cinema and theatre also 
includes a large number of loans from French. 
However, most of the French loans across topics 
seem to be older borrowings while the newer loans 
(i.e, within the last three to five years) are almost 
always from the English language. A statistical 
analysis of the results indicate that these corres-
pondences are significant as shown in Figure 2 for 
English loans and in Figure 3 for French loans. 
Figure 2 illustrates a pairwise comparison between 
the Internet category and other blog topics based 
on the average percentage of documents in which a 
given term from the English loan neologism cate-
gory is included. (*) indicates a statistically signif-
icant difference between the two percentages. 
Figure 3 shows a similar result for the pairwise 
comparison between the Medical category and oth-
er topics for the French loan class.  
 
Figure 2 ? Pairwise comparison of Internet blogs and other topics for English loans 
 
 
Figure 3 ? Pairwise comparison for Medical blogs and other topics for French loans 
 
11
 
Figure 4 shows the relative usage of affixation 
and compounding strategies for the creation of new 
words. Although affixation is used to some degree 
in both the Internet and medical domains, they do 
not occur as often as the English or French loans 
(cf. Figure 1 above). Interestingly, the blogs that 
fall within the political topic category do not make 
much use of borrowings from English and French. 
Instead, they tend to create new words by applying 
productive affixation and compounding strategies. 
In most instances, the words used to form neolog-
isms in the politics category are based on words of 
Arabic and Persian origin. Figure 5 illustrates the 
pairwise comparison between the Political and oth-
er blog topics based on the average percentage of 
documents in which a given term from the affixa-
tion and compounding class of neologisms is in-
cluded. (*) indicates a statistically significant 
difference between the two percentages.  
Hence, while the Internet blogs make heavy use 
of English loans in the creation of new words, po-
litical blogs tend to use affixation and compound 
strategies for word-formation. These results sug-
 
  
Figure 4 ? Affixation and compounding strategies for the creation of new words  
across various blog topics 
 
 
Figure 5 ? Pairwise comparison for Political blogs and other topics for affixation and compounding  
 
0
2
4
6
8
10
12
14
Internet Cinema Medical Political Sport
count Affixation
Compound
12
gest that, depending on the domain of interest for 
the particular NLP application, distinct methodolo-
gies for the automatic detection and processing of 
neologisms should be implemented.  
5 Conclusion 
This paper presents an investigation of neolog-
isms in Persian blog posts across five distinct topic 
areas. We employ morphological analysis in con-
junction with a profile-based classification tech-
nique to successfully extract a pertinent candidate 
list for identifying new word-level constructions in 
blogs. These neologisms are then classified based 
on their linguistic characteristics and word-
formation strategies and the quantitative analysis 
points to a significant correspondence between 
neologism classes and blog topic domains.  
Based on these results, we propose that the de-
tection and processing strategies should be tailored 
to the domain of the NLP application for greater 
efficiency. In particular, a derivational morpholog-
ical system can be developed by implementing the 
productive affixation and compounding rules used 
in Persian word formation. This system can be 
used to extend the existing analysis and translation 
systems in the domain of politics. Loans from Eng-
lish, on the other hand, can be automatically 
processed by using previously implemented me-
thodologies for transcribing Persian script into the 
English writing system [Megerdoomian 2006, Jo-
hanson 2007]. Such a system would be beneficial 
in recognizing the large number of loans encoun-
tered in the technical and scientific domains. 
This work is part of a larger project for automat-
ic topic classification and sentiment analysis in 
Persian language blogs. We extract the most perti-
nent neologisms encountered in the blog corpus in 
order to enhance the topic classification system. In 
addition, the results obtained will be used to extend 
the current morphological parser to improve cover-
age and identification of newly formed words. 
References  
Amtrup, Jan W. 2003. Morphology in machine transla-
tion systems: Efficient integration of finite state 
transducers and feature structure descriptions. Ma-
chine Translation, 18(3), pp. 217-238. 
Grzega, Joachim and Marion Schoener. 2007. English 
and general historical lexicology: Materials for 
onomasiology seminars. Onomasiology Online Mo-
nographs, Vol. 1. Germany. 
Ittner, D.J., Lewis, D.D., and Ahn, D.D. (1995). Text 
categorization of low quality images. In Symposium 
on Document Analysis and Information Retrieval. 
Las Vegas, NV. 
Johanson, Joshua. 2007. Transcription of names written 
in Farsi into English. In Proceedings of the Computa-
tional Approaches to Arabic Script-based Languages 
(CAASL2). LSA Linguistic Institute, Stanford. 
.HOO\ -RKQ DQG %UXFH (WOLQJ  0DSSLQJ ,UDQ?V 
online public: Politics and culture in the Persian blo-
gosphere. Research Publication No. 2008-01, The 
Berkman Center for Internet and Society at Harvard 
Law School. April 6.  
Megerdoomian, Karine. 2008. Analysis of Farsi web-
logs. MITRE Tech Report 080206. August 2008. 
Megerdoomian, Karine. 2006. Transcription of Persian 
proper name entities into English. Technical report, 
Inxight Software, Inc. 
Megerdoomian, Karine. 2000. Unification-based Per-
sian morphology. In Proceedings of CICLing 2000. 
Alexander Gelbukh, ed. Centro de Investigacion en 
Computacion-IPN, Mexico.  
Mitchell, Tom M. 1997. Machine learning. McGraw-
Hill. 
Pacea, Otilia. 2009. New worlds, new words: On lan-
guage change and word formation in Internet English 
and Romanian. In The annals of Ovidius University 
Constanta- Philology, issue 20, pp: 87-102. 
Salton, G. 1991. Developments in automatic text re-
trieval. Science, v.253: 974-980. 
Sebastiani, F. 2002. Machine learning in automated text 
categorization. In ACM Computing Surveys, 34(1): 
1-47 
Sifry, Dave. 2007. The Technorati state of the live web: 
April 2007.  
Yang, Yiming and Jan Pedersen, J.O. 1997. A compara-
tive study on feature selection in text categorization. 
In Proceedings of International Conference on Ma-
chine Learning.  
 
13
