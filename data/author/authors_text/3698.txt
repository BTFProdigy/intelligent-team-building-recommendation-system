R. Dale et al (Eds.): IJCNLP 2005, LNAI 3651, pp. 588 ? 599, 2005. 
? Springer-Verlag Berlin Heidelberg 2005 
Why Is Zero Marking Important in Korean? 
Sun-Hee Lee1,*, Donna K. Byron2, and Seok Bae Jang3 
1,2 395, Dreese Lab., 2015, Neil Avenue,Columbus, OH 43210 
shlee@ling.ohio-state edu 
dbyron@cse.ohio-state.edu 
3 37th and O Sts., NW, Washington, D.C, 20057 
sbj3@georgetown.edu 
Abstract. This paper argues for the necessity of zero pronoun annotations in 
Korean treebanks and provides an annotation scheme that can be used to de-
velop a gold standard for testing different anaphor resolution algorithms. Rele-
vant issues of pronoun annotation will be discussed by comparing the Penn Ko-
rean Treebank with zero pronoun mark-up and the newly developing Sejong 
Teebank without zero pronoun mark-up. In addition to supportive evidence for 
zero marking, necessary morphosyntactic and semantic features will be sug-
gested for zero annotation in Korean treebanks.   
1   Introduction 
This paper discusses the importance of zero pronoun marking in treebanks and investi-
gates what kind of linguistic features are needed for treebank annotation in order to 
increase the usability of annotated corpora. Zero pronouns refer to empty pronouns 
without phonological realization, which work in a similar manner as English pronouns.  
In the recent decade, there has been remarkable progress in the realm of building 
large corpora in Korean and applying them for linguistic research and natural lan-
guage processing. Based on the broad acknowledgement of the importance of corpus 
and applicative tools, the 21st century Sejong project was launched in 1998 and has 
been developing various database and relevant computational tools including elec-
tronic dictionaries, annotation tools, morphological analyzers, parsers, etc. As a part 
of the Sejong project, the syntactically annotated treebank of Korean has been under 
construction. In addition to the Sejong Treebank (henceforth, ST), the Penn Korean 
Treebank (Han et al[4] henceforth, PKT) has already been released and continues to 
be expanded. These treebanks with abundant linguistic information are expected to 
fulfill a function as informative databases in broad domains of theoretical linguistics 
and computational linguistics such as statistical approaches, machine learning, etc. 
A notable point is that there is a critical difference between annotations of ST and 
PKT with respect to marking zero elements including traces, zero pronouns, etc. The 
most current guidelines of ST specify that zeros are dropped in order to maintain the 
                                                          
*
  This work was supported by the Korea Research Foundation Grant (KRF-2004-037-A00098) 
for the author. 
 Why Is Zero Marking Important in Korean? 589 
consistency and efficiency of the treebank. In contrast, PKT advocates for  
representing zero elements. According to different approaches to zero marking, the 
structure of the following sentence (1a) is differently analyzed as in (1b) and (1c); in 
(1b) ST does not contain any missing subject while PKT marks the missing subject 
and object as pros in (1c)1 
(1) a. ???         12?-?      ?-?-???.  
          eceypam        12 si-ey       pat-ass-supnita.  
          last night        12 o?clock-at   receive-Past-E 
         ?Last night at 12 o?clock, (I/(s)he/they) received (it)?.   
      b. ST:  (VP   (AP    ???/MAG)  
                            (VP  (NP_AJT 12/SN + ?/NNB + ?/JKB) 
                                     (VP ?/VV+?/EP+???/EF.+ ./SF ))) 
      c. PKT :(S   (NP-SUBJ  *pro*) 
                           (VP  (NP-ADV ???/NNC) 
                                   (NP-ADV 12/NNU ?/NNX+?/PAD) 
                                   (VP  (NP-OBJ  *pro*) 
                                           ?/VV+?/EPF+???/EFN))) ./SFN). 
The sentence representation of (1b) does not fully present the subject-predicate re-
lation in contrast with (1c). In this paper, we argue that failure to mark zeros may 
cause a loss of valuable linguistic information such as filler-gap dependencies, argu-
ment-predication relations, semantic and discourse interpretations of sentences, etc. 
The ST style zero-less annotation will impose the burden of zero marking on the post-
annotation tasks, which utilize treebank resources for developing computational tools. 
This, however, is inconsistent with the purpose of developing treebanks. As pointed 
out in Dickinson & Meurers [3], treebanks have major usage for two types of lin-
guists; one is for theoretical linguists who search through the corpora in order to iden-
tify certain linguistic patterns. The other is for computational linguists who use com-
putational technology and develop statistical models from the annotated corpora in 
order to develop parsers and question-answer systems and to extract information such 
as subcategorization frames of predicates, event nouns, complex predicates, etc. In 
general, treebanks are manually or semi-manually annotated by humans. This guaran-
tees more sophisticated representations of sentence structure and reliable mark-ups for 
ambiguous morphosyntactic units. While focusing on the usability of treebanks, we 
propose an argument against dropping zero mark-ups in treebanks and investigate the 
empirical necessity of zero annotation in Korean treebanks.  
In this paper, we will discuss some significant problems of zero-less treebank 
annotation and explain why zero annotation is important in languages like Korean. 
Then we will present a general annotation scheme and features of zero pronouns 
that can be used to develop a gold standard for testing an anaphor resolution algo-
rithm. Adding zero mark-up will solidify accurate syntactic representation and in-
crease the usability of treebanks even though it takes strenuous efforts and time  
for development. 
                                                          
1
  The tagsets of ST and PKT are somewhat different (i.e., MAG represents an adverb, AP, an 
adverbial phrase, and NP-ADV , a nominal functioning as an adverbial modifier in ST). 
590 S.-H. Lee, D.K. Byron, and S.B. Jang 
2   Necessity of Zero Annotation in Korean Treebank 
In contrast with English where a repeated element tends to appear as a pronoun, in 
topic prominent languages like Korean, a repeated element has no surface realization. 
Thus, Korean zero elements are often called zero pronouns. 
(2) a. John met Mary yesterday.       
      b. Kim met her, too.  
(3) a. John-i           eycey          Mary-lul    mannassta.  
          John-Nom   yesterday  Mary-Acc  met 
         ?John met with Mary yesterday. . 
      b. Kim-to       ?       ,mannaassta.   
          Kim also    OBJ    met 
          ?Kim also met (zero=her).? 
The discrepancy between ST and PKT with respect to zero annotation brings us 
two different values with respect to corpus annotation; economy vs. usability. At the 
stage of annotating corpora, excluding all the missing subjects from the Korean tree-
banks may reduce the burden of annotation tasks such as classifying zeros, sorting 
markable zeros, training annotators and maintaining the legitimate level of inter-
annotator agreement. However, at the later stage zero marked treebanks have higher 
usability by higher level processing including anaphor resolution, extracting subcate-
gorization frames of predicates, discourse analysis, etc. 
More specifically, our arguments against zero-less treebanks can be presented as 
follows. First, zero-less treebanks may provide misleading representations with re-
spect to the general patterns of sentence realization. In so-called pro-drop languages 
such as Korean, Japanese, Spanish and Portuguese, basic units of sentence structure, 
such as subjects of matrix clauses, are frequently unrealized. Although missing sub-
ject information in languages like Spanish and Portuguese is recoverable from verb 
morphology, interpretations of missing arguments do not correspond to specific verb 
morphology in Korean. Thus, marking the place of a zero element is an inevitable 
process not only for structural representation but for processing the meaning of a 
sentence. Zero-less treebanks license various VP or S nodes without capturing correct 
argument-predicate relations. For example, the following sentence is simply repre-
sented as VP, which is inconsistent with the subcategorization frame of the main verb. 
(4) ??        ???     ???-?             ???-?  ?-?-???.  
       kunyang camcakho wuntongcang-man naytapo-ko  iss-ess-supnita.  
       just         silently      playground-only    look down-PreP-Past-E  
       ?(I/you/he/she/they) was only looking down the playground just silently.? 
     (VP  (AP ??/MAG)  
            (VP   (AP ???/MAG)  
                      (VP   (NP_OBJ ???/NNG + ?/JX)  
                               (VP   (VP ???/VV + ?/EC)  
                                         (VP ?/VX + ?/EP + ???/EF + ./SF))))) 
According to Hong [6], the rate of subject drop is 57% in spoken Korean, which is 
higher than other elements. In particular, when the subject refers to a nominal entity 
mentioned in the previous utterance, it naturally disappears in speech rather than ap-
 Why Is Zero Marking Important in Korean? 591 
pearing as a pronoun. This suggests that the number of VPs lacking subjects will be 
significantly high in the spoken corpora. We extracted only 100 sentences from the 
ST corpus containing natural spoken conversations and found that 81 sentences are 
represented as VPs or VNPs (predicate nominal phrases). However, it may derive a 
misleading generalization such that canonical sentence patterns in the given corpus 
are VPs or VNPs. In line with this, semantic interpretations of those incomplete VPs 
or VNPs subsume the meaning of the zero pronouns whose antecedents appear in the 
previous utterances. However, zero-less mark-up poses a difficulty in retrieving the 
complete sentential meaning from the given phrasal categories of VPs or VNPs.  
Second, zero-less treebanks make it difficult to extract certain constructions that 
linguists want to identify. For example, one of the most frequently discussed topics in 
Korean grammar is formation of Double Subject Constructions (DSCs), which license 
two subjects. However, zero-less treebanks do not correctly represent Double Subject 
Constructions and represent (5) and (6) differently in spite of their similarity in  
argument realization.  
(5) ??-?                   ?-?         ?       ?-?-???.  
      hayspam-i                mas-i          ssek    choh-ass-supnita.  
      new chestnut-Nom  taste-Nom   quite   good-Past-End 
      ?New chestnuts had pretty good taste.?  
    (S  (NP_SUB ??/NNG + ?/JKS)  
          (S  (NP_SBJ ?/NNG + ?/JKS)  
                (VP  (AP ?/MAG)  
                        (VP ?/VA + ?/EP + ???/EF + ./SF))))  
(6)  ???             ?-?        ?       ?-?-???.  
       yunanhi            mas-i         ssek    choh-ass-supnita.  
       particularly      taste-Nom  quite   good-Past-End 
     ?Particularly, the taste of (it) was pretty good.?  
    (S  (AP  ???/MAG) 
          (S (NP_SBJ ?/NNG + ?/JKS)  
                 (VP  (AP ?/MAG)  
                         (VP ?/VA + ?/EP + ???/EF + ./SF)))) 
According to the analysis of ST, (5) is represented as a DSC that licenses two sub-
jects, hayspam and mas. In contrast, (6) is represented as a complex clause that only 
licenses a single matrix subject, mas and the first zero subject referring to the same 
nominal entity in the preceding phrase has been ignored in the sentential representa-
tion. It is difficult to extract certain syntactic patterns from the zero-less treebanks 
because their structural representations do not reflex the accurate argument-predicate 
realization. It is because they focus on surface realization of arguments instead of 
considering lexical constraints of argument-predicate relations.   
The third critical problem of zero-less treebanks is related to discourse analysis. 
Unrealized arguments are important for tracking the attentional state of a discourse in 
topic-oriented languages like Korean and Japanese. Within the framework of center-
ing theory, e.g. Walker et al [9], Iida [7]), Hong [6], etc. it has been shown that a 
salient entity recoverable by inference from the context is frequently omitted, and 
therefore interpreting these zero pronouns allows one to follow the center of the atten-
tional state. Walker et al [9] applied the centering model, developed for pronoun 
592 S.-H. Lee, D.K. Byron, and S.B. Jang 
resolution in English, to zero pronoun resolution in Japanese. They argue that inter-
pretation of a zero pronoun is determined by discourse factors. This suggests that 
identifying occurrences of zero pronouns and retrieving their antecedents are impor-
tant in developing a computational model of discourse interpretations as well as syn-
tactic and semantic analyses. When it comes to topic information retrieval, the salient 
element under the discussion of the given discourse is realized as a zero. Grammatical 
roles and semantic restrictions provide crucial cues for the interpretations of them. 
However, without specifying the argument positions of these zeros, discourse proc-
essing of the given utterances is impossible. 
3   Relevant Issues of Zero Annotation 
Zero marked treebanks function as useful resource for researchers, especially the 
anaphora resolution community. For developing computational tools of anaphor reso-
lution, it is necessary to determine the distribution of zero pronouns and their link to 
other discourse properties. There has historically been a lack of annotated material 
available to the wider research community that would allow us to investigate these 
questions. Researchers in the past worked mainly with small amounts of hand-
constructed data rather than being able to do large-scale corpus analysis. This lack has 
been recently pointed out by Lee et al [8] evaluating the Penn Korean Treebank (Han 
et. al. [4]), which includes annotations indicating the position of zero pronouns. In 
PKT, annotations of zeros are problematic due to inconsistent mark-up for zero pro-
nouns and structural representation of trees. Inconsistent annotation of zero pronouns 
in PTK brings an imminent issue for developers of Treebanks and other annotated 
language resources; when and how should these unrealized elements be explicitly 
introduced into the linguistic material being developed? Unless these questions are 
resolved, treebanks cannot fulfill their potential as a source of linguistic knowledge 
about zero pronouns. Also, the same question should be taken into consideration by 
other teams developing similar resources in other languages.  
3.1   Argument vs. Adjunct 
Previous authors have pointed out that the antecedents of zero pronouns can often be 
determined by using various grammatical properties such as topicality, agreement, 
tense, and aspect as well as subcategorization information (Walker et al [9]; Iida [7]; 
Hong [6],  etc.). However, in order for these factors to be useful in developing anaph-
ora resolution algorithms, they must be reliably and consistently annotated into the 
source data. Thus, the first crucial step for zero pronoun resolution is identifying the 
exact positions of zero pronouns. Determining the positions of invisible zeros is a 
difficult task. This process needs to refer to the argument realization in a given utter-
ance and the previous utterances of the same discourse unit. The argument realization 
of a sentence is based upon argument structure of a predicate.  
(7) a.  John-i  .       kesil-eyse           swi-ko  iss-ess-ta? 
          John-Nom    living room-in    rest-Pres Prog-Past-E 
         ?John was resting in the living room.? 
      b.  sakwa-lul  mek-ess-ta.  
           apple-Acc  eat-past-E 
          ?(He) ate an apple.? 
 Why Is Zero Marking Important in Korean? 593 
In (7b), the argument structure of mekta ?eat? suggests that the subject is missing in 
a sentence sakwalul mekesse ?ate an apple?. However, do we need to mark the adjunct 
kesileyse  ?in the living room? in (7b)? In the given utterances, it seems to be possible 
for John to have eaten the apple in the living room but it is not necessarily true. The 
combinations of adjunct and predicate are not predictable by using argument structure 
of a predicate. With no specific guideline, identifying missing adjuncts complicates 
the annotation process. Thus, we argue that only missing arguments must be marked. 
As for zero argument annotation, the current annotation in PKT is somewhat prob-
lematic due to unclear distinction of obligatory argument vs. optional argument. Ac-
cording to the guidelines of PKT, only a missing obligatory argument should be anno-
tated as an empty element. Missing optional arguments and adjuncts are not. Thus, in 
PKT, missing subject or object elements were marked as zeros while missing locative 
arguments were not marked when they were omitted. However, the annotation 
method based on an obligatory vs. optional argument may result in the loss of crucial 
information needed at later stage of retrieving an antecedent of a zero element. For 
example, the locative argument, ?the 45th division-in? has not been marked up as a 
zero pronoun in the tagged sentence of (8b)  
(8) a: ?     45   ???  ?     ??-??  ????  ??? ? 
          the   45   division  again what-with   composed  be  
            ?What is the 45th Division composed of ??  
        (S  (NP-SBJ ?/XPF+45/NNU 
                            ??/NNC+?/PAU) 
              (VP (VP (ADVP ?/ADV) 
                              (VP (NP-COMP ??/NPN+??/PAD) 
                                      (VV ??/NNC+?/XSV+?/EAU))) 
                                         ?/VX+??/EFN)  ?/SFN) 
         b: ??          ???-?     ???? . 
              division    head-Nom      exist 
             ?The head division is (there). 
        (S (NP-SBJ ??/NNC 
                            ???/NNC+?/PCA) 
              (ADJP ?/VJ+???/EFN).  /SFN) 
In the given discourse segments, the adjective ?? issta requires a locative argu-
ment which has been treated as an optional argument in PKT. Thus, the information 
of the missing locative has not been represented even though it is crucial for retriev-
ing the meaning of the sentence. Another concern with respect to distinction of argu-
ment and adjunct is that ST classifies only subject and object as arguments and ex-
cludes other case-marked nominals as adjunct2. This classification may cause prob-
lems when zero pronouns are added in their treebanks.  
In identifying missing zero arguments, maintaining consistency is crucial. For this 
task, we can rely on a dictionary containing constant argument structure of predicates. 
Dictionaries with specific argument structure information can be used here, such as 
                                                          
2
  In addition to subject and object, nominals in front of predicates, toyta, anita and quotation 
clause have been included as arguments.  
594 S.-H. Lee, D.K. Byron, and S.B. Jang 
the Yonsei Korean dictionary, where different subcategorization frames are listed 
according to semantically disambiguated senses for each predicate. For correct identi-
fication of a zero pronoun in the given utterance, annotators need to examine the rele-
vant previous utterances in the same discourse unit and determine the exact verb sense 
of the relevant predicate by using the dictionary. In addition, checking inter-annotator 
agreement is also an essential task (Carletta [2]).  
3.2   Language Specific Properties of Korean 
Another notable point is that the developers need to pay attention to language specific 
properties of Korean. There are some notable morphosyntactic properties of Korean 
with respect to zero pronoun annotation. In order to maintain constant annotation of 
zero pronouns, it is important to carefully represent specific features related to zero 
pronouns. In this section, we will discuss specific properties that can be added for 
zero pronoun annotation. It will increase the applicability of the treebank to both 
theoretical research on anaphors and computational modeling of anaphor resolution. 
[1]   CASE MARKING  
In determining an antecedent of a zero pronoun, the existence of topics plays an im-
portant role in Korean. In the previous theoretical literature, it has been commonly 
assumed that the topic marked elements appear at the higher phrasal level than the 
phrasal combination of subject-predicate. At the discourse level, Walker et al [9] and 
Iida [7] provide evidence that topic marked elements function as antecedents of zero 
pronouns in Japanese. The similar property has been also observed with Korean by 
Hong [6]. As seen in the following examples, the sentence-initial topic functions as 
the antecedent of zero pronouns that appear in the latter utterances. This phenomenon 
suggests that the topic marker needs to be differentiated from other postpositions and 
that grammatical topics are to be differentiated from other grammatical arguments 
like subjects and objects.  
(9) a  Seyho-nun apeci-eykey   chingchan-ul pat-ca    ekkay-ka ussukhayci-pnita.  
          Seyho-Top  father-to        praise-Acc     receive-E be proud of 
        ?As for Seyho, he felt pride when he received praise from father.?  
      b. ?  20 ilman-ey  tut-nun   chingchan-ila kippum-un   hankyel tehaysssupnita  
               20days-in    hear-Rel  praise-since    pleasure-Top  far         more  
       ?Since it was the praise (he) heard for the first time in 20 days, his pleasure     
          was much more.?  
      c. ?  emeni-eykey-nun  nul         kkwucilam-kwa   cansoli-man   tulesssupnita.    
              mother-to-Top      always    scolding-and        lecture-only    heard 
       ?From his mother, (he) always heard only scolding and lecture.? 
In general, while the marker nun functions as a topic marker in a sentence initial 
position, it also works as an auxiliary postposition in a non-initial position of a sen-
tence in Korean. The first is classified as a grammatical topic marker while the latter 
is a contrastive topic marker in traditional Korean grammar. However, the current 
annotations of PKT and ST treat topic marker nun as the same auxiliary postposition, 
which is similar to other postpositions man ?only?, to ?also?, and mace ?even?. In par-
ticular, PKT and ST represent a subject NP with a topic marker as the subject, while 
 Why Is Zero Marking Important in Korean? 595 
an object with a topic marker is treated as a scrambled argument out of its canonical 
position. With respect to zero pronouns, the sentence initial topic marker needs to be 
distinctly marked from other postpositions. In addition, we claim that the structural 
position of a topicalized subject needs to be differentiated from a normal subject posi-
tion in parallel with a topicalized object and other element, which leave zero traces in 
their original positions. 
Another problem with case markers is subject marker -eyse, which only combines 
with nominals referring to a group or organization. In Korean, these group nominals 
do not take the nominative case i/ka but the case marker -eyse as in (12)  
(10) wuli hakkyo-eyse  wusung-ul         hayssta.  
        our school-Nom    winning-Acc     did 
        ?Our school won.? 
Although -eyse has been treated as a nominative case marker in traditional Korean 
grammar, both PKT and ST do not treat -eyse as a nominative marker. Instead, group 
or organization nominals with the case marker-eyse  are analyzed as NP adverbial 
phrases. This, however, mistakenly licenses a zero subject in the following example 
of PKT even though the subject with case marker -eyse exists. In order to eliminate 
redundant marking for the zero subjects, it is better to analyze the case marker, -eyse 
as a nominative case marker in Korean. 
(11) 2 ??-??          ??       ???-?               ???-?      ?-?? 
        2 taytay-eyse         etten        mwucenmang-ul     wunyonha-ko iss-ci? 
        2 squadron-Nom   which      radio network-Acc  use-PresP-Q 
       ?What kind of radio network is the 2nd squadron using??             
       (S  (NP-ADV  2/NNU 
                             ??/NNC+??/PAD) 
       (S     (NP-SBJ *pro*) 
                (VP (VP (ADVP ?/ADV) 
                                (VP (NP-OBJ ??/DAN 
                                                      ???/NNC+?/PCA) 
                                        (VV ??/NNC+?/XSV+?/EAU))) 
                                ?/VX+?/EFN) ?/SFN) 
[2]   SUBJECTLESS CONSTRUCTIONS  
Unlike English having expletive pronouns it or there, certain predicate constructions 
do not license subject positions at all in Korean. Some examples are presented in 
(12),which include incomplete predicates with few inflectional forms.  
(12) -ey tayhaye, ?regarding on?-ey kwanhaye, ?about? -ey uyhaye, ?in terms of?  
        -lo inhayse  ?due to~?, -wa tepwule  ?with ~? etc.  
In addition, some modal auxiliary verbs like sangkita, poita, toyta, etc. do not license 
subject positions and have already been classified as subjectless constructions in Ko-
rean grammar. While ST treats these modal verbs to be included in the preceding 
verbal clusters, PKT separates them from the preceding verbs and assigns zero sub-
jects for these verbs. Thus, the PKT approach redundantly assigns zero subjects for 
subjectless predicates.  
596 S.-H. Lee, D.K. Byron, and S.B. Jang 
[3]   VERBAL MORPHOLOGY OF SPEECH ACT  
As for zero pronoun resolution, verbal suffixes representing speech act can be a useful 
source. Thus, we argue for adding these morphosyntactic features in treebanks. It has 
been well known that in Korean certain speech acts such as declaration, request, ques-
tion, promise, etc. are associated with verb morphology; five different types of verbal 
inflections are used to indicate declaratives, interrogatives, imperatives, propositives, 
and exclamatives. Information of a missing subject can be retrieved from verbal mor-
phology. For example, the imperative verbal endings suggest that a missing subject 
refers to the hearer while promising verbal endings imply that a missing subject is the 
speaker. Thus, the missing subjects of the following examples are respectively inter-
preted as I, you and we based on the verbal suffixes representing a particular speech act.    
(13) a. ?   ka-llay. (Question) 
                 go-Q 
           ?Do (you) want to go?? 
        b. ?   ka-llay. (Declaration) 
                  go-will 
            ?(I) will go.?   
        c. ?    ka-ca. (Request) 
                   go-let?s 
             ?Let?s go.? 
Verbal endings of speech acts can be used to enhance the process of determining 
an antecedent of a zero pronoun subject. In the current annotations of PKT and ST, 
verbal suffixes do not subclassify the final endings. We argue that annotating the five 
classes of verbal suffixes differently will facilitate application of anaphor resolution 
algorithms on treebanks.   
[4]   WH-PRONOUN TAGGING  
Wh-pronouns in Korean include nwuka ?who?, mwues ?what?, encey ?when?, etise 
?where?, way ?why?, ettehkey ?how?, etc. Unfortunately, wh-pronouns are not dis-
tinctly tagged from other pronouns in the PKT and the ST. The information of wh-
pronouns can be useful for resolving the meaning of zero pronouns in the next an-
swering utterance As seen in (14b), a fragment directly related to a wh-pronoun nec-
essarily appears in the answering utterance while non-wh-elements previously men-
tioned are easily dropped.  This is because pairs of wh-question-answer tend to have 
the same predicates with the same argument structure. Therefore, answering utter-
ances of the wh-questions generally contain zero pronouns, whose antecedents appear 
in the preceding questioning utterances. 
(14) A:  John-i            Min-ul         mwe-la-ko               mitko  iss-ni?  
              John-Nom     Min-Acc      what-Co-Comp       believe being-Q 
             ?What does John believe Min to be?? 
        B:  ?          ?             kyoswu-la-ko          mitko   iss-nuntey.  
             SUBJ    OBJ         professor-Co-Comp   believe  being-END 
            ?(He) believes (her) to be a professor.?   
 Why Is Zero Marking Important in Korean? 597 
4   New Annotation Scheme of Korean Zero Pronouns  
Once zeros are identified by argument structure information of predicates and the 
previous utterances in the given discourse, the additional reference information can be 
added in treebanks to support anaphor resolution. Zeros in Korean can be classified 
into different classes according to properties of their reference. Anaphor resolution 
algorithms can be applied for certain types of pronouns. For example, in order to 
retrieve the meaning of a zero pronoun referring to a nominal entity in the previous 
utterance, the resolution algorithm will search nominal entities that appear in the pre-
vious utterance by making a list of antecedent candidates and selecting the most ap-
propriate candidate. In contrast, the searching algorithm does not need to apply for a 
zero element referring to an indefinite entity as in (15). 
(15) ?   holangi    kwul-ey      ka-ya    holangi-lul      capnunta.  
                  tiger         den-to         go-E     tiger-Acc        catch 
 (Lit.)    ?One should go to the tiger?s den in order to catch a tiger.  
     (Trans.)?Don?t hesitate but pursue what you need to do.? 
According to reference relation between a zero pronoun and its antecedent, zero 
pronouns in Korean can be divided into three classes as in Table 1; discourse ana-
phoric zeros, deictic and indexical zeros, and indefinite zeros. 
In the given classification, discourse anaphoric zeros take their reference from an-
tecedents in the previous utterances in the given discourse. This class is the main one 
that anaphor resolution systems aim to handle. The discourse anaphoric zeros can be 
divided into three subclasses according to the semantic properties of their antecedents. 
Table 1. Classification of Korean Zero Pronouns 
     Individual Entities 
Propositions 
 
Discourse Anaphoric Zeros 
Eventualities  
Deictic and Indexical Zeros 
Indefinite Zeros 
The first subclass of discourse anaphoric zeros refers to individual domain entities, 
the second, eventualities, and the third, propositions. The zeros of individual entities 
refer to entities that were introduced into the discourse via noun phrases. Most exam-
ples presented in the previous sections correspond to this class. The zeros of proposi-
tions refer to propositions introduced in the previous utterance as in (16). 
 (16) A: 108 yentay   cihwipwu-nun    hyencay eti-ey wichihako issnun-ka? 
             108 regiment   headquarter-TOP  now  where-at locate   being-Q 
             ?Where is the headquarter of the 108th regiment located?? 
        B:  ?1      ?2      molukeyss-supnita.  
              SUBJ   OBJ     not know-END 
             ?I don?t know.?    
      (?1 = ?B?, ?2= ?Where the headquarter of the 108th regiment is located ?) 
598 S.-H. Lee, D.K. Byron, and S.B. Jang 
The third class of zero anaphors referring to eventualities, i.e. action and event as 
in (17) (Asher [1]).    
 (17) A: Mary-ka              cip-ey -   ka-ko          sipheha-ci  anha.  
             Mary-Nom          home-to go-E           want-END  don?t 
            ?Children don?t want to go home.? 
        B: na-to      ?          silhe.       
             I-also                  hate 
            ?I also hate to go home.?       ( ? = the action of going home) 
The second class of zero pronouns includes deictic and indexical zeros that directly 
refer to entities that can be determined in the given spatiotemporal context, which 
generally include a speaker and an addressee. The third class includes indefinite zeros 
referring to general people, which corresponds to they, one, and you in English.  
Given the classification of zero pronouns, different coding systems can be provided 
for each class for annotating these elements. According to different classes of zeros, the 
resolution process varies. Zero anaphors of discourse anaphoric entities will be marked 
the same as their antecedents in the previous utterances. Anaphor resolution algorithms 
determine the antecedent of a zero anaphor by searching through the antecedent candi-
dates in different orders. Deictic and indexical zeros are dependent on discourse partici-
pants. In general, a zero anaphor can also refer to the speaker or the hearer. Overlapping 
mark-up for these zeros need to be allowed although resolution mechanisms for deictic 
and indexical zeros are different from those for anaphors. Indefinite zeros need to be 
marked but anaphor resolution algorithms do not need to be applied to them. 
5   Conclusion 
In this paper, we discussed why zero marking is necessary for Korean treebanks and 
how invisible zeros can be consistently marked in annotated corpora like treebanks. The 
importance of zero mark-up in Korean treebanks has been discussed with respect to 
correct linguistic analysis and efficient application of computational process. We also 
claimed that only missing arguments are marked as zeros and a dictionary like Yonsei 
Dictionary with full specification of argument-predicate relations can be a useful source 
for the annotation task. By examining PKT and the newly developing ST, we deter-
mined four linguistic features that are useful for anaphor resolution in Korean; case 
marking, subjectless construction, verb morphology of speech acts and wh-pronoun 
tagging. In addition, we provided a new annotation scheme that can be utilized for anno-
tating treebanks and testing anaphor resolution algorithms with annotated corpora.  
References  
1. Asher, N.:. Reference to Abstract Objects in Discourse. Kluwer Academic Publishers. 
(1993). 
2. Carletta, J. Assessing Agreement on Classification Tasks: the Kappa Statistic, Computa-
tional Linguistics 22(2) (1996) 249-254. 
3. Dickinson, M. and Meurers, D.: Detecting Inconsistencies in Treebanks in Proceedings of 
the Second Workshop on Treebanks and Linguistics Theories.(TLT 2003)..V?xj?.  
Sweden. (2003) 
 Why Is Zero Marking Important in Korean? 599 
4. Han, C-H., Han, N-R., Ko, E-S.and Palmer, M.: Development and Evaluation of a Korean 
Treebank and Its Application to NLP.in Proceedings of the 3rd International Conference on 
Language Resources and Evaluation (LREC).(2002) 
5. Han, N-R.: Korean Null Pronouns: Classification and Annotation in Proceedings of the 
ACL 2004 Workshop on Discourse Annotation. (2004) 33-40. 
6. Hong M.: Centering Theory and Argument Deletion in Spoken Korean. The Korean Jour-
nal  Cognitive Science. Vol. 11-1 (2000) 9-24. 
7. Iida, M.: Discourse Coherence and Shifting Centers in Japanese texts in Walker, M., Joshi 
A.K., Prince E.F. (Eds.) Centering Theory in Discourse. Oxford University Press, Oxford: 
UK..(1998) 161-182. 
8. Lee, S., Byron, D., and Gegg-Harrison, W.: Annotations of Zero Pronoun Resolution in 
Korean Using the Penn Korean Treebank in the 3rd Worksop on Treebanks and Linguistics 
Theories (TLT 2004). T?bingen. Germany. (2004)  75-88. 
9. Walker, M., Iida, M., .Cotes, S.: Japanese Discourse and the Process of Centering in Com-
putational Linguistics, Vol. 20-2.: (1994.) 193-232 
10. 10. Dictionary   Yonsei Korean Dictionary. (1999) Dong-A Publishing Co. 
11. Guidelines of the Sejong Treebank. Korea University 
Proceedings of the ACL Interactive Poster and Demonstration Sessions,
pages 81?84, Ann Arbor, June 2005. c?2005 Association for Computational Linguistics
Automating Temporal Annotation with TARSQI
Marc Verhagen?, Inderjeet Mani?, Roser Sauri?,
Robert Knippen?, Seok Bae Jang?, Jessica Littman?,
Anna Rumshisky?, John Phillips?, James Pustejovsky?
? Department of Computer Science, Brandeis University, Waltham, MA 02254, USA
{marc,roser,knippen,jlittman,arum,jamesp}@cs.brandeis.edu
? Computational Linguistics, Georgetown University, Washington DC, USA
{im5,sbj3,jbp24}@georgetown.edu
Abstract
We present an overview of TARSQI, a
modular system for automatic temporal
annotation that adds time expressions,
events and temporal relations to news
texts.
1 Introduction
The TARSQI Project (Temporal Awareness and
Reasoning Systems for Question Interpretation)
aims to enhance natural language question an-
swering systems so that temporally-based questions
about the events and entities in news articles can be
addressed appropriately. In order to answer those
questions we need to know the temporal ordering of
events in a text. Ideally, we would have a total order-
ing of all events in a text. That is, we want an event
like marched in ethnic Albanians marched Sunday
in downtown Istanbul to be not only temporally re-
lated to the nearby time expression Sunday but also
ordered with respect to all other events in the text.
We use TimeML (Pustejovsky et al, 2003; Saur?? et
al., 2004) as an annotation language for temporal
markup. TimeML marks time expressions with the
TIMEX3 tag, events with the EVENT tag, and tempo-
ral links with the TLINK tag. In addition, syntactic
subordination of events, which often has temporal
implications, can be annotated with the SLINK tag.
A complete manual TimeML annotation is not
feasible due to the complexity of the task and the
sheer amount of news text that awaits processing.
The TARSQI system can be used stand-alone
or as a means to alleviate the tasks of human
annotators. Parts of it have been intergrated in
Tango, a graphical annotation environment for event
ordering (Verhagen and Knippen, Forthcoming).
The system is set up as a cascade of modules
that successively add more and more TimeML
annotation to a document. The input is assumed to
be part-of-speech tagged and chunked. The overall
system architecture is laid out in the diagram below.
Input Documents
GUTime
Evita
SlinketGUTenLINK
SputLink
TimeML Documents
In the following sections we describe the five
TARSQI modules that add TimeML markup to news
texts.
2 GUTime
The GUTime tagger, developed at Georgetown Uni-
versity, extends the capabilities of the TempEx tag-
ger (Mani and Wilson, 2000). TempEx, developed
81
at MITRE, is aimed at the ACE TIMEX2 standard
(timex2.mitre.org) for recognizing the extents and
normalized values of time expressions. TempEx
handles both absolute times (e.g., June 2, 2003) and
relative times (e.g., Thursday) by means of a num-
ber of tests on the local context. Lexical triggers like
today, yesterday, and tomorrow, when used in a spe-
cific sense, as well as words which indicate a posi-
tional offset, like next month, last year, this coming
Thursday are resolved based on computing direc-
tion and magnitude with respect to a reference time,
which is usually the document publication time.
GUTime extends TempEx to handle time ex-
pressions based on the TimeML TIMEX3 standard
(timeml.org), which allows a functional style of en-
coding offsets in time expressions. For example, last
week could be represented not only by the time value
but also by an expression that could be evaluated to
compute the value, namely, that it is the week pre-
ceding the week of the document date. GUTime also
handles a variety of ACE TIMEX2 expressions not
covered by TempEx, including durations, a variety
of temporal modifiers, and European date formats.
GUTime has been benchmarked on training data
from the Time Expression Recognition and Normal-
ization task (timex2.mitre.org/tern.html) at .85, .78,
and .82 F-measure for timex2, text, and val fields
respectively.
3 EVITA
Evita (Events in Text Analyzer) is an event recogni-
tion tool that performs two main tasks: robust event
identification and analysis of grammatical features,
such as tense and aspect. Event identification is
based on the notion of event as defined in TimeML.
Different strategies are used for identifying events
within the categories of verb, noun, and adjective.
Event identification of verbs is based on a lexi-
cal look-up, accompanied by a minimal contextual
parsing, in order to exclude weak stative predicates
such as be or have. Identifying events expressed by
nouns, on the other hand, involves a disambigua-
tion phase in addition to lexical lookup. Machine
learning techniques are used to determine when an
ambiguous noun is used with an event sense. Fi-
nally, identifying adjectival events takes the conser-
vative approach of tagging as events only those ad-
jectives that have been lexically pre-selected from
TimeBank1, whenever they appear as the head of a
predicative complement. For each element identi-
fied as denoting an event, a set of linguistic rules
is applied in order to obtain its temporally relevant
grammatical features, like tense and aspect. Evita
relies on preprocessed input with part-of-speech tags
and chunks. Current performance of Evita against
TimeBank is .75 precision, .87 recall, and .80 F-
measure. The low precision is mostly due to Evita?s
over-generation of generic events, which were not
annotated in TimeBank.
4 GUTenLINK
Georgetown?s GUTenLINK TLINK tagger uses
hand-developed syntactic and lexical rules. It han-
dles three different cases at present: (i) the event
is anchored without a signal to a time expression
within the same clause, (ii) the event is anchored
without a signal to the document date speech time
frame (as in the case of reporting verbs in news,
which are often at or offset slightly from the speech
time), and (iii) the event in a main clause is anchored
with a signal or tense/aspect cue to the event in the
main clause of the previous sentence. In case (iii), a
finite state transducer is used to infer the likely tem-
poral relation between the events based on TimeML
tense and aspect features of each event. For ex-
ample, a past tense non-stative verb followed by a
past perfect non-stative verb, with grammatical as-
pect maintained, suggests that the second event pre-
cedes the first.
GUTenLINK uses default rules for ordering
events; its handling of successive past tense non-
stative verbs in case (iii) will not correctly or-
der sequences like Max fell. John pushed him.
GUTenLINK is intended as one component in a
larger machine-learning based framework for order-
ing events. Another component which will be de-
veloped will leverage document-level inference, as
in the machine learning approach of (Mani et al,
2003), which required annotation of a reference time
(Reichenbach, 1947; Kamp and Reyle, 1993) for the
event in each finite clause.
1TimeBank is a 200-document news corpus manually anno-
tated with TimeML tags. It contains about 8000 events, 2100
time expressions, 5700 TLINKs and 2600 SLINKs. See (Day
et al, 2003) and www.timeml.org for more details.
82
An early version of GUTenLINK was scored at
.75 precision on 10 documents. More formal Pre-
cision and Recall scoring is underway, but it com-
pares favorably with an earlier approach developed
at Georgetown. That approach converted event-
event TLINKs from TimeBank 1.0 into feature vec-
tors where the TLINK relation type was used as the
class label (some classes were collapsed). A C5.0
decision rule learner trained on that data obtained an
accuracy of .54 F-measure, with the low score being
due mainly to data sparseness.
5 Slinket
Slinket (SLINK Events in Text) is an application
currently being developed. Its purpose is to automat-
ically introduce SLINKs, which in TimeML specify
subordinating relations between pairs of events, and
classify them into factive, counterfactive, evidential,
negative evidential, and modal, based on the modal
force of the subordinating event. Slinket requires
chunked input with events.
SLINKs are introduced by a well-delimited sub-
group of verbal and nominal predicates (such as re-
gret, say, promise and attempt), and in most cases
clearly signaled by the context of subordination.
Slinket thus relies on a combination of lexical and
syntactic knowledge. Lexical information is used to
pre-select events that may introduce SLINKs. Pred-
icate classes are taken from (Kiparsky and Kiparsky,
1970; Karttunen, 1971; Hooper, 1975) and subse-
quent elaborations of that work, as well as induced
from the TimeBank corpus. A syntactic module
is applied in order to properly identify the subor-
dinated event, if any. This module is built as a
cascade of shallow syntactic tasks such as clause
boundary recognition and subject and object tag-
ging. Such tasks are informed from both linguistic-
based knowledge (Papageorgiou, 1997; Leffa, 1998)
and corpora-induced rules (Sang and De?je?an, 2001);
they are currently being implemented as sequences
of finite-state transducers along the lines of (A??t-
Mokhtar and Chanod, 1997). Evaluation results are
not yet available.
6 SputLink
SputLink is a temporal closure component that takes
known temporal relations in a text and derives new
implied relations from them, in effect making ex-
plicit what was implicit. A temporal closure compo-
nent helps to find those global links that are not nec-
essarily derived by other means. SputLink is based
on James Allen?s interval algebra (1983) and was in-
spired by (Setzer, 2001) and (Katz and Arosio, 2001)
who both added a closure component to an annota-
tion environment.
Allen reduces all events and time expressions to
intervals and identifies 13 basic relations between
the intervals. The temporal information in a doc-
ument is represented as a graph where events and
time expressions form the nodes and temporal re-
lations label the edges. The SputLink algorithm,
like Allen?s, is basically a constraint propagation al-
gorithm that uses a transitivity table to model the
compositional behavior of all pairs of relations. For
example, if A precedes B and B precedes C, then
we can compose the two relations and infer that A
precedes C. Allen allowed unlimited disjunctions of
temporal relations on the edges and he acknowl-
edged that inconsistency detection is not tractable
in his algebra. One of SputLink?s aims is to ensure
consistency, therefore it uses a restricted version of
Allen?s algebra proposed by (Vilain et al, 1990). In-
consistency detection is tractable in this restricted al-
gebra.
A SputLink evaluation on TimeBank showed that
SputLink more than quadrupled the amount of tem-
poral links in TimeBank, from 4200 to 17500.
Moreover, closure adds non-local links that were
systematically missed by the human annotators. Ex-
perimentation also showed that temporal closure al-
lows one to structure the annotation task in such
a way that it becomes possible to create a com-
plete annotation from local temporal links only. See
(Verhagen, 2004) for more details.
7 Conclusion and Future Work
The TARSQI system generates temporal informa-
tion in news texts. The five modules presented here
are held together by the TimeML annotation lan-
guage and add time expressions (GUTime), events
(Evita), subordination relations between events
(Slinket), local temporal relations between times and
events (GUTenLINK), and global temporal relations
between times and events (SputLink).
83
In the nearby future, we will experiment with
more strategies to extract temporal relations from
texts. One avenue is to exploit temporal regularities
in SLINKs, in effect using the output of Slinket as
a means to derive even more TLINKs. We are also
compiling more annotated data in order to provide
more training data for machine learning approaches
to TLINK extraction. SputLink currently uses only
qualitative temporal infomation, it will be extended
to use quantitative information, allowing it to reason
over durations.
References
Salah A??t-Mokhtar and Jean-Pierre Chanod. 1997. Sub-
ject and Object Dependency Extraction Using Finite-
State Transducers. In Automatic Information Extrac-
tion and Building of Lexical Semantic Resources for
NLP Applications. ACL/EACL-97 Workshop Proceed-
ings, pages 71?77, Madrid, Spain. Association for
Computational Linguistics.
James Allen. 1983. Maintaining Knowledge about
Temporal Intervals. Communications of the ACM,
26(11):832?843.
David Day, Lisa Ferro, Robert Gaizauskas, Patrick
Hanks, Marcia Lazo, James Pustejovsky, Roser Saur??,
Andrew See, Andrea Setzer, and Beth Sundheim.
2003. The TimeBank Corpus. Corpus Linguistics.
Joan Hooper. 1975. On Assertive Predicates. In John
Kimball, editor, Syntax and Semantics, volume IV,
pages 91?124. Academic Press, New York.
Hans Kamp and Uwe Reyle, 1993. From Discourse to
Logic, chapter 5, Tense and Aspect, pages 483?546.
Kluwer Academic Publishers, Dordrecht, Netherlands.
Lauri Karttunen. 1971. Some Observations on Factivity.
In Papers in Linguistics, volume 4, pages 55?69.
Graham Katz and Fabrizio Arosio. 2001. The Anno-
tation of Temporal Information in Natural Language
Sentences. In Proceedings of ACL-EACL 2001, Work-
shop for Temporal and Spatial Information Process-
ing, pages 104?111, Toulouse, France. Association for
Computational Linguistics.
Paul Kiparsky and Carol Kiparsky. 1970. Fact. In
Manfred Bierwisch and Karl Erich Heidolph, editors,
Progress in Linguistics. A collection of Papers, pages
143?173. Mouton, Paris.
Vilson Leffa. 1998. Clause Processing in Complex Sen-
tences. In Proceedings of the First International Con-
ference on Language Resources and Evaluation, vol-
ume 1, pages 937?943, Granada, Spain. ELRA.
Inderjeet Mani and George Wilson. 2000. Processing
of News. In Proceedings of the 38th Annual Meet-
ing of the Association for Computational Linguistics
(ACL2000), pages 69?76.
Inderjeet Mani, Barry Schiffman, and Jianping Zhang.
2003. Inferring Temporal Ordering of Events in News.
Short Paper. In Proceedings of the Human Language
Technology Conference (HLT-NAACL?03).
Harris Papageorgiou. 1997. Clause Recognition in the
Framework of Allignment. In Ruslan Mitkov and
Nicolas Nicolov, editors, Recent Advances in Natural
Language Recognition. John Benjamins, Amsterdam,
The Netherlands.
James Pustejovsky, Jose? Castan?o, Robert Ingria, Roser
Saur??, Robert Gaizauskas, Andrea Setzer, and Graham
Katz. 2003. TimeML: Robust Specification of Event
and Temporal Expressions in Text. In IWCS-5 Fifth
International Workshop on Computational Semantics.
Hans Reichenbach. 1947. Elements of Symbolic Logic.
MacMillan, London.
Tjong Kim Sang and Erik Herve De?je?an. 2001. Introduc-
tion to the CoNLL-2001 Shared Task: Clause Identifi-
cation. In Proceedings of the Fifth Workshop on Com-
putational Language Learning (CoNLL-2001), pages
53?57, Toulouse, France. ACL.
Roser Saur??, Jessica Littman, Robert Knippen, Robert
Gaizauskas, Andrea Setzer, and James Puste-
jovsky. 2004. TimeML Annotation Guidelines.
http://www.timeml.org.
Andrea Setzer. 2001. Temporal Information in Newswire
Articles: an Annotation Scheme and Corpus Study.
Ph.D. thesis, University of Sheffield, Sheffield, UK.
Marc Verhagen and Robert Knippen. Forthcoming.
TANGO: A Graphical Annotation Environment for
Ordering Relations. In James Pustejovsky and Robert
Gaizauskas, editors, Time and Event Recognition in
Natural Language. John Benjamin Publications.
Marc Verhagen. 2004. Times Between The Lines. Ph.D.
thesis, Brandeis University, Waltham, Massachusetts,
USA.
Marc Vilain, Henry Kautz, and Peter van Beek. 1990.
Constraint propagation algorithms: A revised report.
In D. S. Weld and J. de Kleer, editors, Qualitative Rea-
soning about Physical Systems, pages 373?381. Mor-
gan Kaufman, San Mateo, California.
84
