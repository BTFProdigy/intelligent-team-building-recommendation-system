Proceedings of the 2nd Workshop on Building Educational Applications Using NLP,
pages 45?52, Ann Arbor, June 2005. c?Association for Computational Linguistics, 2005
Towards a Prototyping Tool for Behavior Oriented Authoring of  
Conversational Agents for Educational Applications 
 
 
Gahgene Gweon, Jaime Arguello, Carol Pai, Regan Carey, Zachary 
Zaiss, Carolyn Ros? 
Human-Computer Interaction Institute/ Language Technologies Institute 
Carnegie Mellon University 
5000 Forbes Avenue, Pittsburgh, PA 15213 USA 
Ggweon,jarguell,cpai,rcarey,zzaiss,cp3a@andrew.cmu.edu 
 
   
Abstract 
Our goal is to develop tools for facili-
tating the authoring of conversational 
agents for educational applications, and 
in particular to enable non-
computational linguists to accomplish 
this task efficiently.  Such a tool would 
benefit both learning researchers, al-
lowing them to study dialogue in new 
ways, and educational technology re-
searchers, allowing them to quickly 
build dialogue based help systems for 
tutoring systems. We argue in favor of 
a user-centered design methodology.  
We present our work-in-progress de-
sign for authoring, which is motivated 
by our previous tool development ex-
periences and preliminary contextual 
interviews and then refined through 
user testing and iterative design.   
1 Introduction 
This paper reports work in progress towards 
developing TuTalk, an authoring environment 
developed with the long term goal of enabling 
the authoring of effective tutorial dialogue 
agents.  It was designed for developers without 
expertise in knowledge representation, artificial 
intelligence, or computational linguistics.  In our 
previous work we have reported progress to-
wards the development of authoring tools spe-
cifically focusing on robust language 
understanding capabilities (Ros? et al, 2003; 
Ros? & Hall, 2004; Ros?, et al, 2005).  In this 
paper, we explore issues related to authoring 
both at the dialogue and sentence level, as well 
as the interaction between these two levels of 
authoring.  Some preliminary work on the un-
derlying architecture is reported in (Jordan, Ro-
s?, & VanLehn, 2001; Aleven & Ros?, 2004; 
Ros? & Torrey, 2004).  In this paper we focus 
on the problem of making this computational 
linguistics technology accessible to our target 
user population.   
We are developing the TuTalk authoring en-
vironment in connection with a number of exist-
ing local research projects related to educational 
technology in general and tutorial dialogue in 
particular.  It is being developed primarily for 
use within the Pittsburgh Sciences of Learning 
Center (PSLC) data shop, which includes devel-
opment efforts for a suite of authoring tools to 
be used for building the infrastructure for 7 dif-
ferent computer enhanced courses designated as 
LearnLab courses.  These LearnLab courses, 
which are conducted within local secondary 
schools as well as universities, and which in-
clude Chinese, French, English as a Second 
Language, Physics, Algebra, Geometry, and 
Chemistry, involve heavy use of technology 
both for the purpose of supporting learning as 
well as for the purpose of conducting learning 
research in a classroom setting.  Other local pro-
jects related to calculus and thermodynamics 
45
tutoring also have plans to use TuTalk.  In this 
paper we will discuss specifically how we have 
used corpora related to ESL, physics, thermody-
namics, and calculus in our development effort. 
To support this multi-domain effort, it is es-
sential that the technology we develop be do-
main independent and usable by a non-technical 
user population, or at least a user population not 
possessing expertise in knowledge representa-
tion, artificial intelligence, or computational lin-
guistics.  Thus, we are employing a corpus based 
methodology that bootstraps domain specific 
authoring using examples of desired conversa-
tional behavior for the domain. 
2 A Historical Perspective 
While a focus on design based on standards 
and practices from human-computer interaction 
community have not received a great deal of 
attention in previously published tool develop-
ment efforts known to the computational linguis-
tics community, our experience tells us that 
insufficient attention to these details leads to the 
development of tools that are unusable, particu-
larly to the user population that we target with 
our work. 
Some desiderata related to the design of our 
system are obvious based on our target user 
population.  Currently, many educational tech-
nology oriented research groups do not have 
computational linguists on their staff with the 
expertise required to author domain specific 
knowledge sources for use with sophisticated 
state-of-the-art understanding systems, such as 
CARMEL (Ros?, 2000) or TRIPS (Allen et al, 
2001). However, previous studies have shown 
that, while scaffolding and guidance is required 
to support the authoring process, non-
computational linguists possess many of the ba-
sic skills required to author conversational inter-
faces (Ros?, Pai, & Arguello, 2005). Because the 
main barrier of entry to such sophisticated tools 
are expertise in understanding the underlying 
data structures and linguistically motivated rep-
resentation, our tools should have an interface 
that masks the unnecessary details and provides 
intuitive widgets that manipulate the data in 
ways that are consistent with the mental models 
the users bring with them to the authoring proc-
ess.  In order to be maximally accessible to de-
velopers of educational technology, the system 
should involve minimal programming.   
The design of Carmel-Tools (Ros? et al, 
2003; Ros? & Hall, 2004), the first generation of 
our authoring tools, was based on these obvious 
desiderata and not on any in-depth analysis of 
data collected from our target user population.  
While an evaluation of the underlying computa-
tional linguistics technology showed promise 
(Ros? & Hall, 2004), the results from actual au-
thoring use were tremendously disappointing.  
A formal study reported in (Ros?, et al, 2005) 
demonstrates that even individuals with exper-
tise in computational linguistics have difficulty 
predicting the coverage of knowledge sources 
that would be generated automatically from ex-
ample texts annotated with desired representa-
tions. Informal user studies involving actual use 
of Carmel-Tools then showed that a conse-
quence of this lack of ability is that authors were 
left without a clear strategy for moving through 
their corpus.  As a result, time was lost from an-
notating examples that did not yield the maxi-
mum amount of new knowledge in the generated 
knowledge sources.  Furthermore, since authors 
tended not to test the generated knowledge 
sources as they were annotating examples, errors 
were difficult for them to track later, despite fa-
cilities designed to help them with that task.   
Another finding from our user studies was 
that although the interface prevented authors 
from violating the constraints they designed into 
their predicate language, it did not keep authors 
from annotating similar texts with very different 
representations, thus introducing a great deal of 
spurious ambiguity.  Thus, they did not naturally 
maintain consistency in their application of their 
own designed meaning representation languages 
across example texts.  An additional problem 
was that authors sometimes decomposed exam-
ples in ways that lead to overly general rules, 
which then lead to incorrect analyses when these 
rules matched inappropriate examples.   
These disappointing results convinced us of 
the importance of taking a user-centered design 
approach to our authoring interface redesign 
process. 
 
 
46
3 Preliminary Design Intents from 
Contextual Interviews 
The core essence of the user-centered design 
approach is designing from data rather than from 
preconceived notions of what will be useful and 
what will work well.  Expert blind spots often 
lead to designs based on intuitions that overlook 
needs or overly emphasize issues that are not 
centrally important (Koedinger & Nathan, 2004; 
Nathan & Koedinger, 2000).  Contextual inquiry 
is used at an early stage in the user-centered de-
sign process to collect the foundational data on 
which to build a design (Beyer and Holtzbatt, 
2000). Contextual Inquiry is a popular method 
developed within the Human Computer Interac-
tion community where the design team gathers 
data from end users while watching what the 
users do in context of their work. Contextual 
interviews are used to illuminate these observa-
tions by engaging end-users in interviews in 
which they show specific instances within their 
work life that are relevant for the design process.  
These methods help define requirements as well 
as plan and prioritize important aspects of func-
tionality.  At the same time, the system design-
ers get a chance to gain insights about the users? 
environment, tasks, cultural influences and diffi-
culties in the current processes.  
Many aspects of the Tutalk tool were de-
signed based on contextual inquiry (CI) data. 
The design team conducted five CIs with users 
who have experience in using existing authoring 
tools such as Carmel-Tools (Ros? & Hall, 2004). 
The design team leader also spent one week ob-
serving novice tool users working with the cur-
rent set of tools at an Intelligent Tutoring 
Summer School.  Here we will discuss some 
findings from those CIs and observations and 
how they motivated some general design intents, 
which we flesh out later in the paper.  
A common pattern we observed in our CIs 
was that having different floating windows for 
different tasks fills up the computer screen rela-
tively quickly and confuses authors as to where 
they are in the process of authoring.  The TuTalk 
design addresses this observed problem by an-
choring the main window and switching only the 
components of the window as needed.  A stan-
dard logic for layout and view switching helps 
authors know what to expect in different con-
texts.  Placement of buttons in TuTalk is consis-
tently near the textboxes that they control, and a 
bounding box is drawn around related sets of 
controls so that the user does not get lost trying 
to figure out where the buttons are or what they 
are for.   
We observed that authors needed to refer to 
cheat sheets and user documentation to use their 
current tools effectively and that different users 
did not employ the same terminology to refer to 
similar functionality, which made communica-
tion difficult.  Furthermore, their current suites 
of tools were not designed as one integrated en-
vironment.  Thus, a lot of shuffling of files from 
one directory to another was required in order to 
complete the authoring process.  Users without 
Unix operating system experience found this 
especially confusing.  Our goal is to require only 
very minimal documentation that can be ob-
tained on-line in the context of use.   
TuTalk is a single, integrated environment 
that makes use of GUI widgets for actions rather 
then requiring any text-based commands or file 
system activity.  In this way we hope to avoid 
requiring the users to use a manual or a ?cheat-
sheet? reference for the commands they forget. 
As is common practice, TuTalk also uses consis-
tent labels throughout the interface to promote 
understandability and communication with tool 
developers as well as other dialogue system de-
velopers. 
4 Exploring the User?s Mental Model 
through User Studies 
As an additional way of gaining insights into 
what sort of interface would make the process of 
authoring conversational interfaces accessible, 
we conducted a small, exploratory user study in 
which we examined how members of our target 
user population think about the structure of lan-
guage.   
Two groups of college-level participants with 
no deep linguistics training were asked to read 
three transcribed conversations about ordering 
from a menu at a restaurant from our English as 
a Second Language corpus.  The three specific 
restaurant dialogues were chosen because of 
their breadth of topic coverage and richness in 
linguistic expression.  Participants were asked to 
perform tasks with these dialogues to mimic 
47
three levels of conversational interface author-
ing: 
 
Macro Organization Tasks (dialogue level) 
Level 1. How authors understand, seg-
ment, and organize dialogue topics 
Level 2.  How authors generalize across 
dialogues as part of constructing a 
?model? script 
Micro Organization Task (sentence level) 
Level 3.  How authors categorize and 
decompose sentences within these dia-
logues 
 
The first group (Group A, five participants) 
was asked to perform Macro Organization Tasks 
before processing sentences for the Micro Or-
ganization Tasks.  The second group (Group B, 
four participants) was asked to perform these 
sets of tasks in the opposite order. 
Our findings for the Macro Organization 
Tasks showed that participants effectively broke 
down dialogues into segments that reflected in-
tuitive breaks in the conversation.  These topics 
were then organized into semantically related 
categories.  Although participants were not ex-
plicitly instructed on how to organize the topics, 
every participant used spatial proximity as a rep-
resentation for semantic relatedness. Another 
finding was the presence of primacy effects in 
the ?model? restaurant scripts they were asked to 
construct. These scripts were heavily influenced 
by the first dialogue read. As a result, important 
topics that surfaced in the other two dialogues 
were omitted from the model scripts. 
Furthermore, we found that participants in 
Group B took much longer in completing the 
Micro Organization Task (35-40 minutes as op-
posed to 25-30 minutes) without performing the 
Macro Organization Tasks first. In general, we 
found that participants clustered sentences based 
on surface characteristics rather than creating 
ontologically similar classes that would be more 
useful from a system development perspective. 
In a follow-up study we are exploring ways of 
guiding users to cluster sentences in ways that 
are more useful from a system building perspec-
tive. 
Our preliminary findings show that getting an 
overall sense of the corpus facilitates micro-
level organization. This is hindered by two fac-
tors:  First, primacy effects interfere with macro-
level comprehension. Second, system developers 
struggle to strategically select portions of their 
corpus on which to focus their initial efforts.  
5 Stage One: Corpus Organization 
While existing tools from our previous work 
required authors to organize their corpus data 
prior to their interaction with the tools, both our 
contextual research and user studies indicated 
that support for organizing corpus data prior to 
authoring is important.   
In light of this concern, the TuTalk authoring 
process consists of three main stages.  Corpus 
collection, corpus data organization through 
what we call the InfoMagnet interface, and au-
thoring propper. First, a corpus is collected by 
asking users to engage in conversation using 
either a typed or spoken chat interface. In the 
case of spoken input, the speech is then tran-
scribed into textual form. Second, the raw cor-
pus data is automatically preprocessed for 
display and interactive organization using the 
InfoMagnet interface.  As part of the preprocess-
ing, dialogue protocols are segmented automati-
cally at topic boundaries, which can be adjusted 
by hand later during authoring propper.  The 
topic oriented segments are then clustered semi-
automatically into topic based classes. The out-
put from this stage is an XML file where dia-
logue segments are reassembled into their 
original dialogue contexts, with each utterance 
labeled by topic. This XML file is finally passed 
onto the authoring environment propper, which 
is then used for finer grained processing, such as 
shifting topic segment boundaries and labeling 
more detailed utterance functionality.   
Our design is for knowledge sources that are 
runable from our dialogue system engine to be 
generated directly from the knowledge base cre-
ated during the fine-grained authoring process as 
in Carmel-Tools (Ros? & Hall, 2004), however 
currently our focus is on iterative development 
of a prototype of the authoring interaction de-
sign.  Thus, more work is required to create the 
final end-to-end implementation.  In this section 
we focus on the design of the corpus collection 
and organization part of the authoring process. 
 
48
5.1 Corpus Collection  
An important part of our mission is developing 
technology that can use collected and automati-
cally pre-processed corpus data to guide and 
streamline the authoring process. Prior to the 
arduous process of organizing and extracting 
meaningful data, a corpus must be collected.  
As part of the PSLC and other local tutorial 
dialogue efforts we have collected corpus data 
from multiple domains that we have made use of 
in our development process. In particular, we 
have been working with data collected in con-
nection with the PSLC Physics and English as a 
Second Language LearnLab courses as well as 
local Calculus and Thermodynamics tutoring 
projects.  Currently we have physics tutoring 
data primarily from one physics tutor (interac-
tions with 40 students), thermodynamics data 
from four different tutors (interactions with 27 
students), Calculus data from four different tu-
tors (84 dialogues), and ESL dialogues collected 
from 15 pairs of students (30 dialogues alto-
gether).  
While we have drawn upon data from all of 
these domains for testing the underlying lan-
guage processing technology for our develop-
ment effort, for our user studies we have so far 
mainly drawn upon our ESL corpus, which in-
cludes conversations between students about 
every-day tasks such as ordering from a restau-
rant or about their pets.  We chose the language 
ESL data for our initial user tests because we 
expected it to be easy for a general population to 
relate to, but we plan to begin using calculus 
data as well.   
5.2 InfoMagnets Interface 
As mentioned previously, once the raw dia-
logue corpus is collected, the next step is to sift 
through this data and assign utterances (or 
groups of utterances) to classes conceptualized 
by the author. Clustering is a natural step in this 
kind of exploratory data analysis, as it promotes 
learning by grouping and generalizing from 
what we know about some of the objects in a 
cluster. For this purpose we have designed the 
InfoMagnets interface, which introduces a non-
technical metaphor to the task of iterative docu-
ment clustering. The InfoMagnets interface was 
designed to address the problems identified in 
the user study discussed above in Section 4.  
Specifically, we expected that those problems 
could be addressed with an interface that:  
1. Divides dialogues into topic based 
segments and automatically clusters 
them into conceptually similar classes 
2. Eliminates primacy effects of sequen-
tial dialogue consumption by creating an 
inclusive compilation of all dialogue 
topics 
3. Makes the topic similarity of docu-
ments easily accessible to the user  
 
The InfoMagnets interface is displayed in 
Figure 1.  The larger circles (InfoMagnets) cor-
respond to cluster centroids and the smaller ones 
(particles) correspond to actual spans of text. 
Lexical cohesion in the vector space translates 
into attraction in the InfoMagnet space. The at-
traction from each particle to each InfoMagnet is 
evident from the particle?s position with respect 
to all InfoMagnets and its reaction-time when an 
InfoMagnet is moved by the user, which causes 
the documents that have some attraction with it 
to redistribute themselves in the InfoMagnet 
space.  
 
 
Figure 1 InfoMagnets Interface 
 
Being an unsupervised learning method, clus-
tering often requires human-intervention for 
fine-tuning (e.g. removing semantically-weak 
discriminators, culling meaningless clusters, or 
deleting/splitting clusters too fine/coarse for the 
author?s purpose). The InfoMagnets interface 
provides all this functionality, while shielding 
the author from the computational details inher-
ent in these tasks 
49
Initially, the corpus is clustered using the Bi-
secting K-means Algorithm described in (Kumar 
et al, 1998).  Although this is a hard clustering 
algorithm, the InfoMagnet interface shows the 
particles association with all clusters, given by 
the position of the particle. Using a cross-hair 
lens, the author is able to view the contents of 
each cluster centroid and each particle. The au-
thor is able to select a group of particles and 
view the common features between these parti-
cles and any InfoMagnet in the space. The inter-
face allows the editing of InfoMagnets by 
adding and removing features, splitting In-
foMagnets, and removing InfoMagnets. When 
the user edits an InfoMagnets, the effect in the 
particle distribution is shown immediately and in 
an animated way.  
5.3 XML format 
The data collected from the conversations 
in .txt format are reformatted into XML format 
before being displayed with InfoMagnet tool.  
The basic XML file contains a transcription of 
the conversational data and has the following 
structure: Under the top root tag, there is <dia-
logue> tag which designates the conversion 
about a topic. It has an ?id? attribute so that we 
can keep track of each separate conversation. 
Then each sentence has a <sentence> tag with 
two attributes ?uid? and ?agent?. ?uid? is a uni-
versal id and ?agent? tells who was speaking.  
Additionally, sentences are grouped into seg-
ments, marked off with a <subtopic> tag. 
The user?s interaction with the InfoMagnet in-
terface adds a ?subtopic-name? attribute to the 
subtopic tag. Then, the authoring interface 
proper, described below, allows for further ad-
justments and additions to the xml tags.  The 
final knowledge sources will be generated from 
this XML based representation. 
6 Authoring 
The authoring environment proper consists of 
two main views, namely the authoring view and 
tutoring view. The authoring view is where the 
author designs the behavior of the conversa-
tional agent. The authoring view has two levels; 
the topic level and the subtopic level. The tutor-
ing view is what a student will be looking at 
when interacting with the conversational agent. 
Our focus here is on the Authoring view. 
Authoring View: Topic Level 
The Topic level of the authoring view allows for 
manipulating the relationship between subtopics 
as well as the definition of the subtopic. Figure 2 
shows the topic level authoring view, which 
consists of two panels. In the left, the author in-
puts the description of the task that the student 
will engage in with the agent. The author can 
specify whether the student will be typing or 
talking, the title of the topic, the task description, 
an optional picture that aids with the task (such 
as a menu or a map of a city), and a time limit.  
In the right panel of the topic level authoring 
view, the structure imposed on the data by inter-
action with the InfoMagnets interface is dis-
played in sequential form. The top section of the 
interface (figure 2, section A) has a textbox for 
specifying an xml file to read. The next section 
(figure 2, section B), ?Move / Rename Subtopic? 
displays the subtopics. The order of the subtop-
ics displayed in this section acts as a guideline 
for the agent to follow during the conversation. 
Double-clicking on a subtopic will display a 
subtopic view on the right panel. This view acts 
as a reference for the agent?s conversation 
within the subtopic and is explained in the next 
section. The author can also rearrange the order 
of subtopics by selecting a subtopic and using 
the ?>? and ?<? buttons to move the subtopic 
right or left respectively. ?x? is used to delete 
the subtopic. The author can also specify 
whether the discussion of a subtopic is required 
(displayed in red) or optional (in green) using 
the checkbox that is labeled ?required?. Clicking 
on the ?Hide Opt? button will only display the 
required subtopics. 
The last section of the right panel in topic 
level authoring view (figure 2, section C) is ti-
tled ?move subtopic divider?. A blue line de-
notes the border of the subtopic. The author can 
move the line up or down to move the boundary 
of the subtopics automatically inserted by the 
InfoMagnets interface. The author can also click 
on any part of conversation and press the ?split? 
button to split the subtopic in two sections. In 
addition, she can change the label of the sub-
topic segment using the drop down list. 
50
  
 
 
Figure 2: Topic Level Authoring View 
 
Authoring View: Subtopic Level 
While the Topic View portion of the authoring 
interface proper allows specification of which 
subtopics can occur as part of a dialogue, which 
are required and which are optional, and what 
the default ordering is, the Subtopic Level is for 
specification of the low level turn-by-turn details 
of what happens within a subtopic segment.  
This section reports early work on the design of 
this portion of the interface. 
The subtopic view displays a structure that the 
conversational agent refers to in deciding what 
its next contribution should be.  The building 
blocks from which knowledge sources for the 
dialogue engine will be generated are templates 
abstracted from example dialogue segments, 
similar to KCD specifications (Jordan, Ros?, & 
VanLehn, 2001; Ros? & Torry, 2004).  As part 
of the process of abstracting templates, each ut-
terance is tagged with its utterance type using a 
menu-based interface as in (Gweon et al, sub-
mitted).  The utterance type determines what 
would be an appropriate form for a response.  
Identifying this is meant to allow the dialogue 
manager to maintain coherence in the emerging 
dialogue.  Users may also trim out undesired 
portions of text from the actual example frag-
ments in abstracting out templates to be used for 
generating knowledge sources. 
Each utterance type has sets of template re-
sponse types associated with them. The full set 
of utterance types includes Open questions, 
Closed questions, Understanding check ques-
tions, Assertions, Commands/Requests, Ac-
knowledgements, Acceptances, and Rejections. 
The templates will not be used in their authored 
form.  Instead, they will be used to generate 
knowledge sources in the form required by the 
backend dialogue system as in (Ros? & Hall, 
2004), although this is still work in progress.  
Each template is composed of one or more ex-
changes during which the speaker who initiated 
the segment maintains conversational control. If 
control shifts to the other speakers, a new tem-
plate is used to guide the conversation.  After 
each of the controlling speaker?s turns within the 
segment are listed a number of prototypical re-
sponses.  One of these responses is a default re-
sponse that signals that the dialogue should 
proceed to the next turn in the template.  The 
other prototypical responses are associated with 
subgoals that are in turn associated with other 
templates.  Thus, the dialogue takes on a hierar-
chical structure.   
Mixed initiative interaction is meant to 
emerge from the underlying template-based 
structure by means of the multi-threaded dis-
course management approach discussed in (Ros? 
& Torrey, 2004).  To this end, templates are 
meant to be used in two ways.  The first way is 
51
when the dialogue system has conversational 
control.  In this case, conversations can be man-
aged as in (Ros? et al, 2001). The second way in 
which templates are used is for determining how 
to respond when user?s have conversational con-
trol.  Provided that the user?s utterances match 
what is expected of the conversational partici-
pant who is in control based on the current tem-
plate, then the system can simply pick one of the 
expected responses.  Otherwise if at some point 
the user?s response does not match, the system 
should check whether the user is initiating yet a 
different segment.  If not, then the system should 
take conversational control. 
7 Future Plans 
In this paper we have discussed our user re-
search and design process to date for the devel-
opment of TuTalk, an authoring environment for 
conversational agents for educational purposes.  
We are continuing our user research and design 
iteration with the plan of end-to-end system test-
ing in actual use starting this summer. 
 
Acknowledgements 
This work was supported in part by Office of Naval 
Research, Cognitive and Neural Sciences Division 
Grant N00014-05-1-0043 and NSF Grant 
SBE0354420.  
References  
Aleven , V. and Ros?, C. P. 2004.  Towards Easier 
Creation of Tutorial Dialogue Systems: Integration 
of Authoring Environments for Tutoring and Dia-
logue Systems, Proceedings of the ITS Workshop 
on Tutorial Dialogue Systems  
Allen, J., Byron, D., Dzikovska, M., Ferguson, G., 
Galescu, L., & Stent, A. 2000. An Architecture for 
a Generic Dialogue Shell. NLENG: Natural Lan-
guage Engineering, Cambridge University Press, 6 
(3), 1-16. 
Beyer, H. & Holtzblatt, K. (1998). Contextual De-
sign, Morgan Kaufmann Publishers. 
Gweon, G., Ros?, C., Wittwer, J., Nueckles, M. 
(submitted).  Supporting Efficient and Reliable 
Content Analysis with Automatic Text Processing 
Technology, Submitted to INTERACT ?05. 
Jordan, P., Ros?, C. P., & VanLehn, K. (2001). Tools 
for Authoring Tutorial Dialogue Knowledge. In J. 
D. Moore, C. L. Redfield, & W. L. Johnson (Eds.), 
Proceedings of AI-ED 2001 (pp. 222-233). Am-
sterdam, IOS Press. 
Koedinger, K. R. & Nathan, M. J. (2004).  The real 
story behind story problems: Effects of representa-
tions on quantitative reasoning.  The Journal of the 
Learning Sciences, 13(2). 
Nathan, M. J. & Koedinger, K. R. (2000).  Moving 
beyond teachers? intuitive beliefs about algebra 
learning.  Mathematics Teacher, 93, 218-223. 
Porter, M. 1980.  An Algorithm for Suffix Stripping, 
Program 14 {3}:130 ? 137. 
Robertson, S. and Walker, S., 1994.  Some simple 
effective approximations to the 2-poisson model 
for probabilistic weighted retrieval Proceedings of 
SIGIR-94. 
Ros?, C. P., and Torrey, C. (2004). ,DRESDEN: To-
wards a Trainable Tutorial Dialogue Manager to 
Support Negotiation Dialogues for Learning and 
Reflection, Proceedings of the Intelligent Tutoring 
Systems Conference. 
Ros?, C. P. and Hall, B. (2004). A Little Goes a Long 
Way: Quick Authoring of Semantic Knowledge 
Sources for Interpretation, Proceedings of SCa-
NaLu ?04. 
Ros?, C. P. 2000. A framework for robust semantic 
interpretation. In Proceedings of the First Meeting 
of the North American Chapter of the Association 
for Computational Linguistics, pages 311?318. 
Ros?, C. P., Pai, C., Arguello, J. 2005. Enabling Non-
Linguists to Author Advanced Conversational In-
terfaces Easily. Proceedings of FLAIRS 2005.  
Steinbach, Kepis, and Kumar, A Comparison of 
Document Clustering Techniques, pg. 8. 
http://lucene.apache.org 
52
Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 787?797,
Avignon, France, April 23 - 27 2012. c?2012 Association for Computational Linguistics
An Unsupervised Dynamic Bayesian Network Approach to Measuring
Speech Style Accommodation
Mahaveer Jain1, John McDonough1, Gahgene Gweon2, Bhiksha Raj1, Carolyn Penstein Rose?1,2
1. Language Technologies Institute; 2. Human Computer Interaction Institute
Carnegie Mellon University
Pittsburgh, PA 15213
{mmahavee,johnmcd,ggweon,bhiksha,cprose}@cs.cmu.edu
Abstract
Speech style accommodation refers to
shifts in style that are used to achieve strate-
gic goals within interactions. Models of
stylistic shift that focus on specific fea-
tures are limited in terms of the contexts
to which they can be applied if the goal of
the analysis is to model socially motivated
speech style accommodation. In this pa-
per, we present an unsupervised Dynamic
Bayesian Model that allows us to model
stylistic style accommodation in a way that
is agnostic to which specific speech style
features will shift in a way that resem-
bles socially motivated stylistic variation.
This greatly expands the applicability of the
model across contexts. Our hypothesis is
that stylistic shifts that occur as a result of
social processes are likely to display some
consistency over time, and if we leverage
this insight in our model,we will achieve
a model that better captures inherent struc-
ture within speech.
1 Introduction
Sociolinguistic research on speech style and its
resulting social interpretation has frequently fo-
cused on the ways in which shifts in style are
used to achieve strategic goals within interac-
tions, for example the ways in which speakers
may adapt their speaking style to suppress differ-
ences and accentuate similarities between them-
selves and their interlocutors in order to build
solidarity (Coupland, 2007; Eckert & Rickford,
2001; Sanders, 1987). We refer to this stylis-
tic convergence as speech style accommodation.
In the language technologies community, one tar-
geted practical benefit of such modeling has been
the achievement of more natural interactions with
speech dialogue systems (Levitan et al 2011).
Monitoring social processes from speech or
language data has other practical benefits as well,
such as enabling monitoring how beneficial an in-
teraction is for group learning (Ward & Litman,
2007; Gweon, 2011), how equal participation is
within a group (DiMicco et al 2004), or how
conducive an environment is for fostering a sense
of belonging and identification with a community
(Wang et al 2011).
Typical work on computational models of
speech style accommodation have focused on spe-
cific aspects of style that may be accommodated,
such as the frequency or timing of pauses or
backchannels (i.e., words that show attention like
?Un huh? or ?ok?), pitch, or speaking rate (Ed-
lund et al 2009; Levitan & Hirschberg, 2011). In
this paper, we present an unsupervised Dynamic
Bayesian Model that allows us to model speech
style accommodation in a way that does not re-
quire us to specify which linguistic features we
are targeting. We explore a space of models de-
fined by two independent factors, namely the di-
rect influence of one speaker?s style on another
speaker?s style and the influence of the relational
gestalt between the two speakers that motivates
the stylistic accommodation, and thus may keep
the accommodation moving consistently, with the
same momentum. Prior work has explored the in-
fluence of the first factor. However, because ac-
commodation reflects social processes that extend
over time within an interaction, one may expect a
certain consistency of motion within the stylistic
shift. Furthermore, we can leverage this consis-
tency of style shift to identify socially meaningful
variation without specifying ahead of time which
787
particular stylistic elements we are focusing on.
Our evaluation provides support for this hypothe-
sis.
When stylistic shifts are focused on specific
linguistic features, then measuring the extent of
the stylistic accommodation is simple since a
speaker?s style may be represented on a one or two
dimensional space, and movement can then be
measured precisely within this space using sim-
ple linear functions. However, the rich sociolin-
guistic literature on speech style accommodation
highlights a much greater variety of speech style
characteristics that may be associated with social
status within an interaction and may thus be bene-
ficial to monitor for stylistic shifts. Unfortunately,
within any given context, the linguistic features
that have these status associations, which we re-
fer to as indexicality, are only a small subset of
the linguistic features that are being used in some
way. Furthermore, which features carry this in-
dexicality are specific to a context. Thus, separat-
ing the socially meaningful variation from varia-
tion in linguistic features occurring for other rea-
sons is akin to searching for the proverbial needle
in a haystack. It is this technical challenge that we
address in this paper.
In the remainder of the paper we review the lit-
erature on speech style accommodation both from
a sociolinguistic perspective and from a techno-
logical perspective in order to motivate our hy-
pothesis and proposed model. We then describe
the technical details of our model. Next, we
present an experiment in which we test our hy-
pothesis about the nature of speech style accom-
modation and find statistically significant con-
firming evidence. We conclude with a discussion
of the limitations of our model and directions for
ongoing research.
2 Theoretical Framework
Our research goal is to model the structure of
speech in a way that allows us to monitor so-
cial processes through speech. One common goal
of prior work on modeling speech dynamics has
been for the purpose of informing the design of
more natural spoken dialogue systems (Levitan et
al., 2011). The practical goal of our work is to
measure the social processes themselves, for ex-
ample in order to estimate the extent to which
group discussions show signs of productive con-
sensus building processes (Gweon, 2011). Much
prior work on modeling emotional speech has
sought to identify features that themselves have
a social interpretation, such as features that pre-
dict emotional states like uncertainty (Liscombe
et al 2005), or surprise (Ang et al 2002), or
social strategies like flirting (Ranganath et al
2009). However, our goal is to monitor social pro-
cesses that evolve over time and are reflected in
the change in speech dynamics. Examples include
fostering trust, forming attachments, or building
solidarity.
2.1 Defining Speech Style Accommmodation
The concept of what we refer to as Speech
Style Accommodation has its roots in the field
of the Social Psychology of Language, where
the many ways in which social processes are re-
flected through language, and conversely, how
language influences social processes, are the ob-
jects of investigation (Giles & Coupland, 1991).
As a first step towards leveraging this broad range
of language processes, we refer to one very spe-
cific topic, which has been referred to as entrain-
ment, priming, accommodation, or adaptation in
other computational work (Levitan & Hirschberg,
2011). Specifically we refer to the finding that
conversational partners may shift their speaking
style within the interaction, either becoming more
similar or less similar to one another.
Our usage of the term accommodation specifi-
cally refers to the process of speech style conver-
gence within an interaction. Stylistic shifts may
occur at a variety of levels of speech or language
representation. For example, much of the early
work on speech style accommodation focused on
regional dialect variation, and specifically on as-
pects of pronunciation, such as the occurrence of
post-vocalic ?r? in New York City, that reflected
differences in age, regional identification, and so-
cioeconomic status (Labov, 2010a,b). Distribu-
tion of backchannels and pauses have also been
the target of prior work on accommodation (Lev-
itan & Hirschberg, 2011). These effects may be
moderated by other social factors. For example,
Bilous & Krauss (1988) found that females ac-
commodated to their male partners in conversa-
tion in terms of average number of words uttered
per turn. For example, Hecht et al(1989) re-
ported that extroverts are more listener adaptive
than introverts and hence extroverts converged
more in their data.
788
Accommodation could be measured either
from textual or speech content of a conversation.
The former relates to ?what? people say whereas
the latter to ?how? they say it. We are only inter-
ested in measuring accommodation from speech
in this work. There has been work on convergence
in text such as syntactic adaptation (Reitter et al
2006) and language similarity in online commu-
nities (Huffaker et al 2006).
2.2 Social Interpretation of Speech Style
Accommodation
It has long been established that while some
speech style shifts are subconscious, speakers
may also choose to adapt their way of speaking
in order to achieve social effects within an in-
teraction (Sanders, 1987). One of the main mo-
tives for accommodation is to decrease social dis-
tance. On a variety of levels, speech style accom-
modation has been found to affect the impression
that speakers give within an interaction. For ex-
ample, Welkowitz & Feldstein (1970) found that
when speakers become more similar to their part-
ners, they are liked more by partners. Another
study by Putman & Street Jr (1984) demonstrated
that interviewees who converge to the speaking
rate and response latency of their interviewers are
rated more favorably by the interviewers. Giles et
al. (1987) found that more accommodating speak-
ers were rated as more intelligent and supportive
by their partners. Conversely, social factors in
an interaction affect the extent to which speak-
ers engage in, and some times chose not to en-
gage in, accommodation. For example, Purcell
(1984) found that Hawaiian children exhibit more
convergence in interactions with peer groups that
they like more. Bourhis & Giles (1977) found that
Welsh speakers while answering to an English
surveyor broadened their Welsh accent when their
ethnic identity was challenged. Scotton (1985)
found that few people hesitated to repeat lexi-
cal patterns of their partners to maintain integrity.
Nenkova et al(2008) found that accommodation
on high frequency words correlates with natural-
ness, task success, and coordinated turn-taking
behavior.
2.3 Computational models of speech style
accommodation
Prior research has attempted to quantify accom-
modation computationally by measuring similar-
ity of speech and lexical features either over full
conversations or by comparing the similarity in
the first half and the second half of the conver-
sation. For example, Edlund et al(2009) mea-
sure accommodation in pause and gap length us-
ing measures such as synchrony and convergence.
Levitan & Hirschberg (2011) found that accom-
modation is also found in special social behaviors
within conversation such as backchannels. They
show that speakers in conversation tend to use
similar kinds of speech cues such as high pitch at
the end of utterance to invite a backchannel from
their partner. In order to measure accommodation
on these cues, they compute the correlation be-
tween the numerical values of these cues used by
partners.
In our work we measure accommodation using
Dynamic Bayesian Networks (DBNs). Our mod-
els are learnt in an unsupervised fashion. What
we are specifically interested in is the manner in
which the influence of one partner on the other is
modeled. What is novel in our approach is the
introduction of the concept of an accommodation
state, or relational gestalt variable, which essen-
tially models the momentum of the influence that
one partner is having on the other partner?s speak-
ing style. It allows us to represent structurally the
insight that accommodation occurs over time as a
reflection of a social process, and thus has some
consistency in the nature of the accommodation
within some span of time. The prior work de-
scribed in this section can be thought of as tak-
ing the influence of the partner?s style directly on
the speaker?s style within an instant as the floor
shifts from one speaker to the next. Thus, no con-
sistency in the manner in which the accommoda-
tion is occurring is explicitly encouraged by the
model. The major advantage of consistency of
motion within the style shift over time is that it
provides a sign post for identifying which style
variation within the speech is salient with respect
to social interpretation within a specific interac-
tion so that the model may remain agnostic and
may thus be applied to a variety of interactions
that differ with respect to which stylistic features
are salient in this respect.
3 A Dynamic Bayesian Network Model
for Conversation
Speech stylistic information is reflected in
prosodic features such as pitch, energy, speak-
789
ing rate etc. In this work, we leverage on sev-
eral of these speech features to quantify accom-
modation. We propose a series of models that
can be trained unsupervised from speech features
and can be used for predicting accommodation.
The models attempt to capture the dependence of
speech features on speaking style, as well as the
effect of persistence and accommodation on style.
We use a dynamic Bayesian network (DBN) for-
malism to capture these relationships. Below we
briefly review DBNs, and subsequently describe
the speech features used, and the proposed mod-
els.
3.1 Dynamic Bayesian Networks
The theory of Bayesian networks is well doc-
umented and understood (Jensen, 1996; Pearl,
1988). A Bayesian network is a probabilistic
model that represents statistical relationships be-
tween random variables via a directed acyclic
graph (DAG). Formally, it is a directed acyclic
graph whose nodes represent random variables
(which may be observable quantities, latent unob-
servable variables, or hypotheses to be estimated).
Edges represent conditional dependencies; nodes
which are connected by an edge represent ran-
dom variables that have a direct influence on one
another. The entire network represents the joint
probability of all the variables represented by the
nodes, with appropriate factoring of the condi-
tional dependencies between variables.
Consider, for instance, a joint distribution
over a set of random variables x1, x2, ? ? ? , xn,
modeled by a Bayesian network. Let V =
v1, v2, ? ? ? , vn represent the set of n nodes in
the network, representing the random variables
x1, x2, ? ? ? , xn respectively. Let ?(vi) represent
the set of parent nodes of vi, i.e. nodes in V
that have a directed edge into a node vi. Then,
by the dependencies specified by the network,
P (xi|x1, x2, ? ? ? , xn) = P (xi|xj : vj ? ?(vi)).
In other words, any variable xi is directly depen-
dent only on its parent variables, i.e. the random
variables represented by the nodes in ?(vi), and
is independent of all other variables given these
variables. The joint probability of x1, x2, ? ? ? , xn
is hence given by
p(x1, x2, ..., xn) =
?
i
p(xi|xpii) (1)
Where xpii represents {xj : vj ? ?(vi), i.e. the
Figure 1: An example Dynamic Bayesian Network
(DBN) showing the temporal relationship between
three random variables (A,B and C). A is observered
and dependent on two hidden variables B and C. Di-
rected edges across time (t? 1 ? t) indicate temporal
relationships between variables. In this example, the
variables At and Bt are both dependent on Bt?1 with
the relationship defined through conditional distribu-
tions P (At|Bt?1) and P (Bt|Bt?1).
parents of xi in the network. We note that not
all of these variables need to be observable; of-
ten in such models several of the variables are
unobservable, i.e. they are latent. In order
to obtain the joint distribution of the observable
variables the latent variables must be marginal-
ized out. I.e. if x1, ? ? ? , xm are observable
and xm+1, ? ? ? , xn are latent, P (x1, ? ? ? , xm) =
?
xm+1,??? ,xn P (x1, x2, ? ? ? , xn).
Dynamic Bayesian networks (DBNs) further
represent time-series data through a recurrent for-
mulation of a basic Bayesian network that repre-
sents the relationship between variables. Within
a DBN a set of random variables at each time in-
stance t is represented as a static Bayesian Net-
work with temporal dependencies to variables at
other instants. Namely, the distribution of a vari-
able xi,t at time t is dependent on other variables
at times t ? ? , xj,t?? through conditional prob-
abilities of the form Pr(xi,t|xj,t?? ). An exam-
ple DBN, consisting of three variables (A,B and
C), two of which have temporal dependencies is
shown in Figure 1.
One benefit of the DBN formalism is that in
addition to providing a compact graphical way
of representing statistical relationships between
variables in a process, the constrained, directed
network structure also allows for simplified in-
ference. Moreover, the conditional distributions
associated with the network are often assumed
not to vary over time, i.e. Pr(xi,t|xj,t?? ) =
Pr(xi,t? |xj,t??? ). This allows for a very com-
pact representation of DBNs and allows for ef-
ficient Expectation-Maximization (EM) learning
algorithms to be applied.
790
In the discussion that follows we do not explic-
itly specify the random variables and the form of
the associated probability distributions, but only
present them graphically. The joint distribution of
the variables should nevertheless be obvious from
the figures. We employ EM to learn the param-
eters of the models from training data, and the
junction tree algorithm (Lauritzen & Spiegelhal-
ter, 1988) to perform inference.
3.2 Speech Features
We characterize conversations as a series of spo-
ken turns by the partners. We characterize the
speech in each turn through a vector that cap-
tures several aspects of the signal that are salient
to style. We used the OPENSmile toolkit (opens-
mile, 2011) to compute the features. Specifi-
cally, within each turn the speech was segmented
into analysis windows of 50ms, where adjacent
windows overlapped by 40ms. From each anal-
ysis window a total of 7 features were com-
puted: voice probability, harmonic to noise ratio,
voice quality , three measures of pitch (F0, F raw0 ,
F env0 ), and loudness. A 10-bin histogram of fea-
ture values was computed for each of these fea-
tures, which was then normalized to sum to 1.0.
The normalized histogram effectively represents
both the values and the fluctuation in the features.
For instance, a histogram of loudness values cap-
tures the variation in the loudness of the speaker
within a turn. The logarithms of the normalized
10-bin histograms for the 7 features were concate-
nated to result in a single 70-dimensional obser-
vation vector for the turn. These 70 dimensional
observation vectors for each turn of any speaker
are represented in our model as oit where t is turn
index and i is speaker index.
3.3 Elements of the Models
In this section we formally describe the elements
of our model.
Speaking Style State: These states represent the
speaking styles of the partners in a conversation.
We represent these states as sit, where t represent
turn index and i represents speaker index. These
states are assumed to belong to a finite, discrete
set S = {s1, s2, ? ? ? , sk}, i.e. sit ? S ?(i, t).
Accommodation State: An accommodation state
represents the indirect influence of partners on
each other in a conversation. In our present de-
sign, it can take a value of either 1 or 0. These
Yt-1 Yt+1
O1t-1 O1t+1O1tS1t-1 S1t S1t+1
Figure 2: The basic generative model.
Yt-1 Yt+1
O1t-1 O1t+1O1tS1t-1 S1t S1t+1
S2t-1O2t-1
S2t
O2t O2t+1
S2t+1
Figure 3: ISM: The dynamics of each speaker are in-
dependent of the other speaker.
states are represented as At, where t is turn index.
Observation Vector: The observation vectors are
the feature vectors oit computed for each turn.
3.4 Models for Accommodation
Our models embody two premises. First, a per-
son?s speech in any turn is a function of his/her
speaking style in that turn. Second, a person?s
speaking style at any turn depends not only by
their own personal biases, but also by their ac-
commodation to their partner. We represent these
dependencies as a DBN.
Our basic model to represent the generation of
speech (i.e. speech features) by a speaker in the
absence of other influences is shown in Figure 2.
The speech features oit in any turn depend only on
the speaking style sit in that turn. The style sit in
any turn depends on the style sit?1 in the previ-
ous turn, to capture the speaker-specific patterns
of variation in speaking style. We note that this
is a rather simple model and patterns of variation
in style are captured only through the statistical
dependence between styles in consequent turns.
We now build our models for accommodation
on this basic model.
3.4.1 Style-based models
Our two first models assume that accommo-
dation is demonstrated as a direct dependence
of a person?s speaking sytle on their partner?s
style. Therefore the models only consider speak-
ing styles.
The Independent Speaker Model
Our simplest model for a conversation assumes
791
Yt-1 Yt+1
O1t-1 O1t+1O1tS1t-1 S1t S1t+1
S2t-1O2t-1
S2t
O2t O2t+1
S2t+1
Figure 4: CSDM: A speaker?s style depends on their
partner?s style at the previous turn.
Yt-1 Yt+1
O1t-1
Y Yt-1At At+1
O1t+1O1tS1t-1 S1t S1t+1
S2t-1O2t-1
S2t
O2t O2t+1
S2t+1
Figure 5: SASM: Both partners? styles depend on mu-
tual accommodation to one another.
that each person?s speaking style evolves indepen-
dently, uninfluenced by their partner. The DBN
for this is shown in Figure 3. We refer to this
model as the Independent Speaker Model (ISM).
Note that the set of values that the style states can
take is common for both speakers. The speaking
styles for the two speakers may be said to be con-
fluent in any turn if both of them are in the same
style state at that turn.
The Cross-speaker Dependence Model
Intuitively, in a conversation speakers are influ-
enced by their partners? speaking style in previ-
ous turns. The Cross-Speaker Dependence Model
(CSDM) represents this dependence as shown in
the DBN in Figure 4. In this model a person?s
speaking style depends on both their own and
their partner?s speaking styles in the previous turn.
3.4.2 Accommodation state models
Accommodation state models assume that con-
versations actually have an underlying state of ac-
commodation, and that speakers in fact vary their
speaking styles in response to it. We models this
through a binary-valued accommodation state that
is embedded into the DBN. We posit two types of
accommodation state models.
The Symmetric Accommodation State Model
In the symmetric accommodation state model
Yt-1 Yt+1
O1t
Y Yt-1A2t A1t
O1t+1S1t S1t+1
S2t
O2t O2t+1
S2t+1Yt-1A2t+1
Figure 6: AASM: Accommodation state associated
with every speaker turn
(SASM) we assume that accommodation is a
jointly experienced characteristic of the conversa-
tion at any time, which enjoys some persistence,
but is also affected by the speaking styles exhib-
ited by the speakers at each turn. The accom-
modation at any time in turn affects the speaking
styles of both speakers in the next turn. The DBN
for this model is shown in Figure 5.
The Asymmetric Accommodation State Model
The asymmetric accommodation state model
(AASM) represents accommodation as a speaker-
turn-specific characteristic. In any turn, the ac-
commodation for a speaker depends chiefly on
their partner?s most recent speaking style. The ac-
commodation state can change after each speaker
turn. Figure 6 shows the DBN for this model.
Note that this model captures the asymmetric na-
ture of accommodation, e.g. it may be the case
that only one of the speakers is accommodating.
For instance, if if a1t = 0 and a2t = 1, only
speaker2 is accommodating but not speaker1.
3.4.3 Accommodated style dependence
models
While accommodation state models explicitly
models accommodation, they do not explicitly
represent how it is expressed. In reality, accom-
modation is a process of convergence ? an ac-
commodating speaker?s speaking style may be ex-
pected to converge toward that of their partner. In
other words, the person?s speaking style depends
not only on whether they are accommodating or
not, but also on their partner?s style at the previ-
ous turn. Accommodated style dependence mod-
els explicitly represent this dependence.
The Symmetric Accommodated Style Depen-
dence Model
The Symmetric Accommodated Style Depen-
dence Model (SASDM) extends the SASM, to in-
792
Yt-1 Yt+1
O1t-1
Y Yt-1At At+1
O1t+1O1tS1t-1 S1t S1t+1
S2t-1O2t-1
S2t
O2t O2t+1
S2t+1
Figure 7: SASDM: A speaker?s style depends both on
mutual accommodation and the partner?s style in the
previous turn.
Yt-1 Yt+1
O1t
Y Yt-1A2t A1t
O1t+1S1t S1t+1
S2t
O2t O2t+1
S2t+1Yt-1A2t+1
Figure 8: AASDM: The accommodation state associ-
ated with every speaker and a speaker?s style depends
on the partner?s style.
dicate that a speaker?s style in any turn depends
both on accommodation and on their partner?s
style in the previous turn. Figure 7 shows the
DBN for this model.
Asymmetric Accommodated Style Dependence
Model
The Asymmetric Accommodated Style Depen-
dence Model (AASDM) extends the AASM by
adding a direct dependence between a speaker?s
style and their partner?s style in their most recent
turn. The DBN for this is shown in Figure 8.
3.5 Interpreting the states
We note that we have referred to the states in the
models above as ?style? states. In reality, in all
cases, we learn the parameters of the model in
an unsupervised manner, since the data we use to
train it do not have either speaking style or ac-
commodation indicated (although, if they were la-
beled, the labels could be employed within our
models). Consequently, we have no assurance
that the states learned will actually correspond to
speaking styles. They can only be considered a
proxy for speaking style. Nevertheless, if both
speakers are in the same state, they can both be
expected to be producing similar prosodic fea-
tures, as represented in the observation vectors.
It is hence reasonable to assume that they are both
speaking in similar style. Similarly, the accom-
modation state cannot be expected to actually de-
pict accommodation; nevertheless, it can capture
the dependencies that govern when the two speak-
ers are likely to be in the same state.
4 Evaluation
The model we have just described allows us to in-
vestigate two separate aspects of our concept of
speech style accommodation. The first aspect is
that style accommodation occurs as a local influ-
ence of one speaker?s style on the other speaker?s
style, as depicted by direct links between style
states. The second aspect is that although this is a
local phenomenon, because it is a reflection of a
social process that extends over a period of time,
there will be some persistence of accommodation
over longer periods of time, as characterized by
the accommodation state. We presented two dif-
ferent operationalizations of the accommodation
state above, namely Asymmetric and Symmetric.
Accommodation is a phenomenon that occurs
within interactions between speakers; we can ex-
pect not to observe accommodation occurring be-
tween individuals that have never met and are not
interacting. On average, then, we expect to see
more evidence of speech style accommodation in
pairs of individuals who are interacting (i.e., Real
Pairs) than in pairs of individuals who are not in-
teracting and have never met (i.e., Constructed
Pairs). Thus, we may evaluate the extent to which
our model is sensitive to social dynamics within
pairs by the extent to which it is able to distinguish
between true conversation between Real Pairs of
speaker and synthetic conversation between Con-
structed Pairs. A similar experimental paradigm
has been adopted in prior work on speech style
accommodation (Levitan et al 2011).
Hypothesis: Our hypothesis is that models that
explicitly represent the notion that accommoda-
tion occurs over a span of time with consistency
of momentum will achieve better success at dis-
tinguishing between Real Pairs and Constructed
Pairs than models that do not.
Experimental Manipulation: Thus, using the
model we have just described, we are able to
test our hypothesis using a 2 ? 3 factorial design
in which one factor is the inclusion of direct
links from the style of one speaker to the style
793
of the other speaker, which we refer to as the
DirectInfluence (DI) factor, with values True
(T) and False (F), and the second factor is the
inclusion of links from style states to and from
Accommodation states, which we refer to as the
IndirectInfluence (II) factor, with values False
(F), Asymmetric (A), and Symmetric (S). The
result of this 2 ? 3 factorial design are the 6
different models described in Section 3, namely
ISM (DI=False, II=False), CSDM (DI=True,
II=False), SASM (DI=False, II=Symmetric),
AASM (DI=False, II=Asymmetric), SASDM
(DI=True, II=Symmetric), and AASDM
(DI=True, II= Asymmetric).
Corpus: The success criterion in our experiment
is the extent to which models of speech style
accommodation are able to distinguish between
Real Pairs and Constructed pairs. In order to set
up this comparison, we began with a corpus of de-
bates between students about the reasons for the
fall of the Ottoman Empire. We obtained this cor-
pus from researchers who originally collected it
to investigate issues related to learning from con-
versational interactions (Nokes et al 2010). The
full corpus contains interactions between 76 pairs
of students who interacted for 8 minutes. Within
each pair, one student was assigned the role of ar-
guing that the fall of the Ottoman empire was due
to internal causes, whereas the other student was
assigned the role of arguing that the fall of the Ot-
toman empire was due to external causes. Each
student was given a 4 page packet of supporting
information for their side of the debate to draw
from in the interaction.
The speech from each participant was recorded
on a separate channel. As a first step, we aligned
the speech recordings automatically to their tran-
scriptions at the word and turn level. After align-
ing the corpus at the word level, we identify the
turn interval of each partner in the conversation.
We use 66 of the debates out of the complete set
of 76 for the experiments discussed in this paper.
We had to eliminate 10 dialogues where the seg-
mentation and alignment failed. For each of our
models, we used the same 3 fold cross-validation.
Participants: Participants were all male under-
graduate students between the ages of 18 and 25.
In prior studies, it has been shown that accommo-
dation varies based on gender, age and familiar-
ity between partners. This corpus is particularly
appropriate because it controls for most of these
factors. Furthermore, because the participants did
not know each other before the debate, we can
assume that if accommodation happened, it was
only during the conversation.
Real versus Constructed Pairs: In our analy-
sis below, we compare measured accommodation
between pairs of humans who had a real conver-
sation and a constructed pair in which one per-
son from that conversation is paired with a con-
structed partner, where the partner?s side of the
conversation was constructed from turns that oc-
curred in other conversations. We set up this com-
parison in order to isolate speech style conver-
gence from lexical convergence when we evalu-
ate the performance of our model. The difference
between the measured accommodation between
real and constructed pairs is treated as a weak op-
erationalization of model accuracy at measuring
speech style accommodation.
For each of the 20 Real pairs in the test corpus
we composed one Constructed Pair. Each Con-
structed Pair comprised one student from the cor-
responding Real Pair (i.e., the Real Student) and a
Constructed Partner that resembled the real part-
ner in content but not necessarily style. We did
this by iterating through the real partner?s turns,
replacing each with a turn that matched as well as
possible in terms of lexical content but came from
a different conversation. Lexical content match
was measured in terms of cosine similarity. Turns
were selected from the other Real pairs. Thus, the
Constructed Partner had similar content to the cor-
responding real partner on a turn by turn basis, but
the style of expression could not be influenced by
the Real Student. Thus, ideally we should not see
evidence of speech style accommodation within
the Constructed Pairs.
Experimental Procedure: For each of the four
models we computed an Accommodation Score
for each of the Real Pairs and Constructed Pairs.
In order to obtain a measure that can be used to
compute accommodation for all the models con-
sidered, we compute the accommodation value as
the fraction of turns in a session where partners
exhibited the same speaking style.
Results: In order to test our hypothesis we con-
structed an ANOVA model with Accommodation
Score as the dependent variable and DirectInflu-
ence, IndirectInfluence, RealVsConstructed as in-
dependent variables. Additionally we included
the interaction terms between all pairs of inde-
794
DI II Real Constructed
?(?) ?(?)
SASDM T S .54 (.23) .44 (.29)
SASM F S .54 (.23) .44 (.29)
CSDM T F .6 (.26) .52 (.3)
ISM F F .56 (.25) .51 (.32)
AASM F A .6 (.24) .51 (.3)
AASDM T A .61 (.24) .48 (.3)
Table 1: Accommodation measured using different
models. Legend: ?=mean, ? = standard deviation, DI
= ?Direct Influence?, II = ?Indirect Influence?.
pendent variables. Using this ANOVA model, we
find a highly significant main effect of the Re-
alVsConstructed factor that demonstrates the gen-
eral ability of the models to achieve separation be-
tween Real Pairs and Constructed Pairs; on aver-
age F(1,780) = 18.22, p < .0001.
However, when we look more closely, we find
that although the trend is consistently to find more
evidence of speech style accommodation in Real
Pairs than in Constructed Pairs, we see differen-
tiation among the models in terms of their abil-
ity to achieve this separation. When we exam-
ine the two way interactions between DirectIn-
fluence and RealVsConstructed as well as be-
tween IndirectInfluence and RealVsConstructed,
although we do not find significant interactions,
we do find some suggestive patterns when we
do the student T posthoc analysis. In particular,
when we explore just the interaction between In-
directInfluence links, we find a significant separa-
tion between Real vs Constructed pairs for models
with Accommodation states, but not for the cases
where no Accommodation states are included.
However, when we do the same for the interaction
between DirectInfluence links and RealVsCon-
structed, we find significant separation with or
without those links. This suggests that IndirectIn-
fluence links are more important than DirectInflu-
ence links. At a finer-grained level, when we ex-
amine the models individually, we only find a sig-
nificant separation between Real and Constructed
pairs with the model that includes both Direct-
Influence and Symmetric IndirectInfluence links.
These results suggest that Symmetric IndirectIn-
fluence links may be slightly better than Asym-
metric ones, and that combining DirectInfluence
links and Symmetric IndirectInfluence links may
be the best combination.
Based on this analysis, we find support for our
hypothesis. We find that the model that includes
Symmetric IndirectInfluence links and DirectIn-
fluence links is the best balance between represen-
tational power and simplicity. The support for the
inclusion of DirectInfluence links in the model is
weaker than that of IndirectInfluence links, how-
ever. On a larger dataset, we may have observed
stronger effects of both factors. Even on this small
dataset, we find evidence that adding that struc-
ture improves the performance of the model with-
out leading to overfitting.
5 Conclusions and Current Directions
In this paper we presented an unsupervised dy-
namic Bayesian modeling approach to modeling
speech style accommodation in face-to-face inter-
actions. Our model was motivated by the idea that
because accommodation reflects social processes
that extend over time within an interaction, one
may expect a certain consistency of motion within
the stylistic shift. Our evaluation demonstrated a
statistically significant advantage for the models
that embodied this idea.
An important motivation for our modeling ap-
proach was that it allows us to avoid targeting
specific linguistic style features in our measure
of accommodation. However, in our evaluation,
we only tested our approach on conversations be-
tween male undergraduate students discussing the
fall of the Ottoman Empire. Thus, while our eval-
uation provides evidence that we have taken a first
important step towards our ultimate goal, we can-
not yet claim that we have a model that performs
equally effectively across contexts. In our future
work, we plan to formally test the extent to which
this allows us to accurately measure accommoda-
tion within contexts in which very different stylis-
tic elements carry strategic social value.
Another important direction of our current re-
search is to explore how measures of speech style
accommodation may predict other important mea-
sures such as how positively partners view one an-
other, how successful partners perform tasks to-
gether, or how well students learn together.
6 Acknowledgments
We gratefully acknowledge John Levine and Tim-
othy Nokes for sharing their data with us. This
work was funded by NSF SBE 0836012.
795
References
Ang, J., Dhillon, R., Krupski, A., Shriberg, E., & Stol-
cke, A. (2002). Prosody-based automatic detection
of annoyance and frustration in human-computer di-
alog. In Proc. ICSLP, volume 3, pages 2037?2040.
Citeseer.
Bilous, F. & Krauss, R. (1988). Dominance and
accommodation in the conversational behaviours
of same-and mixed-gender dyads. Language and
Communication, 8(3), 4.
Bourhis, R. & Giles, H. (1977). The language of in-
tergroup distinctiveness. Language, ethnicity and
intergroup relations, 13, 119.
Coupland, N. (2007). Style: Language variation and
identity. Cambridge Univ Pr.
DiMicco, J., Pandolfo, A., & Bender, W. (2004). Influ-
encing group participation with a shared display. In
Proceedings of the 2004 ACM conference on Com-
puter supported cooperative work, pages 614?623.
ACM.
Eckert, P. & Rickford, J. (2001). Style and sociolin-
guistic variation. Cambridge Univ Pr.
Edlund, J., Heldner, M., & Hirschberg, J. (2009).
Pause and gap length in face-to-face interaction. In
Proc. Interspeech.
Giles, H. & Coupland, N. (1991). Language: Contexts
and consequences. Thomson Brooks/Cole Publish-
ing Co.
Giles, H., Mulac, A., Bradac, J., & Johnson, P. (1987).
Speech accommodation theory: The next decade
and beyond. Communication yearbook, 10, 13?48.
Gweon, G. A. P. U. M. R. B. R. C. P. (2011). The
automatic assessment of knowledge integration pro-
cesses in project teams. In Proceedings of Computer
Supported Collaborative Learning.
Hecht, M., Boster, F., & LaMer, S. (1989). The ef-
fect of extroversion and differentiation on listener-
adapted communication. Communication Reports,
2(1), 1?8.
Huffaker, D., Jorgensen, J., Iacobelli, F., Tepper, P., &
Cassell, J. (2006). Computational measures for lan-
guage similarity across time in online communities.
In In ACTS: Proceedings of the HLT-NAACL 2006
Workshop on Analyzing Conversations in Text and
Speech, pages 15?22.
Jensen, F. V. (1996). An introduction to Bayesian net-
works. UCL Press.
Labov, W. (2010a). Principles of linguistic change:
Internal factors, volume 1. Wiley-Blackwell.
Labov, W. (2010b). Principles of linguistic change:
Social factors, volume 2. Wiley-Blackwell.
Lauritzen, S. L. & Spiegelhalter, D. J. (1988). Local
computations with probabilities on graphical struc-
tures and their application to expert systems. Jour-
nal of the Royal Statistical Society, 50, 157?224.
Levitan, R. & Hirschberg, J. (2011). Measuring
acoustic-prosodic entrainment with respect to mul-
tiple levels and dimensions. In Proceedings of In-
terspeech.
Levitan, R., Gravano, A., & Hirschberg, J. (2011).
Entrainment in speech preceding backchannels. In
Proceedings of the 49th Annual Meeting of the As-
sociation for Computational Linguistics: Human
Language Technologies: short papers-Volume 2,
pages 113?117. Association for Computational Lin-
guistics.
Liscombe, J., Hirschberg, J., & Venditti, J. (2005). De-
tecting certainness in spoken tutorial dialogues. In
Proceedings of INTERSPEECH, pages 1837?1840.
Citeseer.
Nenkova, A., Gravano, A., & Hirschberg, J. (2008).
High frequency word entrainment in spoken dia-
logue. In In Proceedings of ACL-08: HLT. Asso-
ciation for Computational Linguistics.
opensmile (2011). http://opensmile.sourceforge.net/.
Pearl, J. (1988). Probabilistic Reasoning in Intelligent
Systems: Networks of Plausible Inference. Morgan
Kaufmann.
Purcell, A. (1984). Code shifting hawaiian style: chil-
drens accommodation along a decreolizing contin-
uum. International Journal of the Sociology of Lan-
guage, 1984(46), 71?86.
Putman, W. & Street Jr, R. (1984). The conception
and perception of noncontent speech performance:
Implications for speech-accommodation theory. In-
ternational Journal of the Sociology of Language,
1984(46), 97?114.
Ranganath, R., Jurafsky, D., & McFarland, D. (2009).
It?s not you, it?s me: detecting flirting and its mis-
perception in speed-dates. In Proceedings of the
2009 Conference on Empirical Methods in Natural
Language Processing: Volume 1-Volume 1, pages
334?342. Association for Computational Linguis-
tics.
Reitter, D., Keller, F., & Moore, J. D. (2006). Com-
putational modelling of structural priming in dia-
logue. In In Proc. Human Language Technology
conference - North American chapter of the Asso-
ciation for Computational Linguistics annual mtg,
pages 121?124.
Sanders, R. (1987). Cognitive foundations of calcu-
lated speech. State University of New York Press.
Scotton, C. (1985). What the heck, sir: Style shifting
and lexical colouring as features of powerful lan-
796
guage. Sequence and pattern in communicative be-
haviour, pages 103?119.
Wang, Y., Kraut, R., & Levine, J. (2011). To stay or
leave? the relationship of emotional and informa-
tional support to commitment in online health sup-
port groups. In Proceedings of the ACM conference
on computer-supported cooperative work. ACM.
Ward, A. & Litman, D. (2007). Automatically measur-
ing lexical and acoustic/prosodic convergence in tu-
torial dialog corpora. In Proceedings of the SLaTE
Workshop on Speech and Language Technology in
Education. Citeseer.
Welkowitz, J. & Feldstein, S. (1970). Relation of ex-
perimentally manipulated interpersonal perception
and psychological differentiation to the temporal
patterning of conversation. In Proceedings of the
78th Annual Convention of the American Psycho-
logical Association, volume 5, pages 387?388.
797
