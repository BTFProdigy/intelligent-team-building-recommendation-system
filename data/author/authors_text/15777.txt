Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural
Language Learning, pages 832?842, Jeju Island, Korea, 12?14 July 2012. c?2012 Association for Computational Linguistics
Explore Person Specific Evidence in Web Person Name Disambiguation
Liwei Chen, Yansong Feng, Lei Zou, Dongyan Zhao
Institute of Computer Science and Technology
Peking University
Beijing
{clwclw88,fengyansong,zoulei,zhaodongyan}@pku.edu.cn
Abstract
In this paper, we investigate different usages
of feature representations in the web person
name disambiguation task which has been suf-
fering from the mismatch of vocabulary and
lack of clues in web environments. In litera-
ture, the latter receives less attention and re-
mains more challenging. We explore the fea-
ture space in this task and argue that collecting
person specific evidences from a corpus level
can provide a more reasonable and robust es-
timation for evaluating a feature?s importance
in a given web page. This can alleviate the
lack of clues where discriminative features can
be reasonably weighted by taking their corpus
level importance into account, not just relying
on the current local context. We therefore pro-
pose a topic-based model to exploit the person
specific global importance and embed it into
the person name similarity. The experimen-
tal results show that the corpus level topic in-
formation provides more stable evidences for
discriminative features and our method out-
performs the state-of-the-art systems on three
WePS datasets.
1 Introduction
Resolving ambiguity associated with person names
found on the Web is a key challenge in many Internet
applications, such as information retrieval, question
answering, open information extraction, automatic
knowledge acquisition(Wu and Weld, 2008) and so
on. For example, if you want to know more about a
guy named George Foster and feed Yahoo! with his
name, the results are not satisfactory where you get
more than 40 different persons named George Fos-
ter scattering in the top 100 returned pages. None
of the dominant search engines currently helps users
group those returned pages into clusters according
to whether they refer to the same person. Users thus
have to either read those pages carefully or adjust
their queries by adding extra modifiers. This moti-
vates an intensive study in automatically resolving
person name ambiguity in various web applications.
However, resolving web person name ambiguity
is not a trivial task. Due to the difficulties in fig-
uring out or predicting the number of namesakes
in the returned pages, the task has been investi-
gated in an unsupervised learning fashion in the lit-
erature, which is apparently different from the tra-
ditional word sense disambiguation or entity link-
ing/disambiguation tasks, where the inventories of
candidate word senses or entities are usually known
given the target word or entity mention.
A general framework for this task can be formu-
lated as first extracting various features from the web
pages, and then grouping these pages into several
clusters each of which is assumed to represent one
specific person. Despite of the inevitably noisy na-
ture of web data, a key challenge is how to handle
the data sparsity problem which we mean as: mis-
match of vocabulary and lack of clues. The for-
mer refers to the case that two web pages may de-
scribe the same person but use different words thus
the word overlap between them are small. Vari-
ous features, including entities, biographical infor-
mation, URL, etc., have been introduced to bridge
the gap(Mann and Yarowsky, 2003; Kalashnikov
et al2008a; Ikeda et al2009; Jiang et al2009),
832
and external knowledge resources are also employed
to capture the semantic relationship between enti-
ties(Han and Zhao, 2009, 2010). However, a more
challenging scenario is that there are few clues avail-
able in the web pages. For example, there is a page
mentioning a nutritionist Emily Bender in WePS2
dataset(Javier et al2009). Throughout the whole
page we can find only one word, nutrition, related to
her identification, while other pages about the nu-
tritionist in the dataset contain substantial materi-
als about her profession and job. In this case, cur-
rent efforts, focusing on either feature engineering
or background knowledge, are incapable to exploit-
ing these limited clues from the current page to the
whole Emily Bender document set, where nutrition,
as an important feature for recognizing a nutritionist,
should be paid more attention.
As far as we know, there is less work focusing
on exploring person specific information to relieve
the lack of clues problem. Traditional vector space
model (VSM) is most widely used to accommodate
various features, but it ignores any relations between
them(Mann and Yarowsky, 2003; Ikeda et al2009).
Beyond bag-of-features, two kinds of features are
explored, co-occurrences of entities and Wikipedia
based semantic relationship between entities, both
of which provide a reasonable relatedness for en-
tity pairs. More recent works adopt one of these
relationships(Jiang et al2009; Kalashnikov et al
2008a; Han and Zhao, 2009). Han and Zhao try
to model both aspects, but their co-occurrence es-
timation, estimated from held-out resources, fails to
capture the person specific importance for a feature,
which is crucial to enhance limited clues in a cor-
pus level, e.g., the significance of nutrition for Emily
Bender in WePS1 dataset.
In this paper, we explore different usages of fea-
tures and propose an approach which mines cross
document information to capture the person specific
importance for a feature. Specifically, we construct a
semantic graph from Wikipedia concepts appearing
in all documents that contain the target name (which
we refer to name observation set), then group them
into several topics and further weight each feature by
considering both the relatedness of the feature to its
corresponding topic and the importance of this topic
in the current name observation set. By incorporat-
ing both the Wikipedia and topic information into
our person name similarity, our model exploits both
Wikipedia based background knowledge and per-
son specific importance. We argue that the corpus
level importance provides more stable evidences for
discriminative features in various scenarios, espe-
cially the tough case. We compared our model with
the state of the arts on three WePS datasets (from
the First and Second Web People Search Cluster-
ing Task), and our experiments show that our model
consistently outperforms other competitive models
on all three datasets.
In the rest of this paper, we first review related
work, and in Section 3, show how we exploit the
person specific importance in our disambiguation
model. Experiment results are discussed in Sec-
tion 4. We conclude this paper in Section 5.
2 Related Work
Web person name ambiguity resolution can be for-
mally defined as follows: Given a set of web
pages {d1, d2, ..., dn}, where each page di (i =
1, ..., n) contains an ambiguous name N which may
correspond to several persons holding this name
among these pages. The disambiguation system
should group these name observations into j cluster
{c1, c2, ..., cj} each of which is expected to contain
web pages about the same person.
As mentioned before, the task is usually formu-
lated in a unsupervised fashion, including two steps:
feature extraction and person clustering. Most re-
search efforts so far have been made to the for-
mer, exploring various features according to spe-
cific applications, while the second step is currently
dominated by hierarchical agglomerative cluster-
ing (HAC). According to the reliance of extra
knowledge resources, existing works can be catego-
rized into non-resource methods and resource-based
methods. Non-resource methods extract various lo-
cal features from the context of ambiguous names,
and compute the similarity between feature vectors.
These features include plain words(Bagga and Bald-
win, 1998), biographical information(Mann and
Yarowsky, 2003; Niu et al2004), named enti-
ties, compound key phrases, hyperlinks(Ikeda et al
2009), etc. The similarity between namesakes are
usually measured by the cosine similarity(Bagga
and Baldwin, 1998), or other graph based met-
833
rics(Iria et al2007; Kalashnikov et al2008a;
Jiang et al2009). Those methods pay more at-
tention to extracting informative features and their
co-occurrences, but they usually treat the features lo-
cally, and ignore the semantic relatedness of features
beyond the current document.
Resource-based approaches, on the other hand,
can leverage external resources to benefit from rich
background knowledge, which is crucial to rem-
edy the data sparsity problem. The employed re-
sources include raw texts available on the web and
online encyclopedias. Kalashnikov et alnd Yim-
ing et alse extra web corpora to obtain co-
occurrences between named entities. Rao et alse
Google Snippets to provide more contexts. By em-
ploying Wikipedia, the largest online encyclopedia,
rich background knowledge about the semantic re-
latedness between entities can be leveraged to im-
prove the disambiguation performance, and relieve
the coverage problem, to some extent. Bunescu
and Pasca and Cucerzan utilize Wikipedia?s cate-
gory hierarchy to disambiguate entities, while Pilz
uses Wikipedia?s link information. Han and Zhao
adopt Wikipedia semantic relatedness to compute
the similarity between name observations. They also
combine multiple knowledge sources and capture
explicit semantic relatedness between concepts and
implicit semantic relationship embedded in a seman-
tic graph simultaneously(Han and Zhao, 2010).
Most approaches discussed above explore vari-
ous features in the current page or rely on exter-
nal knowledge resources to bridge the vocabulary
gap, but pay less attention to the lack of clues since
they ignore the person specific evidence in the cur-
rent corpus level. Our model focuses on solving the
data sparsity problem by utilizing other web pages
in the same name observation set to provide a robust
but person specific weighting for discriminative fea-
tures beyond the current document alone. In terms
of extra resources, the Wikipedia based model (WS)
by Han and Zhao (2009) is close to our model. The
WS model uses Wikipedia to capture the relation-
ship between entities in the local context to bridge
the vocabulary gap, but it is incapable to evaluate
the importance of a feature with regarding to the tar-
get name, hence is unable to make use of limited
clues in the current web page. Our method captures
person specific evidences by generating topics from
all concepts in the current name observation set and
weighting a feature accordingly. In this case, dis-
criminative features that are sparse in the current
page can be globally weighted so as to provide a
more accurate and stable person name similarity.
3 The Model
Our model consists of three steps: feature extrac-
tion, topic generation and name disambiguation. For
an ambiguous name, we first extract three types of
features and construct a semantic graph from all
Wikipedia concepts extracted from the current name
observation set. We then collect global person spe-
cific evidences by clustering these concepts on the
graph into different topics, which in turn are used
to weight each concept by considering the impor-
tance of its corresponding topic in the current name
observation set and its highly related neighbors in
both the topic and its local context. At last, we in-
corporate the proposed topic representation into the
person name similarity functionand adopt the hierar-
chical agglomerative clustering (HAC) algorithm to
group these web pages.
3.1 Feature Extraction
We extract features from the contexts of ambiguous
names, including Wikipedia concepts, named enti-
ties and biographical information, such as email ad-
dresses, phone numbers and birth years.
Wikipedia Concept Extraction Each concept in
Wikipedia is described by an article containing hy-
perlinks to other concepts which are supposed to
related to the current one. All the linking rela-
tions in Wikipedia construct a huge semantic graph,
where we can mine rich semantic relationship be-
tween concepts(David and Ian, 2008). We col-
lect Wikipedia concepts from all web pages in the
dataset by comparing all n-grams (up to 8) from
the dataset to Wikipedia anchor text dictionary and
checking whether it is a Wikipedia concept surface
form. We further prune the extracted concepts ac-
cording to their keyphraseness(Mihalcea and Cso-
mai, 2007). Initially, each concept is weighted ac-
cording to its average semantic relateness(David and
Ian, 2008) with other concepts in the current page.
Named Entity and Biographical Information Ex-
traction Although Wikipedia concepts can pro-
834
vide rich background knowledge, they suffer from
the limited coverage. It is common that some
discriminative features are not likely to be found
in Wikipedia, such as names of infamous people
or organizations, email addresses, phone numbers,
etc. We therefore extract two extra kinds of fea-
tures, named entities that do not appear in the
Wikipedia anchor text dictionary, and biographical
information. We use Stanford Named Entity Rec-
ognizer(Finkel et al2005) to collect named entities
which are not in the Wikipedia list. We use regular
expressions to extract email address, phone numbers
and birth years. For convenience, we will also call
concept features for Wikipedia concept features and
non-concept features for the other two in the rest of
this paper.
3.2 Topic Generation and Weighting Scheme
Now we proceed to describe the key step of our
model, topic generation and weighting strategy. The
purpose of introducing topics into our model is to
exploit the corpus level importance of a feature for
a given name so that we will not miss any discrim-
inative features which are few in the current name
observation but have shown significant importance
over the whole name observation set.
Graph Construction In our model, we capture
the topic structure through a semantic graph. Specif-
ically, for each name observation set, we connect
all Wikipedia concepts appearing in the current ob-
servation set by their pairwise semantic relatedness-
David and Ian (2008)to form a semantic graph.
The constructed graph is usually very dense since
any pair of unrelated concepts would be connected
by a small semantic relatedness resulting in many
light-weighted or even meaningless edges. We
therefore propose to prune some light-weighted
edges to make the graph stable and easier to harvest
reasonable topics. We use the following strategies to
prune the graph:
? If an edge?s weight is lower than a predefined
threshold, it will be pruned.
? If two vertices of an edge do not co-occur in
any web page of the current observation set,
then this edge will be pruned.
Home 
Run
Major 
League 
Baseball
Stolen 
Base
Cincinnati 
Reds
Shortstop
Sports 
League
Cornerback
Tackle
National 
Football 
League Pro 
Football 
Weekly
0.3862
0.4228
0.3799
0.2976
0.3296
0.2697
0.2445
0.3467
0.3628
0.4145
0.4008 0.3205
0.2738
0.3567
0.3201
0.3136 0.2245
Figure 1: An abridged example of the semantic graph
for George Foster. The green node Sports League is a
hub node, and the yellow node Pro Football Weekly is an
outlier.
The second rule is set to be strict and is proposed
to handle the following circumstance. Some gen-
eral concepts, such as swimming, football, basket-
ball and golf, will be measured highly related with
each other by Wikipedia semantic relatedness and
thus are very likely to be grouped into one topic,
however, they are discriminative on their own when
disambiguating different persons. For example, the
concept swimming is discriminative enough to dis-
tinguish Russian swimmer Popov from basketball
player Popov. So it is not a good idea to group
these concepts into one topic. The proposed co-
occurrence rule is based on the above observation
that it is rare that such kind of general concepts,
e.g., swim and basketball, often co-occur with each
other when talking about one specific person. Af-
ter the pruning step, for each ambiguous name, we
get a semantic graph from all Wikipedia concepts
extracted in this name observation set. Figure 1 il-
lustrates an abridged version of a semantic graph for
George Foster.
835
Graph Clustering Considering the graph con-
struction strategy we use, it is more suitable for us
to group the concepts on the graph into several top-
ics using a density-based clustering model.
We choose SCAN algorithm Xu et al2007) to
perform the clustering step. The SCAN algorithm
utilizes a neighborhood structure to measure the
similarity between two vertices. If a vertex has a
minimal of ? neighbors with a similarity larger than
?, it is called a core. The algorithm1 starts from a
random vertex in a graph, examining whether it is a
core or not. If yes, the algorithm will expand a clus-
ter from this vertex recursively, otherwise the vertex
will be assigned either a hub node or an outlier de-
pending on the number of its neighboring clusters.
A hub node connects to more than one cluster, while
an outlier connects to one or no cluster. Take the
semantic graph in Figure 1 for example, the node
Sports League is a hub node, while the node Pro
Football Weekly is an outlier. Finally, all concepts
in the graph are grouped into K + 2 parts (K is the
number of the clusters, and is determined automat-
ically), including K clusters, the set of hub nodes
and the set of outliers.
One problem of applying SCAN in our work is
that it is originally designed for unweighted graphs.
We have to adapt it to our weighted graph by mod-
ifying the similarity function between two nodes as
follows:
sim(c1, c2) = ??
simnb(c1, c2)
1 + ?
+
sr(c1, c2)
1 + ?
(1)
and simnb(c1, c2) is defined as:
simnb(c1, c2) =
?
c?N(c1)?N(c2)
sr(c1,c)+sr(c2,c)
2
|N(c1) ?N(c2)|
where N(c) is the neighbor set of concept c. This
new similarity function contains two parts: the
neighborhood similarity and the semantic related-
ness between two concepts. We combine them us-
ing a linear combination, where ? is a weight tuned
during training.
Topic Generation Now we will map the cluster-
ing results into different topics. Intuitively, each
1We omit the details of SCAN for brevity, and refer inter-
ested reader to Xu et al2007) for more details.
cluster will be treated as a topic. However, we found
that hub nodes usually correspond to general con-
cepts which may be related to many topics, but with
a loose relatedness. We thus distribute each general
concept into its every related topic, but with a lower
weight to distinguish from ordinary concepts in this
topic.
Outliers may be concepts which are far away from
main themes of the corpus, or noise concepts. We
calculate the average semantic relatedness of an out-
lier with its neighbor concepts that belong to one
topic. If the result is lower than a threshold, this
outlier will be discarded, otherwise it will be treated
as a non-concept feature.
Now we are able to map the clustering results
into different topics. Intuitively, each cluster will
be treated as a topic. However, we found that hub
nodes usually correspond to general concepts, e.g.,
education or public, which may be related to many
topics, but with a loose relatedness. We thus dis-
tribute each general concept into its every related
topic, but with a lower weight to distinguish from
ordinary concepts in this topic. Outliers are found
to contain concepts which are far away from main
topics of the document set and look like noise con-
cepts. We therefore calculate the average semantic
relatedness of an outlier node with its neighboring
concepts which belong to some topics. If the aver-
age relatedness is lower than a threshold, this node
will be discarded, otherwise it will be treated as a
non-concept feature.
Weighting Topics After generating all topics, we
should weight each topic according to its importance
in the current name observation set as well as the
quality of the topic (cluster). Intuitively, if most con-
cepts in the topic are considered to be discriminative
in the current name set and they are closely related
to each other, this topic should be weighted as im-
portant. By properly weighting the generated topics,
we can capture the importance of a concept reliably
in the corpus level (in the current name observation
set) rather than in the current page solely.
Before we weight a topic, we first explain how
we re-weight a hub concept in a topic since our ini-
tial feature weighting scheme(Han and Zhao, 2009)
works on individual web page, lacks cross document
information and is likely to over-estimate the impor-
836
tance of a hub node (general concept) by by assign-
ing a higher weight. Suppose a hub node h connects
to a topic t with n neighbors, namely c1, c2, ? ? ? , cn.
The similarity between this hub node and the topic
is computed by averaging the semantic relatedness
between this hub node and these n neighbors:
sim(h, t) =
1
n
n?
i=1
sr(h, ci). (2)
We then update the weight of this hub node by
considering its similarity with this topic: wt(h) =
w(h) ? sim(h, t) from which we can see that the
hub node receives a lower weight than before indi-
cating that it is not as important as ordinary concepts
in a topic.
Now we proceed to weight the topic t by taking
into account the frequencies of its concepts and the
coherence between the concepts and their neighbor-
hood in topic t:
w(t) =
n?
i=1
f(ci)
n
?
n?
i=1
n coh(ci, t)
n
(3)
where topic t contains n concepts {c1, c2, ..., cn},
f(c) is the frequency of concept c over current name
observation set, specially, when c is a hub node con-
cept, we will distribute its frequency according to
equation (2), having ft(c) = f(c)sim(c, t). And
n coh(c, t) is the neighborhood coherence of con-
cept c with topic t, defined as:
n coh(c, t) =
?
q?N(c)?t
sr(q, c)
|N(c) ? t|
(4)
where N(c) is the neighboring node set of concept
c.
By incorporating corpus level concept frequen-
cies into topic weighting, discriminative concepts
that are sparse in one document and suppressed by
conventional models can benefit from their corpus
level importance as well as their coherence in related
topics.
3.3 Clustering Person Name Observations
Now the remaining key step is to compute the sim-
ilarity between two name observations. The simi-
larity proposed in GRAPE(Jiang et al2009) mea-
sures two documents by bridge tags (common fea-
tures) shared by two document graphs. Specifically,
Jiang et altilize cohesion to weight a bridge tag in
a document. The more bridge tags two documents
share, the stronger the cohesion of each bridge tag
is, and in turn the more similar the two documents
are.
However, this similarity bears a shortcoming that
the bridge tags shared by the two documents re-
quire an exact match of features, which does not
take any semantic relatedness into consideration. If
two web pages mentioning the same person but have
few features in common, the GRAPE similarity may
not work properly. We, therefore, propose a new
similarity measure combining topic similarity, topic
based connectivity strength and GRAPE?s connec-
tivity strength.
Matching Topics to Person Name Observations
We first describe how to match the generated top-
ics to different name observations. In order to avoid
unreliable estimation, we only match a topic to a
name observation when they share at least one con-
cept. To measure the relatedness between a topic
and a name observation, we formulate this similar-
ity as the weighted average of semantic relatedness
between each concept from one side and its closely
related counterpart from the other side,defined as:
sim(A? B) =
?
a?A
wA(a)? wB(ba)? sr(a, ba)
?
a?A
wA(a)? wB(ba)
(5)
sim(A,B) = (sim(A? B) + sim(B ? A))/2,
where A can be a topic and B a name observation or
vice versa, ba is a concept inB that is most related to
concept a, wA(a) represents the weight of concept a
estimated by the averaged relatedness between a and
other concepts in A.
Person Name Similarity Now we describe the
first component in our proposed measure: topic sim-
ilarity, which is calculated through the common top-
ics shared by the two name observations, o1 and o2:
TSm(o1, o2) =
?
t?T (o1,o2)
sim(o1, t)? sim(o2, t) (6)
?sim(o1 ? t, o2 ? t)? w(t)
where T (o1, o2) contains all common topics of o1
and o2, w(t) is the weight of topic t estimated using
837
equation (3), both sim(oi, t) and sim(o1 ? t, o2 ? t)
measure the similarity between two concept sets and
can be estimated using equation (5). The underly-
ing idea of the equation is, if two name observations
share more and closer common topics, and also these
topics receive higher weights according to the cur-
rent name observation set, then the two observations
should be more related to each other.
Specifically, the factor sim(o1 ? t, o2 ? t) is de-
signed to measure the fine relatedness between o1
and o2 given the topic t. Sometimes, both o1 and
o2 are mapped to t and both close to this topic, but
in fact they depict different aspects of t since some
of our topics are more general thus include several
aspects. The comparison of their intersections will
provide a more detailed view for their similarity.
Inspired by the use of bridge tags in
GRAPE(Jiang et al2009), we propose to capture
the connection strength between concept sets by the
means of our topics. We consider common topics
as the bridge tags and define our topic based con-
nectivity strength between two name observations
as:
TCS(o1, o2) =
1
2
?
t?T (o1,o2)
sim(o1 ? t, o2 ? t)?
(Cohs(o1, t) + Cohs(o2, t)) (7)
Note that we still need sim(o1 ? t, o2 ? t) to capture
the fine differences inside a topic. Cohs(o, t) is a
cohesion measure to capture the relatedness between
non-concept features in o and concept features in t,
defined as:
Cohs(o, t) =
?
c?o?t
w(t)?
?
q?EB(o)
occ(c, q)fo(c)fo(q)
(8)
where EB(o) contains all non-concept features in
o (e.g., non-Wikipedia entities and biographical in-
formation), occ(c, q) is the co-occurring number of
concept c and feature q, fo(q) is the relative fre-
quency of q in observation o. It is easy to find that
a higher cohesion can be achieved by larger overlap
between o and t, higher topic weight and more co-
occurrences of concept features in t and other fea-
tures in o.
The third part is the original connectivity strength
defined in GRAPE(Jiang et al2009): CS(o1, o2),
calculated using plain features without topics (we
omit the details for brevity). Finally, we linearly
combine equation (6), (7) and CS(o1, o2) into the
person name similarity function as:
S(o1, o2)= ?1 ? TSm(o1, o2) + ?2 ? TCS(o1, o2)
+(1? ?1 ? ?2)? CS(o1, o2) (9)
where ?1 and ?2 are optimized during training.
This final similarity function will then be embed-
ded into a normal HAC algorithm to group the web
pages into different namesakes where we compute
the centroid-based distance between clusters(Mann
and Yarowsky, 2003).
4 Experiments
We compare our model with competitive baselines
on three WePS datasets. In the following, we first
describe the experimental setup, and then discuss the
their performances.
4.1 Data
Wikipedia Data Wikipedia offers free copies of
all available data to interested users in their website.
We used the one released in March 6th, 2009 in our
experiments. We identified over 4,000,000 highly
connected concepts in this dump; each concept links
to 10 other concepts in average.
WePS Datasets We used three datasets in our
experiments, WePS1 Training and Testing (Artiles
et al2007), WePS2 Testing (Javier et al2009).
These datasets collected names from three differ-
ent resources including Wikipedia names, program
committee of a computer science conference and US
census. Each name were queried in Yahoo! Search
and top N result pages (100 pages in WePS1 and
150 pages in WePS2) were obtained and manually
labeled.
4.2 Baselines
We compare our model TM with four baseline meth-
ods: (1)VSM: traditional vector space model with
cosine similarity. We use features extracted in Sec-
tion 3.1 and weight them using TFIDF. The docu-
ments are grouped using standard HAC algorithm.
(2)GRAPE(Jiang et al2009): we re-implement the
state-of-the-art system which outperforms any mod-
els that do not use extra knowledge resources re-
ported in WePS1 and WePS2. (3)WS: the Wikipedia
838
Semantic method(Han and Zhao, 2009). This sys-
tem uses Wikipedia to enhance the results of name
disambiguation. (4)SSR: the Structural Semantic re-
latedness model(Han and Zhao, 2010) creates a se-
mantic graph to re-calculate the semantic related-
ness between features, and captures both explicit
semantic relations and implicit structural semantic
knowledge. We also build two variants of TM: TM-
nTW which removes topic weighting to examine
what effect the topic weighting strategy can make
and whether it can provide a person specific evi-
dence and TM-nCP which does not use co-occurring
information to prune the semantic graph to examine
whether the pruning is effective.
4.3 Parameters
There are several parameters to be tuned in our
model. In the SCAN algorithm, we use default pa-
rameters according to (Xu et al2007) with an ex-
ception: the weight ? is tuned exhaustively to be 0.2.
Note that the number of topics are automatically de-
cided by SCAN. The semantic graph pruning thresh-
old is set to 0.27 tuned on a held out set. The
smoothing parameters in equation (9) are: ?1 = 0.3,
?2 = 0.2 which are tuned using cross validation.
Optimization of some parameters will be addressed
in detail in the following subsection. In HAC, all
optimal merging thresholds are selected by applying
leave-one-out cross validation.
4.4 Results and Discussion
We adopt the same evaluation process as (Han and
Zhao, 2009), and evaluating these models using Pu-
rity, Inverse Purity and the F-measure (also used in
WePS Task Artiles et al2007)). The overall perfor-
mance is shown in Table 1, and the best scores are
in boldface.
Let us first look at our model and its variants,
TM-nTW and TM-nCP. By introducing the corpus
level topic weighting scheme, our model improves
in average 1.6% consistently over all datasets. Re-
call that our topic weightings are obtained over the
whole name observation set beyond local context,
this improvement indicates that this corpus level per-
son specific evidences render the person similarity
more reasonably than that of single document. On
the other hand, by pruning the semantic graph, our
model improves averagely 1.3% over TM-nCP. This
Table 1: Web person name disambiguation results on all
three WePS datasets
WePS1 Training
Method P IP FMeasure
VSM 0.86 0.86 0.85
GRAPE 0.93 0.90 0.91
WS 0.88 0.89 0.87
SSR 0.82 0.92 0.85
TM-nTW 0.91 0.89 0.90
TM-nCP 0.92 0.90 0.91
TM 0.93 0.91 0.91
WePS1 Testing
Method P IP FMeasure
VSM 0.79 0.85 0.81
GRAPE 0.93 0.83 0.87
WS 0.88 0.90 0.88
SSR 0.85 0.83 0.84
TM-nTW 0.93 0.85 0.88
TM-nCP 0.92 0.86 0.88
TM 0.94 0.86 0.90
WePS2 Testing
Method P IP FMeasure
VSM 0.82 0.87 0.83
GRAPE 0.88 0.90 0.89
WS 0.85 0.89 0.86
SSR 0.89 0.84 0.86
TM-nTW 0.92 0.87 0.89
TM-nCP 0.93 0.88 0.90
TM 0.93 0.89 0.91
shows that our co-occurrence based pruning strategy
can help render the semantic graph with less noisy
edges, thus generate more reasonable topics.
Generally, our proposed model works best con-
sistently over all three datasets. Our method gains
9.3% improvement on average in three datasets com-
pared with VSM, 1.7% improvement compared to
GRAPE, 3.8% over WS and 6.7% over SSR. We also
performed significance testing on F-measures: the
differences between our model and other models are
significant. We notice there are many noisy or short
web pages which lead to inaccurate concept extrac-
tion, but this cross document evidences, to some ex-
tent, can remedy this. In the Emily Bender exam-
ple, our system correctly groups the odd page, which
contains limited clues, into the nutritionist cluster,
839
while the rest, excluding WS and SSR, failed. Sur-
prisingly, SSR combines both kinds of relations and
implicit structural knowledge, but performs in the
same bulk with VSM in WePS1 training set. We
think the reason may be that some name observation
sets are too small to estimate non-concept related-
ness via random walk. In WePS1 training set, many
names in this dataset contains several namesakes,
each of which corresponds to a few web pages. In
this case, our corpus level weighting scheme and
WS show no advantage over GRAPE which consid-
ers word co-occurrences solely. From the results,
we can also find that there is no clear winner be-
tween GRAPE and WS. The former does not use
Wikipedia relatedness but only includes local rela-
tionship, and performs even slightly better than WS
in WePS2, which indicates that non-Wikipedia con-
cepts are important disambiguation features as well.
4.5 Parameter Optimization
In this subsection, we discuss the optimization of
several parameters in the proposed method. In total
we need to set four parameters. The first one is the
edge pruning threshold during graph construction;
the second one is the weight ? in SCAN algorithm;
the third one and the forth one are the combination
parameters in the final similarity function. We will
address the first two in the following. The last two
combination parameters are tuned by exhaustively
searching the space and omitted here for brevity
First, we configure the pruning threshold. Intu-
itively, larger threshold can prune more unimpor-
tant edges and improve the disambiguation perfor-
mance. However, if the threshold is too large, we
may prune important edges and harm the results.
The F-measure of our method with respect to the
pruning threshold is plotted in Figure 2.
From Figure 2, we can know that in all three
data sets, a pruning threshold of 0.27 will lead to
the best performance. Both increasing and decreas-
ing of this pruning threshold will cause a decline of
the F-Measure, because they will either leave more
noisy light-weighted edges or prune some important
edges.
Secondly, we configure the neighborhood similar-
ity weight. The larger this weight is, the more neigh-
borhood information can influence the similarity be-
tween two nodes in the semantic graph. We plot the
0.22 0.24 0.26 0.28 0.3 0.32 0.34 0.36 0.380.86
0.87
0.88
0.89
0.9
0.91
0.92
Edge Pruning Threshold
FMea
sure
 
 WePS1 TrainingWePS1 TestingWePS2 Testing
Figure 2: The F-Measure v.s. the edge pruning threshold
on three data sets.
0 0.2 0.4 0.6 0.8 10.88
0.885
0.89
0.895
0.9
0.905
0.91
0.915
0.92
0.925
0.93
Neighborhood Weight
FMea
sure
 
 WePS1 TrainingWePS1 TestingWePS2 Testing
Figure 3: The F-Measure v.s. the neighborhood similarity
weight on three data sets.
performance of our method regarding to the neigh-
borhood similarity weight in Figure 3.
From Figure 3, we know that for the WePS 1 Test-
ing and WePS2 Testing data sets, a neighborhood
similarity weight of 0.2 can result in the best perfor-
mance, but for WePS 1 Training set, the weight for
the best performance is 0.6. In fact, when the neigh-
borhood similarity weight varies from 0 to 1, the dif-
ference between the best and worst performance are
less than 0.01, which indicates that neighborhood
similarity is as considerable as semantic relatedness.
840
5 Conclusion and Future Work
In this paper, we explore the feature space in the
web person name disambiguation task and propose
a topic-based model which exploits corpus level
person specific evidences to handle the data spar-
sity challenges, especially the case that limited ev-
idences can be collected from the local context. In
particular, we harvest topics from wikipedia con-
cepts appearing in the name observation set, and
weight a concept based on both the relatedness of
the concept to its corresponding topic and the im-
portance of this topic in the current name observa-
tion set, so that some discriminative but sparse fea-
tures can obtain more reliable weights. Experimen-
tal results show that our weighting strategy does its
job and the proposed model outperforms the-state-
of-the-art systems. Our current work utilizes the
topic information shared in one name observation
set but is incapable to handle sparse name set, which
needs more accurate relation extraction inside the
name observations. Jointly modeling entity link-
ing and person (entity) disambiguation tasks will
be an interesting direction where the two tasks are
closely related and usually need to be considered at
the same time. Investigating the person name dis-
ambiguation task in different web applications will
also be of great importance, e.g., disambiguating a
name in streaming data or during knowledge base
construction. In addition, graphical model, which
has been studied in academic author disambiguation,
may be a good choice to cope with the noises and
non-standard forms in web data.
Acknowledgments
We would like to thank Yidong Chen, Wei Wang
and Tinghua Wang for their useful discussions and
the anonymous reviewers for their helpful comments
which greatly improved the work and the presen-
tation. This work was supported by the National
High Technology Research and Development Pro-
gram of China (Grant No. 2012AA011101), Na-
tional Natural Science Foundation of China (Grant
No.61003009) and Research Fund for the Doc-
toral Program of Higher Education of China (Grant
No.20100001120029).
References
Artiles, J., Gonzalo, J., and Sekine, S. (2007). The
semeval-2007 weps evaluation: establishing a
benchmark for the web people search task. In
SemEval, SemEval ?07, pages 64?69, Strouds-
burg, PA, USA. Association for Computational
Linguistics.
Bagga, A. and Baldwin, B. (1998). Entity-based
cross-document coreferencing using the vector
space model. In ACL, pages 79?85, Strouds-
burg, PA, USA. Association for Computational
Linguistics.
Bunescu, R. C. and Pasca, M. (2006). Using ency-
clopedic knowledge for named entity disambigua-
tion. In EACL. The Association for Computer
Linguistics.
Cucerzan, S. (2007). Large-scale named entity dis-
ambiguation based on wikipedia data. In EMNLP-
CoNLL, pages 708?716. ACL.
David, M. and Ian, H. (2008). An effective, low-cost
measure of semantic relatedness obtained from
wikipedia links. In AAAI, AAAI ?08.
Finkel, J. R., Grenager, T., and Manning, C. (2005).
Incorporating non-local information into informa-
tion extraction systems by gibbs sampling. In
ACL, pages 363?370, Ann Arbor, Michigan. As-
sociation for Computational Linguistics.
Han, X. and Zhao, J. (2009). Named entity dis-
ambiguation by leveraging wikipedia semantic
knowledge. In CIKM, CIKM ?09, pages 215?224,
New York, NY, USA. ACM.
Han, X. and Zhao, J. (2010). Structural semantic
relatedness: a knowledge-based method to named
entity disambiguation. In ACL, ACL ?10, pages
50?59, Stroudsburg, PA, USA. Association for
Computational Linguistics.
Ikeda, M., Ono, S., Sato, I., Yoshida, M., and Naka-
gawa, H. (2009). Person name disambiguation on
the web by two-stage clustering. In WWW.
Iria, J., Xia, L., and Zhang, Z. (2007). Wit: web peo-
ple search disambiguation using random walks. In
SemEval, SemEval ?07, pages 480?483, Strouds-
burg, PA, USA. Association for Computational
Linguistics.
841
Javier, A., Julio, G., and Satoshi, S. (2009). Weps 2
evaluation campaign: Overview of the web peo-
ple search clustering task. In WWW 2009.
Jiang, L., Wang, J., An, N., Wang, S., Zhan, J.,
and Li, L. (2009). Grape: A graph-based frame-
work for disambiguating people appearances in
web search. In ICDM, ICDM ?09, pages 199?208,
Washington, DC, USA. IEEE Computer Society.
Kalashnikov, D. V., Chen, Z., Mehrotra, S., and
Nuray-Turan, R. (2008a). Web people search via
connection analysis. IEEE Trans. on Knowl. and
Data Eng., 20:1550?1565.
Kalashnikov, D. V., Nuray-Turan, R., and Mehrotra,
S. (2008b). Towards breaking the quality curse.: a
web-querying approach to web people search. In
SIGIR, SIGIR ?08, pages 27?34, New York, NY,
USA. ACM.
Mann, G. S. and Yarowsky, D. (2003). Unsuper-
vised personal name disambiguation. In CONLL,
CONLL ?03, pages 33?40, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Mihalcea, R. and Csomai, A. (2007). Wikify!: link-
ing documents to encyclopedic knowledge. In
Proceedings of CIKM?07, pages 233?242.
Niu, C., Li, W., and Srihari, R. K. (2004). Weakly
supervised learning for cross-document person
name disambiguation supported by information
extraction. In ACL, ACL ?04, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Pilz, A. (2010). Entity disambiguation using link
based relations extracted from wikipedia. In
ICML.
Rao, D., Garera, N., and Yarowsky, D. (2007). Jhu1:
an unsupervised approach to person name dis-
ambiguation using web snippets. In SemEval,
SemEval ?07, pages 199?202, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Wu, F. and Weld, D. S. (2008). Automatically re-
fining the wikipedia infobox ontology. In WWW,
WWW ?08, pages 635?644, New York, NY, USA.
ACM.
Xu, X., Yuruk, N., Feng, Z., and Schweiger, T. A. J.
(2007). Scan: a structural clustering algorithm
for networks. In Proceedings of KDD, KDD ?07,
pages 824?833, New York, NY, USA. ACM.
Yiming, L., Zaiqing, N., Taoyuan, C., Ying, G., and
Ji-Rong, W. (2007). Name disambiguation using
web connection. In AAAI.
842
Proceedings of the 2012 Student Research Workshop, pages 67?72,
Jeju, Republic of Korea, 8-14 July 2012. c?2012 Association for Computational Linguistics
Towards Automatic Construction of Knowledge Bases from Chinese Online
Resources
Liwei Chen, Yansong Feng, Yidong Chen, Lei Zou, Dongyan Zhao
Institute of Computer Science and Technology
Peking University
Beijing, China
{clwclw88,fengyansong,chenyidong,zoulei,zhaodongyan}@pku.edu.cn
Abstract
Automatically constructing knowledge bases
from online resources has become a crucial
task in many research areas. Most existing
knowledge bases are built from English re-
sources, while few efforts have been made for
other languages. Building knowledge bases
for Chinese is of great importance on its own
right. However, simply adapting existing tool-
s from English to Chinese yields inferior re-
sults.In this paper, we propose to create Chi-
nese knowledge bases from online resources
with less human involvement.This project will
be formulated in a self-supervised framework
which requires little manual work to extrac-
t knowledge facts from online encyclopedia
resources in a probabilistic view.In addition,
this framework will be able to update the con-
structed knowledge base with knowledge facts
extracted from up-to-date newswire.Currently,
we have obtained encouraging results in our
pilot experiments that extracting knowledge
facts from infoboxes can achieve a high accu-
racy of around 95%, which will be then used
as training data for the extraction of plain web-
pages.
1 Introduction
As the development of world wide web (WWW),
the volume of web data is growing exponentially
in recent years. Most of the data are unstructured,
while a few are manually structured and only a s-
mall part of them are machine-readable. How to
make these data accessible and useable for end user-
s has become a key topic in many research areas,
such as information retrieval, natural language pro-
cessing, semantic web(Tim et al, 2001) and so on.
Among others, constructing knowledge bases (KB)
from web data has been considered as a preliminary
step. However, it is not trivial to extract knowledge
facts from unstructured web data, especially in open
domain, and the accuracy is usually not satisfacto-
ry. On the other hand, with the development of We-
b2.0, there are increasing volume of online encyclo-
pedias which are collectively created by active vol-
unteers, e.g., Wikipedia1. Surprisingly, experiment
evidences show that the confidence of Wikipedia is
even comparable with that of British Encyclopedi-
a (Giles, 2005). Therefore, many efforts have been
made to distill knowledge facts from Wikipedia or
similar resources and further build KBs, for example
YAGO(Suchanek et al, 2007), DBpedia(Bizer et al,
2009) and KOG(Wu and Weld, 2008).
In the literature, most KBs constructed recently
are in English as it takes up an overwhelming major-
ity on the web, while other major languages receives
less attention, for example, Chinese features similar
amounts of web pages with English yet is less fre-
quently studied with regarding to building KBs. Al-
though continuous works have been made to process
English resources, building Chinese KBs is of great
value on its own. To the best of our knowledge, few
efforts have been made to construct a KB in Chi-
nese until now. Despite of necessary special pre-
processings, e.g., word segmentation, for Chinese,
building a Chinese KB from web data is quite differ-
ent from building English ones, since we have lim-
ited resources available in Chinese that are of lower
1http://www.wikipedia.com
67
quality compared to their English counterparts. This
brings more difficulties than that of English. As a
result, the approaches used in English may not work
well in Chinese.
In this paper, we propose a new framework to
build a KB in Chinese from online resources with-
out much human involvement. Since the Chinese
portion of Wikipedia is much smaller than its En-
glish part, we harvest knowledge facts from a Chi-
nese online encyclopedia, HudongBaike2. Hudong-
Baike is the largest Chinese online encyclopedia and
features similar managing rules and writing styles
with Wikipedia. We first obtain knowledge facts by
parsing the infoboxes of HudongBaike. Then we use
these triples as seeds, and adopt the idea of distant
supervision(Mintz et al, 2009; Riedel et al, 2010;
Yao et al, 2010) to extract more facts from other
HudongBaike articles and build a KB accordingly.
Moreover, to make the knowledge base more up-to-
date, we also propose to propagate the KBwith news
events.
The rest of this paper is organized as follows: we
first introduce the related work, and briefly introduce
two online encyclopedias. In Section 4 we describe
our framework in detail. Our current work are dis-
cussed in Section 5. In Section 6 we conclude this
paper.
2 Related Work
KB construction is an important task and has at-
tracted many research efforts from artificial intelli-
gence, information retrieval, natural language pro-
cessing, and so on. Traditional KBs are most-
ly manually created, including WordNet(Stark and
Riesenfeld, 1998), Cyc or OpenCyc(Matuszek et al,
2006), SUMO(Niles and Pease, 2001), and also
some domain-specific ontologies such as GeneOn-
tology3. These KBs achieve a high accuracy since
they are manually built or filtered by domain ex-
perts. However, manually creating KB is a time-
consuming and labor-intensive work, and continu-
ous annotation is required to keep the KB up-to date.
Most of them thus suffers from the coverage issue in
practice.
In recent years, many researchers turn to auto-
2http://www.hudong.com
3http://www.geneontology.org
matically extract knowledge to construct KBs. One
kind of methods extract knowledge facts from gener-
al text corpus. These approaches, such as TextRun-
ner(Banko et al, 2007) and KnowItAll(Etzioni et al,
2004), use rule based information extraction tech-
nologies to extract relations between entity pairs.
Recently, TextRunner is expanded by a life long
learning strategy, which can acquire new facts. An-
other type of approaches aims to automatically de-
rive facts from online encyclopedias. Collectively
created by many volunteers, online encyclopedias
are more reliable than general web pages. They al-
so contain semi-structured knowledge such as hand-
crafted infoboxes. Therefore, the accuracy of the
facts extracted will be higher. Researchers utilize
these semi-structured data resources for knowledge
extraction, for example, YAGO extract facts from in-
foboxes and category names of Wikipedia, and use
WordNet as its taxonomy(Suchanek et al, 2007).
A similar approach is adopted by DBpedia, which
also extract knowledge facts from infoboxes(Bizer
et al, 2009). Unlike YAGO and DBpedia, Kylin us-
es the infoboxes and the Wikipedia pages containing
these infoboxes to build a training set, and use ma-
chine learning methods to extract facts from plain
Wikipedia articles(Wu and Weld, 2007). Although
Kylin achieves a high precision, it is corpus-specific,
which means it can only be used in Wikipedia-like
corpora. It is noticed that all the above works fo-
cus on building an English KB, and few efforts have
been made in building a Chinese one until now.
3 Online Encyclopedia
Wikipedia is known as an accurate online encyclo-
pedia whose accuracy is comparable with Encyclo-
pedia Britannica(Giles, 2005). It?s created by thou-
sands of volunteers around the whole world. Until
now, the English version ofWikipedia has 3,878,200
content pages, making it the largest English on-
line encyclopedia. The Chinese version contains
402,781 content pages, which is much smaller than
the English version.
HudongBaike is the largest Chinese online ency-
clopedia with over 5 million content pages. Similar-
ly with Wikipedia, HudongBaike is also created by
volunteers, and relies on the community to ensure
its quality. Many HudongBaike pages also contains
68
Preprocessed HudongBaike Pages
Extracted Triples HudongBaike Articles
Triples Extracted from Articles
Knowledge Base
 Up-to-Date Data
Semantic Elements 
Propagated KB
Analyzing Infoboxes Cleaning pages
Mapping
Distant supervision
KB construction Semantic Elements Extraction
Propagating KB
Figure 2: The framework of Our project
a hand-crafted summary box, infobox. An infobox
summarizes the knowledge of the corresponding en-
tity. The information in the infobox is reliable since
these are collaboratively crafted by many volunteer-
s. Figure 1 is an example page with an infobox from
HudongBaike, introducing a US general ????
?? (George Marshall).
4 The Framework
In this paper, we formulated the KB construction
task in a semi-supervised learning fashion which re-
quires little manual annotation and supports knowl-
edge propagation by up-to-date feeds. Because
the Chinese part of Wikipedia is relatively smal-
l and may suffer from the coverage problem, we use
HudongBaike to build our KB in this project. In fu-
ture we may merge the Wikipedia part into our KB.
After necessary preprocessings including word seg-
mentation and named entity extraction, we are able
to apply our framework shown in Figure 2.
In general, our framework contains the follow-
ing steps: (1)Extracting knowledge from online
encyclopedia; (2)Linking triples and building KB;
(3)Propagating KB with up-to-date data.
4.1 Entity Relation Extraction
Compared to other resources on the Web, online
encyclopedias contain less noises and feature more
regular structures, thus are considered easier for us
to extract knowledge facts.
Analyzing Infoboxes As mentioned before, many
HudongBaike pages contains an infobox, which
has high accuracy and can be used directly for
relation extraction. We can conveniently parse
these infoboxes into < S,P,O > triples. For
example, from the first entry of this infobox,
we can derive the following triple: < ?
????? , ??? , ???? >(<
GeorgeMarshall, BirthP lace, Uniontown >).
The precision of the extraction is over 95%, and
these triples can form a valuable knowledge source.
Extracting relations with Distant Supervision
Extracting knowledge from infoboxes is efficien-
t and can achieve a high precision. However, many
web pages in HudongBaike do not have infoboxes.
There is much richer knowledge in the main arti-
cles of HudongBaike, which we should also take in-
to consideration.
Extracting knowledge from unstructured articles
is a challenging task. Traditionally, researchers
use manually created templates to extract relation-
s. These templates need lots of human efforts and
are domain-specific. Recent methods trend to re-
ly on machine learning models, which need a large
amount of labeled data. One idea is to utilize the
infoboxes to form the training data set, and train an
extractor to extract relations from the pages with-
out an infobox(Wu and Weld, 2007). However, the
relations extracted from a page are restricted to the
infobox template used by the current page catego-
ry, and their subject must be the entity that this page
describes. For example, when we extract relation-
s from the page of ????? (Charles Yeager,
Ace of US in WWII) which does not contain an in-
fobox, the subject of these relations must be Charles
Yeager, and we can only extract the relation types
listed in infobox template for a military person. As
a result, this method can only be used in online en-
cyclopedias in a Wikipedia style, and the recall will
be relatively low.
Distant supervision is widely used in relation ex-
traction in recent years. It hardly need any manual
work, and can overcome the above problems. It can
be used in any reliable corpus, and doesn?t have the
strict restrictions as previous methods. We adopt its
idea in our framework. The basic assumption of dis-
tant supervision is the sentences containing two en-
69
Figure 1: A HudongBaike page about a US general George Marshall
tities should express the relation between them more
or less. It only needs a reliable seed KB (in the form
of relation triples) and a corpus. Here, we can use
the knowledge facts extracted from infoboxes previ-
ously as the seed KB, and the articles of Hudong-
Baike as text corpus. For each triple in the seed K-
B, we generate positive training data by finding sen-
tences containing both its subject and object in the
corpus. For example, we can map the first entry in
Figure 1 to the sentence 1880?12?31?????
??????? (On December 31th, 1880, Mar-
shall was born in Uniontown). The negative training
data can be generated by randomly select some sen-
tences which contain neither of the subject and the
object. A predictive model such as logistic regres-
sion model is trained with the training data. We can
use the model to give predictions for the relations
in a textual knowledge source. For a HudongBaike
page, we should decide the entity pairs we are in-
terested in. A simple strategy is to select all entity
pairs. But it will be time-consuming, and may suffer
from weak-related entity pairs. So we extract top-
ic entities which have high tfidf weights from this
page, and generate entity pairs under the restriction
that they must contain at least one topic entity. For
each entity pair, we find the sentences which contain
both the subject and object and use the predictive
model to give the possible relations between them
and the confidence of the relations.
However, the predictions of distant supervision
is less accurate than those of supervised method-
s. So we should adopt some heuristics to filter the
relations extracted. An easy strategy is to set up a
threshold for relation confidences to avoid uncertain
relations and improve the precision. We adopt this
method in our project. Furthermore, we can also use
the strategies of Riedel et al (2010) or Yao et al
(2010).
4.2 Knowledge Base Construction
After the relation extraction, we must link the ex-
tracted knowledge triples in order to construct the
knowledge base. In our scenario this linking task can
be formulated as: given a base KB, a bunch of newly
extracted knowledge triples with the sentences de-
scribing them and their contexts, the task of entity
linking aims to link each of the entity mentions in
the plain texts (these sentences mentioned above) to
its corresponding entity in the base KB. At the very
beginning, we initiate a base KB by using the taxon-
omy of HudongBaike thus are able to map relations
between entities into the KB through entity linking.
In online encyclopedias, the synonyms of an en-
tity are represented by redirect links. Synonyms are
important in entity linking because they provide al-
ternative names for entities, and we may miss some
mappings without them. For example, we have an
entity ?????? (United States of America)
in the KB, and an mention ?? (USA) in a piece
of text. Redirect links can tell us that we can create
a mapping between them. Basically, for each men-
tion, we can find matching candidates for them in a
KB through exact matching. However, if we can-
not find an exact match for a mention, we will try
70
fuzzy matching since a mention may not match ex-
actly with its referent entity in KB.
Now we need to solve the entity linking task. Tra-
ditional methods did not exploit global interdepen-
dence between entity linking decisions. We thus
adopt the collective entity linking approach of Han
et al (2011) to solve this problem. This method cap-
tures the rich semantic relatedness knowledge be-
tween entities, and take the interdependence of link-
ing decisions into consideration. They construct a
graph by linking name mentions and candidate enti-
ties in pairwise using the semantic relatedness be-
tween them. Then they use a random walk algo-
rithm on the graph to solve the problem. However,
they did not take the NIL problem into considera-
tion. That is, in entity linking, if the referent enti-
ty of an name mention is not in our KB, it should
be linked to a pseudo entity NIL. In our case, we
should abandon the mapping of the current triple by
deciding whether this entity has been listed in the
KB(Zheng et al, 2010).
4.3 Knowledge base Propagation
Although we can extract millions of relations and
built a KB in previous subsections, it has the same
shortage as most existing KBs: the knowledge ex-
tracted are mostly statical attributes of entities (such
as birthdate or occupation of a person) and can not
describe the latest updates of an entity (such as a
politician is currently visiting a country).
In order to settle this problem, we use the dy-
namical knowledge extracted from up-to-date data
to expand our KB. One possible solution is extract-
ing semantic event elements from online news. In
this project, we will synchronies our KB with a Chi-
nese newspaper, RenMinRiBao (People?s Daily).
5 Current Work
Currently, we have extracted triples from the in-
foboxes of HudongBaike and built the base KB.
Manual evaluation shows that the precision of struc-
tured content extraction is over 95%. Most errors
are caused by the web page?s own mistakes or edit-
ing errors in infoboxes.
To assess the quality of HudongBaike data, in our
preliminary experiments(Yidong et al, 2012), we
extract relation facts from plain HudongBaike arti-
cles without infoboxes in a way similar to Kylin. We
focus on three categories, including ?? (Nation),
?? (Person) and ?? (Actor or Actress). In each
category we select several representative attributes
from its infobox template. We manually annotated
more than 200 testing examples for evaluation: 100
in Person, 33 in Nation and 91 in Actor or Actress.
The results shows that the HudongBaike data can be
used to extract knowledge facts with a high precision
in all three categories: in ?? the average precision
is 79.43%, in ?? it is 78.9%, and in ?? it even
goes up to 90.8%.
Distant Supervision We further adopt the ap-
proach of distant supervision(Mintz et al, 2009) in
a Chinese dataset. We generate a dataset from Ren-
MinRiBao with 10000 sentences, and each sentence
contains at least a pair of entities which correspond
to a knowledge triple in HudongBaike?s infobox ex-
traction. We use 60% of the sentences as training
set and 40% as the testing set. Our experiments
show that when the recall is 10%, we can obtain a
high precision of 87%, which indicates the feasibili-
ty of our model. However, as the recall raises, the
precision drops dramatically. For example, when
the recall is 29% the precision is about 65%. This
can be remedied by adopting more encyclopedia-
specific filtering strategies and assumptions during
the distant supervision modeling.
6 Conclusions
In this project, we proposed a framework to build
KBs in Chinese. It uses the infoboxes of Hudong-
Baike as a seed knowledge base, the articles of
HudongBaike as extra textual resources, adopts the
idea of distant supervision to extract knowledge fact-
s from unstructured data and link the triples to build
a knowledge base. This framework requires lit-
tle manual work, and can be used in other reliable
knowledge resources. Our preliminary experimental
results are encouraging, showing that the Hudong-
Baike provides reasonable resources for building
knowledge bases and the distant supervision fashion
can be adapted to work well in Chinese.
For the next, we will further adapt our frame-
work into a self-training manner. By using higher
threshold for confidence in distant supervision we
can make sure the precision of extracted knowledge
71
is high enough for bootstrapping. Then we put the
extracted knowledge facts into the seed KB, and the
framework will repeat iteratively. On the other hand,
we can extract knowledge facts from other reliable
knowledge resource, such as Wikipedia, academic
literature, and merge knowledge from different re-
sources into one KB. Moreover, we can also make
our KB multilingual by adopting our framework in
other languages.
References
Banko, M., Cafarella, M. J., Soderland, S., Broad-
head, M., and Etzioni, O. (2007). Open informa-
tion extraction from the web. In Proceedings of
IJCAI, IJCAI?07, pages 2670?2676.
Bizer, C., Lehmann, J., Kobilarov, G., Auer, S.,
Becker, C., Cyganiak, R., and Hellmann, S.
(2009). Dbpedia - a crystallization point for the
web of data. Web Semant., 7:154?165.
Etzioni, O., Cafarella, M., Downey, D., Kok, S.,
Popescu, A.-M., Shaked, T., Soderland, S., Weld,
D. S., and Yates, A. (2004). Web-scale informa-
tion extraction in knowitall. In Proceedings of the
13th WWW, WWW ?04, pages 100?110.
Giles, J. (2005). Internet encyclopaedias go head to
head. Nature, 438:900?901.
Han, X., Sun, L., and Zhao, J. (2011). Collective
entity linking in web text: a graph-based method.
In SIGIR, SIGIR ?11, pages 765?774, New York,
NY, USA. ACM.
Matuszek, C., Cabral, J., Witbrock, M., and DeO-
liveira, J. (2006). An introduction to the syntax
and content of cyc. In Proceedings of the 2006
AAAI Spring Symposium.
Mintz, M., Bills, S., Snow, R., and Jurafsky, D.
(2009). Distant supervision for relation extraction
without labeled data. In Proceedings of the Joint
Conference of the 47th Annual Meeting of the A-
CL and the 4th IJCNLP of the AFNLP: Volume 2
- Volume 2, ACL ?09, pages 1003?1011.
Niles, I. and Pease, A. (2001). Towards a standard
upper ontology. In Proceedings of FIOS - Volume
2001, pages 2?9. ACM Press, New York.
Riedel, S., Yao, L., and McCallum, A. (2010).
Modeling relations and their mentions without la-
beled text. In Machine Learning and Knowledge
Discovery in Databases, volume 6323 of Lec-
ture Notes in Computer Science, pages 148?163.
Springer Berlin / Heidelberg.
Stark, M. M. and Riesenfeld, R. F. (1998). Wordnet:
An electronic lexical database. In Proceedings of
11th Eurographics Workshop on Rendering. MIT
Press.
Suchanek, F. M., Kasneci, G., and Weikum, G.
(2007). Yago: a core of semantic knowledge.
In Proceedings of WWW, WWW ?07, pages 697?
706, New York, NY, USA. ACM.
Tim, B.-L., J., H., and O., L. (2001). The semantic
web. Scientific American.
Wu, F. and Weld, D. S. (2007). Autonomously
semantifying wikipedia. In CIKM, CIKM ?07,
pages 41?50, New York, NY, USA. ACM.
Wu, F. and Weld, D. S. (2008). Automatically re-
fining the wikipedia infobox ontology. In WWW,
WWW ?08, pages 635?644, New York, NY, USA.
ACM.
Yao, L., Riedel, S., and McCallum, A. (2010). Col-
lective cross-document relation extraction with-
out labelled data. In Proceedings of EMNLP,
EMNLP ?10, pages 1013?1023, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Yidong, C., Liwei, C., and Kun, X. (2012). Learning
chinese entity attributes from online encyclopedi-
a. In Proceedings of IEKB workshop in APWeb
2012.
Zheng, Z., Li, F., Huang, M., and Zhu, X. (2010).
Learning to link entities with knowledge base. In
HLT-NAACL 2010, pages 483?491, Stroudsburg,
PA, USA.
72
