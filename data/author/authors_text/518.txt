Balto-Slavonic Natural Language Processing 2007, June 29, 2007, pages 11?18,
Prague, June 2007. c?2007 Association for Computational Linguistics
Implementation of Croatian NERC System 
Bo?o Bekavac 
Department of Linguistics 
University of Zagreb 
Ivana Lu?i?a 3, Zagreb, Croatia 
bbekavac@ffzg.hr 
Marko Tadi? 
Department of Linguistics 
University of Zagreb 
Ivana Lu?i?a 3, Zagreb, Croatia 
marko.tadic@ffzg.hr 
 
 
Abstract 
In this paper a system for Named Entity 
Recognition and Classification in Croatian 
language is described. The system is com-
posed of the module for sentence segmen-
tation, inflectional lexicon of common 
words, inflectional lexicon of names and 
regular local grammars for automatic rec-
ognition of numerical and temporal expres-
sions. After the first step (sentence segmen-
tation), the system attaches to each token 
its full morphosyntactic description and 
appropriate lemma and additional tags for 
potential categories for names without dis-
ambiguation. The third step (the core of the 
system) is the application of a set of rules 
for recognition and classification of named 
entities in already annotated texts. Rules 
based on described strategies (like internal 
and external evidence) are applied in cas-
cade of transducers in defined order. Al-
though there are other classification sys-
tems for NEs, the results of our system are 
annotated NEs which are following MUC-7 
specification. System is applied on infor-
mative and noninformative texts and results 
are compared. F-measure of the system ap-
plied on informative texts yields over 90%. 
1 Introduction 
To produce a Named Entity Recognition and Clas-
sification (NERC) system for a lesser spread Slavic 
language like Croatian could be a task which dif-
fers a lot from the task of building such a system 
for a language like English, German or French. 
Compared to them, Croatian language has more 
elaborated inflectional system and more freedom in 
the word order within the sentence. Besides, the 
resources and tools needed for producing such a 
system (POS/MSD tagger, sentence segmentator, 
chunker, lexicons or gazetteers etc.) are not widely 
available. 
But still we can say that even in languages with 
that kind of structural properties like Slavic lan-
guages have, named entities (NE) form a subset of 
natural language expressions that demonstrates 
relatively predictable structures. It could be ques-
tioned whether the relatively free word order in 
Croatian also covers the named entities (how much 
it influences their internal structure and their posi-
tion in a sentence structure). What we also aim at 
in this paper is to investigate the possibility to de-
scribe NE with relatively simple rule-based sys-
tems i.e. whether it is possible to describe and clas-
sify NE in Croatian using regular grammars. 
The next part of the paper describes basic meth-
odology of our system. The third part presents 
strategies for NERC which have been converted 
into rules. The fourth part describes the archi-
tecture of the system while the fifth gives the re-
sults. The conclusion describes also possible future 
directions. 
2 Methodology 
This NERC system for Croatian is based on 
hand-made rules encoded in transducers which are 
applied in a cascade (Abney, 1996). The reason for 
selecting this method was simple. Since this is the 
first NERC system for Croatian, and there were no 
previous solutions for any particular NE class, we 
had to split the general NERC problem to a set of 
11
smaller locally manageable problems covering not 
just broad NE classes, but also their subclasses 
which were recognized by characteristic patterns. 
In such a way the set of rules could be kept under 
control and modules covering different parts of a 
problem could be called when needed in the 
runtime. In the same time the development time is 
shorter and the system is more consistent. 
Every transducer in our system represents a lo-
cal grammar (Gross, 1993) dedicated to the de-
scription of a part of a sentence i.e. local linguistic 
expression. The orientation to a local description 
where the simpler (and more certain) cases are 
solved first, followed by more complex ones, gives 
more precision to the whole system. This ?island 
of certainty? principle (Abney, 1996:11) is also 
used in our NERC system. 
The system uses the principle of the ?longest 
match? as any other NERC system: in the case of 
more than one possible expression recognized by 
rules several different rules, system chooses the 
longest one. In this way potentially ambiguous 
NEs are being dynamically disambiguated (see e1 
where Maduni? Ltd. would be recognized and clas-
sified as organization NE because of the principle 
of the ?longest match? which also included Ltd and 
thus avoiding matching only family name Maduni? 
from the lexicon of names). 
3 Strategies 
In this section we will discuss the basic strategies 
that have been used in different NERC systems and 
their applicability for Croatian. 
3.1 Internal and external evidence 
The simple NER could be done by direct match of 
text with the list of NEs. Even if we previously 
solve the problem of inflection, such an approach 
would result with a lot of errors. In the example 
 
e1: Znali smo da je Maduni? d.o.o. u 
vlasni?tvu njegova oca. (We knew 
that Maduni? Ltd is a property of 
his father.) 
 
the expression Maduni? could be wrongly recog-
nized and classified as a family name. Even that 
result can be questionable since it may happen that 
this very name is not in the list of family names. 
Better results could be gained by using more in-
formation i.e. features which already exist in NEs. 
One of features for personal names are titles such 
as dr., mr., prof., ing. etc., for company names 
characteristic strings are d.o.o. (Ltd), d.d. (S.A., 
GmBH) etc. Such explicit strings are called inter-
nal evidence (McDonald 1996:22) and usually 
form a part of NE. 
On the other hand the example such as: 
 
e2: Danas je stiglo pismo iz 
poduze?a "?uro ?akovi?". (A letter 
from the firm "?uro ?akovi?" arrived 
today.) 
 
would yield simple person name ?uro ?akovi? if 
the contextual information of NE (i.e. string po-
duze?a/the firm and usage of quotes) is not taken 
into account. NEs often refer to certain classes 
such as institutions, hospitals, schools, persons, 
etc. Such contextual feature is called external evi-
dence (McDonald 1996:22) and its recognition is 
mostly used as a classification criterion i.e. class 
membership proof. In the case illustrated by the 
following example: 
 
e3: U klinici za infektivne bolesti 
"Dr. Fran Mihaljevi?" tog je dana 
bila gu?va. (It was crowded that day 
at the clinic for infectuous dis-
eases "Dr. Fran Mihaljevi?".) 
 
the external evidence is often decisive for NERC. 
In e3 the internal evidence (Dr.) represents a 
strong argument for a person NE, but only contex-
tual external evidence (klinici/the clinic and 
quotes) gives the right solution. 
The external evidences are crucial for NERC in 
any language but they also have an important role 
during the system development. They can be useful 
when a list of names is not complete ? an external 
evidence is taking the role of an additional proof. 
They can also reduce the need for elaborated inter-
nal evidence checking when rules are being build. 
The internal and external evidence is being used 
by all NERC systems such as LTG (Mikheev et al 
1999), FASTUS (Hobbs et al 1997), Proteus 
(Yangarber, Grishman, 1998). 
3.2 Dynamic lexicon 
Sometimes during the processing there is a need 
for storing information which are relevant only for 
a current text/discourse/document. Such informa-
tion are usually stored in a dynamic lexicon where 
temporarily relevant information are stored and 
used for the processing of a current document. Dy-
12
namic lexicon entries are being collected from the 
confident contexts and usually are being used for 
tagging words which could be NEs but there is not 
enough external evidences for that. 
Dynamic lexicon could store all possible vari-
ants of a NE (a person) such as the full name and 
family name including middle initial, only family 
name, only name, only initials including all inflec-
tional word-forms etc. In the case of companies, it 
could include the long company name, its shorter 
version and/or acronym.  Distribution of acronyms 
shows that they frequently appear without internal 
and/or external evidences which are present with 
the full name (e.g. instead of the full name Investi-
cijsko-komercijalna banka, in the text there is only 
Banka or only IKB). In such cases all tokens form-
ing an NE and all their combinations are stored in 
the dynamic lexicon (Mikheev et al 1999:5). In 
our case it would be also Investicijsko-
komercijalna, komercijalna banka, Investicijska 
banka, and  also an acronym derived from the first 
letters of all tokens (IKB). 
Dynamic lexicon are used by a numer of NERC 
systems such as ones described in (Mikheev et al 
1998), (McDonald 1996) and (Piskorski et al 
2000). 
3.3 Global word sequence checking 
This strategy is used for solving complex ambigui-
ties (Mikheev, 1999). The initial position in the 
sentence is one of such ambiguous spots. If the NE 
is complex e.g. has a conjuncted structure, its solv-
ing can be quite a difficult task. The following ex-
ample from the newspaper can explain this: 
 
e4: Osiguranje Zagreb i Primo?ten 
potpisali su ugovor o suradnji. (In-
surance Zagreb and Primo?ten 
countersigned an agreement on 
cooperation.) 
 
e5: Osiguranje Ivi?u i Horvatu nije 
isplatilo naknadu. (Insurance didn?t 
pay the benefit to Ivi? and Horvat.) 
 
The token (Osiguranje) which in e4 is a part of NE 
(Osiguranje Zagreb) is also a common noun and is 
capitalized since it is in the initial sentence posi-
tion. The second NE (Primo?ten) is from the list of 
locations but it could be also a part of conjunction 
(Osiguranje Zagreb i Osiguranje Primo?ten) 
which is shortened or forms a unique NE (Osigu-
ranje Zagreb i Primo?ten). In the e5 there is no 
ambiguitiy since Ivi?u and Horvatu are person NEs 
and being in dative case clearly show that they do 
not belong to the same NE with Osiguranje (being 
in nominative case). 
Conjunction i (?and?) can be syntactically inter-
preted in two ways: it can serve as a connector of 
two separate NEs (Pliva i INA) or can be a part of 
NE (Buhi? i sinovi; Vodoopskrba i odvodnja). This 
cases can be solved with a strategy that presup-
poses that at least there will be one unambiguous 
position for the same NE in the text. Solving the e4 
example could be formulated in several steps. 1) 
all possible subsets of expression (Osiguranje Za-
greb i Primo?ten; Osiguranje Zagreb; Osiguranje 
Primo?ten; Zagreb i Primo?ten; Primo?ten?) 
should be stored in a dynamic lexicon; 2) if any of 
this substrings is detected in the text in an unambi-
guous position: 
 
e6: Kapital Osiguranja Zagreb uve?an 
je tri puta. (The capital of the In-
surance Zagreb is enlarged three 
times.) 
  
e7: Tvrtka Primo?ten d.d. izbjegla 
je ste?aj. (The firm Primo?ten d.d. 
avoided the bankrupcy.) 
 
the system can test that they are separate NEs and 
resolve the role of conjunction. 
A proper solution for categorising Primo?ten is 
derived from this as well, since the coordinative 
conjunction i will usually connect the NEs from 
the same category (Mikheev, 1999). 
This strategy is used in systems by Mikheev et 
al. (1999) and Wacholder (1997). 
3.4 One sense per discourse 
Ambiguous tokens, where the same string can refer 
to a common noun in common usage or as a part of 
NE, are quite common in texts (e.g. a token Sunce 
in initial sentence position can be a common noun 
but it has been recorded that it can also be a name 
of investment fund or insurance company). 
Since texts are meant to be understood by read-
ers (even when shortening and compressing proce-
dures are used by authors) it is very rare that the 
same token has different meanings within the same 
text. Gale, Church and Yarowsky (1992) formed a 
hypothesis that ambiguous words have a strong 
tendency of keeping a single meaning in the same 
13
text/discourse. It has been experimentally proven 
up to 98% of cases. Therefore, detecting at least 
one unambiguous position for an ambiguous word 
enables the system to successfully solve all other 
ambiguous positions for this word. 
3.5 Filtering of the false candidates 
Specific type of problem for NERC systems pose 
expressions which have a structure similar to NE, 
but are not NEs: 
 
e8: Pripreme za Atenu 2004 pribli-
?avaju se zavr?etku. (Preparations 
for the Athens 2004 are coming to 
the end.) 
  
e9: Pogled nam se pru?ao na cijelu 
Atenu. (A view to the whole Athens 
was in front of us.) 
 
In e8 string Atenu 2004 refers to the Olympic 
games held in Athens 2004 and not to location NE. 
According to MUC specification, this should not 
be marked as NE. In e9 Atenu refers to location 
and should be marked as NE. 
There are two possible solutions for elimination 
of this cases: 1) a context should be expressive 
enough that it can be covered by a special rule; 2) a 
list of false NE candidates i.e. NE-like expressions 
which have to be eliminated from the further proc-
essing. 
It is better to discard the false NE candidates at 
the beginning (Karkaletis et al1999:130) because 
it reduces the need for further processing and test-
ing. The false NE candidates should not have to be 
deleted from the text, a better solution is to mark 
them with a special tag which will be deleted just 
before output but in the same time it will signal to 
the system to avoid the processing of that part of 
text. 
Processing of false NE candidates is described 
thoroughly in (Stevenson, Gaizauskas, 1999:293). 
4 Architecture of the system 
For developing, testing and applying our NERC 
system we were using Intex, a well known devel-
opment environment for making formal descrip-
tions of natural languages using FSTs and their 
immediate application on large corpora in real-time 
(Silberztein 2000:8). 
Our system was designed to allow the modular 
processing of Croatian on three levels: 1) token 
(single-word units) segmentation; 2) sentence 
segmentation; 3) multi-word units (collocations, 
syntagms). These modules were designed for this 
system but they can be used individually in any 
other system for processing Croatian. 
Lists of personal and family names are also im-
portant for this system. We were using a list of 
15,000 male and female personal names accompa-
nied by 56,000 family names registered in the Re-
public of Croatia (Boras; Mikeli?; Lauc 2003:224). 
This list was expanded to a full word-form list for 
every name according to the MulTextEast specifi-
cation for lexica (Erjavec et al 2003). 
The rules were manually developed and tested 
on a subcorpus of Croatian National Corpus (Tadi?, 
2002) which size was 60 million of tokens of 
newspaper texts. The rules were coded as Finite 
State Transducers using Intex?s graphical interface. 
The system (see figure 1) consists of several se-
quenced modules which are applied after the to-
kenizaton and sentence segmentation: 
 
1. Lexical processing: application of lexi-
cons of common words and proper 
names. Unrecognized tokens are further 
processed with transducers which are 
based on characteristic endings for MSD 
categorization. 
 
2. Rules (phase 1) which have the highest 
certainty i.e. process unambiguous text 
segments are being applied after the 
preprocessing stage. In this manner a 
large part of all NEs is being detected 
thus giving the firm anchors for the rules 
(phase 2); 
 
3. Lexicon filtering: some lexical entries 
are highly ambiguous and make applica-
tion of relaxed rules even more complex 
(e.g. Kina in Croatian can be a common 
noun and location NE as well. Filtering 
such highly frequent and ambiguous 
common words significantly increases 
results in the second phase. 
 
 
14
In p u t
te x t
A n n o ta te d
te x t 1
 
4. Rules (phase 2): all unrecognized NEs 
in phase 1 (mostly because of lack of 
supportive co-text information) are 
processed with new rules which are re-
laxed. Constraints are relaxed, but 
thanks to filtered lexicon precision are 
still rather high. 
 
Since the overall number of rules is 106 and the 
description of their precise ordering and mutual 
interdependence would surpass the limitations of 
this article, we would like to exemplify the general 
format of the rules with the rule for detecting per-
son NEs which include external evidence such as 
function of that person. Since functions can appear 
before or after the person NE, this rule has been 
stored as a separate local grammar which is being 
called as needed. 
<?upan>
<predsjednik>
<predsjednica>
<ministar>
<ministrica>
<ravnatelj>
<ravnateljica>
<?ef>
<general>
<tajnik>
<tajnica>
<premijer>
<gradona?elnik>
<gradona?elnica>
<ravnatelj>
<ravnateljica>
<direktor>
<direktorica>
<inspektor>
<nadbiskup>
<biskup>
<kardinal>
<upravitelj>
<mar?al>
<A>
<savjetnik>
<savjetnica>
<pomoanik>
<pomoanica>
<glasnogovornik>
<glasnogovornica>
<urednik>
<urednica>
<zamjenik>
<zamjenica>
<diplomat>
<vlasnik>
<autor>
<profesor>
<doministar>
<brigadir>
<major>
<oficir>
<bojnik>
<sekretar>
<pater>
<vikar>
NPg
 
Figure 2. Graph for functions (funkcije.grf). 
 
 
 
Beside the function name, an attribute <A> can 
appear on the left and NP in genitive case [NPg] 
can appear on the right of function name. 
This local grammar ([funkcije] in grey) is being 
called in cascade from two other grammars for per-
son NE detection such as: 
<I>
<I>-
[O] [/O]
<PRE>
-
funkcije
 
Figure 3. Graph for functions + names. 
 
, funkcije<I>
<I>-
[O] [/O]
<PRE>
-
 
Figure 4. Graph for names + functions. 
 
In figures 3 and 4 <I> represents a personal name 
recognized from the list of personal names while 
<PRE> represents a capitalized token. [O] and [/O] 
are tags that system inserts for person NE annota-
tion. In this way potentially ambiguous NEs like 
Predsjednik Microsofta and Predsjednik ?eks 
could be resolved since only ?eks belongs to a list 
of personal names. The grammar in figure 3 can 
recognize cases such as: 
 
et Hrvatskoj, isto kao i ameri?kom ministru [O]Ronaldu Brownu[/O] koji je s 
roprivredi Bosne, isti?e generalni direktor [O]Mijo Brajkovi?[/O]. On nagla 
astrojstvo, a desna ruka generalnog direktora [O]Jana Bobosikova[/O] prekju 
?e od godinu dana pisala nadbiskupu [O]Josipu Bozani?u[/O] upozoravaju?i ga 
lamenta Vaclava Klausa i predsjednika ?e?ke Republike [O]Vaclava Havela[/O] 
 
while the grammar in figure 4 can recognize cases 
such as: 
Figure 1. The general architecture of the system.
N E R C
P re p ro c e s s in g
L e x ic a l
r u le s L e x ic o n
A n n o ta te d
te x t 1
A n n o ta te d
te x t 2
T o k e n iz a t io n L e x ic a lp ro c e s s in g
S e n te n c e
s e g m e n ta t io n
R u le s (1 .  P h a s e ) R u le s (2 .  P h a s e )L e x ic o nf i l te r in g
F S T
15
 
sporta?a i nakon ?to su [O]Aleksandra Mindoljevi?[/O], predsjednica ?irija 
avi aktivnom politikom. [O]Andrija Hebrang[/O], ratni ministar zdravstva, 
im biznisom. Rije? je o [O]Davoru ?ternu[/O], biv?em generalnom direktoru  
obode. Me?utim, [O]Rahim Ademi[/O], general hrvatske vojske jo? ?eka odluku  
rak [O]Hans Dietrich Genscher[/O], biv?i njema?ki ministar vanjskih poslova 
 
All local grammars for detecting personal NEs are 
being called from a grammar on upper level: 
 
I_izjavio
izjavio_je_I
I_funkcija
funkcije_I
I_i_I
I_dvotocka
inic_inic
titule_Vs
I_inic_Vs
CarladelPontegrf
I_P
 
The same rules applied to another genre (text-
books) show a significant drop in the accuracy of 
the system. Precision is still at 0.79 but recall is at 
0.47 thus resulting with F-measure at 0.59. The 
most serious drop is in personal and location 
names. Possible explanation could be that in text-
books used for testing there is a lot of unknown, 
possibly foreign, names but this has to be checked 
in detail on more different genres. 
Figure 5: Graph with all person NE graphs 
 
Similar set of rules and modular local grammars 
has been developed for other NE categories. 
The order of applying rules (i.e. local grammars) 
plays important role in our NERC system. There 
are at least two reasons for that. 
1) Certain rule can be valid for a NE which can 
be part of a larger NE. Rules for organization NE 
detection should be applied prior to rules for per-
son NE detection. In this way correct categorisa-
tion is being achieved (e.g. ?uro ?akovi? holding 
d.d. where a person NE should not be used and 
subsumed under larger organization NE). Even if 
both grammars are applied simultaneously, still the 
principle of ?longest match? would yield the cor-
rect categorisation (Poibeau, 2000). The same or-
dering should be kept in mind for other types of 
NEs which could be subsumed (e.g. dates or loca-
tions within the names of streets etc.). 
2) The degree of certainty is decisive for rule 
ordering: the most certain NEs are being processed  
at the beginning and thus lowers the ambiguity also 
within the same category. 
5 Results and discussion 
Our NERC system for Croatian was tested on two 
types of texts: newspaper articles from Ve?ernji list 
(economy and internal affairs, 350 articles from 
2005-01, 137.547 tokens) and two textbooks from 
the history of arts and culture (143.919 tokens) 
(Makovi?, 1997; ?mega?, 1998). The results for 
newspaper texts are given in Table 1, while results 
for textbooks are given in Table 2. 
F-measure of the whole system calculated as av-
erage from F-measures of all categories is 0.92. 
Since all NE categories are not equally represented 
in texts, more realistic measure of system effi-
ciency can be acquired by counting all NEs that 
current version of a system with this set of rules 
should detect and categorize in a text. In this case 
F-measure drops to 0.90 which is still very good 
result. 
Compared to a similar system for NERC in 
French texts (Poibeau; Kosseim 2001:148), where 
also Intex was used as a development environment, 
we got similar results. System developed for 
French yielded 0.9 for informative texts and 0.5 in 
noninformative texts (prose). 
The example of the input and output from our 
system can be seen at http://hnk.ffzg.hr/nerc/. 
Theoretically syntactic rules in Croatian do al-
low central embedding in NPs thus splitting them 
in two separate strings. If we apply this rule to a 
NERC domain, we could think of a construction 
which consist of function and personal name: 
 
e10: *biv?i hrvatski predsjed-
nik, koji je stvorio hrvatsku 
dr?avu, Franjo Tu?man...(*former 
Croatian president, who founded 
a Croatian state, Franjo Tu?-
man...)  
 
16
 
 Person Organization Location Percentage Currency Time 
Precision 0.95 0.93 0.98 0.99 0.99 0.94 
Recall 0.69 0.86 0.93 0.99 0.99 0.90 
F-measure 0.79 0.89 0.95 0.99 0.99 0.92 
 
Table 1: Results for newspaper articles 
 
 Person Organization Location Percentage Currency Time 
Precision 0.65 0.69 0.61 0.95 0.92 0.91 
Recall 0.35 0.38 0.31 0.66 0.61 0.53 
F-measure 0.46? 0.49 0.41 0.78 0.73 0.67 
 
Table 2: Results for textbooks 
In practice constructions of this type were never 
detected even in a very large corpus (>100 Mw). 
This led us to a conclusion that in spite the rela-
tively free word order in Croatian, for NERC sys-
tems regular grammars could be sufficient instead 
of stronger formalism such as context-free gram-
mars. NEs are local phenomena in sentences and 
are usually kept in one constituent. It looks like the 
free word order allows recombination of constitu-
ents (scrambling) while withing the constituents it 
is not allowed and they could be locally recognized 
by regular grammars. Although context-free 
grammars encompass regular ones, the develop-
ment time for regular grammars, particularly if 
they are built as small-scale local grammars which 
are cascaded later, is much shorter and developers 
have stronger control over of each module, its in-
put and output. 
6 Future directions 
Although it features in some areas quite promising 
results, this system if far from being complete. Our 
future directions could be: 1) testing the system on 
a whole different range of genres with possible rule 
adaptation for each genre; 2) widening the list of 
person and family names to include foreign names; 
3) thorough analysis and typology of most typical 
errors; 4) include also other NEs classification 
schemes which go beyond MUC-7 specification; 5) 
since this system highly depends on Intex runtime 
library under which it has been designed, it is not 
possible to distribute it as a stand-alone application. 
We would like to reprogram the whole set of rules 
on a different platform or programming language. 
In this way this system can became a core of a 
web-based service for NERC in Croatian which is 
also one of our intentions.  
Acknowledgments 
This work was partially supported by the Ministry 
of the Science, Education and Sports of the Repub-
lic of Croatia within the project 130-1300646-0645 
and partially by Flemish and Croatian governments 
within the joint CADIAL project. 
References 
 
Abney, Steven. 1996. Partial Parsing via Finite-State 
Cascades, Journal of Natural Language Engineering 
2 (4):337?344. 
Damir Boras, Nives Mikeli?, Davor Lauc. 2003. 
Leksi?ka flektivna baza podataka hrvatskih imena i 
prezimena, Modeli znanja i obrada prirodnog jezika ? 
Zbornik radova, Radovi Zavoda za informacijske 
studije (vol. 12):219?237. 
Toma? Erjavec (ed.). 2001. Specifications and Nota-
tions for MULTEXT-East Lexicon Encoding. Edition 
Multext-East/Concede Edition, March, 21, p. Avail-
able at [http://nl.ijs.si/ME/ V2/msd/html/].  
Friburger, Nathalie; Maurel, Denis. 2004. Finite-state 
transducer cascades to extract named entities in 
texts, Theoretical Computer Science, 313(1):93?104.  
William Gale, Kenneth Church, David Yarowsky. 1992. 
One Sense per Discourse, Proceedings of the 4th 
DARPA Speech and Natural Language Workshop, 
Harriman, NY:233?237. 
Maurice Gross. 1993. Local grammars and their repre-
sentation by finite automata, Data Description, Dis-
17
course (ed. M. Hoey), Harper-Collins, London:26?
38. 
Jerry R Hobbs, Douglas E. Appelt, John Bear, David 
Israel, Megumi Kameyama, Mark Stickel, Mabry Ty-
son. 1997. FASTUS: A cascaded finite-state trans-
ducer for extracting information from natural lan-
guage text, Finite State Devices for Natural Lan-
guage Processing, (ed. Roche, E.; Schabes, Y.), MIT 
Press, Cambridge, MA:383?406. 
Vangelis Karkaletsis, Georgios Paliouras, Georgios 
Petasis, Natasa Manousopoulou, Constantine D. 
Spyropoulos. 1999. Named-Entity Recognition from 
Greek and English Texts, Journal of Intelligent and 
Robotic Systems, 26(2):123?135.  
Makovi?, Zvonko. 1997. Vilko Gecan, Matica hrvatska, 
Zagreb. 
David McDonald. 1996. Internal and external evidence 
in the identification and semantic categorization of 
proper names, Corpus Processing for Lexical Acqui-
sition, chapter 2, ed. Boguraev; Pustejovsky, The 
MIT Press, Cambridge, MA:21?39. 
Andrei Mikheev, Claire Grover,Marc Moens. 1998. 
Description of the LTG system used for MUC-7, Pro-
ceedings of the 7th Message Understanding Confer-
ence (MUC-7), Fairfax, Virginia 
Andrei Mikheev, Claire Grover,Marc Moens. 1999. 
Named Entity Recognition without Gazetteers, Pro-
ceedings of the Ninth Conference of the European 
Chapter of the Association for Computational Lin-
guistics, Bergen:1?8. 
Andrei Mikheev. 1999. A Knowledge-free Method for 
Capitalized Word Disambiguation, Proceedings of 
the 37th Annual Meeting of the Association for Com-
putational Linguistics:159?166. 
Jakub Piskorski, G?nter Neumann. 2000. An Intelligent 
Text Extraction and Navigation System, Proceedings 
of the 6th International Conference on Computer-
Assisted Information Retrieval (RIAO'00), Paris 
Thierry Poibeau. 2000. A Corpus-based Approach to 
Information Extraction, Journal of Applied Systems 
Studies, 1(2):254?267. 
Thierry Poibeau, Leila Kosseim. 2001. Proper Name 
Extraction from Non-Journalistic Texts, Computa-
tional Linguistics in the Netherlands 2000: Selected 
Papers from the Eleventh CLIN Meeting, W. Daele-
mans, K. Sima'an, J. Veenstra, J. Zavrel (ed.), Ro-
dopi, Amsterdam:144?157. 
 
Max Silberztein. 1999. INTEX: a Finite State Trans-
ducer toolbox, Theoretical Computer Science #231:1, 
Elsevier Science  
Max Silberztein. 2000. INTEX Manual. ASSTRIL, Paris  
Mark Stevenson, Robert Gaizauskas. 1999. Using Cor-
pus-derived Name Lists for Named Entity Recogni-
tion, Proceedings of the sixth conference on Applied 
natural language processing, Seattle, Washington, 
Morgan Kaufmann Publishers Inc.:290?295. 
Marko Tadi?. 2002. Building the Croatian National 
Corpus. LREC2002 Proceedings, Las Palmas, 
ELRA, Pariz-Las Palmas, Vol. II:441-446. 
Nina Wacholder, Yael Ravin, Misook Choi. 1997. Dis-
ambiguation of Proper Names in Text, Proceedings 
of the Fifth Conference on Applied Natural Language 
Processing:202?208. 
Roman Yangarber, Ralph Grishman. 1998. NYU: De-
scription of the Proteus/PET system as used for 
MUC-7 ST, Proceedings of the 7th Message Under-
standing Conference (MUC-7), Fairfax, Virginia. 
?mega?, Viktor. 1998. Be?ka moderna, Matica hrvat-
ska, Zagreb. 
 
18
Proceedings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 9?12,
Gothenburg, Sweden, April 26-30 2014.
c?2014 Association for Computational Linguistics
XLike Project Language Analysis Services
Xavier Carreras
?
, Llu??s Padr
?
o
?
, Lei Zhang
?
, Achim Rettinger
?
, Zhixing Li
1
,
Esteban Garc??a-Cuesta

,
?
Zeljko Agi
?
c
?
, Bo?zo Bekavac
/
, Blaz Fortuna
?
, Tadej
?
Stajner
?
? Universitat Polit`ecnica de Catalunya, Barcelona, Spain.  iSOCO S.A. Madrid, Spain.
/ University of Zagreb, Zagreb, Croatia. ? University of Potsdam, Germany.
? Jo?zef Stefan Institute, Ljubljana, Slovenia. 1 Tsinghua University, Beijing, China.
? Karlsruhe Institute of Technology, Karlsruhe, Germany.
Abstract
This paper presents the linguistic analysis
infrastructure developed within the XLike
project. The main goal of the imple-
mented tools is to provide a set of func-
tionalities supporting the XLike main ob-
jectives: Enabling cross-lingual services
for publishers, media monitoring or de-
veloping new business intelligence appli-
cations. The services cover seven major
and minor languages: English, German,
Spanish, Chinese, Catalan, Slovenian, and
Croatian. These analyzers are provided
as web services following a lightweigth
SOA architecture approach, and they are
publically accessible and shared through
META-SHARE.
1
1 Introduction
Project XLike
2
goal is to develop technology able
to gather documents in a variety of languages and
genres (news, blogs, tweets, etc.) and to extract
language-independent knowledge from them, in
order to provide new and better services to pub-
lishers, media monitoring, and business intelli-
gence. Thus, project use cases are provided by
STA (Slovenian Press Agency) and Bloomberg, as
well as New York Times as an associated partner.
Research partners in the project are Jo?zef Ste-
fan Institute (JSI), Karlsruhe Institute of Technol-
ogy (KIT), Universitat Polit`ecnica de Catalunya
(UPC), University of Zagreb (UZG), and Tsinghua
University (THU). The Spanish company iSOCO
is in charge of integration of all components de-
veloped in the project.
This paper deals with the language technology
developed within the project XLike to convert in-
1
accessible and shared here means that the services are
publicly callable, not that the code is open-source.
http://www.meta-share.eu
2
http://www.xlike.org
put documents into a language-independent rep-
resentation that afterwards enables knowledge ag-
gregation.
To achieve this goal, a bench of linguistic pro-
cessing pipelines is devised as the first step in the
document processing flow. Then, a cross-lingual
semantic annotation method, based on Wikipedia
and Linked Open Data (LOD), is applied. The
semantic annotation stage enriches the linguistic
anaylsis with links to knowledge bases for differ-
ent languages, or links to language independent
representations.
2 Linguistic Analyzers
Apart from basic state-of-the-art tokenizers, lem-
matizers, PoS/MSD taggers, and NE recogniz-
ers, each pipeline requires deeper processors able
to build the target language-independent seman-
tic representantion. For that, we rely on three
steps: dependency parsing, semantic role label-
ing and word sense disambiguation. These three
processes, combined with multilingual ontologi-
cal resouces such as different WordNets and Pred-
icateMatrix (L?opez de la Calle et al., 2014), a
lexical semantics resource combining WordNet,
FrameNet, and VerbNet, are the key to the con-
struction of our semantic representation.
2.1 Dependency Parsing
We use graph-based methods for dependency
parsing, namely, MSTParser
3
(McDonald et al.,
2005) is used for Chinese and Croatian, and
Treeler
4
is used for the other languages. Treeler is
a library developed by the UPC team that imple-
ments several statistical methods for tagging and
parsing.
We use these tools in order to train dependency
parsers for all XLike languages using standard
available treebanks.
3
http://sourceforge.net/projects/mstparser
4
http://treeler.lsi.upc.edu
9
2.2 Semantic Role Labeling
As with syntactic parsing, we are developing SRL
methods with the Treeler library. In order to train
models, we will use the treebanks made available
by the CoNLL-2009 shared task, which provided
data annotated with predicate-argument relations
for English, Spanish, Catalan, German and Chi-
nese. No treebank annotated with semantic roles
exists for Slovene or Croatian. A prototype of
SRL has been integrated in all pipelines (except
the Slovene and Croatian pipelines). The method
implemented follows a pipeline architecture de-
scribed in (Llu??s et al., 2013).
2.3 Word Sense Disambiguation
Word sense disambiguation is performed for all
languages with a publicly available WordNet. This
includes all languages in the project except Chi-
nese. The goal of WSD is to map specific lan-
guages to a common semantic space, in this case,
WN synsets. Thanks to existing connections be-
tween WN and other resources, SUMO and Open-
CYC sense codes are also output when available.
Thanks to PredicateMatrix, the obtained con-
cepts can be projected to FrameNet, achieving a
normalization of the semantic roles produced by
the SRL (which are treebank-dependent, and thus,
not the same for all languages). The used WSD
engine is the UKB (Agirre and Soroa, 2009) im-
plementation provided by FreeLing (Padr?o and
Stanilovsky, 2012).
2.4 Frame Extraction
The final step is to convert all the gathered linguis-
tic information into a semantic representation. Our
method is based on the notion of frame: a seman-
tic frame is a schematic representation of a situ-
ation involving various participants. In a frame,
each participant plays a role. There is a direct cor-
respondence between roles in a frame and seman-
tic roles; namely, frames correspond to predicates,
and participants correspond to the arguments of
the predicate. We distinguish three types of par-
ticipants: entities, words, and frames.
Entities are nodes in the graph connected to
real-world entities as described in Section 3.
Words are common words or concepts, linked to
general ontologies such as WordNet. Frames cor-
respond to events or predicates described in the
document. Figure 1 shows an example sentence,
the extracted frames and their arguments.
It is important to note that frames are a more
general representation than SVO-triples. While
SVO-triples represent a binary relation between
two participants, frames can represent n-ary rela-
tions (e.g. predicates with more than two argu-
ments, or with adjuncts). Frames also allow repre-
senting the sentences where one of the arguments
is in turn a frame (as is the case with plan to make
in the example).
Finally, although frames are extracted at sen-
tence level, the resulting graphs are aggregated
in a single semantic graph representing the whole
document via a very simple coreference resolution
based on detecting named entity aliases and repe-
titions of common nouns. Future improvements
include using an state-of-the-art coreference reso-
lution module for languages where it is available.
3 Cross-lingual Semantic Annotation
This step adds further semantic annotations on top
of the results obtained by linguistic processing.
All XLike languages are covered. The goal is
to map word phrases in different languages into
the same semantic interlingua, which consists of
resources specified in knowledge bases such as
Wikipedia and Linked Open Data (LOD) sources.
Cross-lingual semantic annotation is performed in
two stages: (1) first, candidate concepts in the
knowledge base are linked to the linguistic re-
sources based on a newly developed cross-lingual
linked data lexica, called xLiD-Lexica, (2) next
the candidate concepts get disambiguated based
on the personalized PageRank algorithm by utiliz-
ing the structure of information contained in the
knowledge base.
The xLiD-Lexica is stored in RDF format and
contains about 300 million triples of cross-lingual
groundings. It is extracted from Wikipedia dumps
of July 2013 in English, German, Spanish, Cata-
lan, Slovenian and Chinese, and based on the
canonicalized datasets of DBpedia 3.8 contain-
ing triples extracted from the respective Wikipedia
whose subject and object resource have an equiv-
alent English article.
4 Web Service Architecture Approach
The different language functionalities are imple-
mented following the service oriented architec-
ture (SOA) approach defined in the project XLike.
Therefore all the pipelines (one for each language)
have been implemented as web services and may
10
Figure 1: Graphical representation of frames in the sentence Acme, based in New York, now plans to
make computer and electronic products.
be requested to produce different levels of analy-
sis (e.g. tokenization, lemmatization, NERC, pars-
ing, relation extraction). This approach is very ap-
pealing due to the fact that it allows to treat ev-
ery language independently and execute the whole
language analysis process at different threads or
computers allowing an easier parallelization (e.g.
using external high perfomance platforms such as
Amazon Elastic Compute Cloud EC2
5
) as needed.
Furthermore it also provides independent develop-
ment lifecycles for each language which is crucial
in this type of research projects. Recall that these
web services can be deployed locally or remotely,
maintaining the option of using them in a stand-
alone configuration.
The main structure for each one of the pipelines
is described below:
? Spanish, English, and Catalan: all mod-
ules are based on FreeLing (Padr?o and
Stanilovsky, 2012) and Treeler.
? German: German shallow processing is
based on OpenNLP
6
, Stanford POS tagger
and NE extractor (Toutanova et al., 2003;
Finkel et al., 2005). Dependency parsing,
semantic role labeling, word sense disam-
biguation, and SRL-based frame extraction
are based on FreeLing and Treeler.
? Slovene: Slovene shallow processing is pro-
vided by JSI Enrycher
7
(
?
Stajner et al., 2010),
which consists of the Obeliks morphosyntac-
tic analysis library (Gr?car et al., 2012), the
LemmaGen lemmatizer (Jur?si?c et al., 2010)
and a CRF-based entity extractor (
?
Stajner et
al., 2012). Dependency parsing, word sense
5
http://aws.amazon.com/ec2/
6
http://opennlp.apache.org
7
http://enrycher.ijs.si
disambiguation are based on FreeLing and
Treeler. Frame extraction is rule-based since
no SRL corpus is available for Slovene.
? Croatian: Croatian shallow processing is
based on proprietary tokenizer, POS/MSD-
tagging and lemmatisaton system (Agi?c et
al., 2008), NERC system (Bekavac and
Tadi?c, 2007) and dependency parser (Agi?c,
2012). Word sense disambiguation is based
on FreeLing. Frame extraction is rule-based
since no SRL corpus is available for Croatian.
? Chinese: Chinese shallow and deep process-
ing is based on a word segmentation compo-
nent ICTCLAS
8
and a semantic dependency
parser trained on CSDN corpus. Then, rule-
based frame extraction is performed (no SRL
corpus nor WordNet are available for Chi-
nese).
Each language analysis service is able to pro-
cess thousands of words per second when per-
forming shallow analysis (up to NE recognition),
and hundreds of words per second when produc-
ing the semantic representation based on full anal-
ysis. Moreover, the web service architecture en-
ables the same server to run a different thread for
each client, thus taking advantage of multiproces-
sor capabilities.
The components of the cross-lingual semantic
annotation stage are:
? xLiD-Lexica: The cross-lingual groundings
in xLiD-Lexica are translated into RDF data
and are accessible through a SPARQL end-
point, based on OpenLink Virtuoso
9
as the
back-end database engine.
8
http://ictclas.org/
9
http://virtuoso.openlinksw.com/
11
? Semantic Annotation: The cross-lingual se-
mantic annotation service is based on the
xLiD-Lexica for entity mention recognition
and the JUNG Framework
10
for graph-based
disambiguation.
5 Conclusion
We presented the web service based architecture
used in XLike FP7 project to linguistically ana-
lyze large amounts of documents in seven differ-
ent languages. The analysis pipelines perform ba-
sic processing as tokenization, PoS-tagging, and
named entity extraction, as well as deeper analy-
sis such as dependency parsing, word sense disam-
biguation, and semantic role labelling. The result
of these linguistic analyzers is a semantic graph
capturing the main events described in the docu-
ment and their core participants.
On top of that, the cross-lingual semantic an-
notation component links the resulting linguistic
resources in one language to resources in a knowl-
edge bases in any other language or to language
independent representations. This semantic repre-
sentation is later used in XLike for document min-
ing purposes such as enabling cross-lingual ser-
vices for publishers, media monitoring or devel-
oping new business intelligence applications.
The described analysis services are currently
available via META-SHARE as callable RESTful
services.
Acknowledgments
This work was funded by the European Union
through project XLike (FP7-ICT-2011-288342).
References
?
Zeljko Agi?c, Marko Tadi?c, and Zdravko Dovedan.
2008. Improving part-of-speech tagging accuracy
for Croatian by morphological analysis. Informat-
ica, 32(4):445?451.
?
Zeljko Agi?c. 2012. K-best spanning tree dependency
parsing with verb valency lexicon reranking. In Pro-
ceedings of COLING 2012: Posters, pages 1?12,
Mumbai, India, December. The COLING 2012 Or-
ganizing Committee.
Eneko Agirre and Aitor Soroa. 2009. Personalizing
pagerank for word sense disambiguation. In Pro-
ceedings of the 12th conference of the European
chapter of the Association for Computational Lin-
guistics (EACL-2009), Athens, Greece.
10
Java Universal Network/Graph Framework
http://jung.sourceforge.net/
Bo?zo Bekavac and Marko Tadi?c. 2007. Implementa-
tion of Croatian NERC system. In Proceedings of
the Workshop on Balto-Slavonic Natural Language
Processing (BSNLP2007), Special Theme: Informa-
tion Extraction and Enabling Technologies, pages
11?18. Association for Computational Linguistics.
Jenny Rose Finkel, Trond Grenager, and Christopher
Manning. 2005. Incorporating non-local informa-
tion into information extraction systems by gibbs
sampling. In Proceedings of the 43rd Annual Meet-
ing on Association for Computational Linguistics
(ACL?05), pages 363?370.
Miha Gr?car, Simon Krek, and Kaja Dobrovoljc. 2012.
Obeliks: statisti?cni oblikoskladenjski ozna?cevalnik
in lematizator za slovenski jezik. In Zbornik Osme
konference Jezikovne tehnologije, Ljubljana, Slove-
nia.
Matjaz Jur?si?c, Igor Mozeti?c, Tomaz Erjavec, and Nada
Lavra?c. 2010. Lemmagen: Multilingual lemmati-
sation with induced ripple-down rules. Journal of
Universal Computer Science, 16(9):1190?1214.
Xavier Llu??s, Xavier Carreras, and Llu??s M`arquez.
2013. Joint arc-factored parsing of syntactic and se-
mantic dependencies. Transactions of the Associa-
tion for Computational Linguistics, 1:219?230.
Maddalen L?opez de la Calle, Egoitz Laparra, and Ger-
man Rigau. 2014. First steps towards a predicate
matrix. In Proceedings of the Global WordNet Con-
ference (GWC 2014), Tartu, Estonia, January. GWA.
Ryan McDonald, Koby Crammer, and Fernando
Pereira. 2005. Online large-margin training of
dependency parsers. In Proceedings of the 43rd
Annual Meeting of the Association for Computa-
tional Linguistics (ACL?05), pages 91?98, Ann Ar-
bor, Michigan, June.
Llu??s Padr?o and Evgeny Stanilovsky. 2012. Freeling
3.0: Towards wider multilinguality. In Proceedings
of the Language Resources and Evaluation Confer-
ence (LREC 2012), Istanbul, Turkey, May. ELRA.
Tadej
?
Stajner, Delia Rusu, Lorand Dali, Bla?z Fortuna,
Dunja Mladeni?c, and Marko Grobelnik. 2010. A
service oriented framework for natural language text
enrichment. Informatica, 34(3):307?313.
Kristina Toutanova, Dan Klein, Christopher D. Man-
ning, and Yoram Singer. 2003. Feature-rich part-of-
speech tagging with a cyclic dependency network.
In Proceedings of the 2003 Conference of the North
American Chapter of the Association for Computa-
tional Lin- guistics on Human Language Technology
(NAACL?03).
Tadej
?
Stajner, Toma?z Erjavec, and Simon Krek.
2012. Razpoznavanje imenskih entitet v slovenskem
besedilu. In In Proceedings of 15th Internation
Multiconference on Information Society - Jezikovne
Tehnologije, Ljubljana, Slovenia.
12
