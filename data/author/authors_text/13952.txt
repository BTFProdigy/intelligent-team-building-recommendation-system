Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 382?391,
Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational Linguistics
Is a 204 cm Man Tall or Small ?
Acquisition of Numerical Common Sense from the Web
Katsuma Narisawa1 Yotaro Watanabe1 Junta Mizuno2
Naoaki Okazaki1,3 Kentaro Inui1
1Graduate School of Information Sciences, Tohoku University
2National Institute of Information and Communications Technology (NICT)
3Japan Science and Technology Agency (JST)
{katsuma,yotaro-w,junta-m,okazaki,inui}@ecei.tohoku.ac.jp
Abstract
This paper presents novel methods for
modeling numerical common sense: the
ability to infer whether a given number
(e.g., three billion) is large, small, or nor-
mal for a given context (e.g., number of
people facing a water shortage). We first
discuss the necessity of numerical com-
mon sense in solving textual entailment
problems. We explore two approaches for
acquiring numerical common sense. Both
approaches start with extracting numeri-
cal expressions and their context from the
Web. One approach estimates the distribu-
tion of numbers co-occurring within a con-
text and examines whether a given value is
large, small, or normal, based on the distri-
bution. Another approach utilizes textual
patterns with which speakers explicitly ex-
presses their judgment about the value of
a numerical expression. Experimental re-
sults demonstrate the effectiveness of both
approaches.
1 Introduction
Textual entailment recognition (RTE) involves a
wide range of semantic inferences to determine
whether the meaning of a hypothesis sentence (h)
can be inferred from another text (t) (Dagan et
al., 2006). Although several evaluation campaigns
(e.g., PASCAL/TAC RTE challenges) have made
significant progress, the RTE community recog-
nizes the necessity of a deeper understanding of
the core phenomena involved in textual inference.
Such recognition comes from the ideas that cru-
cial progress may derive from decomposing the
complex RTE task into basic phenomena and from
solving each basic phenomenon separately (Ben-
tivogli et al, 2010; Sammons et al, 2010; Cabrio
and Magnini, 2011; Toledo et al, 2012).
Given this background, we focus on solving one
of the basic phenomena in RTE: semantic infer-
ence related to numerical expressions. The spe-
cific problem we address is acquisition of numeri-
cal common sense. For example,
(1) t : Before long, 3b people will face a water
shortage in the world.
h : Before long, a serious water shortage
will occur in the world.
Although recognizing the entailment relation be-
tween t and h is frustratingly difficult, we assume
this inference is decomposable into three phases:
3b people face a water shortage.
? 3,000,000,000 people face a water shortage.
|= many people face a water shortage.
|= a serious water shortage.
In the first phase, it is necessary to recognize 3b
as a numerical expression and to resolve the ex-
pression 3b into the exact amount 3,000,000,000.
The second phase is much more difficult because
we need subjective but common-sense knowledge
that 3,000,000,000 people is a large number.
In this paper, we address the first and sec-
ond phases of inference as an initial step towards
semantic processing with numerical expressions.
The contributions of this paper are four-fold.
1. We examine instances in existing RTE cor-
pora, categorize them into groups in terms of
the necessary semantic inferences, and dis-
cuss the impact of this study for solving RTE
problems with numerical expressions.
2. We describe a method of normalizing numer-
ical expressions referring to the same amount
in text into a unified semantic representation.
3. We present approaches for aggregating nu-
merical common sense from examples of nu-
merical expressions and for judging whether
a given amount is large, small, or normal.
382
4. We demonstrate the effectiveness of this ap-
proach, reporting experimental results and
analyses in detail. Although it would be ideal
to evaluate the impact of this study on the
overall RTE task, we evaluate each phase sep-
arately. We do this because the existing RTE
data sets tend to exhibit very diverse linguis-
tic phenomena, and it is difficult to employ
such data for evaluating the real impact of
this study.
2 Related work
Surprisingly, NLP research has paid little atten-
tion to semantic processing of numerical expres-
sions. This is evident when we compare with tem-
poral expressions, for which corpora (e.g., ACE-
20051, TimeBank2) were developed with annota-
tion schemes (e.g., TIMEX3, TimeML4).
Several studies deal with numerical expressions
in the context of information extraction (Bakalov
et al, 2011), information retrieval (Fontoura et al,
2006; Yoshida et al, 2010), and question answer-
ing (Moriceau, 2006). Numbers such as prod-
uct prices and weights have been common targets
of information extraction. Fontoura et al (2006)
and Yoshida et al (2010) presented algorithms and
data structures that allow number-range queries
for searching documents. However, these studies
do not interpret the quantity (e.g., 3,000,000,000)
of a numerical expression (e.g., 3b people), but
rather treat numerical expressions as strings.
Banerjee et al (2009) focused on quantity con-
sensus queries, in which there is uncertainty about
the quantity (e.g., weight airbus A380 pounds).
Given a query, their approach retrieves documents
relevant to the query and identifies the quantities
of numerical expressions in the retrieved docu-
ments. They also proposed methods for enumer-
ating and ranking the candidates for the consen-
sus quantity intervals. Even though our study
shares a similar spirit (modeling of consensus for
quantities) with Banerjee et al (2009), their goal
is different: to determine ground-truth values for
queries.
In question answering, to help ?sanity check?
answers with numerical values that were
1http://www.itl.nist.gov/iad/mig/
tests/ace/ace05/
2http://www.timeml.org/site/timebank/
timebank.html
3http://timex2.mitre.org/
4http://timeml.org/site/index.html
way out of common-sense ranges, IBM?s PI-
QUANT (Prager et al, 2003; Chu-Carroll et al,
2003) used information in Cyc (Lenat, 1995).
For example, their question-answering system
rejects 200 miles as a candidate answer for the
height of Mt. Everest, since Cyc knows mountains
are between 1,000 and 30,000 ft. high. They
also consider the problem of variations in the
precision of numbers (e.g., 5 million, 5.1 million,
5,200,390) and unit conversions (e.g., square
kilometers and acres).
Some recent studies delve deeper into the se-
mantic interpretation of numerical expressions.
Aramaki et al (2007) focused on the physical size
of an entity to predict the semantic relation be-
tween entities. For example, knowing that a book
has a physical size of 20 cm ? 25 cm and that a li-
brary has a size of 10 m ? 10 m, we can estimate
that a library contains a book (content-container
relation). Their method acquires knowledge about
entity size from the Web (by issuing queries like
?book (*cm x *cm)?), and integrates the knowl-
edge as features for the classification of relations.
Davidov and Rappoport (2010) presented a
method for the extraction from the Web and ap-
proximation of numerical object attributes such as
height and weight. Given an object-attribute pair,
the study expands the object into a set of compa-
rable objects and then approximates the numerical
values even when no exact value can be found in a
text. Aramaki et al (2007) and Davidov and Rap-
poport (2010) rely on hand-crafted patterns (e.g.,
?Object is * [unit] tall?), focusing on a specific set
of numerical attributes (e.g., height, weight, size).
In contrast, this study can handle any kind of target
and situation that is quantified by numbers, e.g.,
number of people facing a water shortage.
Recently, the RTE community has started to
pay some attention to the appropriate processing
of numerical expressions. Iftene (2010) presented
an approach for matching numerical ranges ex-
pressed by a set of phrases (e.g., more than and at
least). Tsuboi et al (2011) designed hand-crafted
rules for matching intervals expressed by temporal
expressions. However, these studies do not nec-
essarily focus on semantic processing of numeri-
cal expressions; thus, these studies do not normal-
ize units of numerical expressions nor make infer-
ences with numerical common sense.
Sammons et al (2010) reported that most sys-
tems submitted to RTE-5 failed on examples
383
where numeric reasoning was necessary. They ar-
gued the importance of aligning numerical quanti-
ties and performing numerical reasoning in RTE.
LoBue and Yates (2011) identified 20 categories
of common-sense knowledge that are prevalent in
RTE. One of the categories comprises arithmetic
knowledge (including computations, comparisons,
and rounding). They concluded that many kinds
of the common-sense knowledge have received
scarce attention from researchers even though the
knowledge is essential to RTE. These studies pro-
vided a closer look at the phenomena involved in
RTE, but they did not propose a solution for han-
dling numerical expressions.
3 Investigation of textual-entailment
pairs with numerical expressions
In this section, we investigate textual entailment
(TE) pairs in existing corpora in order to study
the core phenomena that establish an entailment
relation. We used two Japanese TE corpora:
RITE (Shima et al, 2011) and Odani et al (2008).
RITE is an evaluation workshop of textual entail-
ment organized by NTCIR-9, and it targets the
English, Japanese, and Chinese languages. We
used the Japanese portions of the development
and training data. Odani et al (2008) is another
Japanese corpus that was manually created. The
total numbers of text-hypothesis (T -H) pairs are
1,880 (RITE) and 2,471 (Odani).
We manually selected sentence pairs in which
one or both of the sentences contained a numerical
expression. Here, we define the term numerical
expression as an expression containing a number
or quantity represented by a numeral and a unit.
For example, 3 kilometers is a numerical expres-
sion with the numeral 3 and the unit kilometer.
Note that intensity of 4 is not a numerical expres-
sion because intensity is not a unit.
We obtained 371 pairs from the 4,351 T -H
pairs. We determined the inferences needed to
prove ENTAILMENT or CONTRADICTION of the
hypotheses, and classified the 371 pairs into 11
categories. Note that we ignored T -H pairs in
which numerical expressions were unnecessary
to prove the entailment relation (e.g., Socrates
was sentenced to death by 500 jury members and
Socrates was sentenced to death). Out of 371
pairs, we identified 114 pairs in which numerical
expressions played a central role in the entailment
relation.
Table 1 summarizes the categories of TE phe-
nomena we found in the data set. The largest cate-
gory is numerical matching (32 pairs). We can in-
fer an entailment relation in this category by align-
ing two numerical expressions, e.g., 2.2 million
|= over 800 thousand. This is the most funda-
mental task in numerical reasoning, interpreting
the amount (number, unit, and range) in a numer-
ical expression. We address this task in Section
4.1. The second largest category requires com-
mon sense about numerical amounts. In order to
recognize textual entailment of pairs in this cat-
egory, we need common-sense knowledge about
humans? subjective judgment of numbers. We
consider this problem in Section 5.
To summarize, this study covers 37.9% of the
instances in Table 1, focusing on the first and sec-
ond categories. Due to space limitations, we omit
the explanations for the other phenomena, which
require such things as lexical knowledge, arith-
metic operations, and counting. The coverage of
this study might seem small, but it is difficult to
handle varied phenomena with a unified approach.
We believe that this study forms the basis for in-
vestigating other phenomena of numerical expres-
sions in the future.
4 Collecting numerical expressions from
the Web
In this paper, we explore two approaches to acquir-
ing numerical common sense. Both approaches
start with extracting numerical expressions and
their context from the Web. We define a context
as the verb and its arguments that appear around a
numerical expression.
For instance, the context of 3b people in the sen-
tence 3b people face a water shortage is ?face?
and ?water shortage.? In order to extract and
aggregate numerical expressions in various doc-
uments, we converted the numerical expressions
into semantic representations (to be described in
Section 4.1), and extracted their context (to be de-
scribed in Section 4.2).
The first approach for acquiring numerical com-
mon sense estimates the distribution of numbers
that co-occur within a context, and examines
whether a given value is large, small, or normal
based on that distribution (to be described in Sec-
tion 5.1). The second approach utilizes textual
patterns with which speakers explicitly expresses
their judgment about the value of a numerical ex-
384
Category Definition Example #
Numerical matching
Aligning numerical expres-
sions in T and H, considering
differences in unit, range, etc.
t: It is said that there are about 2.2 million alcoholics in the whole country.
h: It is estimated that there are over 800 thousand people who are alcoholics. 32
Numerical common sense
Inferring by interpreting the
numerical amount (large or
small).
t: In the middle of the 21st century, 7 billion people, corresponding to 70% of the
global population, will face a water shortage.
h: It is concerning that a serious water shortage will spread around the world in the
near future.
12
Lexical knowledge Inferring by using numericalaspects of word meanings.
t: Mr. and Ms. Sato celebrated their 25th wedding anniversary.
h: Mr. and Ms. Sato celebrated their silver wedding anniversary. 12
Arithmetic Arithmetic operations includ-ing addition and subtraction.
t: The number of 2,000-yen bills in circulation has increased to 450 million, in
contrast with 440 million 5,000-yen bills.
h: The number of 2,000-yen bills in circulation exceeds the number of 5,000-yen
bills by 10 million bills.
11
Numeric-range expression
of verbs
Numerical ranges expressed by
verbs (e.g., exceed).
t: It is recorded that the maximum wave height reached 13.8 meters during the Sea
of Japan Earthquake Tsunami in May 1983.
h: During the Sea of Japan Earthquake, the height of the tsunami exceeded 10meters.
9
Simple Rewrite Rule This includes various simplerules for rewriting.
t: The strength of Taro?s grip is No. 1 in his class.
h: Taro?s grip is the strongest in his class. 7
State change Expressing the change of avalue by a multiplier or ratio.
t: Consumption of pickled plums is 1.5 times the rate of 20 years ago.
h: Consumption of pickled plums has increased. 6
Ordinal numbers Inference by interpreting ordi-nal numbers.
t: Many precious lives were sacrificed in the Third World War.
h: So far, there have been at least three World Wars. 6
Temporal expression
Inference by interpreting tem-
poral expressions such as an-
niversary, age, and ordinal
numbers.
t: Mr. and Ms. Sato celebrate their 25th wedding anniversary.
h: Mr. and Ms. Sato got married 25 years ago. 3
Count Counting up the number of var-ious entities.
t: In Japan, there are the Asian Triopsidae, the American Triopsidae, and the Euro-
pean Triopsidae.
h: In Japan, there are 3 types of Triopsidae.
3
Others 15
All 116
Table 1: Frequency and simple definitions for each category of the entailment phenomena in the survey.
Numerical Semantic representation
Expression Value Unit Mod.
about seven grams 7 g about
roughly 7 kg 7000 g about
as heavy as 7 tons 7? 106 g large
as cheap as $1 1 $ small
30?40 people [30, 40] nin (people)
more than 30 cars 30 dai (cars) over
7 km per hour 7000 m/h
Table 2: Normalized representation examples
pression (to be explained in Section 5.2).
In this study, we acquired numerical common
sense from a collection of 8 billion sentences in
100 million Japanese Web pages (Shinzato et al,
2012). For this reason, we originally designed
text patterns specialized for Japanese dependency
trees. For the sake of the readers? understand-
ing, this paper uses examples with English trans-
lations for explaining language-independent con-
cepts, and both Japanese and English translations
for explaining language-dependent concepts.
4.1 Extracting and normalizing numerical
expressions
The first step for collecting numerical expres-
sions is to recognize when a numerical expression
is mentioned and then to normalize it into a seman-
tic representation. This is the most fundamental
String Operation
gram(s) set-unit: ?g?
kilogram(s) set-unit: ?g?; multiply-value: 1,000
kg set-unit: ?g?; multiply-value: 1,000
ton(s) set-unit: ?g?; multiply-value: 1,000,000
nin (people) set-unit: ?nin? (person)
about set-modifier: ?about?
as many as set-modifier: ?large?
as little as set-modifier: ?small?
Table 3: An example of unit/modifier dictionary
step in numerical reasoning and has a number of
applications. For example, this step handles cases
of numerical matching, as in Table 1.
The semantic representation of a numerical ex-
pression consists of three fields: the value or range
of the real number(s)5, the unit (a string), and the
optional modifiers. Table 2 shows some exam-
ples of numerical expressions and their semantic
representations. During normalization, we identi-
fied spelling variants (e.g., kilometer and km) and
transformed auxiliary units into their correspond-
ing canonical units (e.g., 2 tons and 2,000 kg to
2,000,000 grams). When a numerical expression
is accompanied by a modifier such as over, about,
or more than, we updated the value and modifier
fields appropriately.
5Internally, all values are represented by ranges (e.g., 75
is represented by the range [75, 75]).
385
We developed an extractor and a normalizer for
Japanese numerical expressions6. We will outline
the algorithm used in the normalizer with an exam-
ple sentence: ?Roughly three thousand kilograms
of meats have been provided every day.?
1. Find numbers in the text by using regular ex-
pressions and convert the non-Arabic num-
bers into their corresponding Arabic num-
bers. For example, we find three thousand7
and represent it as 3, 000.
2. Check whether the words that precede or fol-
low the number are units that are registered in
the dictionary. Transform any auxiliary units.
In the example, we find that kilograms8 is a
unit. We multiply the value 3, 000 by 1, 000,
and obtain the value 3, 000, 000 with the unit
g.
3. Check whether the words that precede or fol-
low the number have a modifier that is regis-
tered in the dictionary. Update the value and
modifier fields if necessary. In the example,
we find roughly and set about in the modifier
field.
We used a dictionary9 to perform procedures 2
and 3 (Table 3). If the words that precede or fol-
low an extracted number match an entry in the dic-
tionary, we change the semantic representation as
described in the operation.
The modifiers ?large? and ?small? require elab-
oration because the method in Section 5.2 relies
heavily on these modifiers. We activated the mod-
ifier ?large? when a numerical expression occurred
with the Japanese word mo, which roughly cor-
responds to as many as, as large as, or as heavy
as in English10. Similarly, we activated the modi-
fier ?small? when a numerical expression occurred
with the word shika, which roughly corresponds
to as little as, as small as, or as light as11. These
modifiers are important for this study, reflecting
the writer?s judgment about the amount.
6The software is available at http://www.cl.
ecei.tohoku.ac.jp/?katsuma/software/
normalizeNumexp/
7In Japanese 3, 000 is denoted by the Chinese symbols ?
???.
8We write kilograms as ??????? in Japanese.
9The dictionary is bundled with the tool. See Footnote 6.
10In Japanese, we can use the word mo with a numerical
expression to state that the amount is ?large? regardless of
how large it is (e.g., large, big, many, heavy).
11Similarly, we can use the word shika with any adjective.
?? ??? ??? ????? ????
He gave to a friend$300 at the bank.
Japanese:
English:
nsubj dobj prep_to
prep_at
Number: {value: 300; unit: ?$? }
Context: {verb: ?give? ; nsubj: ?he? ; 
 prep_to: ?friend? ; prep_at: ?bank? }
Figure 1: Example of context extraction
4.2 Extraction of context
The next step in acquiring numerical common
sense is to capture the context of numerical ex-
pressions. Later, we will aggregate numbers that
share the same context (see Section 5). The con-
text of a numerical expression should provide suf-
ficient information to determine what it measures.
For example, given the sentence, ?He gave $300 to
a friend at the bank,? it would be better if we could
generalize the context to someone gives money to
a friend for the numerical expression $300. How-
ever, it is a nontrivial task to design an appropriate
representation of varying contexts. For this rea-
son, we employ a simple rule to capture the con-
text of numerical expressions: we represent the
context with the verb that governs the numerical
expression and its typed arguments.
Figure 1 illustrates the procedure for extracting
the context of a numerical expression12. The com-
ponent in Section 4.1 recognizes $300 as a numer-
ical expression, then normalizes it into a semantic
representation. Because the numerical expression
is a dependent of the verb gave, we extract the verb
and its arguments (except for the numerical ex-
pression itself) as the context. After removing in-
flections and function words from the arguments,
we obtain the context representation of Figure 1.
5 Acquiring numerical common sense
In this section, we present two approaches for ac-
quiring numerical common sense from a collec-
tion of numerical expressions and their contexts.
Both approaches start with collecting the numbers
(in semantic representation) and contexts of nu-
merical expressions from a large number of sen-
tences (Shinzato et al, 2012), and storing them
12The English dependency tree might look peculiar be-
cause it is translated from the Japanese dependency tree.
386
in a database. When a context and a value are
given for a prediction (hereinafter called the query
context and query value, respectively), these ap-
proaches judge whether the query value is large,
small, or normal.
5.1 Distribution-based approach
Given a query context and query value, this
approach retrieves numbers associated with the
query context and draws a distribution of normal-
ized numbers. This approach considers the dis-
tribution estimated for the query context and de-
termines if the value is within the top 5 percent
(large), within the bottom 5 percent (small), or is
located in between these regions (normal).
The underlying assumption of this approach is
that the real distribution of a query (e.g., money
given to a friend) can be approximated by the dis-
tribution of numbers co-occurring with the context
(e.g., give and friend) on the Web. However, the
context space generated in Section 4.2 may be too
sparse to find numbers in the database, especially
when a query context is fine-grained. Therefore,
when no item is retrieved for the query context,
we employ a backoff strategy to drop some of the
uninformative elements in the query context: ele-
ments are dropped from the context based on the
type of argument, in this order: he (prep to), kara
(prep from), ha (nsubj), yori (prep from), made
(prep to), nite (prep at), de (prep at, prep by), ni
(prep at), wo (dobj), ga (nsubj), and verb.
5.2 Clue-based approach
This approach utilizes textual clues with which a
speaker explicitly expresses his or her judgment
about the amount of a numerical expression. We
utilize large and small modifiers (described in Sec-
tion 4.1), which correspond to textual clues mo
(as many as, as large as) and shika (only, as
few as), respectively, for detecting humans? judg-
ments. For example, we can guess that $300 is
large if we find an evidential sentence13, He gave
as much as $100 to a friend.
Similarly to the distribution-based approach,
this approach retrieves numbers associated with
the query context. This approach computes the
13Although the sentence states a judgment about $100, we
can infer that $300 is also large because $300 > $100.
largeness L(x) of a value x:
L(x) = pl(x)ps(x) + pl(x)
, (1)
pl(x) =
??{r|rv < x ? rm 3 large}
??
??{r|rm 3 large}
?? , (2)
ps(x) =
??{r|rv > x ? rm 3 small}
??
??{r|rm 3 small}
?? . (3)
In these equations, r denotes a retrieved item for
the query context, and rv and rm represent the nor-
malized value and modifier flags, respectively, of
the item r. The numerator of Equation 2 counts
the number of numerical expressions that support
the judgment that x is large14, and its denominator
counts the total number of numerical expressions
with large as a modifier. Therefore, pl(x) com-
putes the ratio of times there is textual evidence
that says that x is large, to the total number of
times there is evidences with large as a modifier.
In an analogous way, ps(x) is defined to be the ra-
tio for evidence that says x is small. Hence, L(x)
approaches 1 if everyone on the Web claims that
x is large, and approaches 0 if everyone claims
that x is small. This approach predicts large if
L(x) > 0.95, small if L(x) < 0.05, and normal
otherwise.
6 Experiments
6.1 Normalizing numerical expressions
We evaluated the method that we described in Sec-
tion 4.1 for extracting and normalizing numerical
expressions. In order to prepare a gold-standard
data set, we obtained 1,041 sentences by randomly
sampling about 1% of the sentences containing
numbers (Arabic digits and/or Chinese numerical
characters) in a Japanese Web corpus (100 million
pages) (Shinzato et al, 2012). For every numer-
ical expression in these sentences, we manually
determined a tuple of the normalized value, unit,
and modifier. Here, non-numerical expressions
such as temporal expressions, telephone numbers,
and postal addresses, which were very common,
were beyond the scope of the project15. We ob-
tained 329 numerical expressions from the 1,041
sentences.
We evaluated the correctness of the extraction
and normalization by measuring the precision and
14This corresponds to the events where we find an evidence
expression ?as many as rv?, where rv < x.
15If a tuple was extracted from a non-numerical expres-
sion, we regarded this as a false positive
387
recall using the gold-standard data set16. Our
method performed with a precision of 0.78 and a
recall of 0.92. Most of the false negatives were
caused by the incompleteness of the unit dictio-
nary. For example, the proposed method could not
identify 1Ghz as a numerical expression because
the unit dictionary did not register Ghz but GHz.
It is trivial to improve the recall of the method by
enriching the unit dictionary.
The major cause of false positives was the se-
mantic ambiguity of expressions. For example, the
proposed method identified Seven Hills as a nu-
merical expression although it denotes a location
name. In order to reduce false positives, it may
be necessary to utilize broader contexts when lo-
cating numerical expressions; this could be done
by using, for example, a named entity recognizer.
This is the next step to pursue in future work.
However, these errors do not have a large effect
on the estimation of the distribution of the numer-
ical values that occur with specific named entities
and idiomatic phrases. Moreover, as explained in
Section 5, we draw distributions for fine-grained
contexts of numerical expressions. For these rea-
sons, we think that the current performance is suf-
ficient for acquiring numerical common sense.
6.2 Acquisition of numerical common sense
6.2.1 Preparing an evaluation set
We built a gold-standard data set for numerical
common sense. We applied the method in Sec-
tion 4.1 to sentences sampled at random from the
Japanese Web corpus (Shinzato et al, 2012), and
we extracted 2,000 numerical expressions. We
asked three human judges to annotate every nu-
merical expression with one of six labels, small,
relatively small, normal, relatively large, large,
and unsure. The label relatively small could be
applied to a numerical expression when the judge
felt that the amount was rather small (below the
normal) but hesitated to label it small. The la-
bel relatively large was defined analogously. We
gave the following criteria for labeling an item as
unsure: when the judgment was highly dependent
on the context; when the sentence was incompre-
hensible; and when it was a non-numerical expres-
sions (false positives of the method are discussed
in Section 4.1).
Table 4 reports the inter-annotator agreement.
16All fields (value, unit, modifier) of the extracted tuple
must match the gold-standard data set.
Agreement # expressions
3 annotators 735 (36.7%)
2 annotators 963 (48.2%)
no agreement 302 (15.1%)
Total 2000 (100.0%)
Table 4: Inter-annotator agreement
0"
100"
200"
300"
400"
500"
0"
100"
200"
130" 140" 150" 160" 170" 180" 190" 200" 210"[cm]
distribu7on:based"clue:based(large)"clue:based(small)"
[#"extrac7on]"(distribu7on:based)[#"extrac7on]"(clue:based)
Figure 2: Distributions of numbers with large and
small modifiers for the context human?s height.
For the evaluation of numerical expressions in the
data set, we used those for which at least two anno-
tators assigned the same label. After removing the
unsure instances, we obtained 640 numerical ex-
pressions (20 small, 35 relatively small, 152 nor-
mal, 263 relatively large, and 170 large) as the
evaluation set.
6.2.2 Results
The proposed method extracted about 23 million
pairs of numerical expressions and their context
from the corpus (with 100 million Web pages).
About 15% of the extracted pairs were accom-
panied by either a large or small modifier. Fig-
ure 2 depicts the distributions of the context hu-
man?s height produced by the distribution-based
and clue-based approaches. These distributions
are quite reasonable as common-sense knowledge:
we can interpret that numbers under 150 cm are
perceived as small and those above 180 cm as
large.
We measured the correctness of the proposed
methods on the gold-standard data. For this
evaluation, we employed two criteria for correct-
ness: strict and lenient. With the strict crite-
rion, the method must predict a label identical to
that in the gold-standard. With the lenient crite-
rion, the method was also allowed to predict either
large/small or normal when the gold-standard la-
bel was relatively large/small.
Table 5 reports the precision (P), recall (R), F1
(F1), and accuracy (Acc) of the proposed methods.
388
No. System Gold Sentence Remark
1 small small
I think that three men can
create such a great thing in
the world.
Correct
2 normal normal I have two cats. Correct
3 large large It?s above 32 centigrade. Correct
4 large large I earned 10 million yen fromhorse racing. Correct
5 small normal There are 2 reasons. Difficulty in judging small. Since a few people say, ?There areonly 2 reasons,? our approach predicted a small label.
6 small large
Ten or more people came,
and my eight-mat room was
packed.
Difficulty in modeling the context because this sentence omits
the locational argument for the verb came. We should extract
the context as the number of people who came to my eight-mat
room instead of the number of people who came.
7 small normal
I have two friends who
have broken up with their
boyfriends recently.
Difficulty in modeling the context. We should extract context as
the number of friends who have broken up with their boyfriends
recently instead of the number of friends.
8 small large
Lack of knowledge. We extract the context as the number of
heads of a turtle, but no corresponding information was found
on the Web.
Table 6: Output example and error analysis. We present translations of the sentences, which were origi-
nally in Japanese.
Approach Label P R F1 Acc
large+ 0.892 0.498 0.695
Distribution normal+ 0.753 0.935 0.844 0.760
small+ 0.273 0.250 0.262
large 0.861 0.365 0.613
Distribution normal 0.529 0.908 0.719 0.590
small 0.222 0.100 0.161
large+ 0.923 0.778 0.851
Clue normal+ 0.814 0.765 0.790 0.770
small+ 0.228 0.700 0.464
large 0.896 0.659 0.778
Clue normal 0.593 0.586 0.590 0.620
small 0.164 0.550 0.357
Table 5: Precision (P), recall (R), F1 score (F1),
and accuracy (Acc) of the acquisition of numerical
common sense.
Labels with the suffix ?+? correspond to the lenient
criterion. The clue-based approach achieved 0.851
F1 (for large), 0.790 F1 (for normal), and 0.464
(for small) with the lenient criterion. The perfor-
mance is surprisingly good, considering the sub-
jective nature of this task.
The clue-based approach was slightly better
than the distribution-based approach. In particu-
lar, the clue-based approach is good at predicting
large and small labels, whereas the distribution-
based approach is good at predicting normal la-
bels. We found some targets for which the distri-
bution on the Web is skewed from the ?real? dis-
tribution. For example, let us consider the distri-
bution of the context ?the amount of money that a
person wins in a lottery?. We can find a number
of sentences like if you won the 10-million-dollar
lottery, .... In other words, people talk about a
large amount of money even if they did not win
any money at all. In order to remedy this problem,
we may need to enrich the context representation
by introducing, for example, the factuality of an
event.
6.2.3 Discussion
Table 6 shows some examples of predictions from
the clue-based approach. Because of space limita-
tions, we mention only the false instances of this
approach.
The clue-based approach tends to predict small
even if the gold-standard label is normal. About
half of the errors of the clue-based approach were
of this type; this is why the precision for small and
the recall for normal are low. The cause of this er-
ror is exemplified by the sentence, ?there are two
reasons.? Human judges label normal to the nu-
merical expression two reasons, but the method
predicts small. This is because a few people say
there are only two reasons, but no one says there
are as many as two reasons. In order to handle
these cases, we may need to incorporate the distri-
bution information with the clue-based approach.
We found a number of examples for which
modeling the context is difficult. Our approach
represents the context of a numerical expression
with the verb that governs the numerical expres-
sion and its typed arguments. However, this ap-
proach sometimes misses important information,
especially when an argument of the verb is omit-
ted (Example 6). The approach also suffers from
the relative clause in Example 7, which conveys an
essential context of the number. These are similar
to the scope-ambiguity problem such as encoun-
389
tered with negation and quantification; it is diffi-
cult to model the scope when a numerical expres-
sion refers to a situation.
Furthermore, we encountered some false exam-
ples even when we were able to precisely model
the context. In Example 8, the proposed method
was unable to predict the label correctly because
no corresponding information was found on the
Web. The proposed method might more easily pre-
dict a label if we could generalize the word turtle
as animal. It may be worth considering using lan-
guage resources (e.g., WordNet) to generalize the
context.
7 Conclusions
We proposed novel approaches for acquiring nu-
merical common sense from a collection of texts.
The approaches collect numerical expressions and
their contexts from the Web, and acquire numeri-
cal common sense by considering the distributions
of normalized numbers and textual clues such as
mo (as many as) and shika (only, as few as). The
experimental results showed that our approaches
can successfully judge whether a given amount
is large, small, or normal. The implementations
and data sets used in this study are available on
the Web17. We believe that acquisition of numer-
ical common sense is an important step towards a
deeper understanding of inferences with numbers.
There are three important future directions for
this research. One is to explore a more sophis-
ticated approach for precisely modeling the con-
texts of numbers. Because we confirmed in this
paper that these two approaches have different
characteristics, it would be interesting to incorpo-
rate textual clues into the distribution-based ap-
proach by using, for example, machine learning
techniques. Finally, we are planning to address the
?third phase? of the example explained in Section
1: associating many people face a water shortage
with a serious water shortage.
Acknowledgments
This research was partly supported by JST,
PRESTO. This research was partly supported by
JSPS KAKENHI Grant Numbers 23240018 and
23700159.
17http://www.cl.ecei.tohoku.ac.jp/
?katsuma/resource/numerical common sense/
References
Eiji Aramaki, Takeshi Imai, Kengo Miyo, and
Kazuhiko Ohe. 2007. Uth: Svm-based semantic
relation classification using physical sizes. In Pro-
ceedings of the 4th International Workshop on Se-
mantic Evaluations, pages 464?467.
Anton Bakalov, Ariel Fuxman, Partha Pratim Talukdar,
and Soumen Chakrabarti. 2011. SCAD: collective
discovery of attribute values. In Proceedings of the
20th international conference on World wide web,
WWW ?11, pages 447?456.
Somnath Banerjee, Soumen Chakrabarti, and Ganesh
Ramakrishnan. 2009. Learning to rank for quantity
consensus queries. In Proceedings of the 32nd inter-
national ACM SIGIR conference on Research and
development in information retrieval, SIGIR ?09,
pages 243?250.
Luisa Bentivogli, Elena Cabrio, Ido Dagan, Danilo
Giampiccolo, Medea Lo Leggio, and Bernardo
Magnini. 2010. Building textual entailment special-
ized data sets: a methodology for isolating linguis-
tic phenomena relevant to inference. Proceedings of
the Seventh International Conference on Language
Resources and Evaluation, pages 3542?3549.
Elena Cabrio and Bernardo Magnini. 2011. Towards
component-based textual entailment. In Proceed-
ings of the Ninth International Conference on Com-
putational Semantics, IWCS ?11, pages 320?324.
Jennifer Chu-Carroll, David A. Ferrucci, John M.
Prager, and Christopher A. Welty. 2003. Hybridiza-
tion in question answering systems. In New Direc-
tions in Question Answering?03, pages 116?121.
Ido Dagan, Oren Glickman, and Bernardo Magnini.
2006. The pascal recognising textual entailment
challenge. In Machine Learning Challenges. Eval-
uating Predictive Uncertainty, Visual Object Classi-
fication, and Recognising Tectual Entailment, pages
177?190.
Dmitry Davidov and Ari Rappoport. 2010. Extrac-
tion and approximation of numerical attributes from
the web. In Proceedings of the 48th Annual Meet-
ing of the Association for Computational Linguis-
tics, pages 1308?1317.
Marcus Fontoura, Ronny Lempel, Runping Qi, and Ja-
son Zien. 2006. Inverted index support for numeric
search. Internet Mathematics, 3(2):153?185.
Adrian Iftene and Mihai-Alex Moruz. 2010. UAIC
participation at RTE-6. In Proceedings of the Third
Text Analysis Conference (TAC 2010) November.
Douglas B Lenat. 1995. Cyc: A large-scale investment
in knowledge infrastructure. Communications of the
ACM, 38(11):33?38.
Peter LoBue and Alexander. Yates. 2011. Types of
common-sense knowledge needed for recognizing
390
textual entailment. In Proceedings of the 49th An-
nual Meeting of the Association for Computational
Linguistics: Human Language Technologies: short
papers-Volume 2, pages 329?334.
Ve?ronique Moriceau. 2006. Generating intelligent
numerical answers in a question-answering system.
In Proceedings of the Fourth International Natural
Language Generation Conference, INLG ?06, pages
103?110.
Michitaka Odani, Tomohide Shibata, Sadao Kurohashi,
and Takayuki Nakata. 2008. Building data of
japanese text entailment and recognition of infer-
encing relation based on automatic achieved similar
expression. In Proceeding of 14th Annual Meeting
of the Association for ?atural Language Processing,
pages 1140?1143.
John M. Prager, Jennifer Chu-Carroll, Krzysztof
Czuba, Christopher A. Welty, Abraham Ittycheriah,
and Ruchi Mahindru. 2003. IBM?s PIQUANT in
TREC2003. In TREC, pages 283?292.
Mark Sammons, Vinod V.G. Vydiswaran, and Dan
Roth. 2010. Ask not what textual entailment can do
for you... In Proceedings of the 48th Annual Meet-
ing of the Association for Computational Linguis-
tics, pages 1199?1208.
Hideki Shima, Hiroshi Kanayama, Cheng-Wei Lee,
Chuan-Jie Lin, Teruko Mitamura, Yusuke Miyao,
Shuming Shi, and Koichi Takeda. 2011. Overview
of ntcir-9 rite: Recognizing inference in text. In Pro-
ceeding of NTCIR-9 Workshop Meeting, pages 291?
301.
Keiji Shinzato, Tomohide Shibata, Daisuke Kawahara,
and Sadao Kurohashi. 2012. Tsubaki: An open
search engine infrastructure for developing informa-
tion access methodology. Journal of Information
Processing, 20(1):216?227.
Assaf Toledo, Sophia Katrenko, Stavroula Alexan-
dropoulou, Heidi Klockmann, Asher Stern, Ido Da-
gan, and Yoad Winter. 2012. Semantic annotation
for textual entailment recognition. In Proceedings of
the 11th Mexican International Conference on Arti-
ficial Intelligence, MICAI ?12.
Yuta Tsuboi, Hiroshi Kanayama, Masaki Ohno, and
Yuya Unno. 2011. Syntactic difference based ap-
proach for ntcir-9 rite task. In Proceedings of the
9th NTCIR Workshop, pages 404?411.
Minoru Yoshida, Issei Sato, Hiroshi Nakagawa, and
Akira Terada. 2010. Mining numbers in text using
suffix arrays and clustering based on dirichlet pro-
cess mixture models. Advances in Knowledge Dis-
covery and Data Mining, pages 230?237.
391
Proceedings of the Second Workshop on NLP Challenges in the Information Explosion Era (NLPIX 2010), pages 21?30,
Beijing, August 2010
Automatic Classification of Semantic Relations
between Facts and Opinions
Koji Murakami? Eric Nichols? Junta Mizuno?? Yotaro Watanabe?
Hayato Goto? Megumi Ohki? Suguru Matsuyoshi? Kentaro Inui? Yuji Matsumoto?
?Nara Institute of Science and Technology
?Tohoku University
{kmurakami,matuyosi,hayato-g,megumi-o,matsu}@is.naist.jp
{eric-n,junta-m,inui}@ecei.tohoku.ac.jp
Abstract
Classifying and identifying semantic re-
lations between facts and opinions on
the Web is of utmost importance for or-
ganizing information on the Web, how-
ever, this requires consideration of a
broader set of semantic relations than are
typically handled in Recognizing Tex-
tual Entailment (RTE), Cross-document
Structure Theory (CST), and similar
tasks. In this paper, we describe the con-
struction and evaluation of a system that
identifies and classifies semantic rela-
tions in Internet data. Our system targets
a set of semantic relations that have been
inspired by CST but that have been gen-
eralized and broadened to facilitate ap-
plication to mixed fact and opinion data
from the Internet. Our system identi-
fies these semantic relations in Japanese
Web texts using a combination of lexical,
syntactic, and semantic information and
evaluate our system against gold stan-
dard data that was manually constructed
for this task. We will release all gold
standard data used in training and eval-
uation of our system this summer.
1 Introduction
The task of organizing the information on the In-
ternet to help users find facts and opinions on
their topics of interest is increasingly important
as more people turn to the Web as a source of
important information. The vast amounts of re-
search conducted in NLP on automatic summa-
rization, opinion mining, and question answer-
ing are illustrative of the great interest in mak-
ing relevant information easier to find. Provid-
ing Internet users with thorough information re-
quires recognizing semantic relations between
both facts and opinions, however the assump-
tions made by current approaches are often in-
compatible with this goal. For example, the
existing semantic relations considered in Rec-
ognizing Textual Entailment (RTE) (Dagan et
al., 2005) are often too narrow in scope to be
directly applicable to text on the Internet, and
theories like Cross-document Structure Theory
(CST) (Radev, 2000) are only applicable to facts
or second-hand reporting of opinions rather than
relations between both.
As part of the STATEMENT MAP project we
proposed the development of a system to sup-
port information credibility analysis on the Web
(Murakami et al, 2009b) by automatically sum-
marizing facts and opinions on topics of inter-
est to users and showing them the evidence and
conflicts for each viewpoint. To facilitate the de-
tection of semantic relations in Internet data, we
defined a sentence-like unit of information called
the statement that encompasses both facts and
opinions, started compiling a corpus of state-
ments annotated with semantic relations (Mu-
rakami et al, 2009a), and begin constructing a
system to automatically identify semantic rela-
tions between statements.
In this paper, we describe the construction and
evaluation of a prototype semantic relation iden-
tification system. We build on the semantic rela-
tions proposed in RTE and CST and in our pre-
vious work, refining them into a streamlined set
of semantic relations that apply across facts and
opinions, but that are simple enough to make
automatic recognition of semantic relations be-
tween statements in Internet text possible.Our
semantic relations are [AGREEMENT], [CON-
FLICT], [CONFINEMENT], and [EVIDENCE].
[AGREEMENT] and [CONFLICT] are expansions
of the [EQUIVALENCE] and [CONTRADICTION]
21
relations used in RTE. [CONFINEMENT] and
[EVIDENCE] are new relations between facts
and opinions that are essential for understanding
how statements on a topic are inter-related.
Our task differs from opinion mining and sen-
timent analysis which largely focus on identify-
ing the polarity of an opinion for defined param-
eters rather than identify how facts and opinions
relate to each other, and it differs from web doc-
ument summarization tasks which focus on ex-
tracting information fromweb page structure and
contextual information from hyperlinks rather
than analyzing the semantics of the language on
the webpage itself.
We present a system that automatically iden-
tifies semantic relations between statements in
Japanese Internet texts. Our system uses struc-
tural alignment to identify statement pairs that
are likely to be related, then classifies seman-
tic relations using a combination of lexical, syn-
tactic, and semantic information. We evaluate
cross-statement semantic relation classification
on sentence pairs that were taken from Japanese
Internet texts on several topics and manually an-
notated with a semantic relation where one is
present. In our evaluation, we look closely at the
impact that each of the resources has on semantic
relation classification quality.
The rest of this paper is organized as follows.
In Section 2, we discuss related work in summa-
rization, semantic relation classification, opinion
mining, and sentiment analysis, showing how
existing classification schemes are insufficient
for our task. In Section 3, we introduce a set of
cross-sentential semantic relations for use in the
opinion classification needed to support informa-
tion credibility analysis on the Web. In Section
4, we present our cross-sentential semantic re-
lation recognition system, and discuss the algo-
rithms and resources that are employed. In Sec-
tion 5, we evaluate our system in a semantic rela-
tion classification task. In Section 6, we discuss
our findings and conduct error analysis. Finally,
we conclude the paper in Section 7.
2 Related Work
2.1 Recognizing Textual Entailment
Identifying logical relations between texts is the
focus of Recognizing Textual Entailment, the
task of deciding whether the meaning of one
text is entailed from another text. A major
task in the RTE Challenge (Recognizing Tex-
tual Entailment Challenge) is classifying the se-
mantic relation between a Text (T) and a Hy-
pothesis (H) into [ENTAILMENT], [CONTRA-
DICTION], or [UNKNOWN]. Over the last sev-
eral years, several corpora annotated with thou-
sands of (T,H) pairs have been constructed for
this task. In these corpora, each pair was tagged
indicating its related task (e.g. Information Ex-
traction, Question Answering, Information Re-
trieval or Summarization).
The RTE Challenge has successfully em-
ployed a variety of techniques in order to rec-
ognize instances of textual entailment, including
methods based on: measuring the degree of lex-
ical overlap between bag of words (Glickman
et al, 2005; Jijkoun and de Rijke, 2005), the
alignment of graphs created from syntactic or se-
mantic dependencies (Marsi and Krahmer, 2005;
MacCartney et al, 2006), statistical classifiers
which leverage a wide range of features (Hickl
et al, 2005), or reference rule generation (Szpek-
tor et al, 2007). These approaches have shown
great promise in RTE for entailment pairs in the
corpus, but more robust models of recognizing
logical relations are still desirable.
The definition of contradiction in RTE is that
T contradicts H if it is very unlikely that both T
and H can be true at the same time. However, in
real documents on the Web, there are many pairs
of examples which are contradictory in part, or
where one statement confines the applicability of
another, as shown in the examples in Table 1.
2.2 Cross-document Structure Theory
Cross-document Structure Theory (CST), devel-
oped by Radev (2000), is another task of rec-
ognizing semantic relations between sentences.
CST is an expanded rhetorical structure analy-
sis based on Rhetorical Structure Theory (RST:
(William and Thompson, 1988)), and attempts
to describe the semantic relations that exist
between two or more sentences from differ-
ent source documents that are related to the
same topic, as well as those that come from
a single source document. A corpus of cross-
document sentences annotated with CST rela-
tions has also been constructed (The CSTBank
Corpus: (Radev et al, 2003)). CSTBank is
organized into clusters of topically-related ar-
ticles. There are 18 kinds of semantic rela-
tions in this corpus, not limited to [EQUIVA-
LENCE] or [CONTRADICTION], but also includ-
ing [JUDGEMENT], [ELABORATION], and [RE-
22
Query Matching sentences Output
??????????????
???
?????????????????????????????????? ??
The cavity-prevention effects are greater the more Xylitol is included. [AGREEMENT].
????????????????????????????? ??
Xylitol is effective at preventing
cavities.
Xylitol shows effectiveness at maintaining good oral hygiene and preventing cavities. [AGREEMENT]
???????????????????????????????????
?????????????
??
There are many opinions about the cavity-prevention effectiveness of Xylitol, but it
is not really effective.
[CONFLICT]
?????????
???????????????????????????????? ??
Reduced water, which has weak alkaline ions, supports the health of you and your
family.
[AGREEMENT]
?????????????????????????????????? ??
Reduced water is good for the
health.
Reduced water is said to remove active oxygen from the body, making it effective at
promoting good health.
[AGREEMENT]
??????????????????????? ??
Even if oxidized water tastes good, it does not help one?s health. [CONFLICT]
??????????????
???
???????????????????????????????????
?????????
??
Isoflavone is effective at
maintaining good health.
Taking too much soy isoflavone as a supplement will have a negative effect on one?s
health
[CONFINEMENT]
Table 1: Example semantic relation classification.
FINEMENT]. Etoh et al (Etoh and Okumura,
2005) constructed a Japanese Cross-document
Relation Corpus, and they redefined 14 kinds of
semantic relations in their corpus.
CST was designed for objective expressions
because its target data is newspaper articles re-
lated to the same topic. Facts, which can be ex-
tracted from newspaper articles, have been used
in conventional NLP research, such as Informa-
tion Extraction or Factoid Question Answering.
However, there are a lot of opinions on the Web,
and it is important to survey opinions in addition
to facts to give Internet users a comprehensive
view of the discussions on topics of interest.
2.3 Cross-document Summarization Based
on CST Relations between Sentences
Zhang and Radev (2004) attempted to classify
CST relations between sentence pairs extracted
from topically related documents. However, they
used a vector space model and tried multi-class
classification. The results were not satisfactory.
This observation may indicate that the recog-
nition methods for each relation should be de-
veloped separately. Miyabe et al (2008) at-
tempted to recognize relations that were defined
in a Japanese cross-document relation corpus
(Etoh and Okumura, 2005). However, their tar-
get relations were limited to [EQUIVALENCE]
and [TRANSITION]; other relations were not tar-
geted. Recognizing [EVIDENCE] is indispens-
able for organizing information on the Internet.
We need to develop satisfactory methods of [EV-
IDENCE] recognition.
2.4 Opinion Mining and Sentiment Analysis
Subjective statements, such as opinions, have
recently been the focus of much NLP re-
search including review analysis, opinion ex-
traction, opinion question answering, and senti-
ment analysis. In the corpus constructed in the
Multi-Perspective Question Answering (MPQA)
Project (Wiebe et al, 2005), individual expres-
sions are tagged that correspond to explicit men-
tions of private states, speech event, and expres-
sive subjective elements.
The goal of opinion mining to extract expres-
sions with polarity from texts, not to recognize
semantic relations between sentences. Sentiment
analysis also focus classifying subjective expres-
sions in texts into positive/negative classes. In
comparison, although we deal with sentiment in-
formation in text, our objective is to recognize
semantic relations between sentences. If a user?s
query requires positive/negative information, we
will also need to extract sentences including sen-
timent expression like in opinion mining, how-
ever, our semantic relation, [CONFINEMENT], is
more precise because it identifies the condition
or scope of the polarity. Queries do not neces-
sarily include sentiment information; we also ac-
cept queries that are intended to be a statement
of fact. For example, for the query ?Xylitol is
effective at preventing cavities.? in Table 1, we
extract a variety of sentences from the Web and
recognize semantic relations between the query
and many kinds of sentences.
23
3 Semantic Relations between
Statements
In this section, we define the semantic relations
that we will classify in Japanese Internet texts as
well as their corresponding relations in RTE and
CST. Our goal is to define semantic relations that
are applicable over both fact and opinions, mak-
ing them more appropriate for handling Internet
texts. See Table 1 for real examples.
3.1 [AGREEMENT]
A bi-directional relation where statements have
equivalent semantic content on a shared topic.
Here we use topic in a narrow sense to mean that
the semantic contents of both statements are rel-
evant to each other.
The following is an example of [AGREE-
MENT] on the topic of bio-ethanol environmental
impact.
(1) a. Bio-ethanol is good for the environment.
b. Bio-ethanol is a high-quality fuel, and it
has the power to deal with the environ-
ment problems that we are facing.
Once relevance has been established,
[AGREEMENT] can range from strict logi-
cal entailment or identical polarity of opinions.
Here is an example of two statements that
share a broad topic, but that are not classified as
[AGREEMENT] because preventing cavities and
tooth calcification are not intuitively relevant.
(2) a. Xylitol is effective at preventing cavities.
b. Xylitol advances tooth calcification.
3.2 [CONFLICT]
A bi-directional relation where statements have
negative or contradicting semantic content on a
shared topic. This can range from strict logical
contradiction to opposite polarity of opinions.
The next pair is a [CONFLICT] example.
(3) a. Bio-ethanol is good for our earth.
b. There is a fact that bio-ethanol further the
destruction of the environment.
3.3 [EVIDENCE]
A uni-directional relation where one statement
provides justification or supporting evidence for
the other. Both statements can be either facts or
opinions. The following is a typical example:
(4) a. I believe that applying the technology of
cloning must be controlled by law.
b. There is a need to regulate cloning, be-
cause it can be open to abuse.
The statement containing the evidence con-
sists of two parts: one part has a [AGREEMENT]
or [CONFLICT] with the other statement, the
other part provides support or justification for it.
3.4 [CONFINEMENT]
A uni-directional relation where one statement
provides more specific information about the
other or quantifies the situations in which it ap-
plies. The pair below is an example, in which
one statement gives a condition under which the
other can be true.
(5) a. Steroids have side-effects.
b. There is almost no need to worry about
side-effects when steroids are used for lo-
cal treatment.
4 Recognizing Semantic Relations
In order to organize the information on the
Internet, we need to identify the [AGREE-
MENT], [CONFLICT], [CONFINEMENT], and
[EVIDENCE] semantic relations. Because iden-
tification of [AGREEMENT] and [CONFLICT] is
a problem of measuring semantic similarity be-
tween two statements, it can be cast as a sen-
tence alignment problem and solved using an
RTE framework. The two sentences do not need
to be from the same source.
However, the identification of [CONFINE-
MENT] and [EVIDENCE] relations depend on
contextual information in the sentence. For ex-
ample, conditional statements or specific dis-
course markers like ?because? act as important
cues for their identification. Thus, to identify
these two relations across documents, we must
first identify [AGREEMENT] or [CONFLICT] be-
tween sentences in different documents and then
determine if there is a [CONFINEMENT] or [EV-
IDENCE] relation in one of the documents.
Furthermore, the surrounding text often con-
tains contextual information that is important for
identifying these two relations. Proper handling
of surrounding context requires discourse analy-
sis and is an area of future work, but our basic
detection strategy is as follows:
1. Identify a [AGREEMENT] or [CONFLICT] re-
lation between the Query and Text
2. Search the Text sentence for cues that iden-
tify [CONFINEMENT] or [EVIDENCE]
24
3. Infer the applicability of the [CONFINE-
MENT] or [EVIDENCE] relations in the Text
to the Query
4.1 System Overview
We have finished constructing a prototype sys-
tem that detects semantic relation between state-
ments. It has a three-stage architecture similar to
the RTE system of MacCartney et al (2006):
1. Linguistic analysis
2. Structural alignment
3. Feature extraction for detecting [EVIDENCE]
and [CONFINEMENT]
4. Semantic relation classification
However, we differ in the following respects.
First, our relation classification is broader than
RTE?s simple distinction between [ENTAIL-
MENT], [CONTRADICTION], and [UNKNOWN];
in place of [ENTAILMENT] and [CONTRA-
DICTION, we use broader [AGREEMENT] and
[CONFLICT] relations. We also consider cover
gradations of applicability of statements with the
[CONFINEMENT] relation.
Second, we conduct structural alignment with
the goal of aligning semantic structures. We do
this by directly incorporating dependency align-
ments and predicate-argument structure informa-
tion for both the user query and the Web text
into the alignment scoring process. This allows
us to effectively capture many long-distance
alignments that cannot be represented as lexical
alignments. This contrasts with MacCartney et
al. (2006), who uses dependency structures for
the Hypothesis to reduce the lexical alignment
search space but do not produce structural align-
ments and do not use the dependencies in detect-
ing entailment.
Finally, we apply several rich semantic re-
sources in alignment and classification: extended
modality information that helps align and clas-
sify structures that are semantically similar but
divergent in tense or polarity; and lexical simi-
larity through ontologies like WordNet.
4.2 Linguistic Analysis
In order to identify semantic relations between
the user query (Q) and the sentence extracted
from Web text (T), we first conduct syntactic and
semantic linguistic analysis to provide a basis for
alignment and relation classification.
For syntactic analysis, we use the Japanese
dependency parser CaboCha (Kudo and Mat-
!"#$%&'!"#$!%&'()*'+$! ()*!,'-!.-'/'0+1!#$)23#!+,-!$4$50*$!./!%&!6! 7!!"#$%&'!"#$!%&'()*'+$!01234!'&3$'.'-'&%&!
567!*)-%'8&!
897:;!&85#!)&!9!3-$)3/$+3!
<=>?@A/!#)&!:$$+!&#';+!
()BC-! B! C!?!
)!
5!:!J!3'!#)*$!!#$)23#!)..2%5)0'+&!
C!J!
J!
B!
B!C!
Figure 1: An example of structural alignment
sumoto, 2002) and the predicate-argument struc-
ture analyzer ChaPAS (Watanabe et al, 2010).
CaboCha splits the Japanese text into phrase-like
chunks and represents syntactic dependencies
between the chunks as edges in a graph. Cha-
PAS identifies predicate-argument structures in
the dependency graph produced by CaboCha.
We also conduct extended modality analysis
using the resources provided by Matsuyoshi et
al. (2010), focusing on tense, modality, and po-
larity, because such information provides impor-
tant clues for the recognition of semantic rela-
tions between statements.
4.3 Structural Alignment
In this section, we describe our approach to
structural alignment. The structural alignment
process is shown in Figure 1. It consists of the
following two phases:
1. lexical alignment
2. structural alignment
We developed a heuristic-based algorithm to
align chunk based on lexical similarity infor-
mation. We incorporate the following informa-
tion into an alignment confidence score that has
a range of 0.0-1.0 and align chunk whose scores
cross an empirically-determined threshold.
? surface level similarity: identical content
words or cosine similarity of chunk contents
? semantic similarity of predicate-argument
structures
predicates we check for matches in predi-
cate entailment databases (Hashimoto et
al., 2009; Matsuyoshi et al, 2008) consid-
ering the default case frames reported by
ChaPAS
arguments we check for synonym or hy-
pernym matches in the Japanese WordNet
(2008) or the Japanese hypernym collec-
tion of Sumida et al (2008)
25
>?@???????????????????AB?C????DEF)!
>?'???????????????????AB?C????GHF)!I!
T :!
H :!
(field) (in)!(agricultural chemicals) (ACC)! (use)!
(field) (on)!(agricultural chemicals) (ACC)! (spray)!
Figure 2: Determining the compatibility of se-
mantic structures
We compare the predicate-argument structure
of the query to that of the text and determine
if the argument structures are compatible. This
process is illustrated in Figure 2 where the T(ext)
?Agricultural chemicals are used in the field.? is
aligned with the H(ypothesis) ?Over the field,
agricultural chemicals are sprayed.? Although
the verbs used and sprayed are not directly se-
mantically related, they are aligned because they
share the same argument structures. This lets up
align predicates for which we lack semantic re-
sources. We use the following information to de-
termine predicate-argument alignment:
? the number of aligned children
? the number of aligned case frame arguments
? the number of possible alignments in a win-
dow of n chunk
? predicates indicating existence or quantity.
E.g. many, few, to exist, etc.
? polarity of both parent and child chunks us-
ing the resources in (Higashiyama et al,
2008; Kobayashi et al, 2005)
We treat structural alignment as a machine
learning problem and train a Support Vector Ma-
chine (SVM) model to decide if lexically aligned
chunks are semantically aligned.
We train on gold-standard labeled alignment
of 370 sentence pairs. This data set is described
in more detail in Section 5.1. As features for our
SVM model, we use the following information:
? the distance in edges in the dependency graph
between parent and child for both sentences
? the distance in chunks between parent and
child in both sentences
? binary features indicating whether each
chunk is a predicate or argument according
to ChaPAS
? the parts-of-speech of first and last word in
each chunk
? when the chunk ends with a case marker, the
case of the chunk , otherwise none
? the lexical alignment score of each chunk
pair
4.4 Feature Extraction for Detecting
Evidence and Confinement
Once the structural alignment system has iden-
tified potential [AGREEMENT] or [CONFLICT]
relations, we need to extract contextual cues in
the Text as features for detecting [CONFINE-
MENT] and [EVIDENCE] relations. Conditional
statements, degree adverbs, and partial negation,
which play a role in limiting the scope or degree
of a query?s contents in the statement, can be im-
portant cues for detecting the these two semantic
relations. We currently use a set of heuristics to
extract a set of expressions to use as features for
classifying these relations using SVM models.
4.5 Relation Classification
Once the structural alignment is successfully
identified, the task of semantic relation classi-
fication is straightforward. We also solve this
problem with machine learning by training an
SVM classifier. As features, we draw on a com-
bination of lexical, syntactic, and semantic infor-
mation including the syntactic alignments from
the previous section. The feature set is:
alignments We define two binary function,
ALIGNword(qi, tm) for the lexical align-
ment and ALIGNstruct((qi, qj), (tm, tk))
for the structural alignment to be true if and
only if the node qi, qj ? Q has been seman-
tically and structurally aligned to the node
tm, tk ? T . Q and T are the (Q)uery and the
(T)ext, respectively. We also use a separate
feature for a score representing the likelihood
of the alignment.
modality We have a feature that encodes all of
the possible polarities of a predicate node
from modality analysis, which indicates the
utterance type, and can be assertive, voli-
tional, wish, imperative, permissive, or in-
terrogative. Modalities that do not repre-
sent opinions (i.e. imperative, permissive and
interrogative) often indicate [OTHER] rela-
tions.
antonym We define a binary function
ANTONYM(qi, tm) that indicates if
the pair is identified as an antonym. This
information helps identify [CONFLICT].
26
Relation Measure 3-class Cascaded 3-class ?
[AGREEMENT] precision 0.79 (128 / 162) 0.80 (126 / 157) +0.01
[AGREEMENT] recall 0.86 (128 / 149) 0.85 (126 / 149) -0.01
[AGREEMENT] f-score 0.82 0.82 -
[CONFLICT] precision 0 (0 / 5) 0.36 (5 / 14) +0.36
[CONFLICT] recall 0 (0 / 12) 0.42 (5 / 12) +0.42
[CONFLICT] f-score 0 0.38 +0.38
[CONFINEMENT] precision 0.4 (4 / 10) 0.8 (4 / 5) +0.4
[CONFINEMENT] recall 0.17 (4 / 23) 0.17 (4 / 23) -
[CONFINEMENT] f-score 0.24 0.29 +0.05
Table 2: Semantic relation classification results comparing 3-class and cascaded 3-class approaches
negation To identify negations, we primar-
ily rely on a predicate?s Actuality value,
which represents epistemic modality and
existential negation. If a predicate pair
ALIGNword(qi, tm) has mismatching actu-
ality labels, the pair is likely a [OTHER].
contextual cues This set of features is used to
mark the presence of any contextual cues
that identify of [CONFINEMENT] or [EVI-
DENCE] relations in a chunk . For example,
??? (because)? or ??? (due to)? are typ-
ical contextual cues for [EVIDENCE], and ?
?? (when)? or ???? (if)? are typical for
[CONFINEMENT].
5 Evaluation
5.1 Data Preparation
In order to evaluate our semantic relation clas-
sification system on realistic Web data, we con-
structed a corpus of sentence pairs gathered from
a vast collection of webpages (2009a). Our basic
approach is as follows:
1. Retrieve documents related to a set number
of topics using the Tsubaki1 search engine
2. Extract real sentences that include major sub-
topic words which are detected based on
TF/IDF in the document set
3. Reduce noise in data by using heuristics to
eliminate advertisements and comment spam
4. Reduce the search space for identifying sen-
tence pairs and prepare pairs, which look fea-
sible to annotate
5. Annotate corresponding sentences with
[AGREEMENT], [CONFLICT], [CONFINE-
MENT], or [OTHER]
1http://tsubaki.ixnlp.nii.ac.jp/
Although our target semantic relations in-
clude [EVIDENCE], they difficult annotate con-
sistently, so we do not annotate them at this
time. Expanding our corpus and semantic re-
lation classifier to handle [EVIDENCE] remains
and area of future work.
The data that composes our corpus comes
from a diverse number of sources. A hand sur-
vey of a random sample of the types of domains
of 100 document URLs is given below. Half of
the URL domains were not readily identifiable,
but the known URL domains included govern-
mental, corporate, and personal webpages. We
believe this distribution is representative of in-
formation sources on the Internet.
type count
academic 2
blogs 23
corporate 10
governmental 4
news 5
press releases 4
q&a site 1
reference 1
other 50
We have made a partial release of our corpus
of sentence pairs manually annotated with the
correct semantic relations2. We will fully release
all the data annotated semantic relations and with
gold standard alignments at a future date.
5.2 Experiment Settings
In this section, we present results of empiri-
cal evaluation of our proposed semantic rela-
tion classification system on the dataset we con-
structed in the previous section. For this experi-
ment, we use SVMs as described in Section 4.5
2http://stmap.naist.jp/corpus/ja/
index.html (in Japanese)
27
to classify semantic relations into one of the four
classes: [AGREEMENT], [CONFLICT], [CON-
FINEMENT], or [OTHER] in the case of no re-
lation. As data we use 370 sentence pairs that
have been manually annotated both with the cor-
rect semantic relation and with gold standard
alignments. Annotations are checked by two na-
tive speakers of Japanese, and any sentence pair
where annotation agreement is not reached is
discarded. Because we have limited data that is
annotated with correct alignments and semantic
relations, we perform five-fold cross validation,
training both the structural aligner and semantic
relation classifier on 296 sentence pairs and eval-
uating on the held out 74 sentence pairs. The
figures presented in the next section are for the
combined results on all 370 sentence pairs.
5.3 Results
We compare two different approaches to classi-
fication using SVMs:
3-class semantic relations are directly classified
into one of [AGREEMENT], [CONFLICT],
and [CONFINEMENT] with all features de-
scribed in 4.5
cascaded 3-class semantic relations are first
classified into one of [AGREEMENT], [CON-
FLICT] without contextual cue features. Then
an additional judgement with all features de-
termines if [AGREEMENT] and [CONFLICT]
should be reclassified as [CONFINEMENT]
Initial results using the 3-class classifica-
tion model produced high f-scores for [AGREE-
MENT] but unfavorable results for [CONFLICT]
and [CONFINEMENT]. We significantly im-
proved classification of [CONFLICT] and [CON-
FINEMENT] by adopting the cascaded 3-class
model. We present these results in Table 2 and
successfully recognized examples in Table 1.
6 Discussion and Error Analysis
We constructed a prototype semantic relation
classification system by combining the compo-
nents described in the previous section. While
the system developed is not domain-specific and
capable of accepting queries on any topic, we
evaluate its semantic relation classification on
several queries that are representative of our
training data.
Figure 3 shows a snapshot of the semantic re-
lation classification system and the various se-
mantic relations it recognized for the query.
Baseline Structural Upper-boundAlignment
Precision 0.44 0.52 0.74(56/126) (96/186) (135/183)
Recall 0.30 0.52 0.73(56/184) (96/184) (135/184)
F1-score 0.36 0.52 0.74
Table 3: Comparison of lexical, structural, and
upper-bound alignments on semantic relation
classification
In the example (6), recognized as [CONFINE-
MENT] in Figure 3, our system correctly identi-
fied negation and analyzed the description ?Xyl-
itol alone can not completely? as playing a role
of requirement.
(6) a. ?????????????????
(Xylitol is effective at preventing cavi-
ties.)
b. ?????????????????
????
(Xylitol alone can not completely prevent
cavities.)
Our system correctly identifies [AGREE-
MENT] relations in other examples about re-
duced water from Table 1 by structurally align-
ing phrases like ?promoting good health? and
?supports the health? to ?good for the health.?
These examples show how resources like
(Matsuyoshi et al, 2010) and WordNet (Bond et
al., 2008) have contributed to the relation clas-
sification improvement of structural alignment
over them baseline in Table 3. Focusing on sim-
ilarity of syntactic and semantic structures gives
our alignment method greater flexibility.
However, there are still various examples
which the system cannot recognized correctly.
In examples on cavity prevention, the phrase
?effective at preventing cavities? could not be
aligned with ?can prevent cavities? or ?good for
cavity prevention,? nor can ?cavity prevention?
and ?cavity-causing bacteria control.?
The above examples illustrate the importance
of the role played by the alignment phase in the
whole system?s performance.
Table 3 compares the semantic relation classi-
fication performance of using lexical alignment
only (as the baseline), lexical alignment and
structural alignment, and, to calculate the maxi-
mum possible precision, classification using cor-
rect alignment data (the upper-bound). We can
28
Figure 3: Alignment and classification example for the query ?Xylitol is effective at preventing
cavities.?
see that structural alignment makes it possible to
align more words than lexical alignment alone,
leading to an improvement in semantic relation
classification. However, there is still a large gap
between the performance of structural alignment
and the maximum possible precision. Error anal-
ysis shows that a big cause of incorrect classifi-
cation is incorrect lexical alignment. Improving
lexical alignment is a serious problem that must
be addressed. This entails expanding our cur-
rent lexical resources and finding more effective
methods of apply them in alignment.
The most serious problem we currently face is
the feature engineering necessary to find the op-
timal way of applying structural alignments or
other semantic information to semantic relation
classification. We need to conduct a quantita-
tive evaluation of our current classification mod-
els and find ways to improve them.
7 Conclusion
Classifying and identifying semantic relations
between facts and opinions on the Web is of ut-
most importance to organizing information on
the Web, however, this requires consideration of
a broader set of semantic relations than are typi-
cally handled in RTE, CST, and similar tasks. In
this paper, we introduced a set of cross-sentential
semantic relations specifically designed for this
task that apply over both facts and opinions. We
presented a system that identifies these semantic
relations in Japanese Web texts using a combina-
tion of lexical, syntactic, and semantic informa-
tion and evaluated our system against data that
was manually constructed for this task. Prelimi-
nary evaluation showed that we are able to detect
[AGREEMENT] with high levels of confidence.
Our method also shows promise in [CONFLICT]
and [CONFINEMENT] detection. We also dis-
cussed some of the technical issues that need to
be solved in order to identify [CONFLICT] and
[CONFINEMENT].
Acknowledgments
This work is supported by the National Institute
of Information and Communications Technology
Japan.
References
Bond, Francis, Hitoshi Isahara, Kyoko Kanzaki, and
Kiyotaka Uchimoto. 2008. Boot-strapping a
wordnet using multiple existing wordnets. In Proc.
of the 6th International Language Resources and
Evaluation (LREC?08).
Dagan, Ido, Oren Glickman, and Bernardo Magnini.
2005. The pascal recognising textual entailment
challenge. In Proc. of the PASCAL Challenges
Workshop on Recognising Textual Entailment.
Etoh, Junji and Manabu Okumura. 2005. Cross-
document relationship between sentences corpus.
29
In Proc. of the 14th Annual Meeting of the Associa-
tion for Natural Language Processing, pages 482?
485. (in Japanese).
Glickman, Oren, Ido Dagan, and Moshe Koppel.
2005. Web based textual entailment. In Proc. of
the First PASCAL Recognizing Textual Entailment
Workshop.
Hashimoto, Chikara, Kentaro Torisawa, Kow
Kuroda, Masaki Murata, and Jun?ichi Kazama.
2009. Large-scale verb entailment acquisition
from the web. In Conference on Empiri-
cal Methods in Natural Language Processing
(EMNLP2009), pages 1172?1181.
Hickl, Andrew, John Williams, Jeremy Bensley, Kirk
Roberts, Bryan Rink, and Ying Shi. 2005. Recog-
nizing textual entailment with lcc?s groundhog sys-
tem. In Proc. of the Second PASCAL Challenges
Workshop.
Higashiyama, Masahiko, Kentaro Inui, and Yuji Mat-
sumoto. 2008. Acquiring noun polarity knowl-
edge using selectional preferences. In Proc. of the
14th Annual Meeting of the Association for Natu-
ral Language Processing.
Jijkoun, Valentin and Maarten de Rijke. 2005. Rec-
ognizing textual entailment using lexical similar-
ity. In Proc. of the First PASCAL Challenges Work-
shop.
Kobayashi, Nozomi, Kentaro Inui, Yuji Matsumoto,
Kenji Tateishi, and Toshikazu Fukushima. 2005.
Collecting evaluative expressions for opinion ex-
traction. Journal of natural language processing,
12(3):203?222.
Kudo, Taku and Yuji Matsumoto. 2002. Japanese
dependency analysis using cascaded chunking. In
Proc of CoNLL 2002, pages 63?69.
MacCartney, Bill, Trond Grenager, Marie-Catherine
de Marneffe, Daniel Cer, and Christopher D.
Manning. 2006. Learning to recognize fea-
tures of valid textual entailments. In Proc. of
HLT/NAACL 2006.
Marsi, Erwin and Emiel Krahmer. 2005. Classifi-
cation of semantic relations by humans and ma-
chines. In Proc. of ACL-05 Workshop on Empiri-
cal Modeling of Semantic Equivalence and Entail-
ment, pages 1?6.
Matsuyoshi, Suguru, Koji Murakami, Yuji Mat-
sumoto, and Kentaro Inui. 2008. A database of re-
lations between predicate argument structures for
recognizing textual entailment and contradiction.
In Proc. of the Second International Symposium
on Universal Communication, pages 366?373, De-
cember.
Matsuyoshi, Suguru, Megumi Eguchi, Chitose Sao,
Koji Murakami, Kentaro Inui, and Yuji Mat-
sumoto. 2010. Annotating event mentions in text
with modality, focus, and source information. In
Proc. of the 7th International Language Resources
and Evaluation (LREC?10), pages 1456?1463.
Miyabe, Yasunari, Hiroya Takamura, and Manabu
Okumura. 2008. Identifying cross-document re-
lations between sentences. In Proc. of the 3rd In-
ternational Joint Conference on Natural Language
Processing (IJCNLP-08), pages 141?148.
Murakami, Koji, Shouko Masuda, Suguru Mat-
suyoshi, Eric Nichols, Kentaro Inui, and Yuji Mat-
sumoto. 2009a. Annotating semantic relations
combining facts and opinions. In Proceedings of
the Third Linguistic Annotation Workshop, pages
150?153, Suntec, Singapore, August. Association
for Computational Linguistics.
Murakami, Koji, Eric Nichols, Suguru Matsuyoshi,
Asuka Sumida, Shouko Masuda, Kentaro Inui, and
Yuji Matsumoto. 2009b. Statement map: Assist-
ing information credibility analysis by visualizing
arguments. In Proc. of the 3rd ACM Workshop
on Information Credibility on the Web (WICOW
2009), pages 43?50.
Radev, Dragomir, Jahna Otterbacher,
and Zhu Zhang. 2003. CSTBank:
Cross-document Structure Theory Bank.
http://tangra.si.umich.edu/clair/CSTBank.
Radev, Dragomir R. 2000. Common theory of infor-
mation fusion from multiple text sources step one:
Cross-document structure. In Proc. of the 1st SIG-
dial workshop on Discourse and dialogue, pages
74?83.
Sumida, Asuka, Naoki Yoshinaga, and Kentaro Tori-
sawa. 2008. Boosting precision and recall of hy-
ponymy relation acquisition from hierarchical lay-
outs in wikipedia. In Proc. of the 6th International
Language Resources and Evaluation (LREC?08).
Szpektor, Idan, Eyal Shnarch, and Ido Dagan. 2007.
Instance-based evaluation of entailment rule acqui-
sition. In Proc. of the 45th Annual Meeting of the
Association of Computational Linguistics, pages
456?463.
Watanabe, Yotaro, Masayuki Asahara, and Yuji Mat-
sumoto. 2010. A structured model for joint learn-
ing of argument roles and predicate senses. In Pro-
ceedings of the 48th Annual Meeting of the Associ-
ation of Computational Linguistics (to appear).
Wiebe, Janyce, Theresa Wilson, and Claire Cardie.
2005. Annotating expressions of opinions and
emotions in language. Language Resources and
Evaluation, 39(2-3):165?210.
William, Mann and Sandra Thompson. 1988.
Rhetorical structure theory: towards a functional
theory of text organization. Text, 8(3):243?281.
Zhang, Zhu and Dragomir Radev. 2004. Combin-
ing labeled and unlabeled data for learning cross-
document structural relationships. In Proc. of the
Proceedings of IJC-NLP.
30
Recognizing Confinement in Web Texts
Megumi Ohki?
Suguru Matsuyoshi?
Junta Mizuno?
Kentaro Inui?
Nara Insutitute of Science and Technology?
Eric Nichols?
Koji Murakami??
Shouko Masuda?
Yuji Matsumoto?
Tohoku University?
{megumi-o,shouko,matuyosi,matsu}@is.naist.jp
{eric,junta-m,inui}@tohoku.ac.jp
koji.murakami@mail.rakuten.co.jp
Abstract
In the Recognizing Textual Entailment (RTE) task, sentence pairs are classified into one of three se-
mantic relations: ENTAILMENT, CONTRADICTION or UNKNOWN. While we find some sentence pairs
hold full entailments or contradictions, there are a number of pairs that partially entail or contradict one
another depending on a specific situation. These partial contradiction sentence pairs contain useful infor-
mation for opinion mining and other such tasks, but it is difficult for Internet users to access this knowledge
because current frameworks do not differentiate between full contradictions and partial contradictions. In
this paper, under current approaches to semantic relation recognition, we define a new semantic relation
known as CONFINEMENT in order to recognize this useful information. This information is classified as
either CONTRADICTION or ENTAILMENT. We provide a series of semantic templates to recognize CON-
FINEMENT relations in Web texts, and then implement a system for recognizing CONFINEMENT between
sentence pairs. We show that our proposed system can obtains a F-score of 61% for recognizing CON-
FINEMENT in Japanese-language Web texts, and it outperforms a baseline which does not use a manually
compiled list of lexico-syntactic patterns to instantiate the semantic templates.
1 Introduction
On the Internet, there are various kinds of documents, and they often include conflicting opinions or
differing information on a single topic. Collecting and organizing this diverse information is an important
part of multi-document summarization.
When searching with a particular query on the Internet, we want information that tells us what other
people think about the query: e.g. do they believe it is true or not; what are the necessary conditions
for it to apply. For example, consider the hypothetical search results for the query given in (1). You get
opinion (2a), which supports the query, and opinion (2b) which opposes it.
(1) Xylitol is effective at preventing tooth decay.
(2) a. Xylitol can prevent tooth decay.
b. Xylitol is not effective at all at preventing tooth decay.
A major task in the Recognizing Textual Entailment (RTE) Challenge (Giampiccolo et al (2007)) is
classifying the semantic relation between a Text and a Hypothesis into ENTAILMENT, CONTRADICTION,
or UNKNOWN. Murakami et al (2009) report on the STATEMENT MAP project, the goal of which is
to help Internet users evaluate the credibility of information sources by analyzing supporting evidence
from a variety of viewpoints on their topics of interest and presenting them to users together with the
supporting evidence in a way that makes it clear how they are related. A variety of techniques have been
successfully employed in the RTE Challenge in order to recognize instances of textual entailment.
?Current afflication: Rakuten Institute of Technology
215
However, as far as we know, there have been no studies on recognizing sentences which specify condi-
tions under which a query applies, despite the fact that these relations are useful information for Internet
users. Such useful sentences are plentiful on the Web. Consider the following examples of CONTRA-
DICTION and ENTAILMENT.
(3) a. Xylitol can not prevent tooth decay if it not at least 50%.
b. The effect of Xylitol on preventing tooth decay is limited.
In example (3a), the necessary condition to prevent tooth decay by Xylitol is ?it contains at least fifty
percent Xylitol?. That condition is expressed by the phrase in bold in (3a). This sentence informs users
that if they want to prevent tooth decay, the products they use must contain a certain amount of Xylitol to
be effective. In example (3b), we obtain information on uncertainty of Xylitol?s tooth decay prevention
effectiveness from the phrase ?is limited?. It tells that Xylitol is not necessarily effective at preventing
tooth decay, and thus it is not completely in agreement with or contradiction to the original sentence (1).
It is important to recognize the semantic relation shown in (3) because it provides more specific infor-
mation about the query or specifies the conditions under which the statement holds or does not. This is
valuable information for Internet users and needs to be distinguished from fully contradicting or agreeing
opinions.
We call this semantic relation CONFINEMENT because it confines the situation under which a query
applies. In this paper, we give a language independent definition of the CONFINEMENT relation in pred-
icate logic and provide a framework for detecting the relation through a series of semantic templates that
take logical and semantic features as input. We implement a system that detects CONFINEMENT rela-
tions between sentence pairs in Japanese by instantiating the semantic templates using rules and a list of
lexico-semantic patterns. Finally, we conduct empirical evaluation of recognition of the CONFINEMENT
relation between queries and sentences in Japanese-language Web texts.
2 Related Work
In RTE research, only three types of relations are defined: ENTAILMENT, CONTRADICTION, and
UNKNOWN. RTE is an important task and has been the target of much research (Szpektor et al (2007);
Sammons et al (2009)). However, none of the previous research has introduced relations corresponding
to CONFINEMENT.
Cross-document Structure Theory (CST, Radev (2000)) is another approach to recognizing semantic
relations between sentences. CST is an extended rhetorical structure analysis based on Rhetorical Struc-
ture Theory (RST). It attempts to describe the semantic relations between two or more sentences from
different source documents that are related to the same topic. It defines 18 kinds of semantic relations
between sentences. Etoh and Okumura (2005) constructed a Japanese Cross-document Relation Corpus
and defined 14 kinds of semantic relations. It is difficult to consider CONFINEMENT relations in the
CST categorical semantic relations because it focuses on comparing sentences in terms of equivalence
and difference between sentences. At first glance, CONFINEMENT may seem to be defined in terms of
difference between sentences, but this approach does not capture the idea of restriction on a sentence?s
applicability. Thus, it is beyond the scope of CST.
In the field of linguistics, Nakagawa and Mori (1995) discussed restrictions as represented in the
four Japanese subordinate clause patterns. Abe (1996) researched the role of quantifiers in quantitative
restrictions and the role of ??? (only).? There is much other researches on expressions representing
?confinement? in a sentence in linguistics. These expressions are useful in order to recognize phrases
which contradict each other. However, as far as we know, there is no research on the relation of CON-
FINEMENT between two sentences in the linguistics literature. The absence of related research makes
defining and recognizing CONFINEMENT a very challenging task.
3 The CONFINEMENT Relation
We present the definition of the CONFINEMENT relation and describe its differences from ENTAIL-
MENT and CONTRADICTION. In essence, a pair of sentences is in the CONFINEMENT relation if either
the premise or consequent of the second sentence has a certain condition or restriction, and without such
condition or restriction the pair is equivalent to either ENTAILMENT or CONTRADICTION.
216
Consider an example of CONFINEMENT setence pair: (2a) and (3a). The statement ?it (Xylitol) is not at
least 50%? is a condition of the statement ?Xylitol can not prevent tooth decay.? It is a CONTRADICTION
if the conditional statement is satisfied. Because the truth value of the whole statement depends on
various conditions to be satisfied, it is important to properly define a framework to define them.
3.1 A Logical Definition of CONFINEMENT
We present a definition of CONFINEMENT in predicate logic. We define CONFINEMENT as a semantic
relation between two sentences, where the first sentence corresponds to RTE?s Hypothesis, or the user
Query, and the second sentence corresponds to RTE?s Text that has some semantic relation with the
Query, which we want to identify.
Here we consider sentence pairs where the Query matches the logical pattern ?x(P (x) ? C(x)),
where we call P (x) the Premise and C(x) the Consequence. There are many ways of representing
sentences as logical expressions, and we think that the logical pattern (?(P (x) ? C(x))) can cover a
variety of queries. For example, the sentence ?Xylitol is effective at preventing tooth decay.? can be
represented as ?x(isXylitol(x) ? effectiveAtPreventingToothDecay(x)). Consider the case where one
sentence contains only a Consequence. This case can be regarded as a special case of the above formula.
We write such a sentence as ?x(T ? C(x)) showing that the Premise is always True.
In this paper, we limit discussion of the CONFINEMENT relation to the Query matching to the above
logical pattern. Recognizing CONFINEMENT between the Text and the Query having more complex
semantic patterns is an area of future work. Here, we split the definition of CONFINEMENT into subtypes
according to: (i) conditions to satisfy in addition to the Premise, and (ii) limitations on the degree of the
Consequence.
Premise side Additional conditions for achieving the Consequence
Explicit constraint
Some conditional sentences use an expression correspoinding to logical ?only if,? which explicitly
means two way conditions as the following formula.
?x((P (x) ?AdditionalCondition(x) ? C(x)) (1)
?(P (x) ? ?AdditionalCondition(x) ? ?C(x)))
For example, S1 in Table 1, ?Xylitol is effective at preventing cavities only when it is 100%?,
explicitly specify that Xylitol is effective if it is 100% and is not effective if it is not 100%. So,
we assume the form of the above formula for this type of statement.
Implicit constraint
This type of sentence specifies an additional condition on the Premise and is represented by the
following formula. The Premise needs to be satisfied for the consequence to be achieved.
?x((P (x) ?AdditionalCondition(x) ? C(x)) (2)
Example S5 in Table 1 says ?Xylitol is effective at preventing tooth decay if it is 100%?, which
is assumed by Formula (2). S5 does not contain an expression such as ?only (??)?, which
explicitly specifies that C(x) does not hold when an additional condition is not satisfied. One may
understand that it implicitly means ?Xylitol is not effective at preventing tooth decay if it is not
100%,? but S5 does not structly require this.
Consequence side Constraints on the degree of achieving the Consequence
There are sentences in partial entailment or contradiction where the degree of achieving of the Con-
sequence is limited. To represent these limitations on the Consequence side, we define a CONFINE-
MENT relation where the degrees of the Consequence are limited as in Example (3b). We define the
following formula to represent these limitations on the Consequence side.
?x((P (x) ? Cr(x)) (3)
Cr(x) represents C(x) with additional restriction. For example, S3 in Table 1 says that Xylitol is
somewhat effective at preventing tooth decay, which means that there are cases in which Xylitol can
not prevent tooth decay. In the case of S3, Cr(x) is ?is a bit effective?. This type of CONFINE-
MENT provides valuable information about Xylitol?s limited ability to promote dental hygiene in S3.
217
All CONFINEMENTs on the Consequence side are of type EXPLICIT CONFINEMENT, because they
explicitly mean that a part of the Consequence is achieved but no other parts are achieved.
3.2 Semantic Templates
We propose a series of semantic templates to classify sentence pairs into one of the CONFINEMENT
relation subtypes we define. The semantic templates take a set of features as input and use their values
to categorize the sentence pair. In Section 4, we evaluate the coverage of the semantic templates by
classifying a small set of sentence pairs using manually set feature values. In Section 6, we provide
more realistic evaluation by using a proposed system to set the feature values automatically and classify
sentence pairs as ENTAILMENT / CONTRADICTION, or CONFINEMENT.
We assume that each sentence consists of a Premise and Consequence, and that each sentence pair
which has a CONFINEMENT relation contains at least one additional condition or one additional limitation
as defined in Section 3.1.
We know that there are a variety of expressions that indicate the presence of a CONFINEMENT relation.
For example, both ?Only 100% pure Xylitol is effective at preventing tooth decay.? and ?Xylitol is not
effective at preventing tooth decay unless it is 100% pure.? are CONFINEMENTs of ?Xylitol is effective
at preventing tooth decay.? Since it is impossible to handle all possible expressions that indicate CON-
FINEMENT, we focus on covering as many as possible with three features: (1) the type of constraint, (2)
the type of Premise, and (3) the type of Consequence. The features are defined in more detail below.
IF-Constraint This feature indicates the type of logical constraint in the Text sentence. Its values can
be ?IF,? ?ONLY-IF.?
Premise This feature indicates the type of Premise in the Text sentence. The value ?P+A? or ?notP+A?
means there is an Additional Condition on the Premise. The value ?P? or ?notP? means there is just
a Premise. ?not? represents the Premise have a negation.
Consequence This feature indicates the type of Consequence. Its possible values are ?C? (just a Conse-
quence), ?notC? (negated Consequence), ?Cr? or ?notCr? (certain partial Consequence).
Semantic templates consist of a tuple of four feature values and a mapping to the confinement type they
indicate. A full list of templates is given in Table 1. In the templates, a wildcard asterisk ?*? indicates
that any feature value can match in that slot of the template. The abbreviations ENT, CONT and CONF
stand for ENTAILMENT, CONFINEMENT and CONFINEMENT respectively.
Semantic templates are applied in turn from top pattern by determining the value of each feature and
looking up the corresponding relation type in Table 1. We give a classification examples below. The user
query is sentence S0. Sentences S1 are Web texts.
Query : S0. Xylitol is effective at preventing tooth decay.
Text [ONLY-IF P(x) ? AC(x) then C(x) ]: S1. Xylitol is effective at preventing tooth decay when you
take it every day without fail.
In Example, IF-Constraint is ?ONLY-IF?, Premise is ?P+A?, and the type of Consequence is ?C?.
This instance has an additional condition and the Consequence matches the Query, so it is identified as
an EXPLICIT CONFINEMENT.
4 Verifying Semantic Templates
In this section, we verify the effectiveness of semantic templates in recognizing CONFINEMENT rela-
tions by testing them on real-world data in Japanese. To directly evaluate the quality of the templates,
we construct a small data set of sentence pairs and manually annotate them with the correct values for
each of the features defined in Section 3.2.
4.1 Data
We constructed the Development set and the Open-test set of sample Japanese user queries and Inter-
net text pairs following the methodology of Murakami et al (2009). However, Murakami et al (2009)
annotated Query-Text pairs with coarse-grained AGREEMENT and CONFLICT relations that subsume the
218
Table 1: Semantic templates for recognizing CONFINEMENT
Semantic features Relation Number of Number of Example
IF-constraint Premise Consequence positive negative S0:?????????????????.
example example Xylitol is effective at preventing tooth decay.
ONLY-IF P+A * EXPLICIT 8 0 S1:??????? 100%?????????????????.
CONF Xylitol is effective at preventing tooth decay only when it is 100%.
ONLY-IF notP+A * EXPLICIT 0 0 S2:??????? 50%??????????????????????.
CONF Xylitol is effective at preventing tooth decay only when it is not under 50%.
* * Cr EXPLICIT 11 0 S3:??????????????????????.
CONF Xylitol is a bit effective at preventing tooth decay.
* * notCr EXPLICIT 12 0 S4:????????????????????????.
CONF Xylitol is not almost of effective at preventing tooth decay.
IF P+A * IMPLICT 62 0 S5:??????? 100%???????????????.
CONF Xylitol is effective at preventing tooth decay if it is 100%.
IF notP+A * IMPLICIT 1 0 S6:??????? 100%???????????????????.
CONF Xylitol is not effective at preventing tooth decay if it is not 100%
IF P C ENT 279 0 S7:???????????????????????.
Xylitol is effective at preventing tooth decay if it is eaten.
IF notP C CONT 0 0 S8:????????????????????????.
Xylitol is effective at preventing tooth decay if it is not eaten.
IF P notC CONT 13 0 S9:????????????????????????.
Xylitol is not effective at preventing tooth decay if it is eaten.
IF notP notC ENT 0 0 S10:????????????????????????.
Xylitol is not effective at preventing tooth decay if it is not eaten.
ONLY-IF P C ENT 3 0 S11:??????????????????????????.
Xylitol is effective at preventing tooth decay only when it is eaten.
ONLY-IF notP C CONT 0 0 S12:?????????????????????????????.
Xylitol is effective at preventing tooth decay only when it is not eaten.
ONLY-IF P notC CONT 0 0 S13:??????????????????????????.
Xylitol is effective at preventing tooth decay only when it is eaten.
ONLY-IF notP notC ENT 0 0 S14:?????????????????????????????.
Xylitol is not effective at preventing tooth decay only when it is not eaten.
Table 2: Data set (Counts of sentences out of parenthesis and statements in parentheses)
Entailment Contradiction Confinement All
Development 258 (282) 8 (13) 79 (94) 345 (389)
Open-test 230 170 200 600
RTE relations of ENTAILMENT and CONTRADICTION. As our task is to discriminate between CON-
FINEMENT and RTE relations, we annotate each sentence pair or each statement1 pair with one of the
following relations instead: ENTAILMENT, CONTRADICTION, or CONFINEMENT. In the case of CON-
FINEMENT, we annotate Query-Text pairs which are not full ENTAILMENT or CONTRADICTION but
these Text partially agrees and disagrees with the Query. Annotations were checked by two native speak-
ers of Japanese, and any sentence pair where annotation agreement is not reached was discarded. Table
2 shows that how many sentences or statements are in each data set. Annotated statements counts are
written in parentheses. We use the Development set for evaluation of verifying semantic templates and
develop list of lexical and syntactic patterns for semantic features extraction, and the Open-test set for
evaluation in Section 6.
4.2 Verification Result
After the data was prepared, we annotated it with the correct feature values for use with the semantic
templates. This was done by manually checking for words or phrases in the sentences that indicated one
of the features in Table 1. Once the features were set, we used them to classify each sentence pair.
We give the numbers of instances that we could confirm for each pattern in the sixth column of Table
1 and the numbers of negative instances in the seventh column, which satisfy semantic template but does
not agree Relation values in the fifth column. As a result we find that there were no statement pairs that
could not be successfully classified. We grasp CONFINEMENT relation with semantic templates for the
most part. This verification data does not cover all combinations of patterns in our semantic templates, so
we can not rule out the possibility of existence of an exception that cannot be classified by the semantic
templates. However, we find these results to be an encouraging indication of the usefulness of semantic
templates. Here are some example classifications found in the verification data.
Coordinate clauses Combining multiple of IMPLICIT CONFINEMENTs results in an EXPLICIT CON-
FINEMENT relation
(4)S0. ????????????.
Steroid has side-effects.
S1. ???????????????????????????????????????
1Murakami et al define a ?statement? as the smallest unit that can convey a complete thought or viewpoint. In practice, this
can be a sentence or something smaller such as a clause.
219
???????????????????.
Long-term use of steroid causes side-effects, but there is no need to worry about side-effects
in short-term usage.
In Example (4), S1 is an EXPLICIT CONFINEMENT for S0. This is derived from the combination of
CONFINEMENT of the two coordinate clauses of S1: the former phrase ?Long-term use of steroid causes
side-effects? of S1 is an IMPLICIT CONFINEMENT for S0 by our semantic templates and the latter phrase
is an IMPLICIT CONFINEMENT for S0.
Additional information for whole Query Combining of a CONTRADICTION and an IMPLICIT CON-
FINEMENT result in an EXPLICIT CONFINEMENT
(5)S0. ????????????????.
Xylitol is effective at preventing tooth decay.
S1. ??????????????????????,???????????????????????????????????????.
Tooth decay can not be prevented with Xylitol alone, but it can be fundamentally prevented
with an appropriate diet and by taking Xylitol after every meal.
The first clause before the comma in S1 of Example (5) corresponds to the entire sentence of S0. The
second clause after the comma helps us recognize that it is a CONFINEMENT relation. This instance
is also a combination of semantic templates, so we need to recognize negation of each statement and
adversative conjunction but we do not need to add new features to Table 1.
5 Proposed System
We propose a system which uses semantic templates for recognizing CONFINEMENT consists of six
steps: (I) linguistic analysis, (II) structural alignment, (III) Premise and Consequence identification,
(IV) semantic feature extraction, (V) adversative conjunction identification, and (VI) semantic template
application. Figure 1 shows the work flow of the system. This system takes as input corresponding to S0
and S1, and return a semantic relation.
5.1 I. Linguistic Analysis
In linguistic analysis, we conduct word segmentation, POS tagging, dependency parsing, and extended
modality analysis. This linguistic analysis acts as the basis for alignment and semantic feature extrac-
tion. For syntactic analysis, we identify words and POS tags with the Japanese morphological analyser
Mecab2, and we use the Japanese dependency parser CaboCha (Kudo and Matsumoto (2002)) to pro-
duce dependency trees. We also conduct extended modality analysis using the resources provided by
Matsuyoshi et al (2010).
5.2 II. Structural Alignment
To identify the consequence of S0 in S1, we use Structural Alignment (Mizuno et al (2010)). In Struc-
tural Alignment, dependency parent-child links are aligned across sentences using a variety of resources
to ensure semantic relatedness.
5.3 III. Premise and Consequence identification
In this step, we identify the Premise and the Consequence in S1. When a sentence pair satisfies all
items is satisfying, we can identify a focused chunk as the Consequence in S1:
1. A chunk?s modality in S0 is assertion, this chunk is the Consequence in S0
2. A chunk in S1 align with the Consequence in S0
We identify the Premise in S1 when a sentence pair satisfies first, and either second or third item of
the following conditions:
1. A case particle of chunks in S0 is either ?? (agent marker)? or ?? (topic marker)? and these chunks
are children of the Consequence in S0?s dependency tree
2. The subject in S0 aligns with the subject of S1
3. All of the dependants of the expression ??? (to, for)? have alignments in S0 dependency tree
2http://chasen.org/taku/ software/mecab/.
220
Figure 1: An overview of a proposal system to recognize CONFINEMENT
5.4 IV. Semantic Feature Extraction
We extract features for the semantic templates using a list of lexical and syntactic patterns. These
patterns were manually compiled using the development data set introduced in Section 4. Features for
the semantic templates are then automatically extracted by applying these patterns to input sentence
pairs. The following overviews our extraction approach for each feature.
5.4.1 IF-Constraint Feature Extraction
Using CaboCha, we manually constructed lists of words and their POS that are indicators of the
semantic condition under which a Premise occurs. We extract as features any words in the input sentences
that appear in the list with the corresponding POS. The ?IF? lexical type lists conjunctions that are the
results of a conditional chunk or noun phrases that indicate a case or situation. The ?ONLY-IF? lexical
type is used to represent the most constraining situations. The following is our list of expressions.
? IF: ?? (in case),?/??/? (when),?/??/?? (if),? (with)
? ONLY-IF: ??/??? (for this time), ??/??/?? (only), ??? (for the first time), ?? (to,
for)
5.4.2 Premise Feature Extraction
We treat the words or phrases which are extracted from the constraint as conditions, and need to decide
whether a given condition is the Premise or an additional condition for the Premise. The Premise is set
to ?P? when first step and either the second or third step of the following conditions are satisfied, and it
is set to ?P+A? otherwise:
1. ? The condition have children in the S1?s dependency tree or the condition?s children are not aligned
to chunks in S0
2. ? The condition?s parent in S0?s dependency tree has any chunk with a child aligned with the Conse-
quence in S0, or the condition?s parent is not aligned with chunks in S0
3. ? The condition?s parent does not have any expression with the meaning of ?use? in the S0?s depen-
dency tree
When these step are satisfied and negation exists in conditional chunks, Premise is set to ?notP+A,? if
these step are not satisfied, Premise is set to ?notP.? In the third step, we identify expressions with the
meaning of ?use? with our lexical list. For example ?? (use), ??? (eat), ?? (take) and so on. If
the condition?s parent has words in our lexical list, we identify that ?Xylitol? and ?eating Xylitol? and
?using Xylitol? are equivalent.
5.4.3 Consequence Feature Extraction
This feature is used to indicate the semantic relationship between Consequences of the sentences pair.
Sentences with Consequences that share a certain amount of similarity in polarity and syntax are judged
to have ENTAILMENT, otherwise they are in CONTRADICTION. In order to be judged as ENTAILMENT,
the following conditions must all be true:
1. The modality of the Consequences must be identical.
2. The polarity of the Consequences must be identical as indicated by the resources in (Sumida et al
(2008))
3. The Premises of both sentences must align with each other
221
4. ? The sentences must not contain expressions that limit range or degree such as ????? (almost)?
or ??? (degree)?
When all item are satisfied, the Consequence is set to ?C?, otherwise it is set to ?notC.? We identify
whether the consequence has expressions which limit the degree or not. The Consequence is set to ?Cr?
or ?notCr? when the following all conditions is satisfied:
1. Any of the children of the Consequence align with a chunk in S0?s dependency tree.
2. ? There are expressions limiting the degree of the Consequence or the siblings in S1?s dependency
tree
When this two steps are satisfied and the all four steps to judge whether sentence pairs is ENTAILMENT
or not are not satisfied, Consequence is set to ?notCr.?
5.5 V. Adversative Conjunction Identification
We manually compiled a list of target expressions including conjunctions such as ?? (but).? When a
S1 chunk containing an adversative conjunction that aligns with the Premise of S0 or the S0?s Premise
depends on S1 chunk containing an adversative conjunction, we set each feature set in a chunk before an
adversative conjunction and after an adversative conjunction to semantic templates.
5.6 VI. Semantic Template Application
We apply semantic feature extracted in Step IV to semantic templates. If S1 matches multiple semantic
templates with an adversative conjunction from Step V, we combine the semantic templates. We get a
relation for a sentence pair in this step.
5.7 Example of Semantic Features Extraction
Feature extraction is illustrated in greater detail in the examples S0 which is the query and S1 in
Table 1. First, we identify words represented IF-Constraint is ?ONLY-IF?: ?? (when)? is in S1 and the
conditional chunk has a word ??? (only).? Next, we evaluate each the type of Premise of each chunk to
determine if it is a premise or an additional condition. The subject word ?Xylitol? align between S0 and
S1, and the conditional chunk?s sibling in dependency tree of S1 is a chunk which has the subject. And
the conditional chunk have a child which is not aligned any chunk in S0, it is ?100%? (100%).? And the
conditional chunk has no negations. So, Premise is set to ?P+A.? Finally, we check if the consequences
to the conditions are aligned to the verbs and nouns indicating consequences in S0: ?prevent? and ?is
effective? are aligned, the modality and polarity of the Consequence are identical, these depended on by
the condition, and the Consequence has no expressions which limited range or degree. Consequence is
set to ?C.?We set the semantic template features and get a result which the sentences relation is EXPLICIT
CONFINEMENT. Ideally patterns for setting semantic feature for semantic templates should be learned
automatically, but this remains an area of future work. Nonetheless, our current experiment gives a good
measure of the effectiveness of semantic templates in recognizing CONFINEMENT relations.
6 Evaluation
In Section 4, we verified that the semantic templates defined in Section 3.2 can successfully classify
semantic relations as CONFINEMENT given the correct feature values. In this Section, we present the
results of an experiment in a more realistic setting by using semantic templates together with the features
automatically extracted as described with our proposed system in Section 5 to determine whether or not
a sentence pair has a CONFINEMENT relation.
6.1 Setting up Evaluation
While more research on recognizing ENTAILMENT or CONTRADICTION between sentences pairs is
necessary, it is important to recognize new relations that cannot be analysed in existing frameworks in
order to provide Internet users with the information they need. Thus, We assume that unrelated sentence
pairs will be discarded before classification, in this experiment we focus only on the recognition of
CONFINEMENT relations. So our goal in this experiment is to classify between CONFINEMENT and NOT
CONFINEMENT. We will evaluate determining whether CONFINEMENT sentence pairs are Explicit or
Implicit in future. In our experiment, we used a gold data for structural alignment to evaluate semantic
feature extraction.
222
Table 3: Results of recognizing confinement relations with our proposal system
Recall Precision F-Score
proposed system 0.65(129/200) 0.57(129/225) 0.61
baseline system 0.96(192/200) 0.34(192/562) 0.50
Table 4: Instances of incorrect classification
S0 S1
A ???????????????. ??????????????????????????????.
False A person can regain their health with isoflavon. Excess intake of isoflavon to boost its health effects is prohibited.
Negative B ?????????????????. ?????????????????????????????????????????????????????????.
Xylitol has effects on preventing tooth decay. The use of xylitol is effective at preventing tooth decay when done while eating properly and brushing one?s
teeth regularly.
C ????????????????????. ?????????????????????????????????????.
Xylitol can prevent tooth decay. It is a big mistake to think that one can prevent tooth decay if they put Xylitol in ? their mouth.
False D ??????????????. ???????????????????????????.
Positive Steroids can cure illnesses. Atrophic dermatitis will heal completely if steroid use is stopped.
E ???????????????. ?????????????????????????????????????????????.
Side effects are a worry for steroids. The amount of steroids or period of time that causes side effects differs from person to person.
6.2 Baseline System
We developed a baseline system that does not use our manually-compiled lexico-syntactic patterns
in order to act as a point of comparison for the proposed system in evaluating their contribution to
CONFINEMENT recognition.
The baseline system consists of performing all of the steps from of our proposed system that do not
rely on manually compiled lexico-syntactic patterns. Step relying on these resources are marked with a
? in Section 5 and are skipped in the baseline. Essentially, we conduct Steps I, II, and III, the parts of
Step IV that can be done without manually-compiled patterns, and, finally, Step VI.
In Step IV, we determine if there are any limitations on the Consequence in the Consequence Feature
subset, but we do not judge whether the Consequence is ENTAILMENT or CONTRADICTION in the
baseline system.
6.3 Result and Error Analysis
The results are given in Table 3. We find that our system has much higher precision than the baseline,
improving by over 20%. In our system, the list of semantic patterns is effective at recognizing CON-
FINEMENT. On the other hand recall has gone down compared to the baseline. The baseline judged that
almost sentences are CONFINEMENT, so the list of semantic patterns employed in our rule-based system
is useful at eliminating false positives. Table 4 shows some instances of incorrect classification. Each
instance is a pair (S0, S1).
Example A-S1 means ?Excess intake of isoflavon can not boost one?s health? and ?excess intake? is
an additional condition for A-S1. In this case ?excess? is a lexical specifier of the specific condition and
is indicated by the particle ???. The particle ?? (topic marker)? is not currently used as a feature in the
semantic templates since it is very noisy, so this instance can not be detected. We need to expand our
method of acquiring semantic patterns to better handle such cases.
The additional condition phrase in Example B-S1 modifies ?The use of Xylitol? instead of ?is effective
at preventing tooth decay?, preventing us from properly recognizing the limiting condition in this case.
We need to conduct deeper scopal analysis to determine when the modifier of an embedded chunk should
be considered as an additional condition.
Example C-S1 is an instance where the system fails to recognize that ?put in their mouth? is an expres-
sion meaning ?use? since our lists of lexical words for features did not have it. We should increase our
ability to recognize synonyms of ?to use? by automatically mining data for paraphrases or approaching
it as a machine learning task in order to handle examples like C-S1. On the other hands ?if steroid use
is stopped? in example D-S1 is the premise which should indicate an IF condition and Negation exists,
however we can not recognize it correctly since the phrase lacks negation. We will make a list of words
and phrases that are antonyms of ?use? in order to recognize such instances.
The condition in example E-S1 is about how side-effects appear, and not a condition for the other
sentence example E-S0. This instance requires detailed semantic analysis and cannot be solved with
alignment-based approaches. It represents a very difficult class of problems.
223
7 Conclusion
On theWeb, much of the information and opinions we encounter indicates the conditions or limitations
under which a statement is true. This information is important to Internet users who are interested in
determining the validity of a query of interest, but such information cannot be represented under the
prevalent RTE framework containing only ENTAILMENT and CONTRADICTION.
In this paper, we provided a logical definition of the CONFINEMENT relation and showed how it
could be used to represent important information that is omitted under an RTE framework. We also
proposed a set of semantic templates that use set of features extracted from sentences pairs to recognize
CONFINEMENT relations between two sentences. Preliminary investigations showed that given correct
feature input, semantic templates could effectively recognize CONFINEMENT relations.
In addition, we presented empirical evaluation of the effectiveness of semantic templates and
automatically-extracted features at recognizing CONFINEMENT between user queries and Web text pairs,
and conducted error analysis of the results. Currently, our system does not deal with unknown instances
well since it extracts features for semantic template using manually constructed lexical patterns. In fu-
ture work, we will learn features for the semantic templates directly from data to better handle unknown
instances.
Acknowledgment
This work is supported by the National Institute of Information and Communications Technology
Japan.
References
Abe, T. (1996). Restriction with? dake ?and modification with quantifier. Tsukuba Japanese Research 1, 4?20. in Japanese.
Etoh, J. and M. Okumura (2005). Cross-document relationship between sentences corpus. In Proceedings of the 14th Annual
Meeting of the Association for Natural Language Processing, pp. 482?485. (in Japanese).
Giampiccolo, D., B. Magnini, I. Dagan, and B. Dolan (2007). The third pascal recognizing textual entailment challenge. In
Proceedings of the ACL-PASCAL Workshop on Textual Entailment and Paraphrasing, RTE ?07, Morristown, NJ, USA, pp.
1?9. Association for Computational Linguistics.
Kudo, T. and Y. Matsumoto (2002). Japanese dependency analysis using cascaded chunking. In CoNLL 2002: In Proceedings
of the 6th Conference on Natural Language Learning 2002 (COLING 2002 Post-Conference Workshops), pp. 63?69.
Matsuyoshi, S., M. Eguchi, C. Sao, K. Murakami, K. Inui, and Y. Matsumoto (2010). Annotating event mentions in text
with modality, focus, and source information. In Proceedings of the 7th International Language Resources and Evaluation
(LREC?10).
Mizuno, J., H. Goto, Y. Watanabe, K. Murakami, K. Inui, and Y. Matsumoto (2010). Local Structural Alignment for Recogniz-
ing Semantic Relations between Sentences. In Proceedings of IPSJ-NL196. (in Japanese).
Murakami, K., S. Matsuyoshi, K. Inui, and Y. Matsumoto (2009). A corpus of statement pairs with semantic relations in
Japanese. In Proceedings of the 15th Annual Meeting of the Association for Natural Language Processing.
Murakami, K., E. Nichols, S. Matsuyoshi, A. Sumida, S. Masuda, K. Inui, and Y. Matsumoto (2009). Statement map: As-
sisting information credibility analysis by visualizing arguments. In Proceedings of the 3rd ACM Workshop on Information
Credibility on the Web (WICOW 2009), pp. 43?50.
Nakagawa, H. and T. Mori (1995). Pragmatic analysis of aspect morphemes in manual sentences in Japanese. The Association
for Natural Language Processing 2(4), 19 ? 36. in Japanese.
Radev, D. R. (2000). Common theory of information fusion from multiple text sources step one: Cross-document structure. In
Proceedings of the 1st SIGdial workshop on Discourse and dialogue, pp. 74?83.
Sammons, M., V. G. V. Vydiswaran, T. Vieira, N. Johri, M.-W. Chang, D. Goldwasser, V. Srikumar, G. Kundu, Y. Tu, K. Small,
J. Rule, Q. Do, and D. Roth (2009). Relation alignment for textual entailment recognition. In Proceedings of Recognizing
Textual Entailment 2009.
Sumida, A., N. Yoshinaga, and K. Torisawa (2008). Boosting precision and recall of hyponymy relation acquisition from
hierarchical layouts in Wikipedia. In Proceedings of the 6th International Language Resources and Evaluation (LREC?08).
Szpektor, I., E. Shnarch, and I. Dagan (2007). Instance-based evaluation of entailment rule acquisition. In Proceedings of the
45th Annual Meeting of the Association of Computational Linguistics, pp. 456?463.
224
LAW VIII - The 8th Linguistic Annotation Workshop, pages 70?74,
Dublin, Ireland, August 23-24 2014.
A Corpus Study for Identifying Evidence on Microblogs
Paul Reisert
1
Junta Mizuno
2
Miwa Kanno
1
Naoaki Okazaki
1,3
Kentaro Inui
1
1
Gradute School of Information Sciences, Tohoku University / Miyagi, Japan
2
Resilient ICT Research Center, NICT / Miyagi, Japan
3
Japan Science and Technology Agency (JST) / Tokyo, Japan
preisert@ecei.tohoku.ac.jp junta-m@nict.go.jp {meihe, okazaki, inui}@ecei.tohoku.ac.jp
Abstract
Microblogs are a popular way for users to communicate and have recently caught the attention
of researchers in the natural language processing (NLP) field. However, regardless of their rising
popularity, little attention has been given towards determining the properties of discourse rela-
tions for the rapid, large-scale microblog data. Therefore, given their importance for various NLP
tasks, we begin a study of discourse relations on microblogs by focusing on evidence relations.
As no annotated corpora for evidence relations on microblogs exist, we conduct a corpus study
to identify such relations on Twitter, a popular microblogging service. We create annotation
guidelines, conduct a large-scale annotation phase, and develop a corpus of annotated evidence
relations. Finally, we report our observations, annotation difficulties, and data statistics.
1 Introduction
Microblogs have become a popular method for users to express their ideas and communicate with other
users. Twitter
1
, a popular microblogging service, has recently been the attraction of many natural lan-
guage processing (NLP) tasks ranging from flu epidemic detection (Aramaki et al., 2011) to gender
inference for its users (Ciot et al., 2013). While various tasks are available, despite its daily, rapid large-
scale data, evidence relation studies have yet to be explored using Twitter data. Previous research exists
for determining the credibility of information on Twitter (Castillo et al., 2011); however, the focus of this
work is to determine and annotate evidence relations on microblogs.
Our primary motivation behind focusing on evidence relations includes the possibility of discovering
support for a claim which can support the debunking of false information. During the March 2011
Great East Japan Earthquake and Tsunami disaster, victims turned to the Internet in order to obtain
information on current conditions, such as family member whereabouts, refuge center information, and
general information (Sakaki et al., 2011). However, false information, such as the popular Cosmo Oil
explosion causing toxic rain, interfered with those looking to find correct information on the status of
the disaster areas (Okazaki et al., 2013). This is a scenario in which identification of potentially false
information is necessary in order to provide accurate information to victims and others relying on and
trusting in the Internet. Therefore, as a start to find support for counterclaims for false information such
as the Cosmo Oil explosion, we focus on dialogue between two individuals: a topic starter, or a post
with no parent; and a respondent who provides either an agreeing or disagreeing claim and support for
their claim. An example is provided in Figure 1.
We note that our task can appear similar to the field of Why-QA (Verberne, 2006; Oh et al., 2013;
Mrozinski et al., 2008), which attempts to discover the answer for Why questions. Given our task of
discovering agreeing or conflicting claims, and finding specific reasoning to support the claim, we end
up with a Why question similar to Why is it true/not true that X, where X is the contents of the claim
found in the parent post. However, we consider source mentions or hyperlinks, which can either stand
alone or be contained in a statement, question, or request, as a way to answer the above question.
To the best of our knowledge, no corpora for evidence relations on microblogs currently exists. In
terms of argumentation corpora, the Araucaria Argumentation Corpus
2
exists which utilizes various
argumentation schemes (Walton, 1996; Katzav and Reed, 2004; Pollock, 1995). In this work, we
1
https://twitter.com
2
http://araucaria.computing.dundee.ac.uk/doku.php
This work is licenced under a Creative Commons Attribution 4.0 International License. Page numbers and proceedings footer
are added by the organizers. License details: http://creativecommons.org/licenses/by/4.0/
70
# 