Proceedings of NAACL-HLT 2013, pages 733?738,
Atlanta, Georgia, 9?14 June 2013. c?2013 Association for Computational Linguistics
More than meets the eye: Study of Human Cognition in Sense Annotation
Salil Joshi
IBM Research India
Bangalore, India
saljoshi@in.ibm.com
Diptesh Kanojia
Gautam Buddha Technical University
Lucknow, India
dipteshkanojia@gmail.com
Pushpak Bhattacharyya
Computer Science and Engineering Department
Indian Institute of Technology, Bombay
Mumbai, India
pb@cse.iitb.ac.in
Abstract
Word Sense Disambiguation (WSD) ap-
proaches have reported good accuracies in
recent years. However, these approaches can
be classified as weak AI systems. According
to the classical definition, a strong AI based
WSD system should perform the task of sense
disambiguation in the same manner and with
similar accuracy as human beings. In order
to accomplish this, a detailed understanding
of the human techniques employed for sense
disambiguation is necessary. Instead of
building yet another WSD system that uses
contextual evidence for sense disambiguation,
as has been done before, we have taken a step
back - we have endeavored to discover the
cognitive faculties that lie at the very core of
the human sense disambiguation technique.
In this paper, we present a hypothesis regard-
ing the cognitive sub-processes involved in the
task ofWSD.We support our hypothesis using
the experiments conducted through the means
of an eye-tracking device. We also strive to
find the levels of difficulties in annotating vari-
ous classes of words, with senses. We believe,
once such an in-depth analysis is performed,
numerous insights can be gained to develop a
robust WSD system that conforms to the prin-
ciple of strong AI.
1 Introduction
Word Sense Disambiguation (WSD) is formally
defined as the task of computationally identifying
senses of a word in a context. The phrase ?in a
context? is not defined explicitly in the literature.
NLP researchers define it according to their conve-
nience. In our current work, we strive to unravel
the appropriate meaning of contextual evidence
used for the human annotation process. Chatterjee
et al (2012) showed that the contextual evidence
is the predominant parameter for the human sense
annotation process. They also state that WSD is
successful as a weak AI system, and further analysis
into human cognitive activities lying at the heart of
sense annotation can aid in development of a WSD
system built upon the principles of strong AI.
Knowledge based approaches, which can be con-
sidered to be closest form of WSD conforming to
the principles of strong AI, typically achieve low
accuracy. Recent developments in domain-specific
knowledge based approaches have reported higher
accuracies. A domain-specific approach due to
Agirre et al (2009) beats supervised WSD done
in generic domains. Ponzetto and Navigli (2010)
present a knowledge based approach which rivals
the supervised approaches by using the semantic
relations automatically extracted from Wikipedia.
They reported approximately 7% gain over the
closet supervised approach.
In this paper, we delve deep into the cognitive roles
associated with sense disambiguation through the
means of an eye-tracking device capturing the gaze
patterns of lexicographers, during the annotation
process. In-depth discussions with trained lexicog-
raphers indicate that there are multiple cognitive
sub-processes driving the sense disambiguation
task. The eye movement paths available from the
screen recordings done during sense annotation
conform to this theory.
Khapra et al (2011) points out that the accuracy
of various WSD algorithms is poor on certain
733
Part-of-speech (POS) categories, particularly, verbs.
It is also a general observation for lexicographers
involved in sense annotation that there are different
levels of difficulties associated with various classes
of words. This fact is also reflected in our analysis
on sense annotation. The data available after the
eye-tracking experiments gave us the fixation times
and saccades pertaining to different classes of
words. From the analysis of this data we draw
conclusive remarks regarding the reasons behind
this phenomenon. In our case, we classified words
based on their POS categories.
In this paper, we establish that contextual evidence is
the prime parameter for the human annotation. Fur-
ther, we probe into the implication of context used
as a clue for sense disambiguation, and the manner
of its usage. In this work, we address the following
questions:
? What are the cognitive sub-processes associ-
ated with the human sense annotation task?
? Which classes of words are more difficult to dis-
ambiguate and why?
By providing relevant answers to these questions we
intend to present a comprehensive understanding of
sense annotation as a complex cognitive process and
the factors involved in it. The remainder of this pa-
per is organized as follows. Section 2 contains re-
lated work. In section 3 we present the experimental
setup. Section 4 displays the results. We summarize
our findings in section 5. Finally, we conclude the
paper in section 6 presenting the future work.
2 Related Work
As mentioned earlier, we used the eye-tracking
device to ascertain the fact that contextual evidence
is the prime parameter for human sense annotation
as quoted by Chatterjee et al (2012) who used dif-
ferent annotation scenarios to compare human and
machine annotation processes. An eye movement
experiment was conducted by Vainio et al (2009)
to examine effects of local lexical predictability
on fixation durations and fixation locations during
sentence reading. Their study indicates that local
lexical predictability influences in decisions but not
where the initial fixation lands in a word. In another
work based on word grouping hypothesis and eye
movements during reading by Drieghe et al (2008),
the distribution of landing positions and durations of
first fixations in a region containing a noun preceded
by either an article or a high-frequency three-letter
word were compared.
Recently, some work is done on the study of sense
annotation. A study of sense annotations done on 10
polysemous words was conducted by Passonneau
et al (2010). They opined that the word meanings,
contexts of use, and individual differences among
annotators gives rise to inter-annotation variations.
De Melo et al (2012) present a study with a
focus on MASC (Manually-Annotated SubCorpus)
project, involving annotations done using WordNet
sense identifiers as well as FrameNet lexical units.
In our current work we use eye-tracking as a tool
to make findings regarding the cognitive processes
connected to the human sense disambiguation
procedure, and to gain a better understanding
of ?contextual evidence? which is of paramount
importance for human annotation. Unfortunately,
our work seems to be a first of its kind, and to the
best of our knowledge we do not know of any such
work done before in the literature.
3 Experimental Setup
We used a generic domain (viz., News) corpus in
Hindi language for experimental purposes. To iden-
tify the levels of difficulties associated with human
annotation, across various POS categories, we con-
ducted experiments on around 2000 words (includ-
ing function words and stop words). The analysis
was done only for open class words. The statistics
pertaining to the our experiment are illustrated in ta-
ble 1. For statistical significance of our experiments,
we collected the data with the help of 3 skilled lexi-
cographers and 3 unskilled lexicographers.
POS Noun Verb Adjective Adverb
#(senses) 2.423 3.814 2.602 3.723
#(tokens) 452 206 96 177
Table 1: Number of words (tokens) and average degree
of corpus polysemy (senses) of words per POS category
(taken from Hindi News domain) used for experiments
For our experiments we used a Sense Annotation
734
Figure 1: Sense marker tool showing an example Hindi sentence in the Context Window and the wordnet synsets of
the highlighted word in the Synset Window with the black dots and lines indicating the scan path
Tool, designed at IIT Bombay and an eye-tracking
device. The details of the tools and their purposes
are explained below:
3.1 The Sense Marker Tool
A word may have a number of senses, and the task
of identifying and marking which particular sense
has been used in the given context, is known as
sense marking.
The Sense Marker tool1 is a Graphical User Inter-
face based tool developed using Java, which facil-
itates the task of manual sense marking. This tool
displays the senses of the word as available in the
Marathi, Hindi and Princeton (English) WordNets
and allows the user to select the correct sense of the
word from the candidate senses.
3.2 Eye-Tracking device
An eye tracker is a device for measuring eye posi-
tions and eye movement. A saccade denotes move-
1http://www.cse.iitb.ac.in/s?alilj/resources
/SenseMarker/SenseMarkerTool.zip
ment to another position. The resulting series of fix-
ations and saccades is called a scan path. Figure 1
shows a sample scan path. In our experiments, we
have used an eye tracking device manufactured by
SensoMotoric Instruments2. We recorded saccades,
fixations, length of each fixation and scan paths on
the stimulus monitor during the annotation process.
A remote eye-tracking device (RED) measures gaze
hotspots on a stimulus monitor.
4 Results
In our experiments, each lexicographer performed
sense annotation on the stimulus monitor of the
eye tracking device. Fixation times, saccades
and scan paths were recorded during the sense
annotation process. We analyzed this data and the
corresponding observations are enumerated below.
Figure 2 shows the annotation time taken by differ-
ent lexicographers across POS categories. It can be
observed that the time taken for disambiguating the
verbs is significantly higher than the remaining POS
2http://www.smivision.com/
735
Unskilled Lexicographer (Seconds) Skilled Lexicographer (Seconds)
Word Degree of
polysemy
Thypo Tclue Tgloss Ttotal Thypo Tclue Tgloss Ttotal
lAnA (laanaa - to bring) 4 0.63 0.80 5.20 6.63 0.31 1.20 1.82 3.30
krnA (karanaa - to do) 22 0.90 1.42 2.20 4.53 0.50 0.64 1.14 2.24
jtAnA (jataanaa - to express) 4 0.70 2.45 5.93 9.09 0.25 0.39 0.62 1.19
Table 2: Comparison of time taken across different cognitive stages of sense annotation by lexicographers for verbs
Figure 2: Histogram showing time taken (in seconds) by
each lexicographer across POS categories for sense anno-
tation
categories. This behavior can be consistently seen
in the timings recorded for all the six lexicographers.
Table 2 presents the comparison of time taken
across different cognitive stages of sense annotation
by lexicographers for some of the most frequently
occurring verbs.
To know if the results gathered from all the lexicog-
raphers are consistent, we present the correlation be-
tween each pair of lexicographers in table 3. The
table also shows the value of the t-test statistic gen-
erated for each pair of lexicographers.
5 Discussion
The data obtained from the eye-tracking device and
corresponding analysis of the fixation times, sac-
cades and scan paths of the lexicographers? eyes re-
veal that sense annotation is a complex cognitive
process. From the videos of the scan paths obtained
from the eye-tracking device and from detailed dis-
cussion with lexicographers it can be inferred that
this cognitive process can be broken down into 3
stages:
1. When a lexicographer sees a word, he/she
makes a hypothesis about the domain and con-
sequently about the correct sense of the word,
mentally. In cases of highly polysemous words,
the hypothesis may narrow down to multiple
senses. We denote the time required for this
phase as Thypo.
2. Next the lexicographer searches for clues to
support this hypothesis and in some cases to
eliminate false hypotheses, when the word is
polysemous. These clues are available in the
form of neighboring words around the target
word. We denote the time required for this ac-
tivity as Tclue.
3. The clue words aid the lexicographer to decide
which one of the initial hypotheses was true.
To narrow down the candidate synsets, the lex-
icographers use synonyms of the words in a
synset to check if the sentence retains its mean-
ing.
From the scan paths and fixation times obtained
from the eye-tracking experiment, it is evident that
stages 1, 2 and 3 are chronological stages in the hu-
man cognitive process associated with sense disam-
biguation. In cases of highly polysemous words and
instances where senses are fine-grained, stages 2 and
3 get interleaved. It is also clear that each stage takes
up separate proportions of the sense disambiguation
time for humans. Hence time taken to disambiguate
a word using the Sense Marker Tool (as explained in
Section 3.1) can be factored as follows:
Ttotal = Thypo + Tclue + Tgloss
Where:
Ttotal = Total time for sense disambiguation
736
Correlation value T-test statistic
Lexicographer B C D E F B C D E F
A 0.933 0.976 0.996 0.996 0.769 0.007 0.123 0.185 0.036 0.006
B 0.987 0.960 0.915 0.945 0.009 0.028 0.084 0.026
C 0.989 0.968 0.879 0.483 0.088 0.067
D 0.988 0.820 0.367 0.709
E 0.734 0.418
Table 3: Pairwise correlation between annotation time taken by lexicographers
Thypo = Time for hypothesis building
Tclue = Clue word searching time
Tgloss = Gloss Matching time and winner sense
selection time.
The results in table 2 reveal the different ratios of
time invested during each of the above stages. Thypo
takes the minimum amount of time among the dif-
ferent sub-processes. Tgloss > Tclue in all cases.
? For unskilled lexicographers: Tgloss >> Tclue
because of errors in the initial hypothesis.
? For skilled lexicographers: Tgloss ? Tclue, as
they can identify the POS category of the word
and their hypothesis thus formed is pruned.
Hence during selection of the winner sense,
they do not browse through other POS cate-
gories, which unskilled lexicographers do.
The results shown in figure 2 reveal that verbs take
the maximum disambiguation time. In fact the
average time taken by verbs is around 75% more
than the time taken by other POS categories. This
supports the fact that verbs are the most difficult to
disambiguate.
The analysis of the scan paths and fixation times
available from the eye-tracking experiments in case
of verbs show that the Tgloss covers around 66%
of Ttotal, as shown in table 2. This means that the
lexicographer takes more time in selecting a winner
sense from the list of wordnet senses. This happens
chiefly because of following reasons:
1. Higher degree of polysemy of verbs compared
to other POS categories (as shown in tables 1
and 2).
2. In several cases the senses are fine-grained.
3. Sometimes the hypothesis of the lexicogra-
phers may not match any of the wordnet senses.
The lexicographer then selects the wordnet
sense closest to their hypothesis.
Adverbs and adjectives show higher degree of pol-
ysemy than nouns (as shown in table 1), but take
similar disambiguation time as nouns (as shown in
figure 2). In case of adverbs and adjectives, the lex-
icographer is helped by their position around a verb
or noun respectively. So, Tclue only involves search-
ing for the nearby verbs or nouns, as the case may
be, hence reducing total disambiguation time Ttotal.
6 Conclusion and Future Work
In this paper we examined the cognitive process that
enables the human sense disambiguation task. We
have also laid down our findings regarding the vary-
ing levels of difficulty in sense annotation across
different POS categories. These experiments are
just a stepping stone for going deeper into finding
the meaning and manner of usage of contextual
evidence which is fundamental to the human sense
annotation process.
In the future we aim to perform an in-depth analy-
sis of clue words that aid humans in sense disam-
biguation. The distance of clue words from the tar-
get word and their and pattern of occurrence could
give us significant insights into building a ?Discrim-
ination Net?.
References
E. Agirre, O.L. De Lacalle, A. Soroa, and I. Fakultatea.
2009. Knowledge-based wsd on specific domains:
performing better than generic supervised wsd. Pro-
ceedigns of IJCAI, pages 1501?1506.
Arindam Chatterjee, Salil Joshi, Pushpak Bhattacharyya,
Diptesh Kanojia, and Akhlesh Meena. 2012. A
737
study of the sense annotation process: Man v/s ma-
chine. In Proceedings of 6th International Conference
on Global Wordnets, January.
G. De Melo, C.F. Baker, N. Ide, R.J. Passonneau, and
C. Fellbaum. 2012. Empirical comparisons of masc
word sense annotations. In Proceedings of the 8th
international conference on language resources and
evaluation (LREC12). Istanbul: European Language
Resources Association (ELRA).
D. Drieghe, A. Pollatsek, A. Staub, and K. Rayner. 2008.
The word grouping hypothesis and eye movements
during reading. Journal of Experimental Psychology:
Learning, Memory, and Cognition, 34(6):1552.
Mitesh M. Khapra, Salil Joshi, and Pushpak Bhat-
tacharyya. 2011. It takes two to tango: A bilingual
unsupervised approach for estimating sense distribu-
tions using expectation maximization. In Proceedings
of 5th International Joint Conference on Natural Lan-
guage Processing, pages 695?704, Chiang Mai, Thai-
land, November. Asian Federation of Natural Lan-
guage Processing.
R.J. Passonneau, A. Salleb-Aouissi, V. Bhardwaj, and
N. Ide. 2010. Word sense annotation of polysemous
words by multiple annotators. Proceedings of LREC-
7, Valleta, Malta.
S.P. Ponzetto and R. Navigli. 2010. Knowledge-rich
word sense disambiguation rivaling supervised sys-
tems. In Proceedings of the 48th annual meeting of the
association for computational linguistics, pages 1522?
1531. Association for Computational Linguistics.
S. Vainio, J. Hyo?na?, and A. Pajunen. 2009. Lexical pre-
dictability exerts robust effects on fixation duration,
but not on initial landing position during reading. Ex-
perimental psychology, 56(1):66.
738
Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics, pages 561?569,
Portland, Oregon, June 19-24, 2011. c?2011 Association for Computational Linguistics
Together We Can: Bilingual Bootstrapping for WSD
Mitesh M. Khapra Salil Joshi Arindam Chatterjee Pushpak Bhattacharyya
Department Of Computer Science and Engineering,
IIT Bombay,
Powai,
Mumbai, 400076.
{miteshk,salilj,arindam,pb}@cse.iitb.ac.in
Abstract
Recent work on bilingual Word Sense Disam-
biguation (WSD) has shown that a resource
deprived language (L1) can benefit from the
annotation work done in a resource rich lan-
guage (L2) via parameter projection. How-
ever, this method assumes the presence of suf-
ficient annotated data in one resource rich lan-
guage which may not always be possible. In-
stead, we focus on the situation where there
are two resource deprived languages, both
having a very small amount of seed annotated
data and a large amount of untagged data. We
then use bilingual bootstrapping, wherein, a
model trained using the seed annotated data
of L1 is used to annotate the untagged data of
L2 and vice versa using parameter projection.
The untagged instances of L1 and L2 which
get annotated with high confidence are then
added to the seed data of the respective lan-
guages and the above process is repeated. Our
experiments show that such a bilingual boot-
strapping algorithm when evaluated on two
different domains with small seed sizes using
Hindi (L1) and Marathi (L2) as the language
pair performs better than monolingual boot-
strapping and significantly reduces annotation
cost.
1 Introduction
The high cost of collecting sense annotated data for
supervised approaches (Ng and Lee, 1996; Lee et
al., 2004) has always remained a matter of concern
for some of the resource deprived languages of the
world. The problem is even more hard-hitting for
multilingual regions (e.g., India which has more than
20 constitutionally recognized languages). To cir-
cumvent this problem, unsupervised and knowledge
based approaches (Lesk, 1986; Walker and Amsler,
1986; Agirre and Rigau, 1996; McCarthy et al,
2004; Mihalcea, 2005) have been proposed as an al-
ternative but they have failed to deliver good accura-
cies. Semi-supervised approaches (Yarowsky, 1995)
which use a small amount of annotated data and a
large amount of untagged data have shown promise
albeit for a limited set of target words. The above
situation highlights the need for high accuracy re-
source conscious approaches to all-words multilin-
gual WSD.
Recent work by Khapra et al (2010) in this di-
rection has shown that it is possible to perform cost
effective WSD in a target language (L2) without
compromising much on accuracy by leveraging on
the annotation work done in another language (L1).
This is achieved with the help of a novel synset-
aligned multilingual dictionary which facilitates the
projection of parameters learned from the Wordnet
and annotated corpus of L1 to L2. This approach
thus obviates the need for collecting large amounts
of annotated corpora in multiple languages by rely-
ing on sufficient annotated corpus in one resource
rich language. However, in many situations such a
pivot resource rich language itself may not be avail-
able. Instead, we might have two or more languages
having a small amount of annotated corpus and a
large amount of untagged corpus. Addressing such
situations is the main focus of this work. Specifi-
cally, we address the following question:
In the absence of a pivot resource rich lan-
guage is it possible for two resource de-
prived languages to mutually benefit from
each other?s annotated data?
While addressing the above question we assume that
561
even though it is hard to obtain large amounts of
annotated data in multiple languages, it should be
fairly easy to obtain a large amount of untagged data
in these languages. We leverage on such untagged
data by employing a bootstrapping strategy. The
idea is to train an initial model using a small amount
of annotated data in both the languages and itera-
tively expand this seed data by including untagged
instances which get tagged with a high confidence
in successive iterations. Instead of using monolin-
gual bootstrapping, we use bilingual bootstrapping
via parameter projection. In other words, the pa-
rameters learned from the annotated data of L1 (and
L2 respectively) are projected to L2 (and L1 respec-
tively) and the projected model is used to tag the un-
tagged instances of L2 (and L1 respectively).
Such a bilingual bootstrapping strategy when
tested on two domains, viz., Tourism and Health us-
ing Hindi (L1) and Marathi (L2) as the language
pair, consistently does better than a baseline strat-
egy which uses only seed data for training without
performing any bootstrapping. Further, it consis-
tently performs better than monolingual bootstrap-
ping. A simple and intuitive explanation for this is
as follows. In monolingual bootstrapping a language
can benefit only from its own seed data and hence
can tag only those instances with high confidence
which it has already seen. On the other hand, in
bilingual bootstrapping a language can benefit from
the seed data available in the other language which
was not previously seen in its self corpus. This is
very similar to the process of co-training (Blum and
Mitchell, 1998) wherein the annotated data in the
two languages can be seen as two different views of
the same data. Hence, the classifier trained on one
view can be improved by adding those untagged in-
stances which are tagged with a high confidence by
the classifier trained on the other view.
The remainder of this paper is organized as fol-
lows. In section 2 we present related work. Section
3 describes the Synset algned multilingual dictio-
nary which facilitates parameter projection. Section
4 discusses the work of Khapra et al (2009) on pa-
rameter projection. In section 5 we discuss bilin-
gual bootstrapping which is the main focus of our
work followed by a brief discussion on monolingual
bootstrapping. Section 6 describes the experimental
setup. In section 7 we present the results followed
by discussion in section 8. Section 9 concludes the
paper.
2 Related Work
Bootstrapping for Word Sense Disambiguation was
first discussed in (Yarowsky, 1995). Starting with a
very small number of seed collocations an initial de-
cision list is created. This decisions list is then ap-
plied to untagged data and the instances which get
tagged with a high confidence are added to the seed
data. This algorithm thus proceeds iteratively in-
creasing the seed size in successive iterations. This
monolingual bootstrapping method showed promise
when tested on a limited set of target words but was
not tried for all-words WSD.
The failure of monolingual approaches (Ng and
Lee, 1996; Lee et al, 2004; Lesk, 1986; Walker and
Amsler, 1986; Agirre and Rigau, 1996; McCarthy
et al, 2004; Mihalcea, 2005) to deliver high accura-
cies for all-words WSD at low costs created interest
in bilingual approaches which aim at reducing the
annotation effort. Recent work in this direction by
Khapra et al (2009) aims at reducing the annotation
effort in multiple languages by leveraging on exist-
ing resources in a pivot language. They showed that
it is possible to project the parameters learned from
the annotation work of one language to another lan-
guage provided aligned Wordnets for the two lan-
guages are available. However, they do not address
situations where two resource deprived languages
have aligned Wordnets but neither has sufficient an-
notated data. In such cases bilingual bootstrapping
can be used so that the two languages can mutually
benefit from each other?s small annotated data.
Li and Li (2004) proposed a bilingual bootstrap-
ping approach for the more specific task of Word
Translation Disambiguation (WTD) as opposed to
the more general task of WSD. This approach does
not need parallel corpora (just like our approach)
and relies only on in-domain corpora from two lan-
guages. However, their work was evaluated only on
a handful of target words (9 nouns) for WTD as op-
posed to the broader task of WSD. Our work instead
focuses on improving the performance of all words
WSD for two resource deprived languages using
bilingual bootstrapping. At the heart of our work lies
parameter projection facilitated by a synset algned
562
multilingual dictionary described in the next section.
3 Synset Aligned Multilingual Dictionary
A novel and effective method of storage and use of
dictionary in a multilingual setting was proposed by
Mohanty et al (2008). For the purpose of current
discussion, we will refer to this multilingual dictio-
nary framework as MultiDict. One important de-
parture in this framework from the traditional dic-
tionary is that synsets are linked, and after that
the words inside the synsets are linked. The ba-
sic mapping is thus between synsets and thereafter
between the words.
Concepts L1
(English)
L2
(Hindi)
L3
(Marathi)
04321:
a youth-
ful male
person
{male
child,
boy}
{lwkA
(ladkaa),
bAlk
(baalak),
bQcA
(bachchaa)}
{m  lgA
(mulgaa),
porgA
(porgaa),
por (por)}
Table 1: Multilingual Dictionary Framework
Table 1 shows the structure of MultiDict, with one
example row standing for the concept of boy. The
first column is the pivot describing a concept with a
unique ID. The subsequent columns show the words
expressing the concept in respective languages (in
the example table, English, Hindi and Marathi). Af-
ter the synsets are linked, cross linkages are set up
manually from the words of a synset to the words
of a linked synset of the pivot language. For exam-
ple, for the Marathi word m  lgA (mulgaa), ?a youth-
ful male person?, the correct lexical substitute from
the corresponding Hindi synset is lwkA (ladkaa).
The average number of such links per synset per lan-
guage pair is approximately 3. However, since our
work takes place in a semi-supervised setting, we
do not assume the presence of these manual cross
linkages between synset members. Instead, in the
above example, we assume that all the words in
the Hindi synset are equally probable translations
of every word in the corresponding Marathi synset.
Such cross-linkages between synset members facil-
itate parameter projection as explained in the next
section.
4 Parameter Projection
Khapra et al (2009) proposed that the various
parameters essential for domain-specific Word
Sense Disambiguation can be broadly classified into
two categories:
Wordnet-dependent parameters:
? belongingness-to-dominant-concept
? conceptual distance
? semantic distance
Corpus-dependent parameters:
? sense distributions
? corpus co-occurrence
They proposed a scoring function (Equation (1))
which combines these parameters to identify the cor-
rect sense of a word in a context:
S? = argmax
i
(?iVi +
?
j?J
Wij ? Vi ? Vj) (1)
where,
i ? Candidate Synsets
J = Set of disambiguated words
?i = BelongingnessToDominantConcept(Si)
Vi = P (Si|word)
Wij = CorpusCooccurrence(Si, Sj)
? 1/WNConceptualDistance(Si, Sj)
? 1/WNSemanticGraphDistance(Si, Sj)
The first component ?iVi of Equation (1) captures
influence of the corpus specific sense of a word in a
domain. The other component Wij ?Vi ?Vj captures
the influence of interaction of the candidate sense
with the senses of context words weighted by factors
of co-occurrence, conceptual distance and semantic
distance.
Wordnet-dependent parameters depend on the
structure of the Wordnet whereas the Corpus-
dependent parameters depend on various statistics
learned from a sense marked corpora. Both the
tasks of (a) constructing a Wordnet from scratch and
(b) collecting sense marked corpora for multiple
languages are tedious and expensive. Khapra et
563
al. (2009) observed that by projecting relations
from the Wordnet of a language and by projecting
corpus statistics from the sense marked corpora
of the language to those of the target language,
the effort required in constructing semantic graphs
for multiple Wordnets and collecting sense marked
corpora for multiple languages can be avoided
or reduced. At the heart of their work lies the
MultiDict described in previous section which
facilitates parameter projection in the following
manner:
1. By linking with the synsets of a pivot resource
rich language (Hindi, in our case), the cost of build-
ing Wordnets of other languages is partly reduced
(semantic relations are inherited). The Wordnet pa-
rameters of Hindi Wordnet now become projectable
to other languages.
2. For calculating corpus specific sense distribu-
tions, P (Sense Si|Word W ), we need the counts,
#(Si,W ). By using cross linked words in the
synsets, these counts become projectable to the tar-
get language (Marathi, in our case) as they can be
approximated by the counts of the cross linked Hindi
words calculated from the Hindi sense marked cor-
pus as follows:
P (Si|W ) =
#(Si,marathi word)
?
j #(Sj ,marathi word)
P (Si|W ) ?
#(Si, cross linked hindi word)
?
j #(Sj , cross linked hindi word)
The rationale behind the above approximation is the
observation that within a domain the counts of cross-
linked words will remain the same across languages.
This parameter projection strategy as explained
above lies at the heart of our work and allows us
to perform bilingual bootstrapping by projecting the
models learned from one language to another.
5 Bilingual Bootstrapping
We now come to the main contribution of our work,
i.e., bilingual bootstrapping. As shown in Algorithm
1, we start with a small amount of seed data (LD1
and LD2) in the two languages. Using this data we
learn the parameters described in the previous sec-
tion. We collectively refer to the parameters learned
Algorithm 1 Bilingual Bootstrapping
LD1 := Seed Labeled Data from L1
LD2 := Seed Labeled Data from L2
UD1 := Unlabeled Data from L1
UD2 := Unlabeled Data from L2
repeat
?1 := model trained using LD1
?2 := model trained using LD2
{Project models from L1/L2 to L2/L1}
??2 := project(?1, L2)
??1 := project(?2, L1)
for all u1 ? UD1 do
s := sense assigned by ??1 to u1
if confidence(s) >  then
LD1 := LD1 + u1
UD1 := UD1 - u1
end if
end for
for all u2 ? UD2 do
s := sense assigned by ??2 to u2
if confidence(s) >  then
LD2 := LD2 + u2
UD2 := UD2 - u2
end if
end for
until convergence
from the seed data as models ?1 and ?2 for L1 and L2
respectively. The parameter projection strategy de-
scribed in the previous section is then applied to ?1
and ?2 to obtain the projected models ??2 and ??1 re-
spectively. These projected models are then applied
to the untagged data of L1 and L2 and the instances
which get labeled with a high confidence are added
to the labeled data of the respective languages. This
process is repeated till we reach convergence, i.e.,
till it is no longer possible to move any data from
UD1 (and UD2) to LD1 (and LD2 respectively).
We compare our algorithm with monolingual
bootstrapping where the self models ?1 and ?2 are
directly used to annotate the unlabeled instances in
L1 and L2 respectively instead of using the projected
models ??1 and ??2. The process of monolingual boot-
564
Algorithm 2 Monolingual Bootstrapping
LD1 := Seed Labeled Data from L1
LD2 := Seed Labeled Data from L2
UD1 := Unlabeled Data from L1
UD2 := Unlabeled Data from L2
repeat
?1 := model trained using LD1
?2 := model trained using LD2
for all u1 ? UD1 do
s := sense assigned by ?1 to u1
if confidence(s) >  then
LD1 := LD1 + u1
UD1 := UD1 - u1
end if
end for
for all u2 ? UD2 do
s := sense assigned by ?2 to u2
if confidence(s) >  then
LD2 := LD2 + u2
UD2 := UD2 - u2
end if
end for
until convergence
strapping is shown in Algorithm 2.
6 Experimental Setup
We used the publicly available dataset1 described
in Khapra et al (2010) for all our experiments.
The data was collected from two domains, viz.,
Tourism and Health. The data for Tourism domain
was collected by manually translating English doc-
uments downloaded from Indian Tourism websites
into Hindi and Marathi. Similarly, English docu-
ments for Health domain were obtained from two
doctors and were manually translated into Hindi and
Marathi. The entire data was then manually an-
notated by three lexicographers adept in Hindi and
Marathi. The various statistics pertaining to the total
number of words, number of words per POS cate-
gory and average degree of polysemy are described
in Tables 2 to 5.
Although Tables 2 and 3 also report the num-
1http://www.cfilt.iitb.ac.in/wsd/annotated corpus
Polysemous words Monosemous words
Category Tourism Health Tourism Health
Noun 62336 24089 35811 18923
Verb 6386 1401 3667 5109
Adjective 18949 8773 28998 12138
Adverb 4860 2527 13699 7152
All 92531 36790 82175 43322
Table 2: Polysemous and Monosemous words per cate-
gory in each domain for Hindi
Polysemous words Monosemous words
Category Tourism Health Tourism Health
Noun 45589 17482 27386 11383
Verb 7879 3120 2672 1500
Adjective 13107 4788 16725 6032
Adverb 4036 1727 5023 1874
All 70611 27117 51806 20789
Table 3: Polysemous and Monosemous words per cate-
gory in each domain for Marathi
Avg. degree of Wordnet polysemy
for polysemous words
Category Tourism Health
Noun 3.02 3.17
Verb 5.05 6.58
Adjective 2.66 2.75
Adverb 2.52 2.57
All 3.09 3.23
Table 4: Average degree of Wordnet polysemy per cate-
gory in the 2 domains for Hindi
Avg. degree of Wordnet polysemy
for polysemous words
Category Tourism Health
Noun 3.06 3.18
Verb 4.96 5.18
Adjective 2.60 2.72
Adverb 2.44 2.45
All 3.14 3.29
Table 5: Average degree of Wordnet polysemy per cate-
gory in the 2 domains for Marathi
565
 0
 10
 20
 30
 40
 50
 60
 70
 80
 0  1000  2000  3000  4000  5000
F-
sc
or
e 
(%
)
Seed Size (words)
Seed Size v/s F-score
OnlySeed
WFS
BiBoot
MonoBoot
 0
 10
 20
 30
 40
 50
 60
 70
 80
 0  1000  2000  3000  4000  5000
F-
sc
or
e 
(%
)
Seed Size (words)
Seed Size v/s F-score
OnlySeed
WFS
BiBoot
MonoBoot
Figure 1: Comparison of BiBoot, Mono-
Boot, OnlySeed and WFS on Hindi Health
data
Figure 2: Comparison of BiBoot, Mono-
Boot, OnlySeed and WFS on Hindi
Tourism data
 0
 10
 20
 30
 40
 50
 60
 70
 80
 0  1000  2000  3000  4000  5000
F-
sc
or
e 
(%
)
Seed Size (words)
Seed Size v/s F-score
OnlySeed
WFS
BiBoot
MonoBoot
 0
 10
 20
 30
 40
 50
 60
 70
 80
 0  1000  2000  3000  4000  5000
F-
sc
or
e 
(%
)
Seed Size (words)
Seed Size v/s F-score
OnlySeed
WFS
BiBoot
MonoBoot
Figure 3: Comparison of BiBoot, Mono-
Boot, OnlySeed and WFS on Marathi
Health data
Figure 4: Comparison of BiBoot, Mono-
Boot, OnlySeed and WFS on Marathi
Tourism data
ber of monosemous words, we would like to clearly
state that we do not consider monosemous words
while evaluating the performance of our algorithms
(as monosemous words do not need any disambigua-
tion).
We did a 4-fold cross validation of our algorithm
using the above described corpora. Note that even
though the corpora were parallel we did not use this
property in any way in our experiments or algorithm.
In fact, the documents in the two languages were
randomly split into 4 folds without ensuring that the
parallel documents remain in the same folds for the
two languages. We experimented with different seed
sizes varying from 0 to 5000 in steps of 250. The
seed annotated data and untagged instances for boot-
strapping are extracted from 3 folds of the data and
the final evaluation is done on the held-out data in
the 4th fold.
We ran both the bootstrapping algorithms (i.e.,
monolingual bootstrapping and bilingual boot-
strapping) for 10 iterations but, we observed
that after 1-2 iterations the algorithms converge.
In each iteration only those words for which
P (assigned sense|word) > 0.6 get moved to the
labeled data. Ideally, this threshold (0.6) should
have been selected using a development set. How-
ever, since our work focuses on resource scarce lan-
guages we did not want to incur the additional cost
of using a development set. Hence, we used a fixed
threshold of 0.6 so that in each iteration only those
words get moved to the labeled data for which the
assigned sense is clearly a majority sense (P > 0.6).
566
Language-
Domain Algorithm F-score(%)
No. of tagged
words needed to
achieve this
F-score
% Reduction in annotation
cost
Hindi-Health Biboot 57.70 1250
(2250+2250)?(1250+1750)
(2250+2250) ? 100 = 33.33%
OnlySeed 57.99 2250
Marathi-Health Biboot 64.97 1750
OnlySeed 64.51 2250
Hindi-Tourism Biboot 60.67 1000
(2000+2000)?(1000+1250)
(2000+2000) ? 100 = 43.75%
OnlySeed 59.83 2000
Marathi-Tourism Biboot 61.90 1250
OnlySeed 61.68 2000
Table 6: Reduction in annotation cost achieved using Bilingual Bootstrapping
7 Results
The results of our experiments are summarized in
Figures 1 to 4. The x-axis represents the amount of
seed data used and the y-axis represents the F-scores
obtained. The different curves in each graph are as
follows:
a. BiBoot: This curve represents the F-score ob-
tained after 10 iterations by using bilingual boot-
strapping with different amounts of seed data.
b. MonoBoot: This curve represents the F-score ob-
tained after 10 iterations by using monolingual
bootstrapping with different amounts of seed data.
c. OnlySeed: This curve represents the F-score ob-
tained by training on the seed data alone without
using any bootstrapping.
d. WFS: This curve represents the F-score obtained
by simply selecting the first sense from Wordnet,
a typically reported baseline.
8 Discussions
In this section we discuss the important observations
made from Figures 1 to 4.
8.1 Performance of Bilingual bootstrapping
For small seed sizes, the F-score of bilingual boot-
strapping is consistently better than the F-score ob-
tained by training only on the seed data without us-
ing any bootstrapping. This is true for both the lan-
guages in both the domains. Further, bilingual boot-
strapping also does better than monolingual boot-
strapping for small seed sizes. As explained earlier,
this better performance can be attributed to the fact
that in monolingual bootstrapping the algorithm can
tag only those instances with high confidence which
it has already seen in the training data. Hence, in
successive iterations, very little new information be-
comes available to the algorithm. This is clearly
evident from the fact that the curve of monolin-
gual bootstrapping (MonoBoot) is always close to
the curve of OnlySeed.
8.2 Effect of seed size
The benefit of bilingual bootstrapping is clearly felt
for small seed sizes. However, as the seed size in-
creases the performance of the 3 algorithms, viz.,
MonoBoot, BiBoot and OnlySeed is more or less the
same. This is intuitive, because, as the seed size in-
creases the algorithm is able to see more and more
tagged instances in its self corpora and hence does
not need any assistance from the other language. In
other words, the annotated data in L1 is not able to
add any new information to the training process of
L2 and vice versa.
8.3 Bilingual bootstrapping reduces annotation
cost
The performance boost obtained at small seed sizes
suggests that bilingual bootstrapping helps to reduce
the overall annotation costs for both the languages.
To further illustrate this, we take some sample points
from the graph and compare the number of tagged
words needed by BiBoot and OnlySeed to reach the
same (or nearly the same) F-score. We present this
comparison in Table 6.
567
The rows for Hindi-Health and Marathi-Health in
Table 6 show that when BiBoot is employed we
need 1250 tagged words in Hindi and 1750 tagged
words in Marathi to attain F-scores of 57.70% and
64.97% respectively. On the other hand, in the ab-
sence of bilingual bootstrapping, (i.e., using Only-
Seed) we need 2250 tagged words each in Hindi and
Marathi to achieve similar F-scores. BiBoot thus
gives a reduction of 33.33% in the overall annota-
tion cost ( {1250 + 1750} v/s {2250 + 2250}) while
achieving similar F-scores. Similarly, the results for
Hindi-Tourism and Marathi-Tourism show that Bi-
Boot gives a reduction of 43.75% in the overall an-
notation cost while achieving similar F-scores. Fur-
ther, since the results of MonoBoot are almost the
same as OnlySeed, the above numbers indicate that
BiBoot provides a reduction in cost when compared
to MonoBoot also.
8.4 Contribution of monosemous words in the
performance of BiBoot
As mentioned earlier, monosemous words in the test
set are not considered while evaluating the perfor-
mance of our algorithm but, we add monosemous
words to the seed data. However, we do not count
monosemous words while calculating the seed size
as there is no manual annotation cost associated with
monosemous words (they can be tagged automati-
cally by fetching their singleton sense id from the
wordnet). We observed that the monosemous words
of L1 help in boosting the performance of L2 and
vice versa. This is because for a given monose-
mous word in L2 (or L1 respectively) the corre-
sponding cross-linked word in L1 (or L2 respec-
tively) need not necessarily be monosemous. In such
cases, the cross-linked polysemous word in L2 (or
L1 respectively) benefits from the projected statis-
tics of a monosemous word in L1 (or L2 respec-
tively). This explains why BiBoot gives an F-score
of 35-52% even at zero seed size even though the
F-score of OnlySeed is only 2-5% (see Figures 1 to
4).
9 Conclusion
We presented a bilingual bootstrapping algorithm
for Word Sense Disambiguation which allows two
resource deprived languages to mutually benefit
from each other?s data via parameter projection. The
algorithm consistently performs better than mono-
lingual bootstrapping. It also performs better than
using only monolingual seed data without using any
bootstrapping. The benefit of bilingual bootstrap-
ping is felt prominently when the seed size in the two
languages is very small thus highlighting the useful-
ness of this algorithm in highly resource constrained
scenarios.
Acknowledgments
We acknowledge the support of Microsoft Re-
search India in the form of an International Travel
Grant, which enabled one of the authors (Mitesh M.
Khapra) to attend this conference.
References
Eneko Agirre and German Rigau. 1996. Word sense dis-
ambiguation using conceptual density. In In Proceed-
ings of the 16th International Conference on Compu-
tational Linguistics (COLING).
Avrim Blum and Tom Mitchell. 1998. Combining la-
beled and unlabeled data with co-training. pages 92?
100. Morgan Kaufmann Publishers.
Mitesh M. Khapra, Sapan Shah, Piyush Kedia, and Push-
pak Bhattacharyya. 2009. Projecting parameters for
multilingual word sense disambiguation. In Proceed-
ings of the 2009 Conference on Empirical Methods in
Natural Language Processing, pages 459?467, Singa-
pore, August. Association for Computational Linguis-
tics.
Mitesh Khapra, Saurabh Sohoney, Anup Kulkarni, and
Pushpak Bhattacharyya. 2010. Value for money: Bal-
ancing annotation effort, lexicon building and accu-
racy for multilingual wsd. In Proceedings of the 23rd
International Conference on Computational Linguis-
tics.
Yoong Keok Lee, Hwee Tou Ng, and Tee Kiah Chia.
2004. Supervised word sense disambiguation with
support vector machines and multiple knowledge
sources. In Proceedings of Senseval-3: Third Inter-
national Workshop on the Evaluation of Systems for
the Semantic Analysis of Text, pages 137?140.
Michael Lesk. 1986. Automatic sense disambiguation
using machine readable dictionaries: how to tell a pine
cone from an ice cream cone. In In Proceedings of the
5th annual international conference on Systems docu-
mentation.
Hang Li and Cong Li. 2004. Word translation disam-
biguation using bilingual bootstrapping. Comput. Lin-
guist., 30:1?22, March.
568
Diana McCarthy, Rob Koeling, Julie Weeds, and John
Carroll. 2004. Finding predominant word senses
in untagged text. In ACL ?04: Proceedings of the
42nd Annual Meeting on Association for Computa-
tional Linguistics, page 279, Morristown, NJ, USA.
Association for Computational Linguistics.
Rada Mihalcea. 2005. Large vocabulary unsupervised
word sense disambiguation with graph-based algo-
rithms for sequence data labeling. In In Proceedings of
the Joint Human Language Technology and Empirical
Methods in Natural Language Processing Conference
(HLT/EMNLP), pages 411?418.
Rajat Mohanty, Pushpak Bhattacharyya, Prabhakar
Pande, Shraddha Kalele, Mitesh Khapra, and Aditya
Sharma. 2008. Synset based multilingual dictionary:
Insights, applications and challenges. In Global Word-
net Conference.
Hwee Tou Ng and Hian Beng Lee. 1996. Integrat-
ing multiple knowledge sources to disambiguate word
senses: An exemplar-based approach. In In Proceed-
ings of the 34th Annual Meeting of the Association for
Computational Linguistics (ACL), pages 40?47.
D. Walker and R. Amsler. 1986. The use of machine
readable dictionaries in sublanguage analysis. In In
Analyzing Language in Restricted Domains, Grish-
man and Kittredge (eds), LEA Press, pages 69?83.
David Yarowsky. 1995. Unsupervised word sense dis-
ambiguation rivaling supervised methods. In Proceed-
ings of the 33rd annual meeting on Association for
Computational Linguistics, pages 189?196, Morris-
town, NJ, USA. Association for Computational Lin-
guistics.
569
