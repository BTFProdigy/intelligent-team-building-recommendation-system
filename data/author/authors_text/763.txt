Dependency and relational structure in treebank annotation
Cristina BOSCO, Vincenzo LOMBARDO
Dipartimento di Informatica, Universita` di Torino
Corso Svizzera 185
10149 Torino,
Italia,
bosco,vincenzo@di.unito.it
Abstract
Among the variety of proposals currently mak-
ing the dependency perspective on grammar
more concrete, there are several treebanks
whose annotation exploits some form of Rela-
tional Structure that we can consider a general-
ization of the fundamental idea of dependency
at various degrees and with reference to differ-
ent types of linguistic knowledge.
The paper describes the Relational Structure as
the common underlying representation of tree-
banks which is motivated by both theoretical
and task-dependent considerations. Then it
presents a system for the annotation of the Rela-
tional Structure in treebanks, called Augmented
Relational Structure, which allows for a system-
atic annotation of various components of lin-
guistic knowledge crucial in several tasks. Fi-
nally, it shows a dependency-based annotation
for an Italian treebank, i.e. the Turin Univer-
sity Treebank, that implements the Augmented
Relational Structure.
1 Introduction
Different treebanks use different annotation
schemes which make explicit two distinct but
interrelated aspects of the structure of the sen-
tence, i.e. the function of the syntactic units
and their organization according to a part-whole
paradigm. The first aspect refers to a form of
Relational Structure (RS), the second refers to
its constituent or Phrase Structure (PS). The
major difference between the two structures is
that the RS allows for several types of rela-
tions to link the syntactic units, whilst the PS
involves a single relation ?part-of?. The RS
can be seen as a generalization of the depen-
dency syntax with the syntactic units instanti-
ated to individual words in the dependency tree
(Mel?c?uk, 1988). As described in many theo-
retical linguistic frameworks, the RS provides a
useful interface between syntax and a seman-
tic or conceptual representation of predicate-
argument structure. For example, Lexical Func-
tional Grammar (LFG) (Bresnan, 1982) collo-
cates relations at the interface between lexicon
and syntax, Relational Grammar (RG) (Perl-
mutter, 1983) provides a description of the sen-
tence structure exclusively based on relations
and syntactic units not structured beyond the
string level.
This paper investigates how the notion of RS
has been applied in the annotation of tree-
banks, in terms of syntactic units and types
of relations, and presents a system for the
definition of the RS that encompasses several
uses in treebank schemata and can be viewed
as a common underlying representation. The
system, called Augmented Relational Struc-
ture (ARS) allows for an explicit representa-
tion of the three major components of linguistic
structures, i.e. morpho-syntactic, functional-
syntactic and semantic. Then the paper shows
how a dependency-based annotation can de-
scend on ARS, and describes the ARS-based an-
notation of a dependency treebank for Italian,
the Turin University Treebank (TUT), which is
the first available treebank for Italian, with a
few quantitative results.
The paper is organized as follows. The next
section investigates both the annotation of RS
in treebanks and the major motivations for the
use of RS from language-specific issues and NLP
tasks implementation; then we present the ARS
system; finally, we show the dependency anno-
tation of the TUT corpus.
2 Annotation of the Relational
Structure
In practice, all the existing treebank schemata
implement some form of relational structure.
Annotation schemata range from pure (depen-
dency) RS-based approaches to RS-PS combi-
nations (Abeille?, 2003).
Some treebanks consider the relational infor-
mation as the exclusive basis of the annotation.
The Prague Dependency Treebank ((Hajic?ova?
and Ceplova?, 2000), (Bo?hmova? et al, 2003))
implements a three level annotation scheme
where both the analytical (surface syntactic)
and tectogrammatical level (deep syntactic and
topic-focus articulation) are dependency-based;
the English Dependency Treebank (Rambow
et al, 2002) implements a dependency-based
mono-stratal analysis which encompasses sur-
face and deep syntax and directly represents the
predicate-argument structure. Other projects
adopt mixed formalisms where the sentence is
split in syntactic subunits (phrases), but linked
by functional or semantic relations, e.g. the Ne-
gra Treebank for German ((Brants et al, 2003),
(Skut et al, 1998)), the Alpino Treebank for
Dutch (van der Beek et al, 2002), and the Lingo
Redwood Treebank for English (Oepen et al,
2002). Also in the Penn Treebank ((Marcus
et al, 1993), (Marcus et al, 1994)) a limited
set of relations is placed over the constituency-
based annotation in order to make explicit the
(morpho-syntactic or semantic) roles that the
constituents play.
The choice of a RS-based annotation schema
can depend on theoretical linguistic motivations
(a RS-based schema allows for an explicit, fine-
grained representation of several linguistic phe-
nomena), task-dependent motivations (the RS-
based schema represents the linguistic informa-
tion involved in the task(s) at hand), language-
dependent motivations (the relational structure
is traditionally considered as the most adequate
representation of the object language).
Theoretical motivations for exploiting repre-
sentations based on forms of RS was developed
in the several RS-based theoretical linguistic
frameworks (e.g. Lexical Functional Grammar,
Relaional Grammar and dependency grammar),
which allow for capturing information involved
at various level (e.g. syntactic and semantic)
in linguistic structures, and grammatical for-
malisms have been proposed with the aim to
capture the linguistic knowledge represented in
these frameworks. Since the most immediate
way to build wide-coverage grammars is to
extract them directly from linguistic data (i.e.
from treebanks), the type of annotation used in
the data is a factor of primary importance, i.e.
a RS-based annotation allows for the extraction
of a more descriptive grammar1.
1See (Mazzei and Lombardo, 2004a) and (Mazzei and
Lombardo, 2004b) for experiments of LTAG extraction
from TUT.
Task-dependent motivations rely on how the
annotation of the RS can facilitate some
processing aspects of NLP applications. The
explicit representation of predicative structures
allowed by the RS can be a powerful source
of disambiguation. In fact, a large amount of
ambiguity (such as coordination, Noun-Noun
compounds and relative clause attachment) can
be resolved using such a kind of information,
and relations can provide a useful interface
between syntax and semantics. (Hindle and
Rooth, 1991) had shown the use of dependency
in Prepositional Phrase disambiguation, and
the experimental results reported in (Hock-
enmaier, 2003) demonstrate that a language
model which encodes a rich notion of predicate
argument structure (e.g. including long-range
relations arising through coordination) can
significantly improve the parsing performances.
Moreover, the notion of predicate argument
structure has been advocated as useful in
a number of different large-scale language-
processing tasks, and the RS is a convenient
intermediate representation in several applica-
tions (see (Bosco, 2004) for a survey on this
topic). For instance, in Information Extraction
relations allows for recognizing different guises
in which an event can appear regardless of the
several different syntactic patterns that can be
used to specify it (Palmer et al, 2001)2. In
Question Answering, systems usually use forms
of relation-based structured representations of
the input texts (i.e. questions and answers)
and try to match those representations (see
e.g. (Litkowski, 1999), (Buchholz, 2002)).
Also the in-depth understanding of the text,
necessary in Machine Translation task, requires
the use of relation-based representations where
an accurate predicate argument structure is a
critical factor (Han et al, 2000)3.
Language-dependent motivations rely on the
fact that the dependency-based formalisms has
been traditionally considered as the most ade-
quate for the representation of free word order
languages. With respect to constituency-based
2Various approaches to IE (Collins and Miller, 1997)
address this issue by using relational representations,
that is forms of ?concept nodes? which specifies a trig-
ger word (usually a Verb) and also forms of mapping
between the syntactic and the semantic relations of the
trigger.
3The system presented in (Han et al, 2000) gener-
ates the dependency trees of the source language (Ko-
rean) sentences, then directly maps them to the trans-
lated (English) sentences.
formalisms, free word order languages involves a
large amount of discontinuous constituents (i.e.
constituents whose parts are not contiguous in
the linear order of the sentence). In practice, a
constituency-based representation was adopted
for languages with rather fixed word order
patterns, like English (Penn Treebank), while
a dependency representation for languages
which allow variable degrees of word order
freedom, such as Czech (see Prague Depen-
dency Treebank) or Italian (as we will see later,
TUT). Nevertheless, in principle, since the
representation of a discontinuous constituent X
can be addressed in various ways (e.g. by in-
troducing lexically empty elements co-indexed
with the moved parts of X ), the presence to
a certain extent of word order freedom does
not necessarily mean that a language has to be
necessarily annotated according to a relation-
based format rather than a constituency-based
one. Moreover, free word order languages can
present difficulties for dependency-based as
well as for constituency-based frameworks (e.g.
non-projective structures). The development
of dependency-based treebanks for English (see
English Dependency Treebank) together with
the inclusion of relations in constituency-based
treebanks (see Penn Treebank) too, confirms
the strongly prevailing relevance of motivations
beyond the language-dependent ones.
The types of knowledge that many applica-
tions actually need are RS-based representa-
tions where predicate argument structure and
the associated morphological and syntactic in-
formation can operate as an interface to a
semantic-conceptual representation. All these
types of knowledge have in common the fact
that they can be described according to the de-
pendency paradigm, rather than according to
the constituency paradigm. The many applica-
tions (in particular those referring to the Penn
Treebank) which use heuristics-based transla-
tion schemes from the phrase structure to lexical
dependency (?head percolation tables?) (Ram-
bow et al, 2002) show that the access to com-
prehensive and accurate extended dependency-
based representations has to be currently con-
sidered as a critical issue for the development of
robust and accurate NLP technologies.
Now we define our proposal for the representa-
tion of the RS in treebank annotation.
3 The Augmented Relational
Structure
A RS consists of syntactic units linked by re-
lations. An Augmented Relational Structure
(ARS) organizes and systematizes the informa-
tion usually associated in existing annotations
to the RS, and includes not only syntactic ,
but also linguistic information that can be rep-
resented according to a dependency paradigm
and that is proximate to semantics and un-
derlies syntax and morphology. Therefore the
eats
John the apple 
rel2rel1
Figure 1: A simple RS.
ARS expresses the relations and syntactic units
in terms of multiple components. We describe
the ARS as a dag where each relation is a
feature structure including three components.
Each component of the ARS-relations is use-
morph
fsynt
sem
v1
v2
v3
Figure 2: An ARS relation.
ful in marking both similarities and differences
among the behavior of units linked by the de-
pendency relations.
The morpho-syntactic component of the ARS
describes morpho-syntactic features of the
words involved in relations, such as their gram-
matical category. This component is useful for
making explicit the morpho-syntactic variants
of predicative structures. Instances of this kind
of variants often occur in intransitive, tran-
sitive and di-transitive predicative structures,
e.g. esplosione-esplodere (explosion - to ex-
plode) are respectively nominal and verbal vari-
ants of the intransitive structure ?something ex-
plodes?. By referring to the TUT, we can evalu-
ate the frequency of this phenomenon: in 1,500
sentences 944 Verbs occur (for a total of 4169
occurrences) and around the 30% of them are
present in the nominal variant too4.
The functional-syntactic component identifies
the subcategorized elements, that is it keeps
apart arguments and modifiers in the pred-
icative structures. Moreover, this component
makes explicit the similarity of a same predica-
tive structure when it occurs in the sentence in
different morpho-syntactic variants. In fact, the
functional-syntactic components involved, e.g.,
in the transitive predicative structure ?some-
one declares something?, are the same in both
the nominal (dichiarazione [di innocenza]
OBJ
[di John]
SUBJ
- John?s declaration of innocence)
and verbal realization ([John]
SUBJ
dichiara [la
sua innocenza]
OBJ
- John declares his inno-
cence) of such a predication, i.e. SUBJ and
OBJ. The distinction between arguments and
modifiers has been considered as quite problem-
atic in the practice of the annotation, even if rel-
evant from the applicative and theoretical point
of view5, and is not systematically annotated in
the Penn Treebank (only in clear cases, the use
of semantic roles allows for the annotation of
argument and modifier) and in the Negra Tree-
bank. This distinction is instead usually marked
in dependency representations, e.g. in the En-
glish Dependency Treebank and in the Prague
Dependency Treebank.
The semantic component of the ARS-relations
specifies the role of words in the syntax-
semantics interface and discriminates among
different kinds of modifiers and oblique com-
plements. We can identify at least three levels
of generality: verb-specific roles (e.g. Runner,
Killer, Bearer); thematic roles (e.g. Agent, In-
strument, Experiencer, Theme, Patient); gener-
alized roles (e.g. Actor and Undergoer). The
use of specific roles can cause the loss of useful
generalizations, whilst too generic roles do not
describe with accuracy the data. An example of
annotation of semantic roles is the tectogram-
matical layer of the Prague Dependency Tree-
bank.
ARS features a mono-stratal approach. By fol-
lowing this strategy, the annotation process can
be easier, and the result is a direct represen-
tation of a complete predicate argument struc-
ture, that is a RS where all the information
(morpho-syntactic, functional-syntactic and se-
mantic) are immediately available. An alterna-
tive approach has been followed by the Prague
4This statistics does not take into consideration the
possible polysemic nature of words involved.
5See, for instance, in LFG and RG.
Dependency Treebank, which is featured by
a three levels annotation. This case shows
that the major difference between the syntactic
(analytic) and the semantic (tectogrammatical)
layer consists in the inclusion of empty nodes
for recovering forms of deletion ((Bo?hmova et
al., 1999), (Hajic?ova? and Ceplova?, 2000)). But
this kind of information does not necessarily re-
quires a separated semantic layer and can be
annotated as well in a mono-stratal represen-
tation, like the English Dependency Treebank
(Rambow et al, 2002) does.
The tripartite structure of the relations in ARS
guarantees that different components can be ac-
cessed separately and analyzed independently
(like in (Montemagni et al, 2003) or in (Ram-
bow et al, 2002)). Furthermore, the ARS al-
lows for forms of annotation of relations where
not all the features are specified too. In fact, the
ARS-relations which specify only a part of com-
ponents allow for the description of syntactic
grammatical relations which do not correspond
with any semantic relation, either because they
have a void semantic content or because they
have a different structure from any possible cor-
responding semantic relation (i.e. there is no
semantic relation linking the same ARS-units
linked by the syntactic one). Typical relations
void of semantic content can link the parts of ex-
pressions not compositionally interpretable (id-
ioms), for instance together with with in to-
gether with. While a classic example of a non-
isomorphic syntactic and semantic structure is
one which involves the meaning of quantifiers:
a determiner within a NP extends its scope be-
yond the semantic concept that results from the
interpretation of the NP. Another example is
the coordination where the semantic and syn-
tactic structure are often considered as non iso-
morphic in several forms of representation.
The ARS-relations including values for both
functional-syntactic and semantic components
may be used in the representation of grammat-
ical relations which participate into argument
structures and the so-called oblique cases (see
Fillmore and (Hudson, 1990)), i.e. where the
semantic structures are completely isomorphic
to the syntactic structures. For example, a
locative adjunct like in the garden in John was
eating fish in the garden is represented at the
syntactic level as a Prepositional Phrase play-
ing the syntactic function locative in the Verb
Phrase (in the Penn Treebank it could be an-
notated as a PP-LOC); the semantic concept
corresponding to the garden plays the semantic
role LOCATION in the ?eating? event stated
by the sentence.
4 TUT: a dependency-based
treebank for Italian
The TUT is the first available tree-
bank of Italian (freely downloadable at
http://www.di.unito.it/?tutreeb/). The cur-
rent release of TUT includes 1,500 sentences
corresponding to 38,653 tokens (33,868 words
and 4,785 punctuation marks). The average
sentence length is of 22,57 words and 3,2
punctuation marks.
In this section, we concentrate on the major
features of TUT annotation schema, i.e. how
the ARS system can describe a dependency
structure.
4.1 A dependency-based schema
In Italian the order of words is fixed in non
verbal phrases, but verbal arguments and mod-
ifiers can be freely distributed without affect-
ing the semantic interpretation of the sentence.
A study on a set of sentences of TUT shows
that the basic word order for Italian is Subject-
Verb-Complement (SVC), as known in litera-
ture (Renzi, 1988), (Stock, 1989), but in more
than a quarter of declarative sentences it is vi-
olated (see the following table6). Although the
Permutations Occurrences
S V C 74,26%
V C S 11,38%
S C V 7,98%
C S V 3,23%
V S C 2,29%
C V S 0,77%
Table 1: Italian word order
SVC order is well over the others, the fact that
all the other orders are represented quantita-
tively confirms the assumption of partial con-
figurationality intuitively set in the literature.
The partial configurationality of Italian can be
considered as a language-dependent motivation
for the choice of a dependency-based annota-
tion for an Italian treebank. The schema is
similar to that of the Prague Dependency Tree-
bank analytical-syntactic level with which TUT
6The data reported in the table refer to 1,200 anno-
tated sentences where 1,092 verbal predicate argument
structures involving Subject and at least one other Com-
plement occur.
shares the following basic design principles typ-
ical of the dependency paradigm:
 the sentence is represented by a tree where
each node represents a word and each
edge represents a dependency labelled by a
grammatical relation which involves a head
and a dependent,
 each single word and punctuation mark
is represented by a single node, the so-
called amalgamated words, which are words
composed by lexical units that can occur
both in compounds and alone, e.g. Verbs
with clitic suffixes (amarti (to love-you) or
Prepositions with Article (dal (from-the)),
are split in more lexical units7,
 since the constituent structure of the sen-
tence is implicit in dependency trees, no
phrases are annotated8.
If the partial configurationality makes the
dependency-based annotation more adequate
for Italian, other features of this language
should be well represented by exploiting a
Negra-like format where the syntactic units are
phrases rather than single words. For instance,
in Italian, Nouns are in most cases introduced
by the Article: the relation between Noun and
Determiner is not very relevant in a dependency
perspective, while it contributes to the defini-
tion of a clearer notion of NP in Italian than
in languages poorer of Determiners like, e.g.,
Czech. The major motivation of a dependency-
based schema is therefore theoretical and, in
particular, to make explicit in the treebank an-
notation a variety of structures typical of the
object language.
Moreover, in order to make explicit in cases
of deletion and ellipsis the predicate argument
structure, we annotate in the TUT null ele-
ments. These elements allow for the annota-
tion of a variety of phenomena: from the ?equi?
deletion which affects the subject of infinitive
Verb depending on a tensed Verb (e.g. John(1)
vuole T(1) andare a casa - John(1) want to
T(1) go home), to the various forms of gap-
ping that can affect parts of the structure of
the sentence (e.g. John va(1) a casa e Mario
T(1) al cinema - John goes(1) home and Mario
7Referring to the current TUT corpus, we see that
around 7,7% words are amalgamated.
8If phrase structure is needed for a particular appli-
cation, it is possible to automatically derive it from the
dependency structure along with the surface word order.
dichiarava
In Sudja 
VERB,PREP
RMOD
TIME
il
VERB,NOUN
SUBJ
AGENT 
VERB,DET+DEF
OBJ
THEME
quei la 
PREP,DET+DEF
ARG 
#
fallimento
NOUN,DET+DEF
APPOSITION 
DENOM
DET+DEF,NOUN
ARG 
#
giorni zingara 
DET+DEF,NOUN
ARG 
#
DET+DEF,NOUN
ARG 
#
Figure 3: The TUT representation of In quei
giorni Sudja la zingara dichiarava il fallimento
(In those days Sudja the gipsy declared the
bankruptcy).
T(1) to the cinema), to the pro-dropped sub-
jects typical of Italian (as well as of Portuguese
and Spanish), i.e. the subject of tensed Verbs
which are not lexically realized in the sentence
(e.g. T Va a casa - T goes home). For phenom-
ena such as equi and gapping TUT implements
co-indexed traces, while it implements non co-
indexed traces for phenomena such as the pro-
drop subject.
4.2 An ARS-based schema
In TUT the dependency relations form the
skeleton of the trees and the ARS tripartite fea-
ture structures which are associated to these re-
lations resolve the interface between the mor-
phology, syntax and semantics. The ARS al-
lows for some form of annotation also of rela-
tions where only parts of the features are spec-
ified. In TUT this has been useful for under-
specifying relations both in automatic analysis
of the treebank (i.e. we can automatically ex-
clude the analysis of a specific component of
the relations) and in the annotation process (i.e.
when the annotator is not confident of a specific
component of a relation, he/she can leave such
a component void).
In the figure 3 we see a TUT tree.
All the relations annotated in the tree in-
clude the morpho-syntactic component, formed
by the morphological categories of the words in-
volved in the relation separated by a comma,
e.g. VERB,PREP for the relation linking the
root of the sentence with its leftmost child
(In). Some relation involves a morpho-syntactic
component where morphological categories are
composed by more elements, e.g. DET+DEF
(in DET+DEF,NOUN) for the relation linking
quei with giorni. The elements of the morpho-
syntactic component of TUT includes, in fact,
10 ?primary? tags that represent morphologi-
cal categories of words (e.g. DET for Deter-
miner, NOUN for Noun, and VERB for Verb),
and that can be augmented with 20 ?secondary?
tags (specific of the primary tags) which further
describe them by showing specific features, e.g.
DEF which specifies the definiteness of the De-
terminer or INF which specifies infiniteness of
Verb. Valid values of the elements involved in
TUT morpho-syntactic tags are 40.
By using the values of the functional-syntactic
component, TUT distinguishes among a variety
of dependency relations. In figure 3 we see the
distinction between argument, e.g. the relation
SUBJ linking the argument Sudja with the ver-
bal root of the sentence dichiarava, and the rela-
tion RMOD which represents a restrictive mod-
ifier and links the verbal root dichiarava with
in quei giorni. The dependents of Prepositions
and determiners are annotated as argument too,
according to arguments presented in (Hudson,
1990). Another distinction which is exploited
in the annotation of the sentence is that be-
tween restrictive modifier (i.e. RMOD which
links dichiarava with in quei giorni) and AP-
POSITION (i.e. non restrictive modifier linking
Sudja with la zingara), which are modifiers that
restrict the meaning of the head. Beyond these
basic distinctions, TUT schema draws other dis-
tinctions among the functional-syntactic rela-
tions and includes a large set of tags for a total
of 55 items, which are compounds of 27 pri-
mary and 23 secondary tags. These tags are
organized in a hierarchy (Bosco, 2004) accord-
ing to their different degree of specification. In
the hierarchy of relations, Arguments (ARG) in-
clude Subject (SUBJ), Object (OBJ), Indirect
Object (INDOBJ), Indirect Complement (IN-
DCOMPL), Predicative Complements (of the
Subject (PREDCOMPL+SUBJ) and of the Ob-
ject (PREDCOMPL+OBJ)). The direct conse-
quence of its hierarchical organization is the
availability of another mechanisms of under-
specification in the annotation or in the anal-
ysis of annotated data. In fact, by referring to
the hierarchy we can both annotate and analyze
relations at various degrees of specificity.
The semantic component discriminates among
different kinds of modifiers and oblique com-
plements. The approach pursued in TUT has
been to annotate very specific semantic roles
only when they are immediately and neatly
distinguishable. For instance, by referring to
the prepositional dependents introduced by da9
(from/by), we find the following six different
values for the semantic component:
- REASONCAUSE, e.g., in gli investitori sono
impazziti dalle prospettive di guadagno (the in-
vestors are crazy because of the perspectives of
gain)
- SOURCE, e.g., in traggono benefici dalla
bonifica ([they] gain benefit from the drainage)
- AGENT, e.g., l?iniziativa e` appoggiata dagli
USA (the venture is supported by USA)
- TIME, e.g., dal ?91 sono stati stanziati 450
miliardi (since ?91 has been allocated 450 bil-
lions)
- THEME, e.g., cio` distingue l?Albania dallo
Zaire (that distinguishes the Albany from
Zaire)
- LOC, which can be further specialized in
LOC+FROM, e.g., in da qui e` partito l?assalto
(from here started the attack), LOC+IN, e.g., in
quello che succedeva dall?altra parte del mondo
(what happened in the other side of the world),
LOC+METAPH, e.g., in l?Albania e` passata dal
lancio dei sassi alle mitragliatrici (the Albany
has passed from the stone-throwing to the ma-
chineguns).
In figure 3 the semantic component has been
annotated only in four relations, which respec-
tively represent the temporal modifier In quei
giorni of the main Verb dichiarava, the appo-
sition la zingara of the Noun Sudja, and the
arguments of the Verb, i.e. the subject Sudja la
zingara which plays the semantic role AGENT
and the object il fallimento which plays the se-
mantic role THEME. In the other relations in-
volved in this sentence a value for the semantic
component cannot be identified10, e.g. the ar-
gument of a Preposition or Determiner cannot
be semantically specified as in the case of the
verbal arguments.
5 Conclusions
The paper analyzes the annotation of the RS in
the existing treebanks by referring to a notion
of RS which is a generalization of dependency.
9In 1,500 TUT sentences we find 591 occurrences of
this Preposition.
10In figure 3, we marked the semantic component of
these cases with .
According to this notion, the RS includes types
of linguistic knowledge which are different, but
which have in common that they can be repre-
sented by a dependency paradigm rather than
to a constituency-based one.
The paper identifies two major motivations
for exploiting RS in treebank annotation:
language-dependent motivations that have de-
termined the use of dependency for the repre-
sentation of treebanks of free word order lan-
guages, and task-dependent motivations that
have determined a wider use of relations in tree-
banks.
In the second part of the paper, we show a sys-
tem for the annotation of RS, i.e. the ARS,
and how the ARS can be used for the an-
notation of a dependency-based treebank, the
TUT whose schema augments classical depen-
dency (functional-syntactic) relations with mor-
phological and semantic knowledge according to
the above mentioned notion of RS.
References
A. Abeille?, editor. 2003. Building and using
syntactically annotated corpora. Kluwer, Dor-
drecht.
A. Bo?hmova, J. Panevova?, and P. Sgall. 1999.
Syntactic tagging: procedure for the transi-
tion from analytic to the tectogrammatical
treestructures. In Proc. of 2nd Workshop on
Text, speech and dialog, pages 34?38.
A. Bo?hmova?, J. Hajic?, E. Hajic?ova?, and
B. Hladka?. 2003. The Prague Dependency
Treebank: A three level annotation scenario.
In Abeille? (Abeille?, 2003), pages 103?127.
C. Bosco. 2004. A grammatical rela-
tion system for treebank annotation.
Ph.D. thesis, University of Torino.
http://www.di.unito.it/?bosco/.
T. Brants, W. Skut, and H. Uszkoreit. 2003.
Syntactic annotation of a German newspaper
corpus. In Abeille? (Abeille?, 2003), pages 73?
87.
J. Bresnan, editor. 1982. The mental represen-
tation of grammatical relations. MIT Press,
Cambridge.
S. Buchholz. 2002. Using grammatical rela-
tions, answer frequencies and the World Wide
Web for TREC Question Answering. In Proc.
of TREC 2001, pages 502?509.
M. Collins and S. Miller. 1997. Semantic tag-
ging using a probabilistic context free gram-
mar. In Proc. of 6th Workshop on Very Large
Corpora.
E. Hajic?ova? and M. Ceplova?. 2000. Deletions
and their reconstruction in tectogrammatical
syntactic tagging of very large corpora. In
Porc. of COLING 2000, pages 278?284.
C. Han, B. Lavoie, M. Palmer, O. Rambow,
R. Kittredge, T. Korelsky, N. Kim, and
M. Kim. 2000. Handling structural diver-
gences and recovering dropped arguments in a
Korean/English machine translation system.
In Proc. of AMTA 2000, pages 40?54.
D. Hindle and M. Rooth. 1991. Structural am-
biguity and lexical relations. In Proc. of ACL
91, pages 229?236.
J. Hockenmaier. 2003. Parsing with generative
models of predicate-argument structure. In
Proc. of ACL 2003.
R. Hudson. 1990. English Word Grammar.
Basil Blackwell, Oxford and Cambridge.
K.C. Litkowski. 1999. Question-answering us-
ing semantic relation triples. In Proc. of
TREC-8, pages 349?356.
M. Marcus, B. Santorini, and M.A.
Marcinkiewicz. 1993. Building a large
annotated corpus of English: The Penn
Treebank. Computational Linguistics,
19:313?330.
M. Marcus, G. Kim, M.A. Marcinkiewicz,
R. MacIntyre, A. Bies, M. Ferguson, K. Katz,
and B. Schasberger. 1994. The Penn Tree-
bank: Annotating predicate argument struc-
ture. In Proc. of HLT-94.
A. Mazzei and V. Lombardo. 2004a. Building a
large grammar for Italian. In Proc. of LREC
2004, pages 51?54.
A. Mazzei and V. Lombardo. 2004b. A com-
parative analysis of extracted grammars. In
Proc. of ECAI 2004.
I.A. Mel?c?uk. 1988. Dependency Syntax: theory
and practice. SUNY, Albany.
S. Montemagni, F. Barsotti, M. Battista,
and N. Calzolari. 2003. Building the Ital-
ian syntactic-semantic treebank. In Abeille?
(Abeille?, 2003), pages 189?210.
S. Oepen, K. Toutanova, S. Shieber, C.D. Man-
ning, D. Flickinger, and T. Brants. 2002. The
LinGO Redwoods treebank: motivation and
prliminary applications. In Proc. of COLING
2002, pages 1253?1257.
M. Palmer, J. Rosenzweig, and S. Cotton. 2001.
Automatic predicate argument analysis of the
Penn Treebank. In Proc. of HLT 2001.
D.M. Perlmutter. 1983. Studies in Relational
Grammar 1. University of Chicago Press.
O. Rambow, C. Creswell, R. Szekely, H. Taber,
and M. Walker. 2002. A dependency tree-
bank for English. In Proc. of LREC 2002,
pages 857?863.
L. Renzi, editor. 1988. Grande grammatica
italiana di consultazione, vol. I. Il Mulino,
Bologna.
W. Skut, T. Brants, B. Krenn, and H. Uszkor-
eit. 1998. A linguistically interpreted corpus
of German in newspaper texts. In Proc. of
LREC 98, pages 705?713.
O. Stock. 1989. Parsing with flexibility, dy-
namic strategies, and idioms in mind. Com-
putational Linguistics, 15(1):1?17.
L. van der Beek, G. Bouma, R. Malouf, and
G. van der Noord. 2002. The Alpino depen-
dency treebank. In Proc. of CLIN 2001.
Proceedings of the Linguistic Annotation Workshop, pages 164?167,
Prague, June 2007. c?2007 Association for Computational Linguistics
Multiple-step treebank conversion: from dependency to Penn format
Cristina Bosco
Dipartimento di Informatica, Universita` di Torino
Corso Svizzera 185
10149 Torino - Italia
bosco@di.unito.it
Abstract
Whilst the degree to which a treebank sub-
scribes to a specific linguistic theory limits
the usefulness of the resource, the availabil-
ity of more formats for the same resource
plays a crucial role both in NLP and linguis-
tics. Conversion tools and multi-format tree-
banks are useful for investigating portability
of NLP systems and validity of annotation.
Unfortunately, conversion is a quite complex
task since it involves grammatical rules and
linguistic knowledge to be incorporated into
the converter program.
The paper focusses on a methodology for
treebank conversion which consists in split-
ting the process in steps corresponding to
the kinds of information that have to be con-
verted, i.e. morphological, structural or re-
lational syntactic. The advantage is the gen-
eration of a set of parallel treebanks fea-
turing progressively differentiated formats.
An application to the case of an Italian
dependency-based treebank in a Penn like
format is described.
1 Introduction
The usefulness of a treebank can be potentially lim-
ited by the degree to which it subscribes to a spe-
cific linguistic theory, and when a new annotation is
devised which employs a different linguistic frame-
work than a standard, the problem of how to relate
the syntactic schemes to one another arises. The in-
creasing availability of multi-format treebanks (e.g.
(Bick, 2006)) and the automatic conversion from
some formats to others, e.g. (Collins et al 1999;
Bahgat Shehata and Zanzotto, 2006), are attempts to
overcome this problem.
The automatic conversion of a treebank plays an
important role in NLP and linguistics. First, it in-
creases the exportability of the treebank, making us-
able tools developed for other resources. Second,
it underlies a full check on correctness and consis-
tency of the treebank annotation. Moreover, it is
an explicit comparison among formats and linguis-
tic frameworks. Therefore, a conversion is crucial
for overcoming the limits imposed by data in for-
mats that realize different grammatical theories to
very important activities such as parsing evaluation
and comparative testing of the adequateness of a rep-
resentation for particular linguistic phenomena, lan-
guages and/or tasks. For instance, the availability of
parallel annotations, and among them one in Penn
format, can be of some aid in investigating the irre-
producibility of the state-of-the-art results on tree-
banks or languages other than Penn and English,
as empirically demonstrated by, e.g., (Collins et al
1999) on Czech, (Dubey and Keller, 2003) on Ger-
man, (Corazza et al 2004) on Italian.
The paper, first, presents a methodology for the con-
version, then an application of the methodology to
the conversion of a dependency-based treebank into
a Penn-like format, and finally some remarks on the
implementation.
2 On the conversion methodology
The conversion of a treebank, annotated with some
format A, into format B consists in a simple filtering
164
and string manipulation only when A and B both fol-
low the same linguistic framework. Elsewhere the
conversion and development of parallel annotations
is a challenging task, which involves grammatical
rules and linguistic knowledge to be incorporated
into the converter programs (see e.g.(Musillo and
Sima?an, 2002) (Bick, 2006)). Nevertheless, par-
allel annotations which employ different linguistic
frameworks may serve as a suitable infrastructure
for comparisons among them. In fact, the defini-
tion of a conversion process is in itself a compari-
son between A and B, since it involves explicit as-
sumptions about how A and B relate, and a virtually
complete and correct mapping which translates ev-
ery analysis in A into the corresponding analysis in
B (Musillo and Sima?an, 2002).
We propose a methodology that consists in organiz-
ing the conversion in steps to be performed in cas-
cade. Each step outputs a new annotation format,
which differentiates from the previous one only with
respect to a single kind of knowledge, e.g. morpho-
logical, structural or functional syntactic. The main
advantage is in making available a set of parallel an-
notations for further use too.
In the next part, we describe the application of this
methodology to the conversion of the Turin Univer-
sity Treebank (henceforth TUT), which exploits a
dependency-based functionally rich annotation, into
a Penn-like format.
3 Converting TUT
TUT is a project for an Italian treebank that fea-
tures a dependency-based annotation following the
dependency grammar major tenets (Hudson, 1984).
The annotation is centred on a notion of morpho-
syntactic-semantic grammatical relation which aims
at represent the syntax-semantics interface by means
of the Augmented Relational Structure (Bosco,
2004). TUT currently includes 2.000 sentences (see
at http://www.di.unito.it/?tutreeb/) where 200 differ-
ent dependency relations are annotated. The figure
1 a) shows an example of TUT tree.
Other Italian resources1 implement, like TUT, par-
ticular representation formats and subscribe to spe-
cific linguistic frameworks, thus strongly limiting
1Two other larger Italian treebanks exist: Venice Italian
Treebank (VIT) (Delmonte, forthcoming) and Italian Syntactic
Semantic Treebank (ISST) (Barsotti et al 2001)
activities such as the application of state-of-the-art
parsers and parsing evaluation for this language.
The conversion of TUT in a Penn-like format is
a crucial step towards the exportability of the re-
source, but also a first attempt at overcoming these
limits by choosing as a further output a format of
widespread use in training, testing and evaluating.
Moreover, since the process is fully deterministic,
even if currently applied on a small corpus, the con-
version is in itself a preliminary validation of the re-
source and a demonstration that TUT annotation is
expressive at least as Penn.
In the next sections, we show the translation of de-
pendency into constituency trees and the manage-
ment of differences in PoS tagging, structural syn-
tactic, and syntactic-semantic relations faced during
the conversion. For detailed information about the
conversion of specific linguistic phenomena see at
http://www.di.unito.it/?tutreeb/noteparallele.zip.
3.1 First step: morphology
Since Italian is inflectionally richer than English,
TUT PoS tagset is richer than that of Penn
(see at http://www.di.unito.it/?tutreeb/syntcat-22-7-
02.doc), but we reduced it including only infor-
mation that Penn makes explicit too, as usual
in similar cases, see e.g. (Collins et al 1999)
and http://www.coli.uni-sb.de/sfb378/negra-corpus/.
The major differences with respect to Penn concern
tags of Verbs, which include fine-grained tempo-
ral information and are organized in three classes
(Modal, Auxiliary, Main), rather than two like in
Penn (Modal and non-Modal). Moreover, a fine-
grained variety of Adjectives and Pronouns enables
the recovery of information such as e.g. the owner
of an object (possessive Adjective).
The output of this first step includes compact tags
where features are expressed by short strings, like
in (Collins et al 1999). The following are exam-
ples of TUT PoS native vs reduced tags: for a com-
mon Noun ?nome? is (NOME NOUN COMMONM
SING) reduced in (NOU?CS); for the main infinite
Verb ?entrare? is (ENTRARE VERB MAIN INFI-
NITE PRES INTRANS) reduced in (VMA?IN).
3.2 Second step: structural syntax
The main issue in this step is the conversion
of dependency trees into Penn-like trees, i.e.
165
Figure 1: TUT (a), Constituency-TUT (b), Augmented-Penn (c) and Penn-like (d) representations of sen-
tence ALB-4 ?Il governo di Berisha appare in difficolta`? (The government of Berisha appears in trouble)
constituency structures implementing a minimal
projection strategy. It is approached in two sub-
steps: by first converting the TUT trees into a
standard linguistically motivated Xbar form (i.e.
Constituency-TUT), and then into Penn format (i.e.
Augmented-Penn), but both including the functional
syntactic information as TUT, i.e. the grammatical
relations (annotated on constituents).
Constituency-TUT is a TUT-oriented constituency-
based annotation that introduces in TUT trees the
types of the multiple words syntactic units (e.g. VP
and S). Each terminal category X corresponds to a
word of a TUT tree, and projects into non-terminal
nodes, namely the intermediate (Xbar) and maximal
(XP) projections of X. The distinction between
complements and adjuncts is here structurally
marked.
Augmented-Penn instead features a format struc-
turally isomorphic to Penn, but more functionally
annotated. It applies to the Constituency-TUT struc-
tures the minimal projection strategy2, and manages
the smoothing of structures conceptually different in
TUT and Penn, i.e. those of Determiners, auxiliary
Verbs and relative clauses. In figure 1 you can
see the same sentence in TUT, Constituency-TUT,
Augmented-Penn and Penn format.
The conversion from dependency to constituency
is not affected by the typical problem of non-
projective structures, since TUT represents them
through projective structures exploiting null ele-
ments. In dependency TUT, empty nodes also mark
dropped subjects, and Constituency-TUT exploits
2Each terminal category projects only when the constituent
includes more than one word
166
null elements for marking subjects which occur in
non standard position with respect to the Verb (i.e.
extraposed).
3.3 Third step: syntactic-semantic relations
While Penn features a description of relations based
only on a single component, TUT features an ex-
plicit, systematic annotation of three components
in each relation. Moreover, Penn includes a lower
number of values for each component than TUT3
and in various cases the Penn tags do not enable fine-
grained distinctions as TUT.
We applied the original Penn tags that can be mean-
ingful for Italian looking for correspondences be-
tween TUT and Penn relations (e.g. using the re-
lation LOC for all TUT LOC+ relations)4. Never-
theless, the multi-step methodology makes available
also a Penn-like format almost functionally rich as
TUT, i.e. Augmented-Penn5.
4 The converter
The five modules of the converter are: Mreduc for
the reduction of PoS tags; Mctu which converts in
the Constituency-TUT format; Maugp, which con-
verts Constituency-TUT in Augmented-Penn; Mpen,
which takes Augmented-Penn and outputs Penn;
Mpar that generates the parenthetical notation of the
output.
Mctu manages the conversion from dependency
to constituency by implementing the algorithm in
(Xia, 2001). It recovers the types of phrases that
(the grammatical category of) each node of the de-
pendency tree projects by using the linguistic knowl-
edge stored in dedicated tables.
The converter follows a lowest attachment strategy,
i.e. the projection of a dependent attaches to a pro-
jection of its head as lowly as possible, but, in con-
trast with (Xia, 2001), it pursues a maximal rather
3While Penn annotates 2 morpho-syntactic, 11 syntactic and
7 semantic relations, TUT features 40 morpho-syntactic, 55
functional-syntactic and 88 semantic items for building rela-
tions.
4The conversion from NEGRA to Penn maintains in-
stead the NEGRA relations, see at http://www.coli.uni-
sb.de/sfb378/negra-corpus/.
5The relations linking terminal nodes encompassed in a sin-
gle constituent in Augmented-Penn are deleted during the con-
version in this latter format.
than minimal projection heuristics, i.e. a category
always projects into intermediate and maximal pro-
jections.
5 Conclusions
The methodology for treebank conversion here pre-
sented splits the process in steps, which correspond
to the kinds of annotated linguistic knowledge that
have to be converted. Since each step outputs a new
annotation format, the advantage is the generation of
set of parallel treebanks.
The application of the methodology in the conver-
sion from a small Italian dependency-based treebank
to a Penn like format is described.
References
A. Bahgat Shehata and F.M. Zanzotto. 2006. A
dependency-based algorithm for grammar conversion.
Proc. of LREC ?06
F. Barsotti and R. Basili et al 2001. The Italian
Syntactic-Semantic Treebank: Architecture, Annota-
tion, Tools and Evaluation. Kluwer, Dordrecht.
E. Bick. 2006. Turning a dependency-based treebank
into a PSG-style constituent treebank. Proc. of LREC
06.
C. Bosco. 2004. A grammatical relation system for tree-
bank annotation. PhD thesis, University of Torino.
M. Collins, J. Hajic, L. Ramshaw, and C. Tillmann. 1999.
A statistical parser of Czech. Proc. of ACL?99.
A. Corazza, A. Lavelli, G. Satta, and R. Zanoli. 2004
Analyzing an Italian treebank with state-of-the-art sta-
tistical parser. In Proc. of TLT-2004.
R. Delmonte. forthcoming. Strutture sintattiche
dall?analisi computazionale di corpora di italiano
Franco Angeli, Milano, Italy.
A. Dubey and F. Keller. 2003. Probabilistic parsing
for German using sister-head dependencies. Proc. of
ACL?03.
R. Hudson. 1984. Word Grammar. Basil Blackwell,
Oxford and New York.
G. Musillo and K. Sima?an. 2002. Towards comparing
parsers from different linguistic frameworks. An infor-
mation theoretic approach. Proc. of Workshop Beyond
PARSEVAL.
F. Xia. 2001. Automatic grammar generation from two
different perspectives. PhD thesis, University of Penn-
sylvania.
167
Proceedings of the 7th Linguistic Annotation Workshop & Interoperability with Discourse, pages 61?69,
Sofia, Bulgaria, August 8-9, 2013. c?2013 Association for Computational Linguistics
Converting Italian Treebanks:
Towards an Italian Stanford Dependency Treebank
Cristina Bosco
Dipartimento di Informatica
Universita` di Torino
cristina.bosco@unito.it
Simonetta Montemagni
Istituto di Linguistica
Computazionale
?Antonio Zampolli?
(ILC?CNR)
simonetta.montemagni@ilc.cnr.it
Maria Simi
Dipartimento di Informatica
Universita` di Pisa
simi@unipi.it
Abstract
The paper addresses the challenge of con-
verting MIDT, an existing dependency?
based Italian treebank resulting from the
harmonization and merging of smaller re-
sources, into the Stanford Dependencies
annotation formalism, with the final aim
of constructing a standard?compliant re-
source for the Italian language. Achieved
results include a methodology for con-
verting treebank annotations belonging
to the same dependency?based family,
the Italian Stanford Dependency Treebank
(ISDT), and an Italian localization of the
Stanford Dependency scheme.
1 Introduction
The limited availability of training resources is
a widely acknowledged bottleneck for machine
learning approaches for Natural Language Pro-
cessing (NLP). This is also the case of dependency
treebanks within statistical dependency parsing.
Moreover, the availability of a treebank in a stan-
dard format strongly improves its usefulness, in-
creasing the number of tasks for which it can be
exploited and allowing the application of a larger
variety of tools. It also has an impact on the relia-
bility of achieved results, and, last but not least, it
permits comparability with other resources.
This motivated a variety of initiatives devoted
to the definition of standards for the linguistic an-
notation of corpora. Since the early 1990s, dif-
ferent initiatives have been devoted to the defi-
nition of standards for the linguistic annotation
of corpora with a specific view to re?using and
merging existing treebanks. The starting point
is represented by the EAGLES (Expert Advisory
Groups on Language Engineering Standards) ini-
tiative, which ended up with providing provisional
standard guidelines (Leech et al, 1996), operat-
ing at the level of both content (i.e. the linguistic
categories) and encoding format. More recent ini-
tiatives, e.g. LAF/GrAF (Ide and Romary, 2006;
Ide and Suderman, 2007) and SynAF (Declerck,
2008) representing on?going ISO TC37/SC4 stan-
dardization activities1, rather focused on the def-
inition of a pivot format capable of representing
diverse annotation types of varying complexity
without providing specifications for the annotation
of content categories (i.e., the labels describing the
associated linguistic phenomena), for which stan-
dardization appeared since the beginning to be a
much trickier matter. Recently, other standard-
ization efforts such as ISOCat (Kemps-Snijders et
al., 2009) tackled this latter issue by providing a
set of data categories at various levels of granu-
larity, each accompanied by a precise definition of
its linguistic meaning. Unfortunately, the set of
dependency categories within ISOCat is still basic
and restricted. We can thus conclude that as far as
content categories are concerned de jure standards
are not suitable at the moment for being used in
the harmonization and merging of real dependency
treebanks.
The alternative to de jure standards is repre-
sented by de facto standards. For what concerns
dependency?based annotation, which in the recent
past has been increasingly exploited for a wide
range of NLP?based information extraction tasks,
the Stanford Dependency (SD) scheme (de Marn-
effe et al, 2006) is gaining popularity as a de
facto standard. Among the contexts where SD has
been applied, we can observe e.g. parsers and
corpora exploited in biomedical information ex-
traction, where it has been suggested to be a suit-
able unifying syntax formalism for several incom-
patible syntactic annotation schemes (Pyysalo et
al., 2007). SD has already been applied to differ-
ent languages, e.g. Finnish in the Turku treebank
(Haverinen et al, 2010), Swedish in the Talbanken
1
http://www.tc37sc4.org/
61
treebank2, Chinese in the Classical Chinese Liter-
ature treebank (Seraji et al, 2012) or Persian in the
Uppsala Persian Dependency Treebank (Lee and
Kong, 2012).
In this paper, we describe the conversion of
an existing Italian resource into the SD annota-
tion scheme, with the final aim of developing a
standard?compliant treebank, the Italian Stanford
Dependency Treebank (ISDT). The reference re-
source, called Merged Italian Dependency Tree-
bank (MIDT)3 (Bosco et al, 2012), is the re-
sult of a previous effort in the direction of im-
proving interoperability of data sets available for
Italian by harmonizing and merging two exist-
ing dependency?based resources, i.e. TUT and
ISST?TANL, adopting incompatible annotation
schemes. The two conversion steps are visual-
ized in Figure 1: note that in both of them the
focus is on the conversion and merging of the con-
tent of linguistic annotation; for what concerns the
representation format, all involved treebanks fol-
low the CoNLL tab?separated format (Buchholz
and Marsi, 2006) which nowadays represents a de
facto standard within the international dependency
parsing community. In this paper, we deal with the
second step, focusing on the MIDT to ISDT con-
version.
Starting from a comparative analysis of the
MIDT and SD annotation schemes, we developed
a methodology for converting treebank annota-
tions belonging to the same dependency?based
family based on:
? a comparative analysis of the source and tar-
get annotation schemes, carried out with re-
spect to different dimensions of variation,
ranging from head selection criteria, depen-
dency tagset granularity to defined annotation
criteria;
? the analysis of the performance of a state?of?
the?art dependency parser by using as train-
ing the source and the target treebanks;
? the mapping of the MIDT annotation scheme
onto the SD data categories.
2
http://stp.lingfil.uu.se/?nivre/swedish treebank/
talbanken-stanford-1.2.tar.gz
3MIDT was developed within the project PARLI
(http://parli.di.unito.it/project en.html) partially
funded in 2008-2012 by the Italian Ministry for Univer-
sity and Research, for fostering the development of new
resources and tools that can operate together, and the
harmonization of existing ones. MIDT is documented at
http://medialab.di.unipi.it/wiki/MIDT/.
Figure 1: Merging and conversion process from
TUT and ISST?TANL to MIDT and ISDT.
In this conversion process, we had to deal
with the peculiarities of the Italian language: the
tackled issues range from morphological richness,
presence of clitic pronouns to relatively free word
order and pro?drop, all properties requiring spe-
cific annotation strategies to be dealt with. There-
fore, a by product of this conversion process is rep-
resented by the specialization of the SD annotation
scheme with respect to Italian.
In the following sections, after briefly describ-
ing the methodology applied for the development
of the MIDT resource (Section 2), we focus on a
comparative analysis of the MIDT and SD anno-
tation schemes (Section 3) followed by a descrip-
tion of the implemented conversion process (Sec-
tion 4). Finally, we present the results obtained by
training a parsing system on the newly developed
resource (Section 5).
2 The starting point: MIDT
ISDT originates from the conversion towards the
SD standard of the MIDT resource, whose origins
and development are summarised below (for more
details on this harmonization and merging step the
interested reader is referred to Bosco et al (2012)).
2.1 The ancestors: TUT and ISST?TANL
The TUT and ISST?TANL resources differ under
different respects, at the level of both corpus com-
position and adopted annotation schemes.
For what concerns size and composition, TUT
(Bosco et al, 2000)4 currently includes 3,452 Ital-
ian sentences (i.e. 102,150 tokens in TUT native,
4
http://www.di.unito.it/?tutreeb/
62
and 93,987 in CoNLL) and represents five dif-
ferent text genres (newspapers, Italian Civil Law
Code, JRC-Acquis Corpus5, Wikipedia and the
Costituzione Italiana), while ISST?TANL includes
3,109 sentences (71,285 tokens in CoNLL for-
mat), which were extracted from the ?balanced?
ISST partition (Montemagni et al, 2003) exem-
plifying general language usage as testified in arti-
cles from newspapers and periodicals, selected to
cover a high variety of topics (politics, economy,
culture, science, health, sport, leisure, etc.).
As far as the annotation scheme is concerned,
TUT applies the major principles of the Word
Grammar theoretical framework (Hudson, 1984)
using a rich set of dependency relations, but it in-
cludes null elements to deal with non?projective
structures, long distance dependencies, equi phe-
nomena, pro?drop and elliptical structures6. The
ISST?TANL annotation scheme originates from
FAME (Lenci et al, 2008), an annotation scheme
which was developed starting from de facto stan-
dards and which was specifically conceived for
complying with the basic requirements of parsing
evaluation, and ? later ? for the annotation of un-
restricted Italian texts.
2.2 Creating the merged MIDT resource
The challenge we tackled in the development of
MIDT was to translate between different annota-
tion schemes and merging them. We focused on
the harmonization and merging of content cate-
gories. To this specific end, we defined a set of
linguistic categories to be used as a ?bridge? be-
tween the specific TUT and ISST?TANL schemes.
First of all, we analyzed similarities and dif-
ferences of the underlying schemes, which led to
identify a core of syntactic constructions for which
the annotations agreed, but also to highlight vari-
ations in head selection criteria, inventory of de-
pendency types and their linguistic interpretation,
projectivity constraint and analysis of specific syn-
tactic constructions. For instance, TUT always
assigns heads on the basis of syntactic criteria,
i.e. the head role is played by the function word
in all constructions where one function word and
one content word are involved (e.g. determiner?
noun, verb?auxiliary), while in ISST?TANL head
selection follows from a combination of syntactic
5
http://langtech.jrc.it/JRC-Acquis.html
6The CoNLL format does not include null elements, but
the projectivity constraint is maintained at the cost of a loss
of information with respect to native TUT in some cases.
and semantic criteria (e.g. in determiner?noun and
auxiliary?verb relations the head role is played by
the content word). Both schemes assume differ-
ent inventories of dependency types and degrees
of granularity in the representation of specific re-
lations. Moreover, whereas ISST?TANL allows
for non?projective representations, TUT assumes
the projectivity constraint. Further differences are
concerned with the treatment of coordination and
punctuation, which are particularly problematic to
deal with in the dependency framework.
As a second step, we defined a bridge anno-
tation, i.e. the MIDT dependency tagset, fol-
lowing practical considerations: bridge categories
should be automatically reconstructed by exploit-
ing morpho?syntactic and dependency informa-
tion contained in the original resources; for some
constructions, the MIDT representation is parame-
terizable, i.e. the tagset provides two different op-
tions, corresponding to the TUT and ISST?TANL
annotation styles (e.g. for determiner?noun or
preposition?noun relations).
The final MIDT tagset contains 21 dependency
tags (as opposed to the 72 tags of TUT and the
29 of ISST?TANL), including the different op-
tions provided for the same type of construction.
CoNLL is used as encoding format.
3 Comparing the MIDT and SD schemes
The MIDT and SD annotation schemes are both
dependency?based and therefore fall within the
same broader family. This fact, however, does
not guarantee per se an easy and linear conver-
sion process from one to the other: as pointed out
in Bosco et al (2012), harmonizing and convert-
ing annotation schemes can be quite a challenging
task, even when this process is carried out within
a same paradigm and with respect to the same lan-
guage. In the case at hand, this task is made easier
thanks to the fact that the MIDT and SD schemes
share similar design principles: for instance, in
both cases preference is given a) to relations which
are semantically contentful and useful to appli-
cations, or b) to relations linking content words
rather than being indirectly mediated via function
words (see design principles 2 and 5 respectively
in de Marneffe and Manning (2008a)). Another
peculiarity shared by MIDT and SD consists in the
fact that they both neutralize the argument/adjunct
distinction for what concerns prepositional com-
plements, which is taken to be ?largely useless
63
in practice? as de Marneffe and Manning (2008a)
claim. In spite of their sharing similar design prin-
ciples, there are also important differences con-
cerning the inventory of dependency types and
their linguistic interpretation, the head selection
criteria as well as the treatment of specific syn-
tactic constructions. In what follows, we summa-
rize the main dimensions of variation between the
MIDT and SD annotation schemes, with a specific
view to the conversion issues they arise.
3.1 Granularity and inventory of dependency
types
MIDT and SD annotation schemes assume differ-
ent inventories of dependency types characterized
by different degrees of granularity in the repre-
sentation of specific relations: the adopted depen-
dency tagset includes 21 dependency types in the
case of MIDT and 48 in the case of SD. Interest-
ingly however, it is not always the case that the
finer grained annotation scheme ? i.e. SD ? is the
one providing more granular distinctions: whereas
this is typically the case, there are also cases in
which more granular distinction are adopted in the
MIDT annotation scheme.
Consider first SD relational distinctions which
are neutralized at the level of the MIDT annota-
tion. As reported in de Marneffe and Manning
(2008a), so?called NP?internal relations are crit-
ical in real world applications: the SD scheme
therefore includes many relations of this kind,
e.g. appos (appositive modifier), nn (noun com-
pound), num (numeric modifier), number (ele-
ment of compound number) and abbrev (abbre-
viation). In MIDT all these relation types are
lumped together under the general heading of mod
(modifier). To deal with these cases, the MIDT to
SD conversion has to simultaneously combine de-
pendency and morpho?syntactic information (e.g.
the morpho?syntactic category of the nodes in-
volved in the relation), which however is not al-
ways sufficient as in the case of appositive modi-
fiers for which further evidence is needed.
Let us consider now the reverse case, i.e. in
which MIDT adopts finer?grained distinctions
with respect to SD. For instance, MIDT envis-
ages different relation types for auxiliary?verb and
preposition?verb (within infinitive clauses, be they
modifiers or subcategorized arguments) construc-
tions, which are aux and prep respectively. By
contrast, SD represents both cases in terms of the
same relation type, i.e. aux. Significant differ-
ences between English and Italian justify the dif-
ferent strategies adopted in SD and MIDT respec-
tively: in English, open clausal complements are
always introduced by the particle ?to?, whereas in
Italian different prepositions can introduce them
(i.e. ?a?, ?di?, ?da?), which are selected by the gov-
erning head. The SD representation of the element
introducing infinitival complements and modifiers
in terms of aux might not be appropriate as far as
Italian is concerned and it would be preferable to
have a specific relation for dealing with introduc-
ers of infinitival complements (like complm in the
case of finite clausal complements): as reported
in Section 4, we are currently evaluating different
representational options with a specific view to the
syntactic peculiarities of the Italian language.
Another interesting and more complex exam-
ple can be found for what concerns the parti-
tioning of the space of sentential complements.
MIDT distinguishes between mod(ifiers) on the
one hand and subcategorised arg(uments) on the
other hand: note that whereas arg is restricted
to clausal complements subcategorized for by the
governing head, the mod relation covers different
types of modifiers (nominal, adjectival, clausal,
adverbial, etc.). By contrast, SD resorts to spe-
cific relations for dealing with sentential comple-
ments: in particular, distinct relation types are en-
visaged depending on e.g. whether the clause is
a subcategorized complement or a modifier (see
e.g. ccomp vs advcl), or whether the gov-
ernor is a verb or a noun (see e.g. xcomp vs
infmod), or whether the clausal complement is
headed by a finite or non?finite verb (see e.g.
ccomp vs xcomp). Starting from MIDT, the
finer?grained distinctions adopted by SD for deal-
ing with clausal complements can be recovered by
combining dependency information with morpho-
syntactic one (e.g. the mood of the verbal head of
the clausal complements or the morpho?syntactic
category of the governing head).
3.2 Head selection
Criteria for distinguishing the head and the de-
pendent within relations have been widely dis-
cussed in the linguistic literature in all frameworks
where the notion of syntactic head plays an im-
portant role. Unfortunately, different criteria have
been proposed, some syntactic and some seman-
tic, which do not lead to a single coherent notion
64
of dependency (Ku?bler et al, 2009). Head se-
lection thus represents an important and unavoid-
able dimension of variation among dependency
annotation schemes, especially for what con-
cerns constructions involving grammatical func-
tion words. MIDT and SD agree on the treat-
ment of tricky cases such as the determiner?noun
relation within nominal groups, the preposition?
noun relation within prepositional phrases as well
as the auxiliary?main verb relation in complex
verbal groups. In both schemes, head selection
follows from a combination of syntactic and se-
mantic criteria: i.e. whereas in the determiner?
noun and auxiliary?verb constructions the head
role is assigned to the semantic head (noun/verb),
in preposition?noun constructions the head role is
played by the element which is subcategorized for
by the governing head, i.e. the preposition which
is the syntactic head but can also be seen as as a
kind of role marker. In this area, the only but not
negligible difference is concerned with subordi-
nate clauses whose head in SD is assumed to be the
verb, rather than the introducing element (whether
a preposition or a subordinating conjunction) as in
MIDT: in this case, the MIDT to SD conversion
requires restructuring of the dependency tree.
3.3 Coordination and punctuation
In both MIDT and SD schemes, coordinate con-
structions are considered as asymmetric structures
with a main difference: while in MIDT both
the conjunction and conjuncts starting from the
second one are linked to the immediately pre-
ceding conjunct, in SD the conjunction(s) and
the subsequent conjunct(s) are all linked to the
first one. Also the treatment of punctuation is
quite problematic in the framework of a depen-
dency annotation scheme, although this has not
been specifically dealt with in the linguistic liter-
ature. Whereas MIDT has its own linguistically?
motivated strategy to deal with punctuation, SD
does not appear to provide explicit and detailed
annotation guidelines in this respect.
3.4 MIDT? or SD?only relations
It is not always the case that a dependency type
belonging to the MIDT or SD annotation scheme
has a counterpart in the other. Let us start from SD
relation types which are not explicitly encoded in
the MIDT source annotation, due to constraints of
the CoNLL representation format. This is the case
of the ref dependency linking the relative word
introducing the relative clause and its antecedent,
or of the xsubj relation which in spite of its being
part of the original TUT and ISST resources have
been omitted from the most recent and CoNLL?
compliant versions, which represent the starting
point of in MIDT: in both cases, the ?one head
per dependent? constraint of the CoNLL repre-
sentation format is violated. From this, it fol-
lows that ISDT won?t include these dependency
types. Other SD relations which were part of the
MIDT?s ancestors but were neutralized in MIDT
are concerned with semantically?oriented distinc-
tions which turned out to be problematic to be
reliably identified in parsing in spite of their be-
ing explicitly encoded in both source annotation
schemes (Bosco et al, 2012). This is the case of
the indirect object relation (iobj) or of temporal
modifiers (tmod).
The MIDT relation types which instead do not
have a corresponding relation in SD are those
that typically represent Italian?specific peculiari-
ties. This is the case of the clit(ic) dependency,
linking clitic pronouns to the verbal head they re-
fer to. In MIDT, whenever appropriate clitic pro-
nouns are assigned a label that reflects their gram-
matical function (e.g. ?dobj? or ?iobj?): this is the
case of reflexive constructions (Maria si lava lit.
?Maria her washes? meaning that ?Maria washes
herself?) or of complements overtly realized as
clitic pronouns (Giovanni mi ha dato un libro lit.
?Giovanni to?me has given a book? meaning that
?Giovanni gave me a book?). With pronominal
verbs, in which the clitic can be seen as part of
the verbal inflection, a specific dependency rela-
tion (clit) is resorted to link the clitic pronoun
to the verbal head: for instance, in a sentence like
la sedia si e` rotta lit. ?the chair it is broken? mean-
ing that ?the chair broke?, the dependency linking
the clitic si to the verbal head is clit.
4 The MIDT to SD conversion
The conversion process followed to generate the
Italian Stanford Dependency Treebank (ISDT)
starting from MIDT is based on the results of the
comparative analysis reported in the previous sec-
tion. It is organized in two different steps: the
first one aimed at generating an enriched version
of the MIDT resource, henceforth referred to as
MIDT++, including SD?relevant distinctions neu-
tralized in MIDT, and the second one in charge
of converting the MIDT++ annotation in terms
65
of the Stanford Dependencies as described in de
Marneffe and Manning (2008b) specialized with
respect to the Italian language syntactic peculiar-
ities. Note that also the resulting ISDT resource
adheres to the CoNLL tabular format.
The first step relied on previous harmonization
work leading to the construction of the MIDT re-
source starting from the CoNLL?compliant TUT
and ISST?TANL treebanks (described in Bosco
et al (2012)). During this step, we recovered
from the native resources relevant distinctions
that have been neutralized in MIDT, because of
choices made in the design of the MIDT anno-
tation scheme (e.g. indirect objects or temporal
modifiers which are assigned an underspecified
representation in MIDT, see Section 3) or simply
because the harmonization of the source annota-
tion schemes was not possible without manual re-
vision (this is the case of appositions, explicitly
annotated only in TUT).
Other issues tackled during this first pre?
processing step include the treatment of coordi-
nation and multi?word expressions. Since in SD
conjunctions and conjuncts, after the first one, are
all linked to the first conjunct, exactly as it was
in ISST?TANL, the intermediate MIDT++ is gen-
erated according to this scheme, with no conver-
sion for ISST?TANL and by restructuring the dif-
ferent cascading coordination style of TUT. For
what concerns multi?word expressions, we unified
the multi?word repertoires of the two resources.
Another area that required some pre?processing
with manual revision is concerned with the anno-
tation of the parataxis relation. The augmented re-
source resulting from this pre?processing step, i.e.
MIDT++, is used as a ?bridge? towards the SD
representation format.
Starting from the results of the comparative
analysis detailed in Section 3, we defined conver-
sion patterns which can be grouped into two main
classes according to whether they refer to individ-
ual dependencies (case A) or they involve depen-
dency subtrees due to head reassignment (case B).
A) Structure?preserving mapping rules involv-
ing dependency retyping without restructur-
ing of the tree:
A.1) 1:1 mapping requiring dependency retyp-
ing only (e.g. MIDT prep > SD pobj, or
MIDT subj > SD nsubj);
A.2) 1:n mapping requiring finer?grained de-
pendency retyping (e.g. MIDT mod > SD
abbrev | amod | appos | nn | nnp |
npadvmod | num | number | partmod |
poss | preconj | predet | purplcl |
quantmod | tmod);
B) Tree restructuring mapping rules involving
head reassignment and dependency retyping.
Focusing on dependency retyping we distin-
guish the following cases:
B.1) head reassignment with 1:1 dependency
mapping (e.g. MIDT subj > SD csubj
in the case of clausal subjects);
B.2) head reassignment with 1:n dependency
mapping based on finer?grained distinctions
(e.g. MIDT arg> SD xcomp? ccomp, or
MIDT mod (with verbal head) > SD advcl
| infmod | prepc | purpcl).
In what follows, we will exemplify how the ab-
stract patterns described above have been trans-
lated into MIDT to SD conversion rules. The
conversion of the MIDT arg relation, referring
to clausal complements subcategorized for by the
governing head, represents an interesting example
of 1:n dependency mapping with tree restructuring
(case B.2 above). In MIDT, clausal complements,
either finite or non?finite clauses, are linked to the
governing head (which can be a verb, a noun or an
adjective) as arg(uments), with a main difference
with respect to SD, i.e. that the head of the clausal
complement is the word introducing it (be it a
preposition or a subordinating conjunction) rather
than the verb of the clausal complement. The main
conversion rules to SD can be summarised as fol-
lows, where the? separates the left from the right
hand side of the rule, the notation x ?dep label y
denotes that token y is governed by token x with
the dependency label specifying the relation hold-
ing between the two (a MIDT tag is found on the
left side of the rule, whereas an SD one occurs on
the right side):
1. $1[S|V |A] ?arg $2[E] ?prep $3[Vinfinitive] ?
$1 ?xcomp $3; $3 ?aux $2
2. $1[S|V |A] ?arg $2[CS] ?sub $3[Vfinite] ?
$1 ?ccomp $3; $3 ?complm $2
In the rules, the $ followed by a number is a vari-
able indentifying a given dependency node. Con-
straints on tokens in the left?hand side of the rule
66
(a) MIDT representation (b) SD representation
Figure 2: MIDT vs SD annotation of the same sentence
are reported within square brackets: they are typi-
cally concerned with the grammatical category of
the token (CS stands for subordinative conjunc-
tion, E for preposition, S for noun, V for verb).
Rule 1 above handles the transformation of the in-
finitival clause from the MIDT representation to
SD. Consider as an example the MIDT depen-
dency tree in Figure 2(a) for the sentence Gio-
vanni ha dichiarato ai giudici di avere pagato i
terroristi, lit. ?Giovanni told to?the judges to have
paid the terrorists? ?Giovanni told the judges that
he has paid the terrorists? whose SD conversion is
reported in Figure 2(b). By comparing the trees,
we see that head restructuring and dependency re-
typing have both been performed in the conversion
of the infinitival clause representation: in MIDT
the head of the infinitival clause is the preposition
whereas in SD it is the verb; the relation linking
the governing head and the head of the infinitival
clause is arg in MIDT and xcomp in SD.
Currently, the conversion script implements
over 100 rules which are still being tested with the
final aim of finding the most appropriate represen-
tation with respect to the Italian syntactic pecu-
liarities. The problematic area of sentential com-
plements is still being explored to find out ade-
quate representational solutions. Consider as an
example the case of the word introducing infiniti-
val complements: Figure 2(b) above, reporting the
result of the SD conversion, shows that the same
aux relation is used to link the preposition to the
verb heading the infinitival complement as well as
the auxiliary avere ?to have? to the main verb. This
solution might not be so appropriate given the pe-
culiarities of the Italian language, where different
prepositions (lexically selected by the governing
head) can introduce infinitival complements.
During the conversion step, the SD scheme
has been specialized with respect to the Italian
language. There are SD dependency relations
which were excluded from the Italian localization
of the standard scheme, either because not ap-
propriate given the syntactic peculiarities of this
language (this is the case e.g. of the prt re-
lation) or because they could not be recovered
from the CoNLL?compliant versions of the re-
sources we started from (see e.g. the relations
ref or xsubj). The SD tagset was also extended
with new dependency types: this is the case of
the clit relation used for dealing with clitics in
pronominal verbs, or of the nnp relation specifi-
cally defined for compound proper nouns. Other
specializations are concerned with the use of un-
derspecified categories: rather than resorting to the
most generic relation, i.e. dep used when it is im-
possible to determine a more precise dependency
relation, we exploited the hierarchical organiza-
tion of SD typed dependencies, i.e. we used the
comp and mod relations when we could not find
an appropriate relation within the set of their de-
pendency subtypes.
5 Using ISDT as training corpus
In this section, we report the results achieved
by using ISDT for training a dependency parser,
namely DeSR (Dependency Shift Reduce), a
transition?based statistical parser (Attardi, 2006),
where it is possible to specify, through a config-
uration file, the set of features to use (e.g. POS
tag, lemma, morphological features) and the clas-
sification algorithm (e.g. Multi-Layer Perceptron
(Attardi and Dell?Orletta, 2009), Support Vector
Machine, Maximum Entropy). DeSR has been
trained on TUT and ISST?TANL in the frame-
work of the evaluation campaigns Evalita, for
the last time in 2011 (Bosco and Mazzei, 2012;
Dell?Orletta et al, 2012). More recently DeSR has
been trained and tested on MIDT: the results ob-
67
Table 1: Parsing results with ISDT resources
TRAINING TEST PARSER LAS LAS no punct
TUT?SDT train TUT?SDT test DeSR MLP 84.14% 85.57%
ISST?TANL?SDT train ISST?TANL?SDT test DeSR MLP 80.55% 82.11%
TUT+ISST?TANL?SDT train TUT+ISST?TANL?SDT test DeSR MLP 83.34% 84.16%
TUT+ISST?TANL?SDT train TUT?SDT test DeSR MLP 84.14% 85.79%
TUT+ISST?TANL?SDT train ISST?TANL?SDT test DeSR MLP 79.94% 81.86%
tained on both the MIDT version of the individual
TUT and ISST?TANL resources and the merged
resource are reported in (Bosco et al, 2012): the
best scores, achieved applying a parser combina-
tion strategy and training on TUT inMIDT format,
are LAS 90.11% and LAS 91.58% without punc-
tuation.
For the experiments on the ISDT resource we
used a basic and fast variant of the DeSR parser
based on Multi-Layer Perceptron (MLP). In fact,
the purpose of the experiment was not to optimize
the parser for the new resource but to compare
relative performances of the same parser on dif-
ferent versions of the same resources. As a re-
sult, the substantial drop in performance observed
with respect to the MIDT resource is in part due to
this factor, and cannot be totally attributed to the
greater complexity of the SD scheme or quality of
the conversion output.
Table 1 reports, in the first two rows, the val-
ues of Labeled Attachment Score (LAS, with and
without punctuation) obtained against the TUT?
ISDT and ISST?TANL?ISDT datasets. The differ-
ent performance of the parser on the two converted
datasets (TUT?ISDT and ISST?TANL?ISDT) is in
line with what was observed in previous exper-
iments with native resources and MIDT (Bosco
et al, 2010; Bosco et al, 2012); therefore, the
composition of the training and test corpora can
still be identified as possible causes for such a dif-
ference. The results reported in rows 3?5 have
been obtained by training DeSR with the larger
resource including both TUT?ISDT and ISST?
TANL?ISDT. As test set, we used a combination
of the two test sets (row 3) and test sets from the
two data sets separately (rows 4 and 5). The pre-
liminary results achieved by using ISDT are en-
couraging, in line with what was obtained on the
WSJ for English and reported in (Cer et al, 2010),
where the best results in labeled attachment preci-
sion, achieved by a fast dependency parser (Nivre
Eager feature Extract), is 81.7. For the time being,
training with the larger combined resource does
not seem to provide a substantial advantage, con-
firming results obtained with MIDT, despite the
fact that in the conversion from MIDT to ISDT
a substantial effort was spent to further harmonize
the two resources.
6 Conclusion
In this paper, we addressed the challenge of con-
verting MIDT, an existing dependency?based Ital-
ian treebank resulting from the harmonization and
merging of smaller resources adopting incompati-
ble annotation schemes, into the Stanford Depen-
dencies annotation formalism, with the final aim
of constructing a standard?compliant resource for
the Italian language. SD, increasingly acknowl-
edged within the international NLP community as
a de facto standard, was selected for its being de-
fined with a specific view to supporting informa-
tion extraction tasks.
The outcome of this still ongoing effort is three?
fold. Starting from a comparative analysis of
the MIDT and SD annotation schemes, we devel-
oped a methodology for converting treebank anno-
tations belonging to the same dependency?based
family. Second, Italian has now a new standard?
compliant treebank, i.e. the Italian Stanford De-
pendency Treebank (ISDT, 200,516 tokens)7: we
believe that this conversion will significantly im-
prove the usability of the resource. Third, but not
least important, we specialized the Stanford De-
pendency annotation scheme to deal with the pe-
culiarities of the Italian language.
7 Acknowledgements
This research was supported by a Google ?gift?.
Giuseppe Attardi helped with the experiments
with the DeSR parser, Roberta Montefusco pro-
duced the converter to the collapsed/propagated
version of ISDT and in so doing helped us to re-
duce inconsistencies and errors in the resource.
7Both the MIDT and ISDT resources are released by
the authors under the Creative Commons Attribution?
NonCommercial-ShareAlike 3.0 Unported licence
(http://creativecommons.org/licenses/by-nc-sa/3.0/
legalcode.txt).
68
References
G. Attardi and F. Dell?Orletta. 2009. Reverse revision
and linear tree combination for dependency parsing.
In Proceedings of of NAACL HLT (2009).
G. Attardi. 2006. Experiments with a multilanguage
non?projective dependency parser. In Proceedings
of the CoNLL-X ?06, New York City, New York.
C. Bosco and A. Mazzei. 2012. The evalita 2011 pars-
ing task: the dependency track. In Working Notes of
Evalita?11, Roma, Italy.
C. Bosco, V. Lombardo, L. Lesmo, and D. Vassallo.
2000. Building a treebank for italian: a data-driven
annotation schema. In Proceedings of the LREC?00,
Athens, Greece.
C. Bosco, S. Montemagni, A. Mazzei, V. Lombardo,
F. Dell?Orletta, A. Lenci, L. Lesmo, G. Attardi,
M. Simi, A. Lavelli, J. Hall, J. Nilsson, and J. Nivre.
2010. Comparing the influence of different treebank
annotations on dependency parsing. In Proceedings
of the LREC?10, Valletta, Malta.
C. Bosco, M. Simi, and S. Montemagni. 2012. Harmo-
nization and merging of two italian dependency tree-
banks. In Proceedings of the LREC 2012 Workshop
on Language Resource Merging, Istanbul, Turkey.
Sabine Buchholz and Erwin Marsi. 2006. Conll-x
shared task on multilingual dependency parsing. In
In Proc. of CoNLL, pages 149?164.
D. Cer, M.C. de Marneffe, D. Jurafsky, and C.D. Man-
ning. 2010. Parsing to stanford dependencies:
Trade-offs between speed and accuracy. In Proceed-
ings of the LREC?10), Valletta, Malta.
M.C. de Marneffe and C. Manning. 2008a. The stan-
ford typed dependencies representation. In Col-
ing 2008: Proceedings of the workshop on Cross-
Framework and Cross-Domain Parser Evaluation,
pages 1?8, Stroudsburg, PA, USA. Association for
Computational Linguistics.
M.C. de Marneffe and C.D. Manning. 2008b. Stan-
ford typed dependencies manual. Technical report,
Stanford University.
M.C. de Marneffe, B. MacCartney, and C.D. Manning.
2006. Generating typed dependency parses from
phrase structure parses. In Proceedings of 5th In-
ternational Conference on Language Resources and
Evaluation (LREC 2006).
T. Declerck. 2008. A framework for standardized syn-
tactic annotation. In Proceedings of the LREC?08,
Marrakech, Morocco.
F. Dell?Orletta, S. Marchi, S. Montemagni, G. Venturi,
T. Agnoloni, and E. Francesconi. 2012. Domain
adaptation for dependency parsing at evalita 2011.
In Working Notes of Evalita?11, Roma, Italy.
K. Haverinen, T. Viljanen, V. Laippala, S. Kohonen,
F. Ginter, and T. Salakoski. 2010. Treebanking
Finnish. In Proceedings of the 9th Workshop on
Treebanks and Linguistic Theories (TLT-9), pages
79?90, Tartu, Estonia.
R. Hudson. 1984. Word Grammar. Basil Blackwell,
Oxford and New York.
N. Ide and L. Romary. 2006. Representing linguistic
corpora and their annotations. In Proceedings of the
LREC?06, Genova, Italy.
N. Ide and K. Suderman. 2007. GrAF: A graph-based
format for linguistic annotations. In Proceedings of
the Linguistic Annotation Workshop, Prague, Czech
Republic.
M. Kemps-Snijders, M. Windhouwer, P. Wittenburg,
and S.E. Wright. 2009. Isocat: remodelling meta-
data for language resources. IJMSO, 4(4):261?276.
S. Ku?bler, R.T. McDonald, and J. Nivre. 2009. De-
pendency Parsing. Morgan & Claypool Publishers,
Oxford and New York.
John Lee and Yin Hei Kong. 2012. A dependency
treebank of classical chinese poems. In Proceed-
ings of the 2012 Conference of the North Ameri-
can Chapter of the Association for Computational
Linguistics: Human Language Technologies, pages
191?199, Montre?al, Canada, June. Association for
Computational Linguistics.
G. Leech, R. Barnett, and P. Kahrel. 1996. Eagles rec-
ommendations for the syntactic annotation of cor-
pora. Technical report, EAG-TCWG-SASG1.8.
A. Lenci, S. Montemagni, V. Pirrelli, and C. Soria.
2008. A syntactic meta?scheme for corpus anno-
tation and parsing evaluation. In Proceedings of the
LREC?00, Athens, Greece.
S. Montemagni, F. Barsotti, M. Battista, N. Calzo-
lari, O. Corazzari, A. Lenci, A. Zampolli, F. Fan-
ciulli, M. Massetani, R. Raffaelli, R. Basili, M. T.
Pazienza, D. Saracino, F. Zanzotto, N. Mana, F. Pi-
anesi, and R. Delmonte. 2003. Building the Italian
Syntactic-Semantic Treebank. In A. Abeille?, editor,
Building and Using syntactically annotated corpora.
Kluwer, Dordrecht.
S. Pyysalo, F. Ginter, K. Haverinen, J. Heimonen,
T. Salakoski, and V. Laippala. 2007. On the uni-
fication of syntactic annotations under the Stanford
dependency scheme: A case study on Bioinfer and
GENIA. In BioNLP 2007: Biological, transla-
tional, and clinical language processing, pages 25?
32, Prague.
M. Seraji, B. Megyesi, and J. Nivre. 2012. Bootstrap-
ping a persian dependency treebank. Special Issue
of Linguistic Issues in Language Technology (LiLT)
on Treebanks and Linguistic Theories, 7.
69
