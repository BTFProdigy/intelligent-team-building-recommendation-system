Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 170?179,
Singapore, 6-7 August 2009.
c
?2009 ACL and AFNLP
Supervised and Unsupervised Methods in Employing Discourse Relations
for Improving Opinion Polarity Classification
Swapna Somasundaran
Univ. of Pittsburgh
Pittsburgh, PA 15260
swapna@cs.pitt.edu
Galileo Namata
Univ. of Maryland
College Park, MD 20742
namatag@cs.umd.edu
Janyce Wiebe
Univ. of Pittsburgh
Pittsburgh, PA 15260
wiebe@cs.pitt.edu
Lise Getoor
Univ. of Maryland
College Park, MD 20742
getoor@cs.umd.edu
Abstract
This work investigates design choices in
modeling a discourse scheme for im-
proving opinion polarity classification.
For this, two diverse global inference
paradigms are used: a supervised collec-
tive classification framework and an un-
supervised optimization framework. Both
approaches perform substantially better
than baseline approaches, establishing the
efficacy of the methods and the underlying
discourse scheme. We also present quan-
titative and qualitative analyses showing
how the improvements are achieved.
1 Introduction
The importance of discourse in opinion analy-
sis is being increasingly recognized (Polanyi and
Zaenen, 2006). Motivated by the need to en-
able discourse-based opinion analysis, previous
research (Asher et al, 2008; Somasundaran et al,
2008) developed discourse schemes and created
manually annotated corpora. However, it was not
known whether and how well these linguistic ideas
and schemes can be translated into effective com-
putational implementations.
In this paper, we first investigate ways in which
an opinion discourse scheme can be computation-
ally modeled, and then how it can be utilized to
improve polarity classification. Specifically, the
discourse scheme we use is from Somasundaran
et al (2008), which was developed to support a
global, interdependent polarity interpretation. To
achieve discourse-based global inference, we ex-
plore two different frameworks. The first is a
supervised framework that learns interdependent
opinion interpretations from training data. The
second is an unsupervised optimization frame-
work which uses constraints to express the ideas
of coherent opinion interpretation embodied in the
scheme. For the supervised framework, we use It-
erative Collective Classification (ICA), which fa-
cilitates machine learning using relational infor-
mation. The unsupervised optimization is imple-
mented as an Integer Linear Programming (ILP)
problem. Via our implementations, we aim to
empirically test if discourse-based approaches to
opinion analysis are useful.
Our results show that both of our implemen-
tations achieve significantly better accuracies in
polarity classification than classifiers using local
information alone. This confirms the hypothesis
that the discourse-based scheme is useful, and also
shows that both of our design choices are effective.
We also find that there is a difference in the way
ICA and ILP achieve improvements, and a simple
hybrid approach, which incorporates the strengths
of both, is able to achieve significant overall im-
provements over both. Our analyses show that
even when our discourse-based methods bootstrap
from noisy classifications, they can achieve good
improvements.
The rest of this paper is organized as follows:
we discuss related work in Section 2 and the
discourse scheme in Section 3. We present our
discourse-based implementations in Section 4, ex-
periments in Section 5, discussions in Section 6
and conclusions in Section 7.
2 Related Work
Previous work on polarity disambiguation has
used contextual clues and reversal words (Wil-
son et al, 2005; Kennedy and Inkpen, 2006;
Kanayama and Nasukawa, 2006; Devitt and Ah-
mad, 2007; Sadamitsu et al, 2008). However,
these do not capture discourse-level relations.
Researchers, such as (Polanyi and Zaenen,
2006), have discussed how the discourse struc-
ture can influence opinion interpretation; and pre-
vious work, such as (Asher et al, 2008; Soma-
sundaran et al, 2008), have developed annota-
170
tion schemes for interpreting opinions with dis-
course relations. However, they do not empiri-
cally demonstrate how automatic methods can use
their ideas to improve polarity classification. In
this work, we demonstrate concrete ways in which
a discourse-based scheme can be modeled using
global inference paradigms.
Joint models have been previously explored for
other NLP problems (Haghighi et al, 2005; Mos-
chitti et al, 2006; Moschitti, 2009). Our global in-
ference model focuses on opinion polarity recog-
nition task.
The biggest difference between this work and
previous work in opinion analysis that use global
inference methods is in the type of linguistic
relations used to achieve the global inference.
Some of the work is not related to discourse
at all (e.g., lexical similarities (Takamura et al,
2007), morphosyntactic similarities (Popescu and
Etzioni, 2005) and word-based measures like TF-
IDF (Goldberg and Zhu, 2006)). Others use
sentence cohesion (Pang and Lee, 2004), agree-
ment/disagreement between speakers (Thomas et
al., 2006; Bansal et al, 2008), or structural adja-
cency. In contrast, our work focuses on discourse-
based relations for global inference. Another dif-
ference from the above work is that our work is
over multi-party conversations.
Previous work on emotion and subjectivity
detection in multi-party conversations has ex-
plored using prosodic information (Neiberg et al,
2006), combining linguistic and acoustic infor-
mation (Raaijmakers et al, 2008) and combining
lexical and dialog information (Somasundaran et
al., 2007). Our work is focused on harnessing
discourse-based knowledge and on interdependent
inference.
There are several collective classification
frameworks, including (Neville and Jensen, 2000;
Lu and Getoor, 2003; Taskar et al, 2004; Richard-
son and Domingos, 2006; Bilgic et al, 2007). In
this paper, we use an approach by (Lu and Getoor,
2003) which iteratively predicts class values using
local and relational features. ILP has been used
on other NLP tasks, e.g., (Denis and Baldridge,
2007; Choi et al, 2006; Roth and Yih, 2004). In
this work, we employ ILP for modeling discourse
constraints for polarity classification.
3 Discourse Scheme and Data
The scheme in Somasundaran et al (2008) has
been developed and annotated over the AMI meet-
ing corpus (Carletta et al, 2005).
1
This scheme
annotates opinions, their polarities (positive, neg-
ative, neutral) and their targets (a target is what
the opinion is about). The targets of opinions are
related via two types of relations: the same rela-
tion, which relates targets referring to the same
entity or proposition, and the alternative relation,
which relates targets referring to mutually exclu-
sive options in the context of the discourse. Ad-
ditionally, the scheme relates opinions via two
types of frame relations: the reinforcing and non-
reinforcing relations. The frame relations repre-
sent discourse scenarios: reinforcing relations ex-
ist between opinions when they contribute to the
same overall stance, while non-reinforcing rela-
tions exist between opinions that show ambiva-
lence.
The opinion annotations are text-span based,
while in this work, we use Dialog Act (DA) based
segmentation of meetings.
2
As the DAs are our
units of classification, we map opinion annotations
to the DA units as follows. If a DA unit contains
an opinion annotation, the label is transferred up-
wards to the containing DA. When a DA contains
multiple opinion annotations, each with a differ-
ent polarity, one of them is randomly chosen as
the label for the DA. The discourse relations exist-
ing between opinions are also transferred upwards,
between the DAs containing each of these anno-
tations. We recreate an example from Somasun-
daran et al (2008) using DA segmentation in Ex-
ample 1. Here, the speaker has a positive opinion
towards the rubbery material for the TV remote.
(1) DA-1: ... this kind of rubbery material,
DA-2: it?s a bit more bouncy,
DA-3: like you said they get chucked around a lot.
DA-4: A bit more durable and that can also be er-
gonomic and
DA-5: it kind of feels a bit different from all the
other remote controls.
In the example, the individual opinion expressions
(shown in bold) are essentially regarding the same
thing ? the rubbery material. Thus, the explicit
targets (shown in italics), it?s, that, and it, and the
implicit target of a bit more durable are all linked
1
The AMI corpus contains a set of scenario-based meet-
ings where participants have to design a new TV remote pro-
totype.
2
DA segmentation is provided with the AMI corpus.
171
Figure 1: Discourse Relations between DA seg-
ments for Example 1.
with same target relations. Also, notice that the
opinions reinforce a particular stance, i.e., a pro-
rubbery-material stance. Thus, the scheme links
the opinions via reinforcing relations. Figure 1 il-
lustrates the corresponding discourse relations be-
tween the containing DA units.
4 Implementing the Discourse Model
The hypothesis in using discourse information for
polarity classification is that the global discourse
view will improve upon a classification with only
a local view. Thus, we implement a local clas-
sifier to bootstrap the classification process, and
then implement classifiers that use discourse in-
formation from the scheme annotations, over it.
We explore two approaches for implementing our
discourse-based classifier. The first is ICA, where
discourse relations and the neighborhood informa-
tion brought in by these relations are incorporated
as features into the learner. The second approach
is ILP optimization, which tries to maximize the
class distributions predicted by the local classifier,
subject to constraints imposed by discourse rela-
tions. Both classifiers thus accommodate prefer-
ences of the local classifier and for coherence with
discourse neighbors.
4.1 Local Classifier
A supervised local classifier, Local, is used to pro-
vide the classifications to bootstrap the discourse-
based classifiers.
3
It is important to make Local as
reliable as possible; otherwise, the discourse rela-
tions will propagate misclassifications. Thus, we
build Local using a variety of knowledge sources
that have been shown to be useful for opinion anal-
ysis in previous work. Specifically, we construct
features using polarity lexicons (used by (Wilson
et al, 2005)), DA tags (used by (Somasundaran
3
Local is supervised, as previous work has shown that
supervised methods are effective in opinion analysis. Even
though this makes the final end-to-end system with the ILP
implementation semi-supervised, note that the discourse-
based ILP part is itself unsupervised.
et al, 2007)) and unigrams (used by many re-
searchers, e.g., (Pang and Lee, 2004)).
Note that, as our discourse-based classifiers at-
tempt to improve upon the local classifications,
Local is also a baseline for our experiments.
4.2 Iterative Collective Classification
We use a variant of ICA (Lu and Getoor, 2003;
Neville and Jensen, 2000), which is a collective
classification algorithm shown to perform consis-
tently well over a wide variety of relational data.
Algorithm 1 ICA Algorithm
for each instance i do {bootstrapping}
Compute polarity for i using local attributes
end for
repeat {iterative}
Generate ordering I over all instances
for each i in I do
Compute polarity for i using local and re-
lational attributes
end for
until Stopping criterion is met
ICA uses two classifiers: a local classifier and a
relational classifier. The local classifier is trained
to predict the DA labels using only the local fea-
tures. We use Local, described in Section 4.1, for
this purpose. The relational classifier is trained us-
ing the local features, and an additional set of fea-
tures commonly referred to as relational features.
The value of a relational feature, for a given DA,
depends on the polarity of the discourse neighbors
of that DA. Thus, the relational features incorpo-
rate discourse and neighbor information; that is,
they incorporate the information about the frame
and target relations in conjunction with the polar-
ity of the discourse neighbors. Intuitively, our mo-
tivation for this approach can be explained using
Example 1. Here, in interpreting the ambiguous
opinion a bit different as being positive, we use
the knowledge that it participates in a reinforc-
ing discourse, and that all its neighbors (e.g., er-
gonomic, durable) are positive opinions regard-
ing the same thing. On the other hand, if it had
been a non-reinforcing discourse, then the polar-
ity of a bit different, when viewed with respect to
the other opinions, could have been interpreted as
negative.
Table 1 lists the relational features we defined
for our experiments where each row represents a
172
Percent of neighbors with polarity type a related via frame relation f
?
Percent of neighbors with polarity type a related via target relation t
?
Percent of neighbors with polarity type a related via frame relation f and target relation t
Percent of neighbors with polarity type a and same speaker related via frame relation f
?
Percent of neighbors with polarity type a and same speaker related via target relation t
?
Percent of neighbors with polarity type a related via a frame relation or target relation
Percent of neighbors with polarity type a related via a reinforcing frame relation or same target relation
Percent of neighbors with polarity type a related via a non-reinforcing frame relation or alt target relation
Most common polarity type of neighbors related via a same target relation
Most common polarity type of neighbors related via a reinforcing frame relation and same target relation
Table 1: Relational features: a ? {non-neutral (i.e., positive or negative), positive, negative}, t ? {same, alt},
f ? {reinforcing, non-reinforcing}, t
?
? {same or alt, same, alt}, f
?
? {reinforcing or non-reinforcing, reinforcing, non-
reinforcing}
set of features. Features are generated for all com-
binations of a, t, t
?
, f and f
?
for each row. For
example, one of the features in the first row is Per-
cent of neighbors with polarity type positive, that
are related via a reinforcing frame relation. Thus,
each feature for the relational classifier identifies
neighbors for a given instance via a specific rela-
tion (f , t, f
?
or t
?
, obtained from the scheme an-
notations) and factors in their polarity values (a,
obtained from the classifier predictions from the
previous round). This adds a total of 59 relational
features to the already existing local features.
ICA has two main phases: the bootstrapping
and iterative phases. In the bootstrapping phase,
the polarity of each instance is initialized to the
most likely value given only the local classifier
and its features. In the iterative phase, we cre-
ate a random ordering of all the instances and,
in turn, apply the relational classifier to each in-
stance where the relational features, for a given
instance, are computed using the most recent po-
larity assignments of its neighbors. We repeat this
until some stopping criterion is met. For our ex-
periments, we use a fixed number of 30 iterations,
which has been found to be sufficient in most data
sets for ICA to converge to a solution.
The pseudocode for the algorithm is shown in
Algorithm 1.
4.3 Integer Linear Programming
First, we explain the intuition behind viewing dis-
course relations as enforcing constraints on polar-
ity interpretation. Then, we explain how the con-
straints are encoded in the optimization problem.
4.3.1 Discourse Constraints on Polarity
The discourse relations between opinions can pro-
vide coherence constraints on the way their polar-
ity is interpreted. Consider a discourse scenario
in which a speaker expresses multiple opinions
regarding the same thing, and is reinforcing his
stance in the process (as in Example 1). The set
of individual polarity assignments that is most co-
herent with this global scenario is the one where
all the opinions have the same (equal) polarity. On
the other hand, a pair of individual polarity assign-
ments most consistent with a discourse scenario
where a speaker reinforces his stance via opinions
towards alternative options, is one with opinions
having mutually opposite polarity. For instance,
in the utterance ?Shapes should be curved, noth-
ing square-like?, the speaker reinforces his pro-
curved stance via his opinions about the alternative
shapes: curved and square-like. And, we see that
the first opinion is positive and the second is neg-
ative. Table 2 lists the discourse relations (target
and frame relation combinations) found in the cor-
pus, and the likely polarity interpretation for the
related instances.
Target relation + Frame relation Polarity
same+reinforcing equal (e)
same+non-reinforcing opposite (o)
alternative+reinforcing opposite (o)
alternative+non-reinforcing equal (e)
Table 2: Discourse relations and their polarity con-
straints on the related instances.
4.3.2 Optimization Problem
For each DA instance i in a dataset, the local
classifier provides a class distribution [p
i
, q
i
, r
i
],
where p
i
, q
i
and r
i
correspond to the probabilities
that i belongs to positive, negative and neutral cat-
egories, respectively. The optimization problem is
formulated as an ILP minimization of the objec-
tive function in Equation 1.
?1?
?
i
(p
i
x
i
+q
i
y
i
+r
i
z
i
)+
?
i,j

ij
+
?
i,j
?
ij
(1)
173
where the x
i
, y
i
and z
i
are binary class vari-
ables corresponding to positive, negative and neu-
tral classes, respectively. When a class variable
is 1, the corresponding class is chosen. Variables

ij
and ?
ij
are binary slack variables that corre-
spond to the discourse constraints between two
distinct DA instances i and j. When a given slack
variable is 1, the corresponding discourse con-
straint is violated. Note that the objective func-
tion tries to achieve two goals. The first part
(
?
i
p
i
x
i
+ q
i
y
i
+ r
i
z
i
) is a maximization that tries
to choose a classification for the instances that
maximizes the probabilities provided by the local
classifier. The second part (
?
i,j

ij
+
?
i,j
?
ij
) is a
minimization that tries to minimize the number of
slack variables used, that is, minimize the number
of discourse constraints violated.
Constraints in Equations 2 and 3 listed below
impose binary constraints on the variables. The
constraint in Equation 4 ensures that, for each in-
stance i, only one class variable is set to 1.
x
i
? {0, 1}, y
i
? {0, 1}, z
i
? {0, 1} , ?i (2)

ij
? {0, 1}, ?
ij
? {0, 1} , ?i 6= j (3)
x
i
+ y
i
+ z
i
= 1 , ?i (4)
We pair distinct DA instances i and j as ij,
and if there exists a discourse relation between
them, they can be subject to the corresponding po-
larity constraints listed in Table 2. For this, we
define two binary discourse-constraint constants:
the equal-polarity constant, e
ij
and the opposite-
polarity constant, o
ij
. If a given DA pair ij is
related by either a same+reinforcing relation or
an alternative+non-reinforcing relation (rows 1, 4
of Table 2), then e
ij
= 1; otherwise it is zero.
Similarly, if it is related by either a same+non-
reinforcing relation or an alternative+reinforcing
relation (rows 2, 3 of Table 2), then o
ij
= 1. Both
e
ij
and o
ij
are zero if the instance pair is unrelated
in the discourse.
For each DA instance pair ij, equal-polarity
constraints are applied to the polarity variables of i
(x
i
, y
i
) and j (x
j
, y
j
) via the following equations:
|x
i
? x
j
| ? 1? e
ij
+ 
ij
, ?i 6= j (5)
|y
i
? y
j
| ? 1? e
ij
+ 
ij
, ?i 6= j (6)
?(x
i
+ y
i
) ? ?l
i
, ?i (7)
When e
ij
= 1, the Equation 5 constrains x
i
and
x
j
to be of the same value (both zero or both one).
Similarly, Equation 6 constrains y
i
and y
j
to be
of the same value. Via these equations, we ensure
that the instances i and j do not have the oppo-
site polarity when e
ij
= 1. However, notice that,
if we use just Equations 5 and 6, the optimization
can converge to the same, non-polar (neutral) cat-
egory. To guide the convergence to the same polar
(positive or negative) category, we use Equation 7.
Here l
i
= 1 if the instance i participates in one or
more discourse relations. When e
ij
= 0, x
i
and x
j
(and y
i
and y
j
), can take on assignments indepen-
dently of one another. Notice that both constraints
5 and 6 are relaxed when 
ij
= 1; thus, x
i
and x
j
(or y
i
and y
j
) can take on values independently of
one another, even if e
ij
= 1.
Next, the opposite-polarity constraints are ap-
plied via the following equations:
|x
i
+ x
j
? 1| ? 1? o
ij
+ ?
ij
, ?i 6= j (8)
|y
i
+ y
j
? 1| ? 1? o
ij
+ ?
ij
, ?i 6= j (9)
In the above equations, when o
ij
= 1, x
i
and x
j
(and y
i
and y
j
) take on opposite values; for exam-
ple, if x
i
= 1 then x
j
= 0 and vice versa. When
o
ij
= 0, the variable assignments are independent
of one another. This set of constraints is relaxed
when ?
ij
= 1.
In general, in our ILP formulation, notice that
if an instance does not have a discourse relation to
any other instance in the data, its classification is
unaffected by the optimization. Also, as the un-
derlying discourse scheme poses constraints only
on the interpretation of the polarity of the related
instances, discourse constraints are applied only to
the polarity variables x and y, and not to the neu-
tral class variable, z. Finally, even though slack
variables are used, we discourage the ILP system
from indiscriminately setting the slack variables to
1 by making them a part of the objective function
that is minimized.
5 Experiments
In this work, we are particularly interested in
improvements due to discourse-based methods.
Thus, we report performance under three con-
ditions: over only those instances that are re-
lated via discourse relations (Connected), over in-
stances not related via discourse relations (Single-
tons), and over all instances (All).
The annotated data consists of 7 scenario-based,
multi-party meetings from the AMI meeting cor-
pus. We filter out very small DAs (DAs with fewer
than 3 tokens, punctuation included). This gives
174
us a total of 4606 DA instances, of which 1935
(42%) have opinion annotations. For our exper-
iments, the DAs with no opinion annotations as
well as those with neutral opinions are considered
as neutral. Table 3 shows the class distributions in
the data for the three conditions.
Pos Neg Neutral Total
Connected 643 343 81 1067
Singleton 553 233 2753 3539
All 1196 576 2834 4606
Table 3: Class distribution over connected, single
and all instances.
5.1 Classifiers
Our first baseline, Base, is a simple distribution-
based classifier that classifies the test data based
on the overall distribution of the classes in the
training data. However, in Table 3, the class distri-
bution is different for the Connected and Single-
ton conditions. We incorporate this in a smarter
baseline, Base-2, which constructs separate dis-
tributions for connected instances and singletons.
Thus, given a test instance, depending on whether
it is connected, Base-2 uses the corresponding dis-
tribution to make its prediction.
The third baseline is the supervised classifier,
Local, described in Section 4.1. It is imple-
mented using the SVM classifiers from the Weka
toolkit (Witten and Frank, 2002).
4
Our super-
vised discourse-based classifier, ICA from Sec-
tion 4.2, also uses a similar SVM implemen-
tation for its relational classifier. We imple-
ment our ILP approach from Section 4.3 us-
ing the optimization toolbox from Mathworks
(http://www.mathworks.com) and GNU Linear
Programming Kit.
We observed that the ILP system performs bet-
ter than the ICA system on instances that are con-
nected, while ICA performs better on singletons.
Thus, we also implemented a simple hybrid clas-
sifier (HYB), which selects the ICA prediction for
classification of singletons and the ILP prediction
for classification of connected instances.
5.2 Results
We performed 7-fold cross validation experi-
ments, where six meetings are used for training
4
We use the SMO implementation, which, when used
with the logistic regression, has an output that can be viewed
as a posterior probability distribution.
and the seventh is used for testing the supervised
classifiers (Base, Base-2, Local and ICA). In the
case of ILP, the optimization is applied to the out-
put of Local for each test fold. Table 4 reports the
accuracies of the classifiers, averaged over 7 folds.
First, we observe that Base performs poorly
over connected instances, but performs consider-
ably better over singletons. This is expected as the
overall majority class is neutral and the singletons
are more likely to be neutral. Base-2, which incor-
porates the differentiated distributions, performs
substantially better than Base. Local achieves an
overall performance improvement over Base and
Base-2 by 23 percentage points and 9 percent-
age points, respectively. In general, Local outper-
forms Base for all three conditions (p < 0.001),
and Base-2 for the Singleton and All conditions
(p < 0.001). This overall improvement in Local?s
accuracy corroborates the utility of the lexical, un-
igram and DA based features for polarity detection
in this corpus.
Turning to the discourse-based classifiers, ICA,
ILP and HYB, all of these perform better than
Base and Base-2 for all conditions. ICA improves
over Local by 9 percentage points for Connected,
3 points for Singleton and 4 points for All. ILP?s
improvement over Local for Connected and All is
even more substantial: 28 percentage points and
6 points, respectively. Notice that ILP has the
same performance as Local for Singletons, as the
discourse constraints are not applied over uncon-
nected instances. Finally, HYB significantly out-
performs Local under all conditions. The signif-
icance levels of the improvements over Local are
highlighted in Table 4. These improvements also
signify that the underlying discourse scheme is
effective, and adaptable to different implementa-
tions.
Interestingly, ICA and ILP improve over Local
in different ways. While ILP sharply improves the
performance over the connected instances, ICA
shows relatively modest improvements over both
connected and singletons. ICA?s improvement
over singletons is interesting because it indicates
that, even though the features in Table 1 are fo-
cused on discourse relations, ICA utilizes them to
learn the classification of singletons too.
Comparing our discourse-based approaches,
ILP does significantly better than ICA over con-
nected instances (p < 0.001), while ICA does
significantly better than ILP over singletons (p <
175
Base Base-2 Local ICA ILP HYB
Connected 24.4 47.56 46.66 55.64 75.07 75.07
Singleton 51.72 63.23 75.73 78.72 75.73 78.72
All 45.34 59.46 68.72 73.31 75.35 77.72
Table 4: Accuracies of the classifiers measured over Connected, Singleton and All instances. Perfor-
mance significantly better than Local are indicated in bold for p < 0.001 and underline for p < 0.01.
0.01). However, there is no significant difference
between ICA and ILP for the All condition. The
HYB classifier outperforms ILP for the Singleton
condition (p < 0.01) and ICA for the Connected
condition (p < 0.001). Interestingly, over all in-
stances (the All condition), HYB also performs
significantly better than both ICA (p < 0.001) and
ILP (p < 0.01).
5.3 Analysis
Amongst our two approaches, ILP performs bet-
ter, and hence we further analyze its behavior to
understand how the improvements are achieved.
Table 5 reports the performance of ILP and Local
for the precision, recall and f-measure metrics (av-
eraged over 7 test folds), measured separately for
each of the opinion categories. The most promi-
nent improvement by ILP is observed for the re-
call of the polar categories under the Connected
condition: 40 percentage points for the positive
class, and 29 percentage points for the negative
class. The gain in recall is not accompanied by
a significant loss in precision. This results in an
improvement in f-measure for the polar categories
(24 points for positive and 16 points for negative).
Also note that, by virtue of the constraint in Equa-
tion 7, ILP does not classify any connected in-
stance as neutral; thus the precision is NaN, recall
is 0 and the f-meaure is NaN. This is indicated as
* in the Table.
The improvement of ILP for the All condition,
for the polar classes, follows a similar trend for re-
call (18 to 21 point improvement) and f-measure
(9 to 13 point improvement). In addition to this,
the ILP has an overall improvement in precision
over Local. This may seem counterintuitive, as
in Table 5, ILP?s precision for connected nodes is
similar to, or lower than, that of Local. This is
explained by the fact that, while going from con-
nected to overall conditions, Local?s polar predic-
tions increase by threefold (565 to 1482), but its
correct polar predictions increase by only twofold
(430 to 801). Thus, the ratio of change in the total
Gold Local
Pos Neg Neut Total
Pos 551 113 532 1196
Neg 121 250 205 576
Neut 312 135 2387 2834
Total 984 498 3124 4606
Gold ILP
Pos Neg Neut Total
Pos 817 157 222 1196
Neg 147 358 71 576
Neut 358 147 2329 2834
Total 1322 662 2622 4606
Table 6: Contingency table over all instances.
polar predictions to the correct polar predictions is
3 : 2. On the other hand, while polar predictions
by ILP increase by only twofold (1067 to 1984),
its correct polar predictions increase by 1.5 times
(804 to 1175). Here, the ratio of change in the total
polar predictions to the correct polar predictions is
4 : 3, a smaller ratio.
The contingency table (Table 6) shows how Lo-
cal and ILP compare against the gold standard
annotations. Notice here, that even though ILP
makes more polar guesses as compared to Local, a
greater proportion of the ILP guesses are correct.
The number of non-diagonal elements are much
smaller for ILP, resulting in the accuracy improve-
ments seen in Table 4.
6 Examples and Discussion
The results in Table 4 show that Local, which pro-
vides the classifications for bootstrapping ICA and
ILP, predicts an incorrect class for more than 50%
of the connected instances. Methods starting with
noisy starting points are in danger of propagating
the errors and hence worsening the performance.
Interestingly, in spite of starting with so many bad
classifications, ILP is able to achieve a large per-
formance improvement. We discovered that, given
a set of connected instances, even when Local has
only one correct guess, ILP is able to use this to
rectify the related instances. We illustrate this situ-
ation in Figure 2, which reproduces the connected
DAs for Example 1. It shows the classifications
176
Positive Negative Neutral
Local ILP Local ILP Local ILP
Connected-Prec 78.1 78.2 71.9 69.8 12.1
Connected-Recall 45.3 86.3 44.1 73.4 62.8 *
Connected-F1 56.8 81.5 54.0 70.7 18.5
All-Prec 56.2 61.3 52.3 54.6 76.3 88.3
All-Recall 46.6 67.7 44.3 62.5 83.9 81.5
All-F1 50.4 64.0 46.0 57.1 79.6 84.6
Table 5: Precision, Recall, Fmeasure for each Polarity category. Performance significantly better than
Local are indicated in bold (p < 0.001), underline (p < 0.01) and italics (p < 0.05). The * denotes that
ILP does not retrieve any connected node as neutral.
Figure 2: Discourse Relations and Classifications
for Example 1.
for each DA from the gold standard (G), the Local
classifier (L) and the ILP classifier (ILP). Observe
that Local predicts the correct positive class (+) for
only DA-4 (the DA containing bit more durable
and ergonomic). Notice that these are clear cases
of positive evaluation. It incorrectly predicts the
polarity of DA-2 (containing bit more bouncy)
as neutral (*), and DA-5 (containing a bit dif-
ferent from all the other remote controls) as
negative (-). DA-2 and DA-5 exemplify the fact
that polarity classification is a complex and diffi-
cult problem: being bouncy is a positive evalua-
tion in this particular discourse context, and may
not be so elsewhere. Thus, naturally, lexicons and
unigram-based learning would fail to capture this
positive evaluation. Similarly, ?being different?
could be deemed negative in other discourse con-
texts. However, ILP is able to arrive at the correct
predictions for all the instances. As the DA-4 is
connected to both DA-2 and DA-5 via a discourse
relation that enforces an equal-polarity constraint
(same+reinforcing relation of row 1, Table 2), both
of the misclassifications are rectified. Presumably,
the incorrect predictions made by Local are low
confidence estimates, while the predictions of the
correct cases have high confidence, which makes
it possible for ILP to make the corrections.
We also observed the propagation of the correct
classification for other types of discourse relations,
for more complex types of connectivity, and also
for conditions where an instance is not directly
connected to the correctly predicted instance. The
meeting snippet below (Example 2) and its cor-
responding DA relations (Figure 3) illustrate this.
This example is a reinforcing discourse where the
speaker is arguing for the number keypad, which is
an alternative to the scrolling option. Thus, he ar-
gues against the scrolling, and argues for entering
the number (which is a capability of the number
keypad).
(2) D-1: I reckon you?re gonna have to have a num-
ber keypad anyway for the amount of channels these
days,
D-2: You wouldn?t want to just have to scroll
through all the channels to get to the one you want
D-3: You wanna enter just the number of it , if you
know it
D-4: I reckon we?re gonna have to have a number
keypad anyway
In Figure 3, we see that, DA-2 is connected via an
alternative+reinforcing discourse relation to each
of its neighbors DA-1 and DA-3, which encour-
ages the optimization to choose a class for it that
is opposite to DA-1 and DA-3. Notice also, that
even though Local predicts only DA-4 correctly,
this correct classification finally influences the cor-
rect choice for all the instances, including the re-
motely connected DA-2.
7 Conclusions and Future Work
This work focuses on the first step to ascertain
whether discourse relations are useful for improv-
ing opinion polarity classification, whether they
can be modeled and what modeling choices can
be used. To this end, we explored two distinct
paradigms: the supervised ICA and the unsuper-
vised ILP. We showed that both of our approaches
are effective in exploiting discourse relations to
177
Figure 3: Discourse Relations and Classifications for Example 2.
significantly improve polarity classification. We
found that there is a difference in how ICA and
ILP achieve improvements, and that combining
the two in a hybrid approach can lead to further
overall improvement. Quantitatively, we showed
that our approach is able to achieve a large in-
crease in recall of the polar categories without
harming the precision, which results in the perfor-
mance improvements. Qualitatively, we illustrated
how, even if the bootstrapping process is noisy,
the optimization and discourse constraints effec-
tively rectify the misclassifications. The improve-
ments of our diverse global inference approaches
indicate that discourse information can be adapted
in different ways to augment and improve existing
opinion analysis techniques.
The automation of the discourse-relation recog-
nition is the next step in this research. The be-
havior of ICA and ILP can change, depending on
the automation of discourse level recognition. The
implementation and comparison of the two meth-
ods under full automation is the focus of our future
work.
Acknowledgments
This research was supported in part by the
Department of Homeland Security under grant
N000140710152 and NSF Grant No. 0746930.
We would also like to thank the anonymous re-
viewers for their helpful comments.
References
N. Asher, F. Benamara, and Y. Mathieu. 2008. Dis-
tilling opinion in discourse: A preliminary study.
COLING-2008.
M. Bansal, C. Cardie, and L. Lee. 2008. The power of
negative thinking: Exploiting label disagreement in
the min-cut classification framework. In COLING-
2008.
M. Bilgic, G. M. Namata, and L. Getoor. 2007. Com-
bining collective classification and link prediction.
In Workshop on Mining Graphs and Complex Struc-
tures at the IEEE International Conference on Data
Mining.
J. Carletta, S. Ashby, S. Bourban, M. Flynn,
M. Guillemot, T. Hain, J. Kadlec, V. Karaiskos,
W. Kraaij, M. Kronenthal, G. Lathoud, M. Lincoln,
A. Lisowska, I. McCowan, W. Post, D. Reidsma, and
P. Wellner. 2005. The ami meetings corpus. In Pro-
ceedings of the Measuring Behavior Symposium on
?Annotating and measuring Meeting Behavior?.
Y. Choi, E. Breck, and C. Cardie. 2006. Joint extrac-
tion of entities and relations for opinion recognition.
In EMNLP 2006.
P. Denis and J. Baldridge. 2007. Joint determination
of anaphoricity and coreference resolution using in-
teger programming. In HLT-NAACL 2007.
A. Devitt and K. Ahmad. 2007. Sentiment polarity
identification in financial news: A cohesion-based
approach. In ACL 2007.
A. B. Goldberg and X. Zhu. 2006. Seeing stars
when there aren?t many stars: Graph-based semi-
supervised learning for sentiment categorization. In
HLT-NAACL 2006 Workshop on Textgraphs: Graph-
based Algorithms for Natural Language Processing.
A. Haghighi, K. Toutanova, and C. Manning. 2005. A
joint model for semantic role labeling. In CoNLL.
H. Kanayama and T. Nasukawa. 2006. Fully auto-
matic lexicon expansion for domain-oriented sen-
timent analysis. In EMNLP-2006, pages 355?363,
Sydney, Australia.
A. Kennedy and D. Inkpen. 2006. Sentiment classi-
fication of movie reviews using contextual valence
shifters. Computational Intelligence, 22(2):110?
125.
Q. Lu and L. Getoor. 2003. Link-based classification.
In Proceedings of the International Conference on
Machine Learning (ICML).
A. Moschitti, D. Pighin, and R. Basili. 2006. Seman-
tic role labeling via tree kernel joint inference. In
CoNLL.
A. Moschitti. 2009. Syntactic and semantic kernels for
short text pair categorization. In EACL.
178
D. Neiberg, K. Elenius, and K. Laskowski. 2006.
Emotion recognition in spontaneous speech using
gmms. In INTERSPEECH 2006 ICSLP.
J. Neville and D. Jensen. 2000. Iterative classifica-
tion in relational data. In In Proc. AAAI-2000 Work-
shop on Learning Statistical Models from Relational
Data, pages 13?20. AAAI Press.
B. Pang and L. Lee. 2004. A sentimental education:
Sentiment analysis using subjectivity summarization
based on minimum cuts. In ACl 2004.
L. Polanyi and A. Zaenen, 2006. Contextual Valence
Shifters. Computing Attitude and Affect in Text:
Theory and Applications.
A.-M. Popescu and O. Etzioni. 2005. Extracting prod-
uct features and opinions from reviews. In HLT-
EMNLP 2005.
S. Raaijmakers, K. Truong, and T. Wilson. 2008. Mul-
timodal subjectivity analysis of multiparty conversa-
tion. In EMNLP.
M. Richardson and P. Domingos. 2006. Markov logic
networks. Mach. Learn., 62(1-2):107?136.
D. Roth and W. Yih. 2004. A linear programming
formulation for global inference in natural language
tasks. In Proceedings of CoNLL-2004, pages 1?8.
Boston, MA, USA.
K. Sadamitsu, S. Sekine, and M. Yamamoto. 2008.
Sentiment analysis based on probabilistic models us-
ing inter-sentence information. In LREC?08.
S. Somasundaran, J. Ruppenhofer, and J. Wiebe. 2007.
Detecting arguing and sentiment in meetings. In
SIGdial Workshop on Discourse and Dialogue 2007.
S. Somasundaran, J. Wiebe, and J. Ruppenhofer. 2008.
Discourse level opinion interpretation. In Coling
2008.
H. Takamura, T. Inui, and M. Okumura. 2007. Extract-
ing semantic orientations of phrases from dictionary.
In HLT-NAACL 2007.
B. Taskar, M. Wong, P. Abbeel, and D. Koller. 2004.
Link prediction in relational data. In Neural Infor-
mation Processing Systems.
M. Thomas, B. Pang, and L. Lee. 2006. Get out the
vote: Determining support or opposition from con-
gressional floor-debate transcripts. In EMNLP 2006.
T. Wilson, J. Wiebe, and P. Hoffmann. 2005. Recog-
nizing contextual polarity in phrase-level sentiment
analysis. In HLT-EMNLP 2005.
I. H. Witten and E. Frank. 2002. Data mining: practi-
cal machine learning tools and techniques with java
implementations. SIGMOD Rec., 31(1):76?77.
179
Proceedings of ACL-08: HLT, pages 941?949,
Columbus, Ohio, USA, June 2008. c?2008 Association for Computational Linguistics
Resolving Personal Names in Email Using Context Expansion
Tamer Elsayed,?Douglas W. Oard,? and Galileo Namata?
Human Language Technology Center of Excellence and
UMIACS Laboratory for Computational Linguistics and Information Processing (CLIP)
University of Maryland, College Park, MD 20742
{telsayed, oard, gnamata}@umd.edu
Abstract
This paper describes a computational ap-
proach to resolving the true referent of a
named mention of a person in the body of an
email. A generative model of mention gener-
ation is used to guide mention resolution. Re-
sults on three relatively small collections indi-
cate that the accuracy of this approach com-
pares favorably to the best known techniques,
and results on the full CMU Enron collection
indicate that it scales well to larger collections.
1 Introduction
The increasing prevalence of informal text from
which a dialog structure can be reconstructed (e.g.,
email or instant messaging), raises new challenges if
we are to help users make sense of this cacophony.
Large collections offer greater scope for assembling
evidence to help with that task, but they pose addi-
tional challenges as well. With well over 100,000
unique email addresses in the CMU version of the
Enron collection (Klimt and Yang, 2004), common
names (e.g., John) might easily refer to any one of
several hundred people. In this paper, we associate
named mentions in unstructured text (i.e., the body
of an email and/or the subject line) to modeled iden-
tities. We see at least two direct applications for this
work: (1) helping searchers who are unfamiliar with
the contents of an email collection (e.g., historians or
lawyers) better understand the context of emails that
they find, and (2) augmenting more typical social
networks (based on senders and recipients) with ad-
ditional links based on references found in unstruc-
tured text.
Most approaches to resolving identity can be de-
composed into four sub-problems: (1) finding a ref-
erence that requires resolution, (2) identifying can-
didates, (3) assembling evidence, and (4) choosing
?Department of Computer Science
?College of Information Studies
among the candidates based on the evidence. For
the work reported in this paper, we rely on the user
to designate references requiring resolution (which
we model as a predetermined set of mention-queries
for which the correct referent is known). Candidate
identification is a computational expedient that per-
mits the evidence assembly effort to be efficiently
focused; we use only simple techniques for that task.
Our principal contributions are the approaches we
take to evidence generation (leveraging three ways
of linking to other emails where evidence might be
found: reply chains, social interaction, and topical
similarity) and our approach to choosing among can-
didates (based on a generative model of reference
production). We evaluate the effectiveness of our
approach on four collections, three of which have
previously reported results for comparison, and one
that is considerably larger than the others.
The remainder of this paper is as follows. Sec-
tion 2 surveys prior work. Section 3 then describes
our approach to modeling identity and ranking can-
didates. Section 4 presents results, and Section 5
concludes.
2 Related Work
The problem of identity resolution in email is a spe-
cial case of the more general problem referred to as
?Entity Resolution.? Entity resolution is generically
defined as a process of determining the mapping
from references (e.g., names, phrases) observed in
data to real-world entities (e.g., persons, locations).
In our case, the problem is to map mentions in emails
to the identities of the individuals being referred to.
Various approaches have been proposed for en-
tity resolution. In structured data (e.g., databases),
approaches have included minimizing the number
of ?matching? and ?merging? operations (Benjel-
loun et al, 2006), using global relational informa-
tion(Malin, 2005; Bhattacharya and Getoor, 2007;
Reuther, 2006) and using a probabilistic generative
941
model (Bhattacharya and Getoor, 2006). None of
these approaches, however, both make use of con-
versational, topical, and time aspects, shown impor-
tant in resolving personal names (Reuther, 2006),
and take into account global relational informa-
tion. Similarly, approaches in unstructured data
(e.g., text) have involved using clustering techniques
over biographical facts (Mann and Yarowsky, 2003),
within-document resolution (Blume, 2005), and dis-
criminative unsupervised generative models (Li et
al., 2005). These too are insufficient for our prob-
lem since they suffer from inability scale or to han-
dle early negotiation.
Specific to the problem of resolving mentions in
email collections, Abadi (Abadi, 2003) used email
orders from an online retailer to resolve product
mentions in orders and Holzer et al (Holzer et al,
2005) used the Web to acquire information about
individuals mentioned in headers of an email col-
lection. Our work is focused on resolving personal
name references in the full email including the mes-
sage body; a problem first explored by Diehl et al
(Diehl et al, 2006) using header-based traffic anal-
ysis techniques. Minkov et al(Minkov et al, 2006)
studied the same problem using a lazy graph walk
based on both headers and content. Those two re-
cent studies reported results on different test collec-
tions, however, making direct comparisons difficult.
We have therefore adopted their test collections in
order to establish a common point of reference.
3 Mention Resolution Approach
The problem we are interested in is the resolution
of a personal-name mention (i.e., a named reference
to a person) m, in a specific email em in the given
collection of emails E, to its true referent. We as-
sume that the user will designate such mention. This
can be formulated as a known-item retrieval problem
(Allen, 1989) since there is always only one right an-
swer. Our goal is to develop a system that provides a
list of potential candidates, ranked according to how
strongly the system believes that a candidate is the
true referent meant by the email author. In this pa-
per, we propose a probabilistic approach that ranks
the candidates based on the estimated probability of
having been mentioned. Formally, we seek to esti-
mate the probability p(c|m) that a potential candi-
date c is the one referred to by the given mention m,
over all candidates C.
We define a mention m as a tuple < lm, em >,
where lm is the ?literal? string of characters that rep-
resentsm and em is the email wherem is observed.1
We assume that m can be resolved to a distinguish-
able participant for whom at least one email address
is present in the collection.2
The probabilistic approach we propose is moti-
vated by a generative scenario of mentioning people
in email. The scenario begins with the author of the
email em, intending to refer to a person in that email.
To do that s/he will:
1. Select a person c to whom s/he will refer
2. Select an appropriate context xk to mention c
3. Select a specific lexical reference lm to refer to
c given the context xk.
For example, suppose ?John? is sending an email
to ?Steve? and wants to mention a common friend
?Edward.? ?John? knows that he and Steve know
2 people named Edward, one is a friend of both
known by ?Ed? and the other is his soccer trainer.
If ?John? would like to talk about the former, he
would use ?Ed? but he would likely use ?Edward?
plus some terms (e.g., ?soccer?, ?team?, etc) for the
latter. ?John? relies on the social context, or the topi-
cal context, for ?Steve? to disambiguate the mention.
The steps of this scenario impose a certain struc-
ture to our solution. First, we need to have a
representational model for each candidate identity.
Second, we need to reconstruct the context of the
queried mention. Third, it requires a computational
model of identity that supports reasoning about iden-
tities. Finally, it requires a resolution technique that
leverages both the identity models and the context
to rank the potential candidates. In this section,
we will present our resolution approach within that
structure. We first discuss how to build both repre-
sentational and computational models of identity in
section 3.1. Next, we introduce a definition of the
contextual space and how we can reconstruct it in
1The exact position in em where lm is observed should also
be included in the definition, but we ignore it assuming that all
matched literal mentions in one email refer to the same identity.
2Resolving mentions that refer to non-participants is outside
the scope of this paper.
942
section 3.2. Finally, we link those pieces together
by the resolution algorithm in section 3.3.
3.1 Computational Model of Identity
Representation: In a collection of emails, indi-
viduals often use different email addresses, multi-
ple forms of their proper names, and different nick-
names. In order to track references to a person over
a large collection, we need to capture as many as
possible of these referential attributes in one rep-
resentation. We extend our simple representation
of identity proposed in (Elsayed and Oard, 2006)
where an identity is represented by a set of pair-
wise co-occurrence of referential attributes (i.e., co-
occurrence ?associations?), and each extracted as-
sociation has a frequency of occurrence. The at-
tributes are extracted from the headers and saluta-
tion and signature lines. For example, an ?address-
nickname? association < a, n > is inferred when-
ever a nickname n is usually observed in signature
lines of emails sent from email address a. Three
types of referential attributes were identified in the
original representation: email addresses, names, and
nicknames. We add usernames as well to account
for the absence of any other type of names. Names,
nicknames, and usernames are distinguishable based
on where each is extracted: email addresses and
names from headers, nicknames from salutation
and signature lines, and usernames from email ad-
dresses. Since (except in rare cases) an email ad-
dress is bound to one personal identity, the model
leverages email addresses as the basis by mandat-
ing that at least one email address must appear in
any observed association. As an off-line preprocess-
ing step, we extract the referential attributes from the
whole collection and build the identity models. The
first step in the resolution process is to determine the
list of identity models that are viable candidates as
the true referent. For the experiments reported in this
paper, any identity model with a first name or nick-
name that exactly matches the mention is considered
a candidate.
Labeling Observed Names: For the purpose of re-
solving name mentions, it is necessary to compute
the probability p(l|c) that a person c is referred to by
a given ?literal? mention l. Intuitively, that probabil-
ity can be estimated based on the observed ?name-
type? of l and how often that association occurs in
the represented model. We define T as the set of
3 different types of single-token name-types: first,
last, and nickname. We did not handle middle names
and initials, just for simplicity. Names that are ex-
tracted from salutation and signature lines are la-
beled as nicknames whereas full names extracted
from headers are first normalized to ?First Last?
form and then each single token is labeled based on
its relative position as being the first or last name.
Usernames are treated similarly to full names if they
have more than one token, otherwise they are ig-
nored. Note that the same single-token name may
appear as a first name and a nickname.
Figure 1: A computational model of identity.
Reasoning: Having tokenized and labeled all
names, we propose to model the association of a
single-token name l of type t to an identity c by a
simple 3-node Bayesian network illustrated in Fig-
ure 1. In the network, the observed mention l is
distributed conditionally on both the identity c and
the name-type t. p(c) is the prior probability of ob-
serving the identity c in the collection. p(t|c) is the
probability that a name-type t is used to refer to c.
p(l|t, c) is the probability of referring to c by l of
type t. These probabilities can be inferred from the
representational model as follows:
p(c) =
|assoc(c)|
?
c??C |assoc(c
?)|
p(t|c) =
freq(t, c)
?
t??T freq(t
? , c)
p(l|t, c) =
freq(l, t, c)
?
l??assoc(c) freq(l
? , t, c)
where assoc(c) is the set of observed associations of
referential attributes in the represented model c.
The probability of observing a mention l given
that it belongs to an identity c, without assuming a
specific token type, can then be inferred as follows:
p(l|c) =
?
t?T
p(t|c) p(l|t, c)
In the case of a multi-token names (e.g., John
Smith), we assume that the first is either a first name
943
or nickname and the last is a last name, and compute
it accordingly as follows:
p(l1l2|c) = {
?
t?{f,n}
p(t|c) p(l1|t, c)} ? p(l2|last, c)
where f and n above denotes first name and nick-
name respectively.
Email addresses are also handled, but in a differ-
ent way. Since we assume each of them uniquely
identifies the identity, all email addresses for one
identity are mapped to just one of them, which then
has half of the probability mass (because it appears
in every extracted co-occurrence association).
Our computational model of identity can be
thought of as a language model over a set of per-
sonal references and thus it is important to account
for unobserved references. If we know that a spe-
cific first name often has a common nickname (by a
dictionary of commonly used first to nickname map-
pings (e.g., Robert to Bob)), but this nickname was
not observed in the corpus, we will need to apply
smoothing. We achieve that by assuming the nick-
name would have been observed n times where n is
some fraction (0.75 in our experiments) of the fre-
quency of the observed name. We repeat that for
each unobserved nickname and then treat them as if
they were actually observed.
3.2 Contextual Space
Figure 2: Contextual Space
It is obvious that understanding the context of an
ambiguous mention will help with resolving it.
Fortunately, the nature of email as a conversa-
tional medium and the link-relationships between
emails and people over time can reveal clues that can
be exploited to partially reconstruct that context.
We define the contextual space X(m) of a men-
tion m as a mixture of 4 types of contexts with ?k as
the mixing coefficient of context xk. The four con-
texts (illustrated in Figure 2) are:
(1) Local Context: the email em where the named
person is mentioned.
(2) Conversational Context: emails in the broader
discussion that includes em, typically the thread that
contains it.
(3) Social Context: discussions that some or all of
the participants (sender and receivers) of em joined
or initiated at around the time of the mention-email.
These might bear some otherwise-undetected rela-
tionship to the mention-email.
(4) Topical Context: discussions that are topically
similar to the mention-discussion that took place at
around the time of em, regardless of whether the dis-
cussions share any common participants.
These generally represent a growing (although not
strictly nested) contextual space around the queried
mention. We assume that all mentions in an email
share the same contextual space. Therefore, we can
treat the context of a mention as the context of its
email. However, each email in the collection has
its own contextual space that could overlap with an-
other email?s space.
3.2.1 Formal Definition
We define K as the set of the 4 types of contexts.
A context xk is represented by a probability distri-
bution over all emails in the collection. An email ej
belongs to the kth context of another email ei with
probability p(ej |xk(ei)). How we actually represent
each context and estimate the distribution depends
upon the type of the context. We explain that in de-
tail in section 3.2.2.
3.2.2 Context Reconstruction
In this section, we describe how each context is
constructed.
Local Context: Since this is simply em, all of the
probability mass is assigned to it.
Conversational Context: Threads (i.e., reply
chains) are imperfect approximations of focused
discussions, since people sometimes switch topics
within a thread (and indeed sometimes within the
same email). We nonetheless expect threads to ex-
hibit a useful degree of focus and we have there-
fore adopted them as a computational representation
of a discussion in our experiments. To reconstruct
threads in the collection, we adopted the technique
introduced in (Lewis and Knowles, 1997). Thread
944
reconstruction results in a unique tree containing the
mention-email. Although we can distinguish be-
tween different paths or subtrees of that tree, we
elected to have a uniform distribution over all emails
in the same thread. This also applies to threads re-
trieved in the social and topical contexts as well.
Social Context: Discussions that share common
participants may also be useful, though we expect
their utility to decay somewhat with time. To recon-
struct that context, we temporally rank emails that
share at least one participant with em in a time pe-
riod around em and then expand each by its thread
(with duplicate removal). Emails in each thread are
then each assigned a weight that equals the recip-
rocal of its thread rank. We do that separately for
emails that temporally precede or follow em. Fi-
nally, weights are normalized to produce one distri-
bution for the whole social context.
Topical Context: Identifying topically-similar con-
tent is a traditional query-by-example problem that
has been well researched in, for example, the TREC
routing task (Lewis, 1996) and the Topic Detection
and Tracking evaluations (Allan, 2002). Individual
emails may be quite terse, but we can exploit the
conversational structure to obtain topically related
text. In our experiments, we tracked back to the
root of the thread in which em was found and used
the subject line and the body text of that root email
as a query to Lucene3 to identify topically-similar
emails. Terms found in the subject line are dou-
bled in the query to emphasize what is sometimes
a concise description of the original topic. Subse-
quent processing is then similar to that used for the
social context, except that the emails are first ranked
by their topical, rather than temporal, similarity.
The approaches we adopted to reconstruct the so-
cial and topical contexts were chosen for their rel-
ative simplicity, but there are clearly more sophis-
ticated alternatives. For example, topic modeling
techniques (McCallum et al, 2005) could be lever-
aged in the reconstruction of the topical context.
3.3 Mention Resolution
Given a specific mention m and the set of identity
models C, our goal now is to compute p(c|m) for
each candidate c and rank them accordingly.
3http://lucene.apache.org
3.3.1 Context-Free Mention Resolution
If we resolve m out of its context, then we can
compute p(c|m) by applying Bayes? rule as follows:
p(c|m) ? p(c|lm) =
p(lm|c) p(c)
?
c??C p(l
m|c?) p(c?)
All the terms above are estimated as discussed ear-
lier in section 3.1. We call this approach ?backoff?
since it can be used as a fall-back strategy. It is con-
sidered the baseline approach in our experiments.
3.3.2 Contextual Mention Resolution
We now discuss the more realistic situation in
which we use the context to resolve m. By expand-
ing the mention with its context, we get
p(c|m) = p(c|lm, X(em))
We then apply Bayes? rule to get
p(c|lm, X(em)) =
p(c, lm, X(em))
p(lm, X(em))
where p(lm, X(em)) is the probability of observ-
ing lm in the context. We can ignore this probabil-
ity since it is constant across all candidates in our
ranking. We now restrict our focus to the numera-
tor p(c, lm, X(em)), that is the probability that the
sender chose to refer to c by lm in the contextual
space. As we discussed in section 3.2, X is defined
as a mixture of contexts therefore we can further ex-
pand it as follows:
p(c, lm, X(em)) =
?
k
?k p(c, l
m, xk(e
m))
Following the intuitive generative scenario we intro-
duced earlier, the context-specific probability can be
decomposed as follows:
p(c, lm, xk(e
m)) = p(c)
? p(xk(e
m)|c)
? p(lm|xk(e
m), c)
where p(c) is the probability of selecting a can-
didate c, p(xk(em)|c) is the probability of select-
ing xk as an appropriate context to mention c, and
p(lm|xk(em), c) is the probability of choosing to
mention c by lm given that xk is the appropriate con-
text.
Choosing person to mention: p(c) can be estimated
as discussed in section 3.1.
Choosing appropriate context: By applying Bayes?
rule to compute p(xk(em)|c) we get
p(xk(e
m)|c) =
p(c|xk(em)) p(xk(em))
p(c)
945
p(xk(em)) is the probability of choosing xk to gen-
erally mention people. In our experiments, we
assumed a uniform distribution over all contexts.
p(c|xk(em)) is the probability of mentioning c in
xk(em). Given that the context is defined as a distri-
bution over emails, this can be expanded to
p(c|xk(e
m)) =
?
ei?E
p(ei|xk(e
m) p(c|ei))
where p(c|ei) is the probability that c is mentioned
in the email ei. This, in turn, can be estimated us-
ing the probability of referring to c by at least one
unique reference observed in that email. By assum-
ing that all lexical matches in the same email refer to
the same person, and that all lexically-unique refer-
ences are statistically independent, we can compute
that probability as follows:
p(c|ei) = 1? p(c is not mentioned in ei)
= 1?
?
m??M(ei)
(1? p(c|m?))
where p(c|m
?
) is the probability that c is the true
referent of m
?
. This is the same general problem
of resolving mentions, but now concerning a related
mention m
?
found in the context of m. To handle
this, there are two alternative solutions: (1) break the
cycle and compute context-free resolution probabil-
ities for those related mentions, or (2) jointly resolve
all mentions. In this paper, we will only consider the
first, leaving joint resolution for future work.
Choosing a name-mention: To estimate
p(lm|xk(em), c), we suggest that the email au-
thor would choose either to select a reference (or a
modified version of a reference) that was previously
mentioned in the context or just ignore the context.
Hence, we estimate that probability as follows:
p(lm|xk(e
m), c) = ? p(lm ? xk(e
m)|c)
+(1? ?) p(lm|c)
where ? ? [0, 1] is a mixing parameter (set at 0.9
in our experiments), and p(lm|c) is estimated as in
section 3.1. p(lm ? xk(em)|c) can be estimated as
follows:
p(lm ? xk(e
m)|c) =
?
m??xk
p(lm|lm
?
)p(lm
?
|xk) p(c|l
m
?
)
where p(lm|lm
?
) is the probability of modifying lm
?
into lm. We assume all possible mentions of c
are equally similar to m and estimate p(lm|lm
?
) by
1
|possible mentions of c| . p(l
m
?
|xk) is the probability of
observing lm
?
in xk, which we estimate by its rel-
ative frequency in that context. Finally, p(c|lm
?
) is
again a mention resolution problem concerning the
reference ri which can be resolved as shown earlier.
The Aho-Corasick linear-time algorithm (Aho
and Corasick, 1975) is used to find mentions of
names, using a corpus-based dictionary that includes
all names, nicknames, and email addresses extracted
in the preprocessing step.
4 Experimental Evaluation
We evaluate our mention resolution approach using
four test collections, all are based on the CMU ver-
sion of the Enron collection; each was created by se-
lecting a subset of that collection, selecting a set of
query-mentions within emails from that subset, and
creating an answer key in which each query-mention
is associated with a single email address.
The first two test collections were created by
Minkov et al(Minkov et al, 2006). These test col-
lections correspond to two email accounts, ?sager-
e? (the ?Sager? collection) and ?shapiro-r? (the
?Shapiro? collection). Their mention-queries and
answer keys were generated automatically by iden-
tifying name mentions that correspond uniquely to
individuals referenced in the cc header, and elimi-
nating that cc entry from the header.
The third test collection, which we call the
?Enron-subset? is an extended version of the test
collection created by Diehl at al (Diehl et al, 2006).
Emails from all top-level folders were included
in the collection, but only those that were both
sent by and received by at least one email address
of the form <name1>.<name2>@enron.com were
retained. A set of 78 mention-queries were manu-
ally selected and manually associated with the email
address of the true referent by the third author using
an interactive search system developed specifically
to support that task. The set of queries was lim-
ited to those that resolve to an address of the form
<name1>.<name2>@enron.com. Names found in
salutation or signature lines or that exactly match
<name1> or <name2> of any of the email partic-
ipants were not selected as query-mentions. Those
78 queries include the 54 used by Diehl et al
946
Table 1: Test collections used in the experiments.
Test Coll. Emails IDs Queries Candidates
Sager 1,628 627 51 4 (1-11)
Shapiro 974 855 49 8 (1-21)
Enron-sub 54,018 27,340 78 152 (1-489)
Enron-all 248,451 123,783 78 518 (3-1785)
For our fourth test collection (?Enron-all?), we
used the same 78 mention-queries and the answer
key from the Enron-subset collection, but we used
the full CMU version of the Enron collection (with
duplicates removed). We use this collection to as-
sess the scalability of our techniques.
Some descriptive statistics for each test collection
are shown in Table 1. The Sager and Shapiro col-
lections are typical of personal collections, while
the other two represent organizational collections.
These two types of collections differ markedly in
the number of known identities and the candidate
list sizes as shown in the table (the candidate list
size is presented as an average over that collection?s
mention-queries and as the full range of values).
4.1 Evaluation Measures
There are two commonly used single-valued eval-
uation measures for ?known item?-retrieval tasks.
The ?Success @ 1? measure characterizes the ac-
curacy of one-best selection, computed as the mean
across queries of the precision at the top rank for
each query. For a single-valued figure of merit that
considers every list position, we use ?Mean Recip-
rocal Rank? (MRR), computed as the mean across
queries of the inverse of the rank at which the cor-
rect referent is found.
4.2 Results
There are four basic questions which we address in
our experimental evaluation: (1) How does our ap-
proach perform compared to other approaches?, (2)
How is it affected by the size of the collection and
by increasing the time period?, (3) Which context
makes the most important contribution to the resolu-
tion task? and (4) Does the mixture help?
In our experiments, we set the mixing coefficients
?k and the context priors p(xk) to a uniform distri-
bution over all reconstructed contexts.
To compare our system performance with results
Table 2: Accuracy results with different time periods.
Period MRR Success @ 1
(days) Prob. Minkov Prob. Minkov
10 0.899 0.889 0.843 0.804
Sager 100 0.911 0.889 0.863 0.804
200 0.911 0.889 0.863 0.804
10 0.913 0.879 0.857 0.779
Shapiro 100 0.910 0.879 0.837 0.779
200 0.911 0.837 0.878 0.779
10 0.878 - 0.821 -
Enron-sub 100 0.911 - 0.846 -
200 0.911 - 0.846 -
10 0.890 - 0.821 -
Enron-all 100 0.888 - 0.821 -
200 0.888 - 0.821 -
previously reported, we experimented with differ-
ent (symmetric) time periods for selecting threads
in the social and topical contexts. Three represen-
tative time periods, in days, were arbitrarily chosen:
10 (i.e., +/- 5) days, 100 (i.e., +/- 50) days, and 200
(i.e., +/- 100) days. In each case, the mention-email
defines the center of this period.
A summary of the our results (denoted by ?Prob.?)
are shown in Table 2 with the best results for each
test collection highlighted in bold. The table also in-
cludes the results reported in Minkov et al(Minkov
et al, 2006) for the small collections for comparison
purposes.4 Each score for our system was the best
over all combinations of contexts for these collec-
tions and time periods. Given these scores, our re-
sults compare favorably with the previously reported
results for both Sager and Shapiro collections.
Another notable thing about our results is that
they seem to be good enough for practical appli-
cations. Specifically, our one-best selection (over
all tried conditions) is correct at least 82% of the
time over all collections, including the largest one.
Of course, the Enron-focused selection of mention-
queries in every case is an important caveat on these
results; we do not yet know how well our techniques
will hold up with less evidence, as might be the case
for mentions of people from outside Enron.
It is encouraging that testing on the largest col-
4For the ?Enron-subset? collection, we do not know which
54 mention-queries Diehl et alused in (Diehl et al, 2006)
947
lection (with all unrelated and thus noisy data) did
not hurt the effectiveness much. For the three differ-
ent time periods we tried, there was no systematic
effect.
Figure 3: Individual contexts, period set to 100 days.
Individual Contexts: Our choice of contexts was
motivated by intuition rather than experiments, so
we also took this opportunity to characterize the
contribution of each context to the results. We
did that by setting some of the context mixing-
coefficients to zero and leaving the others equally-
weighted. Figure 3 shows the MRR achieved with
each context. In that figure, the ?backoff? curve in-
dicates how well the simple context-free resolution
would do. The difference between the two small-
est and the two largest collections is immediately
apparent?this backoff is remarkably effective for the
smaller collections, and almost useless for the larger
ones, suggesting that the two smaller collections are
essentially much easier. The social context is clearly
quite useful, more so than any other single context,
for every collection. This tends to support our ex-
pectation that social networks can be as informative
as content networks in email collections. The topical
context also seems to be useful on its own. The con-
versational context is moderately useful on its own
in the larger collections. The local context alone is
not very informative for the larger collections.
Mixture of Contexts: The principal motivation for
combining different types of contexts is that differ-
ent sources may provide complementary evidence.
To characterize that effect, we look at combinations
of contexts. Figure 4 shows three such context com-
binations, anchored by the social context alone, with
a 100-day window (the results for 10 and 200 day
periods are similar). Reassuringly, adding more con-
texts (hence more evidence) turns out to be a rea-
Figure 4: Mixture of contexts, period set to 100 days.
sonable choice in most cases. For the full combi-
nation, we notice a drop in the effectiveness from
the addition of the topical context.5 This suggests
that the construction of the topical context may need
more careful design, and/or that learned ?k?s could
yield better evidence combination (since these re-
sults were obtained with equal ?k?s).
5 Conclusion
We have presented an approach to mention resolu-
tion in email that flexibly makes use of expanding
contexts to accurately resolve the identity of a given
mention. Our approach focuses on four naturally
occurring contexts in email, including a message,
a thread, other emails with senders and/or recipi-
ents in common, and other emails with significant
topical content in common. Our approach outper-
forms previously reported techniques and it scales
well to larger collections. Moreover, our results
serve to highlight the importance of social context
when resolving mentions in social media, which is
an idea that deserves more attention generally. In fu-
ture work, we plan to extend our test collection with
mention queries that must be resolved in the ?long
tail? of the identity distribution where less evidence
is available. We are also interested in exploring iter-
ative approaches to jointly resolving mentions.
Acknowledgments
The authors would like to thank Lise Getoor for her
helpful advice.
5This also occurs even when topical context is combined
with only social context.
948
References
Daniel J. Abadi. 2003. Comparing domain-specific and
non-domain-specific anaphora resolution techniques.
Cambridge University MPhil Dissertation.
Alfred V. Aho and Margaret J. Corasick. 1975. Effi-
cient string matching: an aid to bibliographic search.
In Communications of the ACM.
James Allan, editor. 2002. Topic detection and tracking:
event-based information organization. Kluwer Aca-
demic Publishers, Norwell, MA, USA.
Bryce Allen. 1989. Recall cues in known-item retrieval.
JASIS, 40(4):246?252.
Omar Benjelloun, Hector Garcia-Molina, Hideki Kawai,
Tait Eliott Larson, David Menestrina, Qi Su, Sut-
thipong Thavisomboon, and Jennifer Widom. 2006.
Generic entity resolution in the serf project. IEEE
Data Engineering Bulletin, June.
Indrajit Bhattacharya and Lise Getoor. 2006. A latent
dirichlet model for unsupervised entity resolution. In
The SIAM International Conference on Data Mining
(SIAM-SDM), Bethesda, MD, USA.
Indrajit Bhattacharya and Lise Getoor. 2007. Collective
entity resolution in relational data. ACM Transactions
on Knowledge Discovery from Data, 1(1), March.
Matthias Blume. 2005. Automatic entity disambigua-
tion: Benefits to NER, relation extraction, link anal-
ysis, and inference. In International Conference on
Intelligence Analysis, May.
Chris Diehl, Lise Getoor, and Galileo Namata. 2006.
Name reference resolution in organizational email
archives. In Proceddings of SIAM International Con-
ference on Data Mining, Bethesda, MD , USA, April
20-22.
Tamer Elsayed and Douglas W. Oard. 2006. Modeling
identity in archival collections of email: A prelimi-
nary study. In Proceedings of the 2006 Conference
on Email and Anti-Spam (CEAS 06), pages 95?103,
Mountain View, California, July.
Ralf Holzer, Bradley Malin, and Latanya Sweeney. 2005.
Email alias detection using social network analysis. In
LinkKDD ?05: Proceedings of the 3rd international
workshop on Link discovery, pages 52?57, New York,
NY, USA. ACM Press.
Bryan Klimt and Yiming Yang. 2004. Introducing the
Enron corpus. In Conference on Email and Anti-Spam,
Mountain view, CA, USA, July 30-31.
David D. Lewis and Kimberly A. Knowles. 1997.
Threading electronic mail: a preliminary study. Inf.
Process. Manage., 33(2):209?217.
David D. Lewis. 1996. The trec-4 filtering track. In The
Fourth Text REtrieval Conference (TREC-4), pages
165?180, Gaithersburg, Maryland.
Xin Li, Paul Morie, and Dan Roth. 2005. Semantic inte-
gration in text: from ambiguous names to identifiable
entities. AI Magazine. Special Issue on Semantic Inte-
gration, 26(1):45?58.
Bradley Malin. 2005. Unsupervised name disambigua-
tion via social network similarity. In Workshop on
Link Analysis, Counter-terrorism, and Security, in
conjunction with the SIAM International Conference
on Data Mining, Newport Beach, CA, USA, April 21-
23.
Gideon S. Mann and David Yarowsky. 2003. Unsuper-
vised personal name disambiguation. In Proceedings
of the seventh conference on Natural language learn-
ing at HLT-NAACL 2003, pages 33?40, Morristown,
NJ, USA. Association for Computational Linguistics.
Andrew McCallum, Andres Corrada-Emmanuel, and
XueruiWang Wang. 2005. Topic and role discovery
in social networks. In IJCAI.
Einat Minkov, William W. Cohen, and Andrew Y. Ng.
2006. Contextual search and name disambiguation in
email using graphs. In SIGIR ?06: Proceedings of
the 29th annual international ACM SIGIR conference
on Research and development in information retrieval,
pages 27?34, New York, NY, USA. ACM Press.
Patric Reuther. 2006. Personal name matching: New test
collections and a social network based approach.
949
Proceedings of the 2009 Workshop on Graph-based Methods for Natural Language Processing, ACL-IJCNLP 2009, pages 66?74,
Suntec, Singapore, 7 August 2009.
c
?2009 ACL and AFNLP
Opinion Graphs for Polarity and Discourse Classification
?
Swapna Somasundaran
Univ. of Pittsburgh
Pittsburgh, PA 15260
swapna@cs.pitt.edu
Galileo Namata
Univ. of Maryland
College Park, MD 20742
namatag@cs.umd.edu
Lise Getoor
Univ. of Maryland
College Park, MD 20742
getoor@cs.umd.edu
Janyce Wiebe
Univ. of Pittsburgh
Pittsburgh, PA 15260
wiebe@cs.pitt.edu
Abstract
This work shows how to construct
discourse-level opinion graphs to perform
a joint interpretation of opinions and dis-
course relations. Specifically, our opinion
graphs enable us to factor in discourse in-
formation for polarity classification, and
polarity information for discourse-link
classification. This inter-dependent frame-
work can be used to augment and im-
prove the performance of local polarity
and discourse-link classifiers.
1 Introduction
Much research in opinion analysis has focused on
information from words, phrases and semantic ori-
entation lexicons to perform sentiment classifica-
tion. While these are vital for opinion analysis,
they do not capture discourse-level associations
that arise from relations between opinions. To cap-
ture this information, we propose discourse-level
opinion graphs for classifying opinion polarity.
In order to build our computational model, we
combine a linguistic scheme opinion frames (So-
masundaran et al, 2008) with a collective classifi-
cation framework (Bilgic et al, 2007). According
to this scheme, two opinions are related in the dis-
course when their targets (what they are about) are
related. Further, these pair-wise discourse-level
relations between opinions are either reinforcing
or non-reinforcing frames. Reinforcing frames
capture reinforcing discourse scenarios where the
individual opinions reinforce one another, con-
tributing to the same opinion polarity or stance.
Non-reinforcing frames, on the other hand, cap-
ture discourse scenarios where the individual opin-
ions do not support the same stance. The indi-
vidual opinion polarities and the type of relation
?
This research was supported in part by the Department
of Homeland Security under grant N000140710152.
between their targets determine whether the dis-
course frame is reinforcing or non-reinforcing.
Our polarity classifier begins with information
from opinion lexicons to perform polarity classifi-
cation locally at each node. It then uses discourse-
level links, provided by the opinion frames, to
transmit the polarity information between nodes.
Thus the opinion classification of a node is not
just dependent on its local features, but also on the
class labels of related opinions and the nature of
these links. We design two discourse-level link
classifiers: the target-link classifier, which deter-
mines if a given node pair has unrelated targets (no
link), or if their targets have a same or alternative
relation, and the frame-link classifier, which deter-
mines if a given node pair has no link, reinforcing
or non-reinforcing link relation. Both these classi-
fiers too first start with local classifiers that use lo-
cal information. The opinion graph then provides
a means to factor in the related opinion informa-
tion into the link classifiers. Our approach enables
using the information in the nodes (and links) to
establish or remove links in the graph. Thus in-
formation flows to and fro between all the opinion
nodes and discourse-level links to achieve a joint
inference.
The paper is organized as follows: We first de-
scribe opinion graphs, a structure that can capture
discourse-level opinion relationships in Section 2,
and then describe our joint interpretation approach
to opinion analysis in Section 3. Next, we describe
our algorithm for joint interpretation in Section 4.
Our experimental results are reported in Section 5.
We discuss related work in Section 6 and conclude
in Section 7.
2 Discourse-Level Opinion Graphs
The pairwise relationships that compose opinion
frames can be used to construct a graph over opin-
ion expressions in a discourse, which we refer
to as the discourse-level opinion graph (DLOG).
66
Figure 1 Opinion Frame Annotations.
In this section, we describe these graphs and il-
lustrate their applicability to goal-oriented multi-
party conversations.
The nodes in the DLOG represent opinions, and
there are two kinds of links: target links and frame
links. Each opinion node has a polarity (positive,
negative or neutral) and type (sentiment or argu-
ing). Sentiment opinions are evaluations, feelings
or judgments about the target. Arguing opinions
argue for or against something. Target links are
labeled as either same or alternatives. Same links
hold between targets that refer to the same en-
tity or proposition, while alternative links hold be-
tween targets that are related by virtue of being op-
posing (mutually exclusive) options in the context
of the discourse. The frame links correspond to
the opinion frame relation between opinions.
We illustrate the construction of the opinion
graph with an example (Example 1, from Soma-
sundaran et al (2008)) from a multi-party meet-
ing corpus where participants discuss and design a
new TV remote control. The opinion expressions
are in bold and their targets are in italics. Notice
here that speaker D has a positive sentiment to-
wards the rubbery material for the TV remote.
(1) D:: ... this kind of rubbery material, it?s a bit more
bouncy, like you said they get chucked around a lot.
A bit more durable and that can also be ergonomic
and it kind of feels a bit different from all the other
remote controls.
All the individual opinions in this example are
essentially regarding the same thing ? the rub-
bery material. The speaker?s positive sentiment is
apparent from the text spans bit more bouncy,
bit more durable, ergonomic and a bit different
from all the other remote controls. The explicit
targets of these opinions (it?s, that, and it) and the
implicit target of ?a bit more durable? are thus all
linked with same relations.
Figure 1 illustrates the individual opinion anno-
tations, target annotations (shown in italics) and
the relations between the targets (shown in dotted
lines). Note that the target of a bit more durable
is a zero span ellipsis that refers back to the rub-
bery material. The opinion frames resulting from
the individual annotations make pairwise connec-
tions between opinion instances, as shown in bold
lines in the figure. For example, the two opinions
bit more bouncy and ergonomic, and the same
link between their targets (it?s and that), make up
an opinion frame. An opinion frame type is de-
rived from the details (type and polarity) of the
opinions it relates and the target relation involved.
Even though the different combinations of opin-
ion type (sentiment and arguing), polarity (posi-
tive and negative) and target links (same and al-
ternative) result in many distinct frames types (32
in total), they can be grouped, according to their
discourse-level characteristics, into the two cat-
egories reinforcing and non-reinforcing. In this
work, we only make this category distinction for
opinion frames and the corresponding frame links.
The next example (Example 2, also from So-
masundaran et al (2008)) illustrates an alterna-
tive target relation. In the domain of TV remote
controls, the set of all shapes are alternatives to
one another, since a remote control may have only
one shape at a time. In such scenarios, a positive
opinion regarding one choice may imply a nega-
tive opinion toward competing choices, and vice
versa. In this passage, speaker C?s positive stance
towards the curved shape is brought out even more
strongly with his negative opinions toward the al-
ternative, square-like, shapes.
(2) C:: . . . shapes should be curved, so round shapes.
Nothing square-like.
.
.
.
C:: . . . So we shouldn?t have too square corners
and that kind of thing.
The reinforcing frames characteristically show
a reinforcement of an opinion or stance in the dis-
course. Both the examples presented above depict
a reinforcing scenario. In the first example, the
opinion towards the rubbery material is reinforced
by repeated positive sentiments towards it, while
in the second example the positive stance towards
the curved shapes is further reinforced by nega-
tive opinions toward the alternative option. Ex-
amples of non-reinforcing scenarios are ambiva-
lence between alternative options (for e.g., ?I like
the rubbery material but the plastic will be much
67
cheaper?) or mixed opinions about the same tar-
get (for e.g., weighing pros and cons ?The rubbery
material is good but it will be just so expensive?).
3 Interdependent Interpretation
Our interdependent interpretation in DLOGs is
motivated by the observation that, when two opin-
ions are related, a clear knowledge of the polarity
of one of them makes interpreting the other much
easier. For instance, suppose an opinion classi-
fier wants to find the polarity of all the opinion
expressions in Example 1. As a first step, it can
look up opinion lexicons to infer that words like
?bouncy?, ?durable? and ? ergonomic? are pos-
itive. However, ?a bit different ? cannot be re-
solved via this method, as its polarity can be dif-
ferent in different scenarios.
Suppose now we relate the targets of opinions.
There are clues in the passage that the targets are
related via the same relation; for instance they
are all third person pronouns occurring in adja-
cent clauses and sentences. Once we relate the
targets, the opinions of the passage are related via
target links in the discourse opinion graph. We
are also able to establish frames using the opinion
information and target link information wherever
they are available, i.e., a reinforcing link between
bit more bouncy and ergonomic. For the places
where all the information is not available (between
ergonomic and a bit different) there are multiple
possibilities. Depending on the polarity, either a
reinforcing frame (if a bit different has positive
polarity) or a non-reinforcing frame (if a bit dif-
ferent has negative polarity) can exist. There are
clues in the discourse that this passage represents
a reinforcing scenario. For instance there are rein-
forcing frames between the first few opinions, the
repeated use of ?and? indicates a list, conjunction
or expansion relation between clauses (according
to the Penn Discourse TreeBank (PDTB) (Prasad
et al, 2008)), and there is a lack of contrastive
clues that would indicate a change in the opin-
ion. Thus the reinforcing frame link emerges as
being the most likely candidate. This in turn dis-
ambiguates the polarity of a bit different. Thus,
by establishing target links and frame links be-
tween the opinion instances, we are able to per-
form a joint interpretation of the opinions.
The interdependent framework of this example
is iterative and dynamic ? the information in the
nodes can be used to change the structure (i.e.,
establish new links), and the structure provides a
framework to change node polarity. We build our
classification framework and feature sets with re-
spect to this general framework, where the node
labels as well as the structure of the graph are pre-
dicted in a joint manner.
Thus our interdependent interpretation frame-
work has three main units: an instance polarity
classifier (IPC), a target-link classifier (TLC), and
a frame-link classifier (FLC). IPC classifies each
node (instance), which may be a sentence, utter-
ance or an other text span, as positive, negative
or neutral. The TLC determines if a given node
pair has related targets and whether they are linked
by a same or alternative relation. The FLC deter-
mines if a given node pair is related via frames,
and whether it is a reinforcing or non-reinforcing
link. As we saw in the example, there are local
clues available for each unit to arrive at its classi-
fication. The discourse augments this information
to aid in further disambiguation.
4 Collective Classification Framework
For our collective classification framework, we
use a variant of the iterative classification al-
gorithm (ICA) proposed by Bilgic et al(2007).
It combines several common prediction tasks in
graphs: object classification (predicting the label
of an object) and link prediction (predicting the
existence and class of a link between objects).
For our tasks, object classification directly corre-
sponds to predicting opinion polarity and the link
prediction corresponds to predicting the existence
of a same or alternative target link or a reinforc-
ing or non-reinforcing frame link between opin-
ions. We note that given the nature of our problem
formulation and approach, we use the terms link
prediction and link classification interchangeably.
In the collective classification framework, there
are two sets of features to use. The first are local
features which can be generated for each object or
link, independent of the links in which they par-
ticipate, or the objects they connect. For example,
the opinion instance may contain words that oc-
cur in sentiment lexicons. The local features are
described in Section 4.2. The second set of fea-
tures, the relational features, reflect neighborhood
information in the graph. For frame link classifi-
cation, for example, there is a feature indicating
whether the connected nodes are predicted to have
the same polarity. The relational features are de-
68
scribed in Section 4.3.
4.1 DLOG-ICA Algorithm
Our variant of the ICA algorithm begins by pre-
dicting the opinion polarity, and link type using
only the local features. We then randomly order
the set of all opinions and links and, in turn, pre-
dict the polarity or class using the local features
and the values of the currently predicted relational
features based on previous predictions. We repeat
this until some stopping criterion is met. For our
experiments, we use a fixed number of 30 itera-
tions which was sufficient, in most of our datasets,
for ICA to converge to a solution. The pseudocode
for the algorithm is shown in Algorithm 4.1.
Algorithm 1 DLOG-ICA Algorithm
for each opinion o do {bootstrapping}
Compute polarity for o using local attributes
end for
for each target link t do {bootstrapping}
Compute label for t using local attributes
end for
for each frame link f do {bootstrapping}
Compute label for f using local attributes
end for
repeat {iterative classification}
Generate ordering I over all nodes and links
for each i in I do
if i is an opinion instance then
Compute polarity for i using local and
relational attributes
else if i is a target link then
Compute class for i using local and re-
lational attributes
else if i is a frame link then
Compute class for i using local and re-
lational attributes
end if
end for
until Stopping criterion is met
The algorithm is one very simple way of making
classifications that are interdependent. Once the
local and relational features are defined, a variety
of classifiers can be used. For our experiments, we
use SVMs. Additional details are provided in the
experiments section.
4.2 Local Features
For the local polarity classifier, we employ opin-
ion lexicons, dialog information, and unigram fea-
Feature Task
Time difference between the node pair TLC, FLC
Number of intervening instances TLC, FLC
Content word overlap between the node pair TLC,FLC
Focus space overlap between the node pair TLC, FLC
Bigram overlap between the node pair * TLC, FLC
Are both nodes from same speaker * TLC, FLC
Bag of words for each node TLC, FLC
Anaphoric indicator in the second node TLC
Adjacency pair between the node pair FLC
Discourse relation between node pair * FLC
Table 1: Features and the classification task it is used for;
TLC = target-link classification, FLC = Frame-link classifi-
cation
tures. We use lexicons that have been success-
fully used in previous work (the polarity lexicon
from (Wilson et al, 2005) and the arguing lexi-
con (Somasundaran et al, 2007)). Previous work
used features based on parse trees, e.g., (Wilson et
al., 2005; Kanayama and Nasukawa, 2006), but
our data has very different characteristics from
monologic texts ? the utterances and sentences are
much shorter, and there are frequent disfluencies,
restarts, hedging and repetitions. Because of this,
we cannot rely on parsing features. On the other
hand, in this data, we have dialog act information
1
(Dialog Acts), which we can exploit. Note that the
IPC uses only the Dialog Act tags (instance level
tags like Inform, Suggest) and not the dialog struc-
ture information.
Opinion frame detection between sentences has
been previously attempted (Somasundaran et al,
2008) by using features that capture discourse
and dialog continuity. Even though our link
classification tasks are not directly comparable
(the previous work performs binary classifica-
tion of frame-present/frame-absent between opin-
ion bearing sentences, while this work performs
three-way classification: no-link/reinforcing/non-
reinforcing between DA pairs), we adapt the fea-
tures for the link classification tasks addressed
here. These features depend on properties of the
nodes that the link connects. We also create some
new features that capture discourse relations and
lexical overlap.
Table 1 lists the link classification features.
New features are indicated with a ?*?. Continu-
ous discourse indicators, like time difference be-
tween the node pair and number of intervening
instances are useful for determining if the two
nodes can be related. The content word over-
1
Manual annotations for Dialog act tags and adjacency
pairs are available for the AMI corpus.
69
lap, and focus space overlap features (the focus
space for an instance is a list of the most recently
used NP chunks; i.e., NP chunks in that instance
and a few previous instances) capture the overlap
in topicality within the node pair; while the bi-
gram overlap feature captures the alignment be-
tween instances in terms of function words as well
as content words. The entity-level relations are
captured by the anaphoric indicator feature that
checks for the presence of pronouns such as it and
that in the second node in the node pair. The adja-
cency pair and discourse relation are actually fea-
ture sets that indicate specific dialog-structure and
discourse-level relations. We group the list of dis-
course relations from the PDTB into the following
sets: expansion, contingency, alternative, tempo-
ral, comparison. Each discourse relation in PDTB
is associated with a list of discourse connective
words.
2
Given a node pair, if the first word of the
later instance (or the last word first instance) is a
discourse connective word, then we assume that
this node is connecting back (or forward) in the
discourse and the feature set to which the connec-
tive belongs is set to true (e.g., if a latter instance
is ?because we should ...?, it starts with the con-
nective ?because?, and connects backwards via a
contingency relation). The adjacency pair feature
indicates the presence of a particular dialog struc-
ture (e.g., support, positive-assessment) between
the nodes.
4.3 Relational Features
In addition to the local features, we introduce re-
lational features (Table 2) that incorporate related
class information as well as transfer label informa-
tion between classifiers. As we saw in our example
in Figure 1, we need to know not only the polar-
ity of the related opinions, but also the type of the
relation between them. For example, if the frame
relation between ergonomic and a bit different is
non-reinforcing, then the polarity of a bit differ-
ent is likely to be negative. Thus link labels play
an important role in disambiguating the polarity.
Accordingly, our relational features transfer infor-
mation of class labels from other instances of the
same classifier as well as between different clas-
sifiers. Table 2 lists our relational features. Each
row represents a set of features. Features are gen-
erated for all combinations of x, y and z for each
2
The PDTB provides a list of discourse connectives and
the list of discourse relations each connective signifies.
row. For example, one of the features in the first
row is Number of neighbors with polarity type pos-
itive, that are related via a reinforcing frame link.
Thus each feature for the polarity classifier iden-
tifies neighbors for a given node via a specific re-
lation (z or y) and factors in their polarity values.
Similarly, both link classifiers use polarity infor-
mation of the node pair, and other link relations
involving the nodes of the pair.
5 Evaluation
We experimentally test our hypothesis that
discourse-level information is useful and non-
redundant with local information. We also wanted
to test how the DLOG performs for varying
amounts of available annotations: from full neigh-
borhood information to absolutely no neighbor-
hood information.
Accordingly, for polarity classification, we im-
plemented three scenarios: ICA-LinkNeigh, ICA-
LinkOnly and ICA-noInfo. The ICA-LinkNeigh
scenario measures the performance of the DLOG
under ideal conditions (full neighborhood infor-
mation) ? the structure of the graph (link infor-
mation) as well as the neighbors? class are pro-
vided (by an oracle). Here we do not need the
TLC, or the FLC to predict links and the Instance
Polarity Classifier (IPC) is not dependent on its
predictions from the previous iteration. On the
other hand, the ICA-noInfo scenario is the other
extreme, and has absolutely no neighborhood in-
formation. Each node does not know which nodes
in the network it is connected to apriori, and also
has no information about the polarity of any other
node in the network. Here, the structure of the
graph, as well as the node classes, have to be in-
ferred via the collective classification framework
described in Sections 3 and 4. The ICA-LinkOnly
is an intermediate condition, and is representative
of scenarios where the discourse relationships be-
tween nodes is known. Here we start with the link
information (from an oracle) and the IPC uses the
collective classification framework to infer neigh-
bor polarity information.
Similarly, we vary the amounts of neighbor-
hood information for the TLC and FLC classifiers.
In the ICA-LinkNeigh condition, TLC and FLC
have full neighborhood information. In the ICA-
noInfo condition, TLC and FLC are fully depen-
dent on the classifications of the previous rounds.
In the ICA-Partial condition, the TLC classifier
70
Feature
Opinion Polarity Classification
Number of neighbors with polarity type x linked via frame link z
Number of neighbors with polarity type x linked via target link y
Number of neighbors with polarity type x and same speaker linked via frame link z
Number of neighbors with polarity type x and same speaker linked via target link y
Target Link Classification
Polarity of the DA nodes
Number of other target links y involving the given DA nodes
Number of other target links y involving the given DA nodes and other same-speaker nodes
Presence of a frame link z between the nodes
Frame Link Classification
Polarity of the DA nodes
Number of other frame links z involving the given DA nodes
Number of other frame links z involving the given DA nodes and other same-speaker nodes
Presence of a target link y between the nodes
Table 2: Relational features: x ? {non-neutral (i.e., positive or negative), positive, negative}, y ? {same, alt}, z ?
{reinforcing, non-reinforcing}
uses true frame-links and polarity information,
and previous-stage classifications for information
about neighborhood target links; the FLC classi-
fier uses true target-links and polarity information,
and previous-stage classifications for information
about neighborhood frame-links.
5.1 Data
For our experiments, we use the opinion frame
annotations from previous work (Somasundaran
et al, 2008). These annotations consist of the
opinion spans that reveal opinions, their targets,
the polarity information for opinions, the labeled
links between the targets and the frame links be-
tween the opinions. The annotated data consists
of 7 scenario-based, multi-party meetings from the
AMI meeting corpus (Carletta et al, 2005). The
manual Dialog Act (DA) annotations, provided by
AMI, segment the meeting transcription into sep-
arate dialog acts. We use these DAs as nodes or
instances in our opinion graph.
A DA is assigned the opinion orientation of the
words it contains (for example, if a DA contains a
positive opinion expression, then the DA assigned
the positive opinion category). We filter out very
small DAs (DAs with fewer than 3 tokens, punctu-
ation included) in order to alleviate data skewness
problem in the link classifiers. This gives us a to-
tal of 4606 DA instances, of which 1935 (42%)
have opinions. Out of these 1935, 61.7% are posi-
tive, 30% are negative and the rest are neutral. The
DAs that do not have opinions are considered neu-
tral, and have no links in the DLOG. We create
DA pairs by first ordering the DAs by their start
time, and then pairing a DA with five DAs before
it, and five DAs after it. The classes for target-
link classification are no-link, same, alt. The gold
standard target-link class is decided for a DA pair
based on the target link between the targets of the
opinions contained in that pair. Similarly, the la-
bels for the frame-link labeling task are no-link,
reinforcing, non-reinforcing. The gold standard
frame link class is decided for a DA pair based on
the frame between opinions contained by that pair.
In our data, of the 4606 DAs, 1118 (24.27%) par-
ticipate in target links with other DAs, and 1056
(22.9%) form frame links. The gold standard data
for links, which has pair-wise information, has a
total of 22,925 DA pairs, of which 1371 (6%) pairs
have target links and 1264 (5.5%) pairs have frame
links.
We perform 7-fold cross-validation experi-
ments, using the 7 meetings. In each fold, 6 meet-
ings are used for training and one meeting is used
for testing.
5.2 Classifiers
Our baseline (Base) classifies the test data based
on the distribution of the classes in the training
data. Note that due to the heavily skewed nature of
our link data, this classifier performs very poorly
for minority class prediction, even though it may
achieve good overall accuracy.
For our local classifiers, we used the classifiers
from the Weka toolkit (Witten and Frank, 2002).
For opinion polarity, we used the Weka?s SVM
implementation. For the target link and frame link
classes, the huge class skew caused SVM to learn a
trivial model and always predict the majority class.
To address this, we used a cost sensitive classifier
in Weka where we set the cost of misclassifying a
less frequent class, A, to a more frequent class, B,
71
Base Local ICA
LinkNeigh LinkOnly noInfo
Acc 45.9 68.7 78.8 72.9 68.4
Class: neutral (majority class)
Prec 61.2 76.3 83.9 78.2 73.5
Rec 61.5 83.9 89.6 89.1 86.6
F1 61.1 79.6 86.6 83.2 79.3
Class: positive polarity
Prec 26.3 56.2 70.9 63.3 57.6
Rec 26.1 46.6 62.0 47.0 42.8
F1 25.8 50.4 65.9 53.5 48.5
Class: negative polarity
Prec 12.4 52.3 64.6 56.3 55.2
Rec 12.2 44.3 60.2 48.2 38.2
F1 12.2 46.0 61.9 51.2 43.9
Table 3: Performance of Polarity Classifiers
as |B|/|A| where |class| is the size of the class in
the training set. All other misclassification costs
are set to 1.
For our collective classification, we use the
above classifiers for local features (l) and use sim-
ilar, separate classifiers for relational features (r).
For example, we learned an SVM for predicting
opinion polarity using only the local features and
learned another SVM using only relational fea-
tures. For the ICA-noInfo condition, where we
use TLC and FLC classifiers, we combine the
predictions using a weighted combination where
P (class|l, r) = ? ? P (class|l) + (1 ? ?) ?
P (class|r). This allows us to vary the influence
each feature set has to the overall prediction. The
results for ICA-noInfo are reported on the best per-
forming ? (0.7).
5.3 Results
Our polarity classification results are presented
in Table 3, specifically accuracy (Acc), precision
(Prec), recall (Rec) and F-measure (F1). As we
can see, the results are mixed. First, we no-
tice that the Local classifier shows substantial im-
provement over the baseline classifier. This shows
that the lexical and dialog features we use are in-
formative of opinion polarity in multi-party meet-
ings.
Next, notice that the ICA-LinkNeigh classifier
performs substantially better than the Local clas-
sifier for all metrics and all classes. The accuracy
improves by 10 percentage points, while the F-
measure improves by about 15 percentage points
for the minority (positive and negative) classes.
This result confirms that our discourse-level opin-
ion graphs are useful and discourse-level informa-
tion is non-redundant with lexical and dialog-act
Base Local ICA
LinkNeigh Partial noInfo
TLC
Acc 88.5 85.8 98.1 98.2 86.3
P-M 33.3 35.9 76.1 76.1 36.3
R-M 33.3 38.1 78.1 78.1 38.1
F1-M 33.1 36.0 74.6 74.6 36.5
FLC
Acc 89.3 86.2 98.9 98.9 87.6
P-M 33.3 36.9 81.3 82.8 38.0
R-M 33.4 41.2 82.2 84.4 41.7
F1-M 33.1 37.2 80.7 82.3 38.1
Table 4: Performance of Link Classifiers
information.
The results for ICA-LinkOnly follow the same
trend as for ICA-LinkNeigh, with a 3 to 5 percent-
age point improvement. These results show that
even when the neighbors? classes are not known
a priori, joint inference using discourse-level rela-
tions helps reduce errors from local classification.
However, the performance of the ICA-noInfo
system, which is given absolutely no starting in-
formation, is comparable to the Local classifier for
the overall accuracy and F-measure metrics for the
neutral class. There is slight improvement in pre-
cision for both the positive and negative classes,
but there is a drop in their recall. The reason this
classifier does no better than the Local classifier is
because the link classifiers TLC and FLC predict
?none? predominantly due to the heavy class skew.
The performance of the link classifiers are re-
ported in Table 4, specifically the accuracy (Acc)
and macro averages over all classes for preci-
sion (P-M), recall (R-M) and F-measure (F1-M).
Due to the heavy skew in the data, accuracy
of all classifiers is high; however, the macro F-
measure, which depends on the F1 of the minor-
ity classes, is poor for the ICA-noInfo. Note,
however, that when we provide some (Partial) or
full (LinkNeigh) neighborhood information for the
Link classifiers, the performance of these classi-
fiers improve considerably. This overall observed
trend is similar to that observed with the polarity
classifiers.
6 Related Work
Previous work on polarity disambiguation has
used contextual clues and reversal words (Wil-
son et al, 2005; Kennedy and Inkpen, 2006;
Kanayama and Nasukawa, 2006; Devitt and Ah-
mad, 2007; Sadamitsu et al, 2008). However,
these do not capture discourse-level relations.
72
Polanyi and Zaenen (2006) observe that a cen-
tral topic may be divided into subtopics in or-
der to perform evaluations. Similar to Somasun-
daran et al (2008), Asher et al (2008) advo-
cate a discourse-level analysis in order to get a
deeper understanding of contextual polarity and
the strength of opinions. However, these works do
not provide an implementation for their insights.
In this work we demonstrate a concrete way that
discourse-level interpretation can improve recog-
nition of individual opinions and their polarities.
Graph-based approaches for joint inference in
sentiment analysis have been explored previously
by many researchers. The biggest difference be-
tween this work and theirs is in what the links
represent linguistically. Some of these are not
related to discourse at all (e.g., lexical similari-
ties (Takamura et al, 2007), morphosyntactic sim-
ilarities (Popescu and Etzioni, 2005) and word
based measures like TF-IDF (Goldberg and Zhu,
2006)). Some of these work on sentence cohesion
(Pang and Lee, 2004) or agreement/disagreement
between speakers (Thomas et al, 2006; Bansal
et al, 2008). Our model is not based on sen-
tence cohesion or structural adjacency. The re-
lations due to the opinion frames are based on
relationships between targets and discourse-level
functions of opinions being mutually reinforcing
or non-reinforcing. Adjacent instances need not be
related via opinion frames, while long distant rela-
tions can be present if opinion targets are same or
alternatives. Also, previous efforts in graph-based
joint inference in opinion analysis has been text-
based, while our work is over multi-party conver-
sations.
McDonald et al (2007) propose a joint model
for sentiment classification based on relations de-
fined by granularity (sentence and document).
Snyder and Barzilay (2007) combine an agree-
ment model based on contrastive RST relations
with a local aspect (topic) model. Their aspects
would be related as same and their high contrast
relations would correspond to (a subset of) the
non-reinforcing frames.
In the field of product review mining, senti-
ments and features (aspects or targets) have been
mined (for example, Yi et al (2003), Popescu and
Etzioni (2005), and Hu and Liu (2006)). More re-
cently there has been work on creating joint mod-
els of topic and sentiments (Mei et al, 2007; Titov
and McDonald, 2008) to improve topic-sentiment
summaries. We do not model topics; instead we
directly model the relations between targets. The
focus of our work is to jointly model opinion po-
larities via target relations. The task of finding co-
referent opinion topics by (Stoyanov and Cardie,
2008) is similar to our target link classification
task, and we use somewhat similar features. Even
though their genre is different, we plan to experi-
ment with their full feature set for improving our
TLC system.
Turning to collective classification, there have
been various collective classification frameworks
proposed (for example, Neville and Jensen (2000),
Lu and Getoor (2003), Taskar et al (2004),
Richardson and Domingos (2006)). In this pa-
per, we use an approach proposed by (Bilgic et
al., 2007) which iteratively predicts class and link
existence using local classifiers. Other joint mod-
els used in sentiment classification include the spin
model (Takamura et al, 2007), relaxation labeling
(Popescu and Etzioni, 2005), and label propaga-
tion (Goldberg and Zhu, 2006).
7 Conclusion
This work uses an opinion graph framework,
DLOG, to create an interdependent classifica-
tion of polarity and discourse relations. We em-
ployed this graph to augment lexicon-based meth-
ods to improve polarity classification. We found
that polarity classification in multi-party conver-
sations benefits from opinion lexicons, unigram
and dialog-act information. We found that the
DLOGs are valuable for further improving polar-
ity classification, even with partial neighborhood
information. Our experiments showed three to
five percentage points improvement in F-measure
with link information, and 15 percentage point
improvement with full neighborhood information.
These results show that lexical and discourse in-
formation are non-redundant for polarity classi-
fication, and our DLOG, that employs both, im-
proves performance.
We discovered that link classification is a dif-
ficult problem. Here again, we found that by us-
ing the DLOG framework, and using even partial
neighborhood information, improvements can be
achieved.
References
N. Asher, F. Benamara, and Y. Mathieu. 2008. Dis-
tilling opinion in discourse: A preliminary study.
73
COLING-2008.
M. Bansal, C. Cardie, and L. Lee. 2008. The power of
negative thinking: Exploiting label disagreement in
the min-cut classification framework. In COLING-
2008.
M. Bilgic, G. M. Namata, and L. Getoor. 2007. Com-
bining collective classification and link prediction.
In Workshop on Mining Graphs and Complex Struc-
tures at the IEEE International Conference on Data
Mining.
J. Carletta, S. Ashby, S. Bourban, M. Flynn,
M. Guillemot, T. Hain, J. Kadlec, V. Karaiskos,
W. Kraaij, M. Kronenthal, G. Lathoud, M. Lincoln,
A. Lisowska, I. McCowan, W. Post, D. Reidsma, and
P. Wellner. 2005. The AMI Meetings Corpus. In
Proceedings of the Measuring Behavior Symposium
on ?Annotating and measuring Meeting Behavior?.
A. Devitt and K. Ahmad. 2007. Sentiment polarity
identification in financial news: A cohesion-based
approach. In ACL 2007.
A. B. Goldberg and X. Zhu. 2006. Seeing stars
when there aren?t many stars: Graph-based semi-
supervised learning for sentiment categorization. In
HLT-NAACL 2006 Workshop on Textgraphs: Graph-
based Algorithms for Natural Language Processing.
M. Hu and B. Liu. 2006. Opinion extraction and sum-
marization on the Web. In 21st National Conference
on Artificial Intelligence (AAAI-2006).
H. Kanayama and T. Nasukawa. 2006. Fully auto-
matic lexicon expansion for domain-oriented sen-
timent analysis. In EMNLP-2006, pages 355?363,
Sydney, Australia.
A. Kennedy and D. Inkpen. 2006. Sentiment classi-
fication of movie reviews using contextual valence
shifters. Computational Intelligence, 22(2):110?
125.
Q. Lu and L. Getoor. 2003. Link-based classification.
In Proceedings of the International Conference on
Machine Learning (ICML).
R. McDonald, K. Hannan, T. Neylon, M. Wells, and
J. Reynar. 2007. Structured models for fine-to-
coarse sentiment analysis. In ACL 2007.
Q. Mei, X. Ling, M. Wondra, H. Su, and C Zhai. 2007.
Topic sentiment mixture: modeling facets and opin-
ions in weblogs. In WWW ?07. ACM.
J. Neville and D. Jensen. 2000. Iterative classifica-
tion in relational data. In In Proc. AAAI-2000 Work-
shop on Learning Statistical Models from Relational
Data, pages 13?20. AAAI Press.
B. Pang and L. Lee. 2004. A sentimental education:
Sentiment analysis using subjectivity summarization
based on minimum cuts. In ACl 2004.
L. Polanyi and A. Zaenen, 2006. Contextual Valence
Shifters. Computing Attitude and Affect in Text:
Theory and Applications.
A.-M. Popescu and O. Etzioni. 2005. Extracting prod-
uct features and opinions from reviews. In HLT-
EMNLP 2005.
R. Prasad, A. Lee, N. Dinesh, E. Miltsakaki, G. Cam-
pion, A. Joshi, and B. Webber. 2008. Penn dis-
course treebank version 2.0. Linguistic Data Con-
sortium.
M. Richardson and P. Domingos. 2006. Markov logic
networks. Mach. Learn., 62(1-2):107?136.
K. Sadamitsu, S. Sekine, and M. Yamamoto. 2008.
Sentiment analysis based on probabilistic models us-
ing inter-sentence information. In LREC?08.
B. Snyder and R. Barzilay. 2007. Multiple aspect rank-
ing using the good grief algorithm. In HLT 2007:
NAACL.
S. Somasundaran, J. Ruppenhofer, and J. Wiebe. 2007.
Detecting arguing and sentiment in meetings. In
SIGdial Workshop on Discourse and Dialogue 2007.
S. Somasundaran, J. Wiebe, and J. Ruppenhofer. 2008.
Discourse level opinion interpretation. In Coling
2008.
V. Stoyanov and C. Cardie. 2008. Topic identification
for fine-grained opinion analysis. In Coling 2008.
H. Takamura, T. Inui, and M. Okumura. 2007. Extract-
ing semantic orientations of phrases from dictionary.
In HLT-NAACL 2007.
B. Taskar, M. Wong, P. Abbeel, and D. Koller. 2004.
Link prediction in relational data. In Neural Infor-
mation Processing Systems.
M. Thomas, B. Pang, and L. Lee. 2006. Get out the
vote: Determining support or opposition from con-
gressional floor-debate transcripts. In EMNLP 2006.
I. Titov and R. McDonald. 2008. A joint model of text
and aspect ratings for sentiment summarization. In
ACL 2008.
T. Wilson, J. Wiebe, and P. Hoffmann. 2005. Recog-
nizing contextual polarity in phrase-level sentiment
analysis. In HLT-EMNLP 2005.
I. H. Witten and E. Frank. 2002. Data mining: practi-
cal machine learning tools and techniques with java
implementations. SIGMOD Rec., 31(1):76?77.
J. Yi, T. Nasukawa, R. Bunescu, and W. Niblack. 2003.
Sentiment analyzer: Extracting sentiments about a
given topic using natural language processing tech-
niques. In ICDM-2003.
74
