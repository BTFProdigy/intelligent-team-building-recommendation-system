 English-Chinese CLIR using a Simplified PIRCS System 
 
K.L. Kwok, N. Dinstl and P. Deng 
Computer Science Department, Queens College, CUNY  
65-30 Kissena Blvd. 
Flushing, N.Y. 11367 
 
kwok@ir.cs.qc.edu 
 
 
ABSTRACT                                                           
A GUI is presented with our PIRCS retrieval system for 
supporting English-Chinese cross language information retrieval. 
The query translation approach is employed using the LDC 
bilingual wordlist.   Given an English query, different translation 
methods and their retrieval results can be demonstrated. 
 
1.    INTRODUCTION 
The purpose of cross language information retrieval (CLIR) is to 
allow a user to search, retrieve, and gain some content 
understanding of documents written in a language different from 
the one that the user is familiar with.  This is to be accomplished 
automatically without expert linguist assistance.  CLIR is of 
growing importance because it can literally open up a whole 
world of information for the user, especially with the ease and 
convenience of access and delivery of foreign documents 
provided by Internet logistics nowadays.  Searching and retrieving 
Chinese documents via English is a major sub-problem within 
CLIR because many people in the world use these two languages.  
For example, one would expect trade between China and the U.S. 
(and other countries) to grow significantly in the near future 
because of the impending WTO membership for China.  
Monitoring trends and status information from Chinese sources 
may be an essential operation for organizations interested in these 
affairs.  Chinese is a language completely different from English, 
and it is conceived to be difficult for foreigners to learn.  This 
paper describes some of the methods that we employ to deal with 
this problem, and presents a demonstrable system to illustrate the 
workings of cross language document retrieval.  In Section 2, 
techniques for the query translation approach to CLIR are 
discussed.  Section 3 contains a description of our simplified 
PIRCS retrieval system that is the basis for monolingual retrieval.  
Section 4 describes the GUI supporting interactive query input, 
document output and other implementation issues, and Section 5 
contains our conclusion and future work. 
   
 
 
 
 
 
 
 
 
 
 
2.  STRATEGY FOR CROSS LANGUAGE 
INFORMATION RETRIEVAL 
When faced with the situation of a language mismatch between 
the target documents and the query (information need statement) 
of a user, one could reduce them to a common representation 
language for retrieval purposes by automatically translating the 
query to the document language, by translating the documents to 
the query language, or by converting both to a third representation 
language [1].  By far the simplest and most common approach 
seems to be the first method, and probably as effective as the 
others, and we have also taken this route.  The question is what 
tools to use for query translation. 
   
It is well known that machine translation is generally fuzzy and 
inaccurate [6].  This is particularly true when translation output 
are judged by humans, who tend to be unforgiving.  However, 
translation for machine consumption (such as for information 
retrieval (IR)) may not be so bad because IR can operate with a 
bag of content terms without grammar, coherence or readability.  
What IR needs is that important content terms are correctly 
covered, even at the expense of noise translations.  For this 
purpose, we have combined two different methods of query 
translation to hedge for errors and improve coverage, viz. 
dictionary translation and MT software. 
 
2.1  Translation Using LDC Bilingual Wordlist 
One method we employ is dictionary translation using the LDC 
Chinese-English bilingual wordlist (www.morph.ldc.edu/Projects/ 
Chinese) which we label as ldc2ce.  It has about 120K entries.  
Each entry maps a Chinese character sequence (character, word or 
phrase) into one or more English explanation strings delimited 
with slashes.  Sample entries are shown below: 
 
1) ?? /gather/assembly/meeting/convocation/  
2) ?? /parts/components/assembly/.. 
3) ? /assembly hall/auditorium/..   
4) ?7 /legislative assembly/   
5) ?? /legislative council/.. 
 
 When an English word from a query is looked up in the ldc2ce 
wordlist, it will usually be mapped into many Chinese terms and 
reduction of the output is necessary.  For this disambiguation 
purpose, we employ several methods in succession as tabulated 
below: 
 
? Dictionary structure-based: ldc2ce format is employed 
to select the more correct mappings among word 
translations.  For example, when the word to translate is 
?assembly?, we would pick line 1) and 2) only, rather 
than the additional 3) or 4) because in the latter two, 
?assembly? appears in context with other words.  
? Phrase-based: ld2ce can also be regarded as a phrase 
dictionary by matching query strings with English 
explanations of Chinese terms, giving much more 
accurate phrase translations.  For example, if ?legislative 
assembly? appears in a query, it would match line 4) 
exactly and correctly, and would supersede all other 
single word translations such as those from lines 1), 2), 
3) and 5). 
? Corpus frequency-based: for single word translations 
with many candidates, those with higher occurrence 
frequency usually have higher probability of being 
correct.  
? Weight-based: a Chinese term set translated for one 
English word can be considered as a synonym set, so 
that each individual Chinese term is weighted with the 
inverse of the sum of the collection frequencies, and 
generally gives more effective retrieval.   
 
These dictionary disambiguation techniques have been 
implemented and tested with TREC collections.  In general, they 
accumulatively lead to successively more accurate retrievals [4].  
Their output can be demonstrated in our system.  
 
2.2  Translation Using MT Software  
COTS MT software for English to Chinese (or vice versa) are 
now quite readily available on the market.  They cost from scores 
to about a thousand dollars for a single license.  These software 
mostly operate on the PC Windows platform.  Their codes are 
proprietary and usually do not come with an API.  Interfacing 
them with a UNIX and C platform thus becomes quite difficult 
and perhaps impossible.  However, if one runs retrieval from a 
Windows environment, one can ?cut and paste? from their 
translation results.  We investigated several and found that one 
from Mainland China called HuaJian (www.atlan.com) performs 
quite well.  A number of other such packages can also be 
demonstrated within our system. 
 
Once an English query has been translated into Chinese, we can 
perform monolingual Chinese IR using our PIRCS system 
described in the next section.  The two translation outcomes, from 
dictionary and MT software, can be combined for retrieval and the 
final result is usually more effective than single translation 
method alone [3].   
 
3. A SIMPLIFIED PIRCS RETRIEVAL 
SYSTEM 
PIRCS (Probabilistic Indexing and Retrieval ? Components ? 
System) is our in-house developed document retrieval system that 
has participated in all previous TREC large-scale blind retrieval 
experiments with consistently good results.  It supports both 
English and Chinese languages.  PIRCS retrieval approach is 
based on the probabilistic indexing and retrieval methods, but 
extended with the ability to account for the influence of term 
frequencies and item length of documents or queries.  PIRCS can 
best be viewed as activation spreading in a three- layer network,  
 
.
.
.
.
.
.
.
di
DQ
T
qa
tk
wak
wka wki
wik
DTQQTD
doc-focused qry-focused
RSVd= k wik*wkaRSVq= k wak*wki
RSV = a*RSVq + (1-a)*RSVd
 
Figure 1. 3-Layer PIRCS Network 
 
 
Figure 1, that also supports learning from user-judged or pseudo-
relevant documents.  The details of our model are given in [4, 5]. 
As shown in Figure 1, PIRCS treats queries and documents as 
objects of the same kind.  They form a Q and a D layer of nodes 
connecting to the middle layer of term nodes.  Retrieval means 
spreading activation from a query node via common term nodes to 
a document node and summed into a retrieval status value RSVd 
for ranking.  This operation is gated by intervening edges with 
weights that are set according to the PIRCS model.  An analogous 
operation is to spread activation from document to query nodes, 
resulting in another RSVq that has been shown to have similarity 
to a simple language model [2, 4].  The final retrieval status value 
RSV is a linear combination of the two. 
 
Documents are pre-processed to create a direct file, an inverted 
file and a master dictionary that contains all the content terms and 
their usage statistics extracted from the collection.  After 
appropriate processing, the master dictionary helps construct the 
middle layer T nodes of Figure 1.  The direct file facilitates 
obtaining the terms and statistics contained in a given document, 
and helps construct the D node and D-to-T edges with weights.  
The inverted file facilitates obtaining the posting information of a 
given term, and helps construct the T-to-D edges with weights.  
At query time, a Q layer of one node is formed and the query 
terms are located on the T layer and linked in to define the Q-to-T 
and T-to-Q edges with weights. 
 
Once the 3-layer network is defined, ranking of documents for the 
query is achieved by activation spreading Q-T-D realizing the 
document-focused retrieval status value RSVd, and vice versa for 
the query-focused RSVq.  They are then linearly combined.  This 
crosslingual PIRCS demonstration runs either on a SUN Solaris or 
Linux platform.  The current implementation is a simplification of 
our batch PIRCS system and does not support automatic two-
stage retrieval for pseudo-relevance feedback.  However, users 
can interactively modify their queries to perform manual 
feedback. 
 
4.   GUI FOR INTERACTIVE CLIR 
A simplified PIRCS system with first stage retrieval will be used 
for demonstrating English-Chinese CLIR.  This system is based 
on an applet-servlet model that runs on a UNIX operating system 
(such as Solaris or Linux).  User?s interaction with PIRCS is 
supported via a GUI based on the Netscape browser (Internet 
Explorer is a better browser for this GUI, but UNIX has Netscape 
only).  The applet or HTML forms in the browser communicate 
with the servlet on the Apache server.  The servlet works as a 
bridge between the front-end program (in HTML and applet) and 
the background programs that do the translation or retrieval.  
Based on the input from the user, it can dispatch calls to the 
retrieval system and then format the output and send results back 
to the applet or directly into user?s browser through a customized 
applet-servlet channel via HTTP protocol. 
   
A GUI software that is modeled on that of ZPRISE 
(www.itl.nist.gov/iaui/894.02/works/papers/zp2/zp2.html) but 
enhanced for CLIR will be demonstrated.  The GUI supports five 
windows: one for English query input and editing, a translation 
window for displaying the Chinese terms mapped from the 
English query via the ldc2ce wordlist, a search-result window for 
displaying the fifty top-ranked document identities after retrieval, 
a document box for displaying the content of the current selected 
document in Chinese, and another index box showing the index 
terms used for retrieval together with their frequency statistics.  
This allows a user to do CLIR interactively. 
If run in a Windows environment, the translation box also allows 
input and editing for those users who know some Chinese.  In this 
test system, all Chinese are GB-encoded.  A query of a few words 
currently takes a few seconds for translation and about 20 seconds 
or more for retrieval depending on the number of unique terms.  
This response time can be improved in the future.   
 
A typical screen of the GUI is shown in Figure 2. A user starts by 
typing in an English query in free text.  When the ?Convert to 
Chinese GB? button is clicked, translation via the LDC dictionary 
look-up based on a default (best) option will be displayed.  Other 
options for translation such as using dictionary-structure only, add 
phrase matching, or include target collection frequency 
disambiguation, etc. (Section 2.1) can be chosen.  If the user finds 
too many English words left un-translated, s/he can re-phrase the 
English query wordings and repeat the process.  Otherwise, the 
retrieval button can be clicked and the top 50 document ID?s will 
be displayed in the search-result box (below the translation) sorted 
by the retrieval status value shown next to each ID.  Content of 
the top document is also displayed automatically in the large 
window with index terms high-lighted.  Additional documents 
following the one displayed can also be brought in for browsing 
purposes. 
 
 
.!JN 65537 . !TI  pd9311.150201 THE
!AB
	1?;?c?????Z?mVvs
?#?;?????
x???VHy8?????Y?u6?	1???
?;?c?
??????Z?m???vs?{|??V???m?u???"
	1?????z???)?b?z*??????|Wq?c?u???
m?Tc
H?	?|????!?:T?Y???q"
???_c?Y!}????%K?*a??|??????$???"
	1?y|c?? lT?????]?Y???Z|??
c?Y??
??Y???|??c?Y??!??8?9`?q?u`p"
	1??|HTc??]?Y???Z|?4?????*??|?
??#Y?
*Vr5Z?Ye"
	1?=|WqcH?????Z?m??F?|?u6???
?j"
xay
U.S. to separate the most-favored-nation 
status from human rights issue in China
^1.00 c? ^^1.00 ?  ^^1.00
???
^^1.00 
Z
^^1.00 
?
^^0.20 ?? 0.20 Z? 0.20 ?!
0.20 
V?
0.20 
V?
^^1.00 
#
^
Z?
7737
?
16548
Z
15765
?
5811 
c?
19471
pd9202-446300  1.5795    
pd9202-446200  1.4633    
pd9311-150201  1.4494    
pd9304-241800  1.4196    
C02bKBBW09Q<m  1.3629    
pd9207-484400  1.3556    
pd9304-248000  1.2974         
Clear Convert into Chinese GB
Keywords used to search are:
64 1
RetrieveClear
Show documents in new window
Top 50 documents
 
 
Figure 2. GUI for Cross Language Information Retrieval 
 
 
If the user knows some Chinese, s/he can have more options for 
interaction.  For example, the user can ?cut and paste? terms that 
s/he likes during perusal of the retrieved documents to do 
relevance feedback manually.  In addition, the query index terms 
(in Chinese) and their document frequencies are also displayed 
at the right hand bottom of the screen.  They can provide useful 
information about the query and can help the user make changes 
to it. 
   
As discussed before, we also make use of COTS MT software 
for query translation.  These can also be demonstrated 
separately.  However, these packages are proprietary, run under 
Windows platform, and are not interfaced with our retrieval 
system that is Linux based.  Another set-up that we can 
demonstrate is to use a Windows platform to run Internet 
Explorer that is also compatible with our GUI.  Internet 
connection will have to be made to our home computers at 
Queens College.  In this case, an MT software can be running in 
the background for query translation.  The translation result can 
then be ?cut and paste? to the translation window of our GUI.  
Users can compare retrieval results based on our dictionary 
approach and the MT software.  Alternatively, both translations 
can be combined to improve retrieval. 
 
5.   CONCLUSION AND FUTURE WORK 
English-Chinese CLIR is an important topic in Human 
Language Technology and has great utility.  This project 
demonstration combines simple translation with IR to provide a 
workable solution to CLIR.  It is an ongoing project and 
eventually can help non-Chinese speaking users access Chinese 
text in a reasonable fashion.  Our next step is to add capability to 
show gistings of a retrieved Chinese document in English to 
assist the user in understanding the document content.  Faster 
machines and upgrading of the programs would also provide 
speedier response time. 
 
6.   ACKNOWLEDGMENTS 
This work was partially supported by the Space and Naval 
Warfare Systems Center San Diego, under grant No. N66001-1-
8912. 
 
7.     REFERENCES 
[1] Grefenstette, G. Cross Language Information Retrieval.  
Kluwer, 1998. 
[2] Hiemstra, D & Kraaj, W. Twenty-One at TREC-7:ad-hoc 
and cross language track. In: Information Technology: The 
Seventh Text Retrieval Conference (TREC-7). E.M.Voorhees 
& D.K. Harman, (eds.), NIST Special Publication 500-242, 
GPO: Washington, D.C, 227-238, 1999. 
[3] Kwok, K.L, Grunfeld, L., Dinstl, N & Chan, M. TREC-9 
cross-lingual, web and question-answering track 
experiments using PIRCS (Draft). Preliminary paper at 
TREC-9 Conference, Gaithersburg, MD, Nov, 2000. 
[4] Kwok, K.L. Improving English and Chinese ad-hoc retrieval: 
a Tipster Text Phase 3 project report.  Information Retrieval, 
3(4):313-338, 2000. 
[5] Kwok, K.L. A network approach to probabilistic information 
retrieval. ACM Transactions on Office Information System, 
13:324-353, July 1995. 
[6] Nirenburg, S, Carbonell, J, Tomita, M & Goodman, K. 
(Eds.) MT: A Knowledge-Based Approach.  Morgan 
Kaufmann, 1994.
 
Corpus-Based Pinyin Name Resolution 
 
Kui-Lam KWOK  
Computer Science Dept., Queens College, 
 City University of New York  
65-30 Kissena Boulevard,  
Flushing, NY 11367, USA  
kwok@ir.cs.qc.edu 
Peter DENG 
 Computer Science Dept., Queens College,  
City University of New York 
65-30 Kissena Boulevard,  
Flushing, NY 11367, USA  
deng@ntkk.cs.qc.edu 
 
Abstract 
For readers of English text who know some 
Chinese, Pinyin codes that spell out Chinese 
names are often ambiguous as to their 
original Chinese character representations if 
the names are new or not well known.  For 
English-Chinese cross language retrieval, 
failure to accurately translate Pinyin names 
in a query to Chinese characters can lead to 
dismal retrieval effectiveness. This paper 
presents an approach of extracting Pinyin 
names from English text, suggesting 
translations to these Pinyin using a database 
of names and their characters with usage 
probabilities, followed with IR techniques 
with a corpus as a disambiguation tool to 
resolve the translation candidates. 
Introduction 
It is important for many applications to be able 
to identify and extract person names in text.  For 
English, capital letter beginning of a word is an 
important clue to spot names, in addition to 
other contextual ones.  When an English story 
refers to a foreign person, it is relatively easy to 
represent the person?s name if the alphabets 
have approximate correspondences between the 
languages. When it refers to a Chinese person, 
this is not possible because Chinese language 
does not use alphabets. The most popular 
method for this purpose is Pinyin coding (see, 
for example, the conversion project at the 
Library of Congress website (2002)), China?s 
official method of using English to spell out 
Chinese character pronounciations according to 
the Beijing Putonghua convention. Chinese 
characters are monosyllabic, and the large 
majority of them has one sound (ignoring tones) 
and hence one code. However, given a Pinyin it 
usually maps to multiple characters. Such an 
English Pinyin name raises ambiguity about the 
original Chinese characters that it refers to and 
hence the person.  If the name is well known, 
such as Mao ZeDong, this is not an issue; if the 
name is less frequently seen, one would like to 
see or confirm the actual Chinese characters.  
    The situation is similar to many Chinese word 
processing systems that use Pinyin as one of 
their input methods.  When a Pinyin is typed 
(sometimes with tonal denotation), many 
candidate characters will be displayed for the 
user to select.  The character list can be ordered 
based on a language model, Chen & Lee (2000), 
or on the user?s past habit.  When one comes 
across names as input however, a language 
model is not as helpful because practically any 
character combination is possible for names.   
    Pinyin names also present difficulties in a 
cross language information retrieval (CLIR) 
scenario.  Here, an English query is given to 
retrieve Chinese documents, and Pinyin names 
could be present as part of the query.  In general, 
one can have three approaches to CLIR as 
discussed in Grefenstette (1998): translate the 
Chinese documents to English and do retrieval 
matching in English; translate the English query 
to Chinese and do matching in Chinese; or 
translate both to an intermediate representation. 
With the first approach, one could use standard 
table lookup to map the characters of a Chinese 
name to Pinyin after identifying a name for 
extraction. Chen and Bai (1998), Sun et.al. 
(1994) have shown that this extraction process is 
not trivial since Chinese writing has no white 
space to delimit names or words. A more 
general difficulty is that the document collection 
may not be under a user?s control, but available 
for retrieval purposes only. This makes 
document translation to the query language (or 
to an intermediate language) not suitable.  A 
more flexible approach is to translate a query to 
Chinese and do retrieval in Chinese.  This has 
been the more popular method to use for CLIR 
in TREC experiments: Voorhees and Harman 
(2001). Whichever translation direction one 
chooses, a bilingual dictionary is essential. This 
dictionary however can be expected to be 
incomplete, especially with person names. 
Missing their translations can adversely impact 
on CLIR effectiveness.  This raises the question 
of how to render Pinyin names into Chinese 
characters for translingual retrieval purposes. 
    In the recent NTCIR-2 English-Chinese cross 
language experiments, Eguchi et.al. (2001), 
quite a few queries have names.  Kwok (2001) 
found that these lead to good monolingual 
retrieval because the names are quite specific 
and have good retrieval properties.  On the other 
hand, for CLIR that starts with English queries, 
not being able to translate Pinyin names 
correctly leads to substantial deficit in 
effectiveness. This causes comparisons with 
monolingual results particularly dismal. 
    In this paper, we propose an approach to 
resolve the characters from a Pinyin code.  It is 
based on: 1) a rule-based procedure to extract 
Pinyin codes for Chinese person names in 
English text; 2) a database for proposing 
candidate Chinese character sequences for a 
Pinyin code based on usage probabilities; and 3) 
a target collection and IR techniques as a 
confirmation tool for resolving or narrowing 
down the proposed candidates. These are 
described in Sections 1, 2, and 3 respectively.  
Section 4 presents some CLIR results and a 
measure of the effectiveness of our procedures. 
    We like to stress that even if one obtains the 
correct Chinese characters for a Pinyin, they can 
still refer to different persons with the same 
name. We do not address this issue here. 
1 Pinyin Name Extraction 
Chinese person names in Pinyin have fairly 
predictable formats such as: first alphabet of the 
family name (surname) is capitalized, as is the 
first word (or second word) of a given name. 
Two-syllable given names may appear as one 
word or two. The latter may be hyphenated, a 
practice popular in places such as Taiwan or 
Hong Kong. Thus, one may find Chairman 
Mao?s name in any of the following formats: 
Mao Ze Dong  
Mao ZeDong  Mao Zedong 
Mao Ze-Dong  Mao Ze-dong 
Some publications also place the given name in 
front of the surname to agree with Western name 
convention. This style is supported but not used 
in this paper.  
    While the surname character is pretty much 
closed, the given name is not.  It is well known 
that the most popular Chinese surnames number 
to about 100. Including less frequent ones bring 
the number to about 400 which we use: see 
Hundred Surname website (2002). Sun, et.al. 
(1994) reported over 700 surnames in their 
studies when additional infrequent ones are 
included.  Other than for a few exceptions, this 
set al have unique Pinyin codes. These surname 
codes constitute an important clue for spotting a 
name sequence. The capitalized word(s), and the 
monosyllabic nature of words immediately after 
(or before) the surname give further support of 
its existence.  We also loosen name definition to 
detect entries that have a hyphen but without a 
surname. Some rare surnames can be two 
syllables long, and often pair with one syllable 
given names. A woman may include her own 
family name in addition to her husband?s. For 
our current study, we limit testing to a sequence 
of two to three Pinyin syllables only. This seems 
sufficient for the large majority of names 
encountered. Fig.1 shows our procedure to 
identify possible Pinyin names without the need 
of a training corpus or a name dictionary. 
2 Mapping Pinyin Name to Chinese 
To suggest Chinese characters for the detected 
Pinyin, we downloaded about 200K Chinese 
names. This is augmented with another ? 
million Chinese name usage isolated from the 
TREC-6 Chinese collection using BBN?s 
S G G
GG / G-G
Gg / G-g
S-G / S-g
Figure 1: Pinyin Name Detection Algorithm
(S,G = surname & given name syllable with upper-case  
first character; Gg, G-g = concatenated or hyphenated
syllables, second one with lower-case)
IdentiFinder (see Section 4). Last name and 
given name/characters are stored separately to 
form a database of name usage with frequencies. 
Two-character given names are stored both 
ways: as a single entry (observed) and as two 
separate characters. Observed usage items have 
their frequencies muliplied by a large factor to 
separate it from the unobserved type. A potential 
Pinyin surname is mapped to a set of possible 
characters. Existence of such characters in this 
surname database is the first step to decide that 
one may have a possible name sequence.  
Otherwise, we assume the Pinyin is not a name.   
    Knight and Graehl (1997) have proposed to 
compose a set of weighted finite state 
transducers to solve the much more complicated 
problem of back-transliteration from Japanese 
Katakana to English. Their concern includes all 
types of source Katakana terms (not just names), 
corruptions due to OCR, approximations due to 
modeling of English, Japanese pronunciations, 
and a language model for English.  Proposing 
Chinese characters for Pinyin is like back-
transliteration and can also be viewed 
probabilistically. Some unique considerations 
however lead to a much simpler problem.  
    Given an English Pinyin name E=EsEg 
(surname Es, given name Eg), our concern is to 
find the best Chinese name character sequence 
C=CsCg that maximizes P(C|E), or equivalently 
P(E|C)*P(C). Since surnames (Es,Eg) and given-
names (Cs,Cg) can be considered independent, 
this probability can be re-written as: 
P(Es|C)*P(Cs)*P(Eg|C)*P(Cg).The conditioning 
on C can be replaced by Cs and Cg respectively 
since Chinese given names Cg should not 
influence English surname Es, and Cs should not 
influence Eg.  As discussed before, other than a 
few exceptions Chinese characters have unique 
Pinyin, and hence P(Es|Cs) and P(Eg|Cg) is 
deterministic. Maximizing P(C|E) is equivalent 
to maximizing P(Cs?)*P(Cg?), where Cs? and 
Cg? are sets of characters mapping from Es and 
Eg respectively. These probabilities are 
obtainable from frequencies in our database.  
Given names are limited to one or two syllables. 
In the latter case, the two characters are also 
assumed independent, and estimates of P(Cg?) 
are smoothed between character pairs and their 
corresponding singles. 
    To illustrate, we use the Pinyin: Jiang ZeMin 
(correct Chinese name is 4??) as an example. 
This spelling is confirmed as a name because 
?Jiang? maps to five possible surnames, and 
?ZeMin? obeys given-name format, and have 
corresponding characters. Each surname 
character and all possible combinations of the 
given name characters are considered and 
probabilities evaluated based on the database of 
name usage frequencies. The top 16 candidates 
and estimated probabilities produced from our 
procedure are shown below: 
 
.763 
 .119  .110  .005  
.001  .001  .001  .000  
.000  .000  .000  .000  
.000        .000  .000   .000   
 
The probabilities are skewed because the first 
(correct) name has large usage frequency in the 
training data. However, every candidate is a 
possible name irrespective of probabilities 
because of the idiosyncracies of name forming. 
    Quite often, some places or organizations also 
sound like names.  These will also be translated 
(see example in Section 4).  A couple of notable 
failures are strings like ?So China?, which our 
procedure decodes as a name ?So Chi-na?, ?So? 
being a legitimate surname in Wade-Giles 
convention. ?Hong Kong? also passes our test 
with  candidates: ?) w? O etc. A 
?stoplist? of such string patterns is employed to 
partially alleviate these errors. 
3 Pinyin Name Resolution 
Once candidate names for a Pinyin are available, 
one may output the top n ranked items as 
answers. However, selecting names based on 
probability may not be the best strategy. Quite 
often, people deliberately choose rare characters 
for naming purpose because they want to be 
differentiated from the usual run-of-the-mill 
names. Our strategy is to use IR techniques with 
a text collection to help in name selection.  For 
cross language retrieval, it is especially helpful 
to use the target retrieval collection for 
resolution.  This ensures that a translated name 
exists in the collection for retrieval.  For general 
application, one could employ domain-relevant 
collections. Moreover, one can also use the 
occurrence frequency of the names in the 
collection to help narrow down the candidates: 
i.e. the higher the frequency, the more probable 
that the name is the intended one.  This has the 
advantage that selection is tailored more to the 
application, and less dependent on the name 
character database of Section 2. When the 
collection is well chosen, this process can 
whittle down the candidates to just a few with 
good accuracy. 
4 Experimental Studies 
We performed two studies to demonstrate our 
Pinyin resolution strategy.   The first is to repeat 
retrieval on some queries in NTCIR-2 cross 
language experiments to see how Pinyin name 
resolution can affect effectiveness. A second 
experiment is to use BBN?s IdentiFinder as a 
reference, and to compare how our procedures 
succeed in extracting Pinyin names and 
translating them with respect to a reference set. 
4.1 CLIR with Pinyin Names 
One of the NTCIR-2 cross language retrieval 
experiments (Eguchi, et.al. 2001) consists of 50 
English topics and a Chinese target collection of 
about  200  MB.  The  purpose  is  to  retrieve 
relevant Chinese documents using English text 
(topics) as queries. The Chinese counterparts to 
the English topics were also given so that CLIR 
results can be compared to monolingual. The 
original topics are lengthy; we limit our queries 
to a few words from the ?title? section of the 
topics. Three queries have Pinyin names and  
two contain non-person Pinyin entities that 
satisfy our Pinyin name detection format.   
    On running these ?title? queries through our 
procedure, the Pinyin codes were identified, 
candidates suggested, and resolved using the 
target collection. Listed in Table 1 are the 
queries. The Pinyin name in each ?Original 
English? and ?Original Chinese? query is bolded. 
Under   the   column   ?Selected   Names   with  
Occurrence Frequency? are the resolved Pinyin 
names in Chinese, together with their occurrence 
frequencies  in  the  retrieval  collection.  As 
discussed in Section 3, these selections are 
narrowed down from a large number of 
candidates in the intermediate step. 
    The Pinyin in Query 33 is for a kind of bean, 
while Query 44 has the name for a well known 
mountain, but they satisfy our definition of a 
name pattern. It can be seen that except for 
Query 46, the name with the largest occurrence 
agrees with the one intended in the monolingual 
query.  In Query 46, the given name ?Yo-yo? is 
non-standard Pinyin, with suggested candidates 
like ? ? or ? ?, and there are no such 
entries in the collection.  If it were spelt ?You-
you?, the correct characters ???? will be 
among the candidates and selected by the 
collection. When these Pinyin names with 
frequency>=5 were added to our MT software 
concatenated with dictionary translation 
procedure, Kwok (2001), the initial retrieval 
results in Table 2 are obtained.  Here we follow 
the TREC convention to evaluate retrieval using 
the measures RR (relevant documents in top 
1000 retrieved), Av.P (average precision), and 
P@20 (precision at the top 20 documents 
retrieved). 
    Substantial improvements were obtained for 
four of the queries when the names are correctly 
picked, and come closer to or even surpass the 
monolingual result. This demonstrates that our 
approach to Pinyin name resolution can work, 
but we need more queries of this type to confirm 
the effect.  Query #15 has very high Av.P of 
.3287 because dictionary translation brought in 
useful content words not present in the 
monolingual query like:  (kidnapping), 
,  (murder criminal case). These 
 
 
Table 1. Pinyin Name Resolution in 5 Queries (* denotes Correct) 
 
Qry# Original English    Original Chinese Selected Names with  
Occurrence Frequency 
15 Bai Xiao-yan kidnapping 
murder criminal case. 
R(???j= R(?  
33 Bai-feng Bean. 
R? R? R} 2 
44 Hua-shan Art Zone. 
#FON #F ?Y 2, ?F 2 
46 Ma Yo-yo cello recital.  
A???$? A 