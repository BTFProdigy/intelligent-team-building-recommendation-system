Second Joint Conference on Lexical and Computational Semantics (*SEM), Volume 1: Proceedings of the Main Conference
and the Shared Task, pages 74?79, Atlanta, Georgia, June 13-14, 2013. c?2013 Association for Computational Linguistics
SXUCFN-Core: STS Models Integrating FrameNet Parsing Information 
 
 
Sai Wang, Ru Li, RuiboWang, ZhiqiangWang, Xia Zhang 
Shanxi University, Taiyuan, China 
enrique.s.wang@gmail.com 
{liru, wangruibo}@sxu.edu.cn 
{zhiq.wang, caesarzhangx}@163.com 
 
 
 
 
 
 
 
Abstract 
This paper describes our system submitted to 
*SEM 2013 Semantic Textual Similarity (STS) 
core task which aims to measure semantic si-
milarity of two given text snippets. In this 
shared task, we propose an interpolation STS 
model named Model_LIM integrating Fra-
meNet parsing information, which has a good 
performance with low time complexity com-
pared with former submissions. 
1 Introduction 
The goal of Semantic Textual Similarity (STS) is 
to measure semantic similarity of two given text 
snippets. STS has been recently proposed by 
Agirre et al (2012) as a pilot task, which has close 
relationship with both tasks of Textual Entailment 
and Paraphrase, but not equivalent with them and it 
is more directly applicable to a number of NLP 
tasks such as Question Answering (Lin and Pantel, 
2001), Text Summarization (Hatzivassiloglou et al, 
1999), etc. And yet, the acquiring of sentence simi-
larity has been the most important and basic task in 
STS. Therefore, the STS core task of *SEM 2013 
conference, is formally defined as the degree of 
semantic equivalence between two sentences as 
follows: 
 
? 5: completely equivalent, as they mean 
the same thing.  
? 4: mostly equivalent, but some unimpor-
tant details differ. 
? 3: roughly equivalent, but some impor-
tant information differs/missing. 
? 2: not equivalent, but share some details.  
? 1: not equivalent, but are on the same top-
ic. 
? 0: on different topics. 
 
In this paper, we attempt to integrate semantic 
information into STS task besides the lower-level 
word and syntactic information. Evaluation results 
show that our STS model could benefit from se-
mantic parsing information of two text snippets. 
The rest of the paper is organized as follows: Sec-
tion 2 reviews prior researches on STS. Section 3 
illustrates three models measuring text similarity. 
Section 4 describes the linear interpolation model 
in detail. Section 5 provides the experimental re-
sults on the development set as well as the official 
results on all published datasets. Finally, Section 6 
summarizes our paper with direction for future 
works. 
2 Related Work  
Several techniques have been developed for STS. 
The typical approach to finding the similarity be-
tween two text segments is to use simple word 
matching method. In order to improve this simple 
method, Mihalcea et al (2006) combine two cor-
pus-based and six knowledge-based measures of 
word similarity, but the cost of their algorithm is 
expensive. In contrast, our method treats words 
and texts in essentially the same way. 
In 2012 STS task, 35 teams participate and sub-
mit 88 runs. The two top scoring systems are UKP 
74
and Takelab. The former system (B?r et al, 2012) 
uses a simple log-linear regression model to com-
bine multiple text similarity measures (related to 
content, structure and style) of varying complexity. 
While the latter system Takelab (?ari? et al, 2012) 
uses a support vector regression model with mul-
tiple features measuring word-overlap similarity 
and syntax similarity. 
The results of them score over 80%, far exceed-
ing that of a simple lexical baseline. But both share 
one characteristic: they integrate lexical and syntax 
information without semantic information, espe-
cially FrameNet parsing information. In addition, 
the complexity of these algorithms is very high. 
Therefore, we propose a different and simple mod-
el integrating FrameNet parsing information in this 
paper. 
3 Linear Interpolation Model  
In this paper, we propose a combination interpola-
tion model which is constructed by the results of 
three similarity models based on words, WordNet, 
FrameNet , which are called simWD(?), simWN(?) and 
simFN(?)  respectively. The overall similarity  
simLIM(S1, S2) between a pair of texts S1, S2 is com-
puted in the following equation: 
 
simLIM(S1, S2)= ?1 ? simWD(S1, S2)  
+?2 ? simWN(S1, S2) +?3 ? simFN(S1, S2) 
(1)
 
In which, ?1, ?2 and ?3 are respectively the 
weights of the similarity models, i.e., ?1 +?2 +?3 
= 1; and they are all positive hyperparameters. 
Now, we describe the three models used in this 
equation. 
3.1 Similarity Based on Words 
This model is motivated by Vector Space Model 
(Salton et al, 1975). We present each sentence as a 
vector in the multidimensional token space. Let Sc 
denote the set of all words in the c-th text snippets 
(c = 1, 2); the words of bag is W = S1 ? S2. Hence, 
the similarity of a pair of sentences, formally ex-
pressed as: 
simWD(S1, S2) = ?  ??,? ? ??,?
|?|
???
?? ??,??|?|???  ? ?? ??,??|?|???
  (2)
 
In which, we can find ??,? ? ?? ? ? 1,2, ? , |?|; 
? ? 1,2? by solving: 
 
??,? ? ?1, ?? ??,? ? ??0, ?????????  
 
 
(3)
From these two equations above, we can see the 
more identical words in a text pair, the more simi-
lar the two snippets are. Whereas, by intuition, 
many high-frequency functional words would not 
be helpful to the estimation of the similarity given 
in Eq.(2). Therefore, in the preprocessing stage, we 
compute the word frequencies per dataset, and then 
remove the high frequency words (top 1% in fre-
quency list) in each segment. 
3.2 Similarity Based on WordNet 
This model measures semantic similarity with the 
help of such resources that specifically encode re-
lations between words or concepts like WordNet 
(Fellbaum, 1998). We use the algorithms by Lin 
(1998) on WordNet to compute the similarity be-
tween two words a and b, which we call simLin(a, 
b). Let S1, S2 be the two word sets of two given text 
snippets, we use the method below: 
 
simWN(S1, S2)  
= ?  ??? ??????????,? ? ??,???
????|??|,|??|????
????|??|,|??|? 
 
(4)
In which, ??,? ? ???? ? 1,2?. In the numerator of 
Eq.(4),we try to max(?), avg(?) and mid(?) respec-
tively, then we find the max(?) is the best. 
3.3 Similarity Based on FrameNet 
FrameNet lexicon (Fillmore et al, 2003) is a rich 
linguistic resource containing expert knowledge 
about lexical and predicate-argument semantics in 
English. In a sentence, word or phrase tokens that 
evoke a frame are known as targets. Each frame 
definition also includes a set of frame elements, or 
roles, corresponding to different aspects of the 
concept represented by the frame, such as partici-
pants, props, and attributes. We use the term ar-
gument to refer to a sequence of word tokens 
annotated as filling a frame role. 
All the data are automatically parsed by 
SEMFOR1 (Das and Smith, 2012; Das and Smith, 
                                                          
1 See http://www.ark.cs.cmu.edu/SEMAFOR/. 
75
2011). Figure 1 shows the parser output of a sen-
tence pair given in Microsoft Research Video De-
scription Corpus with annotated targets, frames 
and role argument pairs. It can be noticed that 
FrameNet parsing information could give some 
clues of the similarity of two given snippets and 
we think that integrating this information could 
improve the accuracy of STS task. For example, 
the sentences in the Figure 1 both illustrate ?some-
body is moving?. However, our model depends on 
the precision of that parser. If it would be im-
proved, the results in STS task would be better. 
 
 Figure 1: This is a pair of sentences in 2013 STS train-
ing data: (a) Girls are walking on the stage; (b) Women 
models are walking down a catwalk. The words in bold 
correspond to targets, which evoke semantic frames that 
are denoted in capital letters. Every frame is shown in a 
distinct color; the arguments of each frame are anno-
tated with the same color, and marked below the sen-
tence, at different levels; the spans marked in the block 
of dotted liens fulfill a specific role. 
 
For a given sentence Sc (c = 1,2) with a set of 
evoked frame Fc = < f1,f2, ?, fn > (n is the number 
of evoked frames), a set of target word with each 
frame Tc = < t1, t2, ?, tn > and the set of roles 
(namely, frame elements) ?c = {Rc,1, Rc,2, ?,Rc,n}, 
each frame contains one or more arguments  
Rc,i = {rj} (i = 1, 2, ?, n; j is an integer that is 
greater or equal to zero). Take Figure 1 as an ex-
ample, 
 
T1 = <grils, walking>, 
F1 = <PEOPLE, SELF_MOTION>, ?1 = {R1,1, R1,2 }, 
 R1,1 = {girls},  
R1,2 = {girls, on the stage}; 
 
T2 = <women, models, walking, down>, 
F2 = <PEOPLE, VEHICLE, 
SELF_MOTION, DIRECTION>, 
?2 = {R2,1, R2,2, R2,3, R2,4}, 
R2,1 = {women}, R2,2 = {models}, 
R2,3 = {women models}, R2,4 = {down}. 
 
In order to compute simFr(?) simply, we also use 
a interpolation model to combine the similarities 
based on target words simTg(?), frames simFr(?) and 
frame relations simRe(?). They are estimated as the 
following: 
When computing the similarity on target word 
level simTg(S1, S2), we also consider each sentence 
as a vector of target words as is seen in Eq.(5). 
 
T = T1 ?  T2; 
simTg(S1, S2)= ?  ??,? ? ??,?
|T|
???
?? ??,??|?|???  ? ?? ??,??|?|???
 
 
 
 
(5)
In which, we can find t?,? ? ?? ? ? 1,2,? , |?|; 
? ? 1,2? by solving: 
 
??,? ? ?
1, ?? ??,? ? ?? ? ????,? ? ??
?? ? 1,2, ? , |?|?
0, ?????????
 
 
 
(6)
Let simFr(S1, S2) be the similarity on frame level 
as shown in Eq.(7), with each sentence as a vector 
of frames. We define f1,i, f2,i like ??,? in Eq.(3). 
 
F = F1 ?  F2; 
simFr(S1, S2)= 
?  ??,? ? ??,?|?|???
?? ??,??|?|???  ? ?? ??,??|?|???
 
 
 
 
(7)
Before computing the role relationship between 
the pair of sentences, we should find the contain-
ment relationship of each pair of frames in one 
sentence. We use a rule to define the containment 
relationship: 
Given two frames fc,i, fc,j in a sentence Sc, if  
??,? ? ??,? ?? ? ??, then fc,j contains fc,i - and that is 
fc,i is a child of fc,j. After that we add them into the 
set of frame relationship ????  ? ?? ??,?? , ??,?? ?
????? ?  ?????,?????? , ?? ?  0?. We consider the relationship between two 
frames in a sentence as a 2-tuple, and again use 
Figure 1 as an example, 
Rlt1 = ?<PEOPLE, SELF_MOTION>?; 
Rlt2 = ?<PEOPLE, SELF_MOTION>,  
<VEHICLE, SELF_MOTION >?. 
76
Besides, we do exactly the same with both 
frames, namely ????,? ? ???? ?c ?  1,2?  the value 
of ????,? is 1. The similarity on frame relationship 
level simRe(S1, S2) presents each sentence as a vec-
tor of roles as shown in Eq.(8).  
 
Rlt = Rlt1 ? Rlt2; 
simRe(S1, S2)= ?  ????,? ? ????,?
|???|
???
?? ????,??|???|???  ? ?? ????,??|???|???
 
 
(8)
Lastly, the shallow semantic similarity between 
two given sentences is computed as: 
 
SimFN(S1, S2)= ? ? simTg(S1, S2)  
+? ? simFr(S1, S2) +? ? simRe(S1, S2) 
 
 
(9)
In which, ? + ? + ? =1, and they are all positive 
hyperparameters. As shown in Figure 2, we plot 
the Pearson correlation (vertical axis) against the 
combination of parameters (horizontal axis) in all 
2013 STS train data (2012 STS data). We notice 
that generally the Pearson correlation is fluctuates, 
and the correlation peak is found at 32, which in 
Table 1 is ?=0.6, ?=0.3, ?=0.1. 
 
ID ? ? ? ID ? ? ? ID ? ? ? 
1 1 0 0 23 0.7 0.2 0.1 45 0 0.4 0.6
2 0.9 0 0.1 24 0.6 0.2 0.2 46 0.5 0.5 0 
3 0.8 0 0.2 25 0.5 0.2 0.3 47 0.4 0.5 0.1
4 0.7 0 0.3 26 0.4 0.2 0.4 48 0.3 0.5 0.2
5 0.6 0 0.4 27 0.3 0.2 0.5 49 0.2 0.5 0.3
6 0.5 0 0.5 28 0.2 0.2 0.6 50 0.1 0.5 0.4
7 0.4 0 0.6 29 0.1 0.2 0.7 51 0 0.5 0.5
8 0.3 0 0.7 30 0 0.2 0.8 52 0.4 0.6 0 
9 0.2 0 0.8 31 0.7 0.3 0 53 0.3 0.6 0.1
10 0.1 0 0.9 32 0.6 0.3 0.1 54 0.2 0.6 0.2
11 0 0 1 33 0.5 0.3 0.2 55 0.1 0.6 0.3
12 0.9 0.1 0 34 0.4 0.3 0.3 56 0 0.6 0.4
13 0.8 0.1 0.1 35 0.3 0.3 0.4 57 0.3 0.7 0 
14 0.7 0.1 0.2 36 0.2 0.3 0.5 58 0.2 0.7 0.1
15 0.6 0.1 0.3 37 0.1 0.3 0.6 59 0.1 0.7 0.2
16 0.5 0.1 0.4 38 0 0.3 0.7 60 0 0.7 0.3
17 0.4 0.1 0.5 39 0.6 0.4 0 61 0.2 0.8 0 
18 0.3 0.1 0.6 40 0.5 0.4 0.1 62 0.1 0.8 0.1
19 0.2 0.1 0.7 41 0.4 0.4 0.2 63 0 0.8 0.2
20 0.1 0.1 0.8 42 0.3 0.4 0.3 64 0.1 0.9 0 
21 0 0.1 0.9 43 0.2 0.4 0.4 65 0 0.9 0.1
22 0.8 0.2 0 44 0.1 0.4 0.5 66 0 1 0 
Table 1: Different combinations of ?, ?, ? (? + ? + 
? =1) with ID that is horizontal axis in Figure 2. 
This table also apples to different combinations of 
?1, ?2, ?3 (?1 +?2 +?3 =1) with ID that is hori-
zontal axis in Figure 3. 
 Figure 2: This graph shows the variation of Pearson 
correlation (vertical axis) in all 2013 STS train data 
(2012 STS data), with numbers (horizontal axis) indicat-
ing different combinations ?, ?, ? in Table 1 and when 
the value of result confidence is 100. The effect values 
are represented by a vertical line (i.e. ID = 32). 
 
4 Tuning Hyperparameters  
Eq.(1) is a very simple linear interpolation model, 
and we tune the hyperparameters on the whole 
2012 STS data. 
As shown in Figure 3,we plot the Pearson corre-
lation (vertical axis) for the different combination 
of parameters ?1, ?2 and ?3 (horizontal axis). We 
notice that generally the Pearson correlation fluc-
tuates with a dropping tendency in most cases, and 
the correlation peak presents at 13, which in Table 
1 is ?1=0.8, ?2=0.1, ?3=0.1. 
 
 Figure 3: This graph shows the variation of Pearson 
correlation (vertical axis) in all 2013 STS train data 
(2012 STS data), with numbers (horizontal axis) indicat-
ing different combinations ?1, ?2, ?3 in Table 1 and when the value of result confidence is 100. The effect 
values are represented by a vertical line (i.e. ID = 13). 
 
77
5 Results 
We submit four runs: the first one (Model_WD) is 
based on word similarity; the second one (Mod-
el_WN) which is only using the similarity based on 
WordNet, is submitted with the team name of 
SXULLL; the third one (Model_FN) which uses 
FrameNet similarity defined in Section 3.3; and the 
last one in which we combine the three similarities 
described in Section 4 together with an interpola-
tion model. In addition, we map our outputs mul-
tiply by five to the [0-5] range. 
It is worth notice that in the first model, we lo-
wercase all words and remove all numbers and 
punctuations. And in the third model, we extract all 
frame-semantic roles with SEMFOR. 
In the experiment, we use eight datasets totally - 
namely MSRpar, MSRvid, SMTeuroparl, OnWN, 
SMTnews, headlines, FNWN and SMT - with their 
gold standard file to evaluate the performance of 
the submitted systems. Evaluation is carried out 
using the official scorer which computes Pearson 
correlation between the human rated similarity 
scores and the system?s output. The final measure 
is the score that is weighted by the number of text 
pairs in each dataset (?Mean?). See Agirre et al 
(2012) for a full description of the metrics. 
5.1 Experiments on STS 2012 Data 
There is no new train data in 2013, so we use 2012  
data as train data. From Table 2, 3 we can see that 
the Model_LIM has better performance than the 
other three models. 
 
 MSRpar MSRvid SMTeuroparl Mean
Model_WD 0.4532  0.4487   0.6467 0.5153
Model_WN 0.2718  0.5410  0.6225  0.4774
Model_FN 0.4437  0.5530  0.5178  0.5048
Model_LIM 0.4896  0.5533  0.6681  0.5696
Table 2: Performances of the four models on 2012 train 
data. The highest correlation in each column is given in 
bold. 
 
From Table 2, we notice that all the models ex-
cept Model_FN, are apt to handle the SMTeuroparl 
that involves long sentences. For Model_FN, it 
performs well in computing on short and similarly 
structured texts such as MSRvid (This will be con-
firmed in test data later). Although WordNet and 
FrameNet model has a mere weight of 20% in 
Model_LIM (i.e. ?1 +?2 = 0.2), the run which in-
tegrate more semantic information displays a con-
sistent performance across the three train sets (es-
pecially in SMTeuroparl, the Pearson correlation 
rises from 0.5178 to 0.66808), when compared to 
the other three. 
 
 MSRpar MSRvid SMTeuroparl OnWN SMTnews Mean 
Baseline 0.4334 0.2996 0.4542 0.5864 0.3908 0.4356
Model_WD 0.4404 0.5464 0.5059 0.6751 0.4583 0.5346
Model_WN 0.1247 0.6608 0.0637 0.4089 0.3436 0.3417
Model_FN 0.3830 0.6082 0.3537 0.6091 0.4061 0.4905
Model_LIM 0.4489 0.6301 0.5086 0.6841 0.4872 0.5631
UKP_run2 0.6830 0.8739 0.5280 0.6641 0.4937 0.6773
Table 3: Performances of our three models as well as 
the baseline and UKP_run2 (that is ranked 1 in last STS 
task) results on 2012 test data. The highest correlation in 
each column is given in bold. 
 
The 2012 STS test results obtained by first rank-
ing UKP_run2 and baseline system are shown in 
Table 3, it is interesting to notice that performance 
of Model_WD is similar with Model_LIM except 
on MSRvid, the text segments in which there are 
fewer identical words because of the semantic 
equivalence. For Model_FN, we can see it per-
forms well on short and similarly structured texts 
(MSRvid and OnWN) as mentioned before. This is 
because the precision of FrameNet parser took ef-
fect on the FrameNet-based models performance. 
Compared to UKP_run2, the performance of Mod-
el_LIM is obviously better on OnWN set, while on 
SMTeuroparl and SMTnews this model scores 
slightly lower than UKP_run2. Finally, Mod-
el_LIM did not perform best on MSRpar and 
MSRvid compared with UKP_run2, but it has low 
time complexity and integrates semantic informa-
tion. 
5.2 Official Results on STS 2013 Test Data 
Table 4 provides the official results of our submit-
ted systems, along with the rank on each dataset. 
Generally, all results outperform the baseline, 
based on simple word overlap. However, the per-
formance of Model_LIM is not always the best in 
the three runs for each dataset. From the table we 
can note that a particular model always performs 
well on the dataset including the lexicon on which 
the model is based on e.g. Model_WN in OnWN, 
Model_FN in FNWN. Besides, Model_WD and 
Model_LIM almost have same scores except in 
OnWN set, because in Model_LIM is included 
with WordNet resource. 
78
 
 headlines OnWN FNWN SMT Mean 
Baseline 0.5399 (66)  0.2828 (80) 0.2146 (66)  0.2861 (65) 0.3639 (73)
Model_WD 0.6806 (24)  0.5355 (44) 0.3181 (48)  0.3980 (4)  0.5198 (27)
Model_WN 0.4840 (78)  0.7146 (12) 0.0415 (83)  0.1543 (86) 0.3944 (69)
Model_FN 0.4881 (76)  0.6146 (27) 0.4237 (9)  0.3844 (6)  0.4797 (46)
Model_LIM 0.6761 (29)  0.6481 (23) 0.3025 (51)  0.4003 (3) 0.5458 (14)
Table 4: Performances of our systems as well as base-
line on STS 2013 individual test data, accompanied by 
their rank (out of 90) shown in brackets. Scores in bold 
denote significant improvements over the baseline. 
 
As seen from the system rank in table, the op-
timal runs in the three submitted system remain 
with Model_LIM. Not only Model_LIM performs 
best on two occasions, but also Model_FN ranks 
top ten twice, in FNWN and SMT respectively, we 
owe this result to the contribution of FrameNet 
parsing information. 
6 Conclusion 
We have tested all the models on published STS 
datasets. Compared with the official results, Mod-
el_LIM system is apt to handle the SMT that in-
volves long sentences. Moreover, this system just 
integrates words, WordNet and FrameNet semantic 
information, thus it has low time complexity. 
There is still much room for improvement in our 
work. For example, we will attempt to use multiva-
riate regression software to tuning the hyperpara-
meters. 
Acknowledgments 
This work is supported by the National Nature 
Science Foundation of China (No.60970053), by 
the National High-tech Research and Development 
Projects (863) grant No.2006AA01Z142, by the 
State Language Commission of China No.YB125-
19 as well as by the International Cooperation of 
Shanxi Province, Contracts 2010081044. And we 
would like to thank the organizer for the tremend-
ous effort they put into formulating this challeng-
ing work. 
References  
Eneko Agirre, Daniel Cer, Mona Diab, and Aitor Gon-
zalez-Agirre. 2012. SemEval-2012 Task 6: A Pilot on 
Semantic Textual Similarity. In Proceedings of the 
6th International Workshop on Semantic Evaluation, 
in conjunction with the 1st Joint Conference on Lexi-
cal and Computational Semantics, 385?393. 
Dekang Lin, Patrick Pantel. 2001. Discovery of Infe-
rence Rules for Question Answering. Natural Lan-
guage Engineering, 7(4):343-360. 
Vasileios Hatzivassiloglou, Judith L. Klavans, and 
Eleazar Eskin. 1999. Detecting Text Similarity over 
Short Passages: Exploring Linguistic Feature Combi-
nations via Machine Learning. In proceedings of the 
Joint SIGDAT Conference on Empirical Methods in 
Natural Language Processing and Very Large Cor-
pora, 224-231. 
Rada Mihalcea, Courtney Corley, and Carlo Strapparava. 
2006. Corpus-based and Knowledge-based Measures 
of Text Semantic Similarity. In Proceedings of the 
National Conference on Artificial Intelligence, 21(1): 
775-780. 
Daniel B?r, Chris Biemann, Iryna Gurevych, and Tors-
ten Zesch. 2012. UKP: Computing Semantic Textual 
Similarity by Combining Multiple Content Similarity 
Measures. In Proceedings of the 6th International 
Workshop on Semantic Evaluation, in conjunction 
with the 1st Joint Conference on Lexical and Compu-
tational Semantics, 435-440. 
Frane ?ari?, Goran Glava?, Mladen Karan, Jan ?najder, 
and Bojana Dalbelo Ba?i?. 2012. TakeLab: Systems 
for Measuring Semantic Text Similarity. In Proceed-
ings of the 6th International Workshop on Semantic 
Evaluation, in conjunction with the 1st Joint Confe-
rence on Lexical and Computational Semantics, 441-
448. 
G. Salton, A. Wong, C.S. Yang. 1975. A Vector Space 
Model for Automatic Indexing. Communications of 
the ACM, 18(11):613-620. 
C. J. Fillmore, C. R. Johnson and M. R.L. Petruck. 2003. 
Background to FrameNet. International Journal of 
Lexicography, 16: 235-250. 
Dipanjan Das and Noah A. Smith. 2012. Graph-Based 
Lexicon Expansion with Sparsity-Inducing Penalties. 
In Proceedings of the Conference of the North Amer-
ican Chapter of the Association for Computational 
Linguistics, 677-687. 
Dipanjan Das and Noah A. Smith. 2011. Semi-
Supervised Frame-Semantic Parsing for Unknown 
Predicates. In Proceedings of Annual Meeting of the 
Association for Computational Linguistics, 1435-
1444.  
Christiane Fellbaum. 1998. WordNet: An Electronic 
Lexical Database. MIT Press. 
Dekang Lin. 1998. An information-theoretic definition 
of similarity. In Proceedings of International Confe-
rence on Machine Learning, 296-340. 
79
Proceedings of the 8th Workshop on Asian Language Resources, pages 22?29,
Beijing, China, 21-22 August 2010. c?2010 Asian Federation for Natural Language Processing
Sequential Tagging of Semantic Roles on Chinese FrameNet
Jihong LI
Computer Center
Shanxi University
lijh@sxu.edu.cn
Ruibo WANG, Yahui GAO
Computer Center
Shanxi University
{wangruibo,gaoyahui}@sxu.edu.cn
Abstract
In this paper, semantic role labeling(SRL)
on Chinese FrameNet is divided into the
subtasks of boundary identification(BI)
and semantic role classification(SRC).
These subtasks are regarded as the se-
quential tagging problem at the word
level, respectively. We use the conditional
random fields(CRFs) model to train and
test on a two-fold cross-validation data
set. The extracted features include 11
word-level and 15 shallow syntactic fea-
tures derived from automatic base chunk
parsing. We use the orthogonal array of
statistics to arrange the experiment so that
the best feature template is selected. The
experimental results show that given the
target word within a sentence, the best
F-measures of SRL can achieve 60.42%.
For the BI and SRC subtasks, the best F-
measures are 70.55 and 81%, respectively.
The statistical t-test shows that the im-
provement of our SRL model is not signif-
icant after appending the base chunk fea-
tures.
1 Introduction
Semantic parsing is important in natural lan-
guage processing, and it has attracted an increas-
ing number of studies in recent years. Cur-
rently, its most important aspect is the formaliza-
tion of the proposition meaning of one sentence
through the semantic role labeling. Therefore,
many large human-annotated corpora have been
constructed to support related research, such as
FrameNet (Baker et al, 1998), PropBank (Kings-
bury and Palmer, 2002), NomBank (Meyers et al,
2004), and so on. On this basis, several interna-
tional semantic evaluations have been organized,
which include Senseval 3 (Litkowski, 2004),
SemEval 2007 (Baker,et al, 2007), CoNLL
2008 (Surdeanu et al, 2008), CoNLL 2009 (Hajic
et al, 2009), and so on.
The first SRL model on FrameNet was pro-
posed by Gildea and Jurafsky(2002). The model
consists of two subtasks of boundary identifica-
tion(BI) and semantic role classification(SRC).
Both subtasks were implemented on the pretreat-
ment results of the full parsing tree. Many lex-
ical and syntactic features were extracted to im-
prove the accuracy of the model. On the test data
of FrameNet, the system achieved 65% precision
and 61% recall.
Most works on SRL followed Gildea?s frame-
work of processing the SRL task on English
FrameNet and PropBank. They built their model
on the full parse tree and selected features using
various machine learning methods to improve the
accuracy of SRL models. Many attempts have
made significant progress, ssuch as the works of
Pradhan et al (2005), Surdeanu et al (2007),
and so on. Other researchers regarded the task
of SRL as a sequential tagging problem and em-
ployed the shallow chunking technique to solve it,
as described by Marquez at al. (2008).
Although the SRL model based on a full parse
tree has good performance in English, this method
of processing is not available in other languages,
especially in Chinese. A systemic study of Chi-
nese SRL was done by Xue et al (2008). Like
the English SRL procedure, he removed many
22
uncorrelated constituents of a parse tree and re-
lied on the remainder to identify the semantic
roles using the maximum entropy model. When
human-corrected parse is used, the F-measures
on the PropBank and NomBank achieve 92.0 and
69.6%, respectively. However, when automatic
full parse is used, the F-measures only achieve
71.9 and 60.4%, respectively. This significant de-
crease prompts us to analyze its causes and to find
a potential solution.
First, the Chinese human-annotated resources
of semantic roles are relatively small. Sun and
Gildea only studied the SRL of 10 Chinese verbs
and extracted 1,138 sentences in the Chinese Tree
Bank. The size of the Chinese PropBank and
Chinese NomBank used in the paper of Xue is
significantly smaller than the ones used in En-
glish language studies. Moreover, more verbs ex-
ist in Chinese than in English, which increases the
sparsity of Chinese Semantic Role data resources.
The same problem also exists in our experiment.
The current corpus of Chinese FrameNet includes
about 18,322 human-annotated sentences of 1,671
target words. There is only an average of less than
10 sentences for every target word. To reduce the
influence of the data sparsity, we adopt a two-fold
cross validation technique for train and test label-
ing.
Second, because of the lack of morphological
clues in Chinese, the accuracy of a state-of-the-art
parsing system significantly decreases when used
for a realistic scenario. In the preliminary stage
of building an SRL model of CFN, we employed
a Stanford full parser to parse all sentences in the
corpus and adopted the traditional SRL technique
on our data set. However, the experiment result
was insignificant. Only 76.48% of the semantic
roles in the data set have a constituent with the
same text span in the parse tree, and the F-measure
of BI can only achieves 54%. Therefore, we at-
tempted to use another processing technique for
SRL on CFN. We formalized SRL on CFN into a
sequential tagging problem at the word level. We
first extracted 11 word features into the baseline
model. Then we added 15 additional base chunk
features into the SRL model.
In this paper, the SRL task of CFN comprises
two subtasks: BI and SRC. These are regarded as
a sequential tagging problem at the word level.
Conditional random fields(CRFs) model is em-
ployed to train the model and predict the result
of the unlabeled sentence. To improve the accu-
racy of the model, base chunk features are intro-
duced, and the feature selection method involving
an orthogonal array is adopted. The experimen-
tal results illustrate that the F-measure of our SRL
model achieves 60.42%. This is the best SRL re-
sult of CFN so far.
The paper is organized as follows. In Section
2, we describe the situation of CFN and introduce
SRL on CFN. In Section 3, we propose our SRL
model in detail. In Section 4, the candidate feature
set is proposed, and the orthogonal-array-based
feature selection method is introduced. In Sec-
tion 5, we describe the experimental setup used
throughout this paper. In Section 6, we list our
experimental results and provide detailed analy-
sis. The conclusions and several further directions
are given at the end of this paper.
2 CFN and Its SRL task
Chinese FrameNet(CFN) (You et al, 2005) is a re-
search project that has been developed by Shanxi
University, creating an FN-styled lexicon for Chi-
nese, based on the theory of Frame Semantics
(Fillmore, 1982) and supported by corpus evi-
dence. The results of the CFN project include a
lexical resource, called the CFN database, and as-
sociated software tools. Many natural language
processing(NLP) applications, such as Informa-
tion Retrieval and Machine Translation, will ben-
efit from this resource. In FN, the semantic roles
of a predicate are called the frame elements of a
frame. A frame has different frame elements. A
group of lexical units (LUs) that evokes the same
frame share the same names of frame elements.
The CFN project currently contains more than
1,671 LUs, more than 219 semantic frames, and
has exemplified more than 18,322 annotated sen-
tences. In addition to correct segmentation and
part of speech, every sentence in the database is
marked up to exemplify the semantic and syntac-
tic information of the target word. Each annotated
sentence contains only one target word.
(a). <medium-np-subj ? 1/m ?/q > <tgt=?
?????/v><msg-np-obj??/n?/c??/n
23
??/n >?/w
The CFN Corpus is currently at an early stage,
and the available CFN resource is relatively lim-
ited, so the SRL task on CFN is described as fol-
lows. Given a Chinese sentence, a target word,
and its frame, we identify the boundaries of the
frame elements within the sentence and label them
with the appropriate frame element name. This is
the same as the task in Senseval-3.
3 Shallow SRL Models
This section proposes our SRL model architec-
ture, and describes the stages of our model in de-
tail.
3.1 SRL Model Architecture
A family of SRL models can be constructed using
only shallow syntactic information as the input.
The main differences of the models in this family
mainly focus on the following two aspects.
i) model strategy: whether to combine the sub-
tasks of BI and SRC?
ii) tagging unit: which is used as the tagging
unit, word or chunk.
The one-stage and two-stage models are two
popular strategies used in SRL tasks, as described
by Sui et al (2009). The word and the chunk are
regarded as the two different tagging units of the
SRL task.
In our SRL model, we consider BI and SRC as
two stages, and the word is always used as the tag-
ging unit. The detailed formalization is addressed
in the following subsections.
3.2 BI
The aim of the BI stage is to identify all word
spans of the semantic roles in one Chinese sen-
tence. It can be regarded as a sequential tagging
problem. Using the IOB2 strategy (Erik et al,
1999), we use the tag set {B,I,O} to tag all words,
where tag ?B? represents the beginning word of a
chunk, ?I? denotes other tokens in the chunk, and
?O? is the tag of all tokens outside any chunks.
Therefore, the example sentence (a) can be repre-
sented as follows:
(b). ? 1|B ? |I ?? |O ?? |B ? |I ?? |I
?? |I ?|O
To avoid the problem of data sparsity, we use all
sentences in our train data set to train the model of
BI.
3.3 SRC
After predicting the boundaries of semantic role
chunks in a sentence, the proper semantic role
types should be assigned in the SRC step. Al-
though it can be easily modeled as a classification
problem, we regarded it as a sequential tagging
problem at the word level. An additional con-
straint is employed in this step: the boundary tags
of the predicting sequence of this stage should be
consistent with the the output of the BI stage.
One intuitive reason for this model strategy is
that the SRC step can use the same feature set as
BI, and it can further prove the rationality of our
feature optimization method.
3.4 Postprocessing
Not all predicted IOB2 sequences can be trans-
formed to the original sentence correctly; there-
fore, they should satisfy the following compulsory
constraints.
(1) The tagging sequence should be regular.
?I...?, ?... OI...?, ?I-X...?, ?... O-I-X...?, ?... B-X-
I-Y...?, and ?B-I-X-I-X-I-Y...? are not the regular
IOB2 sequences.
(2) The tag for the target word must be ?O?.
We use the Algorithm 1 to justify whether the
IOB2 sequences are regular.
Moreover, at the SRC stage, the boundary tags
of the IOB2 sequence must be consistent with the
given boundary tags.
For the BI stage, we firstly add an additional
chunk type tag X to all ?B? and ?I? tags in the
IOB2 sequences, and then use Algorithm 1 to jus-
tify the regularity of the sequences.
In the testing stage of the SRL model, we use
the regular sequence with the max probability as
the optimal output.
24
Algorithm 1. justify the regular IOB2 sequence
Input: (1) IOB2 sequence:S = (s1, .., sn)
where si ? {B ?X, I ?X,O}, and 1 ? i ? n
(2) The position of target word in sentence pt
1, Initialization:
(1) Current chunk type: ct = NULL;
(2) Regularity of sequence: state =? REG?;
2, Check the tag of target word: spt:
(1) If spt ==? O?: go to Step 3;
(2) If spt <>? O?: state =? IRR?, and go to Step 4;
3,For(i = 1; i ? n; i + +)
(1) If si ==? B ?X ?: ct =? X ?;
(2) If si ==? I ?X ? and ct <>? X ?: state =? IRR?,
and go to Step 4;
(3) If si ==? O?: ct = NULL;
4, Stop
Output: Variable state;
3.5 Why Word-by-word?
We ever tried to use the methods of constituent-
by-constituent and chunk-by-chunk to solve our
SRL task on CFN, but the experiment results il-
lustrate that they are not suitable to our task.
We use the Stanford Chinese full parser to parse
all sentences in the CFN corpus and use the SRL
model proposed by Xue et al(2008) in our task.
However, the results is insignificant. Only 66.72%
of semantic roles are aligned with the constituents
of the full parse tree, and the F-measure of BI only
achieves 52.43%. The accuracy of the state-of-
the-art Chinese full parser is not high enough, so
it is not suitable to our SRL task.
Chunk-by-chunk is another choice for our task.
When We use base chunk as the tagging unit of
our model, only about 15% of semantic roles did
not align very well with the boundary of automati-
cally generated base chunks, and the F-measure is
significantly lower than the method of word-by-
word, as described by Wang et al(2009).
Therefore, words are chosen as the tagging unit
of our SRL model, which showed significant re-
sults from the experiment.
4 Feature Selection and Optimization
Word-level features and base-chunk features are
used in our SRL research.
Base chunk is a Chinese shallow parsing
scheme proposed by Professor Zhou. He con-
structed a high accuracy rule-based Chinese base
chunk parse (Zhou, 2009), the F-measure of
which can achieve 89%. We use this parse to gen-
erate all base chunks of the sentences in our cor-
pus and to extract several types of features from
them. The automatically generated base chunks
of example sentences (a) are given as follows:
(c).[mp-ZX? 1/m?/q ] [vp-SG??/v ] [np-
SG??/n ]?/c [np-AM??/n??/n ]?/w
4.1 Candidate Feature Set
Three types of features are given as follows:
Features at the word level:
Word: The current token itself;
Part-of-Speech: The part of speech of the cur-
rent token;
Position: The position of the current word rela-
tive to the target word(before, after, or on);
Target word: The target word in the sentence;
Features at the base chunk level:
Syntactic label: The syntactic label of the cur-
rent token, such as, B-np,I-vp, etc;
Structural label: The structural label of the cur-
rent token, such as, B-SG, I-ZX, etc;
Head word and its Part of Speech: The head
word and its part of speech of the base chunk;
Shallow syntactic path: The combination of
the syntactic tags from the source base chunk,
which contains the current word, to the target base
chunk, which contains the target word of the sen-
tence;
Subcategory: The combination of the syntactic
tags of the base chunk around the target word;
Other Features:
Named entity: The three types of named entities
are considered: person, location, and time. They
can be directly mapped from the part of speech of
the current word.
Simplified sentence: A boolean feature. We use
the punctuation count of the sentence to estimate
whether the sentence is the simplified sentence.
Aside from the basic features described above,
we also use combinations of these features, such
as word/POS combination, etc.
4.2 Feature Optimization Method
In the baseline model, we only introduce the fea-
tures at the word level. Table 1 shows the candi-
date features of our baseline model and proposes
their optional sizes of sliding windows.
For Table 1, we use the orthogonal array
L32(49 ? 24) to conduct 32 different templates.
25
The best template is chosen from the highest F-
measure for testing the 32 templates. The detailed
orthogonal-array-based feature selection method
was proposed by Li et al(2010).
Table 1. Candidate features of baseline models
Feature type Window size
word [0,0] [-1,1] [-2,2] [-3,3]
bigram of word - [-1,1] [-2,2] [-3,3]
POS [0,0] [-1,1] [-2,2] [-3,3]
bigram of POS - [-1,1] [-2,2] [-3,3]
position [0,0] [-1,1] [-2,2] [-3,3]
bigram of position - [-1,1] [-2,2] [-3,3]
word/POS - [0,0] [-1,1] [-2,2]
word/position - [0,0] [-1,1] [-2,2]
POS/position - [0,0] [-1,1] [-2,2]
trigram of position - [-2,0] [-1,1] [0,2]
word/target word - [0,0]
target word [0,0]
Compared with the baseline model, the features
at the word and base chunk levels are all consid-
ered in Table 2.
Table 2. Candidate features of the base chunk-based model
Feature type Window size
word [0,0] [-1,1] [-2,2]
bigram of word - [-1,1] [-2,2]
POS [0,0] [-1,1] [-2,2]
bigram of POS - [-1,1] [-2,2]
position [0,0] [-1,1] [-2,2]
bigram of position - [-1,1] [-2,2]
word/POS - [0,0] [-1,1]
word/position - [0,0] [-1,1]
POS/position - [0,0] [-1,1]
trigram of position - [-2,0] [-1,1]
syntactic label [0,0] [-1,1] [-2,2]
syn-bigram - [-1,1] [-2,2]
Syn-trigram - [-1,1] [-2,2]
head word [0,0] [-1,1] [-2,2]
head word-bigram - [-1,1] [-2,2]
POS of Head [0,0] [-1,1] [-2,2]
POS-bigram of head - [-1,1] [-2,2]
syn/head word [0,0] [-1,1] [-2,2]
stru/head word [0,0] [-1,1] [-2,2]
shallow path - [0,0] [-1,1]
subcategory - [0,0] [0,0]
named Entity - [0,0] [0,0]
simplified Sentence - [0,0] [0,0]
target word(compulsory) [0,0]
The orthogonal arrayL54(21?325) is employed
to select the best feature template from all candi-
date feature templates in Table 2. To distinguish
it from the baseline model, we call the model
based on the table 2 as the ?base chunk-based SRL
model?.
For both feature sets described above, the target
word is the compulsory feature in every template,
and the boundary tags are introduced as features
during the SRC stage.
The feature templates in Table 2 cannot con-
tain the best feature template selected from Table
1. This is a disadvantage of our feature selection
method.
5 Experimental Setup and Evaluation
Metrics
5.1 Data Set
The experimental data set consists of all sentences
of 25 frames selected in the CFN corpus. These
sentences have the correct POS tags and CFN se-
mantic information; they are all auto parsed by
the rule-based Chinese base chunk parser. Table
3 shows some statistics on these 25 frames.
Table 3. Summary of the experimental data set
Frame FEs Sents Frame FEs Sents
?? 6 569 ?? 7 140
???? 5 345 ?? 10 1,603
?? 3 141 ?? 4 170
?? 5 185 ??? 4 70
???? 14 499 ?? 12 198
?? 9 320 ?? 6 90
?? 8 283 ?? 7 80
????? 13 379 ??? 11 125
?? 9 258 ?? 9 101
?? 8 218 ??? 9 260
?? 12 298 ?? 10 106
?? 6 126 ???? 8 74
???? 5 54 Totals 200 6,692
5.2 Cross-validation technique
In all our experiments, three groups of two-fold
cross-validation sets are used to estimate the per-
formance of our SRL model. All sentences in a
frame are cut four-fold on average, where every
two folder are merged as train data, and the other
two folds are used as test data. Therefore, we can
obtain three groups of two-fold cross-validation
data sets.
Estimating the parameter of fold number is
one of the most difficult problems in the cross-
validation technique. We believe that in the task of
SRL, the two-fold cross validation set is a reason-
able choice, especially when the data set is relative
small. With a small data set, dividing it in half is
split of data set is the best approximation of the
real-world data distribution of semantic roles and
the sparse word tokens.
26
5.3 Classifiers
CRFs model is used as the learning algorithm
in our experiments. Previous SRL research has
demonstrated that CRFs model is one of the best
statistical algorithms for SRL, such as the works
of Cohn et al (2005) and Yu et al (2007).
The crfpp toolkit1 is a good implementation of
the CRF classifier, which contains three different
training algorithms: CRFL1, CRFL2, and MIRA.
We only use CRFL2 with Gaussian priori regular-
ization and the variance parameter C=1.0.
5.4 Evaluation Metrics
As described in SRL reseach, precision, recall,
and F-measure are also used as our evaluation
metrics. In addition, the standard deviation of the
F-measure is also adopted as an important metric
of our SRL model. The computation method of
these metrics is given as follows:
Let P ij , Rij and F ij be the precision, recall, and
F-measure of the jth group of the ith cross valida-
tion set, where j = 1, 2, 3 and i = 1, 2. The final
precision(P ), recall(R), and F-measure(F ) of our
SRL model are the expectation values of the P ij ,
Rij , and F ij , respectively.
The estimation of the variance of cross-
validation is another difficult problem in the
cross-validation technique. Although it has been
proven that the uniform and unbiased estimation
of the variance of cross-validation does not ex-
ist (Yoshua et al, 2007), we adopted the method
proposed by Nadeau et al (2007), to estimate the
variance of the F-measure of cross-validation sets.
This method is proposed hereinafter.
Let Fj be the average F-measure of the j group
experiment, that is, Fj = 12(F 1j + F 2j ), where
j = 1, 2, 3. The proposed estimator of the vari-
ance of Fj in the work of Nadeau et al (2007) is
as follows:
V? ar(Fj) = (
1
K +
n2
n1
)
2?
i=1
(F ij ? Fj)
= (12 + 1)
2?
i=1
(F ij ? Fj)
1crfpp toolkit: http://crfpp.sourceforge.net/
where, K is the fold number of cross-validation
and n1 and n2 are the counts of training examples
and testing examples. In our experimental setting,
K = 2 and n2n1 ? 1. Moreover, the estimation ofthe variance of the total F-measure is as follows:
V ar(F ) = V ar(13(F1 + F2 + F3))
= 19
3?
j=1
V ar(Fj)
Using V? ar(Fj) to estimate V ar(Fj), we can
obtain:
V? ar(F ) = 19
3?
j=1
V? ar(Fj)
= 16
3?
j=1
2?
i=1
(F ij ? Fj)
Finally, we can derive the standard deviation of
the F-measure, that is, std(F ) =
?
V? ar(F ).
5.5 Significance Test of Two SRL Models
To test the significance of SRL models A and B,
we use the following statistics S.
S = F (A)? F (B)?
V ar(F (A)) + V ar(F (B))
? t(n)
where F (A) and F (B) are the F-measures of
models A and B, and n is the freedom degree of
t-distribution, an integer nearest to the n?.
n? = 3(V ar(F (A)) + V ar(F (B)))
2
(V ar(F (A))2 + V ar(F (B))2)
We use the p? value(?) to test the significance
of SRL models A and B, which are given as fol-
lows:
p? value(F (A), F (B)) = P (S ? t1??/2(n))
If p ? value(F (A), F (B)) ? 0.05, the differ-
ence of the F-measures between models A and B
is significant at 95% level.
27
6 Experimental Results and Discussion
We summarized the experiment results of every
stage of our SRL model, that is, BI, SRC and a
combination of these two steps (BI+SRC).
6.1 Baseline SRL Model
The results of the baseline model are given in Ta-
ble 4, which only uses the features in Table 1.
Table 4. Results of the baseline model
P(%) R(%) F(%) std(F)
BI 74.42 66.80 70.40 0.0031
SRC - - 80.32 0.0032
BI+SRC 62.87 56.44 59.48 0.0050
In Table 1, because the results of the SRC stage
are based on human-corrected boundary informa-
tion, the precision, recall, and F-measure of this
stage are the same. Therefore, we only give the
F-measure and its deviation at the SRC stage.
In the baseline model, the BI stage is the bot-
tleneck of our SRL model. Its F-measure only
achieves 70.4%, and the recall is lower than the
precision. Moreover, the F-measure of the final
model only achieves 59.48%, and its standard de-
viation is larger than both stages.
6.2 Base chunk-based SRL Model
When base chunk features, proposed in Table 2,
are employed in the SRL model, we can obtain
the results summarized in Table 5.
Table 5. Results of the base chunk-based model
P(%) R(%) F(%) std(F)
BI 74.69 66.85 70.55 0.0038
SRC - - 81.00 0.0029
BI+SRC 63.97 57.25 60.42 0.0049
A comparison of Table 4 and Table 5 provides
the following two conclusions.
(1) When base chunk features are used, all P, R,
F at every stage slightly increase (< 1%).
(2) The significance test values between the
baseline model and the base chunk-based model
are given in Table 6. For every stage, the perfor-
mance boost after introducing the base chunk fea-
tures is not significant at 95% level. However, the
impact of base chunk features at the SRC stage is
larger than that at the BI stage.
Table 6. Test values between two SRL models
BI SRC BI+SRC
p? value 0.77 0.166 0.228
7 Conclusions and Further Directions
The SRL of Chinese predicates is a challenging
task. In this paper, we studied the task of SRL
on the CFN. We proposed a two-stage model and
exploited the CRFs classifier to implement the au-
tomatic SRL systems. Moreover, we introduced
the base chunk features and the OA-based method
to improve the performance of our model. Exper-
imental results shows that the F-measure of our
best model achieves 60.42%, and the base chunk
features cannot improve the SRL model signifi-
cantly.
In the future, we plan to introduce unlabeled
data into the training phase and use the EM-
schemed semi-supervised learning algorithms to
boost the accuracy of our SRL model.
Acknowledgement
The authors would like to thank Prof. Kaiying
LIU for his comments and Prof. Qiang ZHOU for
the base-chunk parser.
References
Baker, C., Fillmore, C., and John B. 1998. The Berke-
ley Framenet project. In Proceedings of COLING-
ACL, 86-90, Montreal, Canada.
Baker, C., Ellsworth, M., Erk, K. 2007. SemEval?07
Task 19: Frame semantic structure extraction. Pro-
ceedings of the 4th International Workshop on Se-
mantic Evaluations, 99-104, Prague, Czech Repub-
lic.
Cohn, T., Blunsom P. 2005. Semantic role labeling
with tree conditional random fields. Proceedings of
CoNLL 2005, ACL, 169-172.
Erik F., and John V. 1999. Representing text chunks.
In Proceedings of EACL?99, 173-179.
Fillmore, C. 1982. Frame Semantics. In The Linguis-
tic Society of Korea, Seoul: Hanshin.
Gildea, D., and Jurafsky, D. 2002. Automatic label-
ing for semantic roles. Computational Linguistics,
28(3):245-288.
Hajic, J., Ciaramita, M., Johansson, R., Kawahara, D.,
Marti, M., Ma`rquez, L., Meyers, A., Nivre, J., Pado?,
S., Ste?pa?nek, J., Stranak, P., Surdeanu, M., Nian-
wen X., Zhang, Y. 2009. The CoNLL-2009 shared
task: syntactic and semantic dependencies in multi-
ple languages. In Proceedings of CoNLL 2009, 1-
18, Boulder, CO, USA..
28
Jihong, L., Ruibo, W., Weilin, W., and Guochen, L.
2010. Automatic Labeling of Semantic Roles on
Chinese FrameNet. Journal of Software, 2010,
21(4):597-611.
Jiangde, Y., Xiaozhong, F., Wenbo, P., and Zhengtao,
Y. 2007. Semantic role labeling based on condi-
tional random fields Journal of southeast university
(English edition), 23(2):5361-364.
Liping, Y., and Kaiying, L. 2005. Building Chinese
FrameNet database. In Proceedings of IEEE NLP-
KE?05 , 301-306.
Litkowski, K. 2004. Senseval-3 task automatic label-
ing of semantic roles. Third International Workshop
on the Evaluation of Systems for the Semantic Anal-
ysis of Text, 9-12, Barcelona, Spain.
Ma`rquez, L., Carreras, X., Litkowski, K., Stevenson,
S. 2008. Semantic Role Labeling: An Introduc-
tion to the Special Issue. Computational Linguis-
tics, 34(2):145-159.
Meyers, A., Reeves, R., Macleod, C., Szekely, R.,
Zielinska, V., Young, B., and Grishman, R. 2004.
The NomBank Project: An interim report. In Pro-
ceedings of the NAACL/HLT Workshop on Frontiers
in Corpus Annotation, 24-31, Boston, MA, USA.
Nadeau, C., and Bengio, Y. 2003. Inference for the
generalization error. Machine Learning, 52: 239-
281.
Nianwen, X. 2008. Labeling Chinese Predicates with
Semantic Roles. Computational Linguistics, 2008,
34(2): 225-255.
Paul, K., and Martha, P. 2002. From TreeBank to
PropBank. In Proceedings of LREC-2002, Canary
Islands, Spain.
Pradhan, S., Hacioglu, K., Krugler, V., Ward, W., Mar-
tin, J., Jurafsky, D. 2005. Support vector learn-
ing for semantic argument classification. Machine
Learning, 2005, 60(1):11-39.
Qiang, Z. 2007. A rule-based Chinese base chunk
parser. In Proc. of 7th International Conference
of Chinese Computation (ICCC-2007), 137-142,
Wuhan, China.
Ruibo, W. 2004. Automatic Semantic Role Label-
ing of Chinese FrameNet Based On Conditional
Random Fields Model. Thesis for the 2009 Mas-
ter?s Degree of Shanxi University, Taiyuan, Shanxi,
China.
Surdeanu, M., Johansson, R., Meyers, A., Ma`rquez,
L., Nivre, J. 2008. The CoNLL 2008 shared task
on joint parsing of syntactic and semantic depen-
dencies. In Proceedings of CoNLL 2008, 159-177,
Manchester, England, UK.
Surdeanu, M., Ma`rquez, L., Carreras, X., Comas, P.
2007. Combination strategies for semantic role la-
beling. Journal of Artificial Intelligence Research,
29:105-151.
Yoshua, B., and Yves, G. 2004. No unbiased estimator
of the variance of K-fold cross-validation Journal of
Machine Learning Research, 5:1089-1105.
Weiwei, S., Zhifang, S., Meng, W., and Xing, W. 2009.
Chinese semantic role labeling with shallow pars-
ing. In Proceedings of the 2009 Conference on
Empirical Methods in Natural Language Process-
ing(EMNLP 2009), ACL, 1475-1483.
29
