Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 423?431,
Suntec, Singapore, 2-7 August 2009. c?2009 ACL and AFNLP
Who, What, When, Where, Why?  
Comparing Multiple Approaches to the Cross-Lingual 5W Task 
Kristen Parton*, Kathleen R. McKeown*, Bob Coyne*, Mona T. Diab*,  
Ralph Grishman?, Dilek Hakkani-T?r?, Mary Harper?, Heng Ji?, Wei Yun Ma*,  
Adam Meyers?, Sara Stolbach*, Ang Sun?, Gokhan Tur?, Wei Xu? and Sibel Yaman? 
 
*Columbia University 
New York, NY, USA 
{kristen, kathy, 
coyne, mdiab, ma, 
sara}@cs.columbia.edu 
 
?New York University 
New York, NY, USA 
{grishman, meyers, 
asun, xuwei} 
@cs.nyu.edu 
?International Computer 
Science Institute 
Berkeley, CA, USA 
{dilek, sibel} 
@icsi.berkeley.edu 
 
?Human Lang. Tech. Ctr. of 
Excellence, Johns Hopkins 
and U. of Maryland, 
College Park  
mharper@umd.edu 
?City University of  
New York 
New York, NY, USA 
hengji@cs.qc.cuny.edu 
 
 
?SRI International 
Palo Alto, CA, USA 
gokhan@speech.sri.com 
 
 
  
Abstract 
Cross-lingual tasks are especially difficult 
due to the compounding effect of errors in 
language processing and errors in machine 
translation (MT). In this paper, we present an 
error analysis of a new cross-lingual task: the 
5W task, a sentence-level understanding task 
which seeks to return the English 5W's (Who, 
What, When, Where and Why) corresponding 
to a Chinese sentence. We analyze systems 
that we developed, identifying specific prob-
lems in language processing and MT that 
cause errors. The best cross-lingual 5W sys-
tem was still 19% worse than the best mono-
lingual 5W system, which shows that MT 
significantly degrades sentence-level under-
standing. Neither source-language nor target-
language analysis was able to circumvent 
problems in MT, although each approach had 
advantages relative to the other. A detailed 
error analysis across multiple systems sug-
gests directions for future research on the 
problem. 
1 Introduction 
In our increasingly global world, it is ever more 
likely for a mono-lingual speaker to require in-
formation that is only available in a foreign lan-
guage document. Cross-lingual applications ad-
dress this need by presenting information in the 
speaker?s language even when it originally ap-
peared in some other language, using machine 
translation (MT) in the process. In this paper, we 
present an evaluation and error analysis of a 
cross-lingual application that we developed for a 
government-sponsored evaluation, the 5W task. 
The 5W task seeks to summarize the informa-
tion in a natural language sentence by distilling it 
into the answers to the 5W questions: Who, 
What, When, Where and Why. To solve this 
problem, a number of different problems in NLP 
must be addressed: predicate identification, ar-
gument extraction, attachment disambiguation, 
location and time expression recognition, and 
(partial) semantic role labeling. In this paper, we 
address the cross-lingual 5W task: given a 
source-language sentence, return the 5W?s trans-
lated (comprehensibly) into the target language. 
Success in this task requires a synergy of suc-
cessful MT and answer selection.  
The questions we address in this paper are: 
? How much does machine translation (MT) 
degrade the performance of cross-lingual 
5W systems, as compared to monolingual 
performance? 
? Is it better to do source-language analysis 
and then translate, or do target-language 
analysis on MT? 
? Which specific problems in language 
processing and/or MT cause errors in 5W 
answers?  
In this evaluation, we compare several differ-
ent approaches to the cross-lingual 5W task, two 
that work on the target language (English) and 
one that works in the source language (Chinese). 
423
A central question for many cross-lingual appli-
cations is whether to process in the source lan-
guage and then translate the result, or translate 
documents first and then process the translation. 
Depending on how errorful the translation is, 
results may be more accurate if models are de-
veloped for the source language. However, if 
there are more resources in the target language, 
then the translate-then-process approach may be 
more appropriate. We present a detailed analysis, 
both quantitative and qualitative, of how the ap-
proaches differ in performance.  
We also compare system performance on hu-
man translation (which we term reference trans-
lations) and MT of the same data in order to de-
termine how much MT degrades system per-
formance. Finally, we do an in-depth analysis of 
the errors in our 5W approaches, both on the 
NLP side and the MT side. Our results provide 
explanations for why different approaches suc-
ceed, along with indications of where future ef-
fort should be spent. 
2 Prior Work 
The cross-lingual 5W task is closely related to 
cross-lingual information retrieval and cross-
lingual question answering (Wang and Oard 
2006; Mitamura et al 2008). In these tasks, a 
system is presented a query or question in the 
target language and asked to return documents or 
answers from a corpus in the source language. 
Although MT may be used in solving this task, it 
is only used by the algorithms ? the final evalua-
tion is done in the source language. However, in 
many real-life situations, such as global business, 
international tourism, or intelligence work, users 
may not be able to read the source language. In 
these cases, users must rely on MT to understand 
the system response. (Parton et al 2008) exam-
ine the case of ?translingual? information re-
trieval, where evaluation is done on translated 
results in the target language. In cross-lingual 
information extraction (Sudo et al 2004) the 
evaluation is also done on MT, but the goal is to 
learn knowledge from a large corpus, rather than 
analyzing individual sentences.  
The 5W task is also closely related to Seman-
tic Role Labeling (SRL), which aims to effi-
ciently and effectively derive semantic informa-
tion from text. SRL identifies predicates and 
their arguments in a sentence, and assigns roles 
to each argument. For example, in the sentence 
?I baked a cake yesterday.?, the predicate 
?baked? has three arguments. ?I? is the subject of 
the predicate, ?a cake? is the object and ?yester-
day? is a temporal argument.  
Since the release of large data resources anno-
tated with relevant levels of semantic informa-
tion, such as the FrameNet (Baker et al, 1998) 
and PropBank corpora (Kingsbury and Palmer, 
2003), efficient approaches to SRL have been 
developed (Carreras and Marquez, 2005). Most 
approaches to the problem of SRL follow the 
Gildea and Jurafsky (2002) model. First, for a 
given predicate, the SRL system identifies its 
arguments' boundaries. Second, the Argument 
types are classified depending on an adopted 
lexical resource such as PropBank or FrameNet. 
Both steps are based on supervised learning over 
labeled gold standard data. A final step uses heu-
ristics to resolve inconsistencies when applying 
both steps simultaneously to the test data.  
Since many of the SRL resources are English, 
most of the SRL systems to date have been for 
English. There has been work in other languages 
such as German and Chinese (Erk 2006; Sun 
2004; Xue and Palmer 2005). The systems for 
the other languages follow the successful models 
devised for English, e.g. (Gildea and Palmer, 
2002; Chen and Rambow, 2003; Moschitti, 2004; 
Xue and Palmer, 2004; Haghighi et al, 2005). 
3 The Chinese-English 5W Task 
3.1 5W Task Description 
We participated in the 5W task as part of the 
DARPA GALE (Global Autonomous Language 
Exploitation) project. The goal is to identify the 
5W?s (Who, What, When, Where and Why) for a 
complete sentence. The motivation for the 5W 
task is that, as their origin in journalism suggests, 
the 5W?s cover the key information nuggets in a 
sentence. If a system can isolate these pieces of 
information successfully, then it can produce a 
pr?cis of the basic meaning of the sentence. Note 
that this task differs from QA tasks, where 
?Who? and ?What? usually refer to definition 
type questions. In this task, the 5W?s refer to se-
mantic roles within a sentence, as defined in Ta-
ble 1.  
In order to get al 5W?s for a sentence correct, 
a system must identify a top-level predicate, ex-
tract the correct arguments, and resolve attach-
ment ambiguity. In the case of multiple top-level 
predicates, any of the top-level predicates may be 
chosen. In the case of passive verbs, the Who is 
the agent (often expressed as a ?by clause?, or 
not stated), and the What should include the syn-
tactic subject.  
424
Answers are judged Correct1 if they identify a 
correct null argument or correctly extract an ar-
gument that is present in the sentence. Answers 
are not penalized for including extra text, such as 
prepositional phrases or subordinate clauses, 
unless the extra text includes text from another 
answer or text from another top-level predicate. 
In sentence 2a in Table 2, returning ?bought and 
cooked? for the What would be Incorrect. Simi-
larly, returning ?bought the fish at the market? 
for the What would also be Incorrect, since it 
contains the Where. Answers may also be judged 
Partial, meaning that only part of the answer was 
returned. For example, if the What contains the 
predicate but not the logical object, it is Partial.  
Since each sentence may have multiple correct 
sets of 5W?s, it is not straightforward to produce 
a gold-standard corpus for automatic evaluation. 
One would have to specify answers for each pos-
sible top-level predicate, as well as which parts 
of the sentence are optional and which are not 
allowed. This also makes creating training data 
for system development problematic. For exam-
ple, in Table 2, the sentence in 2a and 2b is the 
same, but there are two possible sets of correct 
answers. Since we could not rely on a gold-
standard corpus, we used manual annotation to 
judge our 5W system, described in section 5. 
3.2 The Cross-Lingual 5W Task 
In the cross-lingual 5W task, a system is given a 
sentence in the source language and asked to 
produce the 5W?s in the target language. In this 
task, both machine translation (MT) and 5W ex-
traction must succeed in order to produce correct 
answers. One motivation behind the cross-lingual 
5W task is MT evaluation. Unlike word- or 
phrase-overlap measures such as BLEU, the 5W 
evaluation takes into account ?concept? or ?nug-
get? translation. Of course, only the top-level 
predicate and arguments are evaluated, so it is 
not a complete evaluation. But it seeks to get at 
the understandability of the MT output, rather 
than just n-gram overlap. 
Translation exacerbates the problem of auto-
matically evaluating 5W systems. Since transla-
tion introduces paraphrase, rewording and sen-
tence restructuring, the 5W?s may change from 
one translation of a sentence to another transla-
tion of the same sentence. In some cases, roles 
may swap. For example, in Table 2, sentences 1a 
and 1b could be valid translations of the same 
                                                 
1
 The specific guidelines for determining correctness 
were formulated by BAE.  
Chinese sentence. They contain the same infor-
mation, but the 5W answers are different. Also, 
translations may produce answers that are textu-
ally similar to correct answers, but actually differ 
in meaning. These differences complicate proc-
essing in the source followed by translation. 
 
Example: On Tuesday, President Obama met with 
French President Sarkozy in Paris to discuss the 
economic crisis. 
W Definition Example  
answer 
WHO Logical subject of the 
top-level predicate in 
WHAT, or null. 
President 
Obama 
WHAT One of the top-level 
predicates in the sen-
tence, and the predi-
cate?s logical object. 
met with 
French Presi-
dent Sarkozy 
WHEN ARGM-TMP of the 
top-level predicate in 
WHAT, or null. 
On Tuesday 
WHERE ARGM-LOC of the 
top-level predicate in 
WHAT, or null. 
in Paris 
WHY ARGM-CAU of the 
top-level predicate in 
WHAT, or null. 
to discuss the 
economic crisis 
Table 1. Definition of the 5W task, and 5W answers 
from the example sentence above. 
4 5W System 
We developed a 5W combination system that 
was based on five other 5W systems. We se-
lected four of these different systems for evalua-
tion: the final combined system (which was our 
submission for the official evaluation), two sys-
tems that did analysis in the target-language 
(English), and one system that did analysis in the 
source language (Chinese). In this section, we 
describe the individual systems that we evalu-
ated, the combination strategy, the parsers that 
we tuned for the task, and the MT systems.  
 Sentence WHO WHAT 
1a Mary bought a cake 
from Peter. 
Mary bought a 
cake 
1b Peter sold Mary a 
cake. 
Peter sold Mary 
2a I bought the fish at 
the market yesterday 
and cooked it today. 
I bought the 
fish 
[WHEN: 
yesterday] 
2b I bought the fish at 
the market yesterday 
and cooked it today. 
I cooked it 
[WHEN: 
today] 
Table 2. Example 5W answers. 
425
4.1 Latent Annotation Parser 
For this work, we have re-implemented and en-
hanced the Berkeley parser (Petrov and Klein 
2007) in several ways: (1) developed a new 
method to handle rare words in English and Chi-
nese; (2) developed a new model of unknown 
Chinese words based on characters in the word; 
(3) increased robustness by adding adaptive 
modification of pruning thresholds and smooth-
ing of word emission probabilities. While the 
enhancements to the parser are important for ro-
bustness and accuracy, it is even more important 
to train grammars matched to the conditions of 
use. For example, parsing a Chinese sentence 
containing full-width punctuation with a parser 
trained on half-width punctuation reduces accu-
racy by over 9% absolute F. In English, parsing 
accuracy is seriously compromised by training a 
grammar with punctuation and case to process 
sentences without them.  
We developed grammars for English and Chi-
nese trained specifically for each genre by sub-
sampling from available treebanks (for English, 
WSJ, BN, Brown, Fisher, and Switchboard; for 
Chinese, CTB5) and transforming them for a 
particular genre (e.g., for informal speech, we 
replaced symbolic expressions with verbal forms 
and remove punctuation and case) and by utiliz-
ing a large amount of genre-matched self-labeled 
training parses. Given these genre-specific 
parses, we extracted chunks and POS tags by 
script. We also trained grammars with a subset of 
function tags annotated in the treebank that indi-
cate case role information (e.g., SBJ, OBJ, LOC, 
MNR) in order to produce function tags.   
4.2 Individual 5W Systems 
The English systems were developed for the 
monolingual 5W task and not modified to handle 
MT. They used hand-crafted rules on the output 
of the latent annotation parser to extract the 5Ws.  
English-function used the function tags from 
the parser to map parser constituents to the 5Ws. 
First the Who, When, Where and Why were ex-
tracted, and then the remaining pieces of the sen-
tence were returned as the What. The goal was to 
make sure to return a complete What answer and 
avoid missing the object. 
English-LF, on the other hand, used a system 
developed over a period of eight years (Meyers 
et al 2001) to map from the parser?s syntactic 
constituents into logical grammatical relations 
(GLARF), and then extracted the 5Ws from the 
logical form. As a back-up, it also extracted 
GLARF relations from another English-treebank 
trained parser, the Charniak parser (Charniak 
2001). After the parses were both converted to 
the 5Ws, they were then merged, favoring the 
system that: recognized the passive, filled more 
5W slots or produced shorter 5W slots (provid-
ing that the WHAT slot consisted of more than 
just the verb). A third back-up method extracted 
5Ws from part-of-speech tag patterns. Unlike 
English-function, English-LF explicitly tried to 
extract the shortest What possible, provided there 
was a verb and a possible object, in order to 
avoid multiple predicates or other 5W answers.  
Chinese-align uses the latent annotation 
parser (trained for Chinese) to parse the Chinese 
sentences. A dependency tree converter (Johans-
son and Nuges 2007) was applied to the constitu-
ent-based parse trees to obtain the dependency 
relations and determine top-level predicates. A 
set of hand-crafted dependency rules based on 
observation of Chinese OntoNotes were used to 
map from the Chinese function tags into Chinese 
5Ws.  Finally, Chinese-align used the alignments 
of three separate MT systems to translate the 
5Ws: a phrase-based system, a hierarchical 
phrase-based system, and a syntax augmented 
hierarchical phrase-based system. Chinese-align 
faced a number of problems in using the align-
ments, including the fact that the best MT did not 
always have the best alignment. Since the predi-
cate is essential, it tried to detect when verbs 
were deleted in MT, and back-off to a different 
MT system. It also used strategies for finding 
and correcting noisy alignments, and for filtering 
When/Where answers from Who and What.  
4.3 Hybrid System 
A merging algorithm was learned based on a de-
velopment test set. The algorithm selected all 
5W?s from a single system, rather than trying to 
merge W?s from different systems, since the 
predicates may vary across systems. For each 
document genre (described in section 5.4), we 
ranked the systems by performance on the devel-
opment data. We also experimented with a vari-
ety of features (for instance, does ?What? include 
a verb). The best-performing features were used 
in combination with the ranked list of priority 
systems to create a rule-based merger. 
4.4 MT Systems 
The MT Combination system used by both of the 
English 5W systems combined up to nine sepa-
rate MT systems. System weights for combina-
tion were optimized together with the language 
426
model score and word penalty for a combination 
of BLEU and TER (2*(1-BLEU) + TER). Res-
coring was applied after system combination us-
ing large language models and lexical trigger 
models. Of the nine systems, six were phrased-
based systems (one of these used chunk-level 
reordering of the Chinese, one used word sense 
disambiguation, and one used unsupervised Chi-
nese word segmentation), two were hierarchical 
phrase-based systems, one was a string-to-
dependency system, one was syntax-augmented, 
and one was a combination of two other systems. 
Bleu scores on the government supplied test set 
in December 2008 were 35.2 for formal text, 
29.2 for informal text, 33.2 for formal speech, 
and 27.6 for informal speech. More details may 
be found in (Matusov et al 2009). 
5 Methods 
5.1 5W Systems 
For the purposes of this evaluation2, we com-
pared the output of 4 systems: English-Function, 
English-LF, Chinese-align, and the combined 
system. Each English system was also run on 
reference translations of the Chinese sentence. 
So for each sentence in the evaluation corpus, 
there were 6 systems that each provided 5Ws. 
5.2 5W Answer Annotation 
For each 5W output, annotators were presented 
with the reference translation, the MT version, 
and the 5W answers. The 5W system names 
were hidden from the annotators. Annotators had 
to select ?Correct?, ?Partial? or ?Incorrect? for 
each W. For answers that were Partial or Incor-
rect, annotators had to further specify the source 
of the error based on several categories (de-
scribed in section 6). All three annotators were 
native English speakers who were not system 
developers for any of the 5W systems that were 
being evaluated (to avoid biased grading, or as-
signing more blame to the MT system). None of 
the annotators knew Chinese, so all of the judg-
ments were based on the reference translations. 
After one round of annotation, we measured 
inter-annotator agreement on the Correct, Partial, 
or Incorrect judgment only. The kappa value was 
0.42, which was lower than we expected. An-
other surprise was that the agreement was lower 
                                                 
2
 Note that an official evaluation was also performed by 
DARPA and BAE. This evaluation provides more fine-
grained detail on error types and gives results for the differ-
ent approaches. 
for When, Where and Why (?=0.31) than for 
Who or What (?=0.48). We found that, in cases 
where a system would get both Who and What 
wrong, it was often ambiguous how the remain-
ing W?s should be graded. Consider the sentence: 
?He went to the store yesterday and cooked lasa-
gna today.? A system might return erroneous 
Who and What answers, and return Where as ?to 
the store? and When as ?today.? Since Where 
and When apply to different predicates, they 
cannot both be correct. In order to be consistent, 
if a system returned erroneous Who and What 
answers, we decided to mark the When, Where 
and Why answers Incorrect by default. We added 
clarifications to the guidelines and discussed ar-
eas of confusion, and then the annotators re-
viewed and updated their judgments.  
After this round of annotating, ?=0.83 on the 
Correct, Partial, Incorrect judgments. The re-
maining disagreements were genuinely ambigu-
ous cases, where a sentence could be interpreted 
multiple ways, or the MT could be understood in 
various ways. There was higher agreement on 
5W?s answers from the reference text compared 
to MT text, since MT is inherently harder to 
judge and some annotators were more flexible 
than others in grading garbled MT. 
5.3 5W Error Annotation 
In addition to judging the system answers by the 
task guidelines, annotators were asked to provide 
reason(s) an answer was wrong by selecting from 
a list of predefined errors. Annotators were asked 
to use their best judgment to ?assign blame? to 
the 5W system, the MT, or both. There were six 
types of system errors and four types of MT er-
rors, and the annotator could select any number 
of errors. (Errors are described further in section 
6.) For instance, if the translation was correct, 
but the 5W system still failed, the blame would 
be assigned to the system. If the 5W system 
picked an incorrectly translated argument (e.g., 
?baked a moon? instead of ?baked a cake?), then 
the error would be assigned to the MT system. 
Annotators could also assign blame to both sys-
tems, to indicate that they both made mistakes.  
Since this annotation task was a 10-way selec-
tion, with multiple selections possible, there were 
some disagreements. However, if categorized 
broadly into 5W System errors only, MT errors 
only, and both 5W System and MT errors, then 
the annotators had a substantial level of agree-
ment (?=0.75 for error type, on sentences where 
both annotators indicated an error).  
427
5.4 5 W Corpus 
The full evaluation corpus is 350 documents, 
roughly evenly divided between four genres: 
formal text (newswire), informal text (blogs and 
newsgroups), formal speech (broadcast news) 
and informal speech (broadcast conversation). 
For this analysis, we randomly sampled docu-
ments to judge from each of the genres. There 
were 50 documents (249 sentences) that were 
judged by a single annotator. A subset of that set, 
with 22 documents and 103 sentences, was 
judged by two annotators. In comparing the re-
sults from one annotator to the results from both 
annotators, we found substantial agreement. 
Therefore, we present results from the single an-
notator so we can do a more in-depth analysis. 
Since each sentence had 5W?s, and there were 6 
systems that were compared, there were 7,500 
single-annotator judgments over 249 sentences. 
6 Results 
Figure 1 shows the cross-lingual performance 
(on MT) of all the systems for each 5W. The best 
monolingual performance (on human transla-
tions) is shown as a dashed line (% Correct 
only). If a system returned Incorrect answers for 
Who and What, then the other answers were 
marked Incorrect (as explained in section 5.2). 
For the last 3W?s, the majority of errors were due 
to this (details in Figure 1), so our error analysis 
focuses on the Who and What questions. 
6.1 Monolingual 5W Performance 
To establish a monolingual baseline, the Eng-
lish 5W system was run on reference (human) 
translations of the Chinese text. For each partial 
or incorrect answer, annotators could select one 
or more of these reasons: 
? Wrong predicate or multiple predicates. 
? Answer contained another 5W answer. 
? Passive handled wrong (WHO/WHAT). 
? Answer missed. 
? Argument attached to wrong predicate. 
Figure 1 shows the performance of the best 
monolingual system for each 5W as a dashed 
line. The What question was the hardest, since it 
requires two pieces of information (the predicate 
and object). The When, Where and Why ques-
tions were easier, since they were null most of 
the time. (In English OntoNotes 2.0, 38% of sen-
tences have a When, 15% of sentences have a 
Where, and only 2.6% of sentences have a Why.) 
The most common monolingual system error on 
these three questions was a missed answer, ac-
counting for all of the Where errors, all but one 
Why error and 71% of the When errors. The re-
maining When errors usually occurred when the 
system assumed the wrong sense for adverbs 
(such as ?then? or ?just?). 
 Missing Other 
5W 
Wrong/Multiple 
Predicates 
Wrong 
REF-func 37 29 22 7 
REF-LF 54 20 17 13 
MT-func 18 18 18 8 
MT-LF 26 19 10 11 
Chinese 23 17 14 8 
Hybrid 13 17 15 12 
Table 3. Percentages of Who/What errors attributed to 
each system error type. 
The top half of Table 3 shows the reasons at-
tributed to the Who/What errors for the reference 
corpus. Since English-LF preferred shorter an-
swers, it frequently missed answers or parts of 
Figure 1. System performance on each 5W. ?Partial? indicates that part of the answer was missing. Dashed lines 
show the performance of the best monolingual system (% Correct on human translations). For the last 3W?s, the 
percent of answers that were Incorrect ?by default? were: 30%, 24%, 27% and 22%, respectively, and 8% for the 
best monolingual system 
60 60 56 66
36 40 38 42
56 59 59 64 63
70 66 73 68 75 71 78
19201914
0
10
20
30
40
50
60
70
80
90
100
En
g-
fu
nc
En
g-
LF
Ch
in
es
e
Hy
br
id
En
g-
fu
nc
En
g-
LF
Ch
in
es
e
Hy
br
id
En
g-
fu
nc
En
g-
LF
Ch
in
es
e
Hy
br
id
En
g-
fu
nc
En
g-
LF
Ch
in
es
e
Hy
br
id
En
g-
fu
nc
En
g-
LF
Ch
in
es
e
Hy
br
id
WHO WHAT WHEN WHERE WHY
Partia l
Correct
90
75 81
83 90
Best 
mono-
lingual
428
answers. English-LF also had more Partial an-
swers on the What question: 66% Correct and 
12% Partial, versus 75% Correct and 1% Partial 
for English-function. On the other hand, English-
function was more likely to return answers that 
contained incorrect extra information, such as 
another 5W or a second predicate. 
6.2 Effect of MT on 5W Performance 
The cross-lingual 5W task requires that systems 
return intelligible responses that are semantically 
equivalent to the source sentence (or, in the case 
of this evaluation, equivalent to the reference).  
As can be seen in Figure 1, MT degrades the 
performance of the 5W systems significantly, for 
all question types, and for all systems. Averaged 
over all questions, the best monolingual system 
does 19% better than the best cross-lingual sys-
tem. Surprisingly, even though English-function 
outperformed English-LF on the reference data, 
English-LF does consistently better on MT. This 
is likely due to its use of multiple back-off meth-
ods when the parser failed.  
6.3 Source-Language vs. Target-Language 
The Chinese system did slightly worse than ei-
ther English system overall, but in the formal 
text genre, it outperformed both English systems.  
Although the accuracies for the Chinese and 
English systems are similar, the answers vary a 
lot. Nearly half (48%) of the answers can be an-
swered correctly by both the English system and 
the Chinese system. But 22% of the time, the 
English system returned the correct answer when 
the Chinese system did not. Conversely, 10% of 
the answers were returned correctly by the Chi-
nese system and not the English systems. The 
hybrid system described in section 4.2 attempts 
to exploit these complementary advantages. 
After running the hybrid system, 61% of the 
answers were from English-LF, 25% from Eng-
lish-function, 7% from Chinese-align, and the 
remaining 7% were from the other Chinese 
methods (not evaluated here). The hybrid did 
better than its parent systems on all 5Ws, and the 
numbers above indicate that further improvement 
is possible with a better combination strategy.  
6.4 Cross-Lingual 5W Error Analysis 
For each Partial or Incorrect answer, annotators 
were asked to select system errors, translation 
errors, or both. (Further analysis is necessary to 
distinguish between ASR errors and MT errors.) 
The translation errors considered were: 
? Word/phrase deleted. 
? Word/phrase mistranslated. 
? Word order mixed up. 
? MT unreadable. 
Table 4 shows the translation reasons attrib-
uted to the Who/What errors. For all systems, the 
errors were almost evenly divided between sys-
tem-only, MT-only and both, although the Chi-
nese system had a higher percentage of system-
only errors. The hybrid system was able to over-
come many system errors (for example, in Table 
2, only 13% of the errors are due to missing an-
swers), but still suffered from MT errors. 
Table 4. Percentages of Who/What errors by each 
system attributed to each translation error type. 
Mistranslation was the biggest translation 
problem for all the systems. Consider the first 
example in Figure 3. Both English systems cor-
rectly extracted the Who and the When, but for 
Mistrans-
lation 
Deletion Word 
Order 
Unreadable 
MT-func 34 18 24 18 
MT-LF 29 22 21 14 
Chinese 32 17 9 13 
Hybrid 35 19 27 18 
MT: After several rounds of reminded, I was a little bit 
Ref: After several hints, it began to come back to me. 
 ??????,?????????? 
MT: The Guizhou province, within a certain bank robber, under the watchful eyes of a weak woman, and, with a 
knife stabbed the woman. 
Ref: I saw that in a bank in Guizhou Province, robbers seized a vulnerable young woman in front of a group of 
onlookers and stabbed the woman with a knife. 
 ?????????,?????????,???????,??,???????? 
MT: Woke up after it was discovered that the property is not more than eleven people do not even said that the 
memory of the receipt of the country into the country. 
Ref: Well, after waking up, he found everything was completely changed. Apart from having additional eleven 
grandchildren, even the motherland as he recalled has changed from a socialist country to a capitalist country. 
 ?????????????,?????????,????????????????????????? 
Figure 3 Example sentences that presented problems for the 5W systems. 
 
429
What they returned ?was a little bit.? This is the 
correct predicate for the sentence, but it does not 
match the meaning of the reference. The Chinese 
5W system was able to select a better translation, 
and instead returned ?remember a little bit.? 
Garbled word order was chosen for 21-24% of 
the target-language system Who/What errors, but 
only 9% of the source-language system 
Who/What errors. The source-language word 
order problems tended to be local, within-phrase 
errors (e.g., ?the dispute over frozen funds? was 
translated as ?the freezing of disputes?). The tar-
get-language system word order problems were 
often long-distance problems. For example, the 
second sentence in Figure 3 has many phrases in 
common with the reference translation, but the 
overall sentence makes no sense. The watchful 
eyes actually belong to a ?group of onlookers? 
(deleted). Ideally, the robber would have 
?stabbed the woman? ?with a knife,? rather than 
vice versa. Long-distance phrase movement is a 
common problem in Chinese-English MT, and 
many MT systems try to handle it (e.g., Wang et 
al. 2007). By doing analysis in the source lan-
guage, the Chinese 5W system is often able to 
avoid this problem ? for example, it successfully 
returned ?robbers? ?grabbed a weak woman? for 
the Who/What of this sentence. 
Although we expected that the Chinese system 
would have fewer problems with MT deletion, 
since it could choose from three different MT 
versions, MT deletion was a problem for all sys-
tems. In looking more closely at the deletions, 
we noticed that over half of deletions were verbs 
that were completely missing from the translated 
sentence. Since MT systems are tuned for word-
based overlap measures (such as BLEU), verb 
deletion is penalized equally as, for example, 
determiner deletion. Intuitively, a verb deletion 
destroys the central meaning of a sentence, while 
a determiner is rarely necessary for comprehen-
sion. Other kinds of deletions included noun 
phrases, pronouns, named entities, negations and 
longer connecting phrases.  
Deletion also affected When and Where. De-
leting particles such as ?in? and ?when? that in-
dicate a location or temporal argument caused 
the English systems to miss the argument. Word 
order problems in MT also caused attachment 
ambiguity in When and Where. 
The ?unreadable? category was an option of 
last resort for very difficult MT sentences. The 
third sentence in Figure 3 is an example where 
ASR and MT errors compounded to create an 
unparseable sentence.  
7 Conclusions 
In our evaluation of various 5W systems, we dis-
covered several characteristics of the task. The 
What answer was the hardest for all systems, 
since it is difficult to include enough information 
to cover the top-level predicate and object, with-
out getting penalized for including too much. 
The challenge in the When, Where and Why 
questions is due to sparsity ? these responses 
occur in much fewer sentences than Who and 
What, so systems most often missed these an-
swers. Since this was a new task, this first 
evaluation showed clear issues on the language 
analysis side that can be improved in the future. 
The best cross-lingual 5W system was still 
19% worse than the best monolingual 5W sys-
tem, which shows that MT significantly degrades 
sentence-level understanding. A serious problem 
in MT for systems was deletion. Chinese con-
stituents that were never translated caused seri-
ous problems, even when individual systems had 
strategies to recover. When the verb was deleted, 
no top level predicate could be found and then all 
5Ws were wrong.  
One of our main research questions was 
whether to extract or translate first. We hypothe-
sized that doing source-language analysis would 
be more accurate, given the noise in Chinese 
MT, but the systems performed about the same. 
This is probably because the English tools (logi-
cal form extraction and parser) were more ma-
ture and accurate than the Chinese tools.  
Although neither source-language nor target-
language analysis was able to circumvent prob-
lems in MT, each approach had advantages rela-
tive to the other, since they did well on different 
sets of sentences. For example, Chinese-align 
had fewer problems with word order, and most 
of those were due to local word-order problems.  
Since the source-language and target-language 
systems made different kinds of mistakes, we 
were able to build a hybrid system that used the 
relative advantages of each system to outperform 
all systems. The different types of mistakes made 
by each system suggest features that can be used 
to improve the combination system in the future. 
Acknowledgments 
This work was supported in part by the Defense 
Advanced Research Projects Agency (DARPA) 
under contract number HR0011-06-C-0023. Any 
opinions, findings and conclusions or recom-
mendations expressed in this material are the 
authors' and do not necessarily reflect those of 
the sponsors. 
430
References  
Collin F. Baker, Charles J. Fillmore, and John B. 
Lowe. 1998. The Berkeley FrameNet project. In 
COLING-ACL '98: Proceedings of the Conference, 
held at the University of Montr?al, pages 86?90. 
Xavier Carreras and Llu?s M?rquez. 2005. Introduc-
tion to the CoNLL-2005 shared task: Semantic role 
labeling. In Proceedings of the Ninth Conference 
on Computational Natural Language Learning 
(CoNLL-2005), pages 152?164. 
Eugene Charniak. 2001. Immediate-head parsing for 
language models. In Proceedings of the 39th An-
nual Meeting on Association For Computational 
Linguistics (Toulouse, France, July 06 - 11, 2001).   
John Chen and Owen Rambow. 2003. Use of deep 
linguistic features for the recognition and labeling 
of semantic arguments. In Proceedings of the 2003 
Conference on Empirical Methods in Natural Lan-
guage Processing, Sapporo, Japan. 
Katrin Erk and Sebastian Pado. 2006. Shalmaneser ? 
a toolchain for shallow semantic parsing. Proceed-
ings of LREC. 
Daniel Gildea and Daniel Jurafsky. 2002. Automatic 
labeling of semantic roles. Computational Linguis-
tics, 28(3):245?288. 
Daniel Gildea and Martha Palmer. 2002. The neces-
sity of parsing for predicate argument recognition. 
In Proceedings of the 40th Annual Conference of 
the Association for Computational Linguistics 
(ACL-02), Philadelphia, PA, USA. 
Mary Harper and Zhongqiang Huang. 2009. Chinese 
Statistical Parsing, chapter to appear. 
Aria Haghighi, Kristina Toutanova, and Christopher 
Manning. 2005. A joint model for semantic role la-
beling. In Proceedings of the Ninth Conference on 
Computational Natural Language Learning 
(CoNLL-2005), pages 173?176.  
Paul Kingsbury and Martha Palmer. 2003. Propbank: 
the next level of treebank. In Proceedings of Tree-
banks and Lexical Theories. 
Evgeny Matusov, Gregor Leusch, & Hermann Ney: 
Learning to combine machine translation systems.  
In: Cyril Goutte, Nicola Cancedda, Marc Dymet-
man, & George Foster (eds.) Learning machine 
translation. (Cambridge, Mass.: The MIT Press, 
2009); pp.257-276. 
Adam Meyers, Ralph Grishman, Michiko Kosaka and 
Shubin Zhao.  2001. Covering Treebanks with 
GLARF. In Proceedings of the ACL 2001 Work-
shop on Sharing Tools and Resources. Annual 
Meeting of the ACL. Association for Computa-
tional Linguistics, Morristown, NJ, 51-58. 
Teruko Mitamura, Eric Nyberg, Hideki Shima, 
Tsuneaki Kato, Tatsunori Mori, Chin-Yew Lin, 
Ruihua Song, Chuan-Jie Lin, Tetsuya Sakai, 
Donghong Ji, and Noriko Kando. 2008. Overview 
of the NTCIR-7 ACLIA Tasks: Advanced Cross-
Lingual Information Access. In Proceedings of the 
Seventh NTCIR Workshop Meeting. 
Alessandro Moschitti, Silvia Quarteroni, Roberto 
Basili, and Suresh Manandhar. 2007. Exploiting 
syntactic and shallow semantic kernels for question 
answer classification. In Proceedings of the 45th 
Annual Meeting of the Association of Computa-
tional Linguistics, pages 776?783.  
Kristen Parton, Kathleen R. McKeown, James Allan, 
and Enrique Henestroza. Simultaneous multilingual 
search for translingual information retrieval. In 
Proceedings of ACM 17th Conference on Informa-
tion and Knowledge Management (CIKM), Napa 
Valley, CA, 2008. 
Slav Petrov and Dan Klein. 2007. Improved Inference 
for Unlexicalized Parsing. North American Chapter 
of the Association for Computational Linguistics 
(HLT-NAACL 2007). 
Sudo, K., Sekine, S., and Grishman, R. 2004. Cross-
lingual information extraction system evaluation. 
In Proceedings of the 20th international Confer-
ence on Computational Linguistics. 
Honglin Sun and Daniel Jurafsky. 2004. Shallow Se-
mantic Parsing of Chinese. In Proceedings of 
NAACL-HLT. 
Cynthia A. Thompson, Roger Levy, and Christopher 
Manning. 2003. A generative model for semantic 
role labeling. In 14th European Conference on Ma-
chine Learning. 
Nianwen Xue and Martha Palmer. 2004. Calibrating 
features for semantic role labeling. In Dekang Lin 
and Dekai Wu, editors, Proceedings of EMNLP 
2004, pages 88?94, Barcelona, Spain, July. Asso-
ciation for Computational Linguistics. 
Xue, Nianwen and Martha Palmer. 2005. Automatic 
semantic role labeling for Chinese verbs. InPro-
ceedings of the Nineteenth International Joint Con-
ference on Artificial Intelligence, pages 1160-1165.  
Chao Wang, Michael Collins, and Philipp Koehn. 
2007. Chinese Syntactic Reordering for Statistical 
Machine Translation. Proceedings of the 2007 Joint 
Conference on Empirical Methods in Natural Lan-
guage Processing and Computational Natural Lan-
guage Learning (EMNLP-CoNLL), 737-745. 
Jianqiang Wang and Douglas W. Oard, 2006. "Com-
bining Bidirectional Translation and Synonymy for 
Cross-Language Information Retrieval," in 29th 
Annual International ACM SIGIR Conference on 
Research and Development in Information Re-
trieval, pp. 202-209. 
431
Coling 2010: Poster Volume, pages 946?954,
Beijing, August 2010
MT Error Detection for Cross-Lingual Question Answering
Kristen Parton
Columbia University
New York, NY, USA
kristen@cs.columbia.edu
Kathleen McKeown
Columbia University
New York, NY, USA
kathy@cs.columbia.edu
Abstract
We present a novel algorithm for de-
tecting errors in MT, specifically focus-
ing on content words that are deleted
during MT. We evaluate it in the con-
text of cross-lingual question answering
(CLQA), where we try to correct the
detected errors by using a better (but
slower) MT system to retranslate a lim-
ited number of sentences at query time.
Using a query-dependent ranking heuris-
tic enabled the system to direct scarce
MT resources towards retranslating the
sentences that were most likely to ben-
efit CLQA. The error detection algo-
rithm identified spuriously deleted con-
tent words with high precision. How-
ever, retranslation was not an effective
approach for correcting them, which in-
dicates the need for a more targeted ap-
proach to error correction in the future.
1 Introduction
Cross-lingual systems allow users to find infor-
mation in languages they do not know, an in-
creasingly important need in the modern global
economy. In this paper, we focus on the spe-
cial case of cross-lingual tasks with result trans-
lation, where system output must be translated
back into the user?s language. We refer to tasks
such as these as task-embedded machine trans-
lation, since the performance of the system as a
whole depends on both task performance and the
quality of the machine translation (MT).
Consider the case of cross-lingual question
answering (CLQA) with result translation: a user
enters an English question, the corpus is Ara-
bic, and the system must return answers in En-
glish. If the corpus is translated into English be-
fore answer extraction, an MT error may cause
the system to miss a relevant sentence, leading
to decreased recall. Boschee et al (2010) de-
scribe six queries from a formal CLQA evalu-
ation where none of the competing systems re-
turned correct responses, due to poor translation.
In one example, the answer extractor missed a
relevant sentence because the name ?Abu Hamza
al-Muhajir? was translated as ?Zarqawi?s succes-
sor Issa.? However, even if answer extraction is
done in Arabic, errorful translations of the cor-
rect answer can affect precision: if the user can-
not understand the translated English sentence,
the result will be perceived irrelevant. For in-
stance, the user may not realize that the mistrans-
lation ?Alry$Awy? refers to Al-Rishawi.
Our goal was not to improve a specific CLQA
system, but rather to find MT errors that are
likely to impact CLQA and correct them. We in-
troduce an error detection algorithm that focuses
on several common types of MT errors that are
likely to impact translation adequacy:
? content word deletion
? out-of-vocabulary (OOV) words
? named entity missed translations
The algorithm is language-independent and MT-
system-independent, and generalizes prior work
by detecting errors at the word level and detect-
ing errors across multiple parts of speech.
We demonstrate the utility of our algorithm by
applying it to CLQA at query time, and investi-
gate using a higher-quality MT system to correct
the errors. The CLQA system translates the full
corpus, containing 119,879 text documents and
150 hours of speech, offline using a production
MT system, which is able to translate quickly
(5,000 words per minute) at the cost of lower
quality translations. A research MT system has
higher quality but is too slow to be practical for
a large amount of data (at 2 words per minute,
946
it would take 170 days on 50 machines to trans-
late the corpus). At query-time, we can call the
research MT system to retranslate sentences, but
due to time constraints, we can only retranslate k
sentences (we set k=25). In order to choose the
sentences to best improve CLQA performance,
we rank potential sentences using a relevance
model and a model of error importance.
Our results touch on three areas:
? Evaluation of our algorithm for detecting
content word deletion shows that it is ef-
fective, accurately pinpointing errors 89%
of the time (excluding annotator disagree-
ments).
? Evaluation of the impact of re-ranking
shows that it is crucial for directing scarce
MT resources wisely as the higher-ranked
sentences were more relevant.
? Although the research MT system was per-
ceived to be significantly better than the
production system, evaluation shows that
it corrected the detected errors only 39%
of the time. Furthermore, retranslation
seems to have a negligible effect on rele-
vance. These unexpected results indicate
that, while we can identify errors, retrans-
lation is not a good approach for correcting
them. We discuss this finding and its impli-
cations in our conclusion.
2 Task-Embedded MT
A variety of cross-lingual applications use MT
to enable users to find information in other lan-
guages: e.g., CLQA, cross-lingual information
retrieval (CLIR), and cross-lingual image re-
trieval. However, cross-lingual applications such
as these typically do not do result translation
? for instance, an English-French CLIR system
would take an English query and return French
documents, assuming that result translation is a
separate MT problem. Part of the reason for
the separation between cross-lingual tasks and
MT is that evaluating task performance on MT
is often difficult. For example, for a multilin-
gual summarization task combining English and
machine translated English, Daume? and Marcu
(2006) found that doing a pyramid annotation on
MT was difficult due to the poor MT quality.
Assessing cross-lingual task performance
without result translation is problematic, because
in a real-world application, result translation
would affect task performance. For instance, in
English-Arabic CLIR, a poorly translated rele-
vant Arabic document may appear to be irrel-
evant to an English speaker. Decoupling the
cross-lingual application from the MT system
also limits the opportunity for feedback between
the application and the MT system. Ji and Grish-
man (2007) exploited a feedback loop between
Chinese and English named entity (NE) tagging
and Chinese-English NE translation to improve
both NE extraction and NE translation.
In this paper, error detection is done at query
time so that query context can be taken into ac-
count when determining which sentences to re-
translate. We also use the task context to detect
errors in translating NEs present in the query.
3 Related Work
There is extensive prior work in describing MT
errors, but they usually involve post-hoc error
analysis of specific MT systems (e.g., (Kirch-
hoff et al, 2007), (Vilar et al, 2006)) rather than
online error detection. One exception is Herm-
jakob et al (2008), who studied NE translation
errors, and integrated an improved on-the-fly NE
transliterator into an SMT system.
Content word deletion in MT has been stud-
ied from different perspectives. Li et al (2008)
and Menezes and Quirk (2008) explored ways of
modeling (intentional) source-word deletion in
MT and showed that it can improve BLEU score.
Zhang et al (2009) described how errors made
during the word-alignment and phrase-extraction
phases in training phrase-based SMT often lead
to spurious insertions and deletions during trans-
lation decoding. This is a common error ? Vilar
et al (2006) found that 22% of errors produced
by their Chinese-English MT system were due to
missing content words. Parton et al (2009) did
a post-hoc analysis on the cross-lingual 5W task
and found that content word deletion accounted
for 17-22% of the errors on that task.
Some work has been done in addressing MT
errors for different cross-lingual tasks. Ji and
947
1) Source kmA tHdv wzyr AldfAE AlAsrA}yly Ayhwd bArAk Al*y zAr mwqE Altfjyr AlAntHAry fy dymwnp fy
wqt sAbq En Altfjyr AlAntHAry . . .
ProdM?T There also the Israeli Defense Minister Ehud Barak, who visited the site of the suicide bombing in Dimona
earlier, the suicide bombing . . .
Ref. Moreover, Israeli Defense Minister Ehud Barak, who visited the scene of the suicide bombing in Dimona
earlier, spoke about the suicide bombing . . .
2) Source . . . Akd Ely rgbp hrAry AlAstfAdp mn AltjArb AlAyrAnyp fy mwAjhp Alqwy AlmEtdyp.
ProdM?T . . . stressed the desire to test the Iranian Harare in the face of the invading forces.
Ref. . . . stressed Harare?s desire to benefit from the Iranian experience in the face of the forces of aggressors.
Table 1: Two examples of content word deletion during MT.
Grishman (2007) detected NE translation errors
in the context of cross-lingual entity extraction,
and used the task context to improve NE transla-
tion. Ma and McKeown (2009) investigated verb
deletion in Chinese-English MT in the context
of CLQA. They tested two SMT systems, and
found deleted verbs in 4-7% of the translations.
After using post-editing to correct the verb dele-
tion, QA relevance increased for 7% of the sen-
tences, showing that an error that may have little
impact on translation metrics such as BLEU (Pa-
pineni et al, 2002) can have a significant impact
on cross-lingual applications.
Our work generalizes Ma and McKeown
(2009) by detecting content-word deletions and
other MT errors rather than just verb deletions.
We also relax the assumption that translation pre-
serves part of speech (i.e., that verbs must trans-
late into verbs), assuming only that a phrase con-
taining a content word should be translated into
a phrase containing a content word. Instead of
post-editing, we use an improved MT system to
retranslate sentences with detected errors.
Using retranslation to correct errors exploits
the fact that some sentences are harder to trans-
late than others. In a resource-constrained set-
ting, it makes sense to apply a better MT system
only to sentences for which the fast MT system
has lower confidence. We do not know of other
systems that do multi-pass translation, but it is
an interesting area for further work.
4 MT Error Detection
Most MT systems try to balance translation flu-
ency with adequacy, which refers to the amount
of meaning expressed in the original that is also
expressed in the translation. For task-embedded
MT, errors in adequacy are more likely to have
an impact on performance than errors in fluency.
Many MT metrics (such as BLEU) treat all to-
kens equally, so deleting a verb is penalized the
same as deleting a comma. In contrast, we focus
on errors in translating content words, which are
words with open-class parts of speech (POS), as
they are more likely to impact adequacy. First
we describe how MT deletion errors arise and
how we can detect them, and finally we describe
detection of other types of errors.
4.1 Deletion in MT
The simplest case of content word deletion is
a complete deletion by the translation model
? in other words, a token was not translated.
We assume the MT system produces word or
phrase alignments, so this case can be detected
by checking for a null alignment. However, it
is necessary to distinguish correct deletion from
spurious deletion. Some content words do not
need to be translated ? for example the Arabic
copular verb ?kAn? (?to be?) is often correctly
deleted when translating into English.
A more subtle form of content word deletion
occurs when a content word is translated as a
non-content word. This can be detected by com-
paring the parts of speech of aligned words. Con-
sider the production MT System (Prod. MT) ex-
ample in Table 1: the verb ?tHdv?1 (?spoke?) has
been translated as the expletive ?there.?
Finally, another case of content word deletion
occurs when a content word is translated as part
of a larger MT phrase, but the content word is
not translated. In the second example in Table 1,
an Arabic phrase consisting of a noun and prepo-
sition is translated as just the preposition ?to.?
1Arabic examples in this paper are shown in Buckwalter
transliteration (Buckwalter, 2002).
948
The latter two kinds of content word deletion
are considered mistranslations rather than dele-
tions by the translation model, since the deleted
source-language token does produce one or more
target-language tokens. However, from the per-
spective of a cross-lingual application, there was
a deletion, since some content that was present
in the original is not present in the translation.
4.2 Detecting Deleted Content Words
The deletion detection algorithm is motivated
by the assumption that a source-language
phrase containing one or more meaning-bearing
words should produce a phrase with one or
more meaning-bearing words in the translation.
(Phrase refers to an n-gram rather than a syntac-
tic phrase.) Note that this does not assume a one-
to-one correspondence between content words
? for example, translating the phrase ?spoke
loudly? as the single word ?yelled? satisfies the
assumption. This hypothesis favors precision
over recall, since it may miss cases where two
content words are incorrectly translated as a sin-
gle content word (for instance, if ?coffee table?
is translated as ?coffee?).
The algorithm takes as input POS tags in both
languages and word alignments produced by the
MT system during translation. The exact defi-
nition of ?content word? will depend upon the
language and POS tagset. The system iterates
over all content words in the source sentence,
and, for each word, checks whether it is aligned
to one or more content words in the target sen-
tence. If it has no alignment, or is aligned to
only function words, the system reports an error.
This rule-based approach has poor precision be-
cause of content words that are correctly deleted.
For example, in the sentence ?I am going to
watch TV,? ?am? and ?going? are tagged as
verbs, but may be translated as function words.
To address this, frequent content words were
heuristically filtered using source-language IDF
(inverse-document frequency) over the QA cor-
pus. The cut-off was tuned on a development set.
This algorithm is a lightweight, language-
independent and MT-system-independent way
to find errors in MT. The only requirement is
that the MT system produce word or phrase
alignments. This algorithm generalizes Ma and
McKeown (2009) in several ways. First, it
detects any deleted content words, rather than
just verbs. The previous work only addresses
complete deletions, where the deleted token has
a null alignment, whereas this approach finds
cases where content words are mistranslated as
non-content words. Finally, this error detection
algorithm is more fine-grained, since it is at the
word level rather than the phrase level.
4.3 Additional Error Detection Heuristics
For the CLQA task, we extended our MT er-
ror detection algorithm to handle two additional
types of MT errors, OOV words and NE mis-
translations, and to rank the errors. The pro-
duction MT system was explicitly set to not
delete OOV words, so they were easy to detect
as source-language words left in the target lan-
guage. The CLIR system was used to find occur-
rences of query NEs in the corpus, and then word
alignments were used to extract the correspond-
ing translations. If the translations were not a
fuzzy match to the query, then it was flagged as
a possible NE translation error. For instance,
in a query about al-Rishawi, the CLIR would
return Arabic-language matches to the Arabic
word Alry$Awy. If the aligned English trans-
lation was al-Ryshoui instead of al-Rishawi, it
would be flagged as an error.
Even if the retranslation corrects the errors
in MT, if the sentences are not relevant, they
will have no impact on CLQA. To account for
relevance, we implemented a bilingual bag-of-
words matching model, and ranked sentences
with more keyword matches to the query higher.
Sentences with the same estimated relevance
were further sorted by potential impact of the
MT error on the task. Errors affecting NEs (ei-
ther via source-language POS tagging or source-
language NE recognition) were ranked highest,
since our particular CLQA task is focused on
NEs. The final output of the algorithm is a list of
sentences with MT errors, ranked by relevance
to the query and importance of the error.
949
5 Experimental Setup
We begin by describing the MT systems, which
motivate the need for time-constrained MT. Then
we describe the CLQA task and the baseline
CLQA system, and finally how the error detec-
tion algorithm is used by the CLQA system.
5.1 MT Systems
Both the research and production MT systems
used in our evaluation were based on Direct
Translation Model 2 (Ittycheriah and Roukos,
2007), which uses a maximum entropy approach
to extract minimal translation blocks (one-to-
M phrases with optional variable slots) and
train system parameters over a large number of
source- and target-language features. The re-
search system incorporates many additional syn-
tactic features and does a deeper (and slower)
beam search, both of which cause it to be much
slower than the production system. In addition,
the research MT system filters the training data
to match the test data, as is customary in MT
evaluations, whereas the production system must
be able to handle a wide range of input data. Part
of the reason for the slower running time is that
the research system has to retrain; the advan-
tage is that more test-specific training data can
be used to tailor the MT system to the input.
Overall, the research MT system performs 4
BLEU points better than the production MT sys-
tem on a standard MT evaluation test corpus, but
at a great cost: the production MT handles 5,000
words per minute, while the research MT system
handles 2 words per minute. Using 50 machines,
the production MT system could translate the
corpus in under 2 hours, whereas the research
MT system would take 170 days. This vast dif-
ference succinctly captures the motivation be-
hind the time-constrained retranslation step.
5.2 CLQA Task
The CLQA task was designed for the DARPA
GALE (Global Autonomous Language Exploita-
tion) project. The questions found are open-
ended, non-factoid information needs. There are
22 question types, and each type has its own
relevance guidelines. For instance, one type is
?Describe the election campaign of [PERSON],?
and a question could be about Barack Obama.
Queries are in English, the corpus is in Arabic,
and the system must output comprehensible En-
glish sentences that are relevant to the question.
The Arabic corpus was created for the eval-
uation and consists of four genres: formal text
(72,677 documents), informal text (47,202 doc-
uments), formal speech (50 hours), and informal
speech (80 hours). The speech data was story
segmented and run through a speech recogni-
tion system before translation. We used 31 text
queries developed by the Linguistic Data Con-
sortium (LDC), and 39 speech queries developed
by other researchers working on the CLQA task.
5.3 CLQA System
The baseline CLQA system translates the full
corpus offline before running further processing
on the translated sentences (parsing, NE recog-
nition, information extraction, etc.) and index-
ing the corpus. At query-time, CLIR (imple-
mented with Apache Lucene) returns documents
relevant to the query, and the CLQA answer ex-
traction system is run over the translated doc-
uments. The answer extraction system relies
on target-language annotations, but any MT er-
rors will propagate to target-language process-
ing, and therefore affect answer extraction.
5.4 CLQA System with MT Error
Detection
The error detection and retranslation module was
added to the baseline system after CLIR, but be-
fore answer extraction. The inputs to the de-
tection algorithm are the query and a list of
ranked documents returned by CLIR. The detec-
tion algorithm has access to the indexed (bilin-
gual) corpus, source- and target-language anno-
tations (POS tagging and NE recognition), and
MT word alignments. The error detection algo-
rithm has two stages: first it runs over sentences
in documents related to the query, and after it
finds 2k sentences with errors (or exhausts the
document list), it reranks the errors as described
in section 4.3 and retranslates the top k=25 sen-
tences. Then the merged set of original and re-
translated relevant sentences are passed to the
950
answer extraction module.
By doing retranslation before answer extrac-
tion, the algorithm has the potential to improve
precision and recall. An improved translation of
a relevant Arabic sentence is more likely to be
selected by the answer extraction system and in-
crease recall, as in Boschee et al (2010), where
answers were missed due to mistranslation. A
better translation of a relevant sentence is also
more likely to be perceived as relevant, as shown
by Ma and McKeown (2009).
6 Evaluation
Amazon Mechanical Turk (AMT) was used to
conduct a large-scale evaluation of the impact
of error detection and retranslation on relevance.
An intrinsic evaluation of the error detection was
run on a subset of the sentences, since it required
bilingual annotators.
6.1 Task-Based Evaluation
Each sentence was annotated in the production
MT version and the research MT version. The
annotators were first presented with template
relevance guidelines and an example question,
along with 3 ? 4 example sentences and expected
judgments. Then the actual question was pre-
sented to the annotator, along with 5 sentences
(all from a single MT system). For each sen-
tence, the annotators were first asked to judge
perceived adequacy and then relevance.
The perceived adequacy rating was loosely
based upon MT adequacy evaluations ? in other
words, annotators were told to ignore grammati-
cal errors and focus on perceived meaning. How-
ever, since there were no reference translations,
annotators were asked to rate how much of the
sentence they believed they understood by se-
lecting one of (All, More than half, About half,
# detected errors # detected errors
Genre per sentence per 1,000 tokens
Newswire 0.16 56
Broadcast 0.23 105
news
Broadcast 0.14 84
conversation
Table 2: Number of errors detected across differ-
ent genres.
Less than half, and None).
The relevance rating was based on the tem-
plate relevance guidelines, and annotators could
select one of (Relevant, Maybe relevant, Not rel-
evant, Can?t tell due to bad translation and Can?t
tell due to other reason).
6.2 Amazon Mechanical Turk (AMT)
The evaluation was run on AMT, which has been
extensively used in NLP and has been shown to
have high correlation with expert annotators on
many NLP tasks at a lower cost (Snow et al,
2008). It has also been used in MT evaluation
(Callison-Burch, 2009), though that evaluation
used reference translations.
For 70 queries, the top 25 ranked sentences
in both the production and research MT versions
were evaluated. Each sentence was judged for
both relevance and perceived adequacy by 5 an-
notators, for a total of 35,000 individual judg-
ments. As is standard, some of the judgments
were filtered due to noise by using the percent
of time that an annotator disagreed with all other
annotators, and the relative time spent on a given
annotation. The percent of sentences with ma-
jority agreement was 91% for relevance and 72%
for perceived adequacy.
6.3 Intrinsic Evaluation
Annotators were presented with an Arabic sen-
tence with a single token highlighted, and asked
whether the token was a ?content word? or not.
Then annotators were asked to decide which of
two translations (in random order) translated the
highlighted Arabic word best, or whether they
were equal. In total, 150 sentences were judged
by annotators with knowledge of Arabic. For
both questions, kappa agreement was moderate.
7 Results
Table 2 shows how many errors were found
by the error detection algorithm for each genre.
Not surprisingly, more errors are detected in the
speech genres (84 and 105 errors per 1,000 to-
kens) than in formal text (56 errors per 1,000
tokens). We attribute the large difference be-
tween broadcast news and broadcast conversa-
951
Perceiv
ed Adeq
uacy R
es.MT Prod. M
T
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
Rank
Relevan
ce
Prod. M
T
Rank
Figure 1: Average normalized cumulative sen-
tence perceived adequacy and relevance versus
rank of the sentence, by the ranking heuristic.
tion to the large number of short sentences with-
out content words in informal speech (such as
?hello?, ?thank you?, etc.).
7.1 Perceived MT Adequacy
The research MT significantly outperformed the
production MT in perceived adequacy (accord-
ing to ANOVA with p=0.001). Of the production
MT translations, 58% were considered ?more
than half? or ?all? understandable, whereas 69%
of the research MT were. Overall, retranslation
increased perceived adequacy in 17% of the sen-
tences, and decreased it in only 5% of sentences.
7.2 Ranking Algorithm
Figure 1 show the average cumulative sentence
relevance and perceived adequacy, as ranked by
the error detection algorithm. In other words, at
each rank i, the average relevance (or perceived
adequacy) of sentences (1 ? i) was calculated.
On the perceived adequacy chart, the research
MT system consistently outperforms the produc-
tion MT system by a statistically significant mar-
gin. For relevance, the research MT curve is only
marginally higher than the production MT curve.
The shape of the relevance curves shows that
ranking sentences by a simple bilingual bag-of-
words model did affect sentence relevance, since
sentences that are higher ranked have higher cu-
mulative average relevance. By ranking sen-
tences with a basic relevance model, we were
able to focus the scarce MT resources on sen-
Relevance
? Same ? No maj./
Don?t know
MT ? 20 201 9 56 17%
MT same 93 919 72 212 78%
MT ? 2 56 4 28 5%
7% 70% 5% 18%
Table 3: The relationship between changes in
perceived adequacy and changes in relevance.
tences that are most likely to help the CLQA
task. This underscores the importance of using
the task context to guide MT error detection, es-
pecially in the case of time-constrained MT.
7.3 CLQA Relevance
Annotators judged 14.5% of the production MT
sentences relevant. After retranslation, the over-
all number of sentences considered relevant in-
creased to 14.7%. Although the overall numbers
are similar, the relevance of many individual sen-
tences did change. Table 3 shows the results of
comparing annotations on the original MT with
annotations on the retranslated MT. Relevance
was classified as ? or ? by comparing the ma-
jority judgment of the production MT to the re-
search MT. Changes in MT were based on com-
paring the average rating of both versions, with
a tolerance of 1.0.
Of the sentences with better perceived MT,
7% increased in relevance, and 3% decreased in
relevance. When the retranslated sentence was
considered worse, there was a 2% increased in
relevance and a 4% decrease. In other words,
when retranslation had a positive effect, it more
often led to increased relevance. However, the
impact of retranslation was mixed, and none of
the changes was statistically significant.
7.4 Intrinsic Evaluation
While the extrinsic evaluation focused on the im-
pact on CLQA relevance, the goal of the intrinsic
evaluation was to measure the precision of the
error detection algorithm, and whether retransla-
tion addressed the detected errors.
Of the 82% of sentences where both judges
agreed, 89% of the detected errors were con-
sidered content words. All of the OOV tokens
were content words (except for one disagree-
952
ment). Surprisingly, for the errors involving con-
tent words, 60% of the time both systems were
judged the same with regard to the highlighted
error. The research system was better 39% of the
time, and the original was better only 1% of the
time (excluding 26% disagreements).
8 Discussion
The CLQA evaluation was based on three hy-
potheses:
? That we could detect errors in MT with high
precision.
? That retranslating errorful sentences with a
much better MT system would correct the
errors we detected.
? That correcting errors would cause some
sentences to become relevant which were
not previously relevant, as in (Ma and McK-
eown, 2009).
The intrinsic evaluation confirmed that we can
identify content word deletions in MT with high
precision, thus validating the first hypothesis.
However, detecting the errors and retranslat-
ing them did not lead to large improvements in
CLQA relevance ? the impact of increased per-
ceived adequacy on relevance was mixed and not
significant. The intrinsic evaluation explains this
negative result: even though the retranslated sen-
tences were judged significantly better, the re-
translation only corrected the detected error 39%
of the time. In other words, the better research
MT system was making many of the same mis-
takes as the production MT system, despite us-
ing syntactic features and a much deeper search
space during decoding. Since the second hypoth-
esis did not hold, we need to improve our error
correction algorithm before we can tell whether
the third hypothesis holds.
This result directly motivates the need for tar-
geted error correction of MT. Automatic MT
post-editing has been successfully used for se-
lecting determiners (Knight and Chander, 1994),
reinserting deleted verbs (Ma and McKeown,
2009), correcting NE translations (Parton et al,
2008), and lexical substitutions (Elming, 2006).
Since Arabic and English word order differ
significantly, straightforward re-insertion of the
deleted words is not sufficient for error correc-
tion, so we are currently working on more so-
phisticated post-editing techniques.
9 Conclusions
We presented a novel online algorithm for de-
tecting MT errors in the context of a question,
and a heuristic for ranking MT errors by their
potential impact on the CLQA task. The er-
ror detection algorithm focused on content word
deletion, which has previously been shown to be
a significant problem in SMT. The algorithm is
generally applicable to any MT system that pro-
duces word or phrase alignments for its output
and any language pair that can be POS-tagged,
and it is more fine-grained and covers more types
of errors than previous work. It was able to de-
tect errors in Arabic-English MT across multiple
text and speech genres, and the intrinsic evalu-
ation showed that the large majority of tokens
flagged as errors were indeed content words.
The large-scale CLQA evaluation confirmed
that the slower research MT system was signif-
icantly better than the production MT system.
Relevance judgments showed that the ranking
component was crucial for directing scarce MT
resources wisely, as the higher-ranked sentences
were most likely to be relevant to the query, and
therefore most likely to benefit the CLQA sys-
tem by being retranslated.
Although we correctly identified MT errors,
retranslating the sentences with the errors had a
negligible effect on CLQA relevance. This un-
expected result may be explained by the fact that
only 39% of the errors were actually corrected
by the research MT system, so re-translation was
not a good approach for error correction. We
are currently working on correcting content word
deletion in MT via post-editing.
Acknowledgments The authors are grateful to
Radu Florian, Salim Roukos, Vittorio Castelli,
Dan Bikel and the whole GALE IBM team for
providing the experimental testbed, including the
CLQA and MT systems. This research was par-
tially supported by DARPA grant HR0011-08-C-
0110.
953
References
Boschee, Elizabeth, Marjorie Freedman, Roger
Bock, John Graettinger, and Ralph Weischedel.
2010. Error analysis and future directions for dis-
tillation. In GALE book (in preparation).
Buckwalter, Tim. 2002. Buckwalter arabic mor-
phological analyzer. Linguistic Data Consortium.
(LDC2002L49).
Callison-Burch, Chris. 2009. Fast, cheap, and cre-
ative: evaluating translation quality using ama-
zon?s mechanical turk. In EMNLP ?09, pages 286?
295, Morristown, NJ, USA. Association for Com-
putational Linguistics.
Daume?, III, Hal and Daniel Marcu. 2006. Bayesian
query-focused summarization. In ACL, pages
305?312, Morristown, NJ, USA. Association for
Computational Linguistics.
Elming, Jakob. 2006. Transformation-based correc-
tions of rule-based mt. In EAMT-2006: 11th An-
nual Conference of the European Association for
Machine Translation, pages 219?226.
Hermjakob, Ulf, Kevin Knight, and Hal Daume? III.
2008. Name translation in statistical machine
translation - learning when to transliterate. In
Proceedings of ACL-08: HLT, pages 389?397,
Columbus, Ohio, June. Association for Computa-
tional Linguistics.
Ittycheriah, Abraham and Salim Roukos. 2007. Di-
rect translation model 2. In Sidner, Candace L.,
Tanja Schultz, Matthew Stone, and ChengXiang
Zhai, editors, HLT-NAACL, pages 57?64. The As-
sociation for Computational Linguistics.
Ji, Heng and Ralph Grishman. 2007. Collaborative
entity extraction and translation. In International
Conference on Recent Advances in Natural Lan-
guage Processing.
Kirchhoff, Katrin, Owen Rambow, Nizar Habash,
and Mona. Diab. 2007. Semi-automatic error
analysis for large-scale statistical machine trans-
lation systems. In Proceedings of the Machine
Translation Summit IX (MT-Summit IX).
Knight, Kevin and Ishwar Chander. 1994. Auto-
mated postediting of documents. In AAAI, pages
779?784.
Li, Chi-Ho, Dongdong Zhang, Mu Li, Ming Zhou,
and Hailei Zhang. 2008. An empirical study
in source word deletion for phrase-based statisti-
cal machine translation. In StatMT ?08: Proceed-
ings of the Third Workshop on Statistical Machine
Translation, pages 1?8, Morristown, NJ, USA. As-
sociation for Computational Linguistics.
Ma, Wei-Yun and Kathleen McKeown. 2009.
Where?s the verb?: correcting machine transla-
tion during question answering. In ACL-IJCNLP
?09: Proceedings of the ACL-IJCNLP 2009 Con-
ference Short Papers, pages 333?336, Morristown,
NJ, USA. Association for Computational Linguis-
tics.
Menezes, Arul and Chris Quirk. 2008. Syntactic
models for structural word insertion and deletion.
In EMNLP ?08, pages 735?744, Morristown, NJ,
USA. Association for Computational Linguistics.
Papineni, Kishore, Salim Roukos, Todd Ward, and
Wei jing Zhu. 2002. Bleu: a method for automatic
evaluation of machine translation. In ACL, pages
311?318.
Parton, Kristen, Kathleen R. McKeown, James Al-
lan, and Enrique Henestroza. 2008. Simultane-
ous multilingual search for translingual informa-
tion retrieval. In CIKM 08, pages 719?728, New
York, NY, USA. ACM.
Parton, Kristen, Kathleen R. McKeown, Bob Coyne,
Mona T. Diab, Ralph Grishman, Dilek Hakkani-
Tu?r, Mary Harper, Heng Ji, Wei Yun Ma, Adam
Meyers, Sara Stolbach, Ang Sun, Gokhan Tur, Wei
Xu, and Sibel Yaman. 2009. Who, what, when,
where, why?: comparing multiple approaches to
the cross-lingual 5w task. In ACL-IJCNLP ?09,
pages 423?431, Morristown, NJ, USA. Associa-
tion for Computational Linguistics.
Snow, Rion, Brendan O?Connor, Daniel Jurafsky, and
Andrew Y. Ng. 2008. Cheap and fast?but is it
good?: evaluating non-expert annotations for nat-
ural language tasks. In EMNLP ?08, pages 254?
263, Morristown, NJ, USA. Association for Com-
putational Linguistics.
Vilar, David, Jia Xu, Luis Fernando D?Haro, and Her-
mann Ney. 2006. Error analysis of machine trans-
lation output. In International Conference on Lan-
guage Resources and Evaluation, pages 697?702,
Genoa, Italy, May.
Zhang, Yuqi, Evgeny Matusov, and Hermann Ney.
2009. Are unaligned words important for machine
translation ? In Conference of the European Asso-
ciation for Machine Translation, pages 226?233,
Barcelona, March.
954
Proceedings of the 6th Workshop on Statistical Machine Translation, pages 108?115,
Edinburgh, Scotland, UK, July 30?31, 2011. c?2011 Association for Computational Linguistics
E-rating Machine Translation
Kristen Parton1 Joel Tetreault2 Nitin Madnani2 Martin Chodorow3
1Columbia University, NY, USA
kristen@cs.columbia.edu
2Educational Testing Service, Princeton, NJ, USA
{jtetreault, nmadnani}@ets.org
3Hunter College of CUNY, New York, NY, USA
martin.chodorow@hunter.cuny.edu
Abstract
We describe our submissions to the WMT11
shared MT evaluation task: MTeRater and
MTeRater-Plus. Both are machine-learned
metrics that use features from e-rater R?, an au-
tomated essay scoring engine designed to as-
sess writing proficiency. Despite using only
features from e-rater and without comparing
to translations, MTeRater achieves a sentence-
level correlation with human rankings equiva-
lent to BLEU. Since MTeRater only assesses
fluency, we build a meta-metric, MTeRater-
Plus, that incorporates adequacy by combin-
ing MTeRater with other MT evaluation met-
rics and heuristics. This meta-metric has a
higher correlation with human rankings than
either MTeRater or individual MT metrics
alone. However, we also find that e-rater fea-
tures may not have significant impact on cor-
relation in every case.
1 Introduction
The evaluation of machine translation (MT) systems
has received significant interest over the last decade
primarily because of the concurrent rising interest in
statistical machine translation. The majority of re-
search on evaluating translation quality has focused
on metrics that compare translation hypotheses to a
set of human-authored reference translations. How-
ever, there has also been some work on methods that
are not dependent on human-authored translations.
One subset of such methods is task-based in that
the methods determine the quality of a translation in
terms of how well it serves the need of an extrin-
sic task. These tasks can either be downstream NLP
tasks such as information extraction (Parton et al,
2009) and information retrieval (Fujii et al, 2009) or
human tasks such as answering questions on a read-
ing comprehension test (Jones et al, 2007).
Besides extrinsic evaluation, there is another set
of methods that attempt to ?learn? what makes a
good translation and then predict the quality of new
translations without comparing to reference trans-
lations. Corston-Oliver et al (2001) proposed the
idea of building a decision tree classifier to sim-
ply distinguish between machine and human transla-
tions using language model (LM) and syntactic fea-
tures. Kulesza and Shieber (2004) attempt the same
task using an support vector machine (SVM) classi-
fier and features derived from reference-based MT
metrics such as WER, PER, BLEU and NIST. They
also claim that the confidence score for the classi-
fier being used, if available, may be taken as an es-
timate of translation quality. Quirk (2004) took a
different approach and examined whether it is pos-
sible to explicitly compute a confidence measure for
each translated sentence by using features derived
from both the source and target language sides. Al-
brecht and Hwa (2007a) expanded on this idea and
conducted a larger scale study to show the viabil-
ity of regression as a sentence-level metric of MT
quality. They used features derived from several
other reference-driven MT metrics. In other work
(Albrecht and Hwa, 2007b), they showed that one
could substitute translations from other MT systems
for human-authored reference translations and de-
rive the regression features from them.
Gamon et al (2005) build a classifier to distin-
guish machine-generated translations from human
108
ones using fluency-based features and show that by
combining the scores of this classifier with LM per-
plexities, they obtain an MT metric that has good
correlation with human judgments but not better
than the baseline BLEU metric.
The fundamental questions that inspired our pro-
posed metrics are as follows:
? Can an operational English-proficiency mea-
surement system, built with absolutely no fore-
thought of using it for evaluation of translation
quality, actually be used for this purpose?
? Obviously, such a system can only assess the
fluency of a translation hypothesis and not the
adequacy. Can the features derived from this
system then be combined with metrics such
as BLEU, METEOR or TERp?measures of
adequacy?to yield a metric that performs bet-
ter?
The first metric we propose (MTeRater) is an
SVM ranking model that uses features derived from
the ETS e-rater R? system to assess fluency of trans-
lation hypotheses. Our second metric (MTeRater-
Plus) is a meta-metric that combines MTeRater fea-
tures with metrics such as BLEU, METEOR and
TERp as well as features inspired by other MT met-
rics.
Although our work is intimately related to some
of the work cited above in that it is a trained regres-
sion model predicting translation quality at the sen-
tence level, there are two important differences:
1. We do not use any human translations ? ref-
erence or otherwise ? for MTeRater, not even
when training the metric. The classifier is
trained using human judgments of translation
quality provided as part of the shared evalua-
tion task.
2. Most of the previous approaches use feature
sets that are designed to capture both transla-
tion adequacy and fluency. However, MTeRater
uses only fluency-based features.
The next section provides some background on
the e-rater system. Section 3 presents a discussion
of the differences between MT errors and learner er-
rors. Section 4 describes how we use e-rater to build
our metrics. Section 5 outlines our experiments and
Section 5 discusses the results of these experiments.
Finally, we conclude in Section 6.
2 E-rater
E-rater is a proprietary automated essay scoring
system developed by Educational Testing Service
(ETS) to assess writing quality.1 The system has
been used operationally for over 10 years in high-
stakes exams such as the GRE and TOEFL given
its speed, reliability and high agreement with human
raters.
E-rater combines 8 main features using linear re-
gression to produce a numerical score for an es-
say. These features are grammar, usage, mechan-
ics, style, organization, development, lexical com-
plexity and vocabulary usage. The grammar feature
covers errors such as sentence fragments, verb form
errors and pronoun errors (Chodorow and Leacock,
2000). The usage feature detects errors related to
articles (Han et al, 2006), prepositions (Tetreault
and Chodorow, 2008) and collocations (Futagi et al,
2008). The mechanics feature checks for spelling,
punctuation and capitalization errors. The style fea-
ture checks for passive constructions and word rep-
etition, among others. Organization and develop-
ment tabulate the presence or absence of discourse
elements and the length of each element. Finally,
the lexical complexity feature details how complex
the writer?s words are based on frequency indices
and writing scales, and the vocabulary feature eval-
uates how appropriate the words are for the given
topic). Since many of the features are essay-specific,
there is certainly some mismatch between what e-
rater was intended for and the genres we are using it
for in this experiment (translated news articles).
In our work, we separate e-rater features into two
classes: sentence level and document level. The
sentence level features consist of all errors marked
by the various features for each sentence alone. In
contrast, the document level features are an aggre-
gation of the sentence level features for the entire
document.
1A detailed description of e-rater is outside the scope of this
paper and the reader is referred to (Attali and Burstein, 2006).
109
3 Learner Errors vs. MT Errors
Since e-rater is trained on human-written text and
designed to look for errors in usage that are com-
mon to humans, one research question is whether it
is even useful for assessing the fluency of machine
translated text. E-rater is unaware of the transla-
tion context, so it does not look for common MT
errors, such as untranslated words, mistranslations
and deleted content words. However, these may get
flagged as other types of learner errors: spelling mis-
takes, confused words, and sentence fragments.
Machine translations do contain learner-like mis-
takes in verb conjugations and word order. In an
error analysis of SMT output, Vilar et al (2006) re-
port that 9.9% - 11.7% of errors made by a Spanish-
English SMT system were incorrect word forms, in-
cluding incorrect tense, person or number. These
error types are also account for roughly 14% of er-
rors made by ESL (English as a Second Language)
writers in the Cambridge Learner Corpus (Leacock
et al, 2010).
On the other hand, some learner mistakes are un-
likely to be made by MT systems. The Spanish-
English SMT system made almost no mistakes in
idioms (Vilar et al, 2006). Idiomatic expressions
are strongly preferred by language models, but may
be difficult for learners to memorize (?kicked a
bucket?). Preposition usage is a common problem
in non-native English text, accounting for 29% of
errors made by intermediate to advanced ESL stu-
dents (Bitchener et al, 2005) but language models
are less likely to prefer local preposition errors e.g.,
?he went to outside?. On the other hand, a language
model will likely not prevent errors in prepositions
(or in other error types) that rely on long-distance
dependencies.
4 E-rating Machine Translation
The MTeRater metric uses only features from e-rater
to score translations. The features are produced di-
rectly from the MT output, with no comparison to
reference translations, unlike most MT evaluation
metrics (such as BLEU, TERp and METEOR).
An obvious deficit of MTeRater is a measure of
adequacy, or how much meaning in the source sen-
tence is expressed in the translation. E-rater was
not developed for assessing translations, and the
MTeRater metric never compares the translation to
the source sentence. To remedy this, we propose
the MTeRater-Plus meta-metric that uses e-rater fea-
tures plus all of the hybrid features described below.
Both metrics were trained on the same data using
the same machine learning model, and differ only in
their feature sets.
4.1 E-rater Features
Each sentence is associated with an e-rater sentence-
level vector and a document-level vector as previ-
ously described and each column in these vectors
was used a feature.
4.2 Features for Hybrid Models
We used existing automatic MT metrics as baselines
in our evaluation, and also as features in our hybrid
metric. The metrics we used were:
1. BLEU (Papineni et al, 2002): Case-insensitive
and case-sensitive BLEU scores were pro-
duced using mteval-v13a.pl, which calculates
smoothed sentence-level scores.
2. TERp (Snover et al, 2009): Translation Edit
Rate plus (TERp) scores were produced using
terp v1. The scores were case-insensitive and
edit costs from Snover et al (2009) were used
to produce scores tuned for fluency and ade-
quacy.
3. METEOR (Lavie and Denkowski, 2009): Me-
teor scores were produced using Meteor-next
v1.2. All types of matches were allowed (ex-
act, stem, synonym and paraphrase) and scores
tuned specifically to rank, HTER and adequacy
were produced using the ?-t? flag in the tool.
We also implemented features closely related to
or inspired by other MT metrics. The set of these
auxiliary features is referred to as ?Aux?.
1. Character-level statistics: Based on the suc-
cess of the i-letter-BLEU and i-letter-recall
metrics from WMT10 (Callison-Burch et al,
2010), we added the harmonic mean of preci-
sion (or recall) for character n-grams (from 1
to 10) as features.
110
2. Raw n-gram matches: We calculated the pre-
cision and precision for word n-grams (up to
n=6) and added each as a separate feature (for
a total of 12). Although these statistics are also
calculated as part of the MT metrics above,
breaking them into separate features gives the
model more information.
3. Length ratios: The ratio between the lengths
of the MT output and the reference translation
was calculated on a character level and a word
level. These ratios were also calculated be-
tween the MT output and the source sentence.
4. OOV heuristic: The percentage of tokens in
the MT that match the source sentence. This
is a low-precision heuristic for counting out of
vocabulary (OOV) words, since it also counts
named entities and words that happen to be the
same in different languages.
4.3 Ranking Model
Following (Duh, 2008), we represent sentence-level
MT evaluation as a ranking problem. For a partic-
ular source sentence, there are N machine transla-
tions and one reference translation. A feature vector
is extracted from each {source, reference, MT} tu-
ple. The training data consists of sets of translations
that have been annotated with relative ranks. Dur-
ing training, all ranked sets are converted to sets of
feature vectors, where the label for each feature vec-
tor is the rank. The ranking model is a linear SVM
that predicts a relative score for each feature vector,
and is implemented by SVM-rank (Joachims, 2006).
When the trained classifier is applied to a set of N
translations for a new source sentence, the transla-
tions can then be ranked by sorting the SVM scores.
5 Experiments
All experiments were run using data from three
years of previous WMT shared tasks (WMT08,
WMT09 and WMT10). In these evaluations, anno-
tators were asked to rank 3-5 translation hypothe-
ses (with ties allowed), given a source sentence and
a reference translation, although they were only re-
quired to be fluent in the target language.
Since e-rater was developed to rate English sen-
tences only, we only evaluated tasks with English
as the target language. All years included source
languages French, Spanish, German and Czech.
WMT08 and WMT09 also included Hungarian and
multisource English. The number of MT systems
was different for each language pair and year, from
as few as 2 systems (WMT08 Hungarian-English) to
as many as 25 systems (WMT10 German-English).
All years had a newswire testset, which was divided
into stories. WMT08 had testsets in two additional
genres, which were not split into documents.
All translations were pre-processed and run
through e-rater. Each document was treated as an es-
say, although news articles are generally longer than
essays. Testsets that were not already divided into
documents were split into pseudo-documents of 20
contiguous sentences or less. Missing end of sen-
tence markers were added so that e-rater would not
merge neighboring sentences.
6 Results
For assessing our metrics prior to WMT11, we
trained on WMT08 and WMT09 and tested on
WMT10. The metrics we submitted to WMT11
were trained on all three years. One criticism of
machine-learned evaluation metrics is that they may
be too closely tuned to a few MT systems, and thus
not generalize well as MT systems evolve or when
judging new sets of systems. In this experiment,
WMT08 has 59 MT systems, WMT09 has 70 dif-
ferent MT systems, and WMT10 has 75 different
systems. Different systems participate each year,
and those that participate for multiple years often
improve from year to year. By training and test-
ing across years rather than within years, we hope
to avoid overfitting.
To evaluate, we measure correlation between each
metric and the human annotated rankings according
to (Callison-Burch et al, 2010): Kendall?s tau is cal-
culated for each language pair and the results are
averaged across language pairs. This is preferable
to averaging across all judgments because the num-
ber of systems and the number of judgments vary
based on the language pair (e.g., there were 7,911
ranked pairs for 14 Spanish-English systems, and
3,575 ranked pairs for 12 Czech-English systems).
It is difficult to calculate the statistical signifi-
cance of Kendall?s tau on these data. Unlike the
111
Source language cz de es fr avg
Individual Metrics & Baselines
MTeRater .32 .31 .19 .23 .26
bleu-case .26 .27 .28 .22 .26
meteor-rank .33 .36 .33 .27 .32
TERp-fluency .30 .36 .28 .28 .30
Meta-Metric & Baseline
BMT+Aux+MTeRater .38 .42 .37 .38 .39
BMT .35 .40 .35 .34 .36
Additional Meta-Metrics
BMT+LM .36 .41 .36 .36 .37
BMT+MTeRater .38 .42 .36 .38 .38
BMT+Aux .38 .41 .38 .37 .39
BMT+Aux+LM .39 .42 .38 .36 .39
Table 1: Kendall?s tau correlation with human rankings.
BMT includes bleu, meteor and TERp; Aux includes aux-
iliary features. BMT+Aux+MTeRater is MTeRater-Plus.
Metrics MATR annotations (Przybocki et al, 2009),
(Peterson and Przybocki, 2010), the WMT judg-
ments do not give a full ranking over all systems for
all judged sentences. Furthermore, the 95% confi-
dence intervals of Kendall?s tau are known to be very
large (Carterette, 2009) ? in Metrics MATR 2010,
the top 7 metrics in the paired-preference single-
reference into-English track were within the same
confidence interval.
To compare metrics, we use McNemar?s test
of paired proportions (Siegel and Castellan, 1988)
which is more powerful than tests of independent
proportions, such as the chi-square test for indepen-
dent samples.2 As in Kendall?s tau, each metric?s
relative ranking of a translation pair is compared to
that of a human. Two metrics, A and B, are com-
pared by counting the number of times both A and B
agree with the human ranking, the number of times
A disagrees but B agrees, the number of times A
agrees but B disagrees, and the number of times both
A and B disagree. These counts can be arranged in
a 2 x 2 contingency table as shown below.
A agrees A disagrees
B agrees a b
B disagrees c d
McNemar?s test determines if the cases of mis-
match in agreement between the metrics (cells b and
c) are symmetric or if there is a significant difference
2See http://faculty.vassar.edu/lowry/propcorr.html for an ex-
cellent description.
in favor of one of the metrics showing more agree-
ment with the human than the other. The two-tailed
probability for McNemar?s test can be calculated us-
ing the binomial distribution over cells b and c.
6.1 Reference-Free Evaluation with MTeRater
The first group of rows in Table 1 shows the
Kendall?s tau correlation with human rankings of
MTeRater and the best-performing version of the
three standard MT metrics. Even though MTeR-
ater is blind to the MT context and does not use the
source or references at all, MTeRater?s correlation
with human judgments is the same as case-sensitive
bleu (bleu-case). This indicates that a metric trained
to assess English proficiency in non-native speakers
is applicable to machine translated text.
6.2 Meta-Metrics
The second group in Table 1 shows the cor-
relations of our second metric, MTeRater-Plus
(BMT+Aux+MTeRater), and a baseline meta-metric
(BMT) that combined BLEU, METEOR and TERp.
MTeRater-Plus performs significantly better than
BMT, according to McNemar?s test.
We also wanted to determine whether the e-
rater features have any significant impact when used
as part of meta-metrics. To this end, we first
created two variants of MTeRater-Plus: one that
removed the MTeRater features (BMT+Aux) and
another that replaced the MTeRater features with
the LM likelihood and perplexity of the sentence
(BMT+Aux+LM).3 Both models perform as well
as MTeRater-Plus, i.e., adding additional fluency
features (either LM scores or MTeRater) to the
BMT+Aux meta-metric has no significant impact.
To determine whether this was generally the case,
we also created two variants of the BMT baseline
meta-metric that added fluency features to it: one in
the form of LM scores (BMT+LM) and another in
the form of the MTeRater score (BMT+MTeRater).
Based on McNemar?s test, both models are sig-
nificantly better than BMT, indicating that these
reference-free fluency features indeed capture an as-
pect of translation quality that is absent from the
standard MT metrics. However, there is no signfi-
cant difference between the two variants of BMT.
3The LM was trained on English Gigaword 3.0, and was
provided by WMT10 organizers.
112
1) Ref: Gordon Brown has discovered yet another hole to fall into; his way out of it remains the same
MT+: Gordon Brown discovered a new hole in which to sink; even if it resigned, the position would not change.
Errors: None marked
MT-: Gordon Brown has discovered a new hole in which could, Even if it demissionnait, the situation does not change not.
Errors: Double negative, spelling, preposition
2) Ref: Jancura announced this in the Twenty Minutes programme on Radiozurnal.
MT+: Jancura said in twenty minutes Radiozurnal. Errors: Spelling
MT-: He said that in twenty minutes. Errors: none marked
Table 2: Translation pairs ranked correctly by MTeRater but not bleu-case (1) and vice versa (2).
6.3 Discussion
Table 2 shows two pairs of ranked translations (MT+
is better than MT-), along with some of the errors de-
tected by e-rater. In pair 1, the lower-ranked trans-
lation has major problems in fluency as detected by
e-rater, but due to n-gram overlap with the reference,
bleu-case ranks it higher. In pair 2, MT- is more
fluent but missing two named entities and bleu-case
correctly ranks it lower.
One disadvantage of machine-learned metrics is
that it is not always clear which features caused one
translation to be ranked higher than another. We
did a feature ablation study for MTeRater which
showed that document-level collocation features sig-
nificantly improve the metric, as do features for
sentence-level preposition errors. Discourse-level
features were harmful to MT evaluation. This is un-
surprising, since MT sentences are judged one at a
time, so any discourse context is lost.
Overall, a metric with only document-level fea-
tures does better than one with only sentence-level
features due to data sparsity ? many sentences have
no errors, and we conjecture that the document-level
features are a proxy for the quality of the MT sys-
tem. Combining both document-level and sentence-
level e-rater features does significantly better than
either alone. Incorporating document-level features
into sentence-level evaluation had one unforeseen
effect: two identical translations can get different
scores depending on how the rest of the document
is translated. While using features that indicate the
relative quality of MT systems can improve overall
correlation, it fails when the sentence-level signal is
not strong enough to overcome the prior belief.
7 Conclusion
We described our submissions to the WMT11 shared
evaluation task: MTeRater and MTeRater-Plus.
MTeRater is a fluency-based metric that uses fea-
tures from ETS?s operational English-proficiency
measurement system (e-rater) to predict the qual-
ity of any translated sentence. MTeRater-Plus is a
meta-metric that combines MTeRater?s fluency-only
features with standard MT evaluation metrics and
heuristics. Both metrics are machine-learned mod-
els trained to rank new translations based on existing
human judgments of translation.
Our experiments showed that MTeRater, by it-
self, achieves a sentence-level correlation as high as
BLEU, despite not using reference translations. In
addition, the meta-metric MTeRater-Plus achieves
higher correlations than MTeRater, BLEU, ME-
TEOR, TERp as well as a baseline meta-metric com-
bining BLEU, METEOR and TERp (BMT). How-
ever, further analysis showed that the MTeRater
component of MTeRater-Plus does not contribute
significantly to this improved correlation. How-
ever, when added to the BMT baseline meta-metric,
MTeRater does make a significant contribution.
Our results, despite being a mixed bag, clearly
show that a system trained to assess English-
language proficiency can be useful in providing an
indication of translation fluency even outside of the
specific WMT11 evaluation task. We hope that this
work will spur further cross-pollination between the
fields of MT evaluation and grammatical error de-
tection. For example, we would like to explore using
MTeRater for confidence estimation in cases where
reference translations are unavailable, such as task-
oriented MT.
Acknowledgments
The authors wish to thank Slava Andreyev at ETS
for his help in running e-rater. This research was
supported by an NSF Graduate Research Fellowship
for the first author.
113
References
Joshua Albrecht and Rebecca Hwa. 2007a. A Re-
examination of Machine Learning Approaches for
Sentence-Level MT Evaluation. In Proceedings of
ACL.
Joshua Albrecht and Rebecca Hwa. 2007b. Regression
for Sentence-Level MT Evaluation with Pseudo Refer-
ences. In Proceedings of ACL.
Yigal Attali and Jill Burstein. 2006. Automated es-
say scoring with e-rater v.2.0. Journal of Technology,
Learning, and Assessment, 4(3).
John Bitchener, Stuart Young, and Denise Cameron.
2005. The effect of different types of corrective feed-
back on esl student writing. Journal of Second Lan-
guage Writing.
Chris Callison-Burch, Philipp Koehn, Christof Monz,
Kay Peterson, Mark Przybocki, and Omar F. Zaidan.
2010. Findings of the 2010 joint workshop on sta-
tistical machine translation and metrics for machine
translation. In Proceedings of the Joint Fifth Workshop
on Statistical Machine Translation and MetricsMATR,
WMT ?10, pages 17?53, Stroudsburg, PA, USA. As-
sociation for Computational Linguistics.
Ben Carterette. 2009. On rank correlation and the
distance between rankings. In Proceedings of the
32nd international ACM SIGIR conference on Re-
search and development in information retrieval, SI-
GIR ?09, pages 436?443, New York, NY, USA. ACM.
Martin Chodorow and Claudia Leacock. 2000. An unsu-
pervised method for detecting grammatical errors. In
Proceedings of the Conference of the North American
Chapter of the Association of Computational Linguis-
tics (NAACL), pages 140?147.
Simon Corston-Oliver, Michael Gamon, and Chris
Brockett. 2001. A Machine Learning Approach to
the Automatic Evaluation of Machine Translation. In
Proceedings of the 39th Annual Meeting on Associa-
tion for Computational Linguistics, pages 148?155.
Kevin Duh. 2008. Ranking vs. regression in machine
translation evaluation. In Proceedings of the Third
Workshop on Statistical Machine Translation, StatMT
?08, pages 191?194, Stroudsburg, PA, USA. Associa-
tion for Computational Linguistics.
Atsushi Fujii, Masao Utiyama, Mikio Yamamoto, and
Takehito Utsuro. 2009. Evaluating Effects of Ma-
chine Translation Accuracy on Cross-lingual Patent
Retrieval. In Proceedings of SIGIR, pages 674?675.
Yoko Futagi, Paul Deane, Martin Chodorow, and Joel
Tetreault. 2008. A computational approach to de-
tecting collocation errors in the writing of non-native
speakers of English. Computer Assisted Language
Learning, 21:353?367.
Michael Gamon, Anthony Aue, and Martine Smets.
2005. Sentence-level MT Evaluation Without Refer-
ence Translations: Beyond Language Modeling. In
Proceedings of the European Association for Machine
Translation (EAMT).
Na-Rae Han, Martin Chodorow, and Claudia Leacock.
2006. Detecting errors in English article usage by
non-native speakers. Natural Language Engineering,
12(2):115?129.
Thorsten Joachims. 2006. Training linear SVMs in linear
time. In ACM SIGKDD International Conference On
Knowledge Discovery and Data Mining (KDD), pages
217?226.
Douglas Jones, Martha Herzog, Hussny Ibrahim, Arvind
Jairam, Wade Shen, Edward Gibson, and Michael
Emonts. 2007. ILR-Based MT Comprehension Test
with Multi-Level Questions. In HLT-NAACL (Short
Papers), pages 77?80.
Alex Kulesza and Stuart M. Shieber. 2004. A Learn-
ing Approach to Improving Sentence-level MT Evalu-
ation. In Proceedings of the 10th International Con-
ference on Theoretical and Methodological Issues in
Machine Translation (TMI).
Alon Lavie and Michael J. Denkowski. 2009. The me-
teor metric for automatic evaluation of machine trans-
lation. Machine Translation, 23:105?115, September.
Claudia Leacock, Martin Chodorow, Michael Gamon,
and Joel Tetreault. 2010. Automated Grammatical
Error Detection for Language Learners. Morgan &
Claypool Publishers.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of the
40th Annual Meeting on Association for Computa-
tional Linguistics, ACL ?02, pages 311?318, Strouds-
burg, PA, USA. Association for Computational Lin-
guistics.
Kristen Parton, Kathleen R. McKeown, Bob Coyne,
Mona T. Diab, Ralph Grishman, Dilek Hakkani-Tu?r,
Mary Harper, Heng Ji, Wei Yun Ma, Adam Meyers,
Sara Stolbach, Ang Sun, Gokhan Tur, Wei Xu, and
Sibel Yaman. 2009. Who, What, When, Where, Why?
Comparing Multiple Approaches to the Cross-Lingual
5W Task. In Proceedings of the Joint Conference of
the 47th Annual Meeting of the ACL and the 4th Inter-
national Joint Conference on Natural Language Pro-
cessing of the AFNLP, pages 423?431.
Kay Peterson and Mark Przybocki. 2010. Nist
2010 metrics for machine translation evalua-
tion (metricsmatr10) official release of results.
http://www.itl.nist.gov/iad/mig/
tests/metricsmatr/2010/results.
114
Mark Przybocki, Kay Peterson, Se?bastien Bronsart, and
Gregory Sanders. 2009. The nist 2008 metrics for ma-
chine translation challenge?overview, methodology,
metrics, and results. Machine Translation, 23:71?103,
September.
Christopher Quirk. 2004. Training a Sentence-level Ma-
chine Translation Confidence Measure. In Proceed-
ings of LREC.
Sidney Siegel and N. John Castellan. 1988. Nonpara-
metric statistics for the behavioral sciences. McGraw-
Hill, 2 edition.
Matthew Snover, Nitin Madnani, Bonnie J. Dorr, and
Richard Schwartz. 2009. Fluency, adequacy, or
hter?: exploring different human judgments with a tun-
able mt metric. In Proceedings of the Fourth Work-
shop on Statistical Machine Translation, StatMT ?09,
pages 259?268, Stroudsburg, PA, USA. Association
for Computational Linguistics.
Joel Tetreault and Martin Chodorow. 2008. The ups and
downs of preposition error detection in ESL writing.
In Proceedings of the 22nd International Conference
on Computational Linguistics (COLING), pages 865?
872.
David Vilar, Jia Xu, Luis Fernando D?Haro, and Her-
mann Ney. 2006. Error analysis of machine transla-
tion output. In International Conference on Language
Resources and Evaluation, pages 697?702, Genoa,
Italy, May.
115
