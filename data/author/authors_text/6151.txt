Proceedings of the ACL 2007 Demo and Poster Sessions, pages 209?212,
Prague, June 2007. c?2007 Association for Computational Linguistics
HunPos ? an open source trigram tagger
Pe?ter Hala?csy
Budapest U. of Technology
MOKK Media Research
H-1111 Budapest, Stoczek u 2
peter@halacsy.com
Andra?s Kornai
MetaCarta Inc.
350 Massachusetts Ave.
Cambridge MA 02139
andras@kornai.com
Csaba Oravecz
Hungarian Academy of Sciences
Institute of Linguistics
H-1068 Budapest, Benczur u. 33.
oravecz@nytud.hu
Abstract
In the world of non-proprietary NLP soft-
ware the standard, and perhaps the best,
HMM-based POS tagger is TnT (Brants,
2000). We argue here that some of the crit-
icism aimed at HMM performance on lan-
guages with rich morphology should more
properly be directed at TnT?s peculiar li-
cense, free but not open source, since it is
those details of the implementation which
are hidden from the user that hold the key
for improved POS tagging across a wider
variety of languages. We present HunPos1,
a free and open source (LGPL-licensed) al-
ternative, which can be tuned by the user to
fully utilize the potential of HMM architec-
tures, offering performance comparable to
more complex models, but preserving the
ease and speed of the training and tagging
process.
0 Introduction
Even without a formal survey it is clear that
TnT (Brants, 2000) is used widely in research
labs throughout the world: Google Scholar shows
over 400 citations. For research purposes TnT is
freely available, but only in executable form (closed
source). Its greatest advantage is its speed, impor-
tant both for a fast tuning cycle and when dealing
with large corpora, especially when the POS tag-
ger is but one component in a larger information re-
trieval, information extraction, or question answer-
1http://mokk.bme.hu/resources/hunpos/
ing system. Though taggers based on dependency
networks (Toutanova et al, 2003), SVM (Gime?nez
and Ma`rquez, 2003), MaxEnt (Ratnaparkhi, 1996),
CRF (Smith et al, 2005), and other methods may
reach slightly better results, their train/test cycle is
orders of magnitude longer.
A ubiquitous problem in HMM tagging originates
from the standard way of calculating lexical prob-
abilities by means of a lexicon generated during
training. In highly inflecting languages considerably
more unseen words will be present in the test data
than in more isolating languages, which largely ac-
counts for the drop in the performance of n-gram
taggers when moving away from English. To mit-
igate the effect one needs a morphological dictio-
nary (Hajic? et al, 2001) or a morphological analyzer
(Hakkani-Tu?r et al, 2000), but if the implementation
source is closed there is no handy way to incorporate
morphological knowledge in the tagger.
The paper is structured as follows. In Section 1
we present our own system, HunPos, while in Sec-
tion 2 we describe some of the implementation de-
tails of TnT that we believe influence the perfor-
mance of a HMM based tagging system. We eval-
uate the system and compare it to TnT on a variety
of tasks in Section 3. We don?t necessarily consider
HunPos to be significantly better than TnT, but we
argue that we could reach better results, and so could
others coming after us, because the system is open
to explore all kinds of fine-tuning strategies. Some
concluding remarks close the paper in Section 4.
209
1 Main features of HunPos
HunPos has been implemented in OCaml, a high-
level language which supports a succinct, well-
maintainable coding style. OCaml has a high-
performance native-code compiler (Doligez et al,
2004) that can produce a C library with the speed
of a C/C++ implementation.
On the whole HunPos is a straightforward trigram
system estimating the probabilities
argmax
t1...tT
P (tT+1|tT )
T
?
i=1
P (ti|ti?1, ti?2)P (wi|ti?1, ti)
for a given sequence of words w1 . . . wT (the addi-
tional tags t?1, t0, and tT+1 are for sentence bound-
ary markers). Notice that unlike traditional HMM
models, we estimate emission/lexicon probabilities
based on the current tag and the previous tag as well.
As we shall see in the next Section, using tag bi-
grams to condition the emissions can lead to as much
as 10% reduction in the error rate. (In fact, HunPos
can handle a context window of any size, but on the
limited training sets available to us increasing this
parameter beyond 2 gives no further improvement.)
As for contextualized lexical probabilities, our ex-
tension is very similar to Banko and Moore (2004)
who use P (wi|ti?1, ti, ti+1) lexical probabilities
and found, on the Penn Treebank, that ?incorporat-
ing more context into an HMM when estimating lex-
ical probabilities improved accuracy from 95.87% to
96.59%?. One difficulty with their approach, noted
by Banko and Moore (2004), is the treatment of un-
seen words: their method requires a full dictionary
that lists what tags are possible for each word. To
be sure, for isolating languages such information is
generally available from machine readable dictio-
naries which are often large enough to make the out
of vocabulary problem negligible. But in our situ-
ation this amounts to idealized morphological ana-
lyzers (MA) that have their stem list extended so as
to have no OOV on the test set.
The strong side of TnT is its suffix guessing algo-
rithm that is triggered by unseen words. From the
training set TnT builds a trie from the endings of
words appearing less than n times in the corpus, and
memorizes the tag distribution for each suffix.2 A
2The parameter n cannot be externally set ? it is docu-
mented as 10 but we believe it to be higher.
clear advantage of this approach is the probabilis-
tic weighting of each label, however, under default
settings the algorithm proposes a lot more possible
tags than a morphological analyzer would. To facil-
itate the use of MA, HunPos has hooks to work with
a morphological analyzer (lexicon), which might
still leave some OOV items. As we shall see in
Section 3, the key issue is that for unseen words
the HMM search space may be narrowed down to
the alternatives proposed by this module, which not
only speeds up search but also very significantly
improves precision. That is, for unseen words the
MA will generate the possible labels, to which the
weights are assigned by the suffix guessing algo-
rithm.
2 Inside TnT
Here we describe, following the lead of (Jurish,
2003), some non-trivial features of TnT sometimes
only hinted at in the user guide, but clearly evident
from its behavior on real and experimentally ad-
justed corpora. For the most part, these features are
clever hacks, and it is unfortunate that neither Brants
(2000) nor the standard HMM textbooks mention
them, especially as they often yield more signifi-
cant error reduction than the move from HMM to
other architectures. Naturally, these features are also
available in HunPos.
2.1 Cardinals
For the following regular expressions TnT learns the
tag distribution of the training corpus separately to
give more reliable estimates for open class items like
numbers unseen during training:
?[0-9]+$
?[0-9]+\.$
?[0-9.,:-]+[0-9]+$
?[0-9]+[a-zA-Z]{1,3}$
(The regexps are only inferred ? we haven?t at-
tempted to trace the execution.) After this, at test
time, if the word is not found in the lexicon (nu-
merals are added to the lexicon like all other items)
TnT checks whether the unseen word matches some
of the regexps, and uses the distribution learned for
this regexp to guess the tag.
210
2.2 Upper- and lowercase
The case of individual words may carry relevant in-
formation for tagging, so it is well worth preserving
the uppercase feature for items seen as such in train-
ing. For unseen words TnT builds two suffix tries:
if the word begins with uppercase one trie is used,
for lowercase words the other trie is applied. The
undocumented trick is to try to lookup the word in
sentence initial position from the training lexicon in
its lowercase variant, which contributes noticeably
to the better performance of the system.
3 Evaluation
English For the English evaluation we used the
WSJ data from Penn Treebank II. We extracted sen-
tences from the parse trees. We split data into train-
ing and test set in the standard way (Table 1).
Set Sect?ns Sent. Tokens Unseen
Train 0-18 38,219 912,344 0
Test 22-24 5,462 129,654 2.81%
Table 1: Data set splits used for English
As Table 2 shows HunPos achieves performance
comparable to TnT for English. The increase in the
emission order clearly improves this performance.
seen unseen overall
TnT 96.77% 85.91% 96.46%
HunPos 1 96.76% 86.90% 96.49%
HunPos 2 96.88% 86.13% 96.58%
Table 2: WSJ tagging accuracy, HunPos with first
and second order emission/lexicon probabilities
If we follow Banko and Moore (2004) and con-
struct a full (no OOV) morphological lexicon from
the tagged version of the test corpus, we obtain
96.95% precision where theirs was 96.59%. For
words seen, precision improves by an entirely neg-
ligible 0.01%, but for unseen words it improves by
10%, from 86.13% to 98.82%. This surprising result
arises from the fact that there are a plenty of unam-
biguous tokens (especially the proper names that are
usually unseen) in the test corpus.
What this shows is not just that morphology mat-
ters (this is actually not that visible for English), but
that the difference between systems can only be ap-
preciated once the small (and scantily documented)
tricks are factored out. The reason why Banko and
Moore (2004) get less than HunPos is not because
their system is inherently worse, but rather because
it lacks the engineering hacks built into TnT and
HunPos.
Hungarian We evaluated the different models
by tenfold cross-validation on the Szeged Corpus
(Csendes et al, 2004), with the relevant data in pre-
sented Table 3.
Set Sent. Tokens Unseens OOV
Train 63,075 1,044,914 0 N.A
Test 7,008 116,101 9.59% 5.64%
Table 3: Data set splits used for Hungarian.
Note that the proportion of unseen words, nearly
10%, is more than three times higher than in En-
glish. Most of these words were covered by the mor-
phological analyzer (Tro?n et al, 2006) but still 28%
of unseen words were only guessed. However, this
is just 2.86% of the whole corpus, in the magnitude
similar to English.
morph lex order seen unseen overall
no
1 98.34% 88.96% 97.27%
2 98.58% 87.97% 97.40%
yes 1 98.32% 96.01% 98.03%2 98.56% 95.96% 98.24%
Table 4: Tagging accuracy for Hungarian of HunPos
with and without morphological lexicon and with
first and second order emission/lexicon probabili-
ties.
On the same corpus TnT had 97.42% and Hala?csy
et al (2006) reached 98.17% with a MaxEnt tag-
ger that used the TnT output as a feature. HunPos
gets as good performance in one minute as this Max-
Ent model which took three hours to go through the
train/test cycle.
4 Concluding remarks
Though there can be little doubt that the ruling sys-
tem of bakeoffs actively encourages a degree of one-
upmanship, our paper and our software are not of-
fered in a competitive spirit. As we said at the out-
211
set, we don?t necessarily believe HunPos to be in any
way better than TnT, and certainly the main ideas
have been pioneered by DeRose (1988), Church
(1988), and others long before this generation of
HMM work. But to improve the results beyond what
a basic HMM can achieve one needs to tune the sys-
tem, and progress can only be made if the experi-
ments are end to end replicable.
There is no doubt many other systems could be
tweaked further and improve on our results ? what
matters is that anybody could now also tweak Hun-
Pos without any restriction to improve the state of
the art. Such tweaking can bring surprising results,
e.g. the conclusion, strongly supported by the results
presented here, that HMM tagging is actually quite
competitive with, and orders of magnitude faster
than, the current generation of learning algorithms
including SVM and MaxEnt. No matter how good
TnT was to begin with, the closed source has hin-
dered its progress to the point that inherently clum-
sier, but better tweakable algorithms could overtake
HMMs, a situation that HunPos has now hopefully
changed at least for languages with more complex
morphologies.
Acknowledgement
We thank Thorsten Brants for TnT, and Gyo?rgy
Gyepesi for constant help and encouragement.
References
Michele Banko and Robert C. Moore. 2004. Part of
speech tagging in context. In COLING ?04: Proceed-
ings of the 20th international conference on Compu-
tational Linguistics, page 556, Morristown, NJ, USA.
Association for Computational Linguistics.
Thorsten Brants. 2000. TnT ? a statistical part-of-speech
tagger. In Proceedings of the Sixth Applied Natural
Language Processing Conference (ANLP-2000), Seat-
tle, WA.
Kenneth Ward Church. 1988. A stochastic parts program
and noun phrase parser for unrestricted text. In Pro-
ceedings of the second conference on Applied natural
language processing, pages 136?143, Morristown, NJ,
USA. Association for Computational Linguistics.
Do?ra Csendes, Ja?no?s Csirik, and Tibor Gyimo?thy. 2004.
The Szeged Corpus: A POS tagged and syntacti-
cally annotated Hungarian natural language corpus.
In Karel Pala Petr Sojka, Ivan Kopecek, editor, Text,
Speech and Dialogue: 7th International Conference,
TSD, pages 41?47.
Steven J. DeRose. 1988. Grammatical category disam-
biguation by statistical optimization. Computational
Linguistics, 14:31?39.
Damien Doligez, Jacques Garrigue, Didier Re?my, and
Je?ro?me Vouillon, 2004. The Objective Caml system.
Institut National de Recherche en Informatique et en
Automatique.
Jesu?s Gime?nez and Llu??s Ma`rquez. 2003. Fast and accu-
rate part-of-speech tagging: The svm approach revis-
ited. In Proceedings of RANLP, pages 153?163.
Jan Hajic?, Pavel Krbec, Karel Oliva, Pavel Kve?ton?, and
Vladim??r Petkevic?. 2001. Serial combination of rules
and statistics: A case study in Czech tagging. In
Proceedings of the 39th Association of Computational
Linguistics Conference, pages 260?267, Toulouse,
France.
Dilek Z. Hakkani-Tu?r, Kemal Oflazer, and Go?khan Tu?r.
2000. Statistical morphological disambiguation for
agglutinative languages. In Proceedings of the 18th
conference on Computational linguistics, pages 285?
291, Saarbru?cken, Germany.
Pe?ter Hala?csy, Andra?s Kornai, Csaba Oravecz, Viktor
Tro?n, and Da?niel Varga. 2006. Using a morphological
analyzer in high precision POS tagging of Hungarian.
In Proceedings of LREC 2006, pages 2245?2248.
Bryan Jurish. 2003. A hybrid approach to part-of-speech
tagging. Technical report, Berlin-Brandenburgische
Akademie der Wissenschaften.
Adwait Ratnaparkhi. 1996. A maximum entropy model
for part-of-speech tagging. In Karel Pala Petr Sojka,
Ivan Kopecek, editor, Proceedings of the Conference
on Empirical Methods in Natural Language Process-
ing, pages 133?142, University of Pennsylvania.
Noah A. Smith, David A. Smith, and Roy W. Tromble.
2005. Context-based morphological disambiguation
with random fields. In Proceedings of the Conference
on Human Language Technology and Empirical Meth-
ods in Natural Language Processing, Vancouver.
Kristina Toutanova, Dan Klein, Christopher Manning,
and Yoram Singer. 2003. Feature-rich part-of-speech
tagging with a cyclic dependency network. In Pro-
ceedings of HLT-NAACL, pages 252?259.
Viktor Tro?n, Pe?ter Hala?csy, Pe?ter Rebrus, Andra?s Rung,
Pe?ter Vajda, and Eszter Simon. 2006. Morphdb.hu:
Hungarian lexical database and morphological gram-
mar. In Proceedings of LREC 2006, pages 1670?1673.
212
Web-based frequency dictionaries for medium density languages
Andra?s Kornai
MetaCarta Inc.
350 Massachusetts Avenue
Cambridge MA 02139
andras@kornai.com
Pe?ter Hala?csy
Media Research and Education Center
Stoczek u. 2
H-1111 Budapest
halacsy@mokk.bme.hu
Viktor Nagy
Institute of Linguistics
Benczu?r u 33
H-1399 Budapest
nagyv@nytud.hu
Csaba Oravecz
Institute of Linguistics
Benczu?r u 33
H-1399 Budapest
oravecz@nytud.hu
Viktor Tro?n
U of Edinburgh
2 Buccleuch Place
EH8 9LW Edinburgh
v.tron@ed.ac.uk
Da?niel Varga
Media Research and Education Center
Stoczek u. 2
H-1111 Budapest
daniel@mokk.bme.hu
Abstract
Frequency dictionaries play an important
role both in psycholinguistic experiment
design and in language technology. The
paper describes a new, freely available,
web-based frequency dictionary of Hun-
garian that is being used for both purposes,
and the language-independent techniques
used for creating it.
0 Introduction
In theoretical linguistics introspective grammati-
cality judgments are often seen as having method-
ological primacy over conclusions based on what
is empirically found in corpora. No doubt the
main reason for this is that linguistics often studies
phenomena that are not well exemplified in data.
For example, in the entire corpus of written En-
glish there seems to be only one attested example,
not coming from semantics papers, of Bach-Peters
sentences, yet the grammaticality (and the pre-
ferred reading) of these constructions seems be-
yond reproach. But from the point of view of the
theoretician who claims that quantifier meanings
can be computed by repeat substitution, even this
one example is one too many, since no such theory
can account for the clearly relevant (though barely
attested) facts.
In this paper we argue that ordinary corpus
size has grown to the point that in some areas
of theoretical linguistics, in particular for is-
sues of inflectional morphology, the dichotomy
between introspective judgments and empirical
observations need no longer be maintained: in
this area at least, it is now nearly possible to
make the leap from zero observed frequency to
zero theoretical probability i.e. ungrammaticality.
In many other areas, most notably syntax, this
is still untrue, and here we argue that facts of
derivational morphology are not yet entirely
within the reach of empirical methods. Both
for inflectional and derivational morphology
we base our conclusions on recent work with
a gigaword web-based corpus of Hungarian
(Hala?csy et al2004) which goes some way
towards fulfilling the goals of the WaCky project
(http://wacky.sslmit.unibo.it, see
also Lu?deling et al2005) inasmuch as the infras-
tructure used in creating it is applicable to other
medium-density languages as well. Section 1
describes the creation of the WFDH Web-based
Frequency Dictionary of Hungarian from the raw
corpus. The critical disambiguation step required
for lemmatization is discussed in Section 2,
and the theoretical implications are presented in
Section 3. The rest of this Introduction is devoted
to some terminological clarification and the
presentation of the elementary probabilistic model
used for psycholinguistic experiment design.
0.1 The range of data
Here we will distinguish three kinds of corpora:
small-, medium-, and large-range, based on the in-
ternal coherence of the component parts. A small-
range corpus is one that is stylistically homoge-
neous, generally the work of a single author. The
largest corpora that we could consider small-range
are thus the oeuvres of the most prolific writers,
rarely above 1m, and never above 10m words. A
medium-range corpus is one that remains within
the confines of a few text types, even if the au-
thorship of individual documents can be discerned
e.g. by detailed study of word usage. The LDC
gigaword corpora, composed almost entirely of
news (journalistic prose), are from this perspec-
1
tive medium range. Finally, a large-range corpus
is one that displays a variety of text types, gen-
res, and styles that approximates that of overall
language usage ? the Brown corpus at 1m words
has considerably larger range than e.g. the Reuters
corpus at 100m words.
The fact that psycholinguistic experiments need
to control for word frequency has been known at
least since Thorndike (1941) and frequency ef-
fects also play a key role in grammaticization (By-
bee, 2003). Since the principal source of variabil-
ity in word (n-gram) frequencies is the choice of
topic, we can subsume overall considerations of
genre under the selection of topics, especially as
the former typically dictates the latter ? for ex-
ample, we rarely see literary prose or poetry deal-
ing with undersea sedimentation rates. We assume
a fixed inventory of topics T1, T2, . . . , Tk, with
k on the order 104, similar in granularity to the
Northern Light topic hierarchy (Kornai et al2003)
and reserve T0 to topicless texts or ?General Lan-
guage?. Assuming that these topics appear in the
language with frequency q1, q2, . . . , qk, summing
to 1 ? q0 ? 1, the ?average? topic is expected to
have frequency about 1/k (and clearly, q0 is on the
same order, as it is very hard to find entirely topi-
cless texts).
As is well known, the salience of different
nouns and noun phrases appearing in the same
structural position is greatly impacted not just by
frequency (generally, less frequent words are more
memorable) but also by stylistic value. For ex-
ample, taboo words are more salient than neutral
words of the same overall frequency. But style is
also closely associated with topic, and if we match
frequency profiles across topics we are therefore
controlling for genre and style as well. Present-
ing psycholinguistical experiments is beyond the
scope of this paper: here we put the emphasis on
creating the computational resource, the frequency
dictionary, that allows for detail matching of fre-
quency profiles.
Defining the range r of a corpus C simply
as
?
j qj where the sum is taken over all topics
touched by documents in C, single-author cor-
pora typically have r < 0.1 even for encyclope-
dic writers, and web corpora have r > 0.9. Note
that r just measures the range, it does not mea-
sure how representative a corpus is for some lan-
guage community. Here we discuss results con-
cerning all three ranges. For small range, we use
the Hungarian translation of Orwell?s 1984 ? 98k
words including punctuation tokens, (Dimitrova et
al., 1998). For mid-range, we consider four topi-
cally segregated subcorpora of the Hungarian side
of our Hungarian-English parallel corpus ? 34m
words, (Varga et al, 2005). For large-range we
use our webcorpus ? 700m words, (Hala?csy et al,
2004).
1 Collecting and presenting the data
Hungarian lags behind ?high density? languages
like English and German but is hugely ahead of
minority languages that have no significant ma-
chine readable material. Varga et al(2005) es-
timated there to be about 500 languages that fit
in the same ?medium density? category, together
accounting for over 55% of the world?s speakers.
Halacsy et al(2004) described how a set of open
source tools can be exploited to rapidly clean the
results of web crawls to yield high quality mono-
lingual corpora: the main steps are summarized
below.
Raw data, preprocessing The raw dataset
comes from crawling the top-level domain, e.g.
.hu, .cz, .hr, .pl etc. Pages that con-
tain no usable text are filtered out, and all text is
converted to a uniform character encoding. Iden-
tical texts are dropped by checksum compari-
son of page bodies (a method that can handle
near-identical pages, usually automatically gener-
ated, which differ only in their headers, datelines,
menus, etc.)
Stratification A spellchecker is used to stratify
pages by recognition error rates. For each page we
measure the proportion of unrecognized (either in-
correctly spelled or out of the vocabulary of the
spellchecker) words. To filter out non-Hungarian
(non-Czech, non-Croatian, non-Polish, etc.) docu-
ments, the threshold is set at 40%. If we lower the
threshold to 8%, we also filter out flat native texts
that employ Latin (7-bit) characters to denote their
accented (8 bit) variants (these are still quite com-
mon due to the ubiquity of US keyboards). Finally,
below the 4% threshold, webpages typically con-
tain fewer typos than average printed documents,
making the results comparable to older frequency
counts based on traditional (printed) materials.
Lemmatization To turn a given stratum of the
corpus into a frequency dictionary, one needs to
collect the wordforms into lemmas based on the
2
same stem: we follow the usual lexicographic
practice of treating inflected, but not derived,
forms of a stem as belonging to the same lemma.
Inflectional stems are computed by a morphologi-
cal analyzer (MA), the choice between alternative
morphological analyses is resolved using the out-
put of a POS tagger (see Section 2 below). When
there are several analyses that match the output of
the tagger, we choose one with the least number of
identified morphemes. For now, words outside the
vocabulary of the MA are not lemmatized at all ?
this decision will be revisited once the planned ex-
tension of the MA to a morphological guesser is
complete.
Topic classification Kornai et al(2003) pre-
sented a fully automated system for the classifica-
tion of webpages according to topic. Combining
this method with the methods described above en-
ables the automatic creation of topic-specific fre-
quency dictionaries and further, the creation of a
per-topic frequency distribution for each lemma.
This enables much finer control of word selection
in psycholinguistic experiments than was hitherto
possible.
1.1 How to present the data?
For Hungarian, the highest quality (4% thresh-
old) stratum of the corpus contains 1.22m unique
pages for a total of 699m tokens, already exceed-
ing the 500m predicted in (Kilgarriff and Grefen-
stette, 2003). Since the web has grown consid-
erably since the crawl (which took place in 2003),
their estimate was clearly on the conservative side.
Of the 699m tokens some 4.95m were outside the
vocabulary of the MA (7% OOV in this mode,
but less than 3% if numerals are excluded and the
analysis of compounds is turned on). The remain-
ing 649.7m tokens fall in 195k lemmas with an
average 54 form types per lemma. If all stems are
considered, the ratio is considerably lower, 33.6,
but the average entropy of the inflectional distri-
butions goes down only from 1.70 to 1.58 bits.
As far as the summary frequency list (which is
less than a megabyte compressed) is concerned,
this can be published trivially. Clearly, the avail-
ability of large-range gigaword corpora is in the
best interest of all workers in language technology,
and equally clearly, only open (freely download-
able) materials allow for replicability of experi-
ments. While it is possible to exploit search engine
queries for various NLP tasks (Lapata and Keller,
2004), for applications which use corpora as unsu-
pervised training material downloadable base data
is essential.
Therefore, a compiled webcorpus should con-
tain actual texts. We believe all ?cover your be-
hind? efforts such as publishing only URLs to be
fundamentally misguided. First, URLs age very
rapidly: in any given year more than 10% be-
come stale (Cho and Garcia-Molina, 2000), which
makes any experiment conducted on such a ba-
sis effectively irreproducible. Second, by present-
ing a quality-filtered and characterset-normalized
corpus the collectors actually perform a service to
those who are less interested in such mundane is-
sues. If everybody has to start their work from the
ground up, many projects will exhaust their fund-
ing resources and allotted time before anything in-
teresting could be done with the data. In contrast,
the Free and Open Source Software (FOSS) model
actively encourages researchers to reuse data.
In this regard, it is worth mentioning that dur-
ing the crawls we always respected robots.txt
and in the two years since the publication of the gi-
gaword Hungarian web corpus, there has not been
a single request by copyright holders to remove
material. We do not advocate piracy: to the con-
trary, it is our intended policy to comply with re-
moval requests from copyright holders, analogous
to Google cache removal requests. Finally, even
with copyright material, there are easy methods
for preserving interesting linguistic data (say un-
igram and bigram models) without violating the
interests of businesses involved in selling the run-
ning texts. 1
2 The disambiguation of morphological
analyses
In any morphologically complex language, the
MA component will often return more than one
possible analysis. In order to create a lemma-
tized frequency dictionary it is necessary to de-
cide which MA alternative is the correct one, and
in the vast majority of cases the context provides
sufficient information for this. This morphologi-
cal disambiguation task is closely related to, but
not identical with, part of speech (POS) tagging,
a term we reserve here for finding the major parts
1This year, we are publishing smaller pilot corpora for
Czech (10m words), Croatian (4m words), and Polish (12m
words), and we feel confident in predicting that these will
face as little actual opposition from copyright holders as the
Hungarian Webcorpus has.
3
of speech (N, V, A, etc). A full tag contains both
POS information and morphological annotation:
in highly inflecting languages the latter can lead
to tagsets of high cardinality (Tufis? et al, 2000).
Hungarian is particularly challenging in this re-
gard, both because the number of ambiguous to-
kens is high (reaching 50% in the Szeged Cor-
pus according to (Csendes et al, 2004) who use
a different MA), and because the ratio of tokens
that are not seen during training (unseen) can be
as much as four times higher than in comparable
size English corpora. But if larger training corpora
are available, significant disambiguation is possi-
ble: with a 1 m word training corpus (Csendes et
al., 2004) the TnT (Brants, 2000) architecture can
achieve 97.42% overall precision.
The ratio of ambiguous tokens is usually cal-
culated based on alternatives offered by a mor-
phological lexicon (either built during the training
process or furnished by an external application;
see below). If the lexicon offers alternative anal-
yses, the token is taken as ambiguous irrespective
of the probability of the alternatives. If an exter-
nal resource is used in the form of a morphological
analyzer (MA), this will almost always overgener-
ate, yielding false ambiguity. But even if the MA
is tight, a considerable proportion of ambiguous
tokens will come from legitimate but rare analyses
of frequent types (Church, 1988). For example the
word nem, can mean both ?not? and ?gender?, so
both ADV and NOUN are valid analyses, but the ad-
verbial reading is about five orders of magnitude
more frequent than the noun reading, (12596 vs. 4
tokens in the 1 m word manually annotated Szeged
Korpusz (Csendes et al, 2004)).
Thus the difficulty of the task is better mea-
sured by the average information required for dis-
ambiguating a token. If word w is assigned
the label Ti with probability P (Ti|w) (estimated
as C(Ti, w)/C(w) from a labeled corpus) then
the label entropy for a word can be calculated
as H(w) = ?
?
i P (Ti|w) logP (Ti|w), and the
difficulty of the labeling task as a whole is the
weighted average of these entropies with respect
to the frequencies of words w:
?
w P (w)H(w).
As we shall see in Section 3, according to this
measure the disambiguation task is not as difficult
as generally assumed.
A more persistent problem is that the ratio of
unseen items has very significant influence on the
performance of the disambiguation system. The
problem is more significant with smaller corpora:
in general, if the training corpus has N tokens and
the test corpus is a constant fraction of this, say
N/10, we expect the proportion of new words to
be cN q?1, where q is the reciprocal of the Zipf
constant (Kornai, 1999). But if the test/train ra-
tio is not kept constant because the training corpus
is limited (manual tagging is expensive), the num-
ber of tokens that are not seen during training can
grow very large. Using the 1.2 m words of Szeged
Corpus for training, in the 699 m word webcor-
pus over 4% of the non-numeric tokens will be un-
seen. Given that TnT performs rather dismally on
unseen items (Oravecz and Dienes, 2002) it was
clear from the outset that for lemmatizing the we-
bcorpus we needed something more elaborate.
The standard solution to constrain the prob-
abilistic tagging model for some of the unseen
items is the application of MA (Hakkani-Tu?r et al,
2000; Hajic? et al, 2001; Smith et al, 2005). Here
a distinction must be made between those items
that are not found in the training corpus (these we
have called unseen tokens) and those that are not
known to the MA ? we call these out of vocabulary
(OOV). As we shall see shortly, the key to the best
tagging architecture we found was to follow dif-
ferent strategies in the lemmatization and morpho-
logical disambiguation of OOV and known (in-
vocabulary) tokens.
The first step in tagging is the annotation of
inflectional features, with lemmatization being
postponed to later processing as in (Erjavec and
Dz?eroski, 2004). This differs from the method of
(Hakkani-Tu?r et al, 2000), where all syntactically
relevant features (including the stem or lemma) of
word forms are determined in one pass. In our ex-
perience, the choice of stem depends so heavily
on the type of linguistic information that later pro-
cessing will need that it cannot be resolved in full
generality at the morphosyntactic level.
Our first model (MA-ME) is based on disam-
biguating the MA output in the maximum entropy
(ME) framework (Ratnaparkhi, 1996). In addi-
tion to the MA output, we use ME features coding
the surface form of the preceding/following word,
capitalization information, and different charac-
ter length suffix strings of the current word. The
MA used is the open-source hunmorph ana-
lyzer (Tro?n et al, 2005) with the morphdb.hu
Hungarian morphological resource, the ME is the
OpenNLP package (Baldridge et al, 2001). The
4
MA-ME model achieves 97.72% correct POS tag-
ging and morphological analysis on the test corpus
(not used in training).
Maximum entropy or other discriminative
Markov models (McCallum et al, 2000) suffer
from the label bias problem (Lafferty et al, 2001),
while generative models (most notably HMMs)
need strict independence assumptions to make the
task of sequential data labeling tractable. Con-
sequently, long distance dependencies and non-
independent features cannot be handled. To cope
with these problems we designed a hybrid archi-
tecture, in which a trigramHMM is combined with
the MA in such a way that for tokens known to the
MA only the set of possible analyses are allowed
as states in the HMM whereas for OOVs all states
are possible. Lexical probabilities P (wi|ti) for
seen words are estimated from the training corpus,
while for unseen tokens they are provided by the
the above MA-ME model. This yields a trigram
HMM where emission probabilities are estimated
by a weighted MA, hence the model is called
WMA-T3. This improves the score to 97.93%.
Finally, it is possible to define another archi-
tecture, somewhat similar to Maximum Entropy
Markov Models, (McCallum et al, 2000), using
the above components. Here states are also the
set of analyses the MA allows for known tokens
and all analyses for OOVs, while emission prob-
abilities are estimated by the MA-ME model. In
the first pass TnT is run with default settings over
the data sequence, and in the second pass the ME
receives as features the TnT label of the preced-
ing/following token as well as the one to be ana-
lyzed. This combined system (TnT-MA-ME) in-
corporates the benefits of all the submodules and
reaches an accuracy of 98.17% on the Szeged Cor-
pus. The results are summarized in Table 1.
model accuracy
TnT 97.42
MA+ME 97.72
WMA+T3 97.93
TnT+MA+ME 98.17
Table 1: accuracy of morphological
disambiguation
We do not consider these results to be final:
clearly, further enhancements are possible e.g. by
a Viterbi search on alternative sentence taggings
using the T3 trigram tag model or by handling
OOVs on a par with known unseen words using
the guesser function of our MA. But, as we dis-
cuss in more detail in Halacsy et al2005, we are
already ahead of the results published elsewhere,
especially as these tend to rely on idealized MA
systems that have their morphological resources
extended so as to have no OOV on the test set.
3 Conclusions
Once the disambiguation of morphological anal-
yses is under control, lemmatization itself is a
mechanical task which we perform in a database
framework. This has the advantage that it sup-
ports a rich set of query primitives, so that we
can easily find e.g. nouns with back vowels that
show stem vowel elision and have approximately
the same frequency as the stem orvos ?doctor?.
Such a database has obvious applications both in
psycholinguistic experiments (which was one of
the design goals) and in settling questions of the-
oretical morphology. But there are always nag-
ging doubts about the closed world assumption be-
hind databases, famously exposed in linguistics by
Chomsky?s example colorless green ideas sleep
furiously: how do we distinguish this from *green
sleep colorless furiously ideas if the observed fre-
quency is zero for both?
Clearly, a naive empirical model that assigns
zero probability to each unseen word form makes
the wrong predictions. Better estimates can be
achieved if unseen words which are known to be
possible morphologically complex forms of seen
lemmas are assigned positive probability. This can
be done if the probability of a complex form is in
some way predictable from the probabilities of its
component parts. A simple variant of this model
is the positional independence hypothesis which
takes the probabilities of morphemes in separate
positional classes to be independent of each other.
Here we follow Antal (1961) and Kornai (1992) in
establishing three positional classes in the inflec-
tional paradigm of Hungarian nouns.
# Position 1 parameters
FAM 0.0001038986
PLUR 0.1372398793
PLUR_POSS 0.0210927964
PLUR_POSS<1> 0.0011609442
PLUR_POSS<1><PLUR> 0.0028751247
PLUR_POSS<2> 0.0004958278
PLUR_POSS<2><PLUR> 0.0000740203
PLUR_POSS<PLUR> 0.0023850120
POSS 0.1461635946
5
POSS<1> 0.0073305415
POSS<1><PLUR> 0.0073652648
POSS<1>_FAM 0.0000092294
POSS<2> 0.0027628071
POSS<2><PLUR> 0.0003006440
POSS<2>_FAM 0.0000030591
POSS<PLUR> 0.0069613929
POSS_FAM 0.0000000001
ZERO1 0.6636759634
# Position 2 parameters
ANP 0.0007780001
ANP<PLUR> 0.0000248301
ZERO2 0.9991971698
# Position 3 parameters
CAS<ABL> 0.0078638013
CAS<ACC> 0.1346412632
CAS<ADE> 0.0045132704
CAS<ALL> 0.0138677701
CAS<CAU> 0.0037332025
CAS<DAT> 0.0301123636
CAS<DEL> 0.0128222999
CAS<ELA> 0.0118596792
CAS<ESS> 0.0010230505
CAS<FOR> 0.0031204983
CAS<ILL> 0.0154186683
CAS<INE> 0.0582887516
CAS<INS> 0.0406197868
CAS<SBL> 0.0386519707
CAS<SUE> 0.0357416253
CAS<TEM> 0.0013095685
CAS<TER> 0.0034032438
CAS<TRA> 0.0017860054
ZERO3 0.5812231804
Table 3: marginal probabilities in noun inflection
The innermost class is used for number and pos-
sessive, with a total of 18 choices including the
zero morpheme (no possessor and singular). The
second positional class is for anaphoric posses-
sives with a total of three choices including the
zero morpheme, and the third (outermost) class
is for case endings with a total of 19 choices
including the zero morpheme (nominative) for a
total of 1026 paradigmatic forms. The parame-
ters were obtained by downhill simplex minimiza-
tion of absolute errors. The average absolute er-
ror is of the values computed by the independece
hypothesis from the observed values is 0.000099
(mean squared error is 9.18 ? 10?7), including the
209 paradigmatic slots for which no forms were
found in the webcorpus at all (but the indepen-
dence model will assign positive probability to any
of them as the product of the component probabil-
ities). When checking the independence hypoth-
esis with ? statistics in the webcorpus for every
nominal inflectional morpheme pair the members
of which are from different dimensions, the ? co-
efficient remained less than 0.1 for each pair but
3. For these 3 the coefficient is under 0.2 (which
means that the shared variance of these pairs is be-
tween 1% and 2%) so we have no reason to discard
the independence hypothesis. If we run the same
test on the 150 million words Hungarian National
Corpus, which was analyzed and tagged by differ-
ent tools, we also get the same result (Nagy, 2005).
It is very easy to construct low probability com-
binations using this model. Taking a less frequent
possessive ending such as the 2nd singular poses-
sor familiar plural -ode?k, the anaphoric plural -e?i,
and a rarer case ending such as the formalis -ke?nt
we obtain combinations such as bara?tode?ke?ike?nt
?as the objects owned by your friends? company?.
The model predicts we need a corpus with about
4.2 ? 1012 noun tokens to see this suffix combina-
tion (not necessarily with the stem bara?t ?friend?)
or about ten trillion tokens. While the current cor-
pus falls short by four orders of magnitude, this
is about the contribution of the anaphoric plural
(which we expect to see only once in about 40k
noun tokens) so for any two of the three position
classes combined the prediction that valid inflec-
tional combinations will actually be attested is al-
ready testable.
Using the fitted distribution of the position
classes, the entropy of the nominal paradigm is
computed simply as the sum of the class entropies,
1.554 + 0.0096 + 2.325 or 3.888 bits. Since the
nominal paradigm is considerably more complex
than the verbal paradigm (which has a total of
52 forms) or the infinitival paradigm (7 forms),
this value can serve as an upper bound on the in-
flectional entropy of Hungarian. In Table 3 we
present the actual values, computed on a variety
of frequency dictionaries. The smallest of these
is based on a single text, the Hungarian transla-
tion of Orwell?s 1984. The mid-range corpora
used in this comparison are segregated in broad
topics: law (EU laws and regulations), literature,
movie subtitles, and software manuals: all were
collected from the web as part of building a bilin-
gual English-Hungarian corpus. Finally, the large-
range is the full webcorpus at the best (4% reject)
quality stratum.
6
1984 law literature subtitles software webcorpus
token 98292 2310742 7971157 2667420 839339 69926550
type 20343 110040 431615 188131 81729 2083023
OOV token 3141 266368 335660 181292 140551 4951743
OOV type 1132 39467 87574 50078 45799 994890
lemma 10644 60602 165259 85491 58939 1189471
lemma excl. OOV 9513 21136 77686 35414 13141 194589
lemma entropy 1.14282 1.04118 1.54922 1.41374 1.14516 1.57708
lemma entropy excl. OOV 1.18071 1.17687 1.61753 1.51718 1.37559 1.69743
Table 3: inflectional entropy of Hungarian computed on a variety of frequency dictionaries
Our overall conclusion is that for many pur-
poses a web-based corpus has significant advan-
tages over more traditional corpora. First, it is
cheap to collect. Second, it is sufficiently hetero-
geneous to ensure that language models based on
it generalize better on new texts of arbitrary topics
than models built on (balanced) manual corpora.
As we have shown, automatically tagged and lem-
matized webcorpora can be used to obtain large
coverage stem and wordform frequency dictionar-
ies. While there is a significant portion of OOV
entries (about 3% for our current MA), in the de-
sign of psycholinguistic experiments it is gener-
ally sufficient to consider stems already known to
the MA, and the variety of these (over three times
the stem lexicon of the standard Hungarian fre-
quency dictionary) enables many controlled exper-
iments hitherto impossible.
References
La?szlo? Antal. 1961. A magyar esetrendszer. Nyelvtu-
doma?nyi E?rtekeze?sek, 29.
Jason Baldridge, Thomas Morton, and Gann Bierner.
2001. The opennlp maximum entropy package.
http://maxent.sourceforge.net.
Thorsten Brants. 2000. TnT ? a statistical part-of-
speech tagger. In Proceedings of the Sixth Applied
Natural Language Processing Conference (ANLP-
2000), Seattle, WA.
Joan Bybee. 2003. Mechanisms of change in gram-
maticization: the role of frequency. In Brian Joseph
and Richard Janda, editors, Handbook of Historical
Linguistics, pages 602?623. Blackwell.
Junghoo Cho and Hector Garcia-Molina. 2000. The
evolution of the web and implications for an incre-
mental crawler. In VLDB ?00: Proceedings of the
26th International Conference on Very Large Data
Bases, pages 200?209, San Francisco, CA, USA.
Morgan Kaufmann Publishers Inc.
Kenneth Ward Church. 1988. A stochastic parts pro-
gram and noun phrase parser for unrestricted text.
In Proceedings of the second conference on Applied
natural language processing, pages 136?143, Mor-
ristown, NJ, USA. Association for Computational
Linguistics.
Do?ra Csendes, Ja?no?s Csirik, and Tibor Gyimo?thy.
2004. The Szeged Corpus: A POS tagged and syn-
tactically annotated Hungarian natural language cor-
pus. In Karel Pala Petr Sojka, Ivan Kopecek, editor,
Text, Speech and Dialogue: 7th International Con-
ference, TSD, pages 41?47.
Ludmila Dimitrova, Tomaz Erjavec, Nancy Ide,
Heiki Jaan Kaalep, Vladimir Petkevic, and Dan
Tufis?. 1998. Multext-east: Parallel and comparable
corpora and lexicons for six central and eastern euro-
pean languages. In Christian Boitet and Pete White-
lock, editors, Proceedings of the Thirty-Sixth Annual
Meeting of the Association for Computational Lin-
guistics and Seventeenth International Conference
on Computational Linguistics, pages 315?319, San
Francisco, California. Morgan Kaufmann Publish-
ers.
Tomaz? Erjavec and Sas?o Dz?eroski. 2004. Machine
learning of morphosyntactic structure: Lemmatizing
unknown Slovene words. Applied Artificial Intelli-
gence, 18(1):17?41.
Jan Hajic?, Pavel Krbec, Karel Oliva, Pavel Kve?ton?,
and Vladim??r Petkevic?. 2001. Serial combination
of rules and statistics: A case study in Czech tag-
ging. In Proceedings of the 39th Association of
Computational Linguistics Conference, pages 260?
267, Toulouse, France.
Dilek Z. Hakkani-Tu?r, Kemal Oflazer, and Go?khan
Tu?r. 2000. Statistical morphological disambigua-
tion for agglutinative languages. In Proceedings of
the 18th conference on Computational linguistics,
pages 285?291, Morristown, NJ, USA. Association
for Computational Linguistics.
Pe?ter Hala?csy, Andra?s Kornai, La?szlo? Ne?meth, Andra?s
Rung, Istva?n Szakada?t, and Viktor Tro?n. 2004. Cre-
ating open language resources for Hungarian. In
Proceedings of Language Resources and Evalua-
tion Conference (LREC04). European Language Re-
sources Association.
7
Pe?ter Hala?csy, Andra?s Kornai, and Da?niel Varga.
2005. Morfolo?giai egye?rtelmu?s??te?s maximum
entro?pia mo?dszerrel (morphological disambiguation
with the maxent method). In Proc. 3rd Hungar-
ian Computational Linguistics Conf. Szegedi Tu-
doma?nyegyetem.
Adam Kilgarriff and Gregory Grefenstette. 2003. In-
troduction to the special issue on the web as corpus.
Computational Linguistics, 29(3):333?348.
Andra?s Kornai, Marc Krellenstein, Michael Mulligan,
David Twomey, Fruzsina Veress, and Alec Wysoker.
2003. Classifying the hungarian web. In A. Copes-
take and J. Hajic, editors, Proc. EACL, pages 203?
210.
Andra?s Kornai. 1992. Frequency in morphology. In
I. Kenesei, editor, Approaches to Hungarian, vol-
ume IV, pages 246?268.
Andra?s Kornai. 1999. Zipf?s law outside the middle
range. In J. Rogers, editor, Proc. Sixth Meeting on
Mathematics of Language, pages 347?356. Univer-
sity of Central Florida.
John Lafferty, Andrew McCallum, and Fernando
Pereira. 2001. Conditional random fields: Prob-
abilistic models for segmenting and labeling se-
quence data. In Proceedings of the 18th Interna-
tional Conference on Machine Learning, pages 282?
289. Morgan Kaufmann, San Francisco, CA.
Mirella Lapata and Frank Keller. 2004. The web
as a baseline: Evaluating the performance of un-
supervised web-based models for a range of NLP
tasks. In Daniel Marcu Susan Dumais and Salim
Roukos, editors, HLT-NAACL 2004: Main Proceed-
ings, pages 121?128, Boston, Massachusetts, USA,
May 2 - May 7. Association for Computational Lin-
guistics.
Anke Luedeling, Stefan Evert, and Marco Baroni.
2005. Using web data for linguistic purposes. In
Marianne Hundt, Caroline Biewer, and Nadjia Nes-
selhauf, editors, Corpus linguistics and the Web.
Rodopi.
Andrew McCallum, Dayne Freitag, and Fernando
Pereira. 2000. Maximum entropy Markov mod-
els for information extraction and segmentation. In
Proceedings of the 17th International Conference on
Machine Learning, pages 591?598. Morgan Kauf-
mann, San Francisco, CA.
Viktor Nagy. 2005. A magyar fo?ne?vi inflexio?
statisztikai modellje (statistical model of nominal
inflection in hungarian. In Proc. Kodola?nyi-ELTE
Conf.
Csaba Oravecz and Pe?ter Dienes. 2002. Effi-
cient stochastic part-of-speech tagging for Hungar-
ian. In Proceedings of the Third International
Conference on Language Resources and Evaluation
(LREC2002), pages 710?717.
Adwait Ratnaparkhi. 1996. A maximum entropy
model for part-of-speech tagging. In Karel Pala
Petr Sojka, Ivan Kopecek, editor, Proceedings of
the Conference on Empirical Methods in Natural
Language Processing, pages 133?142, University of
Pennsylvania.
Noah A. Smith, David A. Smith, and Roy W. Tromble.
2005. Context-based morphological disambiguation
with random fields. In Proceedings of the Confer-
ence on Human Language Technology and Empiri-
cal Methods in Natural Language Processing, Van-
couver.
Edward L. Thorndike. 1941. The Teaching of English
Suffixes. Teachers College, Columbia University.
Viktor Tro?n, Gyo?rgy Gyepesi, Pe?ter Hala?csy, Andra?s
Kornai, La?szlo? Ne?meth, and Da?niel Varga. 2005.
Hunmorph: open source word analysis. In Proceed-
ing of the ACL 2005 Workshop on Software.
Dan Tufis?, Pe?ter Dienes, Csaba Oravecz, and Tama?s
Va?radi. 2000. Principled hidden tagset design for
tiered tagging of Hungarian. In Proceedings of the
Second International Conference on Language Re-
sources and Evaluation.
Da?niel Varga, La?szlo? Ne?meth, Pe?ter Hala?csy, Andra?s
Kornai, Viktor Tro?n, and Viktor Nagy. 2005. Paral-
lel corpora for medium density languages. In Pro-
ceedings of the Recent Advances in Natural Lan-
guage Processing 2005 Conference, pages 590?596,
Borovets. Bulgaria.
8
