Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 239?249,
Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational Linguistics
Linking Tweets to News: A Framework to Enrich Short Text Data in
Social Media
Weiwei Guo? and Hao Li? and Heng Ji? and Mona Diab?
?Department of Computer Science, Columbia University
?Computer Science Department and Linguistic Department,
Queens College and Graduate Center, City University of New York
?Department of Computer Science, George Washington University
weiwei@cs.columbia.edu, {haoli.qc,hengjicuny}@gmail.com, mtdiab@gwu.edu
Abstract
Many current Natural Language Process-
ing [NLP] techniques work well assum-
ing a large context of text as input data.
However they become ineffective when
applied to short texts such as Twitter feeds.
To overcome the issue, we want to find
a related newswire document to a given
tweet to provide contextual support for
NLP tasks. This requires robust model-
ing and understanding of the semantics of
short texts.
The contribution of the paper is two-fold:
1. we introduce the Linking-Tweets-to-
News task as well as a dataset of linked
tweet-news pairs, which can benefit many
NLP applications; 2. in contrast to previ-
ous research which focuses on lexical fea-
tures within the short texts (text-to-word
information), we propose a graph based
latent variable model that models the in-
ter short text correlations (text-to-text in-
formation). This is motivated by the ob-
servation that a tweet usually only cov-
ers one aspect of an event. We show that
using tweet specific feature (hashtag) and
news specific feature (named entities) as
well as temporal constraints, we are able to
extract text-to-text correlations, and thus
completes the semantic picture of a short
text. Our experiments show significant im-
provement of our new model over base-
lines with three evaluation metrics in the
new task.
1 Introduction
Recently there has been an increasing interest in
language understanding of Twitter messages. Re-
searchers (Speriosui et al, 2011; Brody and Di-
akopoulos, 2011; Jiang et al, 2011) were in-
terested in sentiment analysis on Twitter feeds,
and opinion mining towards political issues or
politicians (Tumasjan et al, 2010; Conover et al,
2011). Others (Ramage et al, 2010; Jin et al,
2011) summarized tweets using topic models. Al-
though these NLP techniques are mature, their
performance on tweets inevitably degrades, due to
the inherent sparsity in short texts. In the case
of sentiment analysis, while people are able to
achieve 87.5% accuracy (Maas et al, 2011) on a
movie review dataset (Pang and Lee, 2004), the
performance drops to 75% (Li et al, 2012) on
a sentence level movie review dataset (Pang and
Lee, 2005). The problem worsens when some
existing NLP systems cannot produce any results
given the short texts. Considering the following
tweet:
Pray for Mali...
A typical event extraction/discovery system (Ji
and Grishman, 2008) fails to discover the war
event due to the lack of context information (Ben-
son et al, 2011), and thus fails to shed light on the
users focus/interests.
To enable the NLP tools to better understand
Twitter feeds, we propose the task of linking a
tweet to a news article that is relevant to the tweet,
thereby augmenting the context of the tweet. For
example, we want to supplement the implicit con-
text of the above tweet with a news article such as
the following entitled:
State of emergency declared in Mali
where abundant evidence can be fed into an off-
the-shelf event extraction/discovery system. To
create a gold standard dataset, we download tweets
spanning over 18 days, each with a url linking to a
news article of CNN or NYTIMES, as well as all
the news of CNN and NYTIMES published during
the period. The goal is to predict the url referred
news article based on the text in each tweet.1 We
1The data and code is publicly available at www.cs.
239
believe many NLP tasks will benefit from this task.
In fact, in the topic modeling research, previous
work (Jin et al, 2011) already showed that by in-
corporating webpages whose urls are contained
in tweets, the tweet clustering purity score was
boosted from 0.280 to 0.392.
Given the few number of words in a tweet (14
words on average in our dataset), the traditional
high dimensional surface word matching is lossy
and fails to pinpoint the news article. This con-
stitutes a classic short text semantics impediment
(Agirre et al, 2012). Latent variable models are
powerful by going beyond the surface word level
and mapping short texts into a low dimensional
dense vector (Socher et al, 2011; Guo and Diab,
2012b). Accordingly, we apply a latent variable
model, namely, the Weighted Textual Matrix Fac-
torization [WTMF] (Guo and Diab, 2012b; Guo
and Diab, 2012c) to both the tweets and the news
articles. WTMF is a state-of-the-art unsupervised
model that was tested on two short text similar-
ity datasets: (Li et al, 2006) and (Agirre et al,
2012), which outperforms Latent Semantic Anal-
ysis [LSA] (Landauer et al, 1998) and Latent
Dirichelet Allocation [LDA] (Blei et al, 2003) by
a large margin. We employ it as a strong baseline
in this task as it exploits and effectively models the
missing words in a tweet, in practice adding thou-
sands of more features for the tweet, by contrast
LDA, for example, only leverages observed words
(14 features) to infer the latent vector for a tweet.
Apart from the data sparseness, our dataset pro-
poses another challenge: a tweet usually covers
only one aspect of an event. In our previous ex-
ample, the tweet only contains the location Mali
while the event is about French army participated
in Mali war. In this scenario, we would like to find
the missing elements of the tweet such as French,
war from other short texts, to complete the seman-
tic picture of Pray in Mali tweet. One drawback
of WTMF for our purposes is that it simply mod-
els the text-to-word information without leverag-
ing the correlation between short texts. While
this is acceptable on standard short text similarity
datasets (data points are independently generated),
it ignores some valuable information characteristi-
cally present in our dataset: (1) The tweet specific
features such as hashtags. Hashtags prove to be
a direct indication of the semantics of tweets (Ra-
mage et al, 2010); (2) The news specific features
columbia.edu/?weiwei
such as named entities in a document. Named en-
tities acquired from a news document, typically
with high accuracy using Named Entity Recog-
nition [NER] tools, may be particularly informa-
tive. If two texts mention the same entities then
they might describe the same event; (3) The tem-
poral information in both genres (tweets and news
articles). We note that there is a higher chance
of event description overlap between two texts if
their time of publication is similar.
In this paper, we study the problem of min-
ing and exploiting correlations between texts us-
ing these features. Two texts may be considered
related or complementary if they share a hash-
tag/NE or satisfies the temporal constraints. Our
proposed latent variable model not only models
text-to-word information, but also is aware of the
text-to-text information (illustrated in Figure 1):
two linked texts should have similar latent vec-
tors, accordingly the semantic picture of a tweet is
completed by receiving semantics from its related
tweets. We incorporate this additional information
in the WTMF model. We also show the differ-
ent impact of the text-to-text relations in the tweet
genre and news genre. We are able to achieve sig-
nificantly better results than with a text-to-words
WTMF model. This work can be regarded as a
short text modeling approach that extends previ-
ous work however with a focus on combining the
mining of information within short texts coupled
with utilizing extra shared information across the
short texts.
2 Task and Data
The task is given the text in a tweet, a system aims
to find the most relevant news article. For gold
standard data, we harvest all the tweets that have a
single url link to a CNN or NYTIMES news arti-
cle, dated from the 11th of Jan to the 27th of Jan,
2013. In evaluation, we consider this url-referred
news article as the gold standard ? the most rele-
vant document for the tweet, and remove the url
from the text of the tweet. We also collect all the
news articles from both CNN and NYTIMES from
RSS feeds during the same timeframe. Each tweet
entry has the published time, author, text; each
news entry contains published time, title, news
summary, url. The tweet/news pairs are extracted
by matching urls. We manually filtered ?trivial?
tweets where the tweet content is simply the news
title or news summary. The final dataset results in
240
(a)	 ?
t1	 ? t2	 ?
n2	 ?n1	 ?
t3	 ?
w1	 ? w2	 ? w3	 ? w4	 ? w5	 ? w6	 ? w7	 ? w8	 ?
t1	 ? t2	 ?
n2	 ?n1	 ?
t3	 ?
w1	 ? w2	 ? w3	 ? w4	 ? w5	 ? w6	 ? w7	 ? w8	 ?
#healthcare	 ? Obama	 ?
temporal	 ? (b)	 ?
Figure 1: (a) WTMF. (b) WTMF-G: the tweet nodes t and news nodes n are connected by hashtags, named entities or
temporal edges (for simplicity, the missing tokens are not shown in the figure)
34,888 tweets and 12,704 news articles.
It is worth noting that the news corpus is not
restricted to current events. It covers various gen-
res and topics, such as travel guides. e.g. World?s
most beautiful lakes, and health issues, e.g. The
importance of a ?stop day?, etc.
2.1 Evaluation metric
For our task evaluation, ideally, we would like
the system to be able to identify the news arti-
cle specifically referred to by the url within each
tweet in the gold standard. However, this is very
difficult given the large number of potential can-
didates, especially those with slight variations.
Therefore, following the Concept Definition Re-
trieval task in (Guo and Diab, 2012b) and (Steck,
2010) we use a metric for evaluating the ranking
of the correct news article to evaluate the systems,
namely, ATOPt, area under the TOPKt(k) recall
curve for a tweet t. Basically, it is the normal-
ized ranking ? [0, 1] of the correct news article
among all candidate news articles: ATOPt = 1
means the url-referred news article has the highest
similarity value with the tweet (a correct NARU);
ATOPt = 0.95 means the similarity value with
correct news article is larger than 95% of the can-
didates, i.e. within the top 5% of the candidates.
ATOPt is calculated as follows:
ATOPt =
? 1
0
TOPKt(k)dk (1)
where TOPKt(k) = 1 if the url referred news arti-
cle is in the ?top k? list, otherwise TOPKt(k) = 0.
Here k ? [0, 1] is the relative position (when
k = 1, it means all the candidates).
We also include other metrics to examine if the
system is able to rank the url referred news arti-
cle in the first few returned results: TOP10 recall
hit rate to evaluate whether the correct news is in
the top 10 results, and RR, Reciprocal Rank= 1/r
(i.e., RR= 1/3 when the correct news article is
ranked at the 3rd highest place).
3 Weighted Textual Matrix Factorization
The WTMF model (Guo and Diab, 2012a) has
been successfully applied to the short text simi-
larity task, achieving state-of-the-art unsupervised
performance. This can be attributed to the fact that
it models the missing tokens as features, thereby
adding many more features for a short text. The
missing words of a sentence are defined as all the
vocabulary of the training corpus minus the ob-
served words in a sentence. Missing words serve
as negative examples for the semantics of a short
text: the short text should not be related to the
missing words.
As per (Guo and Diab, 2012b), the corpus is
represented in a matrix X , where each cell stores
the TF-IDF values of words. The rows of X are
words and columns are short texts. As in Figure
2, matrix X is approximated by the product of a
K?M matrix P and a K?N matrix Q. Accord-
ingly, each sentence sj is represented by a K di-
mensional latent vector Q?,j . Similarly a word wi
is generalized by P?,i. Therefore, the inner product
of a word vector P?,i and a short text vector Q?,j is
to approximate the cell Xij (shaded part in Figure
2). In this way, the missing words are modeled by
requiring the inner product of a word vector and
short text vector to be close to 0 (the word and the
short text should be irrelevant).
Since 99% cells in X are missing tokens (0
value), the impact of observed words is signifi-
cantly diminished. Therefore a small weight wm
is assigned for each 0 cell (missing tokens) in the
matrix X in order to preserve the influence of ob-
served words. P andQ are optimized by minimize
the objective function:
241
Figure 2: Weighted Textual Matrix Factorization
?
i
?
j
Wij (P?,i ?Q?,j ?Xij)2 + ?||P ||22 + ?||Q||22
Wi,j =
{
1, if Xij 6= 0
wm, if Xij = 0
(2)
where ? is a regularization term.
4 Creating Text-to-text Relations via
Twitter/News Features
WTMF exploits the text-to-word information in a
very nuanced way, while the dependency between
texts is ignored. In this Section, we introduce how
to create text-to-text relations.
4.1 Hashtags and Named Entities
Hashtags highlight the topics in tweets, e.g., The
#flu season has started. We believe two tweets
sharing the same hashtag should be related, hence
we place a link between them to explicitly inform
the model that these two tweets should be similar.
We find only 8,701 tweets out of 34,888 include
hashtags. In fact, we observe many hashtag words
are mentioned in tweets without explicitly being
tagged with #. To overcome the hashtag sparse-
ness issue, one can resort to keywords recommen-
dation algorithms to mine hashtags for the tweets
(Yang et al, 2012). In this paper, we adopt a sim-
ple but effective approach: we collect all the hash-
tags in the dataset, and automatically hashtag any
word in a tweet if that word appears hashtagged in
any other tweets. This process resulted in 33,242
tweets automatically labeled with hashtags. For
each tweet, and for each hashtag it contains, we
extract k tweets that contain this hashtag, assum-
ing they are complementary to the target tweet,
and link the k tweets to the target tweet. If there
are more than k tweets found, we choose the top
k ones that are most chronologically close to the
target tweet. The statistics of links can be found in
table 2.
Named entities are some of the most salient fea-
tures in a news article. Directly applying Named
Entity Recognition (NER) tools on news titles or
tweets results in many errors (Liu et al, 2011) due
to the noise in the data, such as slang and capital-
ization. Accordingly, we first apply the NER tool
on news summaries, then label named entities in
the tweets in the same way as labeling the hash-
tags: if there is a string in the tweet that matches
a named entity from the summaries, then it is la-
beled as a named entity in the tweet. 25,132 tweets
are assigned at least one named entity.2 To create
the similar tweet set, we find k tweets that also
contain the named entity.
4.2 Temporal Relations
Tweets published in the same time interval have
a larger chance of being similar than those are
not chronologically close (Wang and McCallum,
2006). However, we cannot simply assume any
two tweets are similar only based on the times-
tamp. Therefore, for a tweet we link it to the
k most similar tweets whose published time is
within 24 hours of the target tweet?s timestamp.
We use the similarity score returned by WTMF
model to measure the similarity of two tweets.
We experimented with other features such as au-
thorship. We note that it was not a helpful feature.
While authorship information helps in the task of
news/tweets recommendation for a user (Corso et
al., 2005; Yan et al, 2012), the authorship infor-
mation is too general for this task where we target
on ?recommending? a news article for a tweet.
4.3 Creating Relations on News
We extract the 3 subgraphs (based on hash-
tags, named entities and temporal) on news ar-
ticles. However, automatically tagging hashtags
or named entities leads to much worse perfor-
mance (around 93% ATOP values, a 3% decrease
from baseline WTMF). There are several reasons
for this: 1. When a hashtag-matched word ap-
pears in a tweet, it is often related to the central
meaning of the tweet, however news articles are
generally much longer than tweets, resulting in
many more hashtags/named entities matches even
though these named entities may not be closely re-
lated. 2. The noise introduced during automatic
NER accumulates much faster given the large
number of named entities in news data. There-
fore we only extract temporal relations for news
articles.
2Note that there are some false positive named entities
detected such as apple. We plan to address removing noisy
named entities and hashtags in future work
242
5 WTMF on Graphs
We propose a novel model to incorporate the links
generated as described in the previous section.
If two texts are connected by a link, it means
they should be semantically similar. In the WTMF
model, we would like the latent vectors of two
text nodes Q?,j1 , Q?,j2 to be as similar as possible,
namely that their cosine similarity to be close to 1.
To implement this, we add a regularization term in
the objective function of WTMF (equation 2) for
each linked pairs Q?,j1 , Q?,j2 :
? ? ( Q?,j1 ?Q?,j2|Q?,j1 ||Q?,j2 |
? 1)2 (3)
where |Q?,j | denotes the length of vectorQ?,j . The
coefficient ? denotes the importance of the text-to-
text links. A larger ? means we put more weights
on the text-to-text links and less on the text-to-
word links. We refer to this model as WTMF-G
(WTMF on graphs).
5.1 Inference
Alternating Least Square [ALS] is used for in-
ference in weighted matrix factorization (Srebro
and Jaakkola, 2003). However, ALS is no longer
applicable here with the new regularization term
(equation 3) involving the length of text vectors
|Q?,j |, which is not in quadratic form. Therefore
we approximate the objective function by treating
the vector length |Q?,j | as fixed values during the
ALS iterations:
P?,i =
(
QW? (i)Q> + ?I
)?1
QW? (i)X?,i
Q?,j =
(
PW? (j)P> + ?I + ?L2(j)Q?,s(j)diag(L2(s(j)))Q>?,s(j)
)?1
(
PW? (j)X>j,? + ?L(j)Q?,s(j)Ln(j)
)
(4)
We define n(j) as the linked neighbors of short
text j, and Q?,n(j) as the set of latent vectors of
j?s neighbors. The reciprocal of length of these
vectors in the current iteration are stored in Ls(j).
Similarly, the reciprocal of the length of the short
text vector Q?,j is Lj . W? (i) = diag(W?,i) is an
M ?M diagonal matrix containing the ith row of
weight matrixW . Due to limited space, the details
of the optimization are not shown in this paper;
they can be found in (Steck, 2010).
6 Experiments
6.1 Experiment Setting
Corpora: We use the same corpora as in (Guo
and Diab, 2012b): Brown corpus (each sentence is
treated as a document), sense definitions of Wik-
tionary and Wordnet (Fellbaum, 1998). The tweets
and news articles are also included in the cor-
pus, generating 441,258 short texts and 5,149,122
words. The data is tokenized, POS-tagged by
Stanford POS tagger (Toutanova et al, 2003),
and lemmatized by WordNet::QueryData.pm. The
value of each word in matrixX is its TF-IDF value
in the short text.
Baselines: We present 4 baselines: 1. Informa-
tion Retrieval model [IR], which simply treats a
tweet as a document, and performs traditional sur-
face word matching. 2. LDA-? with Gibbs Sam-
pling as inference method. We use the inferred
topic distribution ? as a latent vector to represent
the tweet/news. 3. LDA-wvec. The problem with
LDA-? is the inferred topic distribution latent vec-
tor is very sparse with only a few non-zero val-
ues, resulting in many tweet/news pairs receiving
a high similarity value as long as they are in the
same topic domain. Hence following (Guo and
Diab, 2012b), we first compute the latent vector
of a word by P (z|w) (topic distribution per word),
then average the word latent vectors weighted by
TF-IDF values to represent the short text, which
yields much better results. 4. WTMF. In these
baselines, hashtags and named entities are simply
treated as words.
To curtail variation in results due to random-
ness, each reported number is the average of 10
runs. For WTMF and WTMF-G, we assign the
same initial random values and run 20 iterations.
In both systems we fix the missing words weight
as wm = 0.01 and regularization coefficient at
? = 20, which is the best condition of WTMF
found in (Guo and Diab, 2012b; Guo and Diab,
2012c). For LDA-? and LDA-wvec, we run Gibbs
Sampling based LDA for 2000 iterations and aver-
age the model over the last 10 iterations.
Evaluation: The similarity between a tweet and
a news article is measured by cosine similarity. A
news article is represented as the concatenation of
its title and its summary, which yields better per-
formance.3
As in (Guo and Diab, 2012b), for each tweet,
we collect the 1,000 news articles published prior
to the tweet whose dates of publication are clos-
est to that of the tweet. 4 The cosine similarity
3While these are separated, WTMF receive ATOP
95.558% for representing news article as titles and 94.385%
for representing news article as summaries
4Ideally we want to include all the news articles published
243
Models Parameters ATOP TOP10 RRdev test dev test dev test
IR - 90.795% 90.743% 73.478% 74.103% 46.024% 46.281%
LDA-? ? = 0.05, ? = 0.05 81.368% 81.251% 32.328% 31.207% 13.134% 12.469%
LDA-wvec ? = 0.05, ? = 0.05 94.148% 94.196% 53.500% 53.952% 28.743% 27.904%
WTMF - 95.964% 96.092% 75.327% 76.411% 45.310% 46.270%
WTMF-G k = 3, ? = 3 96.450% 96.543% 76.485% 77.479% 47.516% 48.665%
WTMF-G k = 5, ? = 3 96.613% 96.701% 76.029% 77.176% 47.197% 48.189%
WTMF-G k = 4, ? = 3 96.510% 96.610% 77.782% 77.782% 47.917% 48.997%
Table 1: ATOP Performance (latent dimension D = 100 for LDA/WTMF/WTMF-G)
0 1 2 3 4
96
96.2
96.4
96.6
96.8
ATO
P
?
 
 
dev
test
(a) ATOP
0 1 2 3 475
75.5
76
76.5
77
77.5
78
TOP
10
?
 
 
dev
test
(b) TOP10
0 1 2 3 445
46
47
48
49
RR
?
 
 
dev
test
(c) RR
Figure 3: Impact of ? (D = 100, k = 4)
score between the url referred news article and the
tweet is compared against the scores of these 1,000
news articles to calculate the metric scores. 1/10 of
the tweet/news pairs are used as development set,
based on which all the parameters are tuned. The
metrics ATOP, TOP10 and RR are used to evaluate
the performance of systems.
6.2 Results
Table 1 summarizes the performance of the base-
lines and WTMF-G at latent dimension D = 100.
All the parameters are chosen based on the de-
velopment set. For WTMF-G, we try different
values of k (the number of neighbors linked to a
tweet/news for a hashtag/NE/time constraint) and
? (the weight of link information). We choose to
model the links in four subgraphs: (a) hashtags
in tweet; (b) named entities in tweet; (c) time in
tweet; (d) time in news article. For LDA we tune
the hyperparameter ? (Dirichlet prior for topic dis-
tribution of a document) and ? (Dirichlet prior for
word distribution given a topic). It is worth noting
that ATOP measures the overall ranking in 1000
samples while TOP10/RR focus on whether the
aligned news article is in the first few returned re-
sults.
Same as reported in (Guo and Diab, 2012b),
LDA-? has the worst results due to directly using
prior to the tweet, however, that will give a bias to some
tweets, since the latter tweets have a larger candidate set than
the earlier ones
the inferred topic distribution of a text ?. The in-
ferred topic vector has only a few non-zero values,
hence a lot of information is missing. LDA-wvec
preserves more information by creating a dense la-
tent vector from the topic distribution of a word
P (z|w), and thus does much better in ATOP.
It is interesting to see that IR model has a
very low ATOP (90.795%) and an acceptable RR
(46.281%) score, in contrast to LDA-wvec with
a high ATOP (94.148%) and a low RR(27.904%)
score. This is caused by the nature of the two mod-
els. LDA-wvec is able to identify global coarse
grained topic information (such as politics vs. eco-
nomics), hence receiving a high ATOP by exclud-
ing the most irrelevant news articles, however it
does not distinguish fine grained difference such
as Hillary vs. Obama. IR model exerts the oppo-
site influence via word matching. It ranks a cor-
rect news article very high if overlapping words
exist (leading to a high RR), or the news article is
ranked very low if no overlapping words (hence a
low ATOP).
We can conclude WTMF is a very strong base-
line given that it achieves high scores with three
metrics. As a latent variable model, it is able to
capture global topics (+1.89% ATOP over LDA-
wvec); moreover, by explicitly modeling missing
words, the existence of a word is also encoded in
the latent vector (+2.31% TOP10 and ?0.011%
RR over IR model).
244
50 75 100 125 15095
95.5
96
96.5
97
ATO
P
D
 
 
WTMFWTMF?G
(a) ATOP
50 75 100 125 15070
72
74
76
78
80
TOP
10
D
 
 
WTMFWTMF?G
(b) TOP10
50 75 100 125 15040
42
44
46
48
50
RR
D
 
 
WTMFWTMF?G
(c) RR
Figure 4: Impact of latent dimension D (k = 4)
Conditions Links ATOP TOP10 RRdev test dev test dev test
hashtags tweets 375,371 +0.397% +0.379% +1.015% +1.021% +0.504% +0.641%
NE tweets 164,412 +0.141% +0.130% +0.598% +0.479% +0.278% +0.294%
time tweet 139,488 +0.126% +0.136% +0.512% +0.503% +0.241% +0.327%
time news 50,008 +0.036% +0.026% +0.156% +0.256% +1.890% +1.924%
full model (all 4 subgraphs) 573,999 +0.546% +0.518% +1.556% +1.371% +2.607% +2.727%
full model minus hashtags tweets 336,963 +0.288% +0.276% +1.129% +1.037% +2.488% +2.541%
full model minus NE tweets 536,333 +0.528% +0.503% +1.518% +1.393% +2.580% +2.680%
full model minus time tweet 466,207 +0.457% +0.426% +1.281% +1.145% +2.449% +2.554%
full model minus time news 523,991 +0.508% +0.490% +1.300% +1.190% +0.632% +0.785%
author tweet 21,318 +0.043% +0.042% +0.028% +0.057% ?0.003% ?0.017%
full model plus author tweet 593,483 +0.575% +0.545% +1.465% +1.336% +2.415% +2.547%
Table 2: Contribution of subgraphs when D = 100, k = 4, ? = 3 (gain over baseline WTMF)
With WTMF being a very challenging baseline,
WTMF-G can still significantly improve all 3 met-
rics. In the case k = 4, ? = 3 compared to WTMF,
WTMF-G receives +1.371% TOP10, +2.727%
RR, and +0.518% ATOP value (this is a signifi-
cant improvement of ATOP value considering that
it is averaged on 30,000 data points, at an already
high level of 96% reducing error rate by 13%). All
the improvement of WTMF-G over WTMF is sta-
tistically signicant at the 99% condence level with
a two-tailed paired t-test.
We also present results using different number
of links k in WTMF-G in table 1. We experi-
ment with k = {3, 4, 5}. k = 4 is found to
be the optimal value (although k = 5 has a bet-
ter ATOP). Figure 3 demonstrates the impact of
? = {0, 1, 2, 3, 4} on each metric when k = 4.
Note when ? = 0 no link is used, which is the
baseline WTMF. We can see using links is always
helpful. When ? = 4, we receive a higher ATOP
value but lower TOP10 and RR.
Figure 4 illustrates the impact of dimension
D = {50, 75, 100, 125, 150} on WTMF and
WTMF-G (k = 4) on the test set. The trends
hold in different D values with a consistent im-
provement. Generally a larger D leads to a better
performance. In all conditions WTMF-G outper-
forms WTMF.
6.3 Contribution of Subgraphs
We are interested in the contribution of each fea-
ture subgraph. Therefore we list the impact of
individual components in table 2. The impact of
each subgraph is evaluated in two conditions: (a)
the subgraph-only; (b) the full-model-minus the
subgraph. The full model is the combination of the
4 subgraphs (which is also the best model k = 4
in table 1). In the last two rows of table 2 we also
present the results of using authorship only and the
full model plus authorship. The 2nd column lists
the number of links in the subgraph. To highlight
the difference, we report the gain of each model
over the baseline model WTMF.
We have several interesting observations from
table 2. It is clear that the hashtag sub-
graph on tweets is the most useful subgraph:
with hashtag tweet it has the best ATOP and
TOP10 values among subgraph-only condition
(ATOP: +0.379% vs. 2nd best +0.136%, TOP10:
+1.021% vs. 2nd best +0.503%), while in the
full-model-minus condition, minus hashtag has
the lowest ATOP and TOP10. Observing that it
also contains the most links, we believe the cover-
age is another important reason for the great per-
formance.
It seems the named entity subgraph helps the
least. Looking into the extracted named entities
and hashtags, we find many popular named enti-
245
ties are covered by hashtags. That said, adding
named entity subgraph into final model has a pos-
itive contribution.
It is worth noting that the time news subgraph
has the most positive influence on RR. This is be-
cause temporal information is very salient in news
domain: usually there are several reports to de-
scribe an event within a short period, therefore the
news latent vector is strengthened by receiving se-
mantics from its neighbors.
At last, we analyze the influence of author-
ship of tweets. Adding authorship into the full
model greatly hurts the scores of TOP10 and RR,
whereas it is helpful to ATOP. This is understand-
able since by introducing author links between
tweets, to some degree we are averaging the la-
tent vectors of tweets written by the same per-
son. Therefore, for a tweet whose topic is vague
and hard to detect, it will get some prior knowl-
edge of topics through the author links (hence in-
crease ATOP), whereas this prior knowledge be-
comes noise for the tweets that are already handled
very well by the model (hence decrease TOP10
and RR).
6.4 Error Analysis
We look closely into ATOP results to obtain an in-
tuitive feel for what is captured and what is not.
For example, the ATOP score of WTMF for the
tweet-news pair below is 89.9%:
Tweet: ...stoked growing speculation that Pak-
istan?s powerful military was quietly supporting
moves... @declanwalsh
News: Pakistan Supreme Court Orders Arrest of
Prime Minister
By identifying ?Pakistan? and ?Supreme Court?
as hashtags/named entity, WTMF-G is able to
propagate the semantics from the following two
informative tweets to the original tweet, hence
achieving a higher ATOP score of 91.9%.
#Pakistan Supreme Court orders the arrest of the
PM on corruption charges.
A discouraging sign from a tumultuous political
system: Pakistan?s Supreme Court ordered the ar-
rest of PM Ashraf today.
Below is an example that shows the deficiency of
both WTMF and WTMF-G:
Tweet: Another reason to contemplate moving: an
early death
News: America flunks its health exam
In this case WTMF and WTMF-G achieve a
low ATOP of 69.8% and 75.1%, respectively. The
only evidence the latent variable models rely on
is lexical items (WTMF-G extract additional text-
to-text correlation by word matching). To pin-
point the url referred news articles, other advanced
NLP features should be exploited. In this case, we
believe sentiment information could be helpful ?
both tweet and the news article contain a negative
polarity.
7 Related Work
Short Text Semantics: The field of short text se-
mantics has progressed immensely in recent years.
Early work focus on word pair similarity in the
high dimensional space. The word pair similarity
is either knowledge based (Mihalcea et al, 2006;
Tsatsaronis et al, 2010) or corpus based (Li et
al., 2006; Islam and Inkpen, 2008), where co-
occurrence information cannot be efficiently ex-
ploited. Guo and Diab (2012b; 2012a; 2013) show
the superiority of the latent space approach in the
WTMF model achieving state-of-the-art perfor-
mance on two datasets. However, all of them only
reply on text-to-word information. In this paper,
we focus on modeling inter-text relations induced
by Twitter/news features. We extend the WTMF
model and adapt it into tweets modeling, achiev-
ing significantly better results.
Modeling Tweets in a Latent Space: Ramage
et al (2010) also use hashtags to improve the la-
tent representation of tweets in a LDA framework,
Labeled-LDA (Ramage et al, 2009), treating each
hashtag as a label. Similar to the experiments pre-
sented in this paper, the result of using Labeled-
LDA alone is worse than the IR model, due to the
sparseness in the induced LDA latent vector. Jin et
al. (2011) apply an LDA based model on cluster-
ing by incorporating url referred documents. The
semantics of long documents are transferred to the
topic distribution of tweets.
News recommendation: A news recommen-
dation system aims to recommend news articles
to a user based on the features (e.g., key words,
tags, category) in the documents that the user likes
(hence these documents form a training set) (Clay-
pool et al, 1999; Corso et al, 2005; Lee and Park,
2007). Our paper resembles it in searching for a
related news article. However, we target on rec-
ommending news article only based on a tweet,
which is a much smaller context than the set of
favorite documents chosen by a user .
246
Research on Tweets: In (Duan et al, 2010), url
availability is an important feature for tweets rank-
ing. However, the number of tweets with an ex-
plicit url is very limited. Huang et al (2012) pro-
pose a graph-based framework to propagate tweet
ranking scores, where relevant web documents is
found to be helpful to discover informative tweets.
Both work can take advantage of our work to ei-
ther extract potential url features or retrieve topi-
cally similar web documents.
(Sankaranarayanan et al, 2009) aims at captur-
ing tweets that correspond to late breaking news.
However, they cluster tweets and simply choose
a url referred news in those tweets as the related
news for the whole cluster (the urls are visible
to the systems). (Abel et al, 2011) is most re-
lated work to our paper, however their focus is the
user profiling task, therefore they do not provide
a paired tweet/news data set and have to conduct
manual evaluation.
8 Conclusion
We propose a Linking-Tweets-to-News task,
which potentially benefits many NLP applications
where off-the-shelf NLP tools can be applied to
the most relevant news. We also collect a gold
standard dataset by crawling tweets each with a url
referring to a news article. We formalize the link-
ing task as a short text modeling problem, and ex-
tract Twitter/news specific features to extract text-
to-text relations, which are incorporated into a la-
tent variable model. We achieve significant im-
provement over baselines.
Acknowledgements
This work was supported by the U.S. Army Re-
search Laboratory under Cooperative Agreement
No. W911NF- 09-2-0053 (NS-CTA), the U.S.
NSF CAREER Award under Grant IIS-0953149,
the U.S. NSF EAGER Award under Grant No. IIS-
1144111, the U.S. DARPA FA8750-13-2-0041 -
Deep Exploration and Filtering of Text (DEFT)
Program and CUNY Junior Faculty Award. The
views and conclusions contained in this document
are those of the authors and should not be inter-
preted as representing the official policies, either
expressed or implied, of the U.S. Government.
The U.S. Government is authorized to reproduce
and distribute reprints for Government purposes
notwithstanding any copyright notation here on.
References
Fabian Abel, Qi Gao, Geert-Jan Houben, and Ke Tao.
2011. Semantic enrichment of twitter posts for user
profile construction on the social web. In Proceed-
ings of the 49th Annual Meeting of the Association
for Computational Linguistics.
Eneko Agirre, Daniel Cer, Mona Diab, and Aitor
Gonzalez-Agirre. 2012. Semeval-2012 task 6: A
pilot on semantic textual similarity. In First Joint
Conference on Lexical and Computational Seman-
tics (*SEM).
Edward Benson, Aria Haghighi, and Regina Barzilay.
2011. Event discovery in social media feeds. In
Proceedings of the 49th Annual Meeting of the Asso-
ciation for Computational Linguistics: Human Lan-
guage Technologies.
David M. Blei, Andrew Y. Ng, and Michael I. Jordan.
2003. Latent dirichlet alocation. Journal of Ma-
chine Learning Research, 3.
Samuel Brody and Nicholas Diakopoulos. 2011.
Cooooooooooooooollllllllllllll!!!!!!!!!!!!!! using
word lengthening to detect sentiment in microblogs.
In Proceedings of the 2011 Conference on Empirical
Methods in Natural Language Processing.
Mark Claypool, Anuja Gokhale, Tim Miranda, Pavel
Murnikov, Dmitry Netes, and Matthew Sartin. 1999.
Combining content-based and collaborative filters in
an online newspaper. In In Proceedings of the ACM
SIGIR Workshop on Recommender Systems.
Michael Conover, Jacob Ratkiewicz, Matthew Fran-
cisco, Bruno Gonc?alves, Filippo Menczer, and
Alessandro Flammini. 2011. Political polarization
on twitter. In ICWSM.
Gianna M. Del Corso, Antonio Gulli, and Francesco
Romani. 2005. Ranking a stream of news. In
WWW, pages 97?106.
Yajuan Duan, Long Jiang, Tao Qin, Ming Zhou, and
Heung-Yeung Shum. 2010. An empirical study on
learning to rank of tweets. In COLING.
Christiane Fellbaum. 1998. WordNet: An Electronic
Lexical Database. MIT Press.
Weiwei Guo and Mona Diab. 2012a. Learning the la-
tent semantics of a concept by its definition. In Pro-
ceedings of the 50th Annual Meeting of the Associa-
tion for Computational Linguistics.
Weiwei Guo and Mona Diab. 2012b. Modeling sen-
tences in the latent space. In Proceedings of the
50th Annual Meeting of the Association for Compu-
tational Linguistics.
Weiwei Guo and Mona Diab. 2012c. Weiwei: A sim-
ple unsupervised latent semantics based approach
for sentence similarity. In First Joint Conference on
Lexical and Computational Semantics (*SEM).
247
Weiwei Guo and Mona Diab. 2013. Improving lexical
semantics for sentential semantics: Modeling selec-
tional preference and similar words in a latent vari-
able model. In The 2013 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies.
Hongzhao Huang, Arkaitz Zubiaga, Heng Ji, Hongbo
Deng, Dong Wang, Hieu Le, Tarek Abdelzather, Ji-
awei Han, Alice Leung, John Hancock, and Clare
Voss. 2012. Tweet ranking based on heterogeneous
networks. In Proceedings of the 24th International
Conference on Computational Linguistics.
Aminul Islam and Diana Inkpen. 2008. Semantic text
similarity using corpus-based word similarity and
string similarity. ACM Transactions on Knowledge
Discovery from Data, 2.
Heng Ji and Ralph Grishman. 2008. Refining event ex-
traction through cross-document inference. In Pro-
ceedings of ACL-08: HLT.
Long Jiang, Mo Yu, Ming Zhou, Xiaohua Liu, and
Tiejun Zhao. 2011. Target-dependent twitter sen-
timent classification. In Proceedings of the 49th An-
nual Meeting of Association for Computational Lin-
guistics.
Ou Jin, Nathan N. Liu, Kai Zhao, Yong Yu, and Qiang
Yang. 2011. Transferring topical knowledge from
auxiliary long texts for short text clustering. In Pro-
ceedings of the 20th ACM international conference
on Information and knowledge management.
Thomas K Landauer, Peter W. Foltz, and Darrell La-
ham. 1998. An introduction to latent semantic anal-
ysis. Discourse Processes, 25.
H. J. Lee and Sung Joo Park. 2007. Moners: A
news recommender for the mobile web. Expert Syst.
Appl., 32(1):143?150.
Yuhua Li, David McLean, Zuhair A. Bandar, James D.
O?Shea, and Keeley Crockett. 2006. Sentence simi-
larity based on semantic nets and corpus statistics.
IEEE Transaction on Knowledge and Data Engi-
neering, 18.
Hao Li, Yu Chen, Heng Ji, Smaranda Muresan, and
Dequan Zheng. 2012. Combining social cognitive
theories with linguistic features for multi-genre sen-
timent analysis. In In Proceedings of the 26th Pa-
cific Asia Conference on Language, Information and
Computation.
Xiaohua Liu, Shaodian Zhang, Furu Wei, and Ming
Zhou. 2011. Recognizing named entities in tweets.
In The Semanic Web: Research and Applications.
Andrew L. Maas, Raymond E. Daly, Peter T. Pham,
Dan Huang, Andrew Y. Ng, and Christopher Potts.
2011. Learning word vectors for sentiment analysis.
In Proceedings of the 49th Annual Meeting of the
Association for Computational Linguistics: Human
Language Technologies.
Rada Mihalcea, Courtney Corley, and Carlo Strappa-
rava. 2006. Corpus-based and knowledge-based
measures of text semantic similarity. In Proceed-
ings of the 21st National Conference on Articial In-
telligence.
Bo Pang and Lillian Lee. 2004. A sentimental educa-
tion: Sentiment analysis using subjectivity summa-
rization based on minimum cuts. In Proceedings of
the 42nd Meeting of the Association for Computa-
tional Linguistics.
Bo Pang and Lillian Lee. 2005. Seeing stars: Exploit-
ing class relationships for sentiment categorization
with respect to rating scales. In Proceedings of the
43rd Annual Meeting of the Association for Compu-
tational Linguistics.
Daniel Ramage, David Hall, Ramesh Nallapati, and
Christopher D. Manning. 2009. Labeled lda: A su-
pervised topic model for credit attribution in multi-
labeled corpora. In Proceedings of the 2009 Con-
ference on Empirical Methods in Natural Language
Processing.
Daniel Ramage, Susan Dumais, and Dan Liebling.
2010. Characterizing microblogs with topic mod-
els. In Proceedings of the Fourth International AAAI
Conference on Weblogs and Social Media.
Jagan Sankaranarayanan, Hanan Samet, Benjamin E.
Teitler, Michael D. Lieberman, and Jon Sperling.
2009. Twitterstand: news in tweets. In Proceedings
of the 17th ACM SIGSPATIAL International Confer-
ence on Advances in Geographic Information Sys-
tems.
Richard Socher, Eric H. Huang, Jeffrey Pennington,
Andrew Y. Ng, and Christopher D. Manning. 2011.
Dynamic pooling and unfolding recursive autoen-
coders for paraphrase detection. In Proceedings
of Advances in Neural Information Processing Sys-
tems.
Michael Speriosui, Nikita Sudan, Sid Upadhyay, and
Jason Baldridge. 2011. Twitter polarity classifica-
tion with label propagation over lexical links and the
follower graph. In Proceedings of the 2011 Con-
ference on Empirical Methods in Natural Language
Processing.
Nathan Srebro and Tommi Jaakkola. 2003. Weighted
low-rank approximations. In Proceedings of the
Twentieth International Conference on Machine
Learning.
Harald Steck. 2010. Training and testing of rec-
ommender systems on data missing not at random.
In Proceedings of the 16th ACM SIGKDD Inter-
national Conference on Knowledge Discovery and
Data Mining.
Kristina Toutanova, Dan Klein, Christopher D. Man-
ning, and Yoram Singer. 2003. Feature-rich part-of-
speech tagging with a cyclic dependency network.
In HLT-NAACL.
248
George Tsatsaronis, Iraklis Varlamis, and Michalis
Vazirgiannis. 2010. Text relatedness based on a
word thesaurus. Journal of Articial Intelligence Re-
search, 37.
Andranik Tumasjan, Timm Oliver Sprenger, Philipp G.
Sandner, and Isabell M. Welpe. 2010. Predicting
elections with twitter: What 140 characters reveal
about political sentiment. In ICWSM.
Xuerui Wang and Andrew McCallum. 2006. Top-
ics over time: a non-markov continuous-time model
of topical trends. In In Proceedings of the 12th
ACM SIGKDD international conference on Knowl-
edge discovery and data mining.
Rui Yan, Mirella Lapata, and Xiaoming Li. 2012.
Tweet recommendation with graph co-ranking. In
Proceedings of the 24th International Conference on
Computational Linguistics.
Lei Yang, Tao Sun, Ming Zhang, and Qiaozhu Mei.
2012. We know what @you #tag: does the dual role
affect hashtag adoption? In Proceedings of the 21st
international conference on World Wide Web.
249
Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 495?500,
Baltimore, Maryland, USA, June 23-25 2014.
c?2014 Association for Computational Linguistics
Two-Stage Hashing for Fast Document Retrieval
Hao Li
?
Wei Liu
?
Heng Ji
?
?
Computer Science Department,
Rensselaer Polytechnic Institute, Troy, NY, USA
{lih13,jih}@rpi.edu
?
IBM T. J. Watson Research Center, Yorktown Heights, NY, USA
weiliu@us.ibm.com
Abstract
This work fulfills sublinear time Near-
est Neighbor Search (NNS) in massive-
scale document collections. The primary
contribution is to propose a two-stage
unsupervised hashing framework which
harmoniously integrates two state-of-the-
art hashing algorithms Locality Sensitive
Hashing (LSH) and Iterative Quantization
(ITQ). LSH accounts for neighbor candi-
date pruning, while ITQ provides an ef-
ficient and effective reranking over the
neighbor pool captured by LSH. Further-
more, the proposed hashing framework
capitalizes on both term and topic similar-
ity among documents, leading to precise
document retrieval. The experimental re-
sults convincingly show that our hashing
based document retrieval approach well
approximates the conventional Informa-
tion Retrieval (IR) method in terms of re-
trieving semantically similar documents,
and meanwhile achieves a speedup of over
one order of magnitude in query time.
1 Introduction
A Nearest Neighbor Search (NNS) task aims at
searching for top K objects (e.g., documents)
which are most similar, based on pre-defined sim-
ilarity metrics, to a given query object in an ex-
isting dataset. NNS is essential in dealing with
many search related tasks, and also fundamen-
tal to a broad range of Natural Language Pro-
cessing (NLP) down-stream problems including
person name spelling correction (Udupa and Ku-
mar, 2010), document translation pair acquisition
(Krstovski and Smith, 2011), large-scale similar
noun list generation (Ravichandran et al, 2005),
lexical variants mining (Gouws et al, 2011), and
large-scale first story detection (Petrovic et al,
2010).
Hashing has recently emerged to be a popular
solution to tackling fast NNS, and been success-
fully applied to a variety of non-NLP problems
such as visual object detection (Dean et al, 2013)
and recognition (Torralba et al, 2008a; Torralba
et al, 2008b), large-scale image retrieval (Kulis
and Grauman, 2012; Liu et al, 2012; Gong et al,
2013), and large-scale machine learning (Weiss et
al., 2008; Liu et al, 2011; Liu, 2012). However,
hashing has received limited attention in the NLP
field to the date. The basic idea of hashing is to
represent each data object as a binary code (each
bit of a code is one digit of ?0? or ?1?). When
applying hashing to handle NLP problems, the ad-
vantages are two-fold: 1) the capability to store
a large quantity of documents in the main mem-
ory. for example, one can store 250 million doc-
uments with 1.9G memory using only 64 bits for
each document while a large news corpus such as
the English Gigaword fifth edition
1
stores 10 mil-
lion documents in a 26G hard drive; 2) the time
efficiency of manipulating binary codes, for ex-
ample, computing the hamming distance between
a pair of binary codes is several orders of magni-
tude faster than computing the real-valued cosine
similarity over a pair of document vectors.
The early explorations of hashing focused on
using random permutations or projections to con-
struct randomized hash functions, e.g., the well-
known Min-wise Hashing (MinHash) (Broder et
al., 1998) and Locality Sensitive Hashing (LSH)
(Andoni and Indyk, 2008). In contrast to such
data-independent hashing schemes, recent re-
search has been geared to studying data-dependent
hashing through learning compact hash codes
from a training dataset. The state-of-the-art unsu-
pervised learning-based hashing methods include
Spectral Hashing (SH) (Weiss et al, 2008), An-
chor Graph Hashing (AGH) (Liu et al, 2011),
and Iterative Quantization (ITQ) (Gong et al,
1
http://catalog.ldc.upenn.edu/LDC2011T07
495
2013), all of which endeavor to make the learned
hash codes preserve or reveal some intrinsic struc-
ture, such as local neighborhood structure, low-
dimensional manifolds, or the closest hypercube,
underlying the training data. Despite achieving
data-dependent hash codes, most of these ?learn-
ing to hash? methods cannot guarantee a high suc-
cess rate of looking a query code up in a hash ta-
ble (referred to as hash table lookup in literature),
which is critical to the high efficacy of exploit-
ing hashing in practical uses. It is worth noting
that we choose to use ITQ in the proposed two-
stage hashing framework for its simplicity and ef-
ficiency. ITQ has been found to work better than
SH by Gong et al (2013), and be more efficient
than AGH in terms of training time by Liu (2012).
To this end, in this paper we propose a novel
two-stage unsupervised hashing framework to si-
multaneously enhance the hash lookup success
rate and increase the search accuracy by integrat-
ing the advantages of both LSH and ITQ. Further-
more, we make the hashing framework applicable
to combine different similarity measures in NNS.
2 Background and Terminology
? Binary Codes: A bit (a single bit is ?0? or
?1?) sequence assigned to represent a data
object. For example, represent a document
as a 8-bit code ?11101010?.
? Hash Table: A linear table in which all bi-
nary codes of a data set are arranged to be
table indexes, and each table bucket contains
the IDs of the data items sharing the same
code.
? Hamming Distance: The number of bit po-
sitions in which bits of the two codes differ.
? Hash Table Lookup: Given a query q with
its binary code h
q
, find the candidate neigh-
bors in a hash table such that the Hamming
distances from their codes to h
q
are no more
than a small distance threshold . In practice
 is usually set to 2 to maintain the efficiency
of table lookups.
? Hash Table Lookup Success Rate: Given a
query q with its binary code h
q
, the probabil-
ity to find at least one neighbor in the table
buckets whose corresponding codes (i.e., in-
dexes) are within a Hamming ball of radius 
centered at h
q
.
? Hamming Ranking: Given a query q with
its binary code h
q
, rank all data items accord-
ing to the Hamming distances between their
codes and h
q
; the smaller the Hamming dis-
tance, the higher the data item is ranked.
3 Document Retrieval with Hashing
In this section, we first provide an overview of ap-
plying hashing techniques to a document retrieval
task, and then introduce two unsupervised hash-
ing algorithms: LSH acts as a neighbor-candidate
filter, while ITQ works towards precise reranking
over the candidate pool returned by LSH.
3.1 Document Retrieval
The most traditional way of retrieving nearest
neighbors for documents is to represent each docu-
ment as a term vector of which each element is the
tf-idf weight of a term. Given a query document
vector q, we use the Cosine similarity measure to
evaluate the similarity between q and a document
x in a dataset:
sim(q,x) =
q
>
x
?q??x?
. (1)
Then the traditional document retrieval method
exhaustively scans all documents in the dataset
and returns the most similar ones. However, such
a brute-force search does not scale to massive
datasets since the search time complexity for each
query is O(n); additionally, the computational
cost spent on Cosine similarity calculation is also
nontrivial.
3.2 Locality Sensitive Hashing
The core idea of LSH is that if two data points are
close, then after a ?projection? operation they will
remain close. In other words, similar data points
are more likely to be mapped into the same bucket
with a high collision probability. In a typical LSH
setting of k bits and L hash tables, a query point
q ? R
d
and a dataset point x ? R
d
collide if and
only if
h
ij
(q) ? h
ij
(x), i ? [1 : L], j ? [1 : k], (2)
where the hash function h
ij
(?) is defined as
h
ij
(x) = sgn
(
w
>
ij
x
)
, (3)
in which w
ij
? R
d
is a random projection di-
rection with components being independently and
identically drawn from a normal distribution, and
the sign function sgn(x) returns 1 if x > 0 and -1
otherwise. Note that we use ?1/-1? bits for deriva-
tions and training, and ?1/0? bits for the hashing
496
implementation including converting data to bi-
nary codes, arranging binary codes into hash ta-
bles, and hash table lookups.
3.3 Iterative Quantization
The central idea of ITQ is to learn the binary codes
achieving the lowest quantization error that en-
coding raw data to binary codes incurs. This is
pursued by seeking a rotation of the zero-centered
projected data. Suppose that a set of n data points
X = {x
i
? R
d
}
n
i=1
are provided. The data matrix
is defined as X = [x
1
,x
2
, ? ? ? ,x
n
]
>
? R
n?d
.
In order to reduce the data dimension from d to
the desired code length c < d, Principal Compo-
nent Analysis (PCA) or Latent Semantic Analy-
sis (LSA) is first applied to X. We thus obtain
the zero-centered projected data matrix as V =
(I ?
1
n
11
>
)XU where U ? R
d?c
is the projec-
tion matrix.
After the projection operation, ITQ minimizes
the quantization error as follows
Q(B,R) = ?B?VR?
2
F
, (4)
where B ? {1,?1}
n?c
is the code matrix each
row of which contains a binary code, R ? R
c?c
is the target orthogonal rotation matrix, and ? ? ?
F
denotes the Frobenius norm. Finding a local min-
imum of the quantization error in Eq. (4) begins
with a random initialization of R, and then em-
ploys a K-means clustering like iterative proce-
dure. In each iteration, each (projected) data point
is assigned to the nearest vertex of the binary hy-
percube, and R always satisfying RR
>
= I is
subsequently updated to minimize the quantiza-
tion loss given the current assignment; the two
steps run alternatingly until a convergence is en-
countered. Concretely, the two updating steps are:
1. Fix R and update B: minimize the follow-
ing quantization loss
Q(B,R) = ?B?
2
F
+ ?VR?
2
F
? 2tr
(
R
>
V
>
B
)
= nc+ ?V?
2
F
? 2tr
(
R
>
V
>
B
)
= constant? 2tr
(
R
>
V
>
B
)
,
(5)
achieving B = sgn(VR);
2. Fix B and update R: perform the SVD of
the matrix V
>
B ? R
c?c
to obtain V
>
B =
S?
?
S
>
, and then set R = S
?
S
>
.
Figure 1: The two-stage hashing framework.
3.4 Two-Stage Hashing
There are three main merits of LSH. (1) It tries to
preserve the Cosine similarity of the original data
with a probabilistic guarantee (Charikar, 2002).
(2) It is training free, and thus very efficient in
hashing massive databases to binary codes. (3) It
has a very high hash table lookup success rate. For
example, in our experiments LSH with more than
one hash table is able to achieve a perfect 100%
hash lookup success rate. Unfortunately, its draw-
back is the low search precision that is observed
even with long hash bits and multiple hash tables.
ITQ tries to minimize the quantization error of
encoding data to binary codes, so its advantage
is the high quality (potentially high precision of
Hamming ranking) of the produced binary codes.
Nevertheless, ITQ frequently suffers from a poor
hash lookup success rate when longer bits (e.g.,
? 48) are used (Liu, 2012). For example, in
our experiments ITQ using 384 bits has a 18.47%
hash lookup success rate within Hamming radius
2. Hence, Hamming ranking (costing O(n) time)
must be invoked for the queries for which ITQ
fails to return any neighbors via hash table lookup,
which makes the searches inefficient especially on
very large datasets.
Taking into account the above advantages and
disadvantages of LSH and ITQ, we propose a two-
stage hashing framework to harmoniously inte-
grate them. Fig. 1 illustrates our two-stage frame-
work with a toy example where identical shapes
denote ground-truth nearest neighbors.
In this framework, LSH accounts for neigh-
bor candidate pruning, while ITQ provides an ef-
ficient and effective reranking over the neighbor
pool captured by LSH. To be specific, the pro-
497
posed framework enjoys two advantages:
1. Provide a simple solution to accomplish both
a high hash lookup success rate and high precision,
which does not require scanning the whole list of
the ITQ binary codes but scanning the short list
returned by LSH hash table lookup. Therefore, a
high hash lookup success rate is attained by the
LSH stage, while maintaining high search preci-
sion due to the ITQ reranking stage.
2. Enable a hybrid hashing scheme combining
two similarity measures. The term similarity is
used during the LSH stage that directly works
on document tf-idf vectors; during the ITQ stage,
the topic similarity is used since ITQ works on
the topic vectors obtained by applying Latent se-
mantic analysis (LSA) (Deerwester et al, 1990)
to those document vectors. LSA (or PCA), the
first step in running ITQ, can be easily acceler-
ated via a simple sub-selective sampling strategy
which has been proven theoretically and empiri-
cally sound by Li et al (2014). As a result, the
nearest neighbors returned by the two-stage hash-
ing framework turns out to be both lexically and
topically similar to the query document. To sum-
marize, the proposed two-stage hashing frame-
work works in an unsupervised manner, achieves a
sublinear search time complexity due to LSH, and
attains high search precision thanks to ITQ. After
hashing all data (documents) to LSH and ITQ bi-
nary codes, we do not need to save the raw data in
memory. Thus, our approach can scale to gigan-
tic datasets with compact storage and fast search
speed.
4 Experiments
Data and Evaluations
For the experiments, we use the English portion
of the standard TDT-5 dataset, which consists of
278, 109 documents from a time spanning April
2003 to September 2003. 126 topics are anno-
tated with an average of 51 documents per topic,
and other unlabeled documents are irrelevant to
them. We select six largest topics for the top-K
NNS evaluation, with each including more than
250 documents. We randomly select 60 docu-
ments from each of the six topics for testing. The
six topics are (1). Bombing in Riyadh, Saudi Ara-
bia (2). Mad cow disease in North America (3).
Casablanca bombs (4). Swedish Foreign Minister
killed (5). Liberian former president arrives in ex-
ile and (6). UN official killed in attack. For each
document, we apply the Stanford Tokenizer
2
for
tokenization; remove stopwords based on the stop
list from InQuery (Callan et al, 1992), and apply
Porter Stemmer (Porter, 1980) for stemming.
If one retrieved document shares the same topic
label with the query document, they are true neigh-
bors. We evaluate the precision of the top-K candi-
date documents returned by each method and cal-
culate the average precision across all queries.
Results
We first evaluate the quality of term vectors and
ITQ binary codes by conducting the whole list
Cosine similarity ranking and hamming distance
ranking, respectively. For each query document,
the top-K candidate documents with highest Co-
sine similarity scores and shortest hamming dis-
tances are returned, then we calculate the average
precision for each K. Fig. 2(a) demonstrates that
ITQ binary codes could preserve document simi-
larities as traditional term vectors. It is interesting
to notice that ITQ binary codes are able to outper-
form traditional term vectors. It is mainly because
some documents are topically related but share
few terms thus their relatedness can be captured by
LSA. Fig. 2(a) also shows that the NNS precision
keep increasing as longer ITQ code length is used
and is converged when ITQ code length equals to
384 bits. Therefore we set ITQ code length as 384
bits in the rest of the experiments.
Fig. 2(b) - Fig. 2(e) show that our two-stage
hashing framework surpasses LSH with a large
margin for both small K (e.g., K ? 10) and
large K (e.g., K ? 100) in top-K NNS. It also
demonstrates that our hashing based document re-
trieval approach with only binary codes from LSH
and ITQ well approximates the conventional IR
method. Another crucial observation is that with
ITQ reranking, a small number of LSH hash ta-
bles is needed in the pruning step. For example,
LSH(40bits) + ITQ(384bits) and LSH(48bits) +
ITQ(384bits) are able to reach convergence with
only four LSH hash tables. In that case, we can
alleviate one main drawback of LSH as it usually
requires a large number of hash tables to maintain
the hashing quality.
Since the LSH pruning time can be ignored,
the search time of the two-stage hashing scheme
equals to the time of hamming distance rerank-
ing in ITQ codes for all candidates produced from
LSH pruning step, e.g., LSH(48bits, 4 tables) +
2
http://nlp.stanford.edu/software/corenlp.shtml
498
(a)
0 50 100 150
0.65
0.7
0.75
0.8
0.85
0.9
0.95
number of top?K returned documents
Precis
ion
 
 Traditional IRITQ(448bits)ITQ(384bits)ITQ(320bits)ITQ(256bits)ITQ(192bits)
(b)
1 2 3 4 5 6 7 8 9 100
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
0.45
0.5
number of hash tables
Top?1
0 Prec
ision
 
 LSH(64bits)LSH(56bits)LSH(48bits)LSH(40bits)
(c)
1 2 3 4 5 6 7 8 9 100.45
0.5
0.55
0.6
0.65
0.7
0.75
0.8
number of hash tables
Top?1
0 Prec
ision
 
 
Traditional IRLSH(40bits)+ITQ(384bits)LSH(48bits)+ITQ(384bits)LSH(56bits)+ITQ(384bits)LSH(64bits)+ITQ(384bits)
(d)
1 2 3 4 5 6 7 8 9 100
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0.16
0.18
0.2
number of hash tables
Top?1
00 Pre
cision
 
 LSH(64bits)LSH(56bits)LSH(48bits)LSH(40bits)
(e)
1 2 3 4 5 6 7 8 9 100.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
number of hash tables
Top?1
00 Pre
cision
 
 
Traditional IRLSH(40bits)+ITQ(384bits)LSH(48bits)+ITQ(384bits)LSH(56bits)+ITQ(384bits)LSH(64bits)+ITQ(384bits)
(f)
1 2 3 4 5 6 7 8 9 100
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
number of hash tables
Perce
ntage
 
 LSH(40bits)LSH(48bits)LSH(56bits)LSH(64bits)
Figure 2: (a) ITQ code quality for different code length, (b) LSH Top-10 Precision, (c) LSH +
ITQ(384bits) Top-10 Precision, (d) LSH Top-100 Precision, (e) LSH + ITQ(384bits) Top-100 Precision,
(f) The percentage of visited data samples by LSH hash lookup.
ITQ(384bits) takes only one thirtieth of the search
time as the traditional IR method. Fig. 2 (f)
shows the ITQ data reranking percentage for dif-
ferent LSH bit lengths and table numbers. As the
LSH bit length increases or the hash table num-
ber decreases, a lower percentage of the candidates
will be selected for reranking, and thus costs less
search time.
The percentage of visited data samples by LSH
hash lookup is a key factor that influence the
NNS precision in the two-stage hashing frame-
work. Generally, higher rerank percentage results
in better top-K NNS Precision. Further more, by
comparing Fig. 2 (c) and (e), it shows that our
framework works better for small K than for large
K. For example, scanning 5.52% of the data is
enough for achieving similar top-10 NNS result
as the traditional IR method while 36.86% of the
data is needed for top-100 NNS. The reason of the
lower performance with large K is that some true
neighbors with the same topic label do not share
high term similarities and may be filtered out in
the LSH step when the rerank percentage is low.
5 Conclusion
In this paper, we proposed a novel two-stage un-
supervised hashing framework for efficient and ef-
fective nearest neighbor search in massive docu-
ment collections. The experimental results have
shown that this framework achieves not only com-
parable search accuracy with the traditional IR
method in retrieving semantically similar docu-
ments, but also an order of magnitude speedup in
search time. Moreover, our approach can com-
bine two similarity measures in a hybrid hashing
scheme, which is beneficial to comprehensively
modeling the document similarity. In our future
work, we plan to design better data representa-
tion which can well fit into the two-stage hash-
ing theme; we also intend to apply the proposed
hashing approach to more informal genres (e.g.,
tweets) and other down-stream NLP applications
(e.g., first story detection).
Acknowledgements
This work was supported by the U.S. ARL
No. W911NF-09-2-0053 (NSCTA), NSF IIS-
0953149, DARPA No. FA8750- 13-2-0041, IBM,
Google and RPI. The views and conclusions con-
tained in this document are those of the authors
and should not be interpreted as representing the
official policies, either expressed or implied, of the
U.S. Government. The U.S. Government is autho-
rized to reproduce and distribute reprints for Gov-
ernment purposes notwithstanding any copyright
notation here on.
499
References
A. Andoni and P. Indyk. 2008. Near-optimal hash-
ing algorithms for approximate nearest neighbor in
high dimensions. Communications of the ACM,
51(1):117?122.
A. Z. Broder, M. Charikar, A. M. Frieze, and
M. Mitzenmacher. 1998. Min-wise independent
permutations. In Proc. STOC.
J. P. Callan, W. B. Croft, and S. M. Harding. 1992. The
inquery retrieval system. In Proc. the Third Interna-
tional Conference on Database and Expert Systems
Applications.
M. Charikar. 2002. Similarity estimation techniques
from rounding algorithms. In Proc. STOC.
T. Dean, M. A. Ruzon, M. Segal, J. Shlens, S. Vijaya-
narasimhan, and J. Yagnik. 2013. Fast, accurate
detection of 100,000 object classes on a single ma-
chine. In Proc. CVPR.
S. C. Deerwester, S. T. Dumais, T. K. Landauer, G. W.
Furnas, and R. A. Harshman. 1990. Indexing by
latent semantic analysis. JASIS, 41(6):391?407.
Y. Gong, S. Lazebnik, A. Gordo, and F. Perronnin.
2013. Iterative quantization: A procrustean ap-
proach to learning binary codes for large-scale im-
age retrieval. IEEE Transactions on Pattern Analy-
sis and Machine Intelligence, 35(12):2916?2929.
S. Gouws, D. Hovy, and D. Metzler. 2011. Unsuper-
vised mining of lexical variants from noisy text. In
Proc. EMNLP.
K. Krstovski and D. A. Smith. 2011. A minimally su-
pervised approach for detecting and ranking docu-
ment translation pairs. In Proc. the sixth ACL Work-
shop on Statistical Machine Translation.
B. Kulis and K. Grauman. 2012. Kernelized locality-
sensitive hashing. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 34(6):1092?
1104.
Y. Li, C. Chen, W. Liu, and J. Huang. 2014. Sub-
selective quantization for large-scale image search.
In Proc. AAAI Conference on Artificial Intelligence
(AAAI).
W. Liu, J. Wang, S. Kumar, and S.-F. Chang. 2011.
Hashing with graphs. In Proc. ICML.
W. Liu, J. Wang, R. Ji, Y.-G. Jiang, and S.-F. Chang.
2012. Supervised hashing with kernels. In Proc.
CVPR.
W. Liu. 2012. Large-scale machine learning for classi-
fication and search. In PhD Thesis, Graduate School
of Arts and Sciences, Columbia University.
S. Petrovic, M. Osborne, and V. Lavrenko. 2010.
Streaming first story detection with application to
twitter. In Proc. HLT-NAACL.
M. F. Porter. 1980. An algorithm for suffix stripping.
Program, 14(3):130?137.
D. Ravichandran, P. Pantel, and E. H. Hovy. 2005.
Randomized algorithms and nlp: Using locality sen-
sitive hash functions for high speed noun clustering.
In Proc. ACL.
A. Torralba, R. Fergus, and W. T. Freeman. 2008a. 80
million tiny images: A large data set for nonpara-
metric object and scene recognition. IEEE Transac-
tions on Pattern Analysis and Machine Intelligence,
30(11):1958?1970.
A. Torralba, R. Fergus, and Y. Weiss. 2008b. Small
codes and large image databases for recognition. In
Proc. CVPR.
R. Udupa and S. Kumar. 2010. Hashing-based ap-
proaches to spelling correction of personal names.
In Proc. EMNLP.
Y. Weiss, A. Torralba, and R. Fergus. 2008. Spectral
hashing. In NIPS 21.
500
Cross-lingual Slot Filling from Comparable Corpora
Matthew Snover, Xiang Li, Wen-Pin Lin, Zheng Chen, Suzanne Tamang,
Mingmin Ge, Adam Lee, Qi Li, Hao Li, Sam Anzaroot, Heng Ji
Computer Science Department
Queens College and Graduate Center
City University of New York
New York, NY 11367, USA
msnover@qc.cuny.edu, hengji@cs.qc.cuny.edu
Abstract
This paper introduces a new task of
crosslingual slot filling which aims to dis-
cover attributes for entity queries from
crosslingual comparable corpora and then
present answers in a desired language. It is
a very challenging task which suffers from
both information extraction and machine
translation errors. In this paper we ana-
lyze the types of errors produced by five
different baseline approaches, and present
a novel supervised rescoring based valida-
tion approach to incorporate global evi-
dence from very large bilingual compara-
ble corpora. Without using any additional
labeled data this new approach obtained
38.5% relative improvement in Precision
and 86.7% relative improvement in Recall
over several state-of-the-art approaches.
The ultimate system outperformed mono-
lingual slot filling pipelines built on much
larger monolingual corpora.
1 Introduction
The slot filling task at NIST TAC Knowledge
Base Population (KBP) track (Ji et al, 2010)
is a relatively new and popular task with the
goal of automatically building profiles of enti-
ties from large amounts of unstructured data,
and using these profiles to populate an existing
knowledge base. These profiles consist of nu-
merous slots such as ?title?, ?parents? for per-
sons and ?top-employees? for organizations. A
variety of approaches have been proposed to ad-
dress both tasks with considerable success; nev-
ertheless, all of the KBP tasks so far have been
limited to monolingual processing. However, as
the shrinking fraction of the world?s Web pages
are written in English, many slot fills can only
be discovered from comparable documents in
foreign languages. By comparable corpora we
mean texts that are about similar topics, but
are not in general translations of each other.
These corpora are naturally available, for ex-
ample, many news agencies release multi-lingual
news articles on the same day. In this paper we
propose a new and more challenging crosslin-
gual slot filling task, to find information for any
English query from crosslingual comparable cor-
pora, and then present its profile in English.
We developed complementary baseline ap-
proaches which combine two difficult problems:
information extraction (IE) and machine trans-
lation (MT). In this paper we conduct detailed
error analysis to understand how we can exploit
comparable corpora to construct more complete
and accurate profiles.
Many correct answers extracted from our
baselines will be reported multiple times in any
external large collection of comparable docu-
ments. We can thus take advantage of such in-
formation redundancy to rescore candidate an-
swers. To choose the best answers we consult
large comparable corpora and corresponding IE
results. We prefer those answers which fre-
quently appear together with the query in cer-
tain IE contexts, including co-occurring names,
coreference links, relations and events. For ex-
ample, we prefer ?South Korea? instead of ?New
York Stock Exchange? as the ?per:employee of ?
answer for ?Roh Moo-hyun? using global ev-
idence from employment relation extraction.
Such global knowledge from comparable corpora
110
Proceedings of the 4th Workshop on Building and Using Comparable Corpora, pages 110?119,
49th Annual Meeting of the Association for Computational Linguistics,
Portland, Oregon, 24 June 2011. c?2011 Association for Computational Linguistics
provides substantial improvement over each in-
dividual baseline system and even state-of-the-
art monolingual slot filling systems. Compared
to previous methods of exploiting comparable
corpora, our approach is novel in multiple as-
pects because it exploits knowledge from: (1)
both local and global statistics; (2) both lan-
guages; and (3) both shallow and deep analysis.
2 Related Work
Sudo et al (2004) found that for a crosslin-
gual single-document IE task, source language
extraction and fact translation performed no-
tably better than machine translation and tar-
get language extraction. We observed the same
results. In addition we also demonstrate that
these two approaches are complementary and
can be used to boost each other?s results in a
statistical rescoring model with global evidence
from large comparable corpora.
Hakkani-Tur et al (2007) described a filtering
mechanism using two crosslingual IE systems
for improving crosslingual document retrieval.
Many previous validation methods for crosslin-
gual QA, such as those organized by Cross Lan-
guage Evaluation Forum (Vallin et al, 2005), fo-
cused on local information which involves only
the query and answer (e.g. (Kwork and Deng,
2006)), keyword translation (e.g. (Mitamura et
al., 2006)) and surface patterns (e.g. (Soubbotin
and Soubbotin, 2001)). Some global valida-
tion approaches considered information redun-
dancy based on shallow statistics including co-
occurrence, density score and mutual informa-
tion (Clarke et al, 2001; Magnini et al, 2001;
Lee et al, 2008), deeper knowledge from depen-
dency parsing (e.g. (Shen et al, 2006)) or logic
reasoning (e.g. (Harabagiu et al, 2005)). How-
ever, all of these approaches made limited efforts
at disambiguating entities in queries and limited
use of fact extraction in answer search and vali-
dation.
Several recent IE studies have stressed the
benefits of using information redundancy on
estimating the correctness of the IE out-
put (Downey et al, 2005; Yangarber, 2006;
Patwardhan and Riloff, 2009; Ji and Grish-
man, 2008). Some recent research used com-
parable corpora to re-score name translitera-
tions (Sproat et al, 2006; Klementiev and Roth,
2006) or mine new word translations (Fung and
Yee, 1998; Rapp, 1999; Shao and Ng, 2004; Tao
and Zhai, 2005; Hassan et al, 2007; Udupa et
al., 2009; Ji, 2009). To the best of our knowl-
edge, this is the first work on mining facts from
comparable corpora for answer validation in a
new crosslingual entity profiling task.
3 Experimental Setup
3.1 Task Definition
The goal of the KBP slot filling task is to extract
facts from a large source corpus regarding cer-
tain attributes (?slots?) of an entity, which may
be a person or organization, and use these facts
to augment an existing knowledge base (KB).
Along with each slot answer, the system must
provide the ID of a document which supports
the correctness of this answer. KBP 2010 (Ji et
al., 2010) defines 26 types of attributes for per-
sons (such as the age, birthplace, spouse, chil-
dren, job title, and employing organization) and
16 types of attributes for organizations (such
as the top employees, the founder, the year
founded, the headquarters location, and the sub-
sidiaries).
The new problem we define in this paper is an
extension of this task to a crosslingual paradigm.
Given a query in a target language t and a col-
lection of documents in a source language s,
a system must extract slot answers about the
query and present the answers in t. In this pa-
per we examine a specific setting of s=Chinese
and t=English.
To score crosslingual slot filling, we pool all
the system responses and group equivalent an-
swers into equivalence classes. Each system re-
sponse is rated as correct, wrong, inexact or re-
dundant. Given these judgments, we calculate
the precision, recall and F-measure of each sys-
tem, crediting only correct answers.
3.2 Data and Query Selection
We use the comparable corpora of English
TDT5 (278,358 documents) and Chinese TDT5
111
(56,424 documents) as our source collection.
For query selection, we collected all the en-
tities from the entire source collection and
counted their frequencies. We then selected 50
informative entities (25 persons and 25 organiza-
tions) which were located in the middle range of
frequency counts. Among the 25 person queries,
half are Chinese-specific names, and half are
non-Chinese names. The 25 organizations fol-
low a representative distribution according to
the entity subtypes defined in NIST Automatic
Content Extraction (ACE) program1.
3.3 Baseline Pipelines
3.3.1 Overview
We employ the following two types of base-
line crosslingual slot filling pipelines to process
Chinese documents. Figure 1 and Table 1 shows
the five system pipelines we have used to con-
duct our experiments.
Type A Translate Chinese texts into English,
and apply English slot filling systems to the
translations.
Type B Translate English queries into Chinese,
apply Chinese slot filling systems to Chinese
texts, and translate answers back to English. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Machine 
Translation 
English 
Texts 
Chinese 
Texts 
English Candidate Answers 
English
Query
English Slot Filling 
 Answer 
Translation  Pattern Matching 
 Supervised
Classification
Chinese Slot Filling 
 Supervised 
Classification 
Chinese 
Query 
 Query 
Translation
Figure 1: Overview of Baseline Crosslingual Slot Fill-
ing Pipelines
1http://www.itl.nist.gov/iad/mig/tests/ace/
 
Pipeline Label Components Data 
(1) English Supervised Classification Mono-
lingual (2) English Pattern Matching 
English 
TDT5 
 
(3) 
MT+English 
Supervised 
Classification Type A  
(4) 
MT+English 
Pattern Matching Cross-lingual 
Type 
B 
 
 
(5) 
Query Translation 
+Chinese Supervised 
Classification 
+Answer Translation 
Chinese 
TDT5 
 
 
 
Table 1: Monolingual and Crosslingual Baseline Slot
Filling Pipelines
3.3.2 Monolingual Slot Filling
We applied a state-of-the-art bilingual slot
filling system (Chen et al, 2010) to process
bilingual comparable corpora. This baseline
system includes a supervised ACE IE pipeline
and a bottom-up pattern matching pipeline.
The IE pipeline includes relation extraction and
event extraction based on maximum entropy
models that incorporate diverse lexical, syntac-
tic, semantic and ontological knowledge. The
extracted ACE relations and events are then
mapped to KBP slot fills. In pattern matching,
we extract and rank patterns based on a dis-
tant supervision approach (Mintz et al, 2009)
that uses entity-attribute pairs from Wikipedia
Infoboxes and Freebase (Bollacker et al, 2008).
We set a low threshold to include more answer
candidates, and then a series of filtering steps
to refine and improve the overall pipeline re-
sults. The filtering steps include removing an-
swers which have inappropriate entity types or
have inappropriate dependency paths to the en-
tities.
3.3.3 Document and Name Translation
We use a statistical, phrase-based MT sys-
tem (Zens and Ney, 2004) to translate Chinese
documents into English for Type A Approaches.
The best translation is computed by using a
weighted log-linear combination of various sta-
tistical models: an n-gram language model, a
phrase translation model and a word-based lex-
112
icon model. The latter two models are used in
source-to-target and target-to-source directions.
The model scaling factors are optimized with re-
spect to the BLEU score similar to (Och, 2003).
The training data includes 200 million running
words in each language. The total language
model training data consists of about 600 mil-
lion running words.
We applied various name mining approaches
from comparable corpora and parallel corpora,
as described in (Ji et al, 2009) to extract and
translate names in queries and answers in Type
B approaches. The accuracy of name translation
is about 88%. For those names not covered by
these pairs, we relied on Google Translate 2 to
obtain results.
4 Analysis of Baseline Pipelines
In this section we analyze the coverage (Sec-
tion 4.1) and precision (Section 4.2) results of
the baseline pipelines. We then illustrate the
potential for global validation from comparable
corpora through a series of examples.
4.1 Coverage Analysis: Toward
Information Fusion
Table 2 summarizes the Precision (P), Recall
(R) and F-measure (F) of baseline pipelines and
the union of their individual results.
Table 2: Baseline Pipeline Results 
System P R F 
(1) 0.08 0.54 0.15 
(2) 0.02 0.35 0.03 Mono- 
lingual Union of 
(1)+(2) 
0.03 0.69 0.05 
(3) 0.04 0.04 0.04 
(4) 0.03 0.25 0.05 
Union of 
(3)+(4) 0.03 0.26 0.05 
(5) 0.04 0.46 0.08 
Cross- 
lingual 
Union of 
(3)+(4)+(5) 0.03 0.56 0.05 
Compara
ble 
Corpora 
Union of 
(1)+(2)+(3)+
(4)+(5) 
0.02 1 0.04 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
2http://translate.google.com/
Although crosslingual pipelines used a much
smaller corpus than monolingual pipelines, they
extracted comparable number of correct answers
(66 vs. 81) with a slightly better precision.
In fact, the crosslingual pipeline (5) performs
even better than monolingual pipeline (2), es-
pecially on the employment slots. In particu-
lar, 96.35% of the correct answers for Chinese-
specific person queries (e.g. ?Tang Jiaxuan?)
were extracted from Chinese data. Even for
those facts discovered from English data, they
are about quite general slots such as ?title? and
?employee of ?. In contrast, Chinese data covers
more diverse biographical slots such as ?family
members? and ?schools attended?.
Compared to the union of Type A approaches
(pipelines (3)+(4)), Pipeline (5) returned many
more correct answers with higher precision. The
main reason is that Type A approaches suffer
from MT errors. For example, MT mistakenly
translated the query name ?Celine Dion? into
?Clinton? and thus English slot filling compo-
nents failed to identify any answers. One can
hypothesize that slot filling on MT output can
be improved by re-training extraction compo-
nents directly from MT output. However, our
experiments of learning patterns from MT out-
put showed negative impact, mainly because
MT errors were too diverse to generalize. In
other cases even though slot filling produced cor-
rect results, MT still failed to translate the an-
swer names correctly. For example, English slot
filling successfully found a potential answer for
?org:founded by? of the query ?Microsoft? from
the following MT output: ?The third largest of
the Microsoft common founder Alan Doss , aged
50, and net assets of US 22 billion.?; however,
the answer string ?Paul Allen? was mistakenly
translated into ?Alan Doss?. MT is not so cru-
cial for ?per:title? slot because it does not require
translation of contexts.
To summarize, 59% of the missing errors were
due to text, query or answer translation errors
and 20% were due to slot filling errors. Never-
theless, the union of (3)+(4)+(5) still contain
more correct answers. These baseline pipelines
were developed from a diverse set of algorithms,
and typically showed strengths in specific slots.
113
In general we can conclude that monolin-
gual and crosslingual pipelines are complemen-
tary. Combining the responses from all baseline
pipelines, we can get similar number of correct
answers compared to one single human annota-
tor.
4.2 Precision Analysis: Toward Global
Validation
The spurious errors from baseline crosslingual
slot filling pipelines reveal both the shortcom-
ings of the MT system and extraction across
languages. Table 3 shows the distribution of
spurious errors.
Pipeline Spurious Errors Distribution
Content Translation 
+ Extraction 
85% 
Query Translation 13% 
Type A 
Answer Translation 2% 
Word Segmentation 34% 
Relation Extraction 33% 
Coreference 17% 
Semantic Type 13% 
Type B 
Slot Type 3% 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Table 3: Distribution of Spurious Errors
Table 3 indicates a majority (85%) of spurious
errors from Type A pipelines were due to ap-
plying monolingual slot filling methods to MT
output which preserves Chinese structure.
As demonstrated in previous work (e.g. (Par-
ton and McKeown, 2010; Ji et al, 2009)),
we also found that many (14.6%) errors were
caused by the low quality of name translation
for queries and answers.
For example, ?????/McGinty? was mis-
takenly translated into the query name ?Kim
Jong-il?, which led to many incorrect answers
such as ?The British Royal joint military re-
search institute? for ?per:employee of ?.
In contrast, the spurious errors from Type B
pipelines were more diverse. Chinese IE com-
ponents severely suffered from word segmen-
tation errors (34%), which were then directly
propagated into Chinese document retrieval and
slot filling. Many segmentation errors occurred
with out-of-vocabulary names, especially per-
son names and nested organization names. For
example, the name ????/Yao Mingbao? was
mistakenly segmented into two words ???/Yao
Ming? and ??/bao?, and thus the document was
mistakenly retrieved for the query ?Yao Ming?.
In many cases (33%) Chinese relation and
event extraction components failed to cap-
ture Chinese-specific structures due to the lim-
ited size of training corpora. For example,
from the context ???????????????
?/Xiao Wan-chang, who were invited to be-
come the economics consultant for Chen Shui-
bian?, Chinese slot filling system mistakenly ex-
tracted ?consultant? as a ?per:title? answer for
the query ?Chen Shui-bian? using a common
pattern ?<query><title>?.
13% of errors were caused due to invalid se-
mantic types for certain slots. For example,
many metaphoric titles such as ?tough guy?
don?t match the definition of ?per:title? in the
annotation guideline ?employment or member-
ship position?.
5 Global Validation
Based on the above motivations we propose to
incorporate global evidence from a very large
collection of comparable documents to refine
local decisions. The central idea is to over-
generate candidate answers from multiple weak
baselines to ensure high upper-bound of recall,
and then conduct effective global validation to
filter spurious errors while keeping good answers
in order to enhance precision.
5.1 Supervised Rescoring
Ideally, we want to choose a validation model
which can pick out important features in a con-
text wider than that used by baseline pipelines.
Merging individual systems to form the union of
answers can be effective, but Table 2 shows that
simple union of all pipelines produced worse F-
measure than the best pipeline.
In this paper we exploit the reranking
paradigm, commonly used in information re-
trieval, to conduct global validation. By model-
ing the empirical distribution of labeled training
data, statistical models are used to identify the
114
strengths and weaknesses (e.g. high and low pre-
cision slots) of individual systems, and rescore
answers accordingly. Specially, we develop a
supervised Maximum Entropy (MaxEnt) based
model to rescore the answers from the pipelines,
selecting only the highest-scoring answers.
The rescorer was trained (using cross-
validation) on varying subsets of the features.
The threshold at which an answer is deemed to
be true is chosen to maximize the F-Measure on
the training set.
5.2 Validation Features
Table 4 describes the validation features used for
rescoring, where q is the query, q? the Chinese
translation of q, t the slot type, a the candidate
answer, a? the Chinese form of a, s the context
sentence and d is the context document support-
ing a.
The feature set benefits from multiple dimen-
sions of crosslingual slot filling. These features
were applied to both languages wherever anno-
tation resources were available.
In the KBP slot filling task, slots are of-
ten dependent on each other, so we can im-
prove the results by improving the ?coherence?
of the story (i.e. consistency among all gener-
ated answers - query profiles). We use feature
f2 to check whether the same answer was gen-
erated for conflicting slots, such as per:parents
and per:children.
Compared to traditional QA tasks, slot fill-
ing is a more fine-grained task in which differ-
ent slots are expected to obtain semantically
different answers. Therefore, we explored se-
mantic constraints in both local and global con-
texts. For example, we utilized bilingual name
gazetteers from ACE training corpora, Google
n-grams (Ji and Lin, 2009) and the geonames
website 3 to encode features f6, f8 and f9; The
org:top members/employees slot requires a sys-
tem to distinguish whether a person member/
employee is in the top position, thus we encoded
f10 for this purpose.
The knowledge used in our baseline pipelines
is relatively static ? it is not updated during the
3http://www.geonames.org/statistics/
extraction process. Achieving high performance
for cross-lingual slot filling requires that we take
a broader view, one that looks outside a sin-
gle document or a single language in order to
exploit global knowledge. Fortunately, as more
and more large crosslingual comparable corpora
are available, we can take advantage of informa-
tion redundancy to validate answers. The basic
intuition is that if a candidate answer a is cor-
rect, it should appear together with the query
q repeatedly, in different documents, or even in
certain coreference links, relations and events.
For example, ?David Kelly - scientist?, and
??????/Shintaro Ishihara - ??/governor?
pairs appear frequently in ?title? coreference
links in both English and Chinese corpora;
?Elizabeth II? is very often involved in an ?em-
ployment? relation with ?United Kingdom? in
English corpora. On the other hand, some in-
correct answers with high global statistics can be
filtered out using these constraints. For exam-
ple, although the query ????/Tang Jiaxuan?
appears frequently together with the candidate
per:title answer ???/personnel?, it is linked by
few coreference links; in contrast, it?s coreferen-
tial with the correct title answer ?????/State
Council member? much more frequently.
We processed cross-lingual comparable cor-
pora to extract coreference links, relations and
events among mentions (names, nominals and
time expressions etc.) and stored them in an
external knowledge base. Any pair of <q, a>
is then compared to the entries in this knowl-
edge base. We used 157,708 documents from
Chinese TDT5 and Gigaword to count Chinese
global statistics, and 7,148,446 documents from
DARPA GALE MT training corpora to count
English global statistics, as shown in features
f12 and f13. Fact based global features f14, f15,
f16 and f17, were calculated from 49,359 Chi-
nese and 280,513 English documents (annotated
by the bilingual IE system in Section 3.3.2.
6 Experiments
In this section, we examine the overall perfor-
mance of this method. We then discuss the
usefulness of the individual sets of features. In
115
Characteristics 
Scope Depth Language 
Description 
f1: frequency of <q, a, t> that appears in all baseline outputs Global 
(Cross-
system) 
Shallow 
 English f2: number of conflicting slot types in which answer a appears in all baseline 
outputs 
f3: conjunction of t and whether a is a year answer Shallow English 
f4: conjunction of t and whether a includes numbers or letters 
f5: conjunction of place t and whether a is a country name 
f6: conjunction of per:origin t and whether a is a nationality 
f7: if t=per:title, whether a is an acceptable title 
f8: if t requires a name answer, whether a is a name 
Local 
Deep 
 
English 
 
f9: whether a has appropriate semantic type 
f10: conjunction of org:top_members/employees and whether there is a high-level 
title in s 
Global 
(Within-
Document) 
Deep English 
f11: conjunction of alternative name and whether a is an acronym of q 
Chinese f12: conditional probability of q/q' and a/a' appear in the same document Shallow 
(Statistics) English f13: conditional probability  of q/q' and a/a' appear in the same sentence 
Both f14:  co-occurrence of q/q' and a/a'  appear in coreference links 
English f15: co-occurrence of q/q' and a/a'  appear in relation/event links 
English f16: conditional probability of q/q' and a/a' appear in relation/event links 
Global 
(Cross-
document 
in 
comparable 
corpora) 
Deep 
(Fact-
based) 
English f17: mutual information of q/q' and a/a' appear in relation/event links 
 
Table 4: Validation Features for Crosslingual Slot Filling
the following results, the baseline features are
always used in addition to any other features.
6.1 Overall Performance
Because of the data scarcity, ten-fold cross-
validation, across queries, was used to train
and test the system. Quantitative results after
combining answers from multiple pipelines are
shown in Table 5. We used two basic features,
one is the slot type and the other is the entity
type of the query (i.e. person or organization).
This basic feature set is already successful in im-
proving the precision of the pipelines, although
this results in a number of correct answers be-
ing discarded as well. By adding the additional
validation features described previously, both
the f-score and precision of the models are im-
proved. In the case of the cross-lingual pipelines
(3+4+5) the number of correct answers chosen
is almost doubled while increasing the precision
of the output.
6.2 Impact of Global Validation
A comparison of the benefits of global versus lo-
cal features are shown in Table 6, both of which
dramatically improve scores over the baseline
features. The global features are universally
Pipelines F P R
Basic Features
1+2 0.31 0.31 0.30
3+4+5 0.26 0.39 0.20
1+2+3+4+5 0.27 0.29 0.25
Full Features
1+2 0.37 0.30 0.46
3+4+5 0.36 0.35 0.37
1+2+3+4+5 0.31 0.28 0.35
Table 5: Using Basic Features to Filter Answers
more beneficial than the local features, although
the local features generate results with higher
precision at the expense of the number of correct
answers returned. The global features are espe-
cially useful for pipelines 3+4+5, where the per-
formance using just these features reaches those
of using all other features ? this does not hold
true for the monolingual pipelines however.
6.3 Impact of Fact-driven Deep
Knowledge
The varying benefit of fact-driven cross-
document features and statistical cross-
document features are shown in Table 7.
116
Pipelines F P R
Local Features
1+2 0.34 0.35 0.33
3+4+5 0.29 0.40 0.22
1+2+3+4+5 0.27 0.32 0.24
Global Features
1+2 0.35 0.30 0.42
3+4+5 0.37 0.36 0.38
1+2+3+4+5 0.33 0.29 0.38
Table 6: The Benefit of Global versus Local Features
While both feature sets are beneficial, the
monolingual pipelines (1+2) benefit more
from statistical features while the cross-lingual
pipelines (3+4+7) benefit slightly more from
the fact-based features. Despite this bias, the
overall results when the features are used in
all pipelines are very close with the fact-based
features being slightly more useful overall.
Pipelines F P R
Fact-Based Features
1+2 0.33 0.27 0.42
3+4+5 0.35 0.43 0.29
1+2+3+4+5 0.30 0.27 0.34
Statistical Features
1+2 0.37 0.34 0.40
3+4+5 0.34 0.35 0.33
1+2+3+4+5 0.29 0.25 0.34
Table 7: Fact vs. Statistical Cross-Doc Features
Translation features were only beneficial to
pipelines 3, 4, and 5, and provided a slight in-
crease in precision from 0.39 to 0.42, but pro-
vided no noticeable benefit when used in con-
junction with results from pipelines 1 and 2.
This is because the answers where translation
features would be most useful were already be-
ing selected by pipelines 1 and 2 using the base-
line features.
6.4 Discussion
The use of any re-scoring, even with baseline
features, provides large gains over the union of
the baseline pipelines, removing large number
of incorrect answers. The use of more sophis-
ticated features provided substantial gains over
the baseline features. In particular, global fea-
tures proved very effective. Further feature en-
gineering to address the remaining errors and
the dropped correct answer would likely provide
increasing gains in performance.
In addition, two human annotators, indepen-
dently, conducted the same task on the same
data, with a second pass of adjudication. The F-
scores of inter-annotator agreement were 52.0%
for the first pass and 73.2% for the second pass.
This indicates that slot filling remains a chal-
lenging task for both systems and human anno-
tators?only one monolingual system exceeded
30% F-score in the KBP2010 evaluation.
7 Conclusion and Future Work
Crosslingual slot filling is a challenging task
due to limited performance in two separate ar-
eas: information extraction and machine trans-
lation. Various methods of combining tech-
niques from these two areas provided weak yet
complementary baseline pipelines. We proposed
an effective approach to integrate these base-
lines and enhance their performance using wider
and deeper knowledge from comparable cor-
pora. The final system based on cross-lingual
comparable corpora outperformed monolingual
pipelines on much larger monolingual corpora.
The intuition behind our approach is that
over-generation of candidate answers from weak
baselines provides a potentially strong recall
upper-bound. The remaining enhancement be-
comes simpler: filtering errors. Our experiments
also suggest that our rescoring models tend to
over-fit due to small amount of training data.
Manual annotation and assessment are quite
costly, motivating future work in active learning
and semi-supervised learning methods. In addi-
tion, we plan to apply our results as feedback to
improve MT performance on facts using query
and answer-driven language model adaptation.
We have demonstrated our approach on English-
Chinese pair, but the framework is language-
independent; ultimately we would like to extend
the task to extracting information from more
languages.
117
Acknowledgments
This work was supported by the U.S. NSF CAREER
Award under Grant IIS-0953149 and PSC-CUNY
Research Program. Any opinions, findings, and con-
clusions or recommendations expressed in this mate-
rial are those of the author(s) and do not necessarily
reflect the views of the National Science Foundation.
References
K. Bollacker, R. Cook, and P. Tufts. 2008. Free-
base: A shared database of structured general hu-
man knowledge. In Proc. National Conference on
Artificial Intelligence.
Zheng Chen, Suzanne Tamang, Adam Lee, Xiang Li,
Marissa Passantino, and Heng Ji. 2010. Top-
down and bottom-up: A combined approach to
slot filling. Lecture Notes in Computer Science,
6458:300?309, December.
C. L. A. Clarke, G. V. Cormack, and T.R. Lynam.
2001. Exploiting redundancy in question answer-
ing. In Proc. SIGIR2001.
Doug Downey, Oren Etzioni, and Stephen Soderland.
2005. A Probabilistic Model of Redundancy in
Information Extraction. In Proc. IJCAI 2005.
Pascale Fung and Lo Yuen Yee. 1998. An ir ap-
proach for translating new words from nonparallel
and comparable texts. In COLING-ACL.
Dilek Hakkani-Tur, Heng Ji, and Ralph Grishman.
2007. Using information extraction to improve
cross-lingual document retrieval. In Proc. RANLP
workshop on Multi-source, Multilingual Informa-
tion Extraction and Summarization.
S. Harabagiu, D. Moldovan, C. Clark, M. Bowden,
A. Hickl, and P. Wang. 2005. Employing two
question answering systems in trec 2005. In Proc.
TREC2005.
Ahmed Hassan, Haytham Fahmy, and Hany Has-
san. 2007. Improving named entity translation
by exploiting comparable and parallel corpora. In
RANLP.
Heng Ji and Ralph Grishman. 2008. Refining Event
Extraction through Cross-Document Inference. In
Proc. of ACL-08: HLT, pages 254?262.
Heng Ji and Dekang Lin. 2009. Gender and animacy
knowledge discovery from web-scale n-grams for
unsupervised person mention detection. In Proc.
PACLIC2009.
Heng Ji, Ralph Grishman, Dayne Freitag, Matthias
Blume, John Wang, Shahram Khadivi, Richard
Zens, and Hermann Ney. 2009. Name translation
for distillation. Handbook of Natural Language
Processing and Machine Translation: DARPA
Global Autonomous Language Exploitation.
Heng Ji, Ralph Grishman, Hoa Trang Dang, and
Kira Griffitt. 2010. An overview of the tac2010
knowledge base population track. In Proc.
TAC2010.
Heng Ji. 2009. Mining name translations from com-
parable corpora by creating bilingual information
networks. In ACL-IJCNLP 2009 workshop on
Building and Using Comparable Corpora (BUCC
2009): from Parallel to Non-parallel Corpora.
Alexandre Klementiev and Dan Roth. 2006. Named
entity transliteration and discovery from multilin-
gual comparable corpora. In HLT-NAACL 2006.
K.-L. Kwork and P. P. Deng. 2006. Chinese
question-answering: Comparing monolingual with
english-chinese cross-lingual results. In Asia In-
formation Retrieval Symposium.
Cheng-Wei Lee, Yi-Hsun Lee, and Wen-Lian Hsu.
2008. Exploring shallow answer ranking features
in cross-lingual and monolingual factoid question
answering. Computational Linguistics and Chi-
nese Language Processing, 13:1?26, March.
B. Magnini, M. Negri, R. Prevete, and H. Tanev.
2001. Is it the right answer?: Exploiting web
redundancy for answer validation. In Proc.
ACL2001.
Mike Mintz, Steven Bills, Rion Snow, and Dan Ju-
rafsky. 2009. Distant supervision for relation ex-
traction without labeled data. In ACL-IJCNLP
2009.
Teruko Mitamura, Mengqiu Wang, Hideki Shima,
and Frank Lin. 2006. Keyword translation accu-
racy and cross-lingual question answering in chi-
nese and japanese. In EACL 2006 Workshop on
MLQA.
F. J. Och. 2003. Minimum error rate training in
statistical machine translaton. In Proc.ACL2003.
Kristen Parton and Kathleen McKeown. 2010. Mt
error detection for cross-lingual question answer-
ing. Proc. COLING2010.
Siddharth Patwardhan and Ellen Riloff. 2009. A
Unified Model of Phrasal and Sentential Evidence
for Information Extraction. In Proc. EMNLP
2009.
Reinhard Rapp. 1999. Automatic identification of
word translations from unrelated english and ger-
man corpora. In ACL 1999.
Li Shao and Hwee Tou Ng. 2004. Mining new word
translations from comparable corpora. In COL-
ING2004.
D. Shen, G. Saarbruechen, and D. Klakow. 2006.
Exploring correlation of dependency relation
paths for answer extraction. In Proc. ACL2006.
118
M. M. Soubbotin and S. M. Soubbotin. 2001. Pat-
terns of potential answer expressions as clues to
the right answers. In Proc. TREC2001.
Richard Sproat, Tao Tao, and ChengXiang Zhai.
2006. Named entity transliteration with compa-
rable corpora. In ACL 2006.
Kiyoshi Sudo, Satoshi Sekine, and Ralph Grishman.
2004. Cross-lingual information extraction evalu-
ation. In Proc. COLING2004.
Tao Tao and Chengxiang Zhai. 2005. Mining com-
parable bilingual text corpora for cross-language
information integration. In Proc. KDD2005.
Raghavendra Udupa, K. Saravanan, A. Kumaran,
and Jagadeesh Jagarlamudi. 2009. Mint: A
method for effective and scalable mining of named
entity transliterations from large comparable cor-
pora. In EACL2009.
Alessandro Vallin, Bernardo Magnini, Danilo Gi-
ampiccolo, Lili Aunimo, Christelle Ayache, Petya
Osenova, Anselmo Peas, Maaren de Rijke, Bogdan
Sacaleanu, Diana Santos, and Richard Sutcliffe.
2005. Overview of the clef 2005 multilingual ques-
tion answer track. In Proc. CLEF2005.
Roman Yangarber. 2006. Verification of Facts across
Document Boundaries. In Proc. International
Workshop on Intelligent Information Access.
Richard Zens and Hermann Ney. 2004. Improve-
ments in phrase-based statistical machine transla-
tion. In Proc. HLT/NAACL 2004.
119
