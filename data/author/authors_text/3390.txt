Performance Evaluation and Error Analysis for Multimodal Reference 
Resolution in a Conversation System 
Joyce Y. Chai          Zahar Prasov              Pengyu Hong 
Department of Computer Science and Engineering
Michigan State University  
East Lansing, MI 48864 
jchai@cse.msu.edu,  prasovza@cse.msu.edu 
Department of Statistics 
Harvard University 
Cambridge, MA 02138 
hong@stat.harvard.edu 
 
Abstract 
Multimodal reference resolution is a process 
that automatically identifies what users refer 
to during multimodal human-machine 
conversation. Given the substantial work on 
multimodal reference resolution; it is important 
to evaluate the current state of the art, 
understand the limitations, and identify 
directions for future improvement. We 
conducted a series of user studies to evaluate the 
capability of reference resolution in a 
multimodal conversation system.  This paper 
analyzes the main error sources during real-time 
human-machine interaction and presents key 
strategies for designing robust multimodal 
reference resolution algorithms. 
1 Introduction* 
Multimodal systems enable users to interact with 
computers through multiple modalities such as speech, 
gesture, and gaze (Bolt 1980; Cassell et al, 1999; Cohen et 
al., 1996; Chai et al, 2002; Johnston et al, 2002). One 
important aspect of building multimodal systems is for the 
system to understand the meanings of multimodal user 
inputs. A key element of this understanding process is 
reference resolution. Reference resolution is a process that 
finds the most proper referents to referring expressions. To 
resolve multimodal references, many approaches have 
been developed, from the use of a focus space model (Neal 
et al, 1998), a centering framework (Zancanaro et al 
1997), contextual factors (Huls et al, 1995); to recent 
approaches using unification (Johnston, 1998), finite state 
machines (Johnston and Bangalore 2000), and context-
based rules (Kehler 2000).   
Given the substantial work in this area; it is important 
to evaluate the state of the art, understand the limitations, 
                                                                
* This work was supported by grant IIS-0347548 from the 
National Science Foundation and grant IRGP-03-42111 from 
Michigan State University. 
 
and identify directions for future improvement. We 
conducted a series of user studies to evaluate the capability 
of reference resolution in a multimodal conversation 
system. In particular, this paper examines two important 
aspects: (1) algorithm requirements for handling a variety 
of references, and (2) technology requirements for 
achieving good real-time performance. In the following 
sections, we first give a brief description of our system. 
Then we analyze the main error sources during real-time 
human-machine interaction and discuss the key strategies 
for designing robust reference resolution algorithms. 
2 System Description  
We implemented a multimodal conversation system to 
study multimodal user referring behavior and to evaluate 
reference resolution algorithms. Users can use both speech 
and manual gestures (e.g., point and circle) to interact with 
a map-based graphic interface to find information about 
real estate properties.  
As shown in Figure 1, our system applies a semantic 
fusion approach that combines the semantic information 
identified from each modality. A key characteristic of the 
system is that, in addition to fusing information from 
different modalities, our system systematically 
incorporates information from the conversation context 
(e.g., the focus of attention from prior conversation), the 
Speech Input Gesture Input
Speech 
Recognizer 
NL
Parser 
Gesture
Recognizer
Multimodal Interpreter
(Graph-based Reference 
Resolution Component)
Conversation
Manager
Presentation
Manager
Conversation 
Context
Visual 
Context
Domain
Context
Multimedia Output  
Figure 1:  Overview of the system 
visual context (e.g., objects on the screen that are in the 
visual focus), and the domain context (i.e., the domain 
k
m
g
re
sp
re
e
in
re
re
g
o
h
c
p
is
a
G
p
R
re
m
d
3
W
p
g
th
sy
a
th
voice from each subject was trained individually to 
minimize speech recognition errors.  
e 
s 
t 
e 
e 
 
f 
, 
e 
 
 
e 
 
. 
s 
e 
 nowledge).   
The reference resolution approach is based on a graph-
atching algorithm. Specifically, two attribute relational 
raphs are used (Tsai and Fu, 1979). One graph is called 
ferring graph that captures referring expressions from 
eech utterances. Each node, corresponding to one 
ferring expression, consists of the semantic information 
xtracted from the expression and the temporal 
formation when the expression is uttered.  Each edge 
presents the semantic and temporal relation between two 
ferring expressions. The second graph is called referent 
raph that represents all potential referents (including 
bjects selected by the gesture, objects in the conversation 
istory, and objects in the visual focus). Each node 
aptures the semantic and temporal information about a 
otential referent (e.g., the time when the potential referent 
 selected by a gesture). Each edge captures the semantic 
nd temporal relations between two potential referents. 
iven these graph representations, the reference resolution 
roblem becomes a graph-matching problem (Gold and 
angarajan, 1996). The goal is to find a match between the 
3.1 Performance Evaluation 
Table 1 summarizes the referring behavior observed in th
studies and the performance of the system. The column
indicate whether there was no gesture, one gesture (poin
or circle), or multiple gestures involved in the input. Th
rows indicate the type of referring expressions in th
speech utterances. Each table entry shows the system
performance on resolving a particular combination o
speech and gesture inputs. For example, the entry at <S2
G4> indicates that 35 inputs consist of demonstrativ
singular noun phrases (as the referring expressions) and a
single circle gesture. Out of these inputs, 27 were correctly
recognized and eight were incorrectly recognized by th
speech recognizer. Out of the 27 correctly recognized
inputs, 26 were correctly assigned referents by the system
Out of the eight incorrectly recognized inputs, reference
in two inputs were correctly resolved.  
Consistent with earlier findings (Kehler 2000), th
majority of user references were simple which onlyferring graph and the referent graph that achieves the 
aximum compatibility between the two graphs.  The 
etails of this approach are described in (Chai et al, 2004). 
 Performance Evaluation and Analysis 
e conducted several user studies to evaluate the 
erformance of real time reference resolution using the 
raph-based approach. Eleven subjects participated in 
ese studies. Each of them was asked to interact with the 
stem using both speech and gestures (point and circle) to 
ccomplish five tasks. For example, one task was to find 
e least expensive house in the most populated town. The 
involved one referring expression and one gesture as 
shown in Table 1 (i.e., S1 to S8, with column G2 and G4). 
However, we have also found that 14% (31/219) of the 
inputs were complex, which involved multiple referring 
expressions from speech utterances (see the row S9). Some 
of these inputs did not have any accompanied gesture (e.g., 
<S9, G1>). Some were accompanied by one gesture (e.g., 
<S9, G4>) or multiple gestures (e.g., <S9, G3> and <S9, 
G5>). The referents to these referring expressions could 
come from user?s gestures, or from the conversation 
context, or from the graphic display. To resolve these types 
of references, the graph-based approach is effective by 
simultaneously considering the semantic, temporal, and 
1(1), 1(0)001(1), 1(0)000S5:(these|those)(num)*(adj)*(ones)*|them
129(111), 90(26)
15(9), 16(1)
2(0) 12(4)
4(2), 0(0)
7(7), 2(1)
7(4), 12(5)
22(21), 14(3)
64(61), 27(11)
7(6), 6(1)
Total 
Num
4(4), 11(0)9(7), 5(0)63(54), 36(8)7(4), 3(2)39(37),29(14)7(5), 6(2)Total Num
0(0), 3(0)8(6), 5(0)3(1), 7(1)4(2), 0(0)00(0), 1(0)S9: multiple expressions
0(0), 3(0)00(0), 3(0)0(0), 3(2)1(0), 3(2)1(0), 0(0)S8: proper nouns
002(0), 0(0)01(1), 0(0)1(1), 0(0)S7: empty expression
006(6), 0(0)01(1), 1(0)0(0), 1(1)S6: here|there
004(2), 4(1)02(2), 6(3)1(0), 2(1)S4: it|this|that| (this|that|the)(adj)*one
3(3), 2(0)019(18), 12(3)000S3: (these|those)(num)*(adj)*Ns
1(1), 2(0)1(1), 0(0)27(26), 8(2)3(2), 0(0)29(28), 16(9)3(3), 1(0)S2: (this|that) (adj*) N
0(0), 1(0)01(0), 1(1)05(5), 3(0)1(1), 1(0)S1: the (adj)*(N | Ns)
G6
Points and 
Circles
G5
Multiple 
Circles
G4
One Circle
G3
Multiple 
Points
G2
One Point
G1
No 
Gesture
Table 1: Performance evaluation of the graph-matching approach to multimodal reference resolution. In each entry form
?a(b), c(d)?,  ?a? indicates the number of inputs in which the referring expressions were correctly recognized by the speech
recognizer; ?b? indicates the number of inputs in which the referring expressions were  correctly recognized and were cor-
rectly resolved; ?c? indicates the number of inputs in which the referring expressions were not correctly recognized; ?d?
indicates the number of inputs in which the referring expressions were not correctly recognized, but were correctly resolved.
The sum of ?a? and ?c? gives the total number of inputs with a particular combination of speech and gesture. 
 
contextual constraints.   
3.2 Error Analysis 
As shown in Table 1, out of the total 219 inputs, 137 inputs 
had their referents correctly identified (A complex input 
with multiple referring expressions was considered 
correctly resolved only if the referents to all the referring 
expressions were correctly identified). For the remaining 
82 inputs in which the referents were not correctly 
identified, the errors mainly came from five sources as 
summarized in Table 2.  
A poor performance in speech recognition is a major 
error source. Although we have trained each user?s voice 
individually, the speech recognition rate is still very low. 
Only 59% (129/219) of inputs had correctly recognized 
referring expressions. This is partly due to the fact that 
more than half of our subjects are non-native speakers.  
Fusing inputs from multiple modalities together can 
sometimes compensate for the recognition errors (Oviatt 
1996). Among 90 inputs in which referring expressions 
were incorrectly recognized, 26 of them were correctly 
assigned referents due to the mutual disambiguation. 
However, poor speech recognition still accounted for 55% 
of the total errors. A mechanism to reduce the recognition 
errors, especially by utilizing information from other 
modalities will be important to provide a robust solution 
for real time multimodal reference resolution.  
The second source of errors (20% of the total errors) 
came from insufficient language understanding, especially 
the out-of-vocabularies. For example, ?area? was not in 
our vocabulary. So the additional semantic constraint 
expressed by ?area? was not captured. Therefore, the 
system could not identify whether a house or a town was 
referred when the user uttered ?this area?. It is important 
for the system to have a capability of acquire knowledge 
(e.g., vocabulary) dynamically by utilizing information 
from other modalities and the interaction context. 
Furthermore, the errors also came from a lack of 
understanding of spatial relations (as in ?the house just 
close to the red one?) and superlatives (as in ?the most 
expensive house?). Algorithms to align visual features to 
resolve spatial references as described in (Gorniak and Roy 
2003) are desirable.  
Among all errors, 13% came from unsynchronized 
inputs. Currently, we use an idle status (i.e., 2 seconds with 
no input from either speech or gesture) as the boundary to 
delimit an interaction turn. There are two types of out of 
synchronization. The first type is unsynchronized inputs 
from the user (such as a big pause between speech and 
gesture) and the other comes from the underlying system 
implementation.  The system captures speech inputs and 
gesture inputs from two different servers through TCP/IP 
protocol. A communication delay sometimes split one 
synchronized input into two separate turns of inputs (i.e., 
one turn was speech input alone and the other turn was 
gesture input alone). A better engineering mechanism to 
synchronize inputs is desired. 
The disfluencies from the users also accounted for 
about 7% of the total errors. Recent findings indicated that 
gesture patterns could be used as an additional source to 
identify different types of speech disfluencies during 
human-human conversation (Chen et al, 2002). As 
expected, speech disfluencies did not occur that much in 
our studies. Based on our limited cases, we found that 
gesture patterns could be indicators of speech disfluencies 
when they did occur. For example, if a user says ?show me 
the red house (point to house A), the green house (still 
point to the house A)?, then the behavior of pointing to the 
same house with different speech description usually 
indicates a repair. Furthermore, gestures also involve 
disfluencies, for example, repeatedly pointing to an object 
is a gesture repetition. Failure in identifying these 
disfluencies caused problems with reference resolution. It 
is important to have a mechanism that can identify these 
disfluencies using multimodal information.  
The remaining 5% errors came from the 
implementation of our approach in order to reduce the 
complexity of graph matching.  Currently, the referent 
graph only consists of potential referents from gestures, 
objects from the prior conversation, and the objects in the 
visual focus (i.e., highlighted on the screen). Therefore, it 
is insufficient to handle cases where users only use proper 
names (without any gestures) to refer to objects visible on 
the screen.  
From the error analysis, we learned that variations in 
user inputs (e.g., variations in vocabulary and 
synchronization patterns), disfluencies in speech utterances, 
and even small changes in the input quality or the 
environment could seriously impair the real-time 
performance. The future research effort should be devoted 
to developing adaptive approaches for reference resolution 
to deal with unexpected inputs (e.g., inputs that are outside 
of system knowledge).    
3.
Th ies in 
de rence 
re andle 
te dings 
(O tudy, 
ge were 
ut % of 
ca sture 
an rred. 
Fu poral 
5%Others
7%Disfluency
13%Out of synchronization
20%Language understanding errors
55%Speech recognition errors
Percentage
 
Table 2: The distribution of error sources 3 Design Strategies   
e evaluation also indicates three important strateg
signing effective algorithms for multimodal refe
solution. The first strategy concerns with how to h
mporal relations. Consistent with the previous fin
viatt et al 1997), in most cases (85%) in our s
stures occurred before the referring expressions 
tered. However, we did find some exceptions. In 7
ses, there was no overlap between speech and ge
d speech were uttered before gestures occu
rthermore, one user could have different tem
behavior at different stages in one interaction. In our study, 
five users exhibited varied temporal alignment during the 
interaction. Therefore, to accommodate different temporal 
variations, incorporating relative temporal relations 
between different modalities based on temporal closeness 
is preferred over incorporating absolute temporal relations 
or temporal orders.  
Second, in a multimodal conversation, the potential 
objects referred to by a user could come from different 
sources. They could be the objects gestured at, objects in 
the visual focus (e.g., highlighted), objects visible on the 
screen, or objects mentioned in a prior conversation. It is 
important for reference resolution algorithms to 
simultaneously combine semantic, temporal, and 
contextual constraints. This is particularly important for 
complex inputs that involve multiple referring expressions 
and multiple gestures as described earlier. 
Third, depending on the interface design and the 
underlying architecture for multimodal systems, different 
types of uncertainties occur during the process of input 
interpretation. For example, in our interface, each house 
icon is built on top of the town icon. Therefore, a pointing 
gesture could result in several possible objects.  Once a 
touch screen is used, a finger point may result in different 
possibilities. Furthermore, most systems like ours are 
based on the pipelined architecture as shown in Figure1. 
The pipelined processes can potentially lose low 
probability information (e.g., recognized alternatives with 
low probabilities) that could be very crucial when 
incorporated with other modalities and the interaction 
context. Therefore, it is important to retain information at 
different levels and systematically incorporate the 
imprecise information.  
4 Conclusion 
This paper presents an evaluation of graph-based 
multimodal reference resolution in a conversational system. 
The evaluation indicates that, the real-time performance is 
largely dependent on speech recognition performance, 
language processing capability, disfluency detection from 
both speech and gesture, as well as the system engineering 
issues.  Furthermore, the studies identify three important 
strategies for robust multimodal reference resolution 
algorithms: (1) using relative temporal constraints based 
on temporal closeness, (2) combining temporal, semantic, 
and contextual constraints simultaneously, and (3) 
incorporating imprecise information. A successful 
approach will need to consider both algorithmic 
requirements and technology limitations.  
Acknowledgement 
The authors would like to thank Keith Houck and    
Michelle Zhou at IBM T. J. Watson Research Center for 
their support in developing the system, and the anonymous 
reviewers for their helpful comments and suggestions. 
 
References 
Bolt, R.A. 1980. Put that there: Voice and Gesture at the 
Graphics Interface. Computer Graphics14(3): 262-270. 
Cassell, J., Bickmore, T., Billinghurst, M., Campbell, L., 
Chang, K., Vilhjalmsson, H. and Yan, H. 1999. Embodi-
ment in Conversational Interfaces: Rea. In Proceedings of 
the CHI'99 Conference, pp. 520-527. Pittsburgh, PA. 
Chai, J. Y., Hong, P., and Zhou, M. X. 2004. A probabilistic 
approach to reference resolution in multimodal user inter-
faces, Proceedings of 9th International Conference on Intel-
ligent User Interfaces (IUI): 70-77. Madeira, Portugal, 
January.  
Chai, J., Pan, S., Zhou, M., and Houck, K. 2002. Context-
based Multimodal Interpretation in Conversational Systems. 
Fourth International Conference on Multimodal Interfaces. 
Chen, L., Harper, M. and Quek, F. 2002. Gesture patterns 
during speech repairs. Proceedings of International Con-
ference on Multimodal Interfaces (ICMI).  
Cohen, P., Johnston, M., McGee, D., Oviatt, S., Pittman, J., 
Smith, I., Chen, L., and Clow, J. 1996. Quickset: Multimo-
dal Interaction for Distributed Applications. Proceedings of 
ACM Multimedia, pp. 31? 40. 
Gold, S. and Rangarajan, A. 1996. A graduated assignment 
algorithm for graph-matching. IEEE Trans. Pattern Analy-
sis and Machine Intelligence, vol. 18, no. 4. 
Gorniak, P. and Roy, D. 2003.Grounded Semantic Composi-
tion for Visual Scenes. Journal of Artificial Intelligence 
Research. 
Huls, C., Bos, E., and Classen, W. 1995. Automatic Referent 
Resolution of Deictic and Anaphoric Expressions. Compu-
tational Linguistics, 21(1):59-79. 
Johnston, M. 1998. Unification-based Multimodal parsing, 
Proceedings of COLING-ACL.  
Johnston, M. and Bangalore, S. 2000. Finite-state multimodal 
parsing and understanding. Proceedings of COLING. 
Johnston, M.,  Bangalore, S.,  Visireddy G., Stent, A., Ehlen, 
P., Walker, M., Whittaker, S., and Maloor, P. 2002. 
MATCH: An Architecture for Multimodal Dialog Systems, 
in Proceedings of ACL. 
Kehler, A. 2000. Cognitive Status and Form of Reference in 
Multimodal Human-Computer Interaction, Proceedings of 
AAAI. 
Neal, J. G., Thielman, C. Y.,  Dobes, Z. Haller, S. M., and 
Shapiro, S. C. 1998. Natural Language with Integrated 
Deictic and Graphic Gestures. Intelligent User Interfaces, 
M. Maybury and W. Wahlster (eds.), 38-51.  
Oviatt, S., DeAngeli, A., and Kuhn, K. 1997. Integration and 
Synchronization of Input Modes during Multimodal Hu-
man-Computer Interaction, In Proceedings of Conference 
on Human Factors in Computing Systems: CHI '97. 
Tsai, W.H. and Fu, K.S.  1979. Error-correcting isomorphism 
of attributed relational graphs for pattern analysis. IEEE 
Transactions on Systems, Man and Cybernetics, vol. 9, pp. 
757?768. 
Zancanaro, M., Stock, O., and Strapparava, C. 1997. Multi-
modal Interaction for Information Access: Exploiting Co-
hesion. Computational Intelligence 13(7):439-464. 
Optimization in Multimodal Interpretation  
Joyce Y. Chai*         Pengyu Hong+ Michelle X. Zhou? Zahar Prasov* 
*Computer Science and Engineering 
Michigan State University  
East Lansing, MI 48824 
{jchai@cse.msu.edu,  
prasovz@cse.msu.edu} 
+Department of Statistics 
Harvard University 
Cambridge, MA 02138 
hong@stat.harvard.edu 
?Intelligent Multimedia Interaction  
  IBM T. J. Watson Research Ctr. 
Hawthorne, NY 10532 
mzhou@us.ibm.com 
Abstract 
    In a multimodal conversation, the way users 
communicate with a system depends on the 
available interaction channels and the situated 
context (e.g., conversation focus, visual feedback). 
These dependencies form a rich set of constraints 
from various perspectives such as temporal 
alignments between different modalities, 
coherence of conversation, and the domain 
semantics. There is strong evidence that 
competition and ranking of these constraints is 
important to achieve an optimal interpretation. 
Thus, we have developed an optimization approach 
for multimodal interpretation, particularly for 
interpreting multimodal references. A preliminary 
evaluation indicates the effectiveness of this 
approach, especially for complex user inputs that 
involve multiple referring expressions in a speech 
utterance and multiple gestures.   
1 Introduction 
Multimodal systems provide a natural and 
effective way for users to interact with computers 
through multiple modalities such as speech, 
gesture, and gaze (Oviatt 1996). Since the first 
appearance of ?Put-That-There? system (Bolt 
1980), a variety of multimodal systems have 
emerged, from early systems that combine speech, 
pointing (Neal et al, 1991), and gaze (Koons et al 
1993), to systems that integrate speech with pen 
inputs (e.g., drawn graphics) (Cohen et al, 1996; 
Wahlster 1998; Wu et al, 1999), and systems that 
engage users in intelligent conversation (Cassell et 
al., 1999; Stent et al, 1999; Gustafson et al, 2000; 
Chai et al, 2002; Johnston et al, 2002).   
One important aspect of building multimodal 
systems is multimodal interpretation, which is a 
process that identifies the meanings of user inputs. 
In a multimodal conversation, the way users 
communicate with a system depends on the 
available interaction channels and the situated 
context (e.g., conversation focus, visual feedback). 
These dependencies form a rich set of constraints 
from various aspects (e.g., semantic, temporal, and 
contextual). A correct interpretation can only be 
attained by simultaneously considering these 
constraints. In this process, two issues are 
important: first, a mechanism to combine 
information from various sources to form an 
overall interpretation given a set of constraints; and 
second, a mechanism that achieves the best 
interpretation among all the possible alternatives 
given a set of constraints. The first issue focuses on 
the fusion aspect, which has been well studied in 
earlier work, for example, through unification-
based approaches (Johnston 1998) or finite state 
approaches (Johnston and Bangalore, 2000). This 
paper focuses on the second issue of optimization.  
As in natural language interpretation, there is 
strong evidence that competition and ranking of 
constraints is important to achieve an optimal 
interpretation for multimodal language processing.  
We have developed a graph-based optimization 
approach for interpreting multimodal references. 
This approach achieves an optimal interpretation 
by simultaneously applying semantic, temporal, 
and contextual constraints. A preliminary 
evaluation indicates the effectiveness of this 
approach, particularly for complex user inputs that 
involve multiple referring expressions in a speech 
utterance and multiple gestures. In this paper, we 
first describe the necessities for optimization in 
multimodal interpretation, then present our graph-
based optimization approach and discuss how our 
approach addresses key principles in Optimality 
Theory used for natural language interpretation  
(Prince and Smolensky 1993).  
2 Necessities for Optimization in 
Multimodal Interpretation 
In a multimodal conversation, the way a user 
interacts with a system is dependent not only on 
the available input channels (e.g., speech and 
gesture), but also upon his/her conversation goals, 
the state of the conversation, and the multimedia 
feedback from the system. In other words, there is 
a rich context that involves dependencies from 
many different aspects established during the 
interaction. Interpreting user inputs can only be 
situated in this rich context. For example, the 
temporal relations between speech and gesture are 
important criteria that determine how the 
information from these two modalities can be 
combined. The focus of attention from the prior 
conversation shapes how users refer to those 
objects, and thus, influences the interpretation of 
referring expressions. Therefore, we need to 
simultaneously consider the temporal relations 
between the referring expressions and the gestures, 
the semantic constraints specified by the referring 
expressions, and the contextual constraints from 
the prior conversation. It is important to have a 
mechanism that supports competition and ranking 
among these constraints to achieve an optimal 
interpretation, in particular, a mechanism to allow 
constraint violation and support soft constraints.  
We use temporal constraints as an example to 
illustrate this viewpoint1.  The temporal constraints 
specify whether multiple modalities can be 
combined based on their temporal alignment. In 
earlier work, the temporal constraints are 
empirically determined based on user studies 
(Oviatt 1996). For example, in the unification-
based approach (Johnston 1998), one temporal 
constraint indicates that speech and gesture can be 
combined only when the speech either overlaps 
with gesture or follows the gesture within a certain 
time frame. This is a hard constraint that has to be 
satisfied in order for the unification to take place. 
If a given input does not satisfy these hard 
constraints, the unification fails.  
In our user studies, we found that, although the 
majority of user temporal alignment behavior may 
satisfy pre-defined temporal constraints, there are 
                                                                
1 We implemented a system using real estate as an application 
domain.  The user can interact with a map using both speech 
and gestures to retrieve information. All the user studies men-
tioned in this paper were conducted using this system.  
some exceptions. Table 1 shows the percentage of 
different temporal relations collected from our user 
studies. The rows indicate whether there is an 
overlap between speech referring expressions and 
their accompanied gestures. The columns indicate 
whether the speech (more precisely, the referring 
expressions) or the gesture occurred first. 
Consistent with the previous findings (Oviatt et al 
1997), in most cases (85% of time), gestures 
occurred before the referring expressions were 
uttered. However, in 15% of the cases the speech 
referring expressions were uttered before the 
gesture occurred. Among those cases, 8% had an 
overlap between the referring expressions and the 
ge
), 
al al 
(i ) 
in f 
in e 
1 n 
in 6 
m ?s 
sp d 
w d 
ah e 
us
sp
be
te
ac
T
0
0.2
0.4
0.6
0.8
1
1 2 3 4 5 6 7
User
Pe
rc
en
ta
ge
Non-overlap Speech First Non-overlap Gesture First
Overlap Speech First Overlap Gesture First
Figure 1: Temporal relations between speech and gesture 
for individual users 
100%85%15%Total
48%40%8%Overlap
52%45%7%Non-overlap
TotalGesture FirstSpeech First
 
Table 1: Overall temporal relations between speech and 
gesture sture and 7% had no overlap.  
Furthermore, as shown in (Oviatt et al, 2003
though multimodal behaviors such as sequenti
.e., non-overlap) or simultaneous (e.g., overlap
tegration are quite consistent during the course o
teraction, there are still some exceptions. Figur
shows the temporal alignments from seve
dividual users in our study. User 2 and User 
aintained a consistent behavior in that User 2
eech referring expressions always overlappe
ith gestures and User 6?s gesture always occurre
ead of the speech expressions. The other fiv
ers exhibited varied temporal alignment between 
eech and gesture during the interaction.  It will 
 difficult for a system using pre-defined 
mporal constraints to anticipate and 
commodate all these different behaviors.  
herefore, it is desirable to have a mechanism that 
allows violation of these constraints and support 
soft or graded constraints.  
3 A Graph-based Optimization Approach  
To address the necessities described above, we 
developed an optimization approach for 
interpreting multimodal references using graph 
matching. The graph representation captures both 
salient entities and their inter-relations. The graph 
matching is an optimization process that finds the 
best matching between two graphs based on 
constraints modeled as links or nodes in these 
graphs. This type of structure and process is 
especially useful for interpreting multimodal 
references. One graph can represent all the 
referring expressions and their inter-relations, and 
the other graph can represent all the potential 
referents. The question is how to match them 
together to achieve a maximum compatibility 
given a particular context.  
3.1 Overview  
Graph-based Representation 
Attribute Relation Graph (ARG) (Tsai and Fu, 1979) 
is used to represent information in our approach. 
An ARG consists of a set of nodes that are 
connected by a set of edges. Each node represents 
an entity, which in our case is either a referring 
expression to be resolved or a potential referent.  
Each node encodes the properties of the 
corresponding entity including: 
? Semantic information that indicates the 
semantic type, the number of potential referents, 
and the specific attributes related to the 
corresponding entity (e.g., extracted from the 
referring expressions).  
? Temporal information that indicates the time 
when the corresponding entity is introduced into 
the discourse (e.g., uttered or gestured).  
Each edge represents a set of relations between 
two entities. Currently we capture temporal 
relations and semantic type relations. A temporal 
relation indicates the temporal order between two 
related entities during an interaction, which may 
have one of the following values:  
? Precede: Node A precedes Node B if the entity 
represented by Node A is introduced into the 
discourse before the entity represented by Node B.  
? Concurrent: Node A is concurrent with Node B if 
the entities represented by them are referred to or 
mentioned simultaneously. 
? Non-concurrent: Node A is non-concurrent with 
Node B if their corresponding objects/references 
cannot be referred/mentioned simultaneously.  
? Unknown: The temporal order between two entities 
is unknown. It may take the value of any of the 
above.  
A semantic type relation indicates whether two 
related entities share the same semantic type. It 
currently takes the following discrete values: Same, 
Different, and Unknown. It could be beneficial in the 
future to consider a continuous function measuring 
the rate of compatibility instead.  
Specially, two graphs are generated. One graph, 
called the referring graph, captures referring 
expressions from speech utterances. For example, 
suppose a user says Compare this house, the green 
house, and the brown one. Figure 2 show a referring 
graph that represents three referring expressions 
from this speech input. Each node captures the 
semantic information such as the semantic type 
(i.e., Semantic Type), the attribute (Color), the 
number (Number) of the potential referents, as well 
as the temporal information about when this 
referring expression is uttered (BeginTime and 
EndTime). Each edge captures the semantic (e.g., 
SemanticTypeRelation) and temporal relations (e.g., 
TemporalRelation) between the referring expressions. 
In this case, since the green house is uttered before 
the brown one, there is a temporal Precede 
relationship between these two expressions. 
Furthermore, according to our heuristic that 
objects-to-be-compared should share the same 
semantic type, therefore, the SemanticTypeRelation 
between two nodes is set to Same.  
Node 1
this house
Node 2
the green 
house
Node 3
the brown 
one
SemanticType: House
Number.: 1
Attribute: Color = $Green
BeginTime: 32244242ms
EndTime: ?
? ?
SemanticTypeRelation: Same
TemporalRelation: Precede
Direction: Node 2 -> Node 3
Speech: Compare this house, the green house    
and the brown one
 
Figure 2: An example of a referring graph 
Similarly, the second graph, called the referent 
graph, represents all potential referents from 
multiple sources (e.g., from the last conversation, 
gestured by the user, etc). Each node captures the 
semantic and temporal information about a 
potential referent (e.g., the time when the potential 
referent is selected by a gesture). Each edge 
captures the semantic and temporal relations 
between two potential referents.  For instance, 
suppose the user points to one position and then 
points to another position. The corresponding 
referent graph is shown in Figure 3. The objects 
inside the first dashed rectangle correspond to the 
potential referents selected by the first pointing 
gesture and those inside the second dashed 
rectangle correspond to the second pointing gesture. 
Each node also contains a probability that indicates 
the likelihood of its corresponding object being 
selected by the gesture. Furthermore, the salient 
objects from the prior conversation are also 
included in the referent graph since they could also 
be the potential referents (e.g., the rightmost 
dashed rectangle in Figure 32).  
To create these graphs, we apply a grammar-
based natural language parser to process speech 
inputs and a gesture recognition component to 
process gestures. The details are described in (Chai 
et al 2004a).  
                                                                
2 Each node from the conversation context is linked to every 
node corresponding to the first pointing and the second point-
ing.  
Graph-matching Process 
Given these graph representations, interpreting 
multimodal references becomes a graph-matching 
problem. The goal is to find the best match 
between a referring graph (Gs) and a referent graph 
(Gr). Suppose ? A referring graph Gs = ?{?m}, {?mn}?, where {?m} are 
nodes and {?mn} are edges connecting nodes ?m and ?n. Nodes in Gs are named referring nodes. 
? A referent graph Gr = ?{ax}, {rxy}?, where {ax} are 
nodes and {rxy} are edges connecting nodes ax and ay. 
Nodes in Gr are named referent nodes. 
   The following equation finds a match that 
achieves the maximum compatibility between Gr 
and Gs:  
),(),(),(
),(),(),(
mnxynymxx y m n
mxmxx msr
rEdgeSimaPaP
aNodeSimaPGGQ
???
??
? ? ? ?
? ? +=  (1)   
In Equation (1), Q(Gr,Gs) measures the degree of 
the overall match between the referent graph and 
the referring graph. P(ax,?m) is the matching 
probability between a node ax in the referent graph 
and a node ?m in the referring graph. The overall 
compatibility depends on the similarities between 
nodes (NodeSim) and the similarities between 
edges (EdgeSim). The function NodeSim(ax,?m) 
measures the similarity between a referent node ax 
and a referring node ?m by combining semantic 
constraints and temporal constraints. The function 
EdgeSim(rxy,?mn) measures the similarity between 
rxy and ?mn, which depends on the semantic and 
temporal constraints of the corresponding edges. 
These functions are described in detail in the next 
section.  
We use the graduated assignment algorithm 
(Gold and Rangarajan, 1996) to maximize Q(Gr,Gs) 
in Equation (1). The algorithm first initializes 
P(ax,?m) and then iteratively updates the values of 
P(ax,?m) until it converges. When the algorithm 
converges, P(ax,?m) gives the matching 
probabilities between the referent node ax and the 
referring node ?m that maximizes the overall 
compatibility function. Given this probability 
matrix, the system is able to assign the most 
probable referent(s) to each referring expression.  
3.2 Similarity Functions  
As shown in Equation (1), the overall 
compatibility between a referring graph and a 
referent graph depends on the node similarity 
Ossining
Chappaqua
Object ID: MLS2365478
SemanticType: House
Attribute: Color = $Brown
BeginTime: 32244292 ms
SelectionProb: 0.65
? ?
Semantic Type Relation: Diff
Temporal relation: Same
Direction: 
Gesture: Point to one position and point to 
another position
First pointing Second pointing Conversation
Context
Figure 3: An example of referent graph 
function and the edge similarity function. Next we 
give a detailed account of how we defined these 
functions. Our focus here is not on the actual 
definitions of those functions (since they may vary 
for different applications), but rather a mechanism 
that leads to competition and ranking of constraints.  
Node Similarity Function 
Given a referring expression (represented as ?m 
in the referring graph) and a potential referent 
(represented as ax in the referent graph), the node 
similarity function is defined based on the 
semantic and temporal information captured in ax 
and ?m through a set of individual compatibility 
functions: 
   NodeSim(ax,?m) = Id(ax,?m) SemType(ax,?m)  
                               ?k Attrk(ax,?m) Temp(ax,?m) 
Currently, in our system, the specific return 
values for these functions are empirically 
determined through iterative regression tests.  
Id(ax,?m) captures the constraint of the 
compatibilities between identifiers specified in ax 
and ?m. It indicates that the identifier of the 
potential referent, as expressed in a referring 
expression, should match the identifier of the true 
referent. This is particularly useful for resolving 
proper nouns. For example, if the referring 
expression is house number eight, then the correct 
referent should have the identifier number eight.  
We currently define this constraint as follows: 
Id(ax,?m) = 0 if the object identities of ax and ?m 
are different. Id(ax,?m) = 100 if they are the same. 
Id(ax,?m) = 1 if at least one of the identities of ax 
and ?m is unknown. The different return values 
enforce that a large reward is given to the case 
where the identifiers from the referring expressions 
match the identifiers from the potential referents.  
SemType(ax,?m) captures the constraint of 
semantic type compatibility between  ax and ?m. It 
indicates that the semantic type of a potential 
referent as expressed in the referring expression 
should match the semantic type of the correct 
referent. We define the following: SemType(ax,?m) 
= 0 if the semantic types of ax and ?m are different. 
SemType(ax,?m) = 1 if they are the same. 
SemType(ax,?m) = 0.5 if at least one of the 
semantic types of ax and ?m is unknown. Note that 
the return value given to the case where semantic 
types are the same (i.e., ?1?) is much lower than 
that given to the case where identifiers are the 
same (i.e., ?100?). This was designed to support 
constraint ranking. Our assumption is that the 
constraint on identifiers is more important than the 
constraint on semantic types. Because identifiers 
are usually unique, the corresponding constraint is 
a greater indicator of node matching if the 
identifier expressed from a referring expression 
matches the identifier of a potential referent. 
Attrk(ax,?m) captures the domain specific 
constraint concerning a particular semantic feature 
(indicated by the subscription k). This constraint 
indicates that the expected features of a potential 
referent as expressed in a referring expression 
should be compatible with features associated with 
the true referent. For example, in the referring 
expression the Victorian house, the style feature is 
Victorian.  Therefore, an object can only be a 
possible referent if the style of that object is 
Victorian.  Thus, we define the following: Ak(ax,?m) 
= 1 if both ax and ?m share the kth feature with the 
same value. Ak(ax,?m) = 0 if both ax and ?m have 
the feature k and the values of the feature k are not 
equal. Otherwise, when the kth feature is not 
present in either ax or ?m, then Ak (ax,?m) = 0.1.  
Note that these feature constraints are dependent 
on the specific domain model for a particular 
application.  
Temp(ax,?m) captures the temporal constraint 
between a referring expression ?m and a potential 
referent ax. As discussed in Section 2, a hard 
constraint concerning temporal relations between 
referring expressions and gestures will be 
incapable of handling the flexibility of user 
temporal alignment behavior. Thus the temporal 
constraint in our approach is a graded constraint, 
which is defined as follows: 
          
)
2000
|)()(|exp(),( mxmx
BeginTimeaBeginTimeaTemp ?? ??=  
This constraint indicates that the closer a 
referring expression and a potential referent in 
terms of their temporal alignment (regardless of 
the absolute precedence relationship), the more 
compatible they are.  
Edge Similarity Function 
The edge similarity function measures the 
compatibility of relations held between referring 
expressions (i.e., an edge ?mn in the referring graph) 
and relations between the potential referents (i.e., 
an edge rxy in the referent graph). It is defined by 
two individual compatibility functions as follows: 
EdgeSim(rxy, ?mn) = SemType(rxy, ?mn) Temp(rxy, ?mn)   
   SemType(rxy, ?mn) encodes the semantic type 
compatibility between an edge in the referring 
graph and an edge in the referent graph. It is 
defined in Table 2. This constraint indicates that 
the relation held between referring expressions 
should be compatible with the relation held 
between two correct referents. For example, 
consider the utterance How much is this green house 
and this blue house. This utterance indicates that the 
referent to the first expression this green house 
should share the same semantic type as the referent 
to the second expression this blue house. As shown 
in Table 2, if the semantic type relations of rxy and 
?mn are the same, SemType(rxy, ?mn) returns 1. If 
they are different, SemType(rxy, ?mn) returns zero. If 
either rxy or ?mn is unknown, then it returns 0.5.  
   Temp(rxy, ?mn) captures the temporal 
compatibility between an edge in the referring 
graph and an edge in the referent graph. It is 
defined in Table 3. This constraint indicates that 
the temporal relationship between two referring 
expressions (in one utterance) should be 
compatible with the relations of their 
corresponding referents as they are introduced into 
the context (e.g., through gesture). The temporal 
relation between referring expressions (i.e., ?mn) is 
either Precede or Concurrent. If the temporal 
relations of rxy and ?mn are the same, then Temp(rxy, 
?mn) returns 1. Because potential references could 
come from prior conversation, even if rxy and ?mn 
are not the same, the function does not return zero 
when ?mn is Precede.  
Next, we discuss how these definitions and the 
process of graph matching address optimization, in 
particular, with respect to key principles of 
Optimality Theory for natural language 
interpretation.  
3.3 Optimality Theory 
Optimality Theory (OT) is a theory of language 
and grammar, developed by Alan Prince and Paul 
Smolensky (Prince and Smolensky, 1993). In 
Optimality Theory, a grammar consists of a set of 
well-formed constraints. These constraints are 
applied simultaneously to identify linguistic 
structures. Optimality Theory does not restrict the 
content of the constraints (Eisner 1997). An 
innovation of Optimality Theory is the conception 
of these constraints as soft, which means violable 
and conflicting.  The interpretation that arises for 
an utterance within a certain context maximizes the 
degree of constraint satisfaction and is 
consequently the best alternative (hence, optimal 
interpretation) among the set of possible 
interpretations.  
The key principles or components of Optimality 
Theory can be summarized as the following three 
components (Blutner 1998): 1) Given a set of input, 
Generator creates a set of possible outputs for each 
input. 2) From the set of candidate output, Evaluator 
selects the optimal output for that input. 3) There is 
a strict dominance in term of the ranking of constraints. 
Constraints are absolute and the ranking of the 
constraints is strict in the sense that outputs that 
have at least one violation of a higher ranked 
constraint outrank outputs that have arbitrarily 
many violations of lower ranked constraints. 
Although Optimality Theory is a grammar-based 
framework for natural language processing, its key 
principles can be applied to other representations. 
At a surface level, our approach addresses these 
main principles. 
First, in our approach, the matching matrix 
P(ax,?m) captures the probabilities of all the 
possible matches between a referring node ?m and 
a referent node ax. The matching process updates 
these probabilities iteratively. This process 
corresponds to the Generator component in 
Optimality Theory.  
Second, in our approach, the satisfaction or 
violation of constraints is implemented via return 
values of compatibility functions. These 
0.50.50.5Unknown
0.510Different
0.501Same?mn
Unknown DifferentSame
rxySemType(rxy, ?mn)
 
Table 2: Definition of SemType(rxy, ?mn) 
 
0.5010Concurrent
0.50.70.51Precede?mn
Unknown Non-concurrentConcurrentPreceding
rxyTemp(rxy, ?mn)
Table 3: Definition of Temp(rxy, ?mn) 
constraints can be violated during the matching 
process. For example, functions Id(ax,?m), 
SemType(ax,?m), and Attrk(ax,?m) return zero if the 
corresponding intended constraints are violated. In 
this case, the overall similarity function will return 
zero. However, because of the iterative updating 
nature of the matching algorithm, the system will 
still find the most optimal match as a result of the 
matching process even some constraints are 
violated. Furthermore, A function that never 
returns zero such as Temp(ax,?m) in the node 
similarity function implements a gradient 
 
 
 
 
 
 
 
. 
 
 
, 
 
 
. 
 
3.4 Evaluation  
We conducted several user studies to evaluate 
the performance of this approach. Users could 
interact with our system using both speech and 
deictic gestures. Each subject was asked to 
complete five tasks. For example, one task was to 
find the cheapest house in the most populated town. 
Data from eleven subjects was collected and 
analyzed. 
Table 4 shows the evaluation results of 219 
inputs. These inputs were categorized in terms of 
the number of referring expressions in the speech 
input and the number of gestures in the gesture 
inputs. Out of the total 219 inputs, 137 inputs had 
their referents correctly interpreted. For the 
remaining 82 inputs in which the referents were 
not correctly identified, the problem did not come 
from the approach itself, but rather from other 
sources such as speech recognition and language 
understanding errors.  These were two major error 
sources, which were accounted for 55% and 20% 
of total errors respectively (Chai et al 2004b).    
In our studies, the majority of user references 
were simple in that they involved only one 
referring expression and one gesture as in earlier 
findings (Kehler 2000). It is trivial for our 
approach to handle these simple inputs since the 
size of the graph is usually very small and there is 
only one node in the referring graph. However, we 
did find 23% complex inputs (the row S3 and the 
column G3 in Table 4), which involved multiple 
referring expressions from speech utterances 
and/or multiple gestures. Our optimization 
approach is particularly effective to interpret these 
complex inputs by simultaneously considering 
semantic, temporal, and contextual constraints.  
4 Conclusion 
As in natural language interpretation addressed 
by Optimality Theory, the idea of optimizing 
constraints is beneficial and there is evidence in 
favor of competition and constraint ranking in 
multimodal language interpretation. We developed 
a graph-based approach to address optimization for 
multimodal interpretation; in particular, 
interpreting multimodal references. Our approach 
simultaneously applies temporal, semantic, and 
contextual constraints together and achieves the 
best interpretation among all alternatives. Although 
currently the referent graph corresponds to gesture 
129(111)
90(26)
20(15),
19(2)
102(91),
65(22)
7(5),
6(2)
Total Num
15(9),
16(1)
12(8),
8(0)
3(1),
7(1)
0(0),
1(0)
S3: Multiple referring 
expressions
110(90),
74(25)
8(7),
11(2)
96(89),
58(21)
6(4),
5(2)
S2: One referring
expression
4(2),
0(0)
03(1),
0(0)
1(1),
0(0)
S1:No referring
expression
Total
Num
G3: Multi-
Gestures
G2: One 
Gesture
G1: No 
Gesture
 
Table 4: Evaluation Results. In each entry form ?a(b), c(d)?,
?a? indicates the number of inputs in which the referring
expressions were correctly recognized by the speech recog-
nizer; ?b? indicates the number of inputs in which the refer-
ring expressions were  correctly recognized and were
correctly resolved; ?c? indicates the number of inputs in
which the referring expressions were not correctly recog-
nized; ?d? indicates the number of inputs in which the refer-
ring expressions also were not correctly recognized, but
were correctly resolved. The sum of ?a? and ?c? gives the
total number of inputs with a particular combination of
speech and gesture. constraint in Optimality Theory. Given these
compatibility functions, the graph-matching
algorithm provides an optimization process to find
the best match between two graphs. This process
corresponds to the Evaluator component of
Optimality Theory.  
Third, in our approach, different compatibility
functions return different values to address the
Constraint Ranking component in Optimality Theory
For example, as discussed earlier, once ax and ?m
share the same identifier, Id(ax,?m) returns 100. If
ax and ?m share the same semantic type
SemType(ax,?m) returns 1. Here, we consider the
compatibility between identifiers is more important
than the compatibility between semantic types
However, currently we have not yet addressed the
strict dominance aspect of Optimality Theory. 
input and conversation context, it can be easily 
extended to incorporate other modalities such as 
gaze inputs.  
We have only taken an initial step to investigate 
optimization for multimodal language processing. 
Although preliminary studies have shown the 
effectiveness of the optimization approach based 
on graph matching, this approach also has its 
limitations.  The graph-matching problem is a NP 
complete problem and it can become intractable 
once the size of the graph is increased. However, 
we have not experienced the delay of system 
responses during real-time user studies. This is 
because most user inputs were relatively concise 
(they contained no more than four referring 
expressions).  This brevity limited the size of the 
graphs and thus provided an opportunity for such 
an approach to be effective. Our future work will 
address how to extend this approach to optimize 
the overall interpretation of user multimodal inputs.  
Acknowledgements 
This work was partially supported by grant IIS-
0347548 from the National Science Foundation 
and grant IRGP-03-42111 from Michigan State 
University. The authors would like to thank John 
Hale and anonymous reviewers for their helpful 
comments and suggestions.  
References 
Bolt, R.A. 1980. Put that there: Voice and Gesture at the 
Graphics Interface. Computer Graphics, 14(3): 262-270.  
Blutner, R., 1998. Some Aspects of Optimality In Natural 
Language Interpretation. Journal of Semantics, 17, 189-216. 
Cassell, J., Bickmore, T., Billinghurst, M., Campbell, L., 
Chang, K., Vilhjalmsson, H. and Yan, H. 1999. Embodi-
ment in Conversational Interfaces: Rea. In Proceedings of 
the CHI'99 Conference, 520-527.  
Chai, J., Prasov, Z, and Hong, P. 2004b. Performance Evalua-
tion and Error Analysis for Multimodal Reference Resolu-
tion in a Conversational System. Proceedings of HLT-
NAACL 2004 (Companion Volumn).  
Chai, J. Y., Hong, P., and Zhou, M. X. 2004a. A Probabilistic 
Approach to Reference Resolution in Multimodal User In-
terfaces, Proceedings of 9th International Conference on 
Intelligent User Interfaces (IUI): 70-77.  
Chai, J., Pan, S., Zhou, M., and Houck, K. 2002. Context-
based Multimodal Interpretation in Conversational Systems. 
Fourth International Conference on Multimodal Interfaces. 
Cohen, P., Johnston, M., McGee, D., Oviatt, S., Pittman, J., 
Smith, I., Chen, L., and Clow, J. 1996. Quickset: Multimo-
dal Interaction for Distributed Applications. Proceedings of 
ACM Multimedia. 
Eisner, Jason. 1997. Efficient Generation in Primitive Opti-
mality Theory. Proceedings of ACL?97. 
Gold, S. and Rangarajan, A. 1996. A Graduated Assignment 
Algorithm for Graph-matching. IEEE Trans. Pattern 
Analysis and Machine Intelligence, vol. 18, no. 4.  
Gustafson, J., Bell, L., Beskow, J., Boye J., Carlson, R., Ed-
lund, J., Granstrom, B., House D., and Wiren, M.  2000. 
AdApt ? a Multimodal Conversational Dialogue System in 
an Apartment Domain. Proceedings of 6th International 
Conference on Spoken Language Processing (ICSLP). 
Johnston, M, Cohen, P., McGee, D., Oviatt, S., Pittman, J. and 
Smith, I. 1997. Unification-based Multimodal Integration, 
Proceedings of ACL?97. 
Johnston, M. 1998. Unification-based Multimodal Parsing, 
Proceedings of COLING-ACL?98. 
Johnston, M. and Bangalore, S. 2000. Finite-state Multimodal 
Parsing and Understanding. Proceedings of COLING?00.  
Johnston, M.,  Bangalore, S.,  Visireddy G., Stent, A., Ehlen, 
P., Walker, M., Whittaker, S., and Maloor, P. 2002. 
MATCH: An Architecture for Multimodal Dialog Systems, 
Proceedings of ACL?02, Philadelphia, 376-383. 
Kehler, A. 2000. Cognitive Status and Form of Reference in 
Multimodal Human-Computer Interaction, Proceedings of 
AAAI?01, 685-689. 
Koons, D. B., Sparrell, C. J. and Thorisson, K. R. 1993. Inte-
grating Simultaneous Input from Speech, Gaze, and Hand 
Gestures. In Intelligent Multimedia Interfaces, M. Maybury, 
Ed. MIT Press: Menlo Park, CA. 
Neal, J. G., and Shapiro, S. C.  1991. Intelligent Multimedia 
Interface Technology. In Intelligent User Interfaces, J. Sul-
livan & S. Tyler, Eds. ACM: New York. 
Oviatt, S. L. 1996. Multimodal Interfaces for Dynamic Inter-
active Maps. In Proceedings of Conference on Human Fac-
tors in Computing Systems: CHI '96, 95-102.  
Oviatt, S., DeAngeli, A., and Kuhn, K., 1997. Integration and 
Synchronization of Input Modes during Multimodal Hu-
man-Computer Interaction, In Proceedings of Conference 
on Human Factors in Computing Systems: CHI '97. 
Oviatt, S., Coulston, R., Tomko, S., Xiao, B., Bunsford, R. 
Wesson, M., and Carmichael, L. 2003. Toward a Theory of 
Organized Multimodal Integration Patterns during Human-
Computer Interaction. In Proceedings of Fifth International 
Conference on Multimodal Interfaces, 44-51.  
Prince, A. and Smolensky, P. 1993. Optimality Theory. Con-
straint Interaction in Generative Grammar. ROA 537.  
http://roa.rutgers.edu/view.php3?id=845.  
Stent, A., J. Dowding, J. M. Gawron, E. O. Bratt, and R. 
Moore. 1999. The Commandtalk Spoken Dialog System. 
Proceedings of ACL?99,  183?190. 
Tsai, W.H. and Fu, K.S.  1979. Error-correcting Isomorphism 
of Attributed Relational Graphs for Pattern Analysis. IEEE 
Transactions on Systems, Man and Cybernetics., vol. 9. 
Wahlster, W., 1998. User and Discourse Models for Multimo-
dal Communication. Intelligent User Interfaces, M. 
Maybury and W. Wahlster (eds.),  359-370. 
Wu, L., Oviatt, S., and Cohen, P. 1999. Multimodal Integra-
tion ? A Statistical View, IEEE Transactions on Multime-
dia, Vol. 1, No. 4, 334-341.   
Combining Semantic and Temporal Constraints for Multimodal Integra-
tion in Conversation Systems 
Joyce Y. Chai 
Department of Computer 
Science and Engineering 
Michigan State University 
East Lansing, MI 48864 
jchai@cse.msu.edu 
Pengyu Hong  
Department of Statistics 
Harvard University 
Cambridge, MA 02138 
hong@stat.harvard.edu
Michelle X. Zhou 
IBM T. J. Watson Research 
Center 
19 Skyline Drive 
Hawthorne, NY 10532 
mzhou@us.ibm.com 
Abstract 
In a multimodal conversation, user refer-
ring patterns could be complex, involving 
multiple referring expressions from 
speech utterances and multiple gestures. 
To resolve those references, multimodal 
integration based on semantic constraints 
is insufficient. In this paper, we describe a 
graph-based probabilistic approach that 
simultaneously combines both semantic 
and temporal constraints to achieve a high 
performance.  
1 
                                                          
Introduction 
Multimodal conversation systems allow users to 
converse with systems through multiple modalities 
such as speech, gesture and gaze (Cohen et al, 
1996; Wahlster, 1998).  In such an environment, 
not only are more interaction modalities available, 
but also richer contexts are established during the 
interaction. Understanding user inputs, for 
example, what users refer to is important. Previous 
work on multimodal reference resolution includes 
the use of a focus space model (Neal et al, 1998), 
the centering framework (Zancanaro et al, 1997), 
context factors (Huls et al, 1995), and rules 
(Kehler 2000). These previous approaches focus 
on semantics constraints without fully addressing 
temporal constraints. In a user study1, we found 
that the majority of user referring behavior 
involved one referring expression and one gesture 
(as in [S2, G2] in Table 1). The earlier approaches 
worked well for these types of references. 
However, we found that 14.1% of the inputs were 
complex, which involved multiple referring 
expressions from speech utterances and multiple 
gestures (S3 in Table 1). To resolve those complex 
references, we have to not only apply semantic 
constraints, but also apply temporal constraints at 
the same time.  
For example, Figure 1 shows three inputs where 
the number of referring expressions is the same 
and the number of gestures is the same. The speech 
utterances and gestures are aligned along the time 
axis. The first case (Figure 1a) and the second case 
(Figure 1b) have the same speech utterance but 
different temporal alignment between the gestures 
and the speech input. The second case and the third 
case (Figure 1c) have a similar alignment, but the 
third case provides an additional constraint on the 
number of referents (from the word ?two?).  
Although all three cases are similar, but the 
objects they refer to are quite different in each 
case. In the first case, most likely ?this? refers to 
the house selected by the first point gesture and 
?these houses? refers to two houses selected by the 
other two gestures. In the second case, ?this? most 
likely refers to the highlighted house on the display 
and ?these houses? refer to three houses selected 
by the gestures. In the third case, ?this? most likely 
refers to the house selected by the first point 
gesture and ?these two houses? refers to two 
houses selected by the other two point gestures. 
1561712415Total Num
221561S3: mul. expressions
131211712S2: one expression
3012S1: no expression
Total
Num
G3
mul. gest.
G2
one gest
G1
no gest.
Table 1: Referring patterns from the user study 1 We are developing a system that helps users find real estate 
properties. So here we use real estate as the testing domain. 
Gesture input: ??...?????.??.?.???????
(a)
Time
Speech input: Compare  this     with     these    houses.
Gesture input: ??...??????????...????
(b)
Time
Speech input: Compare  this  with       these         houses.
Gesture input: ??...????.. ..??.?.??...????
(c)
Time
Speech input: Compare  this   with     these   two     houses.
 
Figure 1. Three multimodal inputs under the same 
interaction context. The timings of the point gestures 
are denoted by ???.  
Resolving these complex cases requires 
simultaneously satisfying semantic constraints 
from inputs and the interaction contexts, and the 
temporal constraints between speech and gesture.     
2 Graph-based Approach 
We use a probabilistic approach based on attrib-
uted relational graphs (ARGs) to combine semantic 
and temporal constraints for reference resolution. 
First, ARGs can adequately capture the semantic 
and temporal information (for both referring ex-
pressions and potential referents). Second, the 
graph match mechanism allows a simultaneous 
application of temporal constraints and semantic 
constraints. Specifically, we use two attributed re-
lational graphs (ARGs). One graph corresponds to 
all referring expressions in the speech utterances, 
called the referring graph. The other graph corre-
sponds to all potential referents (either coming 
from gestures or contexts), called the referent 
graph. By finding the best match between the re-
ferring graph and the referent graph, we can find 
the most possible referent(s) to each referring ex-
pression.  
An ARG consists of a set of nodes and a set of 
edges. For example, Figure 2(a) is the referring 
graph for the speech utterance in Figure 1(c). 
There are two nodes corresponding to two refer-
ring expressions ?this? and ?these two houses? re-
spectively. Each node encodes the semantic and 
temporal information of the corresponding refer-
ring expression such as the semantic type of the 
potential referent, the number, the start and end 
time the expression was uttered, etc.  The edge be-
tween two nodes indicates the semantic and tempo-
ral relations between these two expressions. 
Similarly, Figure 2(b) is the referent graph for the 
input in Figure 1(c). This referent graph consists of 
four sub-graphs.  Three sub-graphs correspond to 
three gestures respectively. Each node in these sub-
graphs corresponds to one object selected by the 
gesture. Each node encodes the semantic and tem-
poral information of the selected object, as well as 
the probability this object is actually selected. 
There is also a sub-graph corresponding to the in-
teraction context.  Each node in this sub-graph 
represents an object in the focus in the last interac-
tion turn. The sub-graphs are connected via seman-
tic type and temporal relations.  
With the ARG representations described above, 
the reference resolution problem becomes match-
ing the referent graph with the referring graph. 
Suppose we have two graphs to be matched:  
? The referent graph Gc = ?{ax}, {rxy}?, where {ax} 
is the node list and {rxy} is the edge list. The 
edge rxy connects nodes ax and ay.  
Node 1
Surface: ?this?
Base: Unknown
Number: 1
Begin Time: 32264270
End Time: 32264273
Surface: ?these two houses?
Base: House
Number: 2
Begin Time: 32264381
End Time: 32264398
Node 2
Relation: 1
Direction: Node1 ? Node2
Temporal: Preceding
Semantic type: Same
 
(a) 
 
Node 1
Node 2
Node 4
Node3 Node 5
Sub-graph of the 
1st point gesture
Node 6
Node 7
Sub-graph of the 
2nd point gesture
Sub-graph of the 
3rd point gesture
Node 8
Sub-graph of the 
interaction context
Base: House
Identifier: 4
Attr: {Price, Size, ?}
Begin Time: 32264365
End Time: 32264366
Prob: 0.4356
Node 2
Base: Town
Identifier: 1
Attr: {Area, Population ?}
Begin Time: 32264365
End Time: 32264366
Prob: 0.3321
Node 3
Relation 5
Direction: Node 1 ? Node 4
Temporal: Preceding
Semantic Type: Same
 
(b) 
 
Figure 2. The ARG representation for references in Figure 
1(c). (a) The referring graph (b) The referent graph, where 
dashed rectangles represent sub-graphs.   
? The referring graph Gs = ?{?m}, {?mn}?, where 
{?m} is the node list and {?mn} is the edge list. 
The edge ?mn connects nodes ?m and ?n.  
The match process is to maximize the following 
function: 
   
( , ) ( , ) ( , )
( , ) ( , ) ( , )
c s x m x mx m
x m y n xy mnx y m n
Q G G P a a
P a P a r
? ? ?
? ? ? ?
=? ?
? ? ? ?
+
 (1) 
with respect to P(ax,?m), the matching probabili-
ties between the referent node ax and the referring 
node ?m. 
The function Q(Gc,Gs) measures the degree of 
the overall match between the referent graph and 
the referring graph. This function not only consid-
ers the similarities between nodes as indicated by 
the function ?(ax,?m), but also considers the simi-
larities between edges as indicated by the function 
?(rxy,?mn). Both node similarity and edge similarity 
functions are further defined by a combination of 
semantic and temporal constraints. For example, 
?(ax,?m)=Sem(ax,?m)Tem(ax,?m), where Sem(ax,?m)  
measures the semantic compatibility by determin-
ing whether the semantic categories of ax and ?m 
are the same, whether their attributes are compati-
ble, and so on.  Tem(ax,?m) measures the temporal 
alignment and is empirically defined as follows: 
??
??
? ??
???
? ??=
contextfromisa
gesturefromisatimeatimeaTem
x
x
mx
mx
,1.0
,
2000
|)()(|exp),(
?
?
    
To maximize (1), we modified the graduated as-
signment algorithm (Gold and Rangarajan, 1996). 
When the algorithm converges, P(ax,?m) gives us 
the matching probabilities. Details are described in 
a separate paper.   
3 Discussion 
During the study, we collected 156 inputs. The 
system assigned time stamps to each recognized 
word in the utterance, and each gesture.  Figure 3 
shows an example of an input that consisted of two 
gesture inputs and a speech utterance ?compare 
this house with this house?. The first two lines rep-
resent two gestures. Each line gives information 
about when the gesture started and ended, as well 
as the selected objects with their probabilities. 
These data provided us information on how the 
speech and gesture were aligned (to the accuracy 
of milliseconds). These data will help us further 
validate the temporal compatibility function used 
in the matching process.  
We described an approach that uses graph 
matching algorithm to combine semantic and tem-
poral constraints for reference resolution. The 
study showed that this approach worked quite well 
(93% accuracy) when the referring expressions 
were correctly recognized by the ASR. In the fu-
ture, we plan to incorporate spatial constraints.   
References 
P. Cohen, M. Johnston, D. McGee, S. Oviatt, J. Pittman, 
I. Smith, L. Chen, and J.Clow. 1996.   Quickset: 
Multimodal Interaction for Distributed Applications. 
Proceedings of ACM Multimedia, 31-40. 
S. Gold and A. Rangarajan. 1996. A graduated 
assignment algorithm for graph matching, IEEE 
Trans. Pattern Analysis and Machine Intelligence, 
vol. 18, no. 4. 377?388.  
C. Huls, E. Bos, and W. Classen. 1995. Automatic 
Referent Resolution of Deictic and Anaphoric 
Expressions. Computational Linguistics, 21(1):59-79. 
A. Kehler. 2000. Cognitive Status and Form of 
Reference in Multimodal Human-Computer 
Interaction, Proceedings of AAAI?00. 685-689. 
J. G. Neal, C. Y. Thielman, Z. Dobes, S. M. Haller, and 
S. C. Shapiro. 1998. Natural Language with 
Integrated Deictic and Graphic Gestures. Intelligent 
User Interfaces, M. Maybury and W. Wahlster (eds.), 
38-51. 
W. H. Tsai and K. S. Fu. 1979. Error-correcting 
isomorphism of attributed relational graphs for pattern 
analysis. IEEE Trans. Sys., Man and Cyb., vol. 9, 
757?768. 
Input received on port 3334: 67275921 67277343 2    69 
23 3 1 2 67275921 67277343 39218 10000 0 0 255 
0.28571     70 23 2 2 2 67275921 67277343 39218 10000 
0 0 255 1.  
 
Input received on port 3334: 67278140 67279078 2    71 
24 4 1 2 67278140 67279078 797 10000 255 0 0 0.74545  
72 24 3 2 2 67278140 67279078 797 10000 0 0 255 1.  
 
speech input: compare_67273821 this_67274160 
House_67274490 with_67275547 this_67275847 
House_67276096 
 
Figure 3. Gesture and speech data 
W. Wahlster. 1998. User and Discourse Models for 
Multimodal Communication, Intelligent User 
Interfaces, M. Maybury and W. Wahlster (eds.), 359-
370.  
M. Zancanaro, O. Stock, and C. Strapparava. 1997. 
Multimodal Interaction for Information Access: 
Exploiting Cohesion. Computational Intelligence 
13(7):439-464. 
