Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 769?779,
Seattle, Washington, USA, 18-21 October 2013. c?2013 Association for Computational Linguistics
Exploiting language models for visual recognition
Dieu-Thu Le
DISI, University of Trento
Povo, 38123, Italy
dle@disi.unitn.it
Jasper Uijlings
DISI, University of Trento
Povo, 38123, Italy
jrr@disi.unitn.it
Raffaella Bernardi
DISI, University of Trento
Povo, 38123, Italy
bernardi@disi.unitn.it
Abstract
The problem of learning language models
from large text corpora has been widely stud-
ied within the computational linguistic com-
munity. However, little is known about the
performance of these language models when
applied to the computer vision domain. In this
work, we compare representative models: a
window-based model, a topic model, a distri-
butional memory and a commonsense knowl-
edge database, ConceptNet, in two visual
recognition scenarios: human action recog-
nition and object prediction. We examine
whether the knowledge extracted from texts
through these models are compatible to the
knowledge represented in images. We de-
termine the usefulness of different language
models in aiding the two visual recognition
tasks. The study shows that the language
models built from general text corpora can be
used instead of expensive annotated images
and even outperform the image model when
testing on a big general dataset.
1 Introduction
Computational linguistics have created many tools
for automatic knowledge acquisition which have
been successfully applied in many tasks inside the
language domain, such as question answering, ma-
chine translation, semantic web, etc. In this paper
we ask whether such knowledge generalizes to the
observed reality outside the language domain, where
we use well-known image datasets as a proxy for ob-
served reality.
In particular, we aim to determine which language
model yields knowledge that is most suitable for use
in Computer Vision. Therefore we test a variety of
language models and a linguistically mined knowl-
edge base within two computer vision scenarios:
Human action recognition : Recognizing
<subject, verb, object> triples based on
objects (e.g., car, horse) and scenes (the place
that the actions occur, e.g., countryside, forest,
office) recognized in images. In this scenario,
we only consider images with human actions
so the ?human? subject is always present.
Objects in context : Predicting the most likely
identity of an object given its context as ex-
pressed in terms of co-occurring objects.
Computer vision can greatly benefit from natural
language processing as learning from images re-
quires a prohibitively expensive annotation effort. A
major goal of natural language processing is to ob-
tain general knowledge from text and in this paper
we test which model provides the best knowledge
for use in the visual domain.
Within the two visual scenarios, we compare three
state-of-the-art language models and a knowledge
base: (1) A window-based model, which counts
co-occurrence frequencies within a fixed window;
(2) R-LDA (Se?aghdha, 2010), an extension of LDA
that enables generation of joint probabilities; (3)
TypeDM (Baroni and Lenci, 2010), a strong Distri-
butional Memory model; (4) ConceptNet (Speer and
Havasi, 2013), an automatically generated semantic
graph containing concepts with their relations.
We test the language models in two ways: (1) We
directly compare the statistics of the linguistic mod-
els with statistics extracted from the visual domain.
769
(2) We compare the linguistic models inside the two
computer vision applications, leading to a direct es-
timation of their usefulness.
To summarize, our main research questions are:
(1) Is the knowledge from language compatible with
the knowledge from vision? (2) Can the knowl-
edge extracted from language help in computer vi-
sion scenarios?
2 Related Work
Using high level knowledge to aid image under-
standing has become a recent interest in the com-
puter vision community. Objects, actions and scenes
are detected and localized in images using low-
level features. This detection and localization pro-
cess is guided by reasoning and knowledge. Such
knowledge is employed to disambiguate locations
between objects in (Gupta and Davis, 2008). From
the defined relationships between nouns (e.g., above,
below, brighter, smaller), the system constrains
which region in an image corresponds to which ob-
ject/noun. Similarly, (Srikanth et al, 2005) ex-
ploit ontologies extracted from WordNet to asso-
ciate words and images and image regions. (Yu
et al, 2011) employ relations between scenes and
objects introducing an active model to recognize
scenes through objects. The reasoning knowledge
limits the detector to search for an object within a
particular region rather than on the whole image.
Language models have also been employed to
generate descriptive sentences for images. (Ushiku
et al, 2012) introduce an online learning method for
multi-keyphrase estimation to generate a sentence
using a grammar model to describe an image. Simi-
larly, from objects and scenes detected in an image,
(Yang et al, 2011) estimated a sentence structure to
generate a sentence description composed of a noun,
verb, scene and preposition.
The studies most similar to ours are (Teo et al,
2012) and (Lampert et al, 2009). In (Teo et al,
2012), the Gigaword corpus is used to extract rela-
tionships between tools and actions (e.g., knife - cut,
cup - drink) by counting their co-occurences. These
relationships are used to constrain and select the
most plausible actions within a predefined set of ac-
tions in cooking videos. Instead of using this knowl-
edge as a guidance during recognition, we compare
different language models and build a general frame-
work that is able to detect unseen actions through
their components (verb - object - scene), hence our
method does not limit the number of actions in im-
ages. (Lampert et al, 2009) use attributes of nouns
(e.g., an animal: white, eat fish, water, etc.). They
can detect animals without having seen training ex-
amples by manually defining the attributes of the tar-
get animal. In this work, rather than relying on man-
ual definitions, our aim is to find the best language
models built automatically from available corpora to
extract relations from natural language.
Currently, human action recognition is popular
and mostly studied in video using the Bag-of-Visual-
Words method (Delaitre et al, 2010; Everts et al,
2013; Kuehne et al, 2012; Reddy and Shah, 2012;
Wang et al, 2013). In this method one extracts small
local visual patches of, say, 24 by 24 pixels by 10
frames at every 12th pixel at every 5th frame. For
each patch local gradients or local movement (opti-
cal flow) histograms are calculated. Then these local
visual features are mapped to abstract, predefined
?visual words?, previously obtained using k-means
clustering on a set of random features. While results
are good, there are two main drawbacks with this
approach. First of all, human actions are semantic
and more naturally recognized through their compo-
nents (human, objects, scene) rather than through a
bag of local gradient/motion patterns. Hence we use
a component-based method for human action recog-
nition. Second, the number of possible human ac-
tions is huge (the number of objects times the num-
ber of verbs). Obtaining annotated visual examples
for each action is therefore prohibitively expensive.
So we learn from language models how components
combine into human actions.
3 Two Visual Recognition Scenarios
We now describe the two computer vision scenarios:
human action recognition and objects in context.
3.1 Human Action Recognition
We want to identify a human action, defined as a
<subject, verb, object> triple. We do this by recog-
nizing the human, the object, and the scene and then
determine the most likely verb based on these com-
ponents. Scenes are only used here as features for
770
predicting/disambiguating the human action and the
final task is to define the human action triple. As in
most work in human action recognition, we simplify
the problem by considering only images in which
human actions occur. This means that a human is
always present, leaving the problem of predicting
the verb given the object and the scene. While this
may seem like a strong assumption, the possibility
of having no action in the image at all is largely un-
explored in computer vision due to its difficulty.
	

	
		


 



	

Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 187?192,
Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational Linguistics
VSEM: An open library for visual semantics representation
Elia Bruni
University of Trento
elia.bruni@unitn.it
Jasper Uijlings
University of Trento
jrr@disi.unitn.it
Ulisse Bordignon
University of Trento
ulisse.bordignon@unitn.it
Irina Sergienya
University of Trento
irina.sergienya@unitn.it
Adam Liska
University of Trento
adam.liska@unitn.it
Abstract
VSEM is an open library for visual se-
mantics. Starting from a collection of
tagged images, it is possible to auto-
matically construct an image-based rep-
resentation of concepts by using off-the-
shelf VSEM functionalities. VSEM is en-
tirely written in MATLAB and its object-
oriented design allows a large flexibility
and reusability. The software is accompa-
nied by a website with supporting docu-
mentation and examples.
1 Introduction
In the last years we have witnessed great progress
in the area of automated image analysis. Important
advances, such as the introduction of local features
for a robust description of the image content (see
Mikolajczyk et al (2005) for a systematic review)
and the bag-of-visual-words method (BoVW)1 for
a standard representation across multiple images
(Sivic and Zisserman, 2003), have contributed to
make image analysis ubiquitous, with applications
ranging from robotics to biology, from medicine to
photography.
Two facts have played a key role in the rapid ad-
vance of these ideas. First, the introduction of very
well defined challenges which have been attracting
also a wide community of ?outsiders" specialized
in a variety of disciplines (e.g., machine learning,
neural networks, graphical models and natural lan-
guage processing). Second, the sharing of effec-
tive, well documented implementations of cutting
edge image analysis algorithms, such as OpenCV2
1Bag-of-visual-words model is a popular technique for
image classification inspired by the traditional bag-of-words
model in Information Retrieval. It represents an image with
discrete image-describing features. Visual words are iden-
tified by clustering a large corpus of lower-level continuous
features.
2http://opencv.org/
and VLFeat.3
A comparable story can be told about automatic
text analysis. The last decades have seen a long
series of successes in the processing of large text
corpora in order to extract more or less structured
semantic knowledge. In particular, under the as-
sumption that meaning can be captured by patterns
of co-occurrences of words, distributional seman-
tic models such as Latent Semantic Analysis (Lan-
dauer and Dumais, 1997) or Topic Models (Blei
et al, 2003) have been shown to be very effective
both in general semantic tasks such as approximat-
ing human intuitions about meaning, as well as in
more application-driven tasks such as information
retrieval, word disambiguation and query expan-
sion (Turney and Pantel, 2010). And also in the
case of automated text analysis, a wide range of
method implementations are at the disposal of the
scientific community.4
Nowadays, given the parallel success of the two
disciplines, there is growing interest in making
the visual and textual channels interact for mutual
benefit. If we look at the image analysis commu-
nity, we discover a well established tradition of
studies that exploit both channels of information.
For example, there is a relatively extended amount
of literature about enhancing the performance on
visual tasks such as object recognition or image re-
trieval by replacing a purely image-based pipeline
with hybrid methods augmented with textual in-
formation (Barnard et al, 2003; Farhadi et al,
2009; Berg et al, 2010; Kulkarni et al, 2011).
Unfortunately, the same cannot be said of the
exploitation of image analysis from within the text
community. Despite the huge potential that au-
tomatically induced visual features could repre-
sent as a new source of perceptually grounded
3http://www.vlfeat.org/
4See for example the annotated list of corpus-based
computational linguistics resources at http://www-nlp.
stanford.edu/links/statnlp.html.
187
semantic knowledge,5 image-enhanced models of
semantics developed so far (Feng and Lapata,
2010; Bruni et al, 2011; Leong and Mihalcea,
2011; Bergsma and Goebel, 2011; Bruni et al,
2012a; Bruni et al, 2012b) have only scratched
this great potential and are still considered as
proof-of-concept studies only.
One possible reason of this delay with respect to
the image analysis community might be ascribed
to the high entry barriers that NLP researchers
adopting image analysis methods have to face. Al-
though many of the image analysis toolkits are
open source and well documented, they mainly ad-
dress users within the same community and there-
fore their use is not as intuitive for others. The
final goal of libraries such VLFeat and OpenCV
is the representation and classification of images.
Therefore, they naturally lack of a series of com-
plementary functionalities that are necessary to
bring the visual representation to the level of se-
mantic concepts.6
To fill the gap we just described, we present
hereby VSEM,7 a novel toolkit which allows the
extraction of image-based representations of con-
cepts in an easy fashion. VSEM is equipped with
state-of-the-art algorithms, from low-level feature
detection and description up to the BoVW repre-
sentation of images, together with a set of new rou-
tines necessary to move from an image-wise to a
concept-wise representation of image content. In
a nutshell, VSEM extracts visual information in a
way that resembles how it is done for automatic
text analysis. Thanks to BoVW, the image con-
tent is indeed discretized and visual units some-
how comparable to words in text are produced (the
visual words). In this way, from a corpus of im-
ages annotated with a set of concepts, it is pos-
sible to derive semantic vectors of co-occurrence
counts of concepts and visual words akin to the
representations of words in terms of textual collo-
cates in standard distributional semantics. Impor-
5In recent years, a conspicuous literature of studies has
surfaced, wherein demonstration was made of how text based
models are not sufficiently good at capturing the environment
we acquire language from. This is due to the fact that they
are lacking of perceptual information (Andrews et al, 2009;
Baroni et al, 2010; Baroni and Lenci, 2008; Riordan and
Jones, 2011).
6The authors of the aforementioned studies usually refer
to words instead of concepts. We chose to call them concepts
to account for the both theoretical and practical differences
standing between a word and the perceptual information it
brings along, which we define its concept.
7http://clic.cimec.unitn.it/vsem/
tantly, the obtained visual semantic vectors can be
easily combined with more traditional text-based
vectors to arrive at a multimodal representation of
meaning (see e.g. (Bruni et al, 2011)). It has
been shown that the resulting multimodal models
perform better than text-only models in semantic
tasks such as approximating semantic similarity
and relatedness ((Feng and Lapata, 2010; Bruni et
al., 2012b)).
VSEM functionalities concerning image anal-
ysis is based on VLFeat (Vedaldi and Fulkerson,
2010). This guarantees that the image analysis un-
derpinnings of the library are well maintained and
state-of-the-art.
The rest of the paper is organized as follows.
In Section 2 we introduce the procedure to obtain
an image-based representation of a concept. Sec-
tion 3 describes the VSEM architecture. Section
4 shows how to install and run VSEM through
an example that uses the Pascal VOC data set.
Section 5 concludes summarizing the material and
discussing further directions.
2 Background
As shown by Feng and Lapata (2010), Bruni et
al. (2011) and Leong and Mihalcea (2011), it is
possible to construct an image-based representa-
tion of a set of target concepts by starting from a
collection of images depicting those concepts, en-
coding the image contents into low-level features
(e.g., SIFT) and scaling up to a higher level rep-
resentation, based on the well-established BoVW
method to represent images. In addition, as shown
by Bruni et al (2012b), better representations can
be extracted if the object depicting the concept is
first localized in the image.
More in detail, the pipeline encapsulating the
whole process mentioned above takes as input a
collection of images together with their associated
tags and optionally object location annotations. Its
output is a set of concept representation vectors
for individual tags. The following steps are in-
volved: (i) extraction of local image features, (ii)
visual vocabulary construction, (iii) encoding the
local features in a BoVW histogram, (iv) including
spatial information with spatial binning, (v) aggre-
gation of visual words on a per-concept basis in
order to obtain the co-occurrence counts for each
concept and (vi) transforming the counts into asso-
ciation scores and/or reducing the dimensionality
of the data. A brief description of the individual
188
  
feature extraction
Figure 1: An example of a visual vocabulary cre-
ation pipeline. From a set of images, a larger set
of features are extracted and clustered, forming the
visual vocabulary.
steps follows.
Local features Local features are designed to
find local image structures in a repeatable fash-
ion and to represent them in robust ways that are
invariant to typical image transformations, such
as translation, rotation, scaling, and affine defor-
mation. Local features constitute the basis of
approaches developed to automatically recognize
specific objects (Grauman and Leibe, 2011). The
most popular local feature extraction method is the
Scale Invariant Feature Transform (SIFT), intro-
duced by Lowe (2004). VSEM uses the VLFeat
implementation of SIFT.
Visual vocabulary To obtain a BoVW repre-
sentation of the image content, a large set of lo-
cal features extracted from a large corpus of im-
ages are clustered. In this way the local fea-
ture space is divided into informative regions (vi-
sual words) and the collection of the obtained vi-
sual words is called visual vocabulary. k-means
is the most commonly used clustering algorithm
(Grauman and Leibe, 2011). In the special case
of Fisher encoding (see below), the clustering of
the features is performed with a Gaussian mixture
model (GMM), see Perronnin et al (2010). Fig-
ure 1 exemplifies a visual vocabulary construction
pipeline. VSEM contains both the k-means and
the GMM implementations.
Encoding The encoding step maps the local fea-
tures extracted from an image to the correspond-
ing visual words of the previously created vocab-
ulary. The most common encoding strategy is
called hard quantization, which assigns each fea-
ture to the nearest visual word?s centroid (in Eu-
clidean distance). Recently, more effective encod-
ing methods have been introduced, among which
the Fisher encoding (Perronnin et al, 2010) has
been shown to outperform all the others (Chatfield
et al, 2011). VSEM uses both the hard quantiza-
tion and the Fisher encoding.
Spatial binning A consolidated way of intro-
ducing spatial information in BoVW is the use of
spatial histograms (Lazebnik et al, 2006). The
main idea is to divide the image into several (spa-
tial) regions, compute the encoding for each region
and stack the resulting histograms. This technique
is referred to as spatial binning and it is imple-
mented in VSEM. Figure 2 exemplifies the BoVW
pipeline for a single image, involving local fea-
tures extraction, encoding and spatial binning.
  
feature extraction spatial binningencoding
Figure 2: An example of a BoVW representation
pipeline for an image. Figure inspired by Chatfield
et al (2011). Each feature extracted from the tar-
get image is assigned to the corresponding visual
word(s). Then, spatial binning is performed.
Moreover, the input of spatial binning can be
further refined by introducing localization. Three
different types of localization are typically used:
global, object, and surrounding. Global extracts
visual information from the whole image and it is
also the default option when the localization in-
formation is missing. Object extracts visual infor-
mation from the object location only and the sur-
rounding extracts visual information from outside
the object location. Localization itself can either
be done by humans (or ground truth annotation)
but also by existing localization methods (Uijlings
et al, 2013).
For localization, VSEM uses annotated object
locations (in the format of bounding boxes) of the
target object.
Aggregation Since each concept is represented
by multiple images, an aggregation function for
pooling the visual word occurrences across images
has to be defined. As far as we know, the sum
function has been the only function utilized so far.
An example for the aggregation step is sketched in
189
  =cat
aggregationr ti++
+
Figure 3: An example of a concept representa-
tion pipeline for cat. First, several images depict-
ing a cat are represented as vectors of visual word
counts and, second, the vectors are aggregated into
one single concept vector.
figure 3. VSEM offers an implementation of the
sum function.
Transformations Once the concept-
representing visual vectors are built, two types
of transformation can be performed over them to
refine their raw visual word counts: association
scores and dimensionality reduction. So far,
the vectors that we have obtained represent co-
occurrence counts of visual words with concepts.
The goal of association scores is to distinguish
interesting co-occurrences from those that are due
to chance. In order to do this, VSEM implements
two versions of mutual information (pointwise
and local), see Evert (2005).
On the other hand, dimensionality reduction
leads to matrices that are smaller and easier to
work with. Moreover, some techniques are able
to smooth the matrices and uncover latent dimen-
sions. Common dimensionality reduction methods
are singular value decomposition (Manning et al,
2008), non-negative matrix factorization (Lee and
Seung, 2001) and neural networks (Hinton and
Salakhutdinov, 2006). VSEM implements the sin-
gular value decomposition method.
3 Framework design
VSEM offers a friendly implementation of the
pipeline described in Section 2. The framework is
organized into five parts, which correspond to an
equal number of MATLAB packages and it is writ-
ten in object-oriented programming to encourage
reusability. A description of the packages follows.
? datasets This package contains the code
that manages the image data sets. We al-
ready provide a generic wrapper for sev-
eral possible dataset formats (VsemDataset
). Therefore, to use a new image data set
two solutions are possible: either write a
new class which extends GenericDataset or
use directly VsemDataset after having rear-
ranged the new data as described in help
VsemDataset.
? vision This package contains the code for
extracting the bag-of-visual-words represen-
tation of images. In the majority of cases,
it can be used as a ?black box? by the user.
Nevertheless, if the user wants to add new
functionalities such as new features or encod-
ings, this is possible by simply extending the
corresponding generic classes and the class
VsemHistogramExtractor.
? concepts This is the package that deals
with the construction of the image-based rep-
resentation of concepts. concepts is the
most important package of VSEM. It ap-
plies the image analysis methods to obtain the
BoVW representation of the image data and
then aggregates visual word counts concept-
wise. The main class of this package is
ConceptSpace, which takes care of storing
concepts names and vectors and provides
managing and transformation utilities as its
methods.
? benchmarks VSEM offers a benchmarking
suite to assess the quality of the visual con-
cept representations. For example, it can be
used to find the optimal parametrization of
the visual pipeline.
? helpers This package contains supporting
classes. There is a general helpers with
functionalities shared across packages and
several package specific helpers.
4 Getting started
Installation VSEM can be easily installed by
running the file vsemSetup.m. Moreover, pascal-
DatasetSetup.m can be run to download and place
the popular dataset, integrating it in the current
pipeline.
190
Documentation All the MATLAB commands
of VSEM are self documented (e.g. help vsem)
and an HTML version of the MATLAB command
documentation is available from the VSEM web-
site.
The Pascal VOC demo The Pascal VOC demo
provides a comprehensive example of the work-
ings of VSEM. From the demo file pascalVQDemo
.mmultiple configurations are accessible. Addi-
tional settings are available and documented for
each function, class or package in the toolbox (see
Documentation).
Running the demo file executes the following
lines of code and returns as output ConceptSpace,
which contains the visual concept representations
for the Pascal data set.
% Create a matlab structure with the
% whole set of images in the Pascal
% dataset alng with their annotation
dataset = datasets.VsemDataset(
configuration.imagesPath,?
annotationFolder?,configuration.
annotationPath);
% Initiate the class that handles
% the extraction of visual features.
featureExtractor = vision.features.
PhowFeatureExtractor();
% Create the visual vocabulary
vocabulary = KmeansVocabulary.
trainVocabulary(dataset,
featureExtractor);
% Calculate semantic vectors
conceptSpace = conceptExtractor.
extractConcepts(dataset,
histogramExtractor);
% Compute pointwise mutual
% information
conceptSpace = conceptSpace.reweight();
% Conclude the demo, computing
% the similarity of correlation
% measures of the 190 possible
% pair of concepts from the Pascal
% dataset against a gold standard
[correlationScore, p-value] =
similarityBenchmark.computeBenchmark
(conceptSpace,similarityExtractor);
5 Conclusions
We have introduced VSEM, an open library for vi-
sual semantics. With VSEM it is possible to ex-
tract visual semantic information from tagged im-
ages and arrange such information into concept
representations according to the tenets of distri-
butional semantics, as applied to images instead
of text. To analyze images, it uses state-of-the-art
techniques such as the SIFT features and the bag-
of-visual-words with spatial pyramid and Fisher
encoding. In the future, we would like to add
automatic localization strategies, new aggregation
functions and a completely new package for fusing
image- and text-based representations.
References
Mark Andrews, Gabriella Vigliocco, and David Vin-
son. 2009. Integrating experiential and distribu-
tional data to learn semantic representations. Psy-
chological Review, 116(3):463?498.
Kobus Barnard, Pinar Duygulu, David Forsyth, Nando
de Freitas, David Blei, and Michael Jordan. 2003.
Matching words and pictures. Journal of Machine
Learning Research, 3:1107?1135.
Marco Baroni and Alessandro Lenci. 2008. Concepts
and properties in word spaces. Italian Journal of
Linguistics, 20(1):55?88.
Marco Baroni, Eduard Barbu, Brian Murphy, and Mas-
simo Poesio. 2010. Strudel: A distributional seman-
tic model based on properties and types. Cognitive
Science, 34(2):222?254.
Tamara Berg, Alexander Berg, and Jonathan Shih.
2010. Automatic attribute discovery and characteri-
zation from noisy Web data. In ECCV, pages 663?
676, Crete, Greece.
Shane Bergsma and Randy Goebel. 2011. Using vi-
sual information to predict lexical preference. In
Proceedings of RANLP, pages 399?405, Hissar, Bul-
garia.
David M. Blei, Andrew Y. Ng, and Michael I. Jordan.
2003. Latent Dirichlet alocation. Journal of Ma-
chine Learning Research, 3:993?1022.
Elia Bruni, Giang Binh Tran, and Marco Baroni. 2011.
Distributional semantics from text and images. In
Proceedings of the EMNLP GEMS Workshop, pages
22?32, Edinburgh, UK.
Elia Bruni, Gemma Boleda, Marco Baroni, and
Nam Khanh Tran. 2012a. Distributional semantics
in Technicolor. In Proceedings of ACL, pages 136?
145, Jeju Island, Korea.
Elia Bruni, Jasper Uijlings, Marco Baroni, and Nicu
Sebe. 2012b. Distributional semantics with eyes:
Using image analysis to improve computational rep-
resentations of word meaning. In Proceedings of
ACM Multimedia, pages 1219?1228, Nara, Japan.
Ken Chatfield, Victor Lempitsky, Andrea Vedaldi, and
Andrew Zisserman. 2011. The devil is in the de-
tails: an evaluation of recent feature encoding meth-
ods. In Proceedings of BMVC, Dundee, UK.
191
Stefan Evert. 2005. The Statistics of Word Cooccur-
rences. Dissertation, Stuttgart University.
Ali Farhadi, Ian Endres, Derek Hoiem, and David
Forsyth. 2009. Describing objects by their at-
tributes. In Proceedings of CVPR, pages 1778?
1785, Miami Beach, FL.
Yansong Feng and Mirella Lapata. 2010. Visual infor-
mation in semantic representation. In Proceedings
of HLT-NAACL, pages 91?99, Los Angeles, CA.
Kristen Grauman and Bastian Leibe. 2011. Visual Ob-
ject Recognition. Morgan & Claypool, San Fran-
cisco.
Geoffrey Hinton and Ruslan Salakhutdinov. 2006. Re-
ducing the dimensionality of data with neural net-
works. Science, 313(5786):504 ? 507.
Girish Kulkarni, Visruth Premraj, Sagnik Dhar, Siming
Li, Yejin Choi, Alexander C. Berg, and Tamara L.
Berg. 2011. Baby talk: Understanding and gener-
ating simple image descriptions. In Proceedings of
CVPR, Colorado Springs, MSA.
Thomas Landauer and Susan Dumais. 1997. A solu-
tion to Plato?s problem: The latent semantic analysis
theory of acquisition, induction, and representation
of knowledge. Psychological Review, 104(2):211?
240.
Svetlana Lazebnik, Cordelia Schmid, and Jean Ponce.
2006. Beyond bags of features: Spatial pyramid
matching for recognizing natural scene categories.
In Proceedings of CVPR, pages 2169?2178, Wash-
ington, DC.
Daniel D. Lee and H. Sebastian Seung. 2001. Algo-
rithms for non-negative matrix factorization. In In
NIPS, pages 556?562. MIT Press.
Chee Wee Leong and Rada Mihalcea. 2011. Going
beyond text: A hybrid image-text approach for mea-
suring word relatedness. In Proceedings of IJCNLP,
pages 1403?1407.
David Lowe. 2004. Distinctive image features from
scale-invariant keypoints. International Journal of
Computer Vision, 60(2), November.
Chris Manning, Prabhakar Raghavan, and Hinrich
Sch?tze. 2008. Introduction to Information Re-
trieval. Cambridge University Press, Cambridge,
UK.
K. Mikolajczyk, T. Tuytelaars, C. Schmid, A. Zisser-
man, J. Matas, F. Schaffalitzky, T. Kadir, and L. V.
Gool. 2005. A Comparison of Affine Region De-
tectors. International Journal of Computer Vision,
65(1).
Florent Perronnin, Jorge Sanchez, and Thomas
Mensink. 2010. Improving the fisher kernel for
large-scale image classification. In Proceedings of
ECCV, pages 143?156, Berlin, Heidelberg.
Brian Riordan and Michael Jones. 2011. Redundancy
in perceptual and linguistic experience: Comparing
feature-based and distributional models of semantic
representation. Topics in Cognitive Science, 3(2):1?
43.
Josef Sivic and Andrew Zisserman. 2003. Video
Google: A text retrieval approach to object match-
ing in videos. In Proceedings of ICCV, pages 1470?
1477, Nice, France.
Peter Turney and Patrick Pantel. 2010. From fre-
quency to meaning: Vector space models of se-
mantics. Journal of Artificial Intelligence Research,
37:141?188.
J.R.R. Uijlings, K.E.A. van de Sande, T. Gevers, and
A.W.M. Smeulders. 2013. Selective search for ob-
ject recognition. IJCV.
Andrea Vedaldi and Brian Fulkerson. 2010. Vlfeat
? an open and portable library of computer vision
algorithms. In Proceedings of ACM Multimedia,
pages 1469?1472, Firenze, Italy.
192
Proceedings of the 25th International Conference on Computational Linguistics, pages 17?24,
Dublin, Ireland, August 23-29 2014.
TUHOI: Trento Universal Human Object Interaction Dataset
Dieu-Thu Le
DISI, University of Trento
Povo, 38123, Italy
dle@disi.unitn.it
Jasper Uijlings
University of Trento, Italy
University of Edinburgh, Scotland
jrr.uijlings@ed.ac.uk
Raffaella Bernardi
DISI, University of Trento
Povo, 38123, Italy
bernardi@disi.unitn.it
Abstract
This paper describes the Trento Universal Human Object Interaction dataset, TUHOI, which is
dedicated to human object interactions in images.
1
Recognizing human actions is an important
yet challenging task. Most available datasets in this field are limited in numbers of actions and
objects. A large dataset with various actions and human object interactions is needed for training
and evaluating complicated and robust human action recognition systems, especially systems
that combine knowledge learned from language and vision. We introduce an image collection
with more than two thousand actions which have been annotated through crowdsourcing. We
review publicly available datasets, describe the annotation process of our image collection and
some statistics of this dataset. Finally, experimental results on the dataset including human action
recognition based on objects and an analysis of the relation between human-object positions in
images and prepositions in language are presented.
1 Introduction
Visual action recognition is generally studied on datasets with a limited number of predefined actions
represented in many training images or videos (Ikizler et al., 2008; Delaitre et al., 2011; Yao and Li,
2010; Yao et al., 2011). Common methods using holistic image or video representation such as Bag-
of-Words have achieved successful results in retrieval settings (Ayache and Quenot, 2008). Though
these predefined lists of actions are good for many computer vision problems, this cannot work when
one wants to recognize all possible actions. Firstly, the same action can be phrased in several ways.
Secondly, the number of actions that such systems would have to recognize in real life data is huge: the
number of possible interactions with all possible objects is bounded by the cartesian product of numbers
of verbs and objects. Therefore, the task of collecting images or videos of each individual action becomes
infeasible with this growing number. By necessity this means that for some actions only few examples
will be available. In this paper we want to enable studies in the direction of recognizing all possible
actions, for which we provide a new, suitable human-object interaction dataset.
A human action can be defined as a human, object, and the relation between them. Therefore, an action
is naturally recognized through its individual components. Recent advances in computer vision have led
to reasonable accuracy for object and human recognition, which makes recognizing the components
feasible. Additionally, language can help determining how components are combined. Furthermore,
the relative position between human and object can be used to disambiguate different human actions.
Perhaps prepositions in natural language can be linked to this relative position between the object and
human (e.g., step out of a car). To transfer this knowledge from language to vision, it is important that
the distribution of the visual actions are sampled similarly as the language data. This requirement is
fulfilled when the action frequencies in the dataset mirror the frequencies in which they occur in real life.
To sum up, we aim at building an image dataset which can (1) capture the distribution of human
interactions with objects in reality (if an action is more common that the other actions, that action is
also observed more frequently in the dataset than the others), (2) provide different ways of describing
1
Our dataset is available to download at http://disi.unitn.it/ dle/dataset/TUHOI.html
This work is licensed under a Creative Commons Attribution 4.0 International Licence. License details:
http://creativecommons.org/licenses/by/4.0/
17
an action for each image (there are many actions that can be phrased in several ways, for example: fix a
bike or repair a bike), (3) help with identifying different verb meanings (for example, the word ?riding?
has different implications for ?riding a horse?, ?riding a car?, and ?riding a skateboard?).
2 Available image datasets for human action recognition
A common approach to human action recognition is to exploit visual features using bag-of-features or
part-based representation and treat action recognition as a general classification problem (Delaitre et al.,
2010; Yao and Li, 2010; Wang et al., ; Laptev, 2005). For common actions, it has been shown that
learning the joint appearance of the human-object interaction can be beneficial (Sadeghi and Farhadi,
2011). Other studies recognize actions by their components such as objects, human poses, scenes (Gupta
et al., 2009; Yao et al., 2011): (Yao et al., 2011) jointly models attributes and parts, where attributes
are verbs and parts are objects and local body parts. These studies rely on suitable training data for
a set of predefined actions: (Gupta et al., 2009) tests on a 6 sport action dataset, (Yao and Li, 2010)
attempts to distinguish images where a human plays a musical instrument from images where he/she
does not, (Delaitre et al., 2010) classifies images to one of the seven every day actions, and (Yao et al.,
2011) introduces a dataset containing 40 human actions. Most of these datasets were obtained using web
search results such as Google, Bing, Flickr, etc. The number of images varies from 300 to more than 9K
images. A comparison of the publicly available datasets with respect to the number of actions and their
related objects is given in Table 1.
Dataset #images #objects #actions Examples of actions
Ikirler (Ikizler et al., 2008) 467 0 6 running, walking, throwing, crouching and kicking
Willow (Delaitre et al., 2011) 968 5 7 interaction with computer, photographing, riding bike
Sport dataset (Gupta et al., 2009) 300 4 6 tennis-forehand, tennis-serve, cricket bowling
Stanford 40 (Yao et al., 2011) 9532 31 40 ride horse, row boat, ride bike, cut vegetables
PPMI (Yao and Li, 2010) 4800 7 7 play violin, play guitar, play flute, play french horn
PASCAL (Everingham et al., 2012) 1221 6 10 jumping, playing instrument, riding horse
89 action dataset (Le et al., 2013) 2038 19 89 drive bus, sail boat, ride bike, fix bike, watch TV
TUHOI dataset 10805 189 2974 sit on chair, use computer, ride horse, play with dog
Table 1: A comparison of available human action datasets in terms of number of objects and actions
As can be seen in Table 1, the Stanford 40 action dataset contains quite a big number of images with
40 different actions. This dataset is good for visually training action recognizers since there are enough
images collected for each actions divided into training and test sets. There are some dataset in which
human action does not involved any object, these actions are for instance running, walking, or actions
where objects are not specified such as catching, throwing. These types of actions are not the target
domain of our dataset. We aim at recognizing the human object interactions based on objects. With the
same object, some actions are also more common than other actions: for example, sitting on a chair is
more commonly observed than standing on a chair. We want to capture such information in our dataset
which can reflect the human action distributions on common objects, aiming to sample human actions
related to objects in the visual world. Furthermore, how actions can be phrased in different ways, or how
verbs can have different meanings when interacting with different objects should also be considered.
Some actions can only be performed on some particular objects and are not applicable to some other
objects: a person can ride a horse, ride a bike, can feed a horse, but cannot feed a bike. This problem
of ambiguity and different word uses have been widely studied in computational linguistics, but have
received little attention from the computer vision community.
With the aim of creating a dataset that covers these requirements, we collect our dataset starting from
images where humans and objects co-occur together and define the actions we observe in each image
instead of collecting images for some predefined human actions. This way of annotating actions in
images is more natural and helps creating a more realistic dataset with various human actions that can
occur in images generally.
Recently, some good works attempted to generate descriptive sentences from images (Farhadi et al.,
2010; Kulkarni et al., 2011). In our dataset we focus on human actions, which, if present, are often the
main topic of interest within an image. As such, our dataset can be used as an important stepping stone
18
for generating full image descriptions as it allows for more rigorous evaluation than free-form text.
3 TUHOI, the new human action dataset
ImageNet is a hierarchical image database built upon the WordNet structure. The DET dataset in the
ImageNet large scale object recognition challenge 2013
2
contains 200 objects for training and evaluation.
With the idea of starting from images with humans and common objects, we chose to use this DET dataset
as a starting point to build our human action data.
3.1 The DET dataset: Object categories and labels
The 200 objects in the DET dataset are general, basic-level categories (e.g., monitor, waffle iron, sofa,
spatula, starfish). Each object corresponds to a synset (set of synonymous nouns) in WordNet. The
DET training set consists of single topic images where only the target object is annotated. As such,
most images only contain primarily the object of interest and few actions. It is good for learning object
classifiers but is not suitable for learning action recognition. In contrast, the validation dataset contains
various images where all object instances are annotated with a bounding box. Many of these images
contain actions. Therefore we start the annotation from the validation set.
Dataset #images #images #object #instances/object #?person?
having ?person? instances (min-max-median) instances
Training 395,909 9,877 345,854 438 - 73,799 - 660 18,258
Validation 20,121 5,791 55,502 31 - 12,823 - 111 12,823
Table 2: The statistics of the DET dataset
As can be seen in Table 2, there are 15,668 images having human and 31,081 human instances in
these images. We select only images having human since we want to annotate this dataset with human
object interactions. Objects related to clothes such as bathing cap, miniskirt, tie, etc. are not interesting
for human actions (most of the time, the action associated with these objects is ?to wear?). Therefore,
we excluded all these objects from the list of 200 objects above, which are: bathing cap, bow tie, bow,
brassiere, hat with a wide brim, helmet, maillot, miniskirt, neck brace, sunglasses, tie.
3.2 Human action annotation
Goal Our goal is to annotate these selected images containing humans and objects with their interac-
tions. Each human action is required to be associated with at least one of the given 200 object categories.
We used the Crowdflower, a crowdsourcing service for annotating these images. The Crowdflower anno-
tators are required to be English native speakers and they can use any vocabulary to describe the actions
as they wish. Every action is composed of a verb and an object (possibly with a preposition).
Annotation guideline For each image, given all object instances appearing in that image (together
with their bounding boxes), the annotator has been be asked to assign all human actions associated to
each of the object instance in the image (where ?no action? is also possible). Every human actions need
to have as object one of the object instances given in that image. For example, if the image has a bike
and a dog, the annotator will assign every human actions associated to ?bike? and ?dog?. Every image
has been annotated by at least 3 annotators, so that each action in the image can be described differently
by different people. Some examples of annotated images in our dataset are given in Figure 1.
3.3 Results of the annotation and some statistics
In total, there are 10,805 images, which have been annotated with 58,808 actions, of which 6,826 times
it has been annotated with ?no action? (11.6%). On average, there are 4.8 actions annotated for each
image (excluding ?no action?), of which there are 1.97 unique action/image. Some other statistics of the
dataset are given in Table 3: The number of unique verbs per object ranges from 1 (starfish, otter) to 158
(dog). As dogs occur very often in this image dataset (4,671 times), the number of actions associated to
it is also larger than other objects.
2
http://www.image-net.org/challenges/LSVRC/2013/
19
Figure 1: Examples of annotated images: Left: (1) play ping-pong, hold racket; (2) use laptop, hold computer mouse; (3)
use microphone, play accordion, play guitar, play violin; (4) talk on microphone, sit on sofa, pour pitcher; (5) play trombone;
(6) eat/suck popsicle; (7) listen/use/hear stethoscope; (8) ride bicycle, wear backpack; (9) swing/hold racket, hit tennis ball;
Right: (1) sit on chair, play violin; (2) wear diaper, sit on chair, squeeze/apply cream; (3) sit on chair, play cello; (4) hold/shake
maraca; (5) ride watercraft, wear swimming trunks; (6) cook/use stove, stir mushroom, hold spatula; (7) drive/row watercraft;
(8) sit on chair, pet dog, lay on sofa; (9) click/type on computer keyboard
Number of unique actions (verb + object): 2,974 actions
Number of unique verbs: 860 verbs
Verbs that are used most frequently (verb (#occurrences)): play (13043), hold (7731), ride (4765), sit (3535), sit on (1501)
drive (1491), wear (1441), eat (1175), hit (1168), pet (970), use (897), walk (787), stand (756)
touch (509), carry (507), blow (384), sail (323), kick (297), lead (290), throw (246), strum (239)
stand on (223), run (223)
Verbs that are used least frequently (occur only once): dirty, swing over, twist, beats, walks, ay, curl
face, shit, sail in, n?, see by, forge, draw, tag10, sling, rides, walk across, no image available, waving
drag, award, preform, strumb, died, land, unload, tricks, cooked, time, fasten, fall over, holed, leap over, pull up
Objects go with the largest number of verbs (object (#unique verbs)): dog (158), car (80), table (79), watercraft (68)
horizontal bar (56), chair (54), cart (52), whale (50), bicycle (48), cattle (42), soccer ball (41), balance beam (38)
band aid (38), motorcycle (37), flower pot (35), ladle (35), guitar (35), horse (35), ski (34), bus (34)
Objects that go with the least number of verbs (object (#unique verbs)): milk can (5), pitcher (5), scorpion (4), bear (4),
pretzel (4), sheep (4), frog (4), mushroom (4), printer (4), pineapple (4), ruler (3), guacamole (3), isopod (3), chime (3),
plate (rack (3), strawberry (3), porcupine (3), ant (3), toaster (3), bagel (3), jellyfish (3), dragonfly (2), lion (2), zebra (2),
goldfish (2), hamster (2), fig (2), squirrel (2), bee (2), centipede (2), koala (bear (2), snail (2), pomegranate (2), armadillo
(2), otter (1), starfish (1)
Table 3: Some statistics of the human action dataset
For some images, the annotators find many different ways to describe the action in the image. In our
data, a set of images was selected to be annotated by more than three people in order to facilitate sanity
checks. An example of such image which has been annotated by many people is given in Figure 2.
The annotators have found many verbs to describe the action: feeding, leading, running with, touching,
giving a treat to, etc.
Splitting training and test set For each object in our human action dataset, we split half of the images
for training and the other half is used for testing. The splitting process is done such that actions that
occur in test set also occur in training set to guarantee that the training set contains at least one image for
each action occurring in the test set.
Figure 2: Many different ways to describe an action in an image
Evaluating human action classification in our dataset To evaluate the performance of the human
action classification on this dataset, we use two different measurements: the accuracy and the traditional
20
precision, recall and F1 score. The accuracy reflects the percentage of predictions that are correct. We
calculate within how many images, the classifier assigns the correct actions for a given object i:
Accuracy
i
=
number of images that the classifier predicts correctly
total number of images
(1)
If the output of the classifier is one of the three annotated actions by human, then the action predicted
is considered to be correct. The accuracy of the whole system is the average accuracy over all objects,
with n is the total number of objects.
Accuracy =
?
n
i=1
Accuracy
i
n
(2)
This metric gives us the general performance of the system and easy to interpret. However, it gives
higher weights to actions that occur more often in the dataset. For example, if there are many actions
?ride bike? occurring in the dataset, the accuracy of the whole system depends mostly on the performance
of the class ?ride bike?. For actions that occur more rarely such as ?fix bike?, then the accuracy of the
class ?fix bike? will have little effect to the accuracy of the whole system.
To better analyze the results of the system and evaluate each action individually, we use the precision,
recall and F1 score for each class in the classifier. More specifically, as this classifier is the multi-class
classifier, these metrics are computed using a confusion matrix:
Precision
i
=
M
ii
?
j
M
ji
;Recall
i
=
M
ii
?
j
M
ij
(3)
where M
ij
is the value of the row i, column j in the confusion matrix. The confusion matrix is oriented
such that a given row of the matrix corresponds to the value of the ?truth?, i.e., correct actions assigned
by human, and a given column corresponds to the value of action assigned by the classifier. Finally, the
precision, recall and F1 score of the whole system are calculated as the average score over all actions.
4 Experiments
In this part, we use our newly collected dataset for building a general human action classifier based
on objects. We analyze the relative positions between humans and objects in each image and use this
information to help classifying human actions. Finally, we discuss the relations between human-object
positions with prepositions that are used in language for describing human actions.
4.1 Classifying human actions based on human-object positions
In this experiment, we used Forest Random classification method to classify an image to an action given
an object. The features used for this classifier are positions of the object and the person appearing in that
image. We compare this classifier when using position with a classifier using no position information to
see whether position information helps in classifying human actions and in which cases.
Extracting features To extract the features of objects and persons? positions in the images, we take
the bounding box of the first object instance annotated in that image. There are images with more than
one object instance (for example, there are several ?bike? in an image, so we do not know what ?bike?
we are talking about). We use the four coordinates of the bounding boxes of the object and person in the
image as features for the classifier.
Results of the classifier To compare whether position information can help in recognizing actions or
not, we design a naive classifier which learns from the probability of a verb given an object to assign an
action for each image from the training image dataset.
Accuracy Precision Recall F1
Without position 74.2% 0.40 0.26 0.29
With position 72.1% 0.65 0.29 0.36
Table 4: Results of the classifier with and without position information
21
Object Without position With position Object Without position With position
baseball 0.36 0.52 bus 0.57 0.73
face powder 0.33 1 hair spray 0.73 0.74
harmonica 0.07 0.97 horizontal bar 0.42 0.45
hotdog 0.29 0.57 motorcycle 0.80 0.82
turtle 0.43 0.71 water bottle 0.56 0.65
Table 5: Objects with higher accuracy when using position information
The results of the systems with and without position are report in Table 4. It shows that the accuracy of
the classifier without position is higher than when including the position (74.2% in compared to 72.1%).
However the precision, recall and F1 of the classifier using position are all higher than without position.
It?s due to the fact that the classifier without position blindly assigns each image to the most probable
action (i.e., actions that occurs most often with a given object learned from the training set), so it obtains
better overall accuracy when testing on all images. However, for other possible actions, this classifier
is unable to disambiguate actions and the performance of this classifier on less frequent actions is worst
than when including position information into the classifier. Generally, when taking into account all
possible actions, the position-based classifier has better average precision, recall and F1 score (28.6%
without position in compared with 35.8% using position).
To further analyze which objects and actions, the position information helps better, we compare the
accuracy of each individual objects. Table 5 reports main objects that have higher accuracy when using
position. We want to be able to predict which kind of actions that positions will help in recognizing them
through the knowledge we learn from language. This prediction will help us to learn how to include the
position information inside our human action recognizer since not all actions can be disambiguated by
positions. We divide the actions into two groups: one group for which we found position information
increase the classification results. Another group for which we found position information to decrease
the classification results.
4.2 From prepositions in language to relative positions between human and object in images
In this section, we want to learn how prepositions in language can be used to determine which positions
are useful in action classification, i.e., if they belong to the first group or the second group in the previous
experiment.
The relative positions between human and object in images are useful in analyzing their interactions.
For example, when a person is riding a horse, the person is usually on the top of the horse, and when
a person is feeding a horse, then the person is usually standing next to the horse. In spoken English,
sometimes prepositions can be used as an indicator to the relations between human and object positions.
We want to exploit the connection between human-object positions in images and prepositions that
link human, verb and object in language. Intuitively, if an action implies a strong positional relation
between the human and the object, we expect to find specific, distinguishing prepositions in language.
For example, in language you usually say ?sit on chair?, where the preposition on suggests a specific
spatial relation between the human and the chair. When an action does not imply a strong positional
relation, such as ?play?, we expect no specific prepositions.
Links in language models To test this hypothesis, we use TypeDM (Baroni and Lenci, 2010), a dis-
tributional memory that has been built from large scale text corpora. This model contains weighted
<word-link-word> tuples extracted from a dependency parse of corpora. The relations between words
are characterized by their ?link?. Some of these links are prepositions that connect verbs and objects
together. Examples of some tuples with word-link-word and their weights are provided in Figure 3.
Number of links and link entropy We want to determine whether there is any correlation between
human-object relative positions in images and the associated prepositions from language models. To do
this, we record two metrics: the number of links, where we count how many different links that connect
verbs and objects in the language model; and the entropy of each action A
i
verb-object pair (where the
human is implicit) is H(A
i
) defined by: H(A
i
) = ?
?
l
j
?L
i
p(l
j
)? log p(l
j
)
where L
i
is the set of all links that occur between verb and object of action i; p(l
j
) is the probability
of the link l
j
of the action A
i
:
22
Figure 3: Examples of word-link-word and their weights in the distributional memory
p(l
j
) =
weight(l
j
)
?
l
k
?L
i
weight(l
k
)
(4)
where weight(l
j
) is the weight given by the TypeDM of link j in action i.
Generally, the entropy for each action allows seeing whether a link is predictable for a given pair of
verb-object or not: when a link is predictable, the entropy is expected to be low (contain little infor-
mation), which might correspond to the case that the position information will be useful in predicting
actions and the other way around.
Number of links Entropy
Group 1 (position helps) 8 1.05
Group 2 (position doesn?t help) 15.3 1.36
Table 6: Actions that can be disambiguated by positions (Group 1) vs. actions that cannot be disam-
biguated by positions (Group 2) and their links in the language model
Results The result shown in Table 6: for the first group (with position is better), the average number
of links per relation (verb - object) is 8 and the average entropy is 1.05; the average number of links
per relation for the second group is almost twice more, 15.3, and their average entropy is also higher,
1.36. It shows that verbs which have many different ways of linking to an object might not have a
representative relative position between the person and object, hence more difficult to be classified based
on their positions. Verbs that have less links to an object tend to have more fixed relative positions
between persons and objects, hence it might be helpful to use position information in classification.
A qualitative analysis We further examine actions where this statement does not apply, i.e., actions
with high number of links and high entropy but belong to group 1 (position information helps) and
actions with low number of links and entropy belonging to group 2. For the first case, typical actions
which have high number of links/entropy are: ride car, ride bus, ride train, pull cart, light lamp. The large
number of links of these actions seem to come from relations which do not describe the human/object
interaction itself. For example, the links associated with ?ride bus? do not all actually refer to ?ride a
bus? but to ride another object in a position with respect to the bus: ride after bus, ride behind bus,
ride before bus. These cause extra links which are not related to the action itself. Similarly, actions
pull of/around/behind/below/on cart, there is another object which is moved to a specific position with
regards to the cart.
For the second case, examples of typical actions with low links but for which positions information
doesn?t help are hold harmonica, wear diaper, hold ladle, spread cream, hold racket, apply lipstick.
These actions are related to objects, for which their positions depends a lot on the human pose (e.g., hold
something). These actions in the language model do not contain many links as we expected: the most
possible link between hold, harmonica is in, which probably means hold harmonica in your hand.
Instead of looking at actions, we look into typical verbs where position information helps in classifying
actions and verbs where position information doesn?t help. For the first group, the most frequent verbs
are: chop, cut, drink, feed, lean, sit on, sleep, look at, put on, shake, shoot, wash, catch. For the second
group, the most frequent verbs are: clean, cook, lift, punch, sing, spray, spread. It can be observed that
verbs related to some particular poses or relative positions between human and object are better with
23
the position information (chop, drink, sit on, sleep), and verbs related to more various human poses and
unspecific are not helped by the position information (cook, sing, spray, clean).
Generally, there is a relation between prepositions in language and the relative positions between
human-object in images. Although this statement does not hold in every cases, for example when the
prepositions refer to the positions between another action (e.g., ride) and that object (e.g., after a bike),
this can be potentially solved by better NLP parsing and analyses of verb phrases. Furthermore, actions
that cannot be disambiguated by positions are usually related to different human poses, while actions that
have some particular human poses can be classified using position information.
5 Conclusion
In this paper, we have introduced the Trento Universal Human Object Interaction image dataset, TUHOI.
This dataset contains more than two thousand human actions associated with 189 common objects in
images. The main characteristics of this dataset are that it follows the actual human action distribution
observed in images, it captures different ways of describing an action and it enables the study of how
verbs are used differently with different objects in images. Additionally, we performed some prelimi-
nary experiments in which we show that action recognition can benefit from using position information.
Finally, we showed that this position information is related to prepositions that can be extracted from a
general language model.
References
Stephane Ayache and Georges Quenot. 2008. Video Corpus Annotation using Active Learning. In European
Conference on Information Retrieval (ECIR), pages 187?198, Glasgow, Scotland, mar.
Marco Baroni and Alessandro Lenci. 2010. Distributional memory: A general framework for corpus-based
semantics. Computational Linguistics.
Vincent Delaitre, Ivan Laptev, and Josef Sivic. 2010. Recognizing human actions in still images: a study of
bag-of-features and part-based representations. In BMVC. BMVA Press.
Vincent Delaitre, Josef Sivic, and Ivan Laptev. 2011. Learning person-object interactions for action recognition in
still images. In NIPS.
M. Everingham, L. Van Gool, C. K. I. Williams, J. Winn, and A. Zisserman. 2012. The PASCAL Visual Object
Classes Challenge 2012 (VOC2012) Results.
Ali Farhadi, Mohsen Hejrati, Amin Sadeghi, Peter Young, Cyrus Rashtchian, Julia Hockenmaier, and David
Forsyth. 2010. Every picture tells a story: Generating sentences for images. In ECCV.
Abhinav Gupta, Aniruddha Kembhavi, and Larry S. Davis. 2009. Observing human-object interactions: Using
spatial and functional compatibility for recognition. IEEE Trans. Pattern Anal. Mach. Intell., 31(10), October.
Nazli Ikizler, Ramazan Gokberk Cinbis, Selen Pehlivan, and Pinar Duygulu. 2008. Recognizing actions from still
images. In ICPR, pages 1?4. IEEE.
Girish Kulkarni, Visruth Premraj, Sagnik Dhar, Siming Li, Yejin Choi, Alexander Berg, and Tamara Berg. 2011.
Babytalk: Understanding and generating simple image descriptions. In CVPR.
Ivan Laptev. 2005. On space-time interest points. Int. J. Comput. Vision, 64(2-3):107?123, September.
Dieu Thu Le, Raffaella Bernardi, and Jasper Uijlings. 2013. Exploiting language models to recognize unseen
actions. In ICMR.
Amin Sadeghi and Ali Farhadi. 2011. Recognition using visual phrases. In CVPR.
Heng Wang, Alexander Kl?aser, Cordelia Schmid, and Cheng-Lin Liu. Dense trajectories and motion boundary
descriptors for action recognition.
Bangpeng Yao and Fei-Fei Li. 2010. Grouplet: A structured image representation for recognizing human and
object interactions. In CVPR, pages 9?16.
Bangpeng Yao, Xiaoye Jiang, Aditya Khosla, Andy Lai Lin, Leonidas J. Guibas, and Li Fei-Fei. 2011. Action
recognition by learning bases of action attributes and parts. In ICCV.
24
