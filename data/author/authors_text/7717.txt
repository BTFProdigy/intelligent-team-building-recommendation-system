Formalising Multi-layer Corpora in OWL DL ?
Lexicon Modelling, Querying and Consistency Control
Aljoscha Burchardt1, Sebastian Pad?2?, Dennis Spohr3?, Anette Frank4?and Ulrich Heid3
1Dept. of Comp. Ling. 2Dept. of Linguistics 3Inst. for NLP 4Dept. of Comp. Ling.
Saarland University Stanford University University of Stuttgart University of Heidelberg
Saarbr?cken, Germany Stanford, CA Stuttgart, Germany Heidelberg, Germany
albu@coli.uni-sb.de pado@stanford.edu spohrds,heid@ims.uni-stuttgart.de frank@cl.uni-heidelberg.de
Abstract
We present a general approach to formally
modelling corpora with multi-layered anno-
tation, thereby inducing a lexicon model in a
typed logical representation language, OWL
DL. This model can be interpreted as a graph
structure that offers flexible querying func-
tionality beyond current XML-based query
languages and powerful methods for consis-
tency control. We illustrate our approach by
applying it to the syntactically and semanti-
cally annotated SALSA/TIGER corpus.
1 Introduction
Over the years, much effort has gone into the creation
of large corpora with multiple layers of linguistic an-
notation, such as morphology, syntax, semantics, and
discourse structure. Such corpora offer the possibility
to empirically investigate the interactions between
different levels of linguistic analysis.
Currently, the most common use of such corpora
is the acquisition of statistical models that make use
of the ?more shallow? levels to predict the ?deeper?
levels of annotation (Gildea and Jurafsky, 2002; Milt-
sakaki et al, 2005). While these models fill an im-
portant need for practical applications, they fall short
of the general task of lexicon modelling, i.e., creat-
ing an abstracted and compact representation of the
corpus information that lends itself to ?linguistically
informed? usages such as human interpretation or
integration with other knowledge sources (e.g., deep
grammar resources or ontologies). In practice, this
task faces three major problems:
?At the time of writing, Sebastian Pad? and Dennis Spohr
were affiliated with Saarland University, and Anette Frank with
DFKI Saarbr?cken and Saarland University.
Ensuring consistency. Annotation reliability and
consistency are key prerequisites for the extraction of
generalised linguistic knowledge. However, with the
increasing complexity of annotations for ?deeper? (in
particular, semantic) linguistic analysis, it becomes
more difficult to ensure that all annotation instances
are consistent with the annotation scheme.
Querying multiple layers of linguistic annotation.
A recent survey (Lai and Bird, 2004) found that cur-
rently available XML-based corpus query tools sup-
port queries operating on multiple linguistic levels
only in very restricted ways. Particularly problematic
are intersecting hierarchies, i.e., tree-shaped analyses
on multiple linguistic levels.
Abstractions and application interfaces. A per-
vasive problem in annotation is granularity: The gran-
ularity offered by a given annotation layer may di-
verge considerably from the granularity that is needed
for the integration of corpus-derived data in large
symbolic processing architectures or general lexical
resources. This problem is multiplied when more
than one layer of annotation is considered, for exam-
ple in the characterisation of interface phenomena.
While it may be possible to obtain coarser-grained
representations procedurally by collapsing categories,
such procedures are not flexibly configurable.
Figure 1 illustrates these difficulties with a sentence
from the SALSA/TIGER corpus (Burchardt et al,
2006), a manually annotated German newspaper cor-
pus which contains role-semantic analyses in the
FrameNet paradigm (Fillmore et al, 2003) on top
of syntactic structure (Brants et al, 2002).1 The se-
1While FrameNet was originally developed for English, the
majority of frames has been found to generalise well to other
389
which the official Croatia but in significant international-law difficulties bring would
Figure 1: Multi-layer annotation of a German phrase with syntax and frame semantics (?which would bring
official Croatia into significant difficulties with international law?)
mantic structure consists of frames, semantic classes
assigned to predicating expressions, and the semantic
roles introduced by these classes. The verb bringen
(?to bring?) is used metaphorically and is thus analy-
sed as introducing one frame for the ?literal? reading
(PLACING) and one for the ?understood? reading
(CAUSATION), both with their own role sets.
The high complexity of the semantic structure even
on its own shows the necessity of a device for con-
sistency checking. In conjunction with syntax, it
presents exactly the case of intersecting hierarchies
which is difficult to query. With respect to the issue of
abstraction, note that semantic roles are realised vari-
ously as individual words (was (?which?) ) and con-
stituents (NPs, PPs), a well-known problem in deriv-
ing syntax-semantics mappings from corpora (Frank,
2004; Babko-Malaya et al, 2006).
Our proposal. We propose that the problems in-
troduced above can be addressed by formalising cor-
pora in an integrated, multi-layered corpus and lexi-
con model in a declarative logical framework, more
specifically, the description logics-based OWL DL
formalism. The major benefits of this approach are
that all relevant properties of the annotation and the
underlying model are captured in a uniform represen-
tation and, moreover, that the formal semantics of the
model makes it possible to use general and efficient
knowledge representation techniques for consistency
control. Finally, we can extract specific subsets from
a corpus by defining task-specific views on the graph.
After a short discussion of related approaches in
languages (Burchardt et al, 2006; Boas, 2005).
Section 2, Section 3 provides details on our method-
ology. Sections 4 and 5 demonstrate the benefits of
our strategy on a model of the SALSA/TIGER data.
Section 6 concludes.
2 Related Work
One recent approach to lexical resource modelling
is the Lexical Systems framework (Polgu?re, 2006),
which aims at providing a highly general represen-
tation for arbitrary kinds of lexica. While this is
desirable from a representational point of view, the
resulting models are arguably too generic to support
strong consistency checks on the encoded data.
A further proposal is the currently evolving Lex-
ical Markup Framework (LMF; Francopoulo et
al. (2006)), an ISO standard for lexical resource mod-
elling, and an LMF version of FrameNet exists. How-
ever, we believe that our usage of a typed formalism
takes advantage of a strong logical foundation and
the notions of inheritance and entailment (cf. Schef-
fczyk et al (2006)) and is a crucial step beyond the
representational means provided by LMF.
Finally, the closest neighbour to our proposal is
the ATLAS project (Laprun et al, 2002), which
combines annotations with a descriptive meta-model.
However, to our knowledge, ATLAS only models
basic consistency constraints, and does not capture
dependencies between different layers of annotation.
390
3 Modelling Multilevel Corpora in OWL DL
3.1 A formal graph-based Lexicon
This section demonstrates how OWL DL, a strongly
typed representation language, can serve to transpar-
ently formalise corpora with multi-level annotation.
OWL DL is a logical language that combines the
expressivity of OWL2 with the favourable computa-
tional properties of Description Logics (DL), notably
decidability and monotonicity (Baader et al, 2003).
The strongly typed, well-defined model-theoretic se-
mantics distinguishes OWL DL from recent alterna-
tive approaches to lexicon modelling.
Due to the fact that OWL DL has been defined
in the Resource Description Framework (RDF3), the
first central benefit of using OWL DL is the possibil-
ity to conceive of the lexicon as a graph ? a net-like
entity with a high degree of interaction between lay-
ers of linguistic description, with an associated class
hierarchy. Although OWL DL itself does not have a
graph model but a model-theoretic semantics based
on First Order Logic, we will illustrate our ideas with
reference to a graph-like representation, since this is
what we obtain by transforming our OWL DL files
into an RDFS database.
Each node in the graph instantiates one or more
classes that determine the properties of the node. In
a straightforward sense, properties correspond to la-
belled edges between nodes. They are, however, also
represented as nodes in the graph which instantiate
(meta-)classes themselves.
The model is kept compact by OWL?s support for
multiple instantiation, i.e., the ability of instances
to realise more than one class. For example, in a
syntactically and semantically annotated corpus, all
syntactic units (constituents, words, or even parts
of words) can instantiate ? in addition to a syntac-
tic class ? one or more semantic classes. Multiple
instantiation enables the representation of informa-
tion about several annotation layers within single
instances.
As we have argued in Section 2, we believe that
having one generic model that can represent all cor-
pora is problematic. Instead, we propose to construct
lexicon models for specific types of corpora. The
2http://www.w3.org/2004/OWL/
3http://www.w3.org/RDF/
design of such models faces two central design ques-
tions: (a) Which properties of the annotated instances
should be represented?; (b) How are different types
of these annotation properties modelled in the graph?
Implicit features in annotations. Linguistic anno-
tation guidelines often concentrate on specifying the
linguistic data categories to be annotated. However,
a lot of linguistically relevant information often re-
mains implicit in the annotation scheme. Examples
from the SALSA corpus include, e.g., the fact that
the annotation in Figure 1 is metaphorical. This in-
formation has to be inferred from the configuration
that one predicate evokes two frames. As such infor-
mation about different annotation types is useful in
final lexicon resources, e.g. to define clean generali-
sations over the data (singling out ?special cases?), to
extract information about special data categories, and
to define formally grounded consistency constraints,
we include it in the lexicon model.
Form of representation. All relevant information
has to be represented either as assertional statements
in the model graph (i.e., nodes connected by edges),
or as definitional axioms in the class hierarchy.4
This decision involves a fundamental trade-off be-
tween expressivity and flexibility. Modelling features
as axioms in the class hierarchy imposes definitional
constraints on all instances of these classes and is
arguably more attractive from a cognitive perspec-
tive. However, modelling features as entities in the
graph leads to a smaller class hierarchy, increased
querying flexibility, and more robustness in the face
of variation and noise in the data.
3.2 Modelling SALSA/TIGER Data
We now illustrate these decisions concretely by de-
signing a model for a corpus with syntactic and
frame-semantic annotation, more concretely the
SALSA/TIGER corpus. However, the general points
we make are valid beyond this particular setting.
As concerns implicit annotation features, we have
designed a hierarchy of annotation types which now
explicitly expresses different classes of annotation
phenomena and which allows for the definition of
annotation class-specific properties. For example,
frame targets are marked as a multi-word target if
4This choice corresponds to the DL distinction between TBox
(?intensional knowledge?) and ABox (?extensional knowledge?).
391
L
in
gu
is
ti
c
m
od
el
? Frames
w Intentionally_affect
w Placing
w Motion, . . .
? Roles
w Intentionally_affect.Act
w Placing.Means
? TIGER edge labels and POS
w SB, OA, PPER, ADJA, . . .
? Generalised functions and categories
w subj, obj, NounP, AdjP, . . .
A
nn
ot
at
io
n
ty
pe
s
? Frame Annotations
w Simple
w Metaphoric
w Underspecified
? Role Annotations
w Simple
w Underspecified
? Target Annotations
w Single-word targets
w Multi-word targets
? Sentences, syntactic units, . . .
Figure 2: Schema of the OWL DL model?s class hierarchy (?TBox?)
their span contains at least two terminal nodes. The
hierarchy is shown on the right of Figure 2, which
shows parts of the bipartite class hierarchy.
The left-hand side of Figure 2 illustrates the lin-
guistic model, in which frames and roles are organ-
ised according to FrameNet?s inheritance relation.
Although this design seems to be straightforward, it
is the result of careful considerations concerning the
second design decision. Since FrameNet is a hierar-
chically structured resource with built-in inheritance
relations, one important question is whether to model
individual frames, such as SELF_MOTION or LEAD-
ERSHIP, and their relations either as instances of a
general class Frame and as links between these in-
stances, or as hierarchically structured classes with
richer axiomatisation. In line with our focus on con-
sistency checking, we adopt the latter option, which
allows us to use built-in reasoning mechanisms of
OWL DL to ensure consistency.
Annotation instances from the corpus instantiate
multiple classes in both hierarchies (cf. Figure 2): On
the annotation side according to their types of phe-
nomena; on the linguistic side based on their frames,
roles, syntactic functions, and categories.
Flexible abstraction. Section 1 introduced granu-
larity as a pervasive problem in the use of multi-level
corpora. Figure 2 indicates that the class hierarchy
of the OWL DL model offers a very elegant way
of defining generalised data categories that provide
abstractions over model classes, both for linguistic
categories and annotation types. Moreover, proper-
ties can be added to each abstracting class and then
be used, e.g., for consistency checking. In our case,
Figure 2 shows (functional) edge labels and part-of-
speech tags provided by TIGER, as well as sets of
(largely theory-neutral) grammatical functions and
categories that subsume these fine-grained categories
and support the extraction of generalised valence in-
formation from the lexicon.
An annotated corpus sentence. To substantiate
the above discussion, Figure 3 shows a partial lexicon
representation of the example in Figure 1. The boxes
represent instance nodes, with classes listed above
the horizontal line, and datatype properties below
it.5 The links between these instances indicate OWL
object properties which have been defined for the
instantiated classes. For example, the metaphorical
PLACING frame is shown as a grey box in the middle.
Multiple inheritance is indicated by instances
carrying more than one class, such as the in-
stance in the left centre, which instantiates the
classes SyntacticUnit, NP, OA, NounP and
obj. Multi-class instances inherit the properties
of each of these classes, so that e.g., the meta-
phoric frame annotation of the PLACING frame
in the middle has both the properties defined for
frames (hasCoreRole) and for frame annotations
(hasTarget). The generalised syntactic categories
discussed above are given in italics (e.g., NounP).
The figure highlights the model?s graph-based
structure with a high degree of interrelation between
the lexicon entities. For example, the grey PLAC-
ING frame instance is directly related to its roles
(left, bottom), its lexical anchor (right), the surround-
ing sentence (top), and a flag (top left) indicating
metaphorical use.
5For the sake of simplicity, we excluded explicit ?is-a? links.
392
MetaphoricFrameAnnotationUspFrameAnnotationCausation
SyntacticUnitPRELSSB
hasTigerIDhasContent
NounPsubj
SyntacticUnitNENKhasTigerIDhasContent s2910_17"Kroatien"
Source
SyntacticUnitNPOA
hasTigerIDhasContent
SimpleRoleAnnotationPlacing.ThemehasContent
UspFrameAnnotationSupport LemmahasLemma
LexicalUnitrdf:ID bringen.Placing
SingleWordTargethasContent
SyntacticUnitVVINFHDhasTigerIDhasContent
SyntacticUnitNNNKhasTigerIDhasContent
NounPobj
s2910_15
"das"
s2910_502
"das offizielle Kroatien"
s2910_14
"was"SyntacticUnitARTNKhasTigerIDhasContent
"bringen"
"bringen"
SimpleRoleAnnotationPlacing.CausehasContent "was"
SentenceAnnotationhasSentenceIDhasContent s2910"Die Ausrufung des ..."
MetaphoricFrameAnnotationPlacing
"das offizielle Kroatien"
SimpleRoleAnnotationPlacing.GoalhasContent "in betr?chtliche v?lker..."
"bringen"s2910_23
"Schwierigkeiten"s2910_22
consistsOf
isAssignedTo hasFlag
hasFrameAnnotation hasFrameAnnotation
isUspWith
hasFrameAnnotation
hasCoreRole
hasCoreRoleisAssignedTo
hasCoreRole
hasTargetisTargetOf isAssignedTo hasHead
hasAnnotation?Instance
hasReadingisReadingOf
isAnnotationInstanceOf
isAssignedToSyntacticUnitADJANKhasTigerIDhasContent s2910_16"offizielle"
consistsOf consistsOf
...
Figure 3: Partial lexicon representation of an annotated corpus sentence
4 Querying the Model
We now address the second desideratum introduced
in Section 1, namely a flexible and powerful query
mechanism. For OWL DL models, such a mecha-
nism is available in the form of the Sesame (Broekstra
et al, 2002) SeRQL query language. Since SeRQL
makes it possible to extract and view arbitrary sub-
graphs of the model, querying of intersective hierar-
chies is possible in an intuitive manner.
An interesting application for this querying mecha-
nism is to extract genuine lexicon views on the corpus
annotations, e.g., to extract syntax-semantics map-
ping information for particular senses of lemmas, by
correlating role assignments with deep syntactic in-
formation. These can serve both for inspection and
for interfacing the annotation data with deep gram-
matical resources or general lexica. Applied to our
complete corpus, this ?lexicon? contains on average
8.5 role sets per lemma, and 5.6 role sets per frame.
The result of such a query is illustrated in Table 1 for
the lemma senken (?to lower?).
From such view, frame- or lemma-specific role
sets, i.e., patterns of role-category-function assign-
ments can easily be retrieved. A typical example is
given in Table 2, with additional frequency counts.
The first row indicates that the AGENT role has been
realised as a (deep) subject noun phrase and the ITEM
as (deep) object noun phrase.
We found that generalisations over corpus cate-
gories encoded in the class hierarchies are central
Role Cat Func Freq
Item NounP obj 26
Agent NounP subj 15
Difference PrepP mod-um 6
Cause NounP subj 4
Value_2 PrepP mod-auf 3
Value_2 PrepP pobj-auf 2
Value_1 PrepP mod-von 1
Table 1: Role-category-function assignments for
senken / CAUSE_CHANGE_OF_SCALAR_POSITION (CCSP)
Role set for senken / CCSP Freq
Agent Item 11
subj obj
NounP NounP
Cause Item 4
subj obj
NounP NounP
Item 4
obj
NounP
Agent Item Difference 2
subj obj mod-um
NounP NounP PrepP
Table 2: Sample of role sets for senken / CCSP
to the usefulness of the resulting patterns. For ex-
ample, the number of unique mappings between se-
mantic roles and syntactic categories in our corpus
is 5,065 for specific corpus categories, and 2,289 for
abstracted categories. Thus, the definition of an ab-
straction layer, in conjunction with a flexible query
mechanism, allows us to induce lexical characterisa-
tions of the syntax-semantics mapping ? aggregated
393
and generalised from disparate corpus annotations.
Incremental refinements. Querying, and the re-
sulting lexical views, can serve yet another purpose:
Such aggregates make it possible to conduct a data-
driven search for linguistic generalisations which
might not be obvious from a theoretical perspective,
and allow quick inspection of the data for counterex-
amples to plausible regularities.
In the case of semantic roles, for example, such
a regularity would be that semantic roles are not
assigned to conflicting grammatical functions (e.g.,
deep subject and object) within a given lemma. How-
ever, some of the role sets we extracted contained
exactly such configurations. Further inspection re-
vealed that these irregularities resulted from either
noise introduced by errors in the automatic assign-
ment of grammatical functions, or instances with
syntactically non-local role assignments.
Starting from such observations, our approach sup-
ported a semi-automatic, incremental refinement of
the linguistic and annotation models, in this case in-
troducing a distinction between local and non-local
role realisations.
Size of the lexicon. Using a series of SeRQL
queries, we have computed the size of the cor-
pus/lexicon model for the SALSA/TIGER data (see
Table 3). The lexicon model architecture as described
in Section 3 results in a total of more than 304,000
instances in the lexicon, instantiating 581 different
frame classes and 1,494 role classes.
5 Consistency Control
The first problem pointed out in Section 1 was the
need for efficient consistency control mechanisms.
Our OWL DL-based model in fact offers two mech-
anisms for consistency checking: axiom-based and
query-based checking.
Axiom-based checking. Once some constraint has
been determined to be universally applicable, it can
be formulated in Description Logics in the form of
axiomatic expressions on the respective class in the
model. Although the general interpretation of these
axioms in DL is that they allow for inference of new
statements, they can still be used as a kind of well-
formedness ?constraint?. For example, if an individ-
ual is asserted as an instance of a particular class, the
Type No. of instances
Lemmas 523
Lemma-frame pairs (LUs) 1,176
Sentences 13,353
Syntactic units 223,302
Single-word targets 16,268
Multi-word targets 258
Frame annotations 16,526
Simple 14,700
Underspecified 995
Metaphoric 785
Elliptic 107
Role annotations 31,704
Simple 31,112
Underspecified 592
Table 3: Instance count based on the first SALSA
release
reasoner will detect an inconsistency if this instance
does not adhere to the axiomatic class definition. For
semantic role annotations, axioms can e.g. define the
admissible relations between a particular frame and
its roles. This is illustrated in the DL statements be-
low, which express that an instance of PLACING may
at most have the roles GOAL, PATH, etc.
Placing v ?.hasRole (Placing.Goal unionsq Placing.Path unionsq . . .)
Placing v ?.hasRole (Placing.Goal unionsq Placing.Path unionsq . . .)
Relations between roles can be formalised in a
similar way. An example is the excludes relation in
FrameNet, which prohibits the co-occurrence of roles
like CAUSE and AGENT of the PLACING frame. This
can be expressed by the following statement.
Placing v ?((?.hasRole Placing.Cause)u
(?.hasRole Placing.Agent))
The restrictions are used in checking the consistency
of the semantic annotation; violations of these con-
straints lead to inconsistencies that can be identified
by theorem provers. Although current state-of-the-art
reasoners do not yet scale to the size of entire cor-
pora, axiom-based checking still works well for our
data due to SALSA?s policy of dividing the original
TIGER corpus into separate subcorpora, each deal-
ing with one particular lemma (cf. Scheffczyk et al
(2006)).
394
Query-based checking. Due to the nature of our
graph representation, constraints can combine dif-
ferent types of information to control adherence to
annotation guidelines. Examples are the assignment
of the SUPPORTED role of support verb constructions,
which ought to be assigned to the maximal syntactic
constituent projected by the supported noun, or the
exclusion of reflexive pronouns from the span of the
target verb. However, the consistency of multi-level
annotation is often difficult to check: Not only are
some types of classification (e.g. assignment of se-
mantic classes) inherently difficult; the annotations
also need to be considered in context. For such cases,
axiom-based checking is too strict. In practice, it is
important that manual effort can be reduced by auto-
matically extracting subsets of ?suspicious? data for
inspection. This can be done using SeRQL queries
which ? in contrast to the general remarks on the
scalability of reasoners ? are processed and evaluated
very quickly on the entire annotated corpus data.
Example queries that we formulated examine sus-
picious configurations of annotation types, such as
target words evoking two or more frame annota-
tions which are neither marked as underspecified nor
tagged as a pair of (non-)literal metaphorical frame
annotations. Here, we identified 8 cases of omitted
annotation markup, namely 4 missing metaphor flags
and 4 omitted underspecification links.
On the semantic level, we extracted annotation
instances (in context) for metaphorical vs. non-
metaphorical readings, or frames that are involved
in underspecification in certain sentences, but not in
others. While the result sets thus obtained still re-
quire manual inspection, they clearly illustrate how
the detection of inconsistencies can be enhanced by
a declarative formalisation of the annotation scheme.
Another strategy could be to concentrate on frames
or lemmas exhibiting proportionally high variation
in annotation (Dickinson and Meurers, 2003).
6 Conclusion
In this paper, we have constructed a Description
Logics-based lexicon model directly from multi-layer
linguistic corpus annotations. We have shown how
such a model allows for explicit data modelling, and
for flexible and fine-grained definition of various de-
grees of abstractions over corpus annotations.
Furthermore, we have demonstrated that a pow-
erful logical formalisation which integrates an un-
derlying annotation scheme can be used to directly
control consistency of the annotations using general
KR techniques. It can also overcome limitations
of current XML-based search tools by supporting
queries which are able to connect multiple levels of
linguistic analysis. These queries can be used vari-
ously as an additional means of consistency control,
to derive quantitative tendencies from the data, to
extract lexicon views tailored to specific purposes,
and finally as a general tool for linguistic research.
Acknowledgements
This work has been partly funded by the German
Research Foundation DFG (grant PI 154/9-2). We
also thank the two anonymous reviewers for their
valuable comments and suggestions.
References
Franz Baader, Diego Calvanese, Deborah L. McGuinness,
Daniele Nardi, and Peter F. Patel-Schneider. 2003.
The Description Logic Handbook: Theory, Implemen-
tation and Applications. CUP.
Olga Babko-Malaya, Ann Bies, Ann Taylor, Szuting Yi,
Martha Palmer, Mitch Marcus, Seth Kulick, and Li-
bin Shen. 2006. Issues in Synchronizing the English
Treebank and PropBank. In Proceedings of the COL-
ING/ACL Workshop on Frontiers in Linguistically An-
notated Corpora, Sydney.
Hans C. Boas. 2005. Semantic frames as interlingual
representations for multilingual lexical databases. In-
ternational Journal of Lexicography, 18(4):445?478.
Sabine Brants, Stefanie Dipper, Silvia Hansen, Wolfgang
Lezius, and George Smith. 2002. The TIGER tree-
bank. In Proceedings of the Workshop on Treebanks
and Linguistic Theories, Sozopol.
Jeen Broekstra, Arjohn Kampman, and Frank van Herme-
len. 2002. Sesame: A generic architecture for storing
and querying RDF and RDF Schema. In Proceedings
of the 1st ISWC, Sardinia.
Aljoscha Burchardt, Katrin Erk, Anette Frank, Andrea
Kowalski, Sebastian Pad?, and Manfred Pinkal. 2006.
The SALSA corpus: a German corpus resource for
lexical semantics. In Proceedings of the 5th LREC,
Genoa.
Markus Dickinson and W. Detmar Meurers. 2003. De-
tecting errors in part-of-speech annotation. In Pro-
ceedings of the 10th EACL, Budapest.
395
Charles J. Fillmore, Christopher R. Johnson, and
Miriam R.L. Petruck. 2003. Background to FrameNet.
International Journal of Lexicography, 16:235?250.
Gil Francopoulo, Monte George, Nicoletta Calzolari,
Monica Monachini, Nuria Bel, Mandy Pet, and Clau-
dia Soria. 2006. LMF for multilingual, specialized
lexicons. In Proceedings of the 5th LREC, Genoa.
Anette Frank. 2004. Generalisations over corpus-
induced frame assignment rules. In Proceedings of the
LREC Workshop on Building Lexical Resources From
Semantically Annotated Corpora, Lisbon.
Daniel Gildea and Daniel Jurafsky. 2002. Automatic la-
beling of semantic roles. Computational Linguistics,
28(3):245?288.
Catherine Lai and Steven Bird. 2004. Querying and up-
dating treebanks: A critical survey and requirements
analysis. In Proceedings of the Australasian Language
Technology Workshop, Sydney.
Christophe Laprun, Jonathan Fiscus, John Garofolo, and
Sylvain Pajot. 2002. Recent Improvements to the AT-
LAS Architecture. In Proceedings of HLT 2002, San
Diego.
Eleni Miltsakaki, Nikhil Dinesh, Rashmi Prasad, Ar-
avind Joshi, and Bonnie Webber. 2005. Exper-
iments on sense annotations and sense disambigua-
tion of discourse connectives. In Proceedings of the
Fourth Workshop on Treebanks and Linguistic Theo-
ries, Barcelona, Spain.
Alain Polgu?re. 2006. Structural properties of lexi-
cal systems: Monolingual and multilingual perspec-
tives. In Proceedings of the COLING/ACL Workshop
on Multilingual Language Resources and Interoper-
ability, Sydney.
Jan Scheffczyk, Collin F. Baker, and Srini Narayanan.
2006. Ontology-based reasoning about lexical re-
sources. In Proceedings of the 5th OntoLex, Genoa.
396
Modeling Monolingual and Bilingual Collocation Dictionaries in
Description Logics
Dennis Spohr and Ulrich Heid
Institute for Natural Language Processing
University of Stuttgart
Azenbergstr. 12, D-70174 Stuttgart, Germany
{spohrds,heid}@ims.uni-stuttgart.de
Abstract
This paper discusses an approach to mod-
eling monolingual and bilingual dictio-
naries in the description logic species of
the OWL Web Ontology Language (OWL
DL). The central idea is that the model
of a bilingual dictionary is a combination
of the models of two monolingual dictio-
naries, in addition to an abstract transla-
tion model. The paper addresses the ad-
vantages of using OWL DL for the design
of monolingual and bilingual dictionaries
and proposes a generalized architecture for
that purpose. Moreover, mechanisms for
querying and checking the consistency of
such models are presented, and it is con-
cluded that DL provides means which are
capable of adequately meeting the require-
ments on the design of multilingual dictio-
naries.
1 Introduction
We discuss the modeling of linguistic knowledge
about collocations, for monolingual and bilingual
electronic dictionaries, for multiple uses in NLP
and for humans.
Our notion of collocation is a lexicographic
one, inspired by (Bartsch, 2004); we start from
her working definition: ?collocations are lexically
and/or pragmatically constrained recurrent cooc-
currences of at least two lexical items which are
in a direct relation with each other.? The fact of
being lexically and/or pragmatically constrained
leads to translation problems, as such constraints
are language specific. With Hausmann (2004), we
assume that collocations have a base and a col-
locate, where the base is autosemantic and thus
translatable without reference to the collocation,
whereas the collocate is synsemantic, i.e. its read-
ing is selected within a given collocation. Ex-
amples of collocations according to this defini-
tion include adjective+noun-combinations (heavy
smoker, strong tea, etc.), verb+subject- (question
arises, question comes up) and verb+complement-
groups (give+talk, take+walk) etc. The definition
excludes however named entities (Rio de Janeiro)
and frequent compositional groups (e.g. the police
said...). Our data have been semi-automatically
extracted from 200 million words of German
newspaper text of the 1990s (cf. Ritz (2005)).
We claim that a detailed monolingual descrip-
tion of the linguistic properties of collocations pro-
vides a solid basis for bilingual collocation dictio-
naries. The types of linguistic information needed
for NLP and those required for human use, e.g. in
text production or translation into a foreign lan-
guage, overlap to a large extent. Thus it is rea-
sonable to define comprehensive monolingual data
models and to relate these with a view to transla-
tion.
In section 2, we briefly list the most impor-
tant phenomena to be captured (see also Heid and
Gouws (2006)); section 3 introduces OWL DL,
motivates its choice as a representation format and
describes our monolingual modeling. In section 4,
we discuss and illustrate the bilingual dictionary
architecture.
2 Collocation Data
Properties of collocations. A mere list of word
pairs or sequences (give a talk, lose one?s patience)
is not a collocation dictionary. For use in NLP, lin-
guistic properties of the collocations and of their
components must be provided: these include the
category of the components (giveV + talkN ), the
65
distribution of base (talk) and collocate (give), as
well as morphosyntactic preferences, e.g. with re-
spect to the number of an element (e.g. have high
hopes), the use of a determiner (lose one?sposs|{}
patience, cf. Evert et al (2004)).
For collocations to be identifiable in the context
of a sentence (e.g. to avoid attachment ambiguity
in parsing) and, conversely, in generation, to be
correctly inserted into a sentence, the syntagmatic
behavior of collocations must be described. This
includes their function within a sentence (e.g in
the case of adverbial NPs) and the subcategoriza-
tion of their components, e.g. with support verb
constructions (make the proposal to + INF). As
subcategorization is not fully predictable from
the subcategorization of the noun (how to explain
the preposition choice in Unterstu?tzung finden
bei jmdm, ?find support in so.?, be supported?),
we prefer to encode the respective data in the
monolingual dictionary. To support translation
mapping at the complement level, the representa-
tion of each complement contains its grammatical
category (NP, AP, etc.), its grammatical func-
tion (subject, object, etc.) and a semantic role
inspired by FrameNet1. This allows us to cater
for divergence cases: jmdSubj/SPEAKER bringt
jmdmInd.Obj/ADDRESSEE etw.Obj/TOPIC in
Erinnerung vs. someoneSubj/SPEAKER reminds
someoneObj/ADDRESSEE of sth.Prep.Obj/TOPIC .
Relations involving collocations. For language
generation, paraphrasing or for summarization,
paradigmatic relations of collocations must also
be modeled. These include synonymy, antonymy
and taxonomic relations, but also morphological
ones (word formation) and combinations of col-
locations. Synonymy and antonymy should re-
late collocations with other collocations, but also
with single words and with idioms: all three types
should have the same status. Next to strict syn-
onymy, there may be ?quasi-synonymy?.
Transparent noun compounds tend to share col-
locates with their heads (Pause einlegen, Rauch-
pause einlegen, Kaffeepause einlegen): if the re-
lation between compound and head (Kaffeepause
? Pause) and between the respective collocations
is made explicit, this knowledge can be exploited
in translation, when a compositional equivalent
is chosen (have a (smoking/coffee) break). Para-
phrasing and its applications also profit from an
explicit representation of morphological relations
1Cf. http://framenet.icsi.berkeley.edu/
between collocates: submit + proposal, submis-
sion of + proposal and submitter of + proposal all
refer to the same collocational pattern.
A formal model for a collocation dictionary,
monolingual and/or bilingual, has to keep track
of the above mentioned properties and relations of
collocations; both should be queriable, alone and
in arbitrary combinations.
Other collocation dictionaries and dictionary
architectures. Most of the above mentioned
properties and relations have been discussed in the
descriptive literature, but to our knowledge, they
have never been modeled all in an electronic dic-
tionary. The Danish STO dictionary (Braasch and
Olsen, 2000) and Krenn?s (2000) database of Ger-
man support verb+PP-constructions both empha-
size morphosyntactic preferences, but do not in-
clude relations. The electronic learners? dictionar-
ies DAFLES and DICE2 focus on semantic expla-
nations of collocations, but do not contain details
about most of the properties and relations men-
tioned above. The implementation of Mel?c?uk?s
Meaning?Text-Theory in the DiCo/LAF model3
comes closest to our requirements, insofar as it
is highly relational and includes some though not
all of the morphological relations we described
above.
The Papillon project (Se?rasset and Mangeot-
Lerebours, 2001) proposes a general architecture
for the interlingual linking of monolingual dictio-
naries; as it is inspired by the DiCo formalizar-
ion, it foresees links between readings, e.g. to ac-
count for morphological relations. This mecha-
nism could in principle be extended to syntag-
matic phenomena; we are, however, not aware of
a Papillon-based collocation dictionary.
3 Modeling in OWL DL
In this section, we present the main features of
OWL DL and their relevance to the modeling of
lexical data. Section 3.2 addresses the design of
a monolingual collocation dictionary using OWL
DL (Spohr, 2005).
3.1 Main Features of OWL
OWL DL is the description logic sublanguage
of the OWL Web Ontology Language (Bech-
2Cf. http://www.kuleuven.ac.be/dafles/
and DICE: http://www.dicesp.com/
3Cf. http://olst.ling.umontreal.ca/
dicouebe/
66
hofer et al, 2004), combining the expressivity of
OWL with the computational completeness and
decidability of Description Logics (Baader et al,
2003)4. Properties of OWL DL relevant for lexical
modeling are listed and discussed in the following.
Classes. An OWL DL data model consists of
a subsumption hierarchy of classes, i.e. a class
X subsumes all its subclasses X1 to Xn. While
classes represent concepts, their instances (called
OWL individuals) represent concrete manifesta-
tions in the model. Classes and their instances can
be constrained by stating assertions in the model
definition, e.g. a class can be defined as being
disjoint with other classes, which means that in-
stances of a certain class cannot at the same time
be instances of the disjoints of this particular class.
Properties. Classes are described by properties.
These can be used either to specify XML Schema
Datatypes (datatype properties) or to relate in-
stances of one class to instances of (probably)
other classes (object properties). These classes are
then defined as the domain and range of a property,
i.e. a particular property may only relate instances
of classes in its domain to instances of classes in
its range. In addition to this, a property may be
assigned several distinct formal attributes, such as
symmetric, transitive or functional, and can be de-
fined as the inverse of another property. Similar
to classes, properties can be structured hierarchi-
cally as well, which, among others, facilitates the
use of underspecified information in queries (see
section 3.2).
Inferences. The possibility to infer explicit
knowledge from implicit statements is a core fea-
ture of OWL DL and can be performed by using
DL reasoners (such as FaCT5, Pellet6 or Racer-
Pro7). The most basic inference is achieved via
the subsumption relation among classes or prop-
erties in the respective hierarchy (see above), but
also more sophisticated inferences are possible.
Among others, these may involve the formal at-
tributes of properties just mentioned. For example,
4As the emphasis in our work is on morphology, syntax
and lexical combinatorics, we profit from the formal prop-
erties of DL without feeling the need for non-monotonicity
as implemented, for example, in DATR (Evans and Gazdar,
1996).
5http://www.cs.man.ac.uk/?horrocks/
FaCT/
6http://www.mindswap.org/2003/pellet/
7http://www.racer-systems.com
stating that instance A is linked to B via a sym-
metric property P leads a reasoner to infer that B
is also linked to A via P. In conjunction with tran-
sitivity, a relatively small set of explicit statements
may suffice to interrelate several instances implic-
itly (i.e. all instances in a particular equivalence
class created by P).
Consistency. In addition to inferences, DL rea-
soners can further be used to check the consistency
of an OWL DL model. One of the primary ob-
jectives is to check whether the assertions made
about classes and their instances (see above) are
logically consistent or whether there are contradic-
tions. This consistency checking is based on the
open-world assumption, which states that ?what
cannot be proven to be true is not believed to be
false? (Haarslev and Mo?ller, 2005). Since lexi-
cal data occasionally demand a closed world, other
checking formalisms are required, which are men-
tioned in section 3.2 below.
3.2 Monolingual Collocation Dictionary
A data model for a monolingual collocation dic-
tionary based on OWL DL has been presented
in (Spohr, 2005). It was designed using the
Prote?ge? OWL Plugin (Knublauch et al, 2004) and
makes use of the advantages of OWL DL men-
tioned above.
Lexical vs. descriptive entities. On the class
level, the model distinguishes between lexical en-
tities (e.g. single-word and multi-word entities,
such as collocations or idioms) and descriptive en-
tities (e.g. gender, part-of-speech, or subcategori-
sation frames), with lexical entities being linked
to descriptive entities via properties. More than 40
of these descriptive properties have been modeled.
In order to reflect the distinction between metalan-
guage vocabulary and object language vocabulary,
the two types of entities can be separated such that
they are part of different models. In other words,
the classes and instances of descriptive entities
constitute a model of descriptions, which is im-
ported by a lexicon model containing classes and
instances of lexical entities (see also section 4.1
below).
Lexical relations. In addition to descrip-
tive properties, the data model also contains
a number of lexical relations linking lexical
entities, such as morphological or semantic
relations. These relations have been structured
67
hierarchically and contain several subproperties,
such as hasCompound or isSynonymOf,
which use the formal attributes mentioned in
section 3.1. For instance, isSynonymOf
has been defined as a symmetric and transi-
tive property (as opposed to the non-transitive
isQuasiSynonymOf; see section 2), while
hasCompound has been defined as the inverse of
a property isCompoundOf. A small sample of
descriptive and lexical relations of the collocation
Kritik u?ben is illustrated in Figure 1 below.
Property Value
hasLemma ?Kritik u?ben?
hasCompound Selbstkritik ueben
isSynonymOf kritisieren VV 1
hasCollocationType V-Nobj acc
hasComplementation SubcatFrame 12
hasExampleSentence Example 84
isInCorpus HGC-STZ
Figure 1: Sample of the properties of Kritik u?ben
Semantic relations link lexical entities on
the conceptual (i.e. word sense) level. There-
fore, the synonym of Kritik u?ben is not some
general single-word entity kritisieren VV,
but a particular word sense of kritisieren,
kritisieren VV 1 in this case (see
Spohr (2005) for more detail).
Queries. The data model can be queried very
efficiently using the Sesame framework (Broek-
stra et al, 2002; Broekstra, 2005) and its associ-
ated query language SeRQL. An example query
retrieving all collocations and their types is given
below, along with a sample of the results8.
SELECT *
FROM {A} rdf:type {lex:Collocation},
{A} lex:hasCollocationType {B}
A B
in_Frage_kommen V-PPpobj
Kritik_ueben V-Nobj_acc
Lob_aussprechen V-Nobj_acc
zu_Last_legen V-PPpobj
Figure 2: Query for retrieving collocations and
their types, along with results
Due to the fact that the relations in the data
8In these examples, lex: is the namespace prefix for re-
sources defined in the data model.
model have been structured hierarchically, it is
possible to state underspecified queries. Figure 3
illustrates an underspecified query for semanti-
cally related entities, regardless of the precise na-
ture of this relation. Hence, the first two rows
in the result table below contain synonym pairs,
while the last two rows contain antonym pairs.
SELECT *
FROM {A} lex:hasSemanticRelationTo {B}
A B
Kritik_ueben kritisieren_VV_1
kritisieren_VV_1 Kritik_ueben
Kritik_ueben Lob_aussprechen
Lob_aussprechen Kritik_ueben
Figure 3: Underspecified query for semantically
related entities, along with results
As is indicated in Figure 3, the results appear
twice, i.e. they contain every combination of those
entities between which the relation holds. This is
due to the fact that the respective semantic rela-
tions have been defined as symmetric properties
(see above).
Consistency and data integrity. Section 3.1
mentioned the distinction between the open-world
assumption and the closed-world assumption.
While the consistency checking performed by DL
reasoners is generally based on an open world, it
is vital especially for lexical data to simulate a
closed world in order to check data integrity. Con-
sider, for instance, the assertion that every collo-
cation has to have a base and a collocate. Due to
the open-world assumption, a DL reasoner would
never render a collocation violating this constraint
inconsistent, simply because it cannot prove that
this collocation has either no base or no collo-
cate. In order for this to happen, the simulation
of a closed world is needed. In our approach, this
is achieved by stating consistency constraints in
SeRQL. Figure 4 below illustrates a constraint for
the purpose just mentioned.
This query retrieves all collocations and sub-
tracts those who have a path to both a base and
a collocate. The result set then contains exactly
those instances which have either no base or no
collocate.
68
SELECT Coll
FROM {Coll} rdf:type {lex:Collocation}
MINUS
SELECT Coll
FROM {Coll} lex:hasBase {};
lex:hasCollocate {}
Figure 4: Constraint checking: does every collo-
cation have a base and a collocate?
4 Bilingual Model Architecture
Based on the definition of a monolingual colloca-
tion dictionary described above, the architecture of
a bilingual dictionary model can be designed such
that it is made up of several components (i.e. OWL
models). These are introduced in the following.
4.1 Components of a Bilingual Dictionary
The components of a bilingual dictionary are illus-
trated in Figure 5.
Translation model
Bilingual dictionary model
createdFrom
Monolingual dictionary model
Model of descriptions
Lexicon model
imports
createdFromcreatedFrom
imports imports
Monolingual dictionary model
Figure 5: Architecture of a bilingual dictionary
model
Model of descriptions. The most basic com-
ponent of a bilingual dictionary model is a
model of descriptions, which contains language-
independent classes and instances of descriptive
entities, as well as the relations among them (see
section 3.2).
Lexicon model. The model of descriptions is
imported by an abstract lexicon model via the
owl:imports statement (see (Bechhofer et al,
2004)). The effect of using the import statement
is that the lexicon model can access the classes,
instances and properties defined in the description
model without being able to alter the data therein.
In addition to the thus available classes, the lexi-
con model further provides classes of lexical enti-
ties and relations among them, as well as relations
linking lexical and descriptive entities.
Monolingual dictionary model. The lexicon
model serves as input for the creation of a mono-
lingual dictionary model, i.e. the lexicon model is
not imported by the dictionary model, rather the
dictionary model is an instantiation of it. There are
practical reasons for doing so, the most important
one being that the class of lexical entities (defined
in the lexicon model) and its instances (defined
in the monolingual dictionary) thus have the same
namespace prefix, which would not be the case if
the lexicon model was imported by the monolin-
gual dictionary. The advantages are most obvious
in the context of the mapping between monolin-
gual dictionary models (see section 4.2). Finally,
a monolingual dictionary may further introduce its
own instances (or even classes) of descriptive en-
tities, i.e. descriptions which are language-specific
and which are hence not part of the language-
independent model of descriptions (see above).
Translation model. The translation model is an
abstract model containing only relations between
monolingual dictionary models, i.e. it does not
contain class definitions. Since the model is re-
quired to be generic, these relations do not have
a specified domain and range, as otherwise the
translation model would be restricted to a single
language pair. The specification of the domain
and range of the relations is performed in the fi-
nal model of the bilingual dictionary.
Bilingual dictionary model. The bilingual dic-
tionary model is an instantiation of the translation
model. It further imports two monolingual dictio-
69
nary models and specifies the domain and range of
the abstract relations in the translation model (see
section 4.2 below).
4.2 Mapping between Models
By importing the monolingual dictionaries, each
of these models is assigned a unique namespace
prefix, e.g. english: or german:. Thus, in
an English-German dictionary, for instance, a rela-
tion called hasTranslationmay be defined as
a symmetric property linking lexical entities of the
English monolingual dictionary model (i.e. its do-
main is defined for instances with the english:
prefix) to lexical entities of the German model
(i.e. instances with german:). This translation
mapping is illustrated in Figure 6 for the colloca-
tion Kritik u?ben.
express criticism
MWE: Collocation Single?Word Entity
criticize
Monolingual English Dictionary Model
Paraphrase
"to criticize very fiercely"
Kritik ?ben kritisieren
MWE: Collocation Single?Word Entity
MWE: Idiom
in der Luft zerrei?en
Monolingual German Dictionary Model
Figure 6: Translation mapping between monolin-
gual dictionaries
As is indicated there, multi-word entities can be
translated as single-word entities and vice versa.
Moreover, since hasTranslation has been
defined as a symmetric property, the translation
mapping is bidirectional. However, since some in-
stance in one language model might not have an
equivalent instance in the other model, a further
property can be defined which links the respective
entity to a new instance created in the bilingual
model (see Paraphrase in the figure above). As
this instance is only required for the modeling of
this particular bilingual dictionary, it is not part of
the ?original? monolingual models, and hence the
relation between the respective entities is not bidi-
rectional.
In addition to the translation mapping of lexi-
cal entities, it may further be necessary to map
instances of descriptive entities of one model
onto instances in the other model. As was men-
tioned in section 4.1, the model of descriptions
contains language-independent descriptive enti-
ties. Since both monolingual dictionaries import
the model of descriptions (via the lexicon model),
the two ?versions? of it are unified in the bilin-
gual model. However, it is certainly conceivable
to have two languages which both avail them-
selves of a descriptive entity that is not language-
independent, but which is the same for the two
languages in question. For example, not all lan-
guages have the gender neuter. English and
German, however, do have it, and therefore an
English-German bilingual dictionary has to ex-
press that english:neuter is the same as
german:neuter. In OWL, this can be achieved
by using the owl:sameAs statement, which ex-
presses exactly the circumstances just mentioned.
4.3 Example Query
A query retrieving the situation depicted in
Figure 6 is given below. It extracts the
(quasi-)synonyms of Kritik u?ben (which Kritik
u?ben itself is a part of) and their respective transla-
tions and/or paraphrases. The latter is achieved by
restricting the properties that Rel2 may stand for
to those having the prefix bdm:, i.e. the prefix de-
fined for the bilingual dictionary model. In other
words, the query leaves the exact relation between
B and C underspecified and simply restricts it to
being defined in the bilingual dictionary, which
only contains relations linking instances belonging
to different monolingual dictionaries. The results
are shown in the table below.
5 Conclusion
We have described a model for monolingual and
bilingual collocation dictionaries in OWL DL.
This formalism is well suited for the intended
modularization of linguistic resources, be they
language- or language-pair- specific (our dictio-
70
SELECT DISTINCT B, C
FROM {} german:hasLemma {A};
Rel1 {B} Rel2 {C}
WHERE A LIKE "Kritik u?ben"
AND (Rel1 = german:isSynonymOf
OR Rel1 = german:isQuasiSynonymOf)
AND namespace(Rel2) = bdm:
B C
kritisieren_VV_1 express_criticism
kritisieren_VV_1 criticize_VV_1
Kritik_ueben express_criticism
Kritik_ueben criticize_VV_1
in_Luft_zerreissen ?to criticize very fiercely?
Figure 7: Query for retrieving the
(quasi-)synonyms of Kritik u?ben and their
translations and paraphrases, along with results
nary models), generalized over one or more lan-
guages (our lexicon model), or more abstract, in
the sense of a meta-model or an inventory of the
descriptive devices shared by the linguistic de-
scriptions of several languages (our model of de-
scriptions, see figure 5 above). This model of
descriptions will be larger for related languages
(e.g. the indo-european ones), and smaller for ty-
pologically very diverse languages; it is however
by no means meant to have any interlingual, let
alone universal function, but is rather understood
in the sense of PARGRAM?s shared inventory of
descriptive devices9.
We have modelled so far about 1000 colloca-
tions, their components, preferences and relations
(also with single words); we intend to consider-
ably enlarge the collocation dictionary, using the
possibilities to combine OWL DL models with
databases, offered by the Sesame framework. The
formalism also supports experiments with credu-
lous inferencing at the level of translation equiv-
alence, e.g. by following not only explicit equiv-
alence relations, but also synonymy relations: in
line with the query discussed in section 4.3 above
(cf. Figure 7), one could also start from the English
express criticism and retrieve the equivalent collo-
cation Kritik u?ben as well as its (quasi-)synonyms
kritisieren (single word) and in der Luft zerrei?en
(idiom), which may thus be proposed as equivalent
candidates for express criticism.
More such investigations into the data collec-
9Cf. http://www2.parc.com/istl/groups/
nltt/pargram/gram.html
tion are planned; they may require non-standard
access to the dictionary, i.e. access via paths in-
volving other properties and relations than just
lemmas and equivalents. The relational nature of
the dictionary supports this kind of exploration;
we intend to specify and implement a ?linguist-
friendly? query overlay to SeRQL and a Graphi-
cal User Interface to make such explorations more
easy.
References
Franz Baader, Diego Calvanese, Deborah L. McGuin-
ness, Daniele Nardi, and Peter F. Patel-Schneider.
2003. The Description Logic Handbook: Theory,
Implementation and Applications. Cambridge Uni-
versity Press, Cambridge, UK.
Sabine Bartsch. 2004. Structural and Functional
Properties of Collocations in English. A Corpus
Study of Lexical and Pragmatic Constraints on Lex-
ical Cooccurrence. Narr, Tu?bingen, Germany.
Sean Bechhofer, Frank van Harmelen, Jim Hendler, Ian
Horrocks, Deborah L. McGuinness, Peter F. Patel-
Schneider, and Lynn Andrea Stein. 2004. OWL
Web Ontology Language Reference. Technical re-
port.
Anna Braasch and Sussi Olsen. 2000. Formalised
representation of collocations in a Danish compu-
tational lexicon. In Proceedings of the EURALEX
International Congress 2000, Stuttgart, Germany.
Jeen Broekstra, Arjohn Kampman, and Frank van Her-
melen. 2002. Sesame: A Generic Architecture for
Storing and Querying RDF and RDF Schema. In
Proceedings of the First International Semantic Web
Conference (ISWC 2002), pages 54?68, Sardinia,
Italy.
Jeen Broekstra. 2005. Storage, Querying and Infer-
encing for Semantic Web Languages. Ph.D. thesis,
Vrije Universiteit Amsterdam, The Netherlands.
Roger Evans and Gerald Gazdar. 1996. DATR: A lan-
guage for lexical knowledge representation. Com-
putational Linguistics, 22(2):167?216.
Stefan Evert, Ulrich Heid, and Kristina Spranger.
2004. Identifying Morphosyntactic Preferences in
Collocations. In Proceedings of LREC-2004, Lis-
bon, Portugal.
Volker Haarslev and Ralf Mo?ller, 2005. RacerPro
User?s Guide and Reference Manual, Version 1.8.1.
Franz Josef Hausmann. 2004. Was sind eigentlich Kol-
lokationen? In Karin Steyer, editor, Wortverbindun-
gen - mehr oder weniger fest, pages 309?334. Insti-
tut fu?r Deutsche Sprache: Jahrbuch 2003.
71
Ulrich Heid and Rufus H. Gouws. 2006. A model
for a multifunctional electronic dictionary of collo-
cations. Draft of a paper submitted to EURALEX
2006.
Holger Knublauch, Mark A. Musen, and Alan L. Rec-
tor. 2004. Editing description logic ontologies
with the Prote?ge? OWL plugin. In Proceedings of
the International Workshop in Description Logics -
DL2004, Whistler, BC, Canada.
Brigitte Krenn. 2000. The Usual Suspects: Data-
Oriented Models for Identification and Representa-
tion of Lexical Collocations. Ph.D. thesis, DFKI
Universita?t des Saarlandes, Saarbru?cken, Germany.
Julia Ritz. 2005. Entwicklung eines Systems
zur Extraktion von Kollokationen mittels mor-
phosyntaktischer Features. Diploma thesis, Insti-
tut fu?r Maschinelle Sprachverarbeitung, Universita?t
Stuttgart, Germany.
Gilles Se?rasset and Mathieu Mangeot-Lerebours.
2001. Papillon lexical database project: Monolin-
gual dictionaries & interlingual links. In Proceed-
ings of the Sixth Natural Language Processing Pa-
cific Rim Symposium: NLPRS-2001, pages 119?125,
Tokyo, Japan.
Dennis Spohr. 2005. A Description Logic Approach
to Modelling Collocations. Diploma thesis, Insti-
tut fu?r Maschinelle Sprachverarbeitung, Universita?t
Stuttgart, Germany.
72
Proceedings of the 8th International Conference on Computational Semantics, pages 222?234,
Tilburg, January 2009. c?2009 International Conference on Computational Semantics
Disambiguation of Polysemous Verbs
for Rule-based Inferencing
Fabienne Martin, Dennis Spohr, and Achim Stein
Institut fu?r Linguistik/Romanistik
Universita?t Stuttgart, Germany
firstname.lastname@ling.uni-stuttgart.de
Abstract
We present an approach to disambiguating verb senses which differ
w.r.t. the inferences they allow. It combines standard ontological tools
and formalisms with a formal semantic analysis and is hence more
formalised and more detailed than existing lexical semantic resources
like WordNet and FrameNet [Fellbaum, 1998, Baker et al, 1998]. The
resource presented here implements formal semantic descriptions of
verbs in the Web Ontology Language (OWL) and exploits its reasoning
potential based on Description Logics (DL) for the disambiguation of
verbs in context, since before the correct sense of a verb can be reliably
determined, its syntactic arguments have to be disambiguated first. We
present details on this process, which is based on a mapping from the
French EuroWordNet [Vossen, 1998] to SUMO [Niles and Pease, 2003].
Moreover, we focus on the selectional restrictions of verbs w.r.t. the
ontological type of their arguments, as well as their representation as
necessary and sufficient conditions in the TBox. After a DL reasoner
has identified the verb sense on the basis of these conditions, we make
use of the more expressive Semantic Web Rule Language to calculate
the inferences that are permitted on the selected interpretation.
1 Introduction
Verbs raise a number of challenges for computational linguistic applications,
two of which will be addressed in this paper. Firstly, a lot of them are
highly polysemous, which makes a careful disambiguation a prerequisite for
the application of semantic web technologies. As an example, the same
French verb encourager is normally translated by three different verbs in
German, as illustrated in (1)-(3):
222
(1) Un terroriste a encourage?
1
ma voisine a` poser une bombe dans la cave.
A terrorist has encouraged my neighbour to place a bomb in the basement.
Ein Terrorist hat meine Nachbarin ermutigt, eine Bombe im Keller zu legen.
(2) La lettre a encourage?
2
ma voisine a` poser une bombe dans la cave.
The letter has encouraged my neighbour to place a bomb in the basement.
Der Brief hat meine Nachbarin dazu bewegt, eine Bombe im Keller zu legen.
(3) Le gouvernement a encourage?
3
la recherche sur les armes biologiques.
The government has encouraged research on biological weapons.
Die Regierung hat die Erforschung biologischer Waffen angeregt.
Note that (1) differs from (2) only by the ontological category of the
subject, which is a human entity in (1) and a non-human
1
one in (2). On
the other hand, (3) differs from the previous two in that its object is a non-
human entity (while the object denotes a human in (1) and (2)), and in that
it does not take an infinitival complement. The second challenge concerns
the computation and the weighting of the inferences triggered by verbs. The
contrast between (1) and (2) offers a striking example: while the interpreter
of (2) can take for granted that a bomb was placed, it can only be guessed
that it was possible in (1). It is crucial to note that subtle differences like
these do exist in French, which is further exemplified by the fact that (1) can
be continued by the sentence ..., mais elle ne l?a pas fait. (?..., but she [the
neighbour] didn?t do it.?), whereas (2) cannot (cf. Mari and Martin [2007]).
Following Bhatt [1999], let us call ?actuality entailment? (ae) the entail-
ment triggered by (2) ? and to which the interpreter assigns the probability
1 ? that an event satisfying the infinitival complement took place, and ?weak
inference? the one triggered by (1) ? and to which the interpreter assigns a
probability p between 0 and 1. Furthermore, we will say that when the ae
is triggered, the verb instantiates its ?implicative reading?.
2
Note that the presence of the non-human subject in (2) is only a neces-
sary condition to trigger the ae (and consequently the implicative reading).
For the ae to arise, the tense of the sentence has to be of a certain kind as
well (i.e. a perfective tense, e.g. the passe? compose? in French). The inter-
action between lexical semantics and information pertaining to the textual
level like tense and aspect must then be modelled appropriately to capture
the facts.
1
The fact that letters are generally written by humans is of no relevance here.
2
The terminology is borrowed from [Karttunen, 1971]. Note however that verbs like
encourager differ from what Karttunen originally calls ?implicative verbs? (e.g. re?ussir a`,
?manage to?), because the latter trigger an ae with any kind of tenses.
223
A model which allows to identify and weigh appropriately the inferences
triggered by verbs like encourager is highly desirable, since, first of all, verbs
of the same class are pervasive in the lexicon and heavily present in official
texts.
3
Secondly, rating accurately the inference that an event described by a
constituent took place is central for text understanding and summarisation.
As it is more convenient to present the implementation through a specific
reading of a polysemous verb, we will firstly detail the lexical semantics of
a specific interpretation of the verb encourager, namely the one translated
by the German verb (zu etwas) bewegen and selected in (2).
In (1) and (2), encourager is a psychological verb in that it denotes an
action or a state likely to trigger a certain psychological change of state of
the entity denoted by the object y (henceforth labelled ?Experiencer?). This
cannot be the case in (3), since a non-animate object (as research) cannot
experience a psychological state or process. Rather, encourager denotes in
(3) an action of the subject which is likely ?to be good for the development
of? the object. The evaluative component of this reading is the reason why
we propose to call this reading the ?axiological reading? of encourager.
Under the reading instantiated in (2), encourager is analysed here as
meaning something like to be in a state with the goal that y wants to P,
or, if y already has this desire, that y wants to P more than previously.
Want(s, d, t, P ) describes the state of wanting P at a degree d at a time t.
P stands here for a three-place relation.
(4) encourager
2
? ?s?y?x?P [Theme(s, x) ? Target(s, y) ? Goal(s, P
2
) ? P
2
=
[?s
1
?d
1
?t?d
2
?s
2
Want(s
1
, d
1
, P, t) ?Want(s
2
, d
2
, P, t
r
) ? t > t
r
? d
2
> d
1
?
Experiencer(s
1
, y) ?Experiencer(s
2
, y)]]
Plan of the paper. Section 2 discusses the model, focussing on selectional
restrictions and formalisation of inference rules. Section 3 shows how these
are applied to (2) in order to disambiguate the verb and its arguments, and
to calculate the inferences based on this selection. We conclude in Section
4 with the advantages of our approach over existing lexical resources.
2 Implementation of the Model
In the following, we will describe how we model the inference triggers just
mentioned as well as semantic representations like the one in (4) using OWL
3
Examples of verbs displaying the alternation between (1) and (2) (thus triggering
inferences of different strength in the two places) are autoriser a` P ?to authorize to P ?,
aider a` P, ?to help to P ?, or exiger que P, ?to demand that P ?.
224
DL and the more expressive Semantic Web Rule Language (SWRL).
4
2.1 Encoding of selectional argument restrictions
As mentioned above, the primary triggers for selecting one sense over an-
other is the presence (or absence) of syntactic arguments as well as their
ontological type. For example in (2), the fact that (i) encourager subcate-
gorises an infinitive, (ii) the subject is inanimate, and (iii) the direct object
is animate, determine the sense of encourager in this sentence. To make this
information available and processable, we use a straightforward encoding of
these triggers as conditions on class definitions (see also Franconi [2003]),
based on concepts of the Suggested Upper Merged Ontology
5
(SUMO; Niles
and Pease [2003]).
In particular, the different senses of a verb are modelled as subclasses of a
general class that denotes an underspecified representation of the verb. How-
ever, the different verb senses do only subclass this generic representation in
the lexicon, not in the concept hierarchy, since verb senses very frequently
denote different concepts that are not subsumed by a common concept. In
our concrete example, we assume 3 different senses of encourager in our
lexicon, which differ w.r.t. to their axiomatic definition. (5) below shows
the definition of the sense of encourager corresponding to the one in (2)
above.
(5) encourager2 ? encourager
?obj(Agent ? SocialRole) ? ?obj(Agent ? SocialRole)
?subj(?Agent) ? ?subj(?Agent)
? 1 xcompPred owl:Thing
The first line of this definition states that encourager2 is a subclass of
the underspecified encourager. The subsequent line requires that there be
values of the obj property which are either of type Agent or SocialRole, and
further that all values of the obj property have to be within this set of Agents
or SocialRoles. For capturing the inanimacy of the subject of encourager,
the next line indicates that the values of the subj property may not be of
type Agent, and finally, the last line says that the xcompPred property (i.e.
the main predicate of the embedded infinitive) has to have at least one value.
The general motivation for this encoding, which views the contextual
triggers discussed above as necessary and sufficient conditions, is that a
4
See http://www.w3.org/TR/owl-ref/ and http://www.w3.org/Submission/SWRL/.
5
The reasons for using SUMO classes will become evident in Section 3.1 below.
225
reasoner can infer ? on the basis of a particular setting of contextual param-
eters (i.e. property values) ? the specific type of an instance of the generic
encourager. In the following, we will discuss the inference rules that are
attached to each sense class, and which are evoked once a specific sense has
been determined.
2.2 Inference rules
As was mentioned above, the different senses of encourager do not only
differ w.r.t. to the necessary and sufficient conditions that are used to classify
them, but also w.r.t. the inferences they allow. In our model, such inferences
are encoded in the form of SWRL rules (see e.g. O?Connor et al [2005]), as
they require inference capacities which go beyond the scope of the inventory
provided by OWL DL. The SWRL rule that corresponds to the semantic
description of encourager
2
given in (4) is shown in Table 1 below, with the
rule body in lines 1 to 8 and the rule head in lines 9 to 30.
The first line represents the configuration in which the rule applies, i.e.
an instance of encourager2 with grammatical subject and object. Lines 2
to 8 make use of the SWRL extensions built-ins
6
defined within the Prote?ge?
ontology editor [Knublauch et al, 2004] in order to create instances that
are to be inserted into the representation, based on the analysis in (4). In
lines 9 to 11, the grammatical subject is asserted as the theme of the state
denoted by encourager, the grammatical object as target, and, as goal, the
proposition that the degree of y wanting to ?place a bomb? is now greater
than it was at a previous point in time. The two ?wanting? states that are
part of this proposition (lines 12 and 13) are described in lines 14 to 17 and
18 to 21, where the ?wanted? object corresponds to the embedded infinitive
7
.
Lines 22 and 23 state that the previous degree of wanting is greater than
the current one (note that the reference time tr is not a variable), and that
the grammatical object y is the experiencer of both wanting states. Finally,
lines 26 to 30 classify the remaining instances created in the rule body.
Although the rule appears to be quite specifically tailored to the par-
ticular use of encourager2, large parts of it can be re-used for senses of
other verbs within this group of psychological verbs, while other parts can
be parametrised to cover verbs of other groups. For example, the syntactic
setting (cf. line 1) is applicable to any transitive verb, while the assignment
6
See http://protege.cim3.net/cgi-bin/wiki.pl?SWRLExtensionsBuiltIns; the
built-in function createOWLThing has been replaced with cOT in the table.
7
Note that the four-place predicate Want(s, d, P, t) in (4) has been decomposed into a
sequence of two-place predicates indicating the degree, time, and object of the ?wanting?.
226
1 syntactic configuration required for appli-
cation of rule
encourager2(?s) ?
subj(?s,?x) ? obj(?s,?y) ?
2 create previous state of wanting swrlx:cOT(?s1,?s) ?
3 create current state of wanting swrlx:cOT(?s2,?s) ?
4 create proposition corresponding to em-
bedded infinitive
swrlx:cOT(?p,?s1) ?
5 create the proposition that is the goal of
encourager
swrlx:cOT(?p2,?s) ?
6 create previous degree of wanting swrlx:cOT(?d1,?s1) ?
7 create current degree of wanting swrlx:cOT(?d2,?s2) ?
8 create previous time swrlx:cOT(?t,?s)
?
9 assert grammatical subject as theme of
encourager
theme(?s,?x) ?
10 assert grammatical object as target of
encourager
target(?s,?y) ?
11 assert proposition as goal of encourager goal(?s,?p2) ?
12 assert that previous state is part of the
proposition
hasPart(?p2,?s1) ?
13 assert that current state is part of the
proposition
hasPart(?p2,?s2) ?
14 assert previous state of wanting WANTING(?s1) ?
15 assert previous degree of wanting degree(?s1,?d1) ?
16 assert object of wanting object(?s1,?p) ?
17 assert time of previous wanting time(?s1,?t) ?
18 assert current state of wanting WANTING(?s2) ?
19 assert current degree of wanting degree(?s2,?d2) ?
20 assert object of wanting object(?s2,?p) ?
21 assert reference time as time current of
wanting
time(?s2,tr) ?
22 assert that time of previous wanting is be-
fore reference time
before(?t,tr) ?
23 assert that current degree of wanting is
greater than previous
greaterThan(?d2,?d1) ?
24 assert grammatical object as experiencer of
previous wanting
experiencer(?s1,?y) ?
25 assert grammatical object as experiencer of
current wanting
experiencer(?s2,?y) ?
26 assert proposition Proposition(?p) ?
27 assert proposition Proposition(?p2) ?
28 assert degree Degree(?d1) ?
29 assert degree Degree(?d2) ?
30 assert time Time(?t)
Table 1: SWRL rule implementing the description of encourager
2
in (4)
227
of semantic roles (lines 9 to 11), the specification of the involved states (or
events) in lines 14 to 21 and 24 to 25, as well as the more specific temporal
and degree assertions in lines 22 to 23 can be parametrised to suit other
verb senses. For instance, the semantics of verbs like inviter a` P (?to invite
to P ?), inciter a` P (?to incite to P ?), pousser a` P (?push to P ?) and others
also involve a comparison between different degrees of wanting P associated
to different states. One possibility to achieve parametrisation is to store
information on these individual segments as property values for the sense
classes. These are read out by an external application and re-inserted into
the model in the form of a SWRL rule. This way, it is not necessary to store
inference rules for every single word sense, but to have only a small set of
generally applicable static rules in the model, while specific ones applying
in a given discourse are created dynamically using externally completed rule
templates.
3 Disambiguation and Calculation of Inferences
In order to select the correct reading of a verbal predicate in a sentence
like (2) and, moreover, to generate the appropriate semantic representation
on the basis of this choice, our system passes a number of distinct analy-
sis steps. Basically, the system receives input from a syntactic parser and
tries to determine the correct senses of both the verbal predicate and its
syntactic arguments, before calculating the inferences permitted on this in-
terpretation. The process is summarised in Figure 1.
For the scope of this paper, we will ignore details on the syntactic analysis
that precedes the semantic processing steps, and instead assume a syntactic
parser which returns output like the one depicted in Figure 1, providing
information on the predicate (encourager), its syntactic arguments (lettre,
voisin and the infinitival complement), its modal context (e.g. embedding
under pouvoir, ?can, be able to?), and the tense in which the predicate is
used. These context features are crucial for determining the inferences that
may be drawn, and thus play an important role in the semantic processing
steps which build on the syntactic analysis (see below).
3.1 Disambiguation of the predicate and its arguments
Before the correct sense of the verbal predicate can be selected, its syntactic
arguments have to be disambiguated first. In order to achieve this, we apply
a methodology that has been presented in [Spohr, 2008], which is very much
in line with standard approaches to word-sense disambiguation (see e.g.
228
Agent
SocialRole
...
Group
...
0.3957
0.3610
...
0.2315
...
0.0369
0.0369
...
?0.0066
...
Governmt
Gov.Orga.
...
Text
...
encourager1
encourager
   obj (?Agent)
   obj (?Agent)
= 0 xcompPred owl:Thing
A
E
>
encourager
   obj (Agent    SocialRole)
   obj (Agent    SocialRole)
   subj (Agent    SocialRole)
   subj (Agent    SocialRole)
   1 xcompPred owl:Thing
A
A
E
E
>
encourager
   obj (Agent    SocialRole)
   obj (Agent    SocialRole)
   subj (?Agent)
   subj (?Agent)
   1 xcompPred owl:Thing
A
A
E
E
Subject
SUMO?EuroWordNet?MappingOutput of syntactic parser
...
tense = perfective
xcomp.pred = poser
obj = voisin
subj = lettre
pred = encourager
Object
Selectional preference lists
3
encourager
encourager2 encourager
Reasoner
Figure 1: Schema of the process of determining the intended sense of
encourager in (2) from syntactically parsed input
[Schulte im Walde, 2008] for a recent account of related work in this field).
The major difference is that it makes use of ontological categories based on
a mapping between the French EuroWordNet ? a lexical semantic resource
for French (EWN; see e.g. Vossen [1998]) ? and the Suggested Upper Merged
Ontology (SUMO; Niles and Pease [2003]). By applying this methodology
to a verb like encourager, we obtain lists of selectional preferences w.r.t. to
the ontological types of its subject and object (see top righthand corner of
Figure 1). For the actual disambiguation, the different senses of the subject
(lettre in the present case) are looked up in the SUMO-EWN mapping, and
the sense scoring highest in the corresponding selectional preference list is
selected. The words are then asserted as instances of the respective class (in
this example Text for lettre and SocialRole for voisin) in the model.
The disambiguation of the arguments is not a deterministic process.
However, when viewed from the abstract level of SUMO concepts, the senses
distinguished in EWN are often still closely related so that their distinctions
have no impact on the interpretation of the verb and thus the selection of
the appropriate sense. E.g., although the three senses of lettre in EWN
map onto two SUMO concepts (Text and Character), they are still sub-
sumed under the common class ContentBearingPhysical, which suffices to
select the correct sense of encourager irrespective of the particular sense
of lettre. Thus, even though arguments may be disambiguated towards
the wrong sense, the interpretation of the verb stays the same and the in-
ferences drawn on the basis of this selection remain unaffected. Once the
229
arguments have been disambiguated, they are linked to the instance repre-
senting encourager. The intermediate ABox obtained from the operations
so far looks as follows.
(6) encourager( s) ? subj( s, lettre) ? obj( s, voisin) ? Text(lettre) ?
SocialRole(voisin)
The next step consists in determining the correct sense of encourager.
As mentioned in Section 2 above, selectional restrictions have been imple-
mented as necessary and sufficient conditions on class definitions, which
allows a reasoner to infer the type of the instance on the basis of these
conditions. With the configuration in (6), the reasoner
8
correctly infers the
instance of encourager as being of the more specific type encourager2, as
this is the only class satisfying the condition of having a subject that is not
an Agent, while having an object either of type Agent or SocialRole (cf.
Figure 1).
3.2 Calculation of inferences
The assertion of encourager2( s) in combination with subj( s, lettre) ?
obj( s, voisin) causes the SWRL rule in Table 1 above to fire, so that the
inferences can be calculated and inserted into the ABox. For this task we
used version 7 of the Jess rule engine
9
. The result of the rule application is
illustrated in Figure 2 and represents all assertions made on the basis of the
input sentence (2).
10
The logical form of the graph is given below.
(7) encourager2( s)? theme( s, lettre) ? target( s, voisin) ? goal( s, p2)
?hasPart( p2, s1)?WANTING( s1)?degree( s1, d1)?object( s1, p)
?time( s1, t)?hasPart( p2, s2)?WANTING( s2)?degree( s2, d2)
?object( s2, p)? time( s2, tr)?before( t, tr)?greaterThan( d2, d1)
?experiencer( s1, voisin)?experiencer( s2, voisin)?Proposition( p)
? Proposition( p2) ?Degree( d1) ?Degree( d2) ? T ime( t)
After the application of this rule, we can execute the rule corresponding
to the representation of the embedded infinitive, which is triggered by the use
of the perfective tense in sentence (2). In order to avoid repetition, we will
restrict ourselves to presenting only those statements that are introduced
8
We have used the Pellet OWL DL reasoner (http://pellet.owldl.com/).
9
See http://www.jessrules.com/.
10
The visualisation of the graph has been done using the Prote?ge? Jambalaya plug-in
(see http://www.thechiselgroup.org/jambalaya).
230
Figure 2: Model after execution of the SWRL rule in Table 1
by the embedded infinitive. Again, a certain sense of poser is instantiated
in the lexicon, which then triggers the application of an inference rule
11
.
(8) poser2( e) ?MOV ING( e) ? agent( e, voisin) ? theme( e, bombe) ?
Weapon(bombe) ? inside( s3, cave) ? Artifact(cave) ? theme( s3, bombe) ?
outside( s4, cave)?theme( s4, bombe)?time( s4, t2)?time( e, t3)?before( t2, t3)?
cause( e, s3)
The interpretation of this logical form is that a ?moving? event e took
place that causes the bombe, which was outside of the basement at a previous
state s4, to be inside the basement at a state s3. Moreover, this event e
is linked to the representation given in (7) as being a part of the proposition
p. As a result, the model captures appropriately the fact that in sentence
(2), the verb encourager instantiates what we called its implicative reading.
11
Weapon and Artifact are SUMO concepts subsuming the senses of bombe and cave.
231
4 Conclusion
We have presented an approach to modelling polysemous verbs using stan-
dard formalisms such as OWL and SWRL. We have shown how the disam-
biguation of the verbs and their arguments can be performed in this setting,
and how inferences can be calculated and inserted into a representation that
can be interpreted by tools developed in the context of the Semantic Web.
One of the advantages of our approach is that fine-grained sense distinc-
tions based on contextual features enable accurate annotation of particular
senses, and with it the calculation of inferences allowed by the respective
sense. Moreover, the resource combines formal semantics with up-to-date
technology for semantic processing and is thus more formalised and detailed
than existing lexical semantic resources. WordNet [Fellbaum, 1998], for ex-
ample, distinguishes three senses of to encourage (1. ?support, back up?, 2.
?inspire, animate...?, 3. ?induce, stimulate...?), without accounting for the
difference between implicative and non-implicative readings: the examples
show clearly that both are subsumed by sense 3 (e.g. ?The ads induced me to
buy a VCR? vs. ?My children finally got me to buy a computer?). FrameNet
[Baker et al, 1998] contains only one sense of to encourage, which it asso-
ciates with the Attempt Suasion frame. This frame corresponds to the
non-implicative reading (definition: ?The Speaker expresses through lan-
guage his wish to get the Addressee to act. There is no implication that
the Addressee forms an intention to act, let alne acts.?), whereas e.g. Sua-
sion implies that the Addressee forms an intention or accepts some content.
However, encourage is neither associated with this latter frame, nor with
a frame implying an action. Moreover, it does not emphasise the contex-
tual parameters mentioned above (e.g. the presence of arguments and their
ontological type), which trigger certain interpretations and are crucial for
determining the sense of a verb as well as its inferences. More closely related
is VerbNet [Kipper Schuler, 2005], though the major difference lies in the
formal semantic description that is the output of our analysis.
Although the system is ? due to lack of coverage ? not in a state of being
applied to sophisticated reasoning tasks such as the RTE challenge [Dagan
et al, 2005], the inclusion of the contained knowledge into existing systems
designed for such tasks seems very promising. The RTE challenge consists in
determining, given two text fragments, whether one text fragment is entailed
by the other. In our examples, the hypothesis ?A bomb has been placed.?
can only be inferred from sentence (2), not from (1). This shows that great
detail in the semantic description is a definite asset and an important step
beyond the information contained in existing lexical semantic resources.
232
Acknowledgements
This work has been done within the project ?Polysemy in a Conceptual
System? (SFB 732, project B5), funded by the German Research Foundation.
References
Collin F. Baker, Charles J. Fillmore, and John B. Lowe. The Berkeley
FrameNet project. In Proceedings of COLING/ACL, Montreal, 1998.
Rajesh Bhatt. Covert Modality in Non-Finite Contexts. PhD thesis, Uni-
versity of Pennsylvania, 1999.
Ido Dagan, Oren Glickman, and Bernardo Magnini. The PASCAL Recognis-
ing Textual Entailment Challenge. In Proceedings of the PASCAL Chal-
lenges Workshop on RTE, Southampton, UK, 2005.
Christiane Fellbaum, editor. WordNet ? An Electronic Lexical Database.
MIT Press, Cambridge, MA, USA, 1998.
Enrico Franconi. Natural Language Processing. In The Description Logic
Handbook: Theory, Implementation and Applications. CUP, 2003.
Lauri Karttunen. Implicative verbs. Language, 47:340?358, 1971.
Karin Kipper Schuler. VerbNet: A Broad-Coverage, Comprehensive Verb
Lexicon. PhD thesis, University of Pennsylvania, 2005.
Holger Knublauch, Mark A. Musen, and Alan L. Rector. Editing description
logic ontologies with the Prote?ge? OWL plugin. In Proceedings of DL 2004,
Whistler, BC, 2004.
Alda Mari and Fabienne Martin. Tense, abilities and actuality entailment.
In Maria Aloni, Paul Dekker, and Floris Roelofsen, editors, Proceedings
of the Sixteenth Amsterdam Colloquium, pages 151?156, 2007.
Ian Niles and Adam Pease. Linking Lexicons and Ontologies: Mapping
WordNet to the Suggested Upper Merged Ontology. In Proceedings of
IKE ?03, Las Vegas, NV, 2003.
Martin O?Connor, Holger Knublauch, Samson Tu, Benjamin Grosof, Mike
Dean, William Grosso, and Mark Musen. Supporting Rule System Inter-
operability on the Semantic Web with SWRL. In Proceedings of the 4th
International Semantic Web Conference, Galway, Ireland, 2005.
233
Sabine Schulte im Walde. The Induction of Verb Frames and Verb Classes
from Corpora. In Corpus Linguistics. An International Handbook, volume
29.1 of Handbooks of Linguistics and Communication Science, pages 952?
971. Mouton de Gruyter, Berlin, 2008.
Dennis Spohr. Extraction of Selectional Preferences for French using a
Mapping from EuroWordNet to the Suggested Upper Merged Ontology.
In Proceedings of the 4th Global WordNet Conference, Szeged, Hungary,
2008.
Piek Vossen, editor. EuroWordNet: A Multilingual Database with Lexical
Semantic Networks. Kluwer Academic Publishers, 1998.
234
