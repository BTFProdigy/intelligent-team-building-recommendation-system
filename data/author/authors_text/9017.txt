Chinese Word Segmentation based on Mixing Model 
Wei Jiang          Jian Zhao          Yi Guan          Zhiming Xu  
ITNLP, Harbin Institute of Technology,  Heilongjiang Province, 150001 China 
jiangwei@insun.hit.edu.cn
Abstract
This paper presents our recent work for 
participation in the Second Interna-
tional Chinese Word Segmentation 
Bakeoff. According to difficulties, we 
divide word segmentation into several 
sub-tasks, which are solved by mixed 
language models, so as to take advan-
tage of each approach in addressing 
special problems. The experiment indi-
cated that this system achieved 96.7% 
and 97.2% in F-measure in PKU and 
MSR open test respectively. 
1 Introduction 
Word is a logical semantic and syntactic unit in 
natural language. So word segmentation is the 
foundation of most Chinese NLP tasks. Though 
much progress has been made in the last two 
decades, there is no existing model that can 
solve all the problems perfectly at present. So 
we try to apply different language models to 
solve each special sub-task, due to ?No Free 
Lunch Theorem? and ?Ugly Duckling Theorem?. 
Our system participated in the Second Inter-
national Chinese Word Segmentation Bakeoff 
(henceforce, the bakeoff) held in 2005. Recently, 
we have done more work in dealing with three 
main sub-tasks: (1) Segmentation disambigua-
tion; (2) Named entities recognition; (3) New 
words1 detection. We apply different approachs 
to solve above three problems, and all the mod-
ules are integrated into a pragmatic system 
(ELUS). Due to the limitation of available re-
source, some kinds of features, e.g. POS, have 
been erased in our participation system. This 
segmenter will be briefly describled in this paper. 
                                                          
1 New words refer to this kind of out-of ?vocabulary words 
that are neither recognized named entities or factoid words 
nor morphological words. 
2 ELUS Segmenter 
All the words are categorized into five types: 
Lexicon words (LW), Factoid words (FT), Mor-
phologically derived words (MDW), Named 
entities (NE), and New words (NW). Accord-
ingly, four main modules are included to iden-
tify each kind of words, as shown in Figure 1.  
Class-based trigram model (Gao 2004) is 
adopted in the Basic Segmentation to convert 
the sentence into a word sequence. Let w = w1
w2 ?wn be a word class sequence, then the most 
likely word class sequence w* in trigram is: 
?
 
 
n
i
iii
www
wwwP
n 1
12 )|(maxarg*
21 
w ,
where let P(w0|w-2 w-1) be P(w0) and let 
P(w1|w-1 w0) be P(w1|w0). And wi represents LW 
or a type of FT or MDW. Viterbi algorithm is 
used to search the best candidate. Absolute 
smoothing algorithm is applied to overcome the 
data sparseness. Here, LW, FT and MDW are 
idendified (Zhao Yan 2005). All the Factoid 
words can be represented as regular expressions. 
As a result, the detection of factoid words can be 
archieved by Finite State Machines. 
Figure 1 ELUS Segmenter 
Factoid Detect
Morphology Word
Lexicon words
String
Result
NE Recognization
Sentence
Basic Segmentation
NW Detection
Disambiguation
180
Four kinds of Named entities are detected, i.e. 
Chinese person name, foreign person name, lo-
cation name and orgnization name. This is the 
most complicated module in ELUS.  
Three kinds of models are applied here. 
HMM model (one order) is described as: 
?
 
 
n
i
iiii
TTT
TTPTWP
n 1
1
# )|()|(maxarg
21 
T ,
where iT  represents the tag of current word,  
Viterbi algorithm is used to search the best path. 
Another model is Maximum Entropy (Zhao Jian 
2005, Hai Leong Chieu 2002). Take Chinese 
person name as example. Firstly, we combine 
HMM and Maximum Entropy (ME) model to 
lable the person name tag, e.g. ??/CPB ?/CPI  
?/CPI? (Tongmei Yao); Secondly, the tagged  
name is merged by combining ME Model and 
Support Vector Machine (SVM) and some aided 
rules, e.g. merged into ??/??? in PKU test.
Some complex features are added into ME 
model (described in Zhao Jian 2005), in addition, 
we also collect more than 110,000 person names, 
and acquire the statistic about common name 
characters, these kinds of features are also fused 
into the ME model to detect NE. The other kinds 
of NE recognition adopt similar method, except 
for individual features. 
New Words is another important kind of 
OOV words, especially in closed test. Take PKU 
test as example, we collect NW suffixes, such as 
???(city),???(lamp). Those usually construct 
new words, e.g. ?????(sighting lamp). 
A variance-based method is used to collect 
suffixes. And three points need to be consid-
ered:(1) It is tail of many words;(2) It has large 
variance in constructing word;(3) It is seldom 
used alone. We acquire about 25 common suf-
fixes in PKU training corpus by above method. 
We use Local Maximum Entropy model, e.g. 
??? /1 ? /1?(Huanggang city), i.e. only the 
nearer characters are judged before the suffix 
??? (city). By our approach, the training corpus 
can be generated via given PKU corpus in the 
bakeoff. The features come from the nearer con-
text, besides, common single words and punc-
tuations are not regarded as a part of New Word. 
The last module is Word Disambiugation. 
Word segmentation ambiguities are usually clas-
sified into two classes: overlapping ambiguity 
and combination ambiguity. By evaluating 
ELUS, the most segmentation errors are one 
segmentation errors (about 95%). i.e. the two 
words on both sides of current segmentation 
errors are right. These include LW ambiguities 
and FT ambiguities etc. Here, we adopt Maxi-
mum Entropy model. The same as other mod-
ules, it is defined over HhT in segmentation 
disambiguation, where H is the set of possible 
contexts around target word that will be tagged, 
and T is the set of allowable tags. Then the 
model?s conditional probability is defined as 
? ? Tt thp
thphtp
'
)',(
),()|(
, where 
?
 
 
k
j
thf
j
jthp
1
),(),( DSP
where h is current context and t is one of the 
possible tags. The ambiguous words are mainly 
collected by evaluating our system.  
In NE module and Word Disambiguation 
module, we introduce rough rule features, which 
are extracted by Rough Set (Wang Xiaolong 
2004), e.g. ???????(display ability), ??
???/??(only? can just), ???+person+?
?? (the reporter+person+report). Previous ex-
periment had indicated word disambiguation 
could achieve better performance by applying 
Rough Set. 
3 Performance and analysis 
The performance of ELUS in the bakeoff is pre-
sented in Table 1 and Table 2 respectively, in 
terms of recall(R), precision(P) and F score in 
percentages.
Table 1 Closed test, in percentages (%) 
Closed R P F OOV Roov Riv
PKU 95.4 92.7 94.1 5.8 51.8 98.1
MSR 97.3 94.5 95.9 2.6 32.3 99.1
CITYU 93.4 86.5 89.8 7.4 24.8 98.9
AS 94.3 89.5 91.8 4.3 13.7 97.9
Table 2 Open test, in percentages (%) 
Open R P F OOV Roov Riv
PKU 96.8 96.6 96.7 5.8 82.6 97.7
MSR 98.0 96.5 97.2 2.6 59.0 99.0
CITYU 94.6 89.8 92.2 7.4 41.7 98.9
AS 95.2 92.0 93.6 4.3 35.4 97.9
Our system has good performance in terms 
of F-measure in simplified Chinese open test, 
including PKU and MSR open test. In addition, 
181
its IV word identification performance is re-
markable, ranging from 97.7% to 99.1%, stands 
at the top or nearer the top in all the tests in 
which we have participated. This good perform-
ance owes to class-based trigram, absolute 
smoothing and word disambiguation module and 
rough rules. 
There is almost the same IV performance be-
tween open test and closed test in MSR, CITYU 
and AS respectively, because we adopt the same 
Lexicon between open test and closed test re-
spectively. While in open test of PKU, we adopt 
another Lexicon that comes from six-month 
corpora of Peoples? Daily (China) in 1998, 
which were also annotated by Peking University. 
The OOV word identification performance 
seems uneven, compared with PKU, the other 
tests seem lower, due to the following reasons: 
 (1) Because of our resource limitation, NE 
training resource is six-month corpora of Peo-
ples? Daily (China) in 1998, which came from 
Peking University, and some newspapers and 
web pages annotated by our laboratory;  
(2) We have no traditional Chinese corpus, 
so the NE training resource for CITYU and AS 
is acquired via converting above corpora. Since 
these corpora are converted from simplified 
Chinese, they are not well suitable to traditional 
Chinese corpora;
(3) The different corpora have different crite-
rions in NE detection, especially in location 
name and organization name, e.g. ????/??
/??? (Cuicun Town Xiangtang Hogpen) in 
PKU and ????????? in MSR criterion. 
Even if our system recognizes the ????/?/
?/??? as a orgnization name, we are not eas-
ily to regard ??? ? as one word in PKU, 
since ???? isn?t a lexical word. However in 
MSR, that is easy, because its criterion regard 
the whole Orgnization as a word;
(4) We need do more to comply with the 
segmentation criterion, e.g. ?????(outlier) in 
CITYU come from ???? + ???, while this 
kind of false segment is due to our bad under-
standing to CITYU criterion. 
Though there are above problems, our sys-
tem does well in regonization precision, since 
we adopt two steps in recognizing NE, especial 
in recognizing Chinese person name. And from 
the result of evalution in the bakeoff, we need to 
improve the NE recall in the future.  
In order to make our New words comply 
with the criterion, we conservatively use New 
Word Detection module, in order to avoid hav-
ing bad recognition result, since each corpus has 
its own New Word criterion.
4 Conclusion and Future work 
We have briefly describled our system based on 
mixed models. Different approachs are adopted 
to solve each special sub-task, since there is ?No 
Free Lunch Theorem?. And mixed models are 
used in NE detection. This sytem has a good 
performance in the simplified Chinese in the 
bakeoff.
The future work is mainly concentrating on 
two directions: finding effective features and 
delicately adjusting internal relations among 
different modules, in order to improve segmen-
tation performance. 
References
Fu Fuohong. 2000. Research on Statistical Methods 
of Chinese Syntactic Disambiguation. Ph.D. The-
sis. Harbin Institute of Technology, China. 
Hai Leong Chieu, Hwee Tou Ng. Named Entity. 
Recognition: A Maximum Entropy Approach Us-
ing Global. Information. Proceedings of the 19th 
International Conference. on Computational Lin-
guistics, 2002. 
Hua-Ping Zhang, Qun Liu etc. 2003. Chinese Lexical 
Analysis Using Hierarchical Hidden Markov 
Model, Second SIGHAN workshop affiliated with 
4th ACL, Sapporo Japan, pp.63-70, July 2003. 
Jianfeng Gao, Mu Li et al 2004. Chinese Word 
Segmentation: A Pragmatic Approach. MSR-TR-
2004-123, November 2004. 
Wang Xiaolong, Chen Qingcai, and Daniel S.Yeung. 
2004. Mining PinYin-to-Character Conversion 
Rules From Large-Scale Corpus: A Rough Set Ap-
proach, IEEE TRANSACTION ON SYSTEMS, 
MAN. AND CYBERNETICS-PART 
B:CYBERNETICS. VOL. 34, NO.2, APRIL. 
Zhao Jian, Wang Xiao-long et al 2005. Comparing 
Features Combination with Features Fusion in 
Chinese Named Entity Recognition. Computer 
Application. China. 
Zhao Yan. 2005. Research on Chinese Morpheme 
Analysis Based on Statistic Language Model. 
Ph.D. Thesis. Harbin Institute of Technology, 
China. 
182
Integrating Ngram Model and Case-based Learning
For Chinese Word Segmentation
Chunyu Kit Zhiming Xu Jonathan J. Webster
Department of Chinese, Translation and Linguistics
City University of Hong Kong
Tat Chee Ave., Kowloon, Hong Kong
{ctckit, ctxuzm, ctjjw}@cityu.edu.hk
Abstract
This paper presents our recent work
for participation in the First Interna-
tional Chinese Word Segmentation Bake-
off (ICWSB-1). It is based on a general-
purpose ngram model for word segmen-
tation and a case-based learning approach
to disambiguation. This system excels
in identifying in-vocabulary (IV) words,
achieving a recall of around 96-98%.
Here we present our strategies for lan-
guage model training and disambiguation
rule learning, analyze the system?s perfor-
mance, and discuss areas for further im-
provement, e.g., out-of-vocabulary (OOV)
word discovery.
1 Introduction
After about two decades of studies of Chinese word
segmentation, ICWSB-1 (henceforth, the bakeoff)
is the first effort to put different approaches and
systems to the test and comparison on common
datasets. We participated in the bakeoff with a
segmentation system that is designed to integrate a
general-purpose ngram model for probabilistic seg-
mentation and a case- or example-based learning
approach (Kit et al, 2002) for disambiguation.
The ngram model, with words extracted from
training corpora, is trained with the EM algorithm
(Dempster et al, 1977) using unsegmented train-
ing corpora. Originally it was developed to en-
hance word segmentation accuracy so as to facili-
tate Chinese-English word alignment for our ongo-
ing EBMT project, where only unsegmented texts
are available for training. It is expected to be ro-
bust enough to handle novel texts, independent of
any segmented texts for training. To simplify the
EM training, we used the uni-gram model for the
bakeoff and relied on the Viterbi algorithm (Viterbi,
1967) for the most probable segmentation, instead of
attempting to exhaust all possible segmentations of
each sentence for a complicated full version of EM
training.
The case-based learning works in a straightfor-
ward way. It first extracts case-based knowledge,
as a set of context-dependent transformation rules,
from the segmented training corpus, and then ap-
plies them to ambiguous strings in a test corpus in
terms of the similarity of their contexts. The simi-
larity is empirically computed in terms of the length
of relevant common affixes of context strings.
The effectiveness of this integrated approach is
verified by its outstanding performance on IV word
identification. Its IV recall rate, ranging from 96%
to 98%, stands at the top or the next to the top in all
closed tests in which we have participated. Unfortu-
nately, its overall performance is not sustainable at
the same level, due to the lack of a module for OOV
word detection.
This paper is intended to present the implementa-
tion of the system and analyze its performance and
problems, aiming at exploration of directions for fur-
ther improvement. The remaining sections are or-
ganized as follows. Section 2 presents the ngram
model and its training with the EM algorithm, and
Section 3 presents the case-based learning for dis-
ambiguation. The overall architecture of our system
is given in Section 4, and its performance and prob-
lems are analyzed in Section 5. Section 6 concludes
the paper and previews future work.
2 Ngram model and training
An ngram model can be utilized to find the most
probable segmentation of a sentence. Given a Chi-
nese sentence s = c1c2 ? ? ? cm (also denoted as cn1 ),
its probabilistic segmentation into a word sequence
w1w2 ? ? ?wk (also denoted as wk1 ) with the aid of an
ngram model can be formulated as
seg(s) = arg max
s= w1?w2?????wk
k
?
i
p(wi|wi?1i?n+1) (1)
where ? denotes string concatenation, wi?1i?n+1 the
context (or history) of wi, and n is the order of the
ngram model in use. We have opted for uni-gram for
the sake of simplicity. Accordingly, p(wi|wi?1i?n+1)
in (1) becomes p(wi), which is commonly estimated
as follows, given a corpus C for training.
p(wi) .= f(wi)/
?
w?C
f(w) (2)
In order to estimate a reliable p(wi), the ngram
model needs to be trained with the EM algorithm
using the available training corpus. Each EM itera-
tion aims at approaching to a more reliable f(w) for
estimating p(w), as follows:
fk+1(w) =
?
s?C
?
s??S(s)
pk(s?) fk(w ? s?) (3)
where k denotes the current iteration, S(s) the set of
all possible segmentations for s, and f k(w ? s?) the
occurrences of w in a particular segmentation s?.
However, assuming that every sentence always
has a segmentation, the following equation holds:
?
s??S(s)
pk(s?) = 1 (4)
Accordingly, we can adjust (3) as (5) with a normal-
ization factor ? = ?s??S(s) pk(s?), to avoid favor-
ing words in shorter sentences too much. In general,
shorter sentences have higher probabilities.
fk+1(w) =
?
s?C
?
s??S(s)
pk(s?)
? f
k(w ? s?) (5)
Following the conventional idea to speed up the
EM training, we turned to the Viterbi algorithm. The
underlying philosophy is to distribute more prob-
ability to more probable events. The Viterbi seg-
mentation, by utilizing dynamic programming tech-
niques to go through the word trellis of a sentence
efficiently, finds the most probable segmentation un-
der the current parameter estimation of the language
model, fulfilling (1)). Accordingly, (6) becomes
fk+1(w) =
?
s?C
pk(seg(s)) fk(w ? seg(s)) (6)
and (5) becomes
fk+1(w) =
?
s?C
fk(w ? seg(s)) (7)
where the normalization factor is skipped, for
only the Viterbi segmentation is used for EM re-
estimation. Equation (7) makes the EM training
with the Viterbi algorithm very simple for the uni-
gram model: iterate word segmentation, as (1), and
word count updating, via (7), sentence by sentence
through the training corpus until there is a conver-
gence.
Since the EM algorithm converges to a local max-
ima only, it is critical to start the training with an
initial f 0(w) for each word not too far away from its
?true? value. Our strategy for initializing f 0(w) is
to assume all possible words in the training corpus
as equiprobable and count each of them as 1; and
then p0(w) is derived using (2). This strategy is sup-
posed to have a weaker bias to favor longer words
than maximal matching segmentation.
For the bakeoff, the ngram model is trained with
the unsegmented training corpora together with the
test sets. It is a kind of unsupervised training.
Adding the test set to the training data is reasonable,
to allow the model to have necessary adaptation to-
wards the test sets. Experiments show that the train-
ing converges very fast, and the segmentation per-
formance improves significantly from iteration to it-
eration. For the bakeoff experiments, we carried out
the training in 6 iterations, because more iterations
than this have not been observed to bring any signif-
icant improvement on segmentation accuracy to the
training sets.
3 Case-based learning for disambiguation
No matter how well the language model is trained,
probabilistic segmentation cannot avoid mistakes on
ambiguous strings, although it resolves most ambi-
guities by virtue of probability. For the remaining
unresolved ambiguities, however, we have to resort
to other strategies and/or resources. Our recent study
(Kit et al, 2002) shows that case-based learning is
an effective approach to disambiguation.
The basic idea behind the case-based learning is
to utilize existing resolutions for known ambiguous
strings to do disambiguation if similar ambiguities
occur again. This learning strategy can be imple-
mented in two straightforward steps:
1. Collection of correct answers from the train-
ing corpus for ambiguous strings together with
their contexts, resulting in a set of context-
dependent transformation rules;
2. Application of appropriate rules to ambiguous
strings.
A transformation rule of this type is actually an ex-
ample of segmentation, indicating how an ambigu-
ous string is segmented within a particular context.
It has the following general form:
C l? Cr : ? ? w1 w2 ? ? ?wk
where ? is the ambiguous string, C l and Cr its left
and right contexts, respectively, and w1 w2 ? ? ?wk
the correct segmentation of ? given the contexts.
In our implementation, we set the context length on
each side to two words.
For a particular ambiguity, the example with the
most similar context in the example (or, rule) base
is applied. The similarity is measured by the sum
of the length of the common suffix and prefix of,
respectively, the left and right contexts. The details
of computing this similarity can be found in (Kit et
al., 2002) . If no rule is applicable, its probabilistic
segmentation is retained.
For the bakeoff, we have based our approach to
ambiguity detection and disambiguation rule extrac-
tion on the assumption that only ambiguous strings
cause mistakes: we detect the discrepancies of our
probabilistic segmentation and the standard segmen-
tation of the training corpus, and turn them into
transformation rules. An advantage of this approach
is that the rules so derived carry out not only disam-
biguation but also error correction. This links our
disambiguation strategy to the application of Brill?s
(1993) transformation-based error-driven learning to
Chinese word segmentation (Palmer, 1997; Hocken-
maier and Brew, 1998).
4 System architecture
The overall architecture of our word segmentation
system is presented in Figure 1.
Figure 1: Overall architecture of the system
5 Performance and analysis
The performance of our system in the bakeoff is pre-
sented in Table 1 in terms of precision (P), recall
(R) and F score in percentages, where ?c? denotes
closed tests. Its IV word identification performance
is remarkable.
However, its overall performance is not in bal-
ance with this, due to the lack of a module for OOV
word discovery. It only gets a small number of OOV
words correct by chance. The higher OOV propor-
tion in the test set, the worse is its F score. The rel-
atively high Roov for PKc track is, mostly, the result
of number recognition with regular expressions.
Test P R F OOV Roov Riv
SAc 95.2 93.1 94.2 02.2 04.3 97.2
CTBc 80.0 67.4 73.2 18.1 07.6 95.9
PKc 92.3 86.7 89.4 06.9 15.9 98.0
Table 1: System performance, in percentages (%)
5.1 Error analysis
Most errors on IV words are due to the side-effect
of the context-dependent transformation rules. The
rules resolve most remaining ambiguities and cor-
rect many errors, but at the same time they also cor-
rupt some proper segmentations. This side-effect is
most likely to occur when there is inadequate con-
text information to decide which rules to apply.
There are two strategies to remedy, or at least al-
leviate, this side-effect: (1) retrain probabilistic seg-
mentation ? a conservative strategy; or, (2) incorpo-
rate Brill?s error-driven learning with several rounds
of transformation rule extraction and application, al-
lowing mistakes caused by some rules in previous
rounds to be corrected by other rules in later rounds.
However, even worse than the above side-effect is
a bug in our disambiguation module: it always ap-
plies the first available rule, leading to many unex-
pected errors, each of which may result in more than
one erroneous word. For instance, among 430 er-
rors made by the system in the SA closed test, some
70 are due to this bug. A number of representative
examples of these errors are presented in Table 2,
together with some false errors resulting from the
inconsistency in the standard segmentation.
Errors Standard False errors Standard
2? (8) 2 ? ???D ? ? ?D
? u (7) ?u tjs? tj s?
. ? (7) .? ???? ?? ??
_ A (5) _A P_,? P_ ,?
?  (4) ? 1w?? 1w? ?
n? (4) n ? .??? . ? ? ?
Table 2: Errors and false errors
6 Conclusion and future work
We have presented our recent work for partici-
pation in ICWSB-1 based on a general-purpose
ngram model for probabilistic word segmentation
and a case-based learning strategy for disambigua-
tion. The ngram model is trained using available
unsegmented texts with the EM algorithm with the
aid of Viterbi segmentation. The learning strategy
acquires a set of context-dependent transformation
rules to correct mistakes in the probabilistic segmen-
tation of ambiguous substrings. This integrated ap-
proach demonstrates an impressive effectiveness by
its outstanding performance on IV word identifica-
tion. With elimination of the bug and false errors, its
performance could be significantly better.
6.1 Future work
The above problem analysis points to two main di-
rections for improvement in our future work: (1)
OOV word detection; (2) a better strategy for learn-
ing and applying transformation rules to reduce the
side-effect. In addition, we are also interested in
studying the effectiveness of higher-order ngram
models and variants of EM training for Chinese
word segmentation.
Acknowledgements
The work is part of the CERG project ?EBMT for
HK Legal Texts? funded by HK UGC under the
grant #9040482, with Jonathan J. Webster as the
principal investigator and Chunyu Kit, Caesar S.
Lun, Haihua Pan, King Kuai Sin and Vincent Wong
as investigators. The authors wish to thank all team
members for their contribution to this paper.
References
E. Brill. 1993. A Corpus-Based Approach to Language
Learning. Ph.D. thesis, University of Pennsylvania,
Philadelphia, PA.
A. P. Dempster, N. M. Laird, and D. B.Rubin. 1977.
Maximum likelihood from incomplete data via the em
algorithm. Journal of the Royal Statistical Society, Se-
ries B, 34:1?38.
J. Hockenmaier and C. Brew. 1998. Error-driven learn-
ing of Chinese word segmentation. In PACLIC-12,
pages 218?229, Singapore. Chinese and Oriental Lan-
guages Processing Society.
C. Kit, H. Pan, and H. Chen. 2002. Learning case-based
knowledge for disambiguating Chinese word segmen-
tation: A preliminary study. In COLING2002 work-
shop: SIGHAN-1, pages 33?39, Taipei.
D. Palmer. 1997. A trainable rule-based algorithm
for word segmentation. In ACL-97, pages 321?328,
Madrid.
A. J. Viterbi. 1967. Error bounds for convolutional codes
and an asymptotically optimum decoding algorithm.
IEEE Transactions on Information Theory, IT-13:260?
267.
