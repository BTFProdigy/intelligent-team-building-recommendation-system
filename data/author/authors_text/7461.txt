Proceedings of NAACL HLT 2007, Companion Volume, pages 97?100,
Rochester, NY, April 2007. c?2007 Association for Computational Linguistics
Exploiting Rich Syntactic Information for Relation
Extraction from Biomedical Articles?
Yudong Liu and Zhongmin Shi and Anoop Sarkar
School of Computing Science
Simon Fraser University
{yudongl,zshi1,anoop}@cs.sfu.ca
Abstract
This paper proposes a ternary relation
extraction method primarily based on
rich syntactic information. We identify
PROTEIN-ORGANISM-LOCATION re-
lations in the text of biomedical articles.
Different kernel functions are used with
an SVM learner to integrate two sources
of information from syntactic parse trees:
(i) a large number of syntactic features
that have been shown useful for Seman-
tic Role Labeling (SRL) and applied here
to the relation extraction task, and (ii) fea-
tures from the entire parse tree using a
tree kernel. Our experiments show that the
use of rich syntactic features significantly
outperforms shallow word-based features.
The best accuracy is obtained by combin-
ing SRL features with tree kernels.
1 Introduction
Biomedical functional relations (relations for short)
state interactions among biomedical substances. For
instance, the PROTEIN-ORGANISM-LOCATION
(POL) relation that we study in this paper provides
information about where a PROTEIN is located in
an ORGANISM, giving a valuable clue to the bi-
ological function of the PROTEIN and helping to
identify suitable drug, vaccine and diagnostic tar-
gets. Fig. 1 illustrates possible locations of proteins
in Gram+ and Gram? bacteria. Previous work in
biomedical relation extraction task (Sekimizu et al,
1998; Blaschke et al, 1999; Feldman et al, 2002)
suggested the use of predicate-argument structure by
taking verbs as the center of the relation ? in con-
trast, in this paper we directly link protein named en-
tities (NEs) to their locations; in other related work,
(Claudio et al, 2006) proposed an approach that
?This research was partially supported by NSERC, Canada.
cytoplasm cytoplasm 
Gram+ Gram- 
cytoplasmic 
membrane 
cell wall 
periplasm 
outer 
membrane secreted inner membrane 
Figure 1: Illustration of bacterial locations
solely considers the shallow semantic features ex-
tracted from sentences.
For relation extraction in the newswire domain,
syntactic features have been used in a generative
model (Miller et al, 2000) and in a discriminative
log-linear model (Kambhatla, 2004). In comparison,
we use a much larger set of syntactic features ex-
tracted from parse trees, many of which have been
shown useful in SRL task. Kernel-based methods
have also been used for relation extraction (Zelenko
et al, 2003; Culotta and Sorensen, 2004; Bunescu
and Mooney, 2005) on various syntactic represen-
tations, such as dependency trees or constituency-
based parse trees. In contrast, we explore a much
wider variety of syntactic features in this work. To
benefit from both views, a composite kernel (Zhang
et al, 2006) integrates the flat features from enti-
ties and structured features from parse trees. In our
work, we also combine a linear kernel with a tree
kernel for improved performance.
2 SRL Features for Information Extraction
Fig. 2 shows one example illustrating the ternary re-
lation we are identifying. In this example, ?Exoen-
zyme S? is a PROTEIN name, ?extracellular? a LO-
CATION name and ?Pseudomonas aeruginosa? an
ORGANISM name. Our task is to identify if there
exists a ?PROTEIN-ORGANISM-LOCATION? re-
lation among these three NEs.
To simplify the problem, we first reduce the POL
97
SPROTEIN/NP
PROTEIN/NNP
Exoenzyme
PROTEIN/NNP-H
S
VP-H
VBZ-H
is
NP
NP-H
DT
an
LOCATION/JJ
extracellular
NN-H
product
PP
IN-H
of
ORGANISM/NP
ORGANISM/FW
Pseudomonas
ORGANISM/FW-H
aeruginosa
Figure 2: An example of POL ternary relation in a parse tree
ternary relation extraction problem into two binary
relation extraction problems. Specifically, we split
the POL ternary relation into binary relations as: (1)
PO: PROTEIN and ORGANISM, and (2) PL: PRO-
TEIN and LOCATION.
The ORGANISM-LOCATION relation is ignored
because it does not consider the PROTEIN and is
less meaningful than the PO and PL relations. Based
on this simplification, and following the idea of
SRL, we take the PROTEIN name in the role of the
predicate (verb) and the ORGANISM/LOCATION
name as its argument candidates in question. Then
the problem of identifying the binary relations of PO
and PL has been reduced to the problem of argu-
ment classification problem given the predicate and
the argument candidates. The reason we pick PRO-
TEIN names as predicates is that we assume PRO-
TEIN names play a more central role in linking the
binary relations to the final ternary relations.
Compared to a corpus for the standard SRL task,
there are some differences in this task: first is the
relative position of PROTEIN names and ORGAN-
ISM/LOCATION names. Unlike the case in SRL,
where arguments locate either before or after the
predicate, in this application it is possible that one
NE is embedded in another. A second difference is
that a predicate in SRL scenario typically consists of
only one word; here a PROTEIN name can contain
up to 8 words.
We do not use PropBank data in our model at all.
All of our training data and test data is annotated by
domain expert biologists and parsed by Charniak-
Johnson?s parser (released in 2006). When there is
a misalignment between the NE and the constituent
in the parse tree, we insert a new NP parent node for
the NE.
3 System Description
Figure 3: High-level system architecture
Fig. 3 shows the system overview. The input to
our system consists of titles and abstracts that are
extracted from MEDLINE records. These extracted
sentences have been annotated with the NE infor-
mation (PROTEIN, ORGANISM and LOCATION).
The Syntactic Annotator parses the sentences and in-
serts the head information to the parse trees by using
the Magerman/Collins head percolation rules. The
main component of the system is our SRL-based
relation extraction module, where we first manu-
ally extract features along the path from the PRO-
TEIN name to the ORGANISM/LOCATION name
and then train a binary SVM classifier for the binary
relation extraction. Finally, we fuse the extracted
binary relations into a ternary relation. In contrast
with our discriminative model, a statistical parsing
based generative model (Shi et al, 2007) has been
proposed for a related task on this data set where the
NEs and their relations are extracted together and
used to identify which NEs are relevant in a particu-
lar sentence. Since our final goal is to facilitate the
biologists to generate the annotated corpus, in future
98
? each word and its Part-of-Speech (POS) tag of PRO name
? head word (hw) and its POS of PRO name
? subcategorization that records the immediate structure that
expands from PRO name. Non-PRO daughters will be elim-
inated
? POS of parent node of PRO name
? hw and its POS of the parent node of PRO name
? each word and its POS of ORG name (in the case of ?PO ?
relation extraction).
? hw and its POS of ORG name
? POS of parent node of ORG name
? hw and its POS of the parent node of ORG name
? POS of the word immediately before/after ORG name
? punctuation immediately before/after ORG name
? feature combinations: hw of PRO name hw of ORG name,
hw of PRO name POS of hw of ORG name, POS of hw of
PRO name POS of hw of ORG name
? path from PRO name to ORG name and the length of the
path
? trigrams of the path. We consider up to 9 trigrams
? lowest common ancestor node of PRO name and ORG
name along the path
? LCA (Lowest Common Ancestor) path that is from ORG
name to its lowest common ancestor with PRO name
? relative position of PRO name and ORG name. In parse
trees, we consider 4 types of positions that ORGs are relative
to PROs: before, after, inside, other
Table 1: Features adopted from the SRL task. PRO:
PROTEIN; ORG: ORGANISM
work we plan to take the relevant labeled NEs from
the generative model as our input.
Table 1 and Table 2 list the features that are used
in the system.
4 Experiments and Evaluation
4.1 Data set
Our experimental data set is derived from a small
expert-curated corpus, where the POL relations and
relevant PROTEIN, ORGANISM and LOCATION
NEs are labeled. It contains ?150k words, 565 rela-
tion instances for POL, 371 for PO and 431 for PL.
4.2 Systems and Experimental Results
We built several models to compare the relative util-
ity of various types of rich syntactic features that
we can exploit for this task. For various represen-
tations, such as feature vectors, trees and their com-
binations, we applied different kernels in a Support
Vector Machine (SVM) learner. We use Joachims?
? subcategorization that records the immediate structure that
expands from ORG name. Non-ORG daughters will be elim-
inated
? if there is an VP node along the path as ancestor of ORG
name
? if there is an VP node as sibling of ORG name
? path from PRO name to LCA and the path length (L1)
? path from ORG name to LCA and the path length (L2)
? combination of L1 and L2
? sibling relation of PRO and ORG
? distance between PRO name and ORG name in the sen-
tence. ( 3 valued: 0 if nw (number of words) = 0; 1 if 0 <
nw <= 5; 2 if nw > 5)
? combination of distance and sibling relation
Table 2: New features used in the SRL-based rela-
tion extraction system.
SVM light1 with default linear kernel to feature vec-
tors and Moschetti?s SVM-light-TK-1.22 with the
default tree kernel. The models are:
Baseline1 is a purely word-based system, where
the features consist of the unigrams and bigrams
between the PROTEIN name and the ORGAN-
ISM/LOCATION names inclusively, where the stop-
words are selectively eliminated.
Baseline2 is a naive approach that assumes that any
example containing PROTEIN, LOCATION names
has the PL relation. The same assumption is made
for PO and POL relations.
PAK system uses predicate-argument structure ker-
nel (PAK) based method. PAKwas defined in (Mos-
chitti, 2004) and only considers the path from the
predicate to the target argument, which in our set-
ting is the path from the PROTEIN to the ORGAN-
ISM or LOCATION names.
SRL is an SRL system which is adapted to use our
new feature set. A default linear kernel is applied
with SVM learning.
TRK system is similar to PAK system except that
the input is an entire parse tree instead of a PAK
path.
TRK+SRL combines full parse trees and manually
extracted features and uses the kernel combination.
1http://svmlight.joachims.org/
2http://ai-nlp.info.uniroma2.it/moschitti/TK1.2-
software/Tree-Kernel.htm
99
Method PL PO POL
Measure Prec Rec F Acc Prec Rec F Acc Prec Rec F Acc
Baseline1 98.1 61.0 75.3 60.6 88.4 59.7 71.3 58.5 57.1 90.9 70.1 56.3
Baseline2 61.9 100.0 76.5 61.9 48.8 100.0 65.6 48.9 59.8 100.0 74.8 59.8
PAK 71.0 71.0 71.0 64.6 69.0 66.7 67.8 61.8 66.0 69.9 67.9 62.6
SRL 72.9 77.1 74.9 70.3 66.0 71.0 68.4 64.5 70.6 67.5 69.0 65.8
TRK 69.8 81.6 75.3 72.0 64.2 84.1 72.8 72.0 79.6 66.2 72.3 71.3
TRK+SRL 74.9 79.4 77.1 72.8 73.9 78.1 75.9 72.6 75.3 74.5 74.9 71.8
Table 3: Percent scores of Precision/Recall/F-score/Accuracy for identifying PL, PO and POL relations.
4.3 Fusion of Binary relations
We predict the POL ternary relation by fusing PL
and PO binary relations if they belong to the same
sentence and have the same PROTEIN NE. The pre-
diction is made by the sum of confidence scores
(produced by the SVM) of the PL and PO relations.
This is similar to the postprocessing step in SRL task
in which the semantic roles assigned to the argu-
ments have to realize a legal final semantic frame
for the given predicate.
4.4 Discussion
Table 3 shows the results using 5-fold cross valida-
tion. We report figures on ternary relation extraction
and extraction of the two binary relations. Compari-
son between the PAK model and SRL model shows
that manually specified features are more discrimi-
native for binary relation extraction; they boost pre-
cision and accuracy for ternary relation extraction.
In contrast to the SRL model for binary relation ex-
traction, the TRK model obtains lower recall but
higher precision. The combination of SRL with the
TRK system gives best overall accuracy of 71.8%
outperforming shallow word based features.
5 Conclusion
In this paper we explored the use of rich syntac-
tic features for the relation extraction task. In con-
trast with the previously used set of syntactic fea-
tures for this task, we use a large number of fea-
tures originally proposed for the Semantic Role La-
beling task. We provide comprehensive experiments
using many different models that use features from
parse trees. Using rich syntactic features by com-
bining SRL features with tree kernels over the en-
tire tree obtains 71.8% accuracy which significantly
outperforms shallow word-based features which ob-
tains 56.3% accuracy.
References
C. Blaschke, M. Andrade, C. Ouzounis, and A. Valencia. 1999.
Automatic extraction of biological information from scien-
tific text: Protein-protein interactions. In AAAI-ISMB 1999.
R. C. Bunescu and R. J. Mooney. 2005. A shortest path depen-
dency kernel for relation extraction. In Proc. HLT/EMNLP-
2005.
G. Claudio, A. Lavelli, and L. Romano. 2006. Exploiting
Shallow Linguistic Information for Relation Extraction from
Biomedical Literature. In Proc. EACL 2006.
A. Culotta and J. Sorensen. 2004. Dependency tree kernels for
relation extraction. In Proc. ACL-2004.
R. Feldman, Y. Regev, M. Finkelstein-Landau, E. Hurvitz, and
B. Kogan. 2002. Mining biomedical literature using infor-
mation extraction. Current Drug Discovery.
N. Kambhatla. 2004. Combining lexical, syntactic, and seman-
tic features with maximum entropy models for information
extraction. In Proc. ACL-2004 (poster session).
S. Miller, H. Fox, L. Ramshaw, and R. Weischedel. 2000. A
novel use of statistical parsing to extract information from
text. Proc. NAACL-2000.
A. Moschitti. 2004. A study on convolution kernels for shallow
semantic parsing. In Proc. ACL-2004.
T. Sekimizu, H.S. Park, and J. Tsujii. 1998. Identifying the
interaction between genes and gene products based on fre-
quently seen verbs in medline abstracts. In Genome Infor-
matics. 62-71.
Z. Shi, A. Sarkar, and F. Popowich. 2007. Simultaneous Iden-
tification of Biomedical Named-Entity and Functional Re-
lation UsingStatistical Parsing Techniques. In NAACL-HLT
2007 (short paper).
D. Zelenko, C. Aone, and A. Richardella. 2003. Kernel meth-
ods for relation extraction. Journal of Machine Learning
Research.
M. Zhang, J. Zhang, J. Su, and G.D. Zhou. 2006. A Composite
Kernel to Extract Relations between Entities with Both Flat
and Structured Features. In Proc. ACL-2006.
100
Proceedings of NAACL HLT 2007, Companion Volume, pages 161?164,
Rochester, NY, April 2007. c?2007 Association for Computational Linguistics
Simultaneous Identification of Biomedical Named-Entity and
Functional Relations Using Statistical Parsing Techniques ?
Zhongmin Shi and Anoop Sarkar and Fred Popowich
School of Computing Science
Simon Fraser University
{zshi1,anoop,popowich}@cs.sfu.ca
Abstract
In this paper we propose a statistical pars-
ing technique that simultaneously iden-
tifies biomedical named-entities (NEs)
and extracts subcellular localization re-
lations for bacterial proteins from the
text in MEDLINE articles. We build
a parser that derives both syntactic and
domain-dependent semantic information
and achieves an F-score of 48.4% for the
relation extraction task. We then propose
a semi-supervised approach that incor-
porates noisy automatically labeled data
to improve the F-score of our parser to
83.2%. Our key contributions are: learn-
ing from noisy data, and building an an-
notated corpus that can benefit relation ex-
traction research.
1 Introduction
Relation extraction from text is a step beyond
Named-Entity Recognition (NER) and generally de-
mands adequate domain knowledge to build rela-
tions among domain-specific concepts. A Biomedi-
cal Functional Relation (relation for short) states in-
teractions among biomedical substances. In this pa-
per we focus on one such relation: Bacterial Protein
Localization (BPL), and introduce our approach for
identifying BPLs from MEDLINE1 articles.
BPL is a key functional characteristic of pro-
teins. It is essential to the understanding of the func-
tion of different proteins and the discovery of suit-
able drugs, vaccines and diagnostic targets. We are
collaborating with researchers in molecular biology
with the goal of automatically extracting BPLs from
?This research was partially supported by NSERC, Canada.
1MEDLINE is a bibliographic database of biomedical
scientific articles at National Library of Medcine (NLM,
http://www.nlm.nih.gov/).
text with BioNLP techniques, to expand their pro-
tein localization database, namely PSORTdb2(Rey
et al, 2005). Specifically, the task is to produce as
output the relation tuple BPL(BACTERIUM, PRO-
TEIN, LOCATION) along with source sentence and
document references. The task is new to BioNLP
in terms of the specific biomedical relation being
sought. Therefore, we have to build annotated cor-
pus from scratch and we are unable to use existing
BioNLP shared task resources in our experiments.
In this paper we extract from the text of biomedical
articles a relation among: a LOCATION (one of the
possible locations shown in Figure 1 for Gram+ and
Gram- bacteria); a particular BACTERIUM, e.g. E.
Coli, and a PROTEIN name, e.g. OprF.
(Nair and Rost, 2002) used the text taken from
Swiss-Prot annotations of proteins, and trained a
subcellular classifier on this data. (Hoglund et al,
2006) predicted subcellular localizations using an
SVM trained on both text and protein sequence data,
by assigning each protein name a vector based on
terms co-occurring with the localization name for
each organism. (Lu and Hunter, 2005) applied a hi-
erarchical architecture of SVMs to predict subcel-
lular localization by incorporating a semantic hier-
archy of localization classes modeled with biolog-
ical processing pathways. These approaches either
ignore the actual location information in their pre-
dicted localization relations, or only focus on a small
portion of eukaryotic proteins. The performance of
these approaches are not comparable due to different
tasks and datasets.
2 System Outline
During our system?s preprocessing phase, sentences
are automatically annotated with both syntactic in-
formation and domain-specific semantic informa-
tion. Syntactic annotations are provided by a statis-
tical parser (Charniak and Johnson, 2005). Domain-
2http://db.psort.org.
161
cytoplasm cytoplasm 
Gram+ Gram- 
cytoplasmic 
membrane 
cell wall 
periplasm 
outer 
membrane secreted 
inner 
membrane 
Figure 1: Illustration of possible locations of pro-
teins with respect to the bacterial cell structure.
specific semantic information includes annotations
on PROTEIN, BACTERIUM and LOCATION NEs
by dictionary lookups from UMLS3, NCBI Taxon-
omy4 and SwissProt5, and two automatic Bio-NE
recognizers: MMTx6 and Lingpipe7.
We propose the use of a parser that simultane-
ously identifies NEs and extracts the BPL relations
from each sentence. We define NEs to be Relevant
to each other only if they are arguments of a BPL re-
lation, otherwise they are defined to be Irrelevant.
A sentence may contain multiple PROTEIN (LO-
CATION or ORGANISM) NEs, e.g., there are two
PROTEIN NEs in the sentence below but only one,
OmpA, is relevant. Our system aims to identify the
correct BPL relation among all possible BPL tuples
(candidate relations) in the sentence by only recog-
nizing relevant NEs. Each input sentence is assumed
to have at least one BPL relation.
Nine of 10 monoclonal antibodies mapped within the carboxy-
terminal region of [PROTEIN OprF] that is homologous to
the [ORGANISM Escherichia coli] [LOCATION outer membrane]
protein [PROTEIN OmpA].
3 Statistical Syntactic and Semantic Parser
Similar to the approach in (Miller et al, 2000) and
(Kulick et al, 2004), our parser integrates both syn-
tactic and semantic annotations into a single annota-
tion as shown in Figure 2. A lexicalized statistical
parser (Bikel, 2004) is applied to the parsing task.
The parse tree is decorated with two types of seman-
3http://www.nlm.nih.gov/research/umls/
4http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=Taxonomy
5http://www.ebi.ac.uk/swissprot/
6MetaMap Transfer, http://mmtx.nlm.nih.gov/
7http://www.alias-i.com/
PO_LNK/NP 
PO_PTR/PP PO_PTR/PP 
DT PO_PTR/NP PRN NN 
The PROTEIN_R/NP 
PROTEIN_R/JJ 
phospholipase 
PROTEIN_R/NNP 
C 
-LRB- 
-LRB- 
NP 
NNP 
PLC 
gene 
IN 
of 
PO_PTR/NP 
ORGANISM_R/NP 
ORGANISM_R/NNP ORGANISM_R/NNP 
Pseudomonas aeruginosa 
-RRB- 
-RRB- 
Figure 2: An example of parsing results
tic annotations:
1) Annotations on relevant PROTEIN, BAC-
TERIUM and LOCATION NEs. Tags are PRO-
TEIN R, BACTERIUM R and LOCATION R respec-
tively.
2) Annotations on paths between relevant NEs. The
lower-most node that spans both NEs is tagged as
LNK and all nodes along the path to the NEs are
tagged as PTR.
Binary relations are apparently much easier to
represent on the parse tree, therefore we split the
BPL ternary relation into two binary relations: BP
(BACTERIUM and PROTEIN) and PL (PROTEIN
and LOCATION). After capturing BP and PL rela-
tions, we will predict BPL as a fusion of BP and PL,
see ?4.1. In contrast to the global inference done us-
ing our generative model, heavily pipelined discrim-
inative approaches usually have problems with error
propagation. A more serious problem in a pipelined
system when using syntactic parses for relation ex-
traction is the alignment between the named enti-
ties produced by a separate system and the syntac-
tic parses produced by the statistical parser. This
alignment issue is non-trivial and we could not pro-
duce a pipelined system that dealt with this issue
satisfactorily for our dataset. As a result, we did
not directly compare our generative approach to a
pipelined strategy.
4 Experiment Settings and Evaluations
The training and test sets are derived from a small
expert-curated corpus. Table 1 lists numbers of sen-
tences and relevant NEs in each BP/PL/BPL set.
Since the parsing results include both NE and path
tags (note that we do not use any external NER sys-
tem), there are two metrics to produce and evalu-
ate PL or BP relations: Name-only and Name-path
metrics. The name-only metric only measures Rel-
162
PL BP BPL
Training set 289 / 605 258 / 595 352 / 852
Test set 44 / 134 28 / 127 62 / 182
Table 1: Sizes of training and test sets (number of
sentences / number of relevant NEs)
evant PROTEIN, BACTERIUM and LOCATION
NEs (see Section 2). It does not take path annota-
tions into account. The name-only metric is mea-
sured in terms of Precision, Recall and F-score, in
which True Positive (TP ) is the number of correctly
identified NEs, False Positive (FP ) is the number of
incorrectly identified NEs and False Negative (FN )
is the number of correct NEs that are not identified.
The name-path measures nodes being annotated
as LNK, PTR or R along the path between NEs
on the parse tree, therefore it represents confidence
of NEs being arguments of the relation. The name-
path metric is a macro-average measure, which is
the average performance of all sentences in data set.
In measurement of the name-path metric, TP is the
number of correctly annotated nodes on the path be-
tween relevant NEs. FP is the number of incor-
rectly annotated nodes on the path and FN is the
number of correct nodes that are not identified.
4.1 Fusion of BP and PL
The BPL relation can be predicted by a fusion of
BP and PL once they are extracted. Specifically, a
BP and a PL that are extracted from the same sen-
tence are merged into a BPL. The predicted BPL
relations are then evaluated by the same name-only
and name-path metrics as for binary relations. In the
name-path metric, nodes on both PL and BP paths
are counted. Note that we do not need a common
protein NER to merge the BP and PL relations. E.g.,
for name-only evaluation, assume true BPL(B1, P1,
L1): if we predict BP(B1, ) and PL(P1, L2), then
TP=2 due to B1, P1; FP=1 due to L2; and FN=1
due to P1.
5 NER and BPL Extraction
Baseline: An intuitive method for relation extrac-
tion would assume that any sentence containing
PROTEIN, ORGANISM and LOCATION NEs has
the relation. We employ this method as a baseline
system, in which NEs are identified by the auto-
matic NE recognizers and dictionary lookups as in-
troduced in ?2. The system is evaluated against the
test set in Table 1. Results in Table 2 show low pre-
cision for PROTEIN NER and the name-path metric.
Extraction using Supervised Parsing: We first ex-
periment a fully supervised approach by training the
parser on the BP/PL training set and evaluate on the
test set (see Table 1). The name-only and name-path
evaluation results in Table 2 show poor syntactic
parsing annotation quality and low recall on PRO-
TEIN NER. The major reason of these problems is
the lack of training data.
Extraction using Semi-supervised Parsing: Ex-
periments with purely supervised learning show that
our generative model requires a large curated set
to minimize the sparse data problem, but domain-
specific annotated corpora are always rare and ex-
pensive. However, there is a huge source of unla-
beled MEDLINE articles available that may meet
our needs, by assuming that any sentence contain-
ing BACTERIUM, PROTEIN and LOCATION NEs
has the BPL relation. We then choose such sentences
from a subset of the MEDLINE database as the
training data. These sentences, after being parsed
and BPL relations inserted, are in fact the very noisy
data when used to train the parser, since the assumed
relations do not necessarily exist. The reason this
noisy data works at all is probably because we can
learn a preference for structural relations between
entities that are close to each other in the sentence,
and thus distinguish between competing relations in
the same sentence. In future work, we hope to ex-
plore explicit bootstrapping from the labeled data to
improve the quality of the noisy data.
Two experiments were carried out corresponding
to choices of the training set: 1) noisy data only, 2)
noisy data and curated training data. Evaluation re-
sults given in Table 2.
Evaluation results on the name-only metric show
that, compared to supervised parsing, our semi-
supervised method dramatically improves recall for
NER. For instance, recall for PROTEIN NER in-
creases from 25.0% to 81.3%; recall on BAC-
TERIUM and LOCATION NERs increases about
30%. As for the name-path metric, the over-
all F-score is much higher than our fully super-
vised method increasing from 39.9% to 74.5%. It
shows that the inclusion of curated data in the semi-
163
Name-only Evaluation (%) Name-Path Evaluation (%)
Method Measure PL BP BPL PL BP BPL
PROT LOC PROT BACT
P 42.3 78.6 41.9 81.3 40.7 27.1 38.9 31.0
Baseline R 92.5 97.3 87.8 97.4 90.9 56.5 69.0 60.7
F 58.0 87.0 56.7 88.6 56.2 36.6 49.8 41.0
Supervised P 66.7 87.5 66.7 72.7 76.9 45.9 41.2 43.9
(training data R 25.0 56.0 10.5 47.1 35.3 36.7 36.3 36.5
only) F 36.4 68.3 18.2 57.1 48.4 40.8 38.6 39.9
Semi-supervised P 66.7 95.5 70.6 94.1 80.8 76.2 83.5 79.3
(noisy data R 84.2 80.8 80.0 84.2 81.8 67.8 72.4 67.0
only) F 74.4 87.5 75.0 88.9 81.3 71.7 77.5 74.2
Semi-supervised P 73.9 95.5 76.5 94.1 84.8 77.0 81.1 78.7
(noisy data + R 81.0 80.8 81.3 84.2 81.7 68.5 73.7 70.7
training data) F 77.3 87.5 78.8 88.9 83.2 72.5 77.2 74.5
Table 2: Name-only and name-path evaluation results. PROTEIN, LOCATION and BACTERIUM are
PROT, LOC and BACT for short. The training data is the subset of curated data in Table 1.
supervised method does not improve performance
much. Precision of PROTEIN NER increases 6.5%
on average, while F-score of overall BPL extraction
increases only slightly. We experimented with train-
ing the semi-supervised method using noisy data
alone, and testing on the entire curated set, i.e., 333
and 286 sentences for BP and PL extractions respec-
tively. Note that we do not directly train from the
training set in this method, so it is still ?unseen? data
for this model. The F-scores of path-only and path-
name metrics are 75.5% and 67.1% respectively.
6 Discussion and Future Work
In this paper we introduced a statistical parsing-
based method to extract biomedical relations from
MEDLINE articles. We made use of a large un-
labeled data set to train our relation extraction
model. Experiments show that the semi-supervised
method significantly outperforms the fully super-
vised method with F-score increasing from 48.4%
to 83.2%. We have implemented a discriminative
model (Liu et al, 2007) which takes as input the ex-
amples with gold named entities and identifies BPL
relations on them. In future work, we plan to let the
discriminative model take the output of our parser
and refine our current results further. We also plan
to train a graphical model based on all extracted BP,
PL and BPL relations to infer relations from multi-
ple sentences and documents.
References
D. Bikel. 2004. A distributional analysis of a lexicalized statis-
tical parsing model. In Proc. of EMNLP ?04, pages 182?189.
E. Charniak and M. Johnson. 2005. Coarse-to-fine n-best pars-
ing and maxent discriminative reranking. In Proc. of ACL
?05, pages 173?180.
A. Hoglund, T. Blum, S. Brady, P. Donnes, J. Miguel,
M. Rocheford, O. Kohlbacher, and H. Shatkay. 2006. Sig-
nificantly improved prediction of subcellular localization by
integrating text and protein sequence data. In Proc. of PSB
?06, volume 11, pages 16?27.
S. Kulick, A. Bies, M. Libeman, M. Mandel, R. McDonald,
M. Palmer, A. Schein, and L. Ungar. 2004. Integrated an-
notation for biomedical information extraction. In Proc. of
HLT/NAACL ?04, pages 61?68, Boston, May.
Y. Liu, Z. Shi, and A. Sarkar. 2007. Exploiting rich syntactic
information for relation extraction from biomedical articles.
In NAACL-HLT ?07, poster track, Rochester, NY, April.
Z. Lu and L. Hunter. 2005. Go molecular function terms are
predictive of subcellular localization. In Proc. of PSB ?05,
volume 10, pages 151?161.
S. Miller, H. Fox, L. Ramshaw, and R. Weischedel. 2000. A
novel use of statistical parsing to extract information from
text. In Proc. of NAACL ?06, pages 226?233.
R. Nair and B. Rost. 2002. Inferring subcellular localization
through automated lexical analysis. In Bioinformatics, vol-
ume 18, pages 78?86.
S. Rey, M. Acab, J. Gardy, M. Laird, K. deFays, C. Lam-
bert, and F. Brinkman. 2005. Psortdb: A database of sub-
cellular localizations for bacteria. Nucleic Acids Research,
33(D):164?168.
164
