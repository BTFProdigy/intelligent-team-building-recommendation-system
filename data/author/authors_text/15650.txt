Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, pages 832?842,
MIT, Massachusetts, USA, 9-11 October 2010. c?2010 Association for Computational Linguistics
An Efficient Algorithm for Unsupervised Word Segmentation with
Branching Entropy and MDL
Valentin Zhikov
Interdisciplinary Graduate School
of Science and Engineering
Tokyo Institute of Technology
zhikov@lr.pi.titech.ac.jp
Hiroya Takamura
Precision and Intelligence Laboratory
Tokyo Institute of Technology
takamura@pi.titech.ac.jp
Manabu Okumura
Precision and Intelligence Laboratory
Tokyo Institute of Technology
oku@pi.titech.ac.jp
Abstract
This paper proposes a fast and simple unsuper-
vised word segmentation algorithm that uti-
lizes the local predictability of adjacent char-
acter sequences, while searching for a least-
effort representation of the data. The model
uses branching entropy as a means of con-
straining the hypothesis space, in order to ef-
ficiently obtain a solution that minimizes the
length of a two-part MDL code. An evaluation
with corpora in Japanese, Thai, English, and
the ?CHILDES? corpus for research in lan-
guage development reveals that the algorithm
achieves an accuracy, comparable to that of
the state-of-the-art methods in unsupervised
word segmentation, in a significantly reduced
computational time.
1 Introduction
As an inherent preprocessing step to nearly all NLP
tasks for writing systems without orthographical
marking of word boundaries, such as Japanese and
Chinese, the importance of word segmentation has
lead to the emergence of a micro-genre in NLP fo-
cused exclusively on this problem.
Supervised probabilistic models such as Condi-
tional Random Fields (CRF) (Lafferty et al, 2001)
have a wide application to the morphological anal-
ysis of these languages. However, the development
of the annotated training corpora necessary for their
functioning is a labor-intensive task, which involves
multiple stages of manual tagging. Because of the
scarcity of labeled data, the domain adaptation of
morphological analyzers is also problematic, and
semi-supervised algorithms that address this issue
have also been proposed (e.g. Liang, 2005; Tsuboi
et al, 2008).
Recent advances in unsupervised word segmen-
tation have been promoted by human cognition re-
search, where it is involved in the modeling of the
mechanisms that underlie language acquisition. An-
other motivation to study unsupervised approaches
is their potential to support the domain adaptation of
morphological analyzers through the incorporation
of unannotated training data, thus reducing the de-
pendency on costly manual work. Apart from the
considerable difficulties in discovering reliable cri-
teria for word induction, the practical application
of such approaches is impeded by their prohibitive
computational cost.
In this paper, we address the issue of achiev-
ing high accuracy in a practical computational time
through an efficient method that relies on a combina-
tion of evidences: the local predictability of charac-
ter patterns, and the reduction of effort achieved by
a given representation of the language data. Both of
these criteria are assumed to play a key role in native
language acquisition. The proposed model allows
experimentation in a more realistic setting, where
the learner is able to apply them simultaneously. The
832
method shows a high performance in terms of accu-
racy and speed, can be applied to language samples
of substantial length, and generalizes well to corpora
in different languages.
2 Related Work
The principle of least effort (Zipf, 1949) postulates
that the path of minimum resistance underlies all
human behavior. Recent research has recognized
its importance in the process of language acquisi-
tion (Kit, 2003). Compression-based word induc-
tion models comply to this principle, as they reor-
ganize the data into a more compact representation
while identifying the vocabulary of a text. The min-
imum description length framework (MDL) (Ris-
sanen, 1978) is an appealing means of formalizing
such models, as it provides a robust foundation for
learning and inference, based solely on compres-
sion.
The major problem in MDL-based word segmen-
tation is the lack of standardized search algorithms
for the exponential hypothesis space (Goldwater,
2006). The representative MDL models compare
favorably to the current state-of-the-art models in
terms of accuracy. Brent and Cartwright (1996) car-
ried out an exhaustive search through the possible
segmentations of a limited subset of the data. Yu
(2000) proposed an EM optimization routine, which
achieved a high accuracy, in spite of a lower com-
pression than the gold standard segmentation.
As a solution to the aforementioned issue, the pro-
posed method incorporates the local predictability of
character sequences into the inference process. Nu-
merous studies have shown that local distributional
cues can serve well the purpose of inducing word
boundaries. Behavioral science has confirmed that
infants are sensitive to the transitional probabilities
found in speech (Saffran et al, 1996). The increase
in uncertainty following a given word prefix is a
well studied criterion for morpheme boundary pre-
diction (Harris, 1955). A good deal of research has
been conducted on methods through which such lo-
cal statistics can be applied to the word induction
problem (e.g. Kempe, 1999; Huang and Powers,
2003; Jin and Tanaka-Ishii, 2006). Hutchens and
Adler (1998) noticed that entropic chunking has the
effect of reducing the perplexity of a text.
Most methods for unsupervised word segmenta-
tion based solely on local statistics presume a cer-
tain ? albeit minimum ? level of acquaintance with
the target language. For instance, the model of
Huang and Powers (2003) involves some parame-
ters (Markov chain order, numerous threshold val-
ues) that allow its adaptation to the individuality of
written Chinese. In comparison, the method pro-
posed in this paper generalizes easily to a variety of
languages and domains, and is less dependent on an-
notated development data.
The state-of-the-art in unsupervised word seg-
mentation is represented by Bayesian models. Gold-
water et al (2006) justified the importance of
context as a means of avoiding undersegmentation,
through a method based on hierarchical Dirichlet
processes. Mochihashi et al (2009) proposed ex-
tensions to this method, which included a nested
character model and an optimized inference proce-
dure. Johnson and Goldwater (2009) have proposed
a novel method based on adaptor grammars, whose
accuracy surpasses the aforementioned methods by
a large margin, when appropriate assumptions are
made regarding the structural units of a language.
3 Proposed Method
3.1 Word segmentation with MDL
The proposed two-part code incorporates some ex-
tensions of models presented in related work, aimed
at achieving a more precise estimation of the repre-
sentation length. We first introduce the general two-
part code, which consists of:
? the model, embodied by a codebook, i.e., a lexi-
con of unique word typesM = {w1, ..., w|M |},
? the source text D, obtained through encoding
the corpus using the lexicon.
The total description length amounts to the num-
ber of bits necessary for simultaneous transmission
of the codebook and the source text. Therefore, our
objective is to minimize the combined description
length of both terms:
L(D,M) = L(M) + L(D|M).
The description length of the data given M is cal-
culated using the Shannon-Fano code:
833
L(D|M) = ?
|M |?
j=1
#wj log2 P (wj),
where #wj stands for the frequency of the word wj
in the text.
Different strategies have been proposed in the lit-
erature for the calculation of the codebook cost. A
common technique in segmentation and morphology
induction models is to calculate the product of the
total length in characters of the lexicon and an esti-
mate of the per-character entropy. In this way, both
the probabilities and lengths of words are taken into
consideration. The use of a constant value is an ef-
fective and easily computable approach, but it is far
from precise. For instance, in Yu (2000) the average
entropy per character is measured against the orig-
inal corpus, but this model does not capture the ef-
fects of the word distributions on the observed char-
acter probabilities. For this reason, we propose a
different method: the codebook is modeled as a sep-
arate Markov chain of characters.
A lexicon of characters M ? is defined. The de-
scription length of the lexicon data D? given M ? is
then calculated as:
L(D?|M ?) = ?
|C|?
i=1
#ci log2 P (ci),
where #ci denotes the frequency of a character ci
in the lexicon of hypothesis M . The term L(M ?)
is constant for any choice of hypothesis, as is repre-
sents the character set of a corpus.
The total description length under the proposed
model is thus calculated as:
L(M) + L(D|M) = L(M ?) + L(D?|M ?) + L(D|M) =
?
|C|?
i=1
#ci log2 P (ci)?
|M |?
j=1
#wj log2 P (wj) +O(1).
A rigorous definition should include two addi-
tional terms, L(?|M) and L(??|M ?), which give the
representation cost of the parameters of both mod-
els. The L(?|M) can be calculated as:
L(?|M) =
|M | ? 1
2
? log2 S,
where |M | ? 1 gives the number of parameters (de-
grees of freedom), and S is the size of the dataset
(the total length of the text in characters). The para-
metric complexity term is calculated in the same
way for the lexicon. For a derivation of the above
formula, refer to e.g. Li (1998).
MDL is closely related to Bayesian inference. De-
pending on the choice of a universal code, the two
approaches can overlap, as is the case with the two-
part code discussed in this paper. It can be shown
that the model selection in our method is equiva-
lent to a MAP inference, conducted under the as-
sumption that the prior probability of a model de-
creases exponentially with its length (Goldwater,
2006). Thus, the task that we are trying to accom-
plish is to conduct a focused search through the hy-
pothesis space that will allow us to obtain an approx-
imation of the MAP solution in a reasonable time.
The MDL framework does not provide standard
search algorithms for obtaining the hypotheses that
minimize the description length. In the rest of this
section, we will describe an efficient technique suit-
able for the word segmentation task.
3.2 Obtaining an initial hypothesis
First, a rough initial hypothesis is built by an algo-
rithm that combines the branching entropy and MDL
criteria.
Given a setX , comprising all the characters found
in a text, the entropy of branching at position k of the
text is defined as:
H(Xk|xk?1, ..., xk?n) =
?
?
x?X
P (x|xk?1, ..., xk?n) log2 P (x|xk?1, ..., xk?n),
where xk represents the character found at position
k, and n is the order of the Markov model over char-
acters. For brevity, hereafter we shall denote the ob-
served sequence {xk?1, ..., xk?n} as {xk?1:k?n} .
The above definition is extended to combine the
entropy estimates in the left-to-right and right-to-
left directions, as this factor has reportedly improved
performance figures for models based on branching
entropy (Jin and Tanaka-Ishii, 2006). The estimates
in both directions are summed up, yielding a single
value per position:
834
H ?(Xk;k?1|xk?1:k?n;xk:k+n?1) =
?
?
x?X
P (x|xk?1:k?n) log2 P (x|xk?1:k?n)
?
?
x?X
P (x|xk:k+n?1) log2 P (x|xk:k+n?1).
Suffix arrays are employed during the collection
of frequency statistics. For a character model of or-
der n over a testing corpus of size t and a training
corpus of size m, suffix arrays allow these to be
acquired in O(tn logm) time. Faster implementa-
tions reduce the complexity toO(t(n+logm)). For
further discussion, see Manber and Myers (1991).
During the experiments, we did not use the caching
functionality provided by the suffix array library, but
instead kept the statistics for the current iterative
pass (n-gram order and direction) in a local table.
The chunking technique we adopt is to insert a
boundary when the branching entropy measured in
sequences of length n exceeds a certain threshold
value (H(X|xk?1:k?n) > ?). Both n and ? are fixed.
Within the described framework, the increase in
context length n promotes precision and recall at
first, but causes a performance degradation when the
entropy estimates become unreliable due to the re-
duced frequencies of long strings. High threshold
values produce a combination of high precision and
low recall, while low values result in low precision
and high recall.
Since the F-score curve obtained as decreasing
values are assigned to the threshold is typically uni-
modal as in many applications of MDL, we employ
a bisection search routine for the estimation of the
threshold (Algorithm 1).
All positions of the dataset are sorted by their en-
tropy values. At each iteration, at most two new
hypotheses are built, and their description lengths
are calculated in time linear to the data size. The
computational complexity of the described routine
is O(t log t), where t is the corpus length in charac-
ters.
The order of the Markov chain n used during the
entropy calculation is the only input variable of the
proposed model. Since different values perform the
best across the various languages, the most appro-
priate settings can be obtained with the help of a
small annotated corpus. However, the MDL objec-
tive also enables unsupervised optimization against
Algorithm 1 Generates an initial hypothesis.
thresholds[] := sorted H(Xk) values;
threshold := median of thresholds[];
step := length of thresholds[]/4;
direction := ascending;
minimum := +?;
while step > 0 do
nextThreshold := thresholds[] value one step in last
direction;
DL = calculateDL(nextThreshold);
if DL < minimum then
minimum:= DL; threshold := nextThreshold;
step := step/2; continue;
end if
reverse direction;
nextThreshold := thresholds[] value one step in last
direction;
if DL < minimum then
minimum:= DL; threshold := nextThreshold;
step := step/2; continue;
end if
reverse direction;
step := step/2;
end while
Corpus [1] [2] [3] [4]
CHILDES 394655.52 367711.66 368056.10 405264.53
Kyoto 1.291E+07 1.289E+07 1.398E+07 1.837E+07
Table 1: Length in bits of the solutions proposed by Al-
gorithm 1 with respect to the character n-gram order.
a sufficiently large unlabeled dataset. The order that
minimizes the description length of the data can be
discovered in a few iterations of Algorithm 1 with
increasing values of n, and it typically matches the
optimal value of the parameter (Table 1).
Although an acceptable initial segmentation can
be built using the described approach, it is possible
to obtain higher accuracy with an extended model
that takes into account the statistics of Markov
chains from several orders during the entropy calcu-
lation. This can be done by summing up the entropy
estimates, in the way introduced earlier for combin-
ing the values in both directions:
H ??(Xk;k?1|xk?1:k?n;xk:k+n?1) =
?
nmax?
n=1
(
?
x?X
P (x|xk?1:k?n) log2 P (x|xk?1:k?n)
+
?
x?X
P (x|xk:k+n?1) log2 P (x|xk:k+n?1)),
835
where nmax is the index of the highest order to be
taken into consideration.
3.3 Refining the initial hypothesis
In the second phase of the proposed method, we will
refine the initial hypothesis through the reorganiza-
tion of local co-occurrences which produce redun-
dant description length. We opt for greedy optimiza-
tion, as our primary interest is to further explore the
impact that description length minimization has on
accuracy. Of course, such an approach is unlikely
to obtain global minima, but it is a feasible means of
conducting the optimization process, and guarantees
a certain increase in compression.
Since a preliminary segmentation is available, it
is convenient to proceed by inserting or removing
boundaries in the text, thus splitting or merging the
already discovered tokens. The ranked positions in-
volved in the previous step can be reused here, as
this is a way to bias the search towards areas of
the text where boundaries are more likely to occur.
Boundary insertion should start in regions where the
branching entropy is high, and removal should first
occur in regions where the entropy is close to zero.
A drawback of this approach is that it omits loca-
tions where the gains are not immediately obvious,
as it cannot assess the cumulative gains arising from
the merging or splitting of all occurrences of a cer-
tain pair (Algorithm 2).
A clean-up routine, which compensates for this
shortage, is also implemented (Algorithm 3). It op-
erates directly on the types found in the lexicon pro-
duced by Algorithm 2, and is capable of modify-
ing a large number of occurrences of a given pair
in a single step. The lexicon types are sorted by
their contribution to the total description length of
the corpus. For each word type, splitting or merg-
ing is attempted at every letter, beginning from the
center. The algorithm eliminates unlikely types with
low contribution, which represent mostly noise, and
redistributes their cost among more likely ones. The
design of the merging routine makes it impossible to
produce types longer than the ones already found in
the lexicon, as an exhaustive search would be pro-
hibitive.
The evaluation of each hypothetical change in
the segmentation requires that the description length
of the two-part code is recalculated. In order to
Algorithm 2 Compresses local token co-occurrences.
path[][]:= positions sorted by H(Xk) values;
minimum := DL of model produced at initialization;
repeat
for i = max H(Xk) to min H(Xk) do
pos:= path[i][k];
if no boundary exists at pos then
leftToken := token to the left;
rightToken := token to the right;
longToken := leftToken + rightToken;
calculate DL after splitting;
if DL < minimum then
accept split, update model, update DP vari-
ables;
end if
end if
end for
for i = min H(Xk) to max H(Xk) do
merge leftToken and rightToken into longToken
if DL will decrease (analogous to splitting)
end for
until no change is evident in model
Algorithm 3 A lexicon clean-up procedure.
types[] := lexicon types sorted by cost;
minimum := DL of model produced by Algorithm 2;
repeat
for i = min cost to max cost do
for pos = middle to both ends of types[i] do
longType := types[i];
leftType := sequence from first character to
pos;
rightType:= sequence from pos to last charac-
ter;
calculate DL after splitting longType into left-
Type and rightType;
if DL < minimum then
accept split, update model, update DP vari-
ables;
break out of inner loop;
end if
end for
end for
types[] := lexicon types sorted by cost;
for i = max cost to min cost do
for pos = middle to both ends of types[i] do
merge leftType and rightType into longType if
DL will decrease (analogous to splitting)
break out of inner loop;
end for
end for
until no change is evident in model
836
make this optimization phase computationally fea-
sible, dynamic programming is employed in Algo-
rithms 2 and 3. The approach adopted for the re-
calculation of the source text term L(D|M) is ex-
plained below. The estimation of the lexicon cost is
analogous. The term L(D|M) can be rewritten as:
L(D|M) = ?
|M |?
j=1
#wj log2
#wj
N
=
?
|M |?
j=1
#wj log2 #wj +N log2N = T1 + T2,
where #wj is the frequency of wj in the segmented
corpus, and N =
?|M |
j=1 #wj is the cumulative to-
ken count. In order to calculate the new length, we
keep the values of the terms T1 and T2 obtained at
the last change of the model. Their new values are
computed for each hypothetical split or merge on the
basis of the last values, and the expected description
length is calculated as their sum. If the produced es-
timate is lower, the model is modified and the new
values of T1 and T2 are stored for future use.
In order to maintain precise token counts, Algo-
rithms 2 and 3 recognize the fact that recurring se-
quences (?byebye? etc.) appear in the corpora, and
handle them accordingly. Known boundaries, such
as the sentence boundaries in the CHILDES corpus,
are also taken into consideration.
4 Experimental Settings
We evaluated the proposed model against four
datasets. The first one is the Bernstein-Ratner cor-
pus for language acquisition based on transcripts
from the CHILDES database (Bernstein-Ratner,
1987). It comprises phonetically transcribed utter-
ances of adult speech directed to 13 through 21-
month-old children. We evaluated the performance
of our learner in the cases when the few boundaries
among the individual sentences are available to it
(B), and when it starts from a blank state (N). The
Kyoto University Corpus (Kurohashi and Nagao,
1998) is a standard dataset for Japanese morpho-
logical and dependency structure analysis, which
comprises newspaper articles and editorials from the
Mainichi Shimbun. The BEST corpus for word seg-
mentation and named entity recognition in Thai lan-
guage combines text from a variety of sources in-
Corpus Language Size
(MB)
Chars
(K)
Tokens
(K)
Types
(K)
CHILDES-
B/N
English 0.1 95.8 33.3 1.3
Kyoto Japanese 5.02 1674.9 972.9 39.5
WSJ English 5.22 5220.0 1174.2 49.1
BEST-E Thai 12.64 4360.2 1163.2 26.2
BEST-N Thai 18.37 6422.7 1659.4 36.3
BEST-A Thai 4.59 1619.9 438.7 13.9
BEST-F Thai 16.18 5568.0 1670.8 22.6
Wikipedia Japanese 425.0 169069.3 / /
Asahi Japanese 337.2 112401.1 / /
BEST-All Thai 51.2 17424.0 4371.8 73.4
Table 2: Corpora used during the evaluation. Precise to-
ken and type counts have been omitted for Wikipedia and
Asahi, as no gold standard segmentations are available.
cluding encyclopedias (E), newspaper articles (N),
scientific articles (A), and novels (F). The WSJ sub-
set of the Penn Treebank II Corpus incorporates
selected stories from the Wall Street Journal, year
1989 (Marcus et al, 1994). Both the original text
(O), and a version in which all characters were con-
verted to lower case (L) were used.
The datasets listed above were built by remov-
ing the tags and blank spaces found in the corpora,
and concatenating the remaining text. We added
two more training datasets for Japanese, which were
used in a separate experiment solely for the acqui-
sition of frequency statistics. One of them was
created from 200,000 randomly chosen Wikipedia
articles, stripped from structural elements. The
other one contains text from the year 2005 issues of
Asahi Newspaper. Statistics regarding all described
datasets are presented in Table 2.
One whole corpus is segmented in each experi-
ment, in order to avoid the statement of an extended
model that would allow the separation of training
and test data. This setting is also necessary for the
direct comparison between the proposed model and
other recent methods evaluated against the entire
CHILDES corpus.
We report the obtained precision, recall and F-
score values calculated using boundary, token and
type counts. Precision (P) and recall (R) are defined
as:
P =
#correct units
# output units
, R =
#correct units
#gold standard units
.
Boundary, token and lexicon F-scores, denoted
as B-F and T -F and L-F , are calculated as the
837
Model Corpus & Settings B-Prec B-Rec B-F T-Prec T-Rec T-F DL
(bits)
Ref.DL
(bits)
Time
(ms)
1 CHILDES, ? = 1.2, n = [1-6] 0.8667 0.8898 0.8781 0.6808 0.6990 0.6898 344781.74 1060.2
2a (H?) CHILDES, n = 2 0.7636 0.9109 0.8308 0.5352 0.6384 0.5823 367711.66 300490.52 753.1
2b (H??) CHILDES, nmax = 3 0.8692 0.8865 0.8777 0.6792 0.6927 0.6859 347633.07 885.3
1 Kyoto, ? = 0, n = [1-6] 0.8208 0.8208 0.8208 0.5784 0.5784 0.5784 1.325E+07 54958.8
2a (H?) Kyoto, n = 2 0.8100 0.8621 0.8353 0.5934 0.6316 0.6119 1.289E+07 1.120E+07 22909.7
2b (H??) Kyoto, nmax = 2 0.8024 0.9177 0.8562 0.6093 0.6969 0.6501 1.248+E07 23212.8
Table 3: Comparison of the proposed method (2a, 2b) with the model of Jin and Tanaka-Ishii (2006) (1). Execution
times include the obtaining of frequency statistics, and are represented by averages over 10 runs.
harmonic averages of the corresponding precision
and recall values (F = 2PR/(P + R)). As a
rule, boundary-based evaluation produces the high-
est scores among the three evaluation modes, as it
only considers the correspondence between the pro-
posed and the gold standard boundaries at the indi-
vidual positions of the corpora. Token-based evalua-
tion is more strict ? it accepts a word as correct only
if its beginning and end are identified accurately, and
no additional boundaries lie in between. Lexicon-
based evaluation reflects the extent to which the vo-
cabulary of the original text has been recovered.
It provides another useful perspective for the error
analysis, which in combination with token scores
can give a better idea of the relationship between the
accuracy of induction and item frequency.
The system was implemented in Java, however it
handled the suffix arrays through an external C li-
brary called Sary.1 All experiments were conducted
on a 2 GHz Core2Duo T7200 machine with 2 GB
RAM.
5 Results and Discussion
The scores we obtained using the described instan-
tiations of the branching entropy criterion at the ini-
tialization phase are presented in Table 3, along with
those generated by our own implementation of the
method presented in Jin and Tanaka-Ishii (2006),
where the threshold parameter ? was adjusted man-
ually for optimal performance.
The heuristic of Jin and Tanaka-Ishii takes advan-
tage of the trend that branching entropy decreases
as the observed character sequences become longer;
sudden rises can thus be regarded as an indication of
locations where a boundary is likely to exist. Their
method uses a common value for thresholding the
1http://sary.sourceforge.net
entropy change throughout all n-gram orders, and
combines the boundaries discovered in both direc-
tions in a separate step. These properties of the
method would lead to complications if we tried to
employ it in the first phase of our method (i.e. a step
parameter for iterative adjustment of the threshold
value, rules for combining the boundaries, etc.).
The proposed criterion with an automatically de-
termined threshold value produced slightly worse
results than that of Jin and Tanaka-Ishii at the
CHILDES corpus. However, we found out that our
approach achieves approximately 1% higher score
when the best performing threshold value is selected
from the candidate list. There are two observations
that account for the suboptimal threshold choice by
our algorithm. On one hand, the correspondence
between description length and F-score is not abso-
lutely perfect, and this may pose an obstacle to the
optimization process for relatively small language
samples. Another issue lies in the bisection search
routine, which suggests approximations of the de-
scription length minima. The edge that our method
has on the Kyoto corpus can be attributed to a better
estimation of the optimal treshold value due to the
larger amount of data.
The experimental results obtained at the comple-
tion of Algorithm 3 are summarized in Tables 4 and
5. Presented durations include the obtaining of fre-
quency statistics. The nmax parameter is set to the
value which maximizes the compression during the
initial phase, in order to make the results representa-
tive of the case in which no annotated development
corpora are accessible to the algorithm.
It is evident that after the optimization carried out
in the second phase, the description length is re-
duced to levels significantly lower than the ground
truth. In this aspect, the algorithm outperforms the
EM-based method of Yu (2000).
838
Corpus & Settings B-F T-F L-F Time
(ms)
CHILDES-B, nmax=3 0.9092 0.7542 0.5890 2597.2
CHILDES-N, nmax=3 0.9070 0.7499 0.5578 2949.3
Kyoto, nmax=2 0.8855 0.7131 0.3725 70164.6
BEST-E, nmax=5 0.9081 0.7793 0.3549 738055.0
BEST-N, nmax=5 0.8811 0.7339 0.2807 505327.0
BEST-A, nmax=5 0.9045 0.7632 0.4246 250863.0
BEST-F, nmax=5 0.9343 0.8216 0.4820 305522.0
WSJ-O, nmax=6 0.8405 0.6059 0.3338 658214.0
WSJ-L, nmax=6 0.8515 0.6373 0.3233 582382.0
Table 4: Results obtained after the termination of Algo-
rithm 3.
Corpus & Settings Description
Length (Proposed)
Description
Length (Total)
CHILDES-B, nmax=3 290592.30 300490.52
CHILDES-N, nmax=3 290666.12 300490.52
Kyoto, nmax=2 1.078E+07 1.120E+07
BEST-E, nmax=5 1.180E+07 1.252E+07
BEST-N, nmax=5 1.670E+07 1.809E+07
BEST-A, nmax=5 4438600.32 4711363.62
BEST-F, nmax=5 1.562E+07 1.634E+07
WSJ-O, nmax=6 1.358E+07 1.460E+07
WSJ-L, nmax=6 1.317E+07 1.399E+07
Table 5: Description length - proposed versus reference
segmentation.
We conducted experiments involving various ini-
tialization strategies: scattering boundaries at ran-
dom throughout the text, starting from entirely un-
segmented state, or considering each symbol of the
text to be a separate token. The results obtained
with random initialization confirm the strong rela-
tionship between compression and segmentation ac-
curacy, evident in the increase of token F-score be-
tween the random initialization and the termination
of the algorithm, where description length is lower
(Table 6). They also reveal the importance of the
branching entropy criterion to the generation of hy-
potheses that maximize the evaluation scores and
compression, as well as the role it plays in the re-
duction of computational time.
T-F-Score Description Time
Random Init Refinement Length (ms)
0.0441 (0.25) 0.3833 387603.02 6660.4
0.0713 (0.50) 0.3721 383279.86 4975.1
0.0596 (0.75) 0.2777 412743.67 3753.3
Table 6: Experimental results for CHILDES-N with ran-
domized initialization and search path. The numbers in
brackets represent the seed boundaries/character ratios.
The greedy algorithms fail to suggest any opti-
mizations that improve the compression in the ex-
treme cases when the boundaries/character ratio is
either 0 or 1. When no boundaries are given, split-
ting operations produce unique types with a low
frequency that increase the cost of both parts of
the MDL code, and are rejected. The algorithm
runs slowly, as each evaluation operates on candi-
date strings of enormous length. Similarly, when the
corpus is broken down into single-character tokens,
merging individual pairs does not produce any in-
crease in compression. This could be achieved by an
algorithm that estimates the total effect from merg-
ing all instances of a given pair, but such an algo-
rithm would be computationally infeasible for large
corpora.
Finally, we tried randomizing the search path for
Algorithm 2 after an entropy-guided initialization, to
observe a small deterioration in accuracy in the final
segmentation (less than 1% on average).
Figure 1a illustrates the effect that training data
size has on the accuracy of segmentation for the Ky-
oto corpus. The learning curves are similar through-
out the different corpora. For the CHILDES cor-
pus, which has a rather limited vocabulary, token
F-score above 70% can be achieved for datasets as
small as 5000 characters of training data, provided
that reasonable values are set for the nmax parameter
(we used the values presented in Table 4 throughout
these experiments).
Figure 1b shows the evolution of token F-score by
stage for all corpora. The initialization phase seems
to have the highest contribution to the formation of
the final segmentation, and the refinement phase is
highly dependent on the output it produces. As a
consequence, results improve when a more adequate
language sample is provided during the learning of
local dependencies at initialization. This is evident
in the experiments with the larger unlabeled Thai
and Japanese corpora.
For Japanese language with the setting for the
nmax parameter that maximized compression, we
observed an almost 4% increase in the token F-score
produced at the end of the first phase with the Asahi
corpus as training data. Only a small (less than 1%)
rise was observed in the overall performance. The
quite larger dataset of randomly chosen Wikipedia
articles achieved no improvement. We attributed this
839
Figure 1: a) corpus size / accuracy relationship (Kyoto); b) accuracy levels by phase; c) accuracy levels by phase
with various corpora for frequency statistics (Kyoto); d) accuracy levels by phase with different corpora for frequency
statistics (BEST).
to the higher degree of correspondence between the
domains of the Asahi and Kyoto corpora (Figure 1c).
Experiments with the BEST corpus reveal bet-
ter the influence of domain-specific data on the ac-
curacy of segmentation. Performance deteriorates
significantly when out-of-domain training data is
used. In spite of its size, the assorted composite cor-
pus, in which in-domain and out-of-domain training
data are mixed, produces worse results than the cor-
pora which include only domain-specific data (Fig-
ure 1d).
Finally, a comparison of the proposed method
with Bayesian n-gram models is presented in Ta-
ble 7. Through the increase of compression in the
refinement phase of the algorithm, accuracy is im-
proved by around 3%, and the scores approach those
of the explicit probabilistic models of Goldwater et
al. (2009) and Mochihashi et al (2009). The pro-
posed learner surpasses the other unsupervised word
induction models in terms of processing speed. It
should be noticed that a direct comparison of accu-
racy is not possible with Mochihashi et al (2009),
as they evaluated their system with separate datasets
for training and testing. Furthermore, different seg-
mentation standards exist for Japanese, and there-
fore the ?ground truth? provided by the Kyoto cor-
pus cannot be considered an ideal measure of accu-
racy.
6 Conclusions and Future Work
This paper has presented an efficient algorithm for
unsupervised word induction, which relies on a
combination of evidences. New instantiations of the
branching entropy and MDL criteria have been pro-
posed and evaluated against corpora in different lan-
guages. The MDL-based optimization eliminates
the discretion in the choice of the context length
and threshold parameters, common in segmenta-
tion models based on local statistics. At the same
time, the branching entropy criterion enables a con-
strained search through the hypothesis space, allow-
ing the proposed method to demonstrate a very high
840
Model Corpus T-Prec T-Rec T-F L-Prec L-Rec L-F Time
NPY(3) CHILDES 0.7480 0.7520 0.7500 0.4780 0.5970 0.5310 17 min
NPY(2) CHILDES 0.7480 0.7670 0.7570 0.5730 0.5660 0.5700 17 min
HDP(2) CHILDES 0.7520 0.6960 0.7230 0.6350 0.5520 0.5910 -
Ent-MDL CHILDES 0.7634 0.7453 0.7542 0.6844 0.5170 0.5890 2.60 sec
NPY(2) Kyoto - - 0.6210 - - - -
NPY(3) Kyoto - - 0.6660 - - - -
Ent-MDL Kyoto 0.6912 0.7365 0.7131 0.5908 0.2720 0.3725 70.16 sec
Table 7: Comparison of the proposed method (Ent-MDL) with the methods of Mochihashi et al, 2009 (NPY) and
Goldwater et al, 2009 (HDP).
performance in terms of both accuracy and speed.
Possible improvements of the proposed method
include modeling the dependencies among neigh-
boring tokens, which would allow the evaluation
of the context to be reflected in the cost func-
tion. Mechanisms for stochastic optimization imple-
mented in the place of the greedy algorithms could
provide an additional flexibility of search for such
more complex models. As the proposed approach
provides significant performance improvements, it
could be utilized in the development of more so-
phisticated novel word induction schemes, e.g. en-
semble models trained independently with different
data. Of course, we are also going to explore the
model?s potential in the setting of semi-supervised
morphological analysis.
References
Bernstein-Ratner, Nan 1987. The phonology of parent ?
child speech. Childrens Language, 6:159?174
Brent, Michael R and Timothy A. Cartwright. 1996. Dis-
tributional Regularity and Phonotactic Constraints are
Useful for Segmentation. Cognition 61: 93?125
Goldwater, Sharon. 2006. Nonparametric Bayesian
Models of Lexical Acquisition. Brown University,
Ph.D. Thesis
Goldwater, Sharon, Thomas L. Griffiths and Mark John-
son. 2006. Contextual dependencies in unsupervised
word segmentation. Proceedings of the 21st Interna-
tional Conference on Computational Linguistics and
the 44th annual meeting of the Association for Com-
putational Linguistics, Sydney, 673?680
Goldwater, Sharon, Thomas L. Griffiths and Mark John-
son. 2009. A Bayesian framework for word segmen-
tation: Exploring the effects of context. Cognition,
112:1, 21?54.
Harris, Zellig. 1955. From Phoneme to Morpheme. Lan-
guage, 31(2):190-222.
Huang, Jin H. and David Powers. 2003. Chinese Word
Segmentation Based on Contextual Entropy. Proceed-
ings of 17th Pacific Asia Conference, 152?158
Hutchens, Jason L. and Michael D. Alder. 1998. Finding
structure via compression. Proceedings of the Inter-
national Conference on Computational Natural Lan-
guage Learning, 79?82
Jin, Zhihui and Kumiko Tanaka-Ishii. 2006. Unsuper-
vised Segmentation of Chinese Text by Use of Branch-
ing Entropy. Proceedings of the COLING/ACL on
Main conference poster sessions, 428?435
Johnson, Mark and Sharon Goldwater. 2009. Improving
nonparameteric Bayesian inference: experiments on
unsupervised word segmentation with adaptor gram-
mars. Proceedings of Human Language Technologies:
The 2009 Annual Conference of the North American
Association for Computational Linguistics, 317?325.
Kempe, Andre. 1999. Experiments in Unsupervised
Entropy Based Corpus Segmentation. Proceedings of
CoNLL?99, pp. 371?385
Kit, Chunyu. 2003. How does lexical acquisition begin?
A cognitive perspective. Cognitive Science 1(1): 1?
50.
Kurohashi, Sadao and Makoto Nagao. 1998. Building
a Japanese Parsed Corpus while Improving the Pars-
ing System. Proceedings of the First International
Conference on Language Resources and Evaluation,
Granada, Spain, 719?724
Lafferty, John, Andrew McCallum and Fernando Pereira.
2001. Conditional Random Fields: Probabilistic Mod-
els for Segmenting and Labeling Sequence Data. Pro-
ceedings of the International Conference on Machine
Learning.
Li, Hang. 1998. A Probabilistic Approach to Lexical
Semantic Knowledge Acquisition and Structural Dis-
ambiguation. University of Tokyo, Ph.D. Thesis
Liang, Percy. 2005. Semi-Supervised Learning for Nat-
ural Language. Massachusets Institute of Technology,
Master?s Thesis.
Manber, Udi and Gene Myers. 1991. Suffix arrays: a
new method for on-line string searches. SIAM Journal
on Computing 22:935?948
841
Marcus, Mitchell, Grace Kim, Mary Ann Marcinkiewicz,
Robert MacIntyre, Ann Bies, Mark Ferguson, Karen
Katz and Britta Schasberger. 1994. The Penn Tree-
bank: Annotating Predicate Argument Structure. Hu-
man Language Technology, 114?119
Mochihashi, Daiichi, Takeshi Yamada and Naonori Ueda.
2009. Bayesian unsupervised word segmentation with
nested Pitman-Yor language modeling. Proceedings
of the Joint Conference of the 47th Annual Meeting of
the ACL and the 4th International Joint Conference on
Natural Language Processing of the Asian Federation
of Natural Language Processing, 1: 100?108
Rissanen, Jorma. 1978. Modeling by Shortest Data De-
scription. Aulomatica, 14:465?471.
Saffran, Jenny R., Richard N. Aslin and Elissa L. New-
port. 1996. Statistical learning in 8-month-old infants
Science; 274:1926-1928
Tsuboi, Yuta, Hisashi Kashima., Hiroki Oda, Shinsuke
Mori and Yuji Matsumoto. 2008. Training Condi-
tional Random Fields Using Incomplete Annotations.
Proceedings of the 22nd International Conference on
Computational Linguistics - Volume 1,897?904.
Yu, Hua. 2000. Unsupervised word induction using
MDL criterion. Proceedings of tne International Sym-
posium of Chinese Spoken Language Processing, Bei-
jing.
Zipf, George K. 1949. Human Behavior and the Princi-
ple of Least Effort. Addison-Wesley.
842
Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 492?502,
Avignon, France, April 23 - 27 2012. c?2012 Association for Computational Linguistics
Feature-Rich Part-of-speech Tagging
for Morphologically Complex Languages: Application to Bulgarian
Georgi Georgiev and Valentin Zhikov
Ontotext AD
135 Tsarigradsko Sh., Sofia, Bulgaria
{georgi.georgiev,valentin.zhikov}@ontotext.com
Petya Osenova and Kiril Simov
IICT, Bulgarian Academy of Sciences
25A Acad. G. Bonchev, Sofia, Bulgaria
{petya,kivs}@bultreebank.org
Preslav Nakov
Qatar Computing Research Institute, Qatar Foundation
Tornado Tower, floor 10, P.O. Box 5825, Doha, Qatar
pnakov@qf.org.qa
Abstract
We present experiments with part-of-
speech tagging for Bulgarian, a Slavic lan-
guage with rich inflectional and deriva-
tional morphology. Unlike most previous
work, which has used a small number of
grammatical categories, we work with 680
morpho-syntactic tags. We combine a large
morphological lexicon with prior linguis-
tic knowledge and guided learning from a
POS-annotated corpus, achieving accuracy
of 97.98%, which is a significant improve-
ment over the state-of-the-art for Bulgarian.
1 Introduction
Part-of-speech (POS) tagging is the task of as-
signing each of the words in a given piece of text a
contextually suitable grammatical category. This
is not trivial since words can play different syn-
tactic roles in different contexts, e.g., can is a
noun in ?I opened a can of coke.? but a verb in
?I can write.? Traditionally, linguists have classi-
fied English words into the following eight basic
POS categories: noun, pronoun, adjective, verb,
adverb, preposition, conjunction, and interjection;
this list is often extended a bit, e.g., with deter-
miners, particles, participles, etc., but the number
of categories considered is rarely more than 15.
Computational linguistics works with a larger
inventory of POS tags, e.g., the Penn Treebank
(Marcus et al 1993) uses 48 tags: 36 for part-
of-speech, and 12 for punctuation and currency
symbols. This increase in the number of tags
is partially due to finer granularity, e.g., there
are special tags for determiners, particles, modal
verbs, cardinal numbers, foreign words, existen-
tial there, etc., but also to the desire to encode
morphological information as part of the tags.
For example, there are six tags for verbs in the
Penn Treebank: VB (verb, base form; e.g., sing),
VBD (verb, past tense; e.g., sang), VBG (verb,
gerund or present participle; e.g., singing), VBN
(verb, past participle; e.g., sung) VBP (verb, non-
3rd person singular present; e.g., sing), and VBZ
(verb, 3rd person singular present; e.g., sings);
these tags are morpho-syntactic in nature. Other
corpora have used even larger tagsets, e.g., the
Brown corpus (Kuc?era and Francis, 1967) and the
Lancaster-Oslo/Bergen (LOB) corpus (Johansson
et al 1986) use 87 and 135 tags, respectively.
POS tagging poses major challenges for mor-
phologically complex languages, whose tagsets
encode a lot of additional morpho-syntactic fea-
tures (for most of the basic POS categories), e.g.,
gender, number, person, etc. For example, the
BulTreeBank (Simov et al 2004) for Bulgarian
uses 680 tags, while the Prague Dependency Tree-
bank (Hajic?, 1998) for Czech has over 1,400 tags.
Below we present experiments with POS tag-
ging for Bulgarian, which is an inflectional lan-
guage with rich morphology. Unlike most previ-
ous work, which has used a reduced set of POS
tags, we use all 680 tags in the BulTreeBank. We
combine prior linguistic knowledge and statistical
learning, achieving accuracy comparable to that
reported for state-of-the-art systems for English.
The remainder of the paper is organized as fol-
lows: Section 2 provides an overview of related
work, Section 3 describes Bulgarian morphology,
Section 4 introduces our approach, Section 5 de-
scribes the datasets, Section 6 presents our exper-
iments in detail, Section 7 discusses the results,
Section 8 offers application-specific error analy-
sis, and Section 9 concludes and points to some
promising directions for future work.
492
2 Related Work
Most research on part-of-speech tagging has fo-
cused on English, and has relied on the Penn Tree-
bank (Marcus et al 1993) and its tagset for train-
ing and evaluation. The task is typically addressed
as a sequential tagging problem; one notable ex-
ception is the work of Brill (1995), who proposed
non-sequential transformation-based learning.
A number of different sequential learning
frameworks have been tried, yielding 96-97%
accuracy: Lafferty et al(2001) experimented
with conditional random fields (CRFs) (95.7%
accuracy), Ratnaparkhi (1996) used a maximum
entropy sequence classifier (96.6% accuracy),
Brants (2000) employed a hidden Markov model
(96.6% accuracy), Collins (2002) adopted an av-
eraged perception discriminative sequence model
(97.1% accuracy). All these models fix the order
of inference from left to right.
Toutanova et al(2003) introduced a cyclic de-
pendency network (97.2% accuracy), where the
search is bi-directional. Shen et al(2007) have
further shown that better results (97.3% accu-
racy) can be obtained using guided learning, a
framework for bidirectional sequence classifica-
tion, which integrates token classification and in-
ference order selection into a single learning task
and uses a perceptron-like (Collins and Roark,
2004) passive-aggressive classifier to make the
easiest decisions first. Recently, Tsuruoka et al
(2011), proposed a simple perceptron-based clas-
sifier applied from left to right but augmented
with a lookahead mechanism that searches the
space of future actions, yielding 97.3% accuracy.
For morphologically complex languages, the
problem of POS tagging typically includes mor-
phological disambiguation, which yields a much
larger number of tags. For example, for Arabic,
Habash and Rambow (2005) used support vector
machines (SVM), achieving 97.6% accuracy with
139 tags from the Arabic Treebank (Maamouri et
al., 2003). For Czech, Hajic? et al(2001) com-
bined a hidden Markov model (HMM) with lin-
guistic rules, which yielded 95.2% accuracy using
an inventory of over 1,400 tags from the Prague
Dependency Treebank (Hajic?, 1998). For Ice-
landic, Dredze and Wallenberg (2008) reported
92.1% accuracy with 639 tags developed for the
Icelandic frequency lexicon (Pind et al 1991),
they used guided learning and tag decomposition:
First, a coarse POS class is assigned (e.g., noun,
verb, adjective), then, additional fine-grained
morphological features like case, number and
gender are added, and finally, the proposed tags
are further reconsidered using non-local features.
Similarly, Smith et al(2005) decomposed the
complex tags into factors, where models for pre-
dicting part-of-speech, gender, number, case, and
lemma are estimated separately, and then com-
posed into a single CRF model; this yielded com-
petitive results for Arabic, Korean, and Czech.
Most previous work on Bulgarian POS tagging
has started with large tagsets, which were then
reduced. For example, Dojchinova and Mihov
(2004) mapped their initial tagset of 946 tags to
just 40, which allowed them to achieve 95.5%
accuracy using the transformation-based learning
of Brill (1995), and 98.4% accuracy using manu-
ally crafted linguistic rules. Similarly, Georgiev
et al(2009), who used maximum entropy and
the BulTreeBank (Simov et al 2004), grouped
its 680 fine-grained POS tags into 95 coarse-
grained ones, and thus improved their accuracy
from 90.34% to 94.4%. Simov and Osenova
(2001) used a recurrent neural network to predict
(a) 160 morpho-syntactic tags (92.9% accuracy)
and (b) 15 POS tags (95.2% accuracy).
Some researchers did not reduce the tagset:
Savkov et al(2011) used 680 tags (94.7% ac-
curacy), and Tanev and Mitkov (2002) used 303
tags and the BULMORPH morphological ana-
lyzer (Krushkov, 1997), achieving P=R=95%.
3 Bulgarian Morphology
Bulgarian is an Indo-European language from the
Slavic language group, written with the Cyrillic
alphabet and spoken by about 9-12 million peo-
ple. It is also a member of the Balkan Sprachbund
and thus differs frommost other Slavic languages:
it has no case declensions, uses a suffixed definite
article (which has a short and a long form for sin-
gular masculine), and lacks verb infinitive forms.
It further uses special evidential verb forms to ex-
press unwitnessed, retold, and doubtful activities.
Bulgarian is an inflective language with very
rich morphology. For example, Bulgarian verbs
have 52 synthetic wordforms on average, while
pronouns have altogether more than ten grammat-
ical features (not necessarily shared by all pro-
nouns), including case, gender, person, number,
definiteness, etc.
493
This rich morphology inevitably leads to ambi-
guity proliferation; our analysis of BulTreeBank
shows four major types of ambiguity:
1. Between the wordforms of the same lexeme,
i.e., in the paradigm. For example, divana,
an inflected form of divan (?sofa?, mascu-
line), can mean (a) ?the sofa? (definite, singu-
lar, short definite article) or (b) a count form,
e.g., as in dva divana (?two sofas?).
2. Between two or more lexemes, i.e., conver-
sion. For example, kato can be (a) a subor-
dinator meaning ?as, when?, or (b) a preposi-
tion meaning ?like, such as?.
3. Between a lexeme and an inflected wordform
of another lexeme, i.e., across-paradigms.
For example, politika can mean (a) ?the
politician? (masculine, singular, definite,
short definite article) or (b) ?politics? (fem-
inine, singular, indefinite).
4. Between the wordforms of two or more
lexemes, i.e., across-paradigms and quasi-
conversion. For example, vrvi can mean
(a) ?walks? (verb, 2nd or 3rd person, present
tense) or (b) ?strings, laces? (feminine, plu-
ral, indefinite).
Some morpho-syntactic ambiguities in Bulgar-
ian are occasional, but many are systematic, e.g.,
neuter singular adjectives have the same forms
as adverbs. Overall, most ambiguities are local,
and thus arguably resolvable using n-grams, e.g.,
compare hubavo dete (?beautiful child?), where
hubavo is a neuter adjective, and ?Pe hubavo.?
(?I sing beautifully.?), where it is an adverb of
manner. Other ambiguities, however, are non-
local and may require discourse-level analysis,
e.g., ?Vidh go.? can mean ?I saw him.?, where
go is a masculine pronoun, or ?I saw it.?, where
it is a neuter pronoun. Finally, there are ambi-
guities that are very hard or even impossible1 to
resolve, e.g., ?Deteto vleze veselo.? can mean
both ?The child came in happy.? (veselo is an ad-
jective) and ?The child came in happily.? (it is an
adverb); however, the latter is much more likely.
1The problem also exists for English, e.g., the annotators
of the Penn Treebank were allowed to use tag combinations
for inherently ambiguous cases: JJ|NN (adjective or noun as
prenominal modifier), JJ|VBG (adjective or gerund/present
participle), JJ|VBN (adjective or past participle), NN|VBG
(noun or gerund), and RB|RP (adverb or particle).
In many cases, strong domain preferences exist
about how various systematic ambiguities should
be resolved. We made a study for the newswire
domain, analyzing a corpus of 546,029 words,
and we found that ambiguity type 2 (lexeme-
lexeme) prevailed for functional parts-of-speech,
while the other types were more frequent for in-
flecting parts-of-speech. Below we show the most
frequent types of morpho-syntactic ambiguities
and their frequency in our corpus:
? na: preposition (?of?) vs. emphatic particle,
with a ratio of 28,554 to 38;
? da: auxiliary particle (?to?) vs. affirmative
particle, with a ratio of 12,035 to 543;
? e: 3rd person present auxiliary verb (?to be?)
vs. particle (?well?) vs. interjection (?wow?),
with a ratio of 9,136 to 21 to 5;
? singular masculine noun with a short definite
article vs. count form of a masculine noun,
with a ratio of 6,437 to 1,592;
? adverb vs. neuter singular adjective, with a
ratio of 3,858 to 1,753.
Overall, the following factors should be taken
into account when modeling Bulgarian morpho-
syntax: (1) locality vs. non-locality of grammat-
ical features, (2) interdependence of grammatical
features, and (3) domain-specific preferences.
4 Method
We used the guided learning framework described
in (Shen et al 2007), which has yielded state-of-
the-art results for English and has been success-
fully applied to other morphologically complex
languages such as Icelandic (Dredze and Wallen-
berg, 2008); we found it quite suitable for Bul-
garian as well. We used the feature set defined in
(Shen et al 2007), which includes the following:
1. The feature set of Ratnaparkhi (1996), in-
cluding prefix, suffix and lexical, as well as
some bigram and trigram context features;
2. Feature templates as in (Ratnaparkhi, 1996),
which have been shown helpful in bidirec-
tional search;
3. More bigram and trigram features and bi-
lexical features as in (Shen et al 2007).
Note that we allowed prefixes and suffixes of
length up to 9, as in (Toutanova et al 2003) and
(Tsuruoka and Tsujii, 2005).
494
We further extended the set of features with
the tags proposed for the current word token by a
morphological lexicon, which maps words to pos-
sible tags; it is exhaustive, i.e., the correct tag is
always among the suggested ones for each token.
We also used 70 linguistically-motivated, high-
precision rules in order to further reduce the num-
ber of possible tags suggested by the lexicon.
The rules are similar to those proposed by Hin-
richs and Trushkina (2004) for German; we im-
plemented them as constraints in the CLaRK sys-
tem (Simov et al 2003).
Here is an example of a rule: If a wordform
is ambiguous between a masculine count noun
(Ncmt) and a singular short definite masculine
noun (Ncmsh), the Ncmt tag should be chosen if
the previous token is a numeral or a number.
The 70 rules were developed by linguists based
on observations over the training dataset only.
They target primarily the most frequent cases of
ambiguity, and to a lesser extent some infrequent
but very problematic cases. Some rules operate
over classes of words, while other refer to partic-
ular wordforms. The rules were designed to be
100% accurate on our training dataset; our exper-
iments show that they are also 100% accurate on
the test and on the development dataset.
Note that some of the rules are dependent on
others, and thus the order of their cascaded appli-
cation is important. For example, the wordform 
is ambiguous between an accusative feminine sin-
gular short form of a personal pronoun (?her?) and
an interjection (?wow?). To handle this properly,
the rule for interjection, which targets sentence
initial positions, followed by a comma, needs to
be executed first. The rule for personal pronouns
is only applied afterwards.
Word Tags
To$i Ppe-os3m
obaqe Cc; Dd
nma Afsi; Vnitf-o3s; Vnitf-r3s;
Vpitf-o2s; Vpitf-o3s; Vpitf-r3s
vzmonost Ncfsi
da Ta;Tx
sledi Ncfpi; Vpitf-o2s; Vpitf-o3s; Vpitf-r3s;
Vpitz?2s
. . . . . .
Table 1: Sample fragment showing the possible tags
suggested by the lexicon. The tags that are further
filtered by the rules are in italic; the correct tag is bold.
The rules are quite efficient at reducing the POS
ambiguity. On the test dataset, before the rule ap-
plication, 34.2% of the tokens (excluding punctu-
ation) had more than one tag in our morphological
lexicon. This number is reduced to 18.5% after
the cascaded application of the 70 linguistic rules.
Table 1 illustrates the effect of the rules on a small
sentence fragment. In this example, the rules have
left only one tag (the correct one) for three of the
ambiguous words. Since the rules in essence de-
crease the average number of tags per token, we
calculated that the lexicon suggests 1.6 tags per
token on average, and after the application of the
rules this number decreases to 1.44 per token.
5 Datasets
5.1 BulTreeBank
We used the latest version of the BulTree-
Bank (Simov and Osenova, 2004), which contains
20,556 sentences and 321,542 word tokens (four
times less than the English Penn Treebank), anno-
tated using a total of 680 unique morpho-syntactic
tags. See (Simov et al 2004) for a detailed de-
scription of the BulTreeBank tagset.
We split the data into training/development/test
as shown in Table 2. Note that only 552 of all 680
tag types were used in the training dataset, and
the development and the test datasets combined
contain a total of 128 new tag types that were not
seen in the training dataset. Moreover, 32% of the
word types in the development dataset and 31%
of those in the testing dataset do not occur in the
training dataset. Thus, data sparseness is an issue
at two levels: word-level and tag-level.
Dataset Sentences Tokens Types Tags
Train 16,532 253,526 38,659 552
Dev 2,007 32,995 9,635 425
Test 2,017 35,021 9,627 435
Table 2: Statistics about our datasets.
5.2 Morphological Lexicon
In order to alleviate the data sparseness issues,
we further used a large morphological lexicon for
Bulgarian, which is an extended version of the
dictionary described in (Popov et al 1998) and
(Popov et al 2003). It contains over 1.5M in-
flected wordforms (for 110K lemmata and 40K
proper names), each mapped to a set of possible
morpho-syntactic tags.
495
6 Experiments and Evaluation
State-of-the-art POS taggers for English typically
build a lexicon containing all tags a word type has
taken in the training dataset; this lexicon is then
used to limit the set of possible tags that an input
token can be assigned, i.e., it imposes a hard con-
straint on the possibilities explored by the POS
tagger. For example, if can has only been tagged
as a verb and as a noun in the training dataset,
it will be only assigned those two tags at test
time; other tags such as adjective, adverb and pro-
noun will not be considered. Out-of-vocabulary
words, i.e., those that were not seen in the train-
ing dataset, are constrained as well, e.g., to a small
set of frequent open-class tags.
In our experiments, we used a morphological
lexicon that is much larger than what could be
built from the training corpus only: building a
lexicon from the training corpus only is of lim-
ited utility since one can hardly expect to see in
the training corpus all 52 synthetic forms a verb
can possibly have. Moreover, we did not use the
tags listed in the lexicon as hard constraints (ex-
cept in one of our baselines); instead, we experi-
mented with a different, non-restrictive approach:
we used the lexicon?s predictions as features or
soft constraints, i.e., as suggestions only, thus al-
lowing each token to take any possible tag. Note
that for both known and out-of-vocabulary words
we used all 680 tags rather than the 552 tags ob-
served in the training dataset; we could afford to
explore this huge search space thanks to the effi-
ciency of the guided learning framework. Allow-
ing all 680 tags on training helped the model by
exposing it to a larger set of negative examples.
We combined these lexicon features with stan-
dard features extracted from the training corpus.
We further experimented with the 70 contextual
linguistic rules, using them (a) as soft and (b) as
hard constraints. Finally, we set four baselines:
three that do not use the lexicon and one that does.
Accuracy (%)
# Baselines (token-level)
1 MFT + unknowns are wrong 78.10
2 MFT + unknowns are Ncmsi 78.52
3 MFT + guesser for unknowns 79.49
4 MFT + lexicon tag-classes 94.40
Table 3: Most-frequent-tag (MFT) baselines.
6.1 Baselines
First, we experimented with the most-frequent-
tag baseline, which is standard for POS tagging.
This baseline ignores context altogether and as-
signs each word type the POS tag it was most
frequently seen with in the training dataset; ties
are broken randomly. We coped with word types
not seen in the training dataset using three sim-
ple strategies: (a) we considered them all wrong,
(b) we assigned them Ncmsi, which is the most
frequent open-class tag in the training dataset, or
(c) we used a very simple guesser, which assigned
Ncfsi, Ncnsi, Ncfsi, and Ncmsf, if the target word
ended by -a, -o, -i, and -t, respectively, other-
wise, it assigned Ncmsi. The results are shown
in lines 1-3 of Table 3: we can see that the token-
level accuracy ranges in 78-80% for (a)-(c), which
is relatively high, given that we use a large inven-
tory of 680 morpho-syntactic tags.
We further tried a baseline that uses the above-
described morphological lexicon, in addition to
the training dataset. We first built two frequency
lists, containing respectively (1) the most frequent
tag in the training dataset for each word type, as
before, and (2) the most frequent tag in the train-
ing dataset for each class of tags that can be as-
signed to some word type, according to the lexi-
con. For example, the most frequent tag for poli-
tika is Ncfsi, and the most frequent tag for the
tag-class {Ncmt;Ncmsi} is Ncmt.
Given a target word type, this new baseline first
tries to assign it the most frequent tag from the
first list. If this is not possible, which happens
(i) in case of ties or (ii) when the word type was
not seen on training, it extracts the tag-class from
the lexicon and consults the second list. If there
is a single most frequent tag in the corpus for this
tag-class, it is assigned; otherwise a random tag
from this tag-class is selected.
Line 4 of Table 3 shows that this latter baseline
achieves a very high accuracy of 94.40%. Note,
however, that this is over-optimistic: the lexicon
contains a tag-class for each word type in our test-
ing dataset, i.e., while there can be word types
not seen in the training dataset, there are no word
types that are not listed in the lexicon. Thus, this
high accuracy is probably due to a large extent
to the scale and quality of our morphological lexi-
con, and it might not be as strong with smaller lex-
icons; we plan to investigate this in future work.
496
6.2 Lexicon Tags as Soft Constraints
We experimented with three types of features:
1. Word-related features only;
2. Word-related features + the tags suggested
by the lexicon;
3. Word-related features + the tags suggested
by the lexicon but then further filtered using
the 70 contextual linguistic rules.
Table 4 shows the sentence-level and the token-
level accuracy on the test dataset for the three
kinds of features: shown on lines 1, 3 and 4, re-
spectively. We can see that using the tags pro-
posed by the lexicon as features (lines 3 and 4)
has a major positive impact, yielding up to 49%
error reduction at the token-level and up to 37%
at the sentence-level, as compared to using word-
related features alone (line 1).
Interestingly, filtering the tags proposed by the
lexicon using the 70 contextual linguistic rules
yields a minor decrease in accuracy both at the
word token-level and at the sentence-level (com-
pare line 4 to line 2). This is surprising since
the linguistic rules are extremely reliable: they
were designed to be 100% accurate on the train-
ing dataset, and we found them experimentally to
be 100% correct on the development and on the
testing dataset as well.
One possible explanation is that by limiting the
set of available tags for a given token at training
time, we prevent the model from observing some
potentially useful negative examples. We tested
this hypothesis by using the unfiltered lexicon
predictions at training time but then making use
of the filtered ones at testing time; the results are
shown on line 5. We can observe a small increase
in accuracy compared to line 4: from 97.80% to
97.84% at the token-level, and from 70.30% to
70.40% at the sentence-level. Although these dif-
ferences are tiny, they suggest that having more
negative examples at training is helpful.
We can conclude that using the lexicon as a
source of soft constraints has a major positive im-
pact, e.g., because it provides access to impor-
tant external knowledge that is complementary
to what can be learned from the training corpus
alone; the improvements when using linguistic
rules as soft constraints are more limited.
6.3 Linguistic Rules as Hard Constraints
Next, we experimented with using the suggestions
of the linguistic rules as hard constraints. Table 4
shows that this is a very good idea. Comparing
line 1 to line 2, which do not use the morpholog-
ical lexicon, we can see very significant improve-
ments: from 95.72% to 97.20% at the token-level
and from 52.95% to 64.50% at the sentence-level.
The improvements are smaller but still consistent
when the morphological lexicon is used: compar-
ing lines 3 and 4 to lines 6 and 7, respectively, we
see an improvement from 97.83% to 97.91% and
from 97.80% to 97.93% at the token-level, and
about 1% absolute at the sentence-level.
6.4 Increasing the Beam Size
Finally, we increased the beam size of guided
learning from 1 to 3 as in (Shen et al 2007).
Comparing line 7 to line 8 in Table 4, we can see
that this yields further token-level improvement:
from 97.93% to 97.98%.
7 Discussion
Table 5 compares our results to previously re-
ported evaluation results for Bulgarian. The
first four lines show the token-level accuracy for
standard POS tagging tools trained and evalu-
ated on the BulTreeBank:2 TreeTagger (Schmid,
1994), which uses decision trees, TnT (Brants,
2000), which uses a hidden Markov model,
SVMtool (Gime?nez and Ma`rquez, 2004), which
is based on support vector machines, and
ACOPOST (Schro?der, 2002), implementing the
memory-based model of Daelemans et al(1996).
The following lines report the token-level accu-
racy reported in previous work, as compared to
our own experiments using guided learning.
We can see that we outperform by a very large
margin (92.53% vs. 97.98%, which represents
73% error reduction) the systems from the first
four lines, which are directly comparable to our
experiments: they are trained and evaluated on the
BulTreeBank using the full inventory of 680 tags.
We further achieved statistically significant im-
provement (p < 0.0001; Pearson?s chi-squared
test (Plackett, 1983)) over the best pervious result
on 680 tags: from 94.65% to 97.98%, which rep-
resents 62.24% error reduction at the token-level.
2We used the pre-trained TreeTagger; for the rest, we re-
port the accuracy given on the Webpage of the BulTreeBank:
www.bultreebank.org/taggers/taggers.html
497
Lexicon Linguistic Rules (applied to filter): Beam Accuracy (%)
# (source of) (a) the lexicon features (b) the output tags size Sentence-level Token-level
1 ? ? ? 1 52.95 95.72
2 ? ? yes 1 64.50 97.20
3 features ? ? 1 70.40 97.83
4 features yes ? 1 70.30 97.80
5 features yes, for test only ? 1 70.40 97.84
6 features ? yes 1 71.34 97.91
7 features yes yes 1 71.69 97.93
8 features yes yes 3 71.94 97.98
Table 4: Evaluation results on the test dataset. Line 1 shows the evaluation results when using features derived
from the text corpus only; these features are used by all systems in the table. Line 2 further uses the contextual
linguistic rules to limit the set of possible POS tags that can be predicted. Note that these rules (1) consult the
lexicon, and (2) always predict a single POS tag. Line 3 uses the POS tags listed in the lexicon as features, i.e.,
as soft suggestions only. Line 4 is like line 3, but the list of feature-tags proposed by the lexicon is filtered by
the contextual linguistic rules. Line 5 is like line 4, but the linguistic rules filtering is only applied at test time;
it is not done on training. Lines 6 and 7 are similar to lines 3 and 4, respectively, but here the linguistic rules
are further applied to limit the set of possible POS tags that can be predicted, i.e., the rules are used as hard
constraints. Finally, line 8 is like line 7, but here the beam size is increased to 3.
Overall, we improved over almost all previ-
ously published results. Our accuracy is sec-
ond only to the manual rules approach of Do-
jchinova and Mihov (2004). Note, however, that
they used 40 tags only, i.e., their inventory is 17
times smaller than ours. Moreover, they have op-
timized their tagset specifically to achieve very
high POS tagging accuracy by choosing not to at-
tempt to resolve some inherently hard systematic
ambiguities, e.g., they do not try to choose be-
tween second and third person past singular verbs,
whose inflected forms are identical in Bulgarian
and hard to distinguish when the subject is not
present (Bulgarian is a pro-drop language).
In order to compare our results more closely
to the smaller tagsets in Table 5, we evaluated
our best model with respect to (a) the first letter
of the tag only (which is part-of-speech only, no
morphological information; 13 tags), e.g., Ncmsf
becomes N, and (b) the first two letters of the
tag (POS + limited morphological information;
49 tags), e.g., Ncmsf becomes Nc. This yielded
99.30% accuracy for (a) and 98.85% for (b).
The latter improves over (Dojchinova and Mihov,
2004), while using a bit larger number of tags.
Our best token-level accuracy of 97.98% is
comparable and even slightly better than the state-
of-the-art results for English: 97.33% when using
Penn Treebank data only (Shen et al 2007), and
97.50% for Penn Treebank plus some additional
unlabeled data (S?gaard, 2011). Of course, our
results are only indirectly comparable to English.
Still, our performance is impressive because
(1) our model is trained on 253,526 tokens only
while the standard training sections 0-18 of the
Penn Treebank contain a total of 912,344 tokens,
i.e., almost four times more, and (2) we predict
680 rather than just 48 tags as for the Penn Tree-
bank, which is 14 times more.
Note, however, that (1) we used a large exter-
nal morphological lexicon for Bulgarian, which
yielded about 50% error reduction (without it,
our accuracy was 95.72% only), and (2) our
train/dev/test sentences are generally shorter, and
thus arguably simpler for a POS tagger to analyze:
we have 17.4 words per test sentence in the Bul-
TreeBank vs. 23.7 in the Penn Treebank.
Our results also compare favorably to the state-
of-the-art results for other morphologically com-
plex languages that use large tagsets, e.g., 95.2%
for Czech with 1,400+ tags (Hajic? et al 2001),
92.1% for Icelandic with 639 tags (Dredze and
Wallenberg, 2008), 97.6% for Arabic with 139
tags (Habash and Rambow, 2005).
8 Error Analysis
In this section, we present error analysis with re-
spect to the impact of the POS tagger?s perfor-
mance on other processing steps in a natural lan-
guage processing pipeline, such as lemmatization
and syntactic dependency parsing.
First, we explore the most frequently confused
pairs of tags for our best-performing POS tagging
system; these are shown in Table 6.
498
Accuracy
Tool/Authors Method # Tags (token-level, %)
*TreeTagger Decision Trees 680 89.21
*ACOPOST Memory-based Learning 680 89.91
*SVMtool Support Vector Machines 680 92.22
*TnT Hidden Markov Model 680 92.53
(Georgiev et al 2009) Maximum Entropy 680 90.34
(Simov and Osenova, 2001) Recurrent Neural Network 160 92.87
(Georgiev et al 2009) Maximum Entropy 95 94.43
(Savkov et al 2011) SVM + Lexicon + Rules 680 94.65
(Tanev and Mitkov, 2002) Manual Rules 303 95.00(=P=R)
(Simov and Osenova, 2001) Recurrent Neural Network 15 95.17
(Dojchinova and Mihov, 2004) Transformation-based Learning 40 95.50
(Dojchinova and Mihov, 2004) Manual Rules + Lexicon 40 98.40
Guided Learning 680 95.72
Guided Learning + Lexicon 680 97.83
This work Guided Learning + Lexicon + Rules 680 97.98
Guided Learning + Lexicon + Rules 49 98.85
Guided Learning + Lexicon + Rules 13 99.30
Table 5: Comparison to previous work for Bulgarian. The first four lines report evaluation results for various
standard POS tagging tools, which were retrained and evaluated on the BulTreeBank. The following lines report
token-level accuracy for previously published work, as compared to our own experiments using guided learning.
We can see that most of the wrong tags share
the same part-of-speech (indicated by the initial
uppercase letter), such as V for verb, N for noun,
etc. This means that most errors refer to the mor-
phosyntactic features. For example, personal or
impersonal verb; definite or indefinite feminine
noun; singular or plural masculine adjective, etc.
At the same time, there are also cases, where the
error has to do with the part-of-speech label itself.
For example, between an adjective and an adverb,
or between a numeral and an indefinite pronoun.
We want to use the above tagger to develop
(1) a rule-based lemmatizer, using the morpholog-
ical lexicon, e.g., as in (Plisson et al 2004), and
(2) a dependency parser like MaltParser (Nivre et
al., 2007), trained on the dependency part of the
BulTreeBank. We thus study the potential impact
of wrong tags on the performance of these tools.
The lemmatizer relies on the lexicon and uses
string transformation functions defined via two
operations ? remove and concatenate:
if tag = Tag then
{remove OldEnd; concatenate NewEnd}
where Tag is the tag of the wordform, OldEnd is
the string that has to be removed from the end of
the wordform, and NewEnd is the string that has
to be concatenated to the beginning of the word-
form in order to produce the lemma.
Here is an example of such a rule:
if tag = Vpitf-o1s then
{remove oh; concatenate a}
The application of the above rule to the past
simple verb form qetoh (?I read?) would remove
oh, and then concatenate a. The result would be
the correct lemma qeta (?to read?).
Such rules are generated for each wordform in
the morphological lexicon; the above functional
representation allows for compact representation
in a finite state automaton. Similar rules are ap-
plied to the unknown words, where the lemma-
tizer tries to guess the correct lemma.
Obviously, the applicability of each rule cru-
cially depends on the output of the POS tagger.
If the tagger suggests the correct tag, then the
wordform would be lemmatized correctly. Note
that, in some cases of wrongly assigned POS tags
in a given context, we might still get the correct
lemma. This is possible in the majority of the
erroneous cases in which the part-of-speech has
been assigned correctly, but the wrong grammat-
ical alternative has been selected. In such cases,
the error does not influence lemmatization.
In order to calculate the proportion of such
cases, we divided each tag into two parts:
(a) grammatical features that are common for all
wordforms of a given lemma, and (b) features that
are specific to the wordform.
499
Freq. Gold Tag Proposed Tag
43 Ansi Dm
23 Vpitf-r3s Vnitf-r3s
16 Npmsh Npmsi
14 Vpiif-r3s Vniif-r3s
13 Npfsd Npfsi
12 Dm Ansi
12 Vpitcam-smi Vpitcao-smi
12 Vpptf-r3p Vpitf-r3p
11 Vpptf-r3s Vpptf-o3s
10 Mcmsi Pfe-os-mi
10 Ppetas3n Ppetas3m
10 Ppetds3f Psot?3?f
9 Npnsi Npnsd
9 Vpptf-o3s Vpptf-r3s
8 Dm A-pi
8 Ppxts Ppxtd
7 Mcfsi Pfe-os-fi
7 Npfsi Npfsd
7 Ppetas3m Ppetas3n
7 Vnitf-r3s Vpitf-r3s
7 Vpitcam-p-i Vpitcao-p-i
Table 6: Most frequently confused pairs of tags.
The part-of-speech features are always deter-
mined by the lemma. For example, Bulgarian
verbs have the lemma features aspect and tran-
sitivity. If they are correct, then the lemma is pre-
dicted also correctly, regardless of whether cor-
rect or wrong on the grammatical features. For
example, if the verb participle form (aorist or
imperfect) has its correct aspect and transitivity,
then it is lemmatized also correctly, regardless
of whether the imperfect or aorist features were
guessed correctly; similarly, for other error types.
We evaluated these cases for the 711 errors in our
experiment, and we found that 206 of them (about
29%) were non-problematic for lemmatization.
For the MaltParser, we encode most of the
grammatical features of the wordforms as spe-
cific features for the parser. Hence, it is much
harder to evaluate the problematic cases due to
the tagger. Still, we were able to make an es-
timation of some cases. Our strategy was to ig-
nore the grammatical features that do not always
contribute to the syntactic behavior of the word-
forms. Such grammatical features for the verbs
are aspect and tense. Thus, proposing perfective
instead of imperfective for a verb or present in-
stead of past tense would not cause problems for
the MaltParser. Among our 711 errors, 190 cases
(or about 27%) were not problematic for parsing.
Finally, we should note that there are two spe-
cial classes of tokens for which it is generally
hard to predict some of the grammatical features:
(1) abbreviations and (2) numerals written with
digits. In sentences, they participate in agreement
relations only if they are pronounced as whole
phrases; unfortunately, it is very hard for the tag-
ger to guess such relations since it does not have
at its disposal enough features, such as the inflec-
tion of the numeral form, that might help detect
and use the agreement pattern.
9 Conclusion and Future Work
We have presented experiments with part-of-
speech tagging for Bulgarian, a Slavic language
with rich inflectional and derivational morphol-
ogy. Unlike most previous work for this language,
which has limited the number of possible tags, we
used a very rich tagset of 680 morpho-syntactic
tags as defined in the BulTreeBank. By com-
bining a large morphological lexicon with prior
linguistic knowledge and guided learning from a
POS-annotated corpus, we achieved accuracy of
97.98%, which is a significant improvement over
the state-of-the-art for Bulgarian. Our token-level
accuracy is also comparable to the best results re-
ported for English.
In future work, we want to experiment with a
richer set of features, e.g., derived from unlabeled
data (S?gaard, 2011) or from the Web (Umansky-
Pesin et al 2010; Bansal and Klein, 2011). We
further plan to explore ways to decompose the
complex Bulgarian morpho-syntactic tags, e.g., as
proposed in (Simov and Osenova, 2001) and
(Smith et al 2005). Modeling long-distance
syntactic dependencies (Dredze and Wallenberg,
2008) is another promising direction; we believe
this can be implemented efficiently using poste-
rior regularization (Graca et al 2009) or expecta-
tion constraints (Bellare et al 2009).
Acknowledgments
We would like to thank the anonymous reviewers
for their useful comments, which have helped us
improve the paper.
The research presented above has been par-
tially supported by the EU FP7 project 231720
EuroMatrixPlus, and by the SmartBook project,
funded by the Bulgarian National Science Fund
under grant D002-111/15.12.2008.
500
References
Mohit Bansal and Dan Klein. 2011. Web-scale fea-
tures for full-scale parsing. In Proceedings of the
49th Annual Meeting of the Association for Com-
putational Linguistics: Human Language Technolo-
gies, ACL-HLT ?10, pages 693?702, Portland, Ore-
gon, USA.
Kedar Bellare, Gregory Druck, and Andrew McCal-
lum. 2009. Alternating projections for learning
with expectation constraints. In Proceedings of the
25th Conference on Uncertainty in Artificial Intel-
ligence, UAI ?09, pages 43?50, Montreal, Quebec,
Canada.
Thorsten Brants. 2000. TnT ? a statistical part-of-
speech tagger. In Proceedings of the Sixth Applied
Natural Language Processing, ANLP ?00, pages
224?231, Seattle, Washington, USA.
Eric Brill. 1995. Transformation-based error-driven
learning and natural language processing: a case
study in part-of-speech tagging. Comput. Linguist.,
21:543?565.
Michael Collins and Brian Roark. 2004. Incremen-
tal parsing with the perceptron algorithm. In Pro-
ceedings of the 42nd Meeting of the Association for
Computational Linguistics, Main Volume, ACL ?04,
pages 111?118, Barcelona, Spain.
Michael Collins. 2002. Discriminative training meth-
ods for hidden Markov models: theory and experi-
ments with perceptron algorithms. In Proceedings
of the Conference on Empirical Methods in Natu-
ral Language Processing, EMNLP ?02, pages 1?8,
Philadelphia, PA, USA.
Walter Daelemans, Jakub Zavrel, Peter Berck, and
Steven Gillis. 1996. MBT: A memory-based part
of speech tagger generator. In Eva Ejerhed and
Ido Dagan, editors, Fourth Workshop on Very Large
Corpora, pages 14?27, Copenhagen, Denmark.
Veselka Dojchinova and Stoyan Mihov. 2004. High
performance part-of-speech tagging of Bulgarian.
In Christoph Bussler and Dieter Fensel, editors,
AIMSA, volume 3192 of Lecture Notes in Computer
Science, pages 246?255. Springer.
Mark Dredze and Joel Wallenberg. 2008. Icelandic
data driven part of speech tagging. In Proceedings
of the 44th Annual Meeting of the Association of
Computational Linguistics: Short Papers, ACL ?08,
pages 33?36, Columbus, Ohio, USA.
Georgi Georgiev, Preslav Nakov, Petya Osenova, and
Kiril Simov. 2009. Cross-lingual adaptation as
a baseline: adapting maximum entropy models to
Bulgarian. In Proceedings of the RANLP?09 Work-
shop on Adaptation of Language Resources and
Technology to New Domains, AdaptLRTtoND ?09,
pages 35?38, Borovets, Bulgaria.
Jesu?s Gime?nez and Llu??s Ma`rquez. 2004. SVMTool:
A general POS tagger generator based on support
vector machines. In Proceedings of the 4th Inter-
national Conference on Language Resources and
Evaluation, LREC ?04, Lisbon, Portugal.
Joao Graca, Kuzman Ganchev, Ben Taskar, and Fer-
nando Pereira. 2009. Posterior vs parameter spar-
sity in latent variable models. In Yoshua Bengio,
Dale Schuurmans, John D. Lafferty, Christopher
K. I. Williams, and Aron Culotta, editors, Advances
in Neural Information Processing Systems 22, NIPS
?09, pages 664?672. Curran Associates, Inc., Van-
couver, British Columbia, Canada.
Nizar Habash and Owen Rambow. 2005. Arabic to-
kenization, part-of-speech tagging and morpholog-
ical disambiguation in one fell swoop. In Proceed-
ings of the 43rd Annual Meeting of the Associa-
tion for Computational Linguistics, ACL ?05, pages
573?580, Ann Arbor, Michigan.
Jan Hajic?, Pavel Krbec, Pavel Kve?ton?, Karel Oliva,
and Vladim??r Petkevic?. 2001. Serial combination
of rules and statistics: A case study in Czech tag-
ging. In Proceedings of the 39th Annual Meeting
of the Association for Computational Linguistics,
ACL ?01, pages 268?275, Toulouse, France.
Jan Hajic?. 1998. Building a Syntactically Annotated
Corpus: The Prague Dependency Treebank. In Eva
Hajic?ova?, editor, Issues of Valency and Meaning.
Studies in Honor of Jarmila Panevova?, pages 12?
19. Prague Karolinum, Charles University Press.
Erhard W. Hinrichs and Julia S. Trushkina. 2004.
Forging agreement: Morphological disambiguation
of noun phrases. Research on Language & Compu-
tation, 2:621?648.
Stig Johansson, Eric Atwell, Roger Garside, and Geof-
frey Leech, 1986. The Tagged LOB Corpus: Users?
manual. ICAME, The Norwegian Computing Cen-
tre for the Humanities, Bergen University, Norway.
Hristo Krushkov. 1997. Modelling and building ma-
chine dictionaries and morphological processors
(in Bulgarian). Ph.D. thesis, University of Plov-
div, Faculty of Mathematics and Informatics, Plov-
div, Bulgaria.
Henry Kuc?era and Winthrop Nelson Francis. 1967.
Computational analysis of present-day American
English. Brown University Press, Providence, RI.
John D. Lafferty, Andrew McCallum, and Fernando
C. N. Pereira. 2001. Conditional random fields:
Probabilistic models for segmenting and labeling
sequence data. In Proceedings of the 18th Inter-
national Conference on Machine Learning, ICML
?01, pages 282?289, San Francisco, CA, USA.
Mohamed Maamouri, Ann Bies, Hubert Jin, and Tim
Buckwalter. 2003. Arabic Treebank: Part 1 v 2.0.
LDC2003T06.
Mitchell P. Marcus, Mary Ann Marcinkiewicz, and
Beatrice Santorini. 1993. Building a large anno-
tated corpus of English: the Penn Treebank. Com-
put. Linguist., 19:313?330.
501
Joakim Nivre, Johan Hall, Jens Nilsson, Atanas
Chanev, Gu?lsen Eryigit, Sandra Ku?bler, Svetoslav
Marinov, and Erwin Marsi. 2007. MaltParser:
A language-independent system for data-driven de-
pendency parsing. Natural Language Engineering,
13(2):95?135.
Jo?rgen Pind, Fridrik Magnu?sson, and Stefa?n Briem.
1991. The Icelandic frequency dictionary. Techni-
cal report, The Institute of Lexicography, University
of Iceland, Reykjavik, Iceland.
Robin L. Plackett. 1983. Karl Pearson and the Chi-
Squared Test. International Statistical Review / Re-
vue Internationale de Statistique, 51(1):59?72.
Joe?l Plisson, Nada Lavrac?, and Dunja Mladenic?. 2004.
A rule based approach to word lemmatization. In
Proceedings of the 7th International Multiconfer-
ence: Information Society, IS ?2004, pages 83?86,
Ljubljana, Slovenia.
Dimitar Popov, Kiril Simov, and Svetlomira Vidinska.
1998. Dictionary of Writing, Pronunciation and
Punctuation of Bulgarian Language (in Bulgarian).
Atlantis KL, Sofia, Bulgaria.
Dimityr Popov, Kiril Simov, Svetlomira Vidinska, and
Petya Osenova. 2003. Spelling Dictionary of Bul-
garian. Nauka i izkustvo, Sofia, Bulgaria.
Adwait Ratnaparkhi. 1996. A maximum entropy
model for part-of-speech tagging. In Eva Ejerhed
and Ido Dagan, editors, Fourth Workshop on Very
Large Corpora, pages 133?142, Copenhagen, Den-
mark.
Aleksandar Savkov, Laska Laskova, Petya Osenova,
Kiril Simov, and Stanislava Kancheva. 2011.
A web-based morphological tagger for Bulgarian.
In Daniela Majchra?kova? and Radovan Garab??k,
editors, Slovko 2011. Sixth International Confer-
ence. Natural Language Processing, Multilingual-
ity, pages 126?137, Modra/Bratislava, Slovakia.
Helmut Schmid. 1994. Probabilistic part-of-speech
tagging using decision trees. In International Con-
ference on New Methods in Language Processing,
pages 44?49, Manchester, UK.
Ingo Schro?der. 2002. A case study in part-of-speech-
tagging using the ICOPOST toolkit. Technical Re-
port FBI-HH-M-314/02, Department of Computer
Science, University of Hamburg.
Libin Shen, Giorgio Satta, and Aravind Joshi. 2007.
Guided learning for bidirectional sequence classi-
fication. In Proceedings of the 45th Annual Meet-
ing of the Association of Computational Linguistics,
ACL ?07, pages 760?767, Prague, Czech Republic.
Kiril Simov and Petya Osenova. 2001. A hybrid
system for morphosyntactic disambiguation in Bul-
garian. In Proceedings of the EuroConference on
Recent Advances in Natural Language Processing,
RANLP ?01, pages 5?7, Tzigov chark, Bulgaria.
Kiril Simov and Petya Osenova. 2004. BTB-TR04:
BulTreeBank morphosyntactic annotation of Bul-
garian texts. Technical Report BTB-TR04, Bulgar-
ian Academy of Sciences.
Kiril Ivanov Simov, Alexander Simov, Milen
Kouylekov, Krasimira Ivanova, Ilko Grigorov, and
Hristo Ganev. 2003. Development of corpora
within the CLaRK system: The BulTreeBank
project experience. In Proceedings of the 10th con-
ference of the European chapter of the Association
for Computational Linguistics, EACL ?03, pages
243?246, Budapest, Hungary.
Kiril Simov, Petya Osenova, and Milena Slavcheva.
2004. BTB-TR03: BulTreeBank morphosyntac-
tic tagset. Technical Report BTB-TR03, Bulgarian
Academy of Sciences.
Noah A. Smith, David A. Smith, and Roy W. Tromble.
2005. Context-based morphological disambigua-
tion with random fields. In Proceedings of Hu-
man Language Technology Conference and Confer-
ence on Empirical Methods in Natural Language
Processing, pages 475?482, Vancouver, British
Columbia, Canada.
Anders S?gaard. 2011. Semi-supervised condensed
nearest neighbor for part-of-speech tagging. In Pro-
ceedings of the 49th Annual Meeting of the Associa-
tion for Computational Linguistics, ACL-HLT ?10,
pages 48?52, Portland, Oregon, USA.
Hristo Tanev and Ruslan Mitkov. 2002. Shallow
language processing architecture for Bulgarian. In
Proceedings of the 19th International Conference
on Computational Linguistics, COLING ?02, pages
1?7, Taipei, Taiwan.
Kristina Toutanova, Dan Klein, Christopher D. Man-
ning, and Yoram Singer. 2003. Feature-rich
part-of-speech tagging with a cyclic dependency
network. In Proceedings of the Conference of
the North American Chapter of the Association
for Computational Linguistics, NAACL ?03, pages
173?180, Edmonton, Canada.
Yoshimasa Tsuruoka and Jun?ichi Tsujii. 2005. Bidi-
rectional inference with the easiest-first strategy
for tagging sequence data. In Proceedings of the
Conference on Human Language Technology and
Empirical Methods in Natural Language Process-
ing, HLT-EMNLP ?05, pages 467?474, Vancouver,
British Columbia, Canada.
Yoshimasa Tsuruoka, Yusuke Miyao, and Jun?ichi
Kazama. 2011. Learning with lookahead: Can
history-based models rival globally optimized mod-
els? In Proceedings of the 49th Annual Meeting of
the Association for Computational Linguistics: Hu-
man Language Technologies, ACL-HLT ?10, pages
238?246, Portland, Oregon, USA.
Shulamit Umansky-Pesin, Roi Reichart, and Ari Rap-
poport. 2010. A multi-domain web-based algo-
rithm for POS tagging of unknown words. In Pro-
ceedings of the 23rd International Conference on
Computational Linguistics: Posters, COLING ?10,
pages 1274?1282, Beijing, China.
502
