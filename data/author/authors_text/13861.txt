Proceedings of the 11th Meeting of the ACL-SIGMORPHON, ACL 2010, pages 19?27,
Uppsala, Sweden, 15 July 2010.
c
?2010 Association for Computational Linguistics
Complexity of the Acquisition of Phonotactics in Optimality Theory
Giorgio Magri
Institut Jean Nicod,
?
Ecole Normale Sup?erieure, Paris
magrigrg@gmail.com
Abstract
The problem of the acquisition of Phono-
tactics in OT is shown to be not tractable
in its strong formulation, whereby con-
straints and generating function vary arbi-
trarily as inputs of the problem.
Tesar and Smolensky (1998) consider the ba-
sic ranking problem in Optimality Theory (OT).
According to this problem, the learner needs to
find a ranking consistent with a given set of data.
They show that this problem is solvable even in its
strong formulation, namely without any assump-
tions on the generating function or the constraint
set. Yet, this basic ranking problem is too sim-
ple to realistically model any actual aspect of lan-
guage acquisition. To make the problem more re-
alistic, we might want, for instance, to require the
learner to find not just any ranking consistent with
the data, rather one that furthermore generates a
smallest language (w.r.t. set inclusion). Prince and
Tesar (2004) and Hayes (2004) note that this com-
putational problem models the task of the acquisi-
tion of phonotactics within OT. This paper shows
that, contrary to the basic ranking problem consid-
ered by Tesar and Smolensky, this more realistic
problem of the acquisition of phonotactics is not
solvable, at least not in its strong formulation. I
conjecture that this complexity result has nothing
to do with the choice of the OT framework, namely
that an analogous result holds for the correspond-
ing problem within alternative frameworks, such
as Harmonic Grammar (Legendre et al, 1990b;
Legendre et al, 1990a). Furthermore, I conjec-
ture that the culprit lies with the fact that gener-
ating function and constraint set are completely
unconstrained. From this perspective, this paper
motivates the following research question: to find
phonologically plausible assumptions on generat-
ing function and constraint set that make the prob-
lem of the acquisition of phonotactics tractable.
1 Statement of the main result
Let the universal specifications of an OT typology
be a 4-tuple (X ,Y, Gen, C), as illustrated in (1):
X and Y are the sets of underlying and surface
forms; Gen is the generating function; and C is
the constraint set.
X = Y = {ta, da, rat, rad}
Gen =
?
ta, da? {ta, da} rat, rad? {rat, rad}
?
C =
8
<
:
F
pos
= IDNT[VCE]/ONSET,
F = IDNT[VCE],
M =
?
[+VCE, ?SON]
9
=
;
(1)
Let,
?
, . . . be rankings over the constraint set,
as illustrated in (2) for the constraint set in (1).
F
pos
M  F F
pos

?
F 
?
M (2)
Let OT

be the OT-grammar corresponding to a
ranking (Prince and Smolensky, 2004), as illus-
trated in (3) for the ranking in (2).
OT

(/ta/) = [ta] OT

(/da/) = [da]
OT

(/rat/) = [rat] OT

(/rad/) = [rat]
(3)
Let L() be the language corresponding to a
ranking, illustrated in (4) for the rankings (2).
L() = {ta, da, rat}
L(
?
) = {ta, da, rat, rad}
(4)
A data set D is a finite set of pairs (x, y?) of an
underlying form x ? X and an intended winner
surface form y??Gen(x)?Y , as illustrated in (5).
D = {(/da/, [da]), (/rat/, [rat])} (5)
A data set D is called OT-compatible with a rank-
ing iff the corresponding OT-grammar accounts
for all the pairs in D, namely OT

(x)= y? for ev-
ery pair (x, y?) ? D. A data set D is called OT-
compatible iff it is OT-compatible with at least a
ranking. Suppose that the actual universal specifi-
cations (X ,Y, Gen, C) are fixed and known. The
19
basic Ranking problem (Rpbm) is (6). The learner
is provided with a set of data D corresponding to
some target language; and has to come up with a
ranking compatible with those data D.
given: an OT-comp. data set D ? X ? Y;
find: a ranking over the constraint set
C that is OT-compatible with D.
(6)
At the current stage of the development of the
field, we have no firm knowledge of the actual
universal specifications. Thus, the Rpbm (6) is
of little interest. It is standard practice in the OT
computational literature to get around this diffi-
culty by switching to the strong formulation (7),
whereby the universal specifications vary arbitrar-
ily as an input to the problem (Wareham, 1998;
Eisner, 2000; Heinz et al, 2009). Switching from
(6) to (7) presupposes that the learner does not rely
on peculiar properties of the actual universal spec-
ifications.
given: univ. specs (X ,Y, Gen, C),
an OT-comp. data set D ? X ? Y;
find: a ranking over the constraint set
C that is OT-compatible with D.
(7)
To complete the statement of the Rpbm (7), we
need to specify the size of its instances, that de-
termines the time that a solution algorithm is al-
lowed to take. Let width(D) be the cardinality of
the largest candidate set over all underlying forms
that appear in D, as stated in (8).
width(D)
def
= max
(x,y?)?D
|Gen(x)| (8)
Of course, the size of an instance of the Rpbm (7)
depends on the cardinality |C| of the constraint set
and on the cardinality |D| of the data set. Tesar
and Smolensky (1998) (implicitly) assume that it
also depends on width(D), as stated in (9).
1
given: univ. specs (X ,Y, Gen, C),
an OT-comp. data set D ? X ? Y;
find: a ranking of the constraint set C
that is OT-compatible with D;
size: max {|C|, |D|, width(D)}.
(9)
1
A potential difficulty with the latter assumption is as
follows: width(D) could be very large, namely super-
polynomial in the number of constraints |C|; thus, letting the
size of an instance of the Rpbm depend on width(D) might
make the problem too easy, by loosening up too much the
tight dependence on |C|. Yet, this potential difficulty is harm-
less in the case of the strong formulation of the Rpbm, since
that formulation requires an algorithm to work for any univer-
sal specifications, and thus also for universal specifications
where |C| is large but width(D) small.
Tesar and Smolensky (1998) prove claim 1. This
claim is important because it shows that no harm
comes from switching to the strong formulation,
at least in the case of the Rpbm.
Claim 1 The Rpbm (9) is tractable.
Yet, the Rpbm (9) is way too simple to realisti-
cally model any aspect of acquisition. Here is a
way to appreciate this point. The two rankings
 and 
?
in (2) are both solutions of the in-
stance of the Rpbm (9) corresponding to the uni-
versal specifications in (1) and to the data set in
(5). As noted in (4), the language correspond-
ing to  is a proper subset of the language cor-
responding to 
?
. A number of authors have
suggested that the ranking  that corresponds to
the subset language is a ?better? solution than the
ranking 
?
that corresponds to the superset lan-
guage (Berwick, 1985; Manzini and Wexler, 1987;
Prince and Tesar, 2004; Hayes, 2004). This intu-
ition is captured by problem (10): it asks not just
for any ranking OT-compatible with the data D;
rather, for one such ranking whose corresponding
language is as small as possible (w.r.t. set inclu-
sion). The latter condition requires the learner to
rule out as illicit any form which is not entailed by
the data. Problem (10) thus realistically models
the task of the acquisition of phonotactics, namely
the knowledge of licit vs. illicit forms.
given: univ. specs (X ,Y, Gen, C),
an OT-comp. data set D ? X ? Y;
find: a ranking  OT-comp. with D s.t.
there is no ranking 
?
OT-comp.
with D too s.t. L(
?
) $ L().
(10)
The Problem of the Acquisition of Phonotactics
(APpbm) in (10) involves the language L(),
which in turn depends on the number of forms
in X and on the cardinality of the candidate set
Gen(x) for all underlying forms x?X . Thus, (11)
lets the size of an instance of the APpbm depend
generously on |X | and width(X ), rather than on
|D| and width(D) as in the case of the Rpbm (9).
2
given: univ. specs (X ,Y, Gen, C),
an OT-comp. data set D ? X ? Y;
find: a ranking  OT-comp. with D s.t.
there is no ranking 
?
OT-comp.
with D too s.t. L(
?
) $ L();
size: max {|C|, |X |, width(X )}.
(11)
2
Letting the size of an instance of the APpbm depend on
|C|, |X | and width(X ) ensures that the problem is in NP ,
namely that it admits an efficient verification algorithm.
20
Prince and Tesar (2004) offer an alternative for-
mulation of the APpbm. They define a strictness
measure as a function ? that maps a ranking to
a number ?() that provides a relative measure
of the cardinality of the corresponding language
L(), in the sense that any solution of the prob-
lem (12) is a solution of the APpbm (10).
3
given: univ. specs (X ,Y, Gen, C),
an OT-comp. data set D ? X ? Y;
find: a ranking with minimal measure ?
among those OT-comp. with D.
(12)
As usual, assume that the constraint set Con =
F ? M is split up into the subset F of faith-
fulness constraints and the subset M of marked-
ness constraints. Consider the function ?
PT
de-
fined in (13): it pairs a rankingwith the number
?
PT
() of pairs of a faithfulness constraint and a
markedness constraint such that the former is-
ranked above the latter. Prince and Tesar (2004)
conjecture that the function ?
PT
in (13) is a strict-
ness measure. The intuition is that faithfulness
(markedness) constraints work toward (against)
preserving underlying contrasts and thus a small
language is likely to arise by having few pairs of a
faithfulness constraint ranked above a markedness
constraint.
?
PT
()
def
= |{(F,M)?F?M|F M}| (13)
Let me dub (12) with the mesure ?
PT
in (13)
Prince and Tesar?s reformulation of the APpbm
(PTAPpbm), as in (14). The core idea of strictness
measures is to determine the relative strictness of
two rankings without reference to the entire set of
forms X . Thus, (14) lets the size of an instance
of PTAPpbm depend on |D| and width(D), rather
than on |X | and width(X ) as for the APpbm (11).
given: univ. specs (X ,Y, Gen, C),
an OT-comp. data set D ? X ? Y;
find: a ranking with minimal measure
?
PT
among those OT-comp.withD;
size: max{|C|, |D|, width(D)}.
(14)
The APpbm (11) and the PTAPpbm (14) have fig-
ured prominently in the recent computational OT
literature. The main result of this paper is claim
3
The Rpbm (7) corresponds to Empirical Risk Minimiza-
tion in the Statistical Learning literature, while problem (12)
corresponds to a regularized version thereof, with regulariza-
tion function ?.
2. This claim says that there is no efficient al-
gorithm for the APpbm nor for the PTAPpbm. I
conjecture that the culprit lies in the switch to
the strong formulation. Comparing with claim
1, I thus conclude that the switch is harmless for
the easy Rpbm, but harmful for the more realistic
APpbm and PTAPpbm.
Claim 2 The APpbm (11) and the PTAPpbm (14)
are intractable.
In the next section, I prove NP-completeness of
PTAPpbm by showing that the Cyclic Ordering
problem can be reduced to PTAPpbm. I then prove
NP-completeness of APpbm by showing that
PTAPpbm can be reduced to it. NP-completeness
of APpbm holds despite the generous dependence
of its size on |X | and width(X ). Furthermore, the
proof actually shows that the PTAPpbm remains
NP-complete even when the data have the sim-
plest ?disjunctive structure?, namely for each un-
derlying/winner/loser form there are at most two
winner-preferring constrains.
4
And furthermore
even when the data have the property that the faith-
fulness constraints are never loser-preferring.
2 Proof of the main result
Given a data set D, for every pair (x, y?) ? D of
an underlying form x and a corresponding winner
form y?, for every loser candidate y ?Gen(x) dif-
ferent from y?, construct a row a with |C| entries as
follows: the kth entry is an L if constraint C
k
as-
signs more violations to the winner pair (x, y?) than
to the loser pair (x, y); it is a W if the opposite
holds; it is an E if the two numbers of violations
coincide. Organize these rows one underneath the
other into a tableau A(D), called the comparative
tableau corresponding toD. To illustrate, I give in
(15) the tableau corresponding to the data set (5).
A(D) =
[
F F
pos
M
W W L
W E W
]
(15)
Generalizing a bit, let A ? {L, E, W}
m?n
be a
tableau withm rows, n columns, and entries taken
from the three symbols L, E or W, called a compar-
ative tableau. Let me say that A is OT-compatible
with a ranking  iff the tableau obtained by re-
ordering the columns of A from left-to-right in
4
Of course, if there were a unique winner-preferring con-
straint per underlying/winner/loser form triplet, then the data
would be OT-compatible with a unique ranking, and thus the
PTAPpbm would reduce to the Rpbm.
21
decreasing order according to has the property
that the left-most entry different from E is a W in
every row. Tesar and Smolensky (1998) note that
a data set D is OT-compatible with a ranking 
iff the corresponding comparative tableau A(D)
is OT-compatible with it. Thus, the PTAPpbm
(14) is tractable iff the problem (16) is tractable.
Note that this equivalence crucially depends on
two facts. First, that the size of an instance of the
PTAPpbm depends not only on |C| and |D|, but
also on width(D). Second, that we are consider-
ing the strong formulation of the PTAPpbm, and
thus no assumptions need to be imposed on the
given comparative tableau in (16), besides it being
OT-compatible. The set F provided with an in-
stance of (16) says which one of the n columns of
the comparative tableau A correspond to faithful-
ness constraints. The size of an instance of prob-
lem (16) of course depends on the numbers m and
n of rows and columns of A.
given: a OT-comp. tabl.A?{L, E,W}
m?n
,
a set F ? {1, . . . , n};
find: a ranking  with minimal measure
?
PT
among those OT-comp. with A;
size: max{m, n}.
(16)
The decision problem corresponding to (16) is
stated in (17). As it is well known, intractability
of the decision problem (17) entails intractability
of the original problem (16). In fact, if the original
problem (16) can be solved in polynomial time,
then the corresponding decision problem (17) can
be solved in polynomial time too: given an in-
stance of the decision problem (17), find a solution
 of the corresponding instance of (16) and then
just check whether ?
PT
() ? k. From now on, I
will refer to (17) as the PTAPpbm.
given: a OT-comp. tabl. A?{L, E,W}
m?n
,
a set F ? {1, . . . , n},
an integer k;
output: ?yes? iff there is a ranking OT-
comp. with A s.t. ?
PT
() ? k;
size: max{m, n}.
(17)
Let me now introduce the problem I will reduce
to PTAPpbm. Given a finite set A = {a, b, . . .}
with cardinality |A|, consider a set S ? A?A of
pairs of elements of A. The set S is called linearly
compatible iff there exists a one-to-one function
pi : A ? {1, 2, . . . , |A|} such that for every pair
(a, b) ? S we have pi(a) < pi(b). It is useful to
let S be not just a set but a multiset, namely to
allow S to contain multiple instances of the same
pair. The notion of cardinality and the subset re-
lation are trivially extended from sets to multisets.
Consider the problem (18), that I will call the Max-
ordering problem (MOpbm).
given: a finite set A,
a multiset P ? A?A,
an integer k ? |P |;
output: ?yes? iff there is a linearly compat-
ible multiset S ? P with |S| ? k;
size: max {|A|, |P |}.
(18)
The PTAPpbm (17) is clearly in NP , namely it
admits a verification algorithm. Claim 3 ensures
that MOpbm (18) is NP-complete. Claim 4 shows
that MOpbm can be reduced to PTAPpbm (17). I
can thus conclude that PTAPpbm is NP-complete.
Claim 3 The MOpbm (18) is NP-complete.
5
Proof. The MOpbm is obviously in NP . To show
that it is NP-complete, I need to exhibit an NP-
complete problem that can be reduced to it. Given
a finite set A = {a, b, . . .} with cardinality |A|,
consider a set T ? A ? A ? A of triplets of el-
ements of A. The set T is called linearly cycli-
cally compatible iff there exists a one-to-one func-
tion pi : A ? {1, 2, . . . , |A|} such that for ev-
ery triplet (a, b, c) ? T either pi(a)< pi(b)< pi(c)
or pi(b) < pi(c) < pi(a) or pi(c) < pi(a) < pi(b).
Consider the Cyclic Ordering problem (COpbm)
in (19).
6
Galil and Megiddo (1977) prove NP-
completeness of COpbm by reduction from the
3-Satisfability problem; the COpbm is problem
[MS2] in (Garey and Johnson, 1979, p. 279).
input: a finite set A;
a set T ? A?A?A;
output: ?yes? iff T is linearly cyclically
compatible;
size: |A|
(19)
Given an instance (A, T ) of the COpbm (19), con-
sider the corresponding instance (A,P, k) of the
MOpbm (18) defined as in (20). For every triplet
5
A similar claim appears in (Cohen et al, 1999).
6
It makes sense to let the size of an instance of the COpbm
(19) be just the cardinality of the setA. In fact, the cardinality
of the set T can be at most |A|
3
. On the other hand, it makes
sense to let the size of an instance of the MOpbm (18) depend
also on the cardinality of the multiset P rather than only on
the cardinality of the set A, since P is a multiset and thus its
cardinality cannot be bound by the cardinality of A.
22
(a, b, c) in the set T , we put in the multiset P
the three pairs (a, b), (b, c) and (c, a). Further-
more, we set the threshold k to twice the number
of triplets in the set T . Note that P is a multiset
because it might contain two instances of the same
pair coming from two different triplets in T .
P =
{
(a, b), (b, c), (c, a)
?
?
?
(a, b, c) ? T
}
k = 2|T |
(20)
Assume that the instance (A, T ) of the COpbm
admits a positive answer. Thus, T is cyclically
compatible with a linear order pi on A. Thus, for
every triplet (a, b, c) ? T , there are at least two
pairs in P compatible with pi. Hence, there is a
multiset S of pairs of P with cardinality at least
k = 2|T | linearly compatible with pi,
7
namely the
instance of the MOpbm defined in (20) admits a
positive answer. Vice versa, assume that the in-
stance (A,P, k) of the MOpbm in (20) admits a
positive answer. Thus, there exists a linear order
pi on A compatible with 2|T | pairs in P . Since
the three pairs that come from a given triplet are
inconsistent, then each triplet must contribute two
pairs to the total of 2|T | compatible pairs. Hence,
pi is cyclically compatible with all triplets in T . 
Claim 4 The MOpbm (18) can be reduced to the
PTAPpbm (17).
Proof. Given an instance (A,P, k) of the MOpbm,
construct the corresponding instance (A,F ,K) of
the PTAPpbm as follows. Let n = |A|, ` = |P |;
pick an integer d as in (21).
d > (`? k)n (21)
Let the threshold K and the numbers N and M of
columns and rows of the tableau A be as in (22).
K = (`? k)(n+ d)
N = `+ n+ d
M = `+ nd
(22)
Let the sets F andM of faithfulness and marked-
ness constraints be as in (23). There is a faith-
fulness constraint F
(i,j)
for every pair (a
i
, a
j
)
in the multiset P in the given instance of the
MOpbm. Markedness constraints come in two
varieties. There are the markedness constraints
7
Note that, in order for the latter claim to hold, it is cru-
cial that P be a multiset, namely that the same pair might be
counted twice. In fact, T might contain two different triplets
that share some elements, such as (a, b, c) and (a, b, d).
M
1
, . . . ,M
n
, one for every element in the set A in
the given instance of the MOpbm; and then there
are d more markedness constraints M
?
1
, . . . ,M
?
d
,
that I?ll call the ballast markedness constraints.
F = {F
(i,j)
| (a
i
, a
j
) ? P}
M = {M
1
, . . . ,M
n
} ? {M
?
1
, . . . ,M
?
d
}
(23)
The comparative tableau A is built by assembling
one underneath the other various blocks. To start,
let A be the block with ` rows and N = `+n+d
columns described in (24). It has a row for every
pair (a
i
, a
j
)?P . This row has all E?s but for three
entries: the entry corresponding to the faithfulness
constraint F
(i,j)
corresponding to that pair, which
is a W; the entry corresponding to the markedness
constraintM
i
corresponding to the first element a
i
in the pair, which is an L; the entry corresponding
to the markedness constraint M
j
corresponding to
the second element a
j
in the pair, which is a W.
?
?
?
?
... F
(i,j)
... ... M
i
... M
j
... M
?
1
... M
?
d
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
(a
i
, a
j
)? . . . W . . . . . . L . . .W . . . E . . . E
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
?
?
?
?
(24)
Next, let A
i
be the block with d rows and N =
` + n + d columns described in (25), for every
i = 1, . . . , n. All entries corresponding to the
faithfulness constraints are equal to E. All en-
tries corresponding to the the markedness con-
straints M
1
, . . . ,M
n
are equal to E, but for those
in the column corresponding to M
i
, that are in-
stead equal to W. All entries corresponding to the
ballast constraints M
?
1
, . . . ,M
?
d
are equal to E, but
for the diagonal entries that are instead equal to L.
?
?
?
F
1
... F
`
M
1
... M
i
... M
n
M
?
1
... M
?
d
E . . . E W L
.
.
.
.
.
. | 
E . . . E W L
?
?
?
(25)
Finally, let the comparative tableau A be obtained
by ordering the n + 1 blocks A,A
1
, . . . ,A
n
one
underneath the other, as in (26). Before I turn to
the details, let me present the intuition behind the
23
definitions (21)-(26).
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
F
1
... F
`
M
1
... M
n
M
?
1
... M
?
d
A
d E . . . E W L
A
1
.
.
.
.
.
. | 
b E . . . E W L
.
.
.
.
.
.
.
.
.
d E . . . E W L
A
n
.
.
.
.
.
. | 
b E . . . E W L
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
(26)
Since the markedness constraints M
1
, . . . ,M
n
correspond to the elements a
1
, . . . , a
n
of A, a lin-
ear order pi over A defines a ranking  of the
markedness constraintM
1
, . . . ,M
n
as in (27), and
viceversa. Thus, pi is linearly compatible with a
pair (a
i
, a
j
) ? P iff the row of the block A in
(24) corresponding to that pair is accounted for
by ranking M
j
above M
i
, with no need for the
corresponding faithfulness constraint F
(i,j)
to do
any work. Suppose instead that M
j
is not ranked
above M
i
, so that the corresponding faithfulness
constraint F
(i,j)
needs to be ranked above M
i
in
order to protect its L. What consequences does this
fact have for the measure ?
PT
in (13)? Without
the ballast constraints M
?
1
, . . . ,M
?
d
, not much: all
I could conclude is that the faithfulness constraint
F
(i,j)
has at least the two markedness constraints
M
i
and M
j
ranked below it. The ballast marked-
ness constraints M
?
1
, . . . ,M
?
d
ensure a more dra-
matic effect. In fact, the block A
i
forces each of
them to be ranked below M
i
. Thus, if the faithful-
ness constraint F
(i,j)
needs to be ranked aboveM
i
,
then it also needs to be ranked above all the ballast
markedness constraints M
?
1
, . . . ,M
?
d
. If the num-
ber d of these ballast constraints is large enough,
as in (21), then the corresponding effect on the
measure ?
PT
in (13) is rather dramatic.
M
j
M
i
?? pi(a
j
) > pi(a
i
) (27)
Assume that the given instance (A,P, k) of
MOpbm admits a positive answer. Thus, there ex-
ists a multitset S of k pairs of P that is compatible
with a linear order pi on A. Consider a ranking
over the constraint set (23) that satisfies the con-
ditions in (28):  assigns the k faithfulness con-
straints F
(i,j)
that correspond to pairs in S to the k
bottom strata, in any order; assigns the d ballast
markedness constraints M
?
1
, . . . ,M
?
d
to the next d
strata, in any order;  assigns the n markedness
constraints M
1
, . . . ,M
n
to the next n strata, or-
dered according to pi through (27); finally,  as-
signs the remaining ` ? k faithfulness constraints
F
(i,j)
that correspond to pairs in P \ S to the top
`? k strata, in any order.
{F
(i,j)
| (a
i
, a
j
) 6? S}
M
pi
?1
(n)
. . .
M
pi
?1
(1)
{M
?
1
, . . . ,M
?
d
}
{F
(i,j)
| (a
i
, a
j
) ? S}
(28)
This ranking  is OT-compatible with the com-
parative tableau A in (26). In fact, it is OT-
compatible with the n blocks A
1
, . . . ,A
n
in (25),
since the markedness constraints M
1
, . . . ,M
n
are -ranked above the ballast markedness con-
straints M
?
1
, . . . ,M
?
d
. It is OT-compatible with
each row of the block A in (24) that corresponds
to a pair (a
i
, a
j
) 6? S, since the corresponding
faithfulness constraint F
(i,j)
is -ranked above
the corresponding markedness constraints M
i
. Fi-
nally, it is OT-compatible with each row of the
block A that corresponds to a pair (a
i
, a
j
) ? S,
since pi(a
j
)> pi(a
i
) and thus M
j
 M
i
by (27).
The measure ?
PT
() of the ranking is (29): in
fact, the faithfulness constraints F
(i,j)
correspond-
ing to pairs (a
i
, a
j
)?S have no markedness con-
straints-ranked below them; and each one of the
`? k faithfulness constraints F
(i,j)
corresponding
to pairs (a
i
, a
j
) 6?S has all the n + d markedness
constraints-ranked below it. In conclusion, the
instance (A,F ,K) of the PTAPpbm constructed
in (21)-(26) admits a positive answer.
?
PT
() = (`? k)(n+ d) = K (29)
Vice versa, assume that the instance (A, F , K)
of the PTAPpbm constructed in (21)-(26) admits
a positive answer. Thus, there exists a ranking
over the constraint set (23) OT-compatible with the
tableau A in (26) such that ?
PT
() ? K. Con-
sider the multiset S ? P defined in (30). Clearly,
S is compatible with the linear order pi univocally
defined on A = {a
1
, . . . , a
n
} through (27).
S =
{
(a
i
, a
j
) ? P
?
?
?
M
j
M
i
}
(30)
24
To prove that the given instance (A,P, k) of the
MOpbm has a positive answer, I thus only need
to show that |S| ? k. Assume by contradiction
that |S| < k. I can then compute as in (31). In
step (31a), I have used the definition (22) of the
threshold K. In step (31b), I have used the hy-
pothesis that the ranking  is a solution of the
instance (A, F , K) of the PTAPpbm and thus its
mesure ?
PT
does not exceed K. By (13), ?
PT
()
is the total number of pairs of a faithfulness con-
straint and a markedness constraint such that the
former is-ranked above the latter. In step (31c),
I have thus lower bounded ?
PT
() by only con-
sidering those faithfulness constraints F
(i,j)
cor-
responding to pairs (a
i
, a
j
) not in S. For each
such constraint F
(i,j)
, we have M
i
 M
j
, by
the definition (30) of S. Thus, F
(i,j)
needs to
be -ranked above M
i
in order to ensure OT-
compatibility with the corresponding row of the
block A in (24). Since M
i
needs to be-ranked
above the d ballast constraints M
?
1
, . . . ,M
?
d
in or-
der to ensure OT-compatibility with the block A
i
in (25), then F
(i,j)
needs to be -ranked above
those d ballast markedness constraints too. In con-
clusion, each faithfulness constraint F
(i,j)
corre-
sponding to a pair (a
i
, a
j
) not in S needs to be
-ranked at least above dmarkedness constraints.
Since there are `?|S| such faithfulness constraint
F
(i,j)
corresponding to a pair (a
i
, a
j
) 6?S, then we
get the inequality in (31d). In step (31e), I have
used the absurd hypothesis that |S| < k or equiv-
alently that |S| ? k ? 1. The chain of inequalities
in (31) entails that d ? (` ? k)n, which contra-
dicts the choice (21) of the number d of ballast
constraints.
(`? k)d+ (`? k)n
(a)
= K
(b)
? ?
PT
()
(13)
= |{(F
(i,j)
,M) |F
(i,j)
M}|
(c)
? |{(F
(i,j)
,M) |F
(i,j)
M, (a
i
, a
j
) 6?S}|
(d)
= (`? |S|)d
(e)
? (`? (k ? 1))d
= (`? k)d+ d
(31)
The preceding considerations show that given
an arbitrary instance (A,P, k) of the MOpbm
(18), the corresponding instance (A,F ,K) of the
PTAPpbm (17) defined in (21)-(26) admits a pos-
itive solution iff the original instance (A,P, k) of
the MOpbm does. I conclude that the MOpbm can
be reduced to the PTAPpbm. 
Let me now turn to the APpbm (11). Once again,
in order to show that it is intractable, it is sufficient
to show that the corresponding decision problem
(32) is intractable. In fact, if problem (11) can be
solved, then (32) can be solved too: given an in-
stance of the latter, find a solution  of the cor-
responding instance of the problem (11) and then
just check whether |L()| ? k.
8
From now on, I
will refer to (32) as the APpbm.
given: univ. specs (X ,Y, Gen, C),
an OT-comp. data set D ? X ? Y ,
an integer k;
output: ?yes? iff there is a ranking  OT-
comp. with D s.t. the correspond-
ing language L() has cardinality
at most k;
size: max {|C|, |X |, width(X )}.
(32)
The APpbm (32) is clearly in NP , namely it
admits a verification algorithm. The following
claim 5 together with the NP-completeness of
PTAPpbm, entails that the APpbm is NP-complete
too, thus completing the proof of claim 2.
Claim 5 The PTAPpbm (17) can be reduced to the
APpbm (32).
Proof. Given an instance (A, F , k) of the
PTAPpbm (17), construct the corresponding in-
stance ((X , Y, Gen, C), D, K) of the APpbm
(32) as follows. Let m and n be the number of
rows and of columns of the comparative tableau
A; let ` be the cardinality of the set F ; let d =
`(n? `). Define the threshold K as in (33).
K = m+ k + d (33)
Define the sets X and Y of underlying and surface
forms as in (34).
X = {x
1
, . . . , x
m
} ? {x
?
1
, . . . , x
?
d
} ? {x
??
1
, . . . , x
??
d
}
| | |
X
1
X
2
X
3
Y =
{
y
1
, . . . , y
m
z
1
, . . . , z
m
}
?
{
u
1
, . . . , u
d
v
1
, . . . , v
d
}
?
{
u
1
, . . . , u
d
w
1
, . . . , w
d
}
| | |
Y
1
Y
2
Y
3
(34)
8
The generous dependence of the size of the APpbm (11)
on |X | andwidth(X ) provides us with sufficient time to triv-
ially compute the language L().
25
Define the generating function Gen as in (35).
Gen(x
i
) = {y
i
, z
i
} ? Y
1
for x
i
? X
1
Gen(x
?
i
) = {u
i
, v
i
} ? Y
2
for x
?
i
? X
2
Gen(x
??
i
) = {u
i
, w
i
} ? Y
3
for x
??
i
? X
3
(35)
Define the data set D as in (36).
D = {(x
1
, y
1
), . . . , (x
m
, y
m
)} (36)
Let the constraint set C contain a total of n con-
straints C
1
, . . . , C
n
; let C
h
be a faithfulness con-
straint iff h ? F , and a markedness constraint oth-
erwise. Since, Gen(X
i
) ? Y
i
, constraints need
only be defined on X
i
? Y
j
with i = j. The set
X
1
contains m underlying forms x
1
, . . . x
m
, one
for every row of the given comparative tableau A.
Each of these underlying forms x
i
comes with the
two candidates y
i
and z
i
. The data set D in (36)
is a subset of X
1
? Y
1
. Define the constraints
C
1
, . . . , C
n
overX
1
?Y
1
as in (37). This definition
ensures that A is the comparative tableau corre-
sponding to D, so that (40) holds for any ranking.
 is OT-comp. with A iff is OT-
comp. with D
(40)
The set X
2
contains a total of d = `(n ? `) un-
derlying forms x
?
1
, . . . , x
?
2
, one for every pair of
a faithfulness constraint and a markedness con-
straint. Pair up (in some arbitrary but fixed way)
each of these underlying forms with a unique pair
of a faithfulness constraint and a markedness con-
straint. Thus, I can speak of ?the? markedness
constraint and ?the? faithfulness constraint ?cor-
responding? to a given underlying form x
?
i
?X
2
.
Each of these underlying forms x
?
i
comes with
two candidates u
i
and v
i
. Define the constraints
C
1
, . . . , C
n
over X
2
? Y
2
as in (38). This defini-
tion ensures that the grammarOT

corresponding
to an arbitrary rankingmaps x
?
i
to v
i
rather than
to u
i
iff the faithfulness constraint corresponding
to the underlying form x
?
i
is -ranked above the
markedness constraint corresponding to x
?
i
. Since
?
PT
() is defined in (13) as the total number of
pairs of a faithfulness and a markedness constraint
such that the former is ranked above the latter, then
condition (41) holds for any ranking.
?
PT
() = |{x
?
i
?X
2
|OT

(x
?
i
) = v
i
}| (41)
Finally, define the constraints C
1
, . . . , C
n
over
X
3
? Y
3
as in (38). This definition ensures that
the forms u
1
, . . . , u
d
are unmarked ? as the forms
[ta] and [rat] in the typology in (1). Thus, they be-
long to the language corresponding to any ranking
, as stated in (42).
{u
1
, . . . , u
d
} ? L() (42)
Assume that the instance (A,F , k) of the
PTAPpbm admits a positive answer. Thus, there
exists a ranking  OT-compatible with the com-
parative tableau A such that ?
PT
() ? k. Since
 is OT-compatible with A, then  is OT-
compatible with D, by (40). Furthermore, the lan-
guage L() corresponding to the ranking con-
tains at most K = m + k + d surface forms,
namely: the m surface forms y
1
, . . . , y
m
? Y
1
,
because is OT-compatible withD; the d surface
forms u
1
, . . . , u
d
, by (42); and at most k of the sur-
face forms v
1
, . . . , v
d
, by (41) and the hypothesis
that ?
PT
() ? k. Thus,  is a solution of the
instance ((X , Y, Gen, C), D, K) of the APpbm
(32) constructed in (33)-(39). The same reasoning
shows that the vice versa holds too. 
Acknowledgments
I wish to thank A. Albright for endless (and on-
going) discussion on the problem of the acquisi-
tion of phonotactics. This work was supported in
part by a ?Euryi? grant from the European Science
Foundation to P. Schlenker.
C
h
(x
i
, y
i
) < C
h
(x
i
, z
i
) ?? the kth entry in the ith row of A is a W
C
h
(x
i
, y
i
) = C
h
(x
i
, z
i
) ?? the kth entry in the ith row of A is a E
C
h
(x
i
, y
i
) > C
h
(x
i
, z
i
) ?? the kth entry in the ith row of A is a L
(37)
C
h
(x
?
i
, v
i
) < C
h
(x
?
i
, u
i
) if C
h
is the faithfulness constraint corresponding to x
?
i
C
h
(x
?
i
, v
i
) > C
h
(x
?
i
, u
i
) if C
h
is the markedness constraint corresponding to x
?
i
C
h
(x
?
i
, v
i
) = C
h
(x
?
i
, u
i
) otherwise
(38)
C
h
(x
?
i
, u
i
) ? C
h
(x
?
i
, w
i
) for every constraint C
h
(39)
26
References
Robert Berwick. 1985. The acquisition of syntactic
knowledge. MIT Press, Cambridge, MA.
W. Cohen, William, Robert E. Schapire, and Yoram
Singer. 1999. Learning to order things. Journal
of Artificial Intelligence Research, 10:243?270.
Jason Eisner. 2000. ?Easy and Hard Constraint
Ranking in Optimality Theory?. In J. Eisner,
L. Karttunen, and A. Th?eriault, editors, Finite-State
Phonology: Proceedings of the Fifth Workshop of
the ACL Special Interest Group in Computational
Phonology (SIGPHON), pages 22?33, Luxembourg.
Zvi Galil and Nimrod Megiddo. 1977. ?Cyclic Or-
dering is NP-complete?. Theoretical Computer Sci-
ence, 5:179?182.
Michael R. Garey and David S. Johnson. 1979. Com-
puters and Intractability. A Guide to the Theory of
NP-Completeness. W. H. Freeman and Company,
New York.
Bruce Hayes. 2004. ?Phonological Acquisition in Op-
timality Theory: The Early Stages?. In R. Kager,
J. Pater, and W. Zonneveld, editors, Constraints
in Phonological Acquisition, pages 158?203. Cam-
bridge University Press.
Jeffrey Heinz, Gregory M. Kobele, and Jason Riggle.
2009. ?Evaluating the Complexity of Optimality
Theory?. Linguistic Inquiry, 40:277?288.
G?eraldine Legendre, Yoshiro Miyata, and Paul
Smolensky. 1990a. ?Harmonic Grammar: A formal
multi-level connectionist theory of linguistic well-
formedness: An application?. In Proceedings of the
twelfth annual conference of the Cognitive Science
Society, pages 884?891, Cambridge, MA. Lawrence
Erlbaum.
G?eraldine Legendre, Yoshiro Miyata, and Paul
Smolensky. 1990b. ?Harmonic Grammar: A formal
multi-level connectionist theory of linguistic well-
formedness: Theoretical foundations?. In Proceed-
ings of the twelfth annual conference of the Cog-
nitive Science Society, pages 388?395, Cambridge,
MA. Lawrence Erlbaum.
M. Rita Manzini and Ken Wexler. 1987. ?Parame-
ters, Binding Theory, and Learnability?. Linguistic
Inquiry, 18.3:413?444.
Alan Prince and Paul Smolensky. 2004. Optimality
Theory: Constraint Interaction in Generative Gram-
mar. Blackwell. As Technical Report CU-CS-696-
93, Department of Computer Science, University of
Colorado at Boulder, and Technical Report TR-2,
Rutgers Center for Cognitive Science, Rutgers Uni-
versity, New Brunswick, NJ, April 1993. Rutgers
Optimality Archive 537 version, 2002.
Alan Prince and Bruce Tesar. 2004. ?Learning Phono-
tactic Distributions?. In R. Kager, J. Pater, and
W. Zonneveld, editors, Constraints in Phonological
Acquisition, pages 245?291. Cambridge University
Press.
Bruce Tesar and Paul Smolensky. 1998. ?Learnability
in Optimality Theory?. Linguistic Inquiry, 29:229?
268.
Harold Todd Wareham. 1998. Systematic Parameter-
ized Complexity Analysis in Computational Phonol-
ogy. Ph.D. thesis, University of Victoria, Dept. of
Computer Science.
27
Proceedings of the Twelfth Meeting of the Special Interest Group on Computational Morphology and Phonology (SIGMORPHON2012), pages 52?61,
Montre?al, Canada, June 7, 2012. c?2012 Association for Computational Linguistics
An approximation approach to the problem of the acquisition of
phonotactics in Optimality Theory
Giorgio Magri
Laboratoire de Linguistique Formelle, CNRS and University of Paris 7
magrigrg@gmail.com
Abstract
The problem of the acquisition of phono-
tactics in Optimality Theory is intractable.
This paper offers a way to cope with this
hardness result: the problem is reformu-
lated as a well known integer program (the
Assignment problem with linear side con-
straints) paving the way for the applica-
tion to phonotactics of approximation al-
gorithms recently developed for integer
programming.
Knowledge of the phonotactics of a language
is knowledge of its distinction between licit and
illicit forms. The acquisition of phonotactics rep-
resents a distinguished and important stage of lan-
guage acquisition. In fact, in carefully controlled
experimental conditions, nine-month-old infants
already react differently to licit and illicit sound
combinations (Jusczyk et al, 1993). They thus
display knowledge of phonotactics already at an
early stage of language development.
Usually, the problem of the acquisition of the
phonotactics of a language given a finite set of lin-
guistic data is formalized as the problem of find-
ing a smallest language in the typology that is
consistent with the data (Berwick, 1985; Manzini
and Wexler, 1987; Prince and Tesar, 2004; Hayes,
2004; Fodor and Sakas, 2005). Section 1 for-
mulates the problem of the acquisition of phono-
tactics along these lines within the mainstream
phonological framework of Optimality Theory
(Prince and Smolensky, 2004; Kager, 1999).
Unfortunately, (such a formulation of) the prob-
lem of the acquisition of phonotactics in OT turns
out to be intractable (NP-complete): for any at-
tempted efficient solution algorithm, there are
some instances of the problem where the algo-
rithm fails (Magri, 2010; Magri, 2012b). This
hardness result holds for the universal formulation
of the problem, in the sense of Heinz et al (2009):
there are no restrictions on the constraint set that
defines the OT typology and indeed the OT typol-
ogy itself figures as an input to the problem.
There are two strategies to cope with this hard-
ness result. One approach weakens the formu-
lation of the problem through proper restrictions
on the constraint set: certain constraint sets are
implausible from a phonological perspective, and
should therefore be ignored in the proper formula-
tion of the problem (Magri, 2011; Magri, 2012c).
This approach raises interesting challenges, as it
requires a through investigation of the algorith-
mic implications of various generalizations devel-
oped by phonologists on what counts as a ?plausi-
ble? OT constraint set. Another approach is to by-
pass this difficulty, and weaken the formulation of
the problem by lowering the standard for success:
we settle on an approximate solution, namely a
?small? language rather than a smallest language.
This paper paves the way for the latter approach.
I focus on the specific formulation of the prob-
lem of the acquisition of OT phonotactics devel-
oped in Prince and Tesar (2004). In Sections 2 and
3, I show that this formulation of the problem can
be restated as a classical integer program, namely
the Assignment problem with liner side constraints
(AssignLSCsPbm). The theory of approximation
algorithms for integer programing is a blooming
field of Computer Science (Bertsimas and Weis-
mantel, 2005). In particular, powerful approxi-
mation algorithms have been recently developed
for the AssignLSCsPbm. A state-of-the-art algo-
rithm is due to Arora et al (2002). The integer
programming formulation developed in this paper
thus paves the way for a new approximation ap-
proach to the problem of modeling the acquisition
of phonotactics within OT. In Magri (2012a), I re-
port simulation results with Arora?s et. al. (2002)
algorithm on various instances of the problem of
the acquisition of phonotactics.
52
1 Formulation of the problem
1.1 Basic formulation
A typology in Optimality Theory (OT) is defined
through a 4-tuple ? = (X ,Y, Gen,C), where X
is the set of underlying forms; Y is the set of
candidate surface forms; Gen is the generating
function that pairs an underlying form x ? X
with a set Gen(x) ? Y of surface forms called
the candidates for x; and C is the set of n con-
straints C1, . . . , Cn. Each constraint Ci is a func-
tion that maps a pair (x, y) of an underlying form
x ? X and a candidate y ? Gen(x) into a num-
ber Ci(x, y), called the corresponding number of
violations. The constraint set is split into the sub-
setM of markedness constraints and the subset F
of faithfulness constraints. As the constraint set is
finite and can therefore only distinguish among a
finite number of forms, I can assume that the set of
underlying forms X is finite, as well as the candi-
date set Gen(x) for any underlying form x ? X .
Let pi be a ranking, namely a total order over
the constraint set. I denote by OTpi : X ? Y the
OT grammar corresponding to the ranking pi, as
defined in Prince and Smolensky (2004). And I
denote by L(pi) the language corresponding to the
ranking pi, namely the range of the correspond-
ing grammar OTpi (or, more explicitly, the set of
all and only those surface forms y? ? Y such that
there exists an underlying form x ? X such that
OTpi(x) = y?). Throughout the paper, I use x for an
underlying form, y? for a surface form which is an
intended winner, and y for a surface form which is
an intended loser.
The Problem of the acquisition of phonotactics
in OT can be stated as in (1) in its universal for-
mulation (Berwick, 1985; Manzini and Wexler,
1987; Prince and Tesar, 2004; Hayes, 2004). We
are given an OT typology as well as a finite set
P ? X ? Y of linguistic data. These data consist
of pairs (x, y?) of an underlying form x ? X and a
corresponding intended winner form y? ? Gen(x).
I assume that P is consistent, namely that there
exists at least a ranking pi such that OTpi(x) = y?
for every pair (x, y?) ? P . We are asked to return
a ranking pi which has two properties. First, pi is
consistent: the corresponding OT grammar maps
x into y? for every pair (x, y?) ? P . Second, pi is
restrictive: there exists no other ranking pi? consis-
tent with P too such that the language L(pi?) cor-
responding to pi? is a proper subset of the language
L(pi) corresponding to pi. A solution algorithm
needs to run in time polynomial in the number of
constraints |C| and the numbers of forms |X |, |Y|
(recall that X and Y are finite).
(1) given: an OT typology ? = (X ,Y, Gen,C)
and a finite set P ? X ? Y of data;
find: a ranking pi s.t. P ? OTpi and there is
no pi? s.t. P ? OTpi? and L(pi?) ? L(pi);
time: max{|C|, |X |, |Y|}.
Problem (1) is NP-complete: there exists no effi-
cient algorithm that is able to solve any instance of
the problem (Magri, 2010; Magri, 2012b).
An interesting variant of the problem (1) as-
sumes that we are given only the surface forms but
not the corresponding underlying forms. Prince
and Tesar (2004) and Hayes (2004) suggest that
we can circumvent this difficulty as follows. As-
sume that the set of underlying forms and the
set of surface forms coincide, namely X = Y .
Assume furthermore that the typology is output
driven (Tesar, 2008): a surface form y? belongs to
the languageL(pi) corresponding to a ranking pi iff
the corresponding grammar OTpi maps that form y?
(construed as an underlying form) into itself (con-
strued as a surface form), as stated in (2)
(2) y? ? L(pi) ?? OTpi(y?) = y?.
In this case, a way to cope with the lack of the
underlying forms is to assume that the underlying
form corresponding to a given surface form y? is
the completely faithful underlying form y? itself.
For this reason, I stick with the formulation (1) of
the problem, whereby we are provided with both
surface and underlying forms.
1.2 ERC notation
Consider an underlying form x ? X and two dif-
ferent candidate forms y, y? ? Gen(x), with the
convention that y? is the intended winner for x
while y is a loser. Following Prince (2002), all
the relevant information concerning the underly-
ing/winner/loser form triplet (x, y?, y) can be sum-
marized into the corresponding elementary rank-
ing condition (ERC), namely the n-tuple e with
entries e1, . . . , en ? {L, e,W} defined as in (3).
(3) (x, y?, y) =? e = e1 . . . ei . . . en
ei
.=
?
?
?
W if Ci(x, y?) < Ci(x, y)
L if Ci(x, y?) > Ci(x, y)
e if Ci(x, y?) = Ci(x, y)
53
In words, The ith entry ei is ei = W iff con-
straint Ci assigns more violations to (x, y) than to
(x, y?) and thus favors the intended winner y? over
the loser y; ei = L iff the opposite holds; finally,
ei = e iff the constraint Ci assigns the same num-
ber of violations to the two pairs (x, y) and (x, y?).
A ranking pi can be represented as a permuta-
tion over {1, . . . , n}, with the understanding that
pi(i) = j means that the ranking pi assigns con-
straint Ci to the jth stratum of the ranking, with
the convention that the stratum corresponding to
j = n (to j = 1) is the top (bottom) of the rank-
ing. For every such permutation pi, let epi be the
n-tuple e with the components reordered accord-
ing to pi in decreasing order, as in (4).
(4) epi
.= (epi(n), . . . , epi(1))
The ERC e is OT-consistent with pi provided the
left-most component of epi different from e is a W.
For each of the pairs (x, y?) in the set P given
with an instance of the problem (1), consider each
loser candidate y ? Gen(x) different from y?,
construct the ERC corresponding to the underly-
ing/winner/loser form triplet (x, y?, y) as in (3) and
organize all these ERCs one underneath the other
into an ERC matrix with n columns and many
rows (the order of the ERCs does not matter). I
denote a generic ERC matrix by E and I say that
a ranking pi is OT-consistent with E provided it is
consistent with each of its ERCs. The problem of
the acquisition of phonotactics in (1) can thus be
equivalently restated in ERC notation as in (5).
(5) given: an OT typology ? = (X ,Y, Gen,C)
and an ERC matrix E;
find: a ranking pi s.t. pi is OT-consistent with
E and there is no pi? consistent with E
too s.t. L(pi?) ? L(pi);
time: max{|C|, |X |, |Y|}.
The latter formulation of the problem is only par-
tially stated in terms of ERC notation, as the con-
dition L(pi?) ? L(pi) still requires knowledge of
the entire OT typology. This difficulty is tackled
in the next Subsection.
1.3 Restrictiveness measures
Let a restrictiveness measure be a function ?
which takes a ranking pi and returns a number
?(pi) ? N that provides a relative measure of the
size of the language L(pi) corresponding to pi, in
the sense that the (strict) monotonicity property in
(6) holds for any two rankings pi, pi?.
(6) If L(pi?) ? L(pi), then ?(pi?) < ?(pi).
Any solution of the optimization problem (7) is a
solution of the corresponding instance (5) of the
problem of the acquisition of phonotactics. In fact,
if pi solves (7) then there cannot exist any other
ranking pi? consistent with the ERC matrix that
corresponds to a smaller language L(pi?) ? L(pi),
since (6) would imply that ?(pi?) < ?(pi), contra-
dicting the hypothesis that pi is a solution of (7).
(7) minimize: ?(pi);
subject to: pi is OT-consistent with the given
ERC matrix E;
time: number of columns and rows of E.
As problem (7) is stated completely in terms of
the ERC matrix E, the time required by a solution
algorithm needs to scale just with the size of E.
From now on, I will focus on the new formu-
lation (7). Thus, I need a restrictiveness measure
(6). Of course, not just any restrictiveness mea-
sure will do. For instance, the function (8), which
pairs a ranking pi with the cardinality of its lan-
guage L(pi), trivially satisfies (6).
(8) ?(pi) .= |L(pi)|.
Yet, this is not a good restrictiveness measure, be-
cause there seems to be no way to compute ?(pi)
without actually computing the language L(pi),
which requires knowledge of the entire typology.
Prince and Tesar (2004) suggest a better can-
didate, which is defined for any ranking pi as in
(9). Recall that the constraint set C = F ? M
is split up into the subset F of faithfulness con-
straints and the subset M of markedness con-
straints. For each faithfulness constraint F ? F ,
determine the number ?(F ) of markedness con-
straints M ? M ranked by pi below that faithful-
ness constraint, i.e. pi(F ) > pi(M). Finally, add
up all these numbers ?(F ) together to determine
the value ?(pi).
(9) ?(pi) .=
?
F?F
?
?
?{M ?M|pi(F ) > pi(M)}
?
?
?
? ?? ?
?(F )
Is the function ? defined in (9) is a restrictive-
ness measure? namely, does it satisfy condition
(6)? Prince and Tesarconjecture that it is, based
on the following intuition. Markedness (faith-
54
fulness) constraints work against (towards) the
preservation of the underlying contrasts. Thus, a
small (large) language should arise by ranking the
markedness (faithfulness) constraints as high as
possible. And a ranking that ranks the markedness
(faithfulness) constraints as high (low) as possi-
ble is a ranking that minimizes Prince and Tesar?s
function (9).
I endorse Prince and Tesar?s conjecture that (9)
is a restrictiveness measure, at least for the cases of
interest.1 In Magri (2012a), I backup this claim by
looking at a case study, namely the typology cor-
responding to the large constraint set considered in
Pater and Barlow (2003). In the rest of this paper, I
thus focus on the reformulation (7) of the problem
of the acquisition of phonotactics, with ? defined
as in (9). The latter formulation of the problem of
the acquisition of phonotactics is NP-complete too
(Magri, 2010; Magri, 2012b). In the rest of this
paper, I thus develop an integer programming for-
mulation of the latter problem, that allows approx-
imation algorithms for integer programming to be
used in order to tackle the problem of the acquisi-
tion of phonotactics. The reasoning is split up into
two steps. In Section, 2, I develop an integer pro-
gramming formulation of the objective function,
namely the alleged restrictiveness measure in (9).
And in Section 3, I turn to an integer programming
formulation of the OT-consistency condition.
2 An integer programming restatement
of the restrictiveness measure
A square matrix of order n is a collection of
n2 real numbers displayed into n columns and
1 Prince and Tesar?s conjecture that (9) is a restrictive-
ness measure runs into a straightforward problem when the
constraint set C contains both positional and faithfulness con-
straints. Yet, there are various ways to circumvent this diffi-
culty posed by positional constraints. One way could be to
weigh differently the two types of faithfulness constraints in
the determination of restrictiveness. Thus, we could switch
from the definition in (9) to the variant in (i), where Fpos is
the set of positional faithfulness constraints,Fgen is the set of
general faithfulness constraints and ? is a positive coefficient.
(i) ??(pi)
.=
?
F?Fpos
?
?
?
?
{
M ?M
?
?
?pi(F ) > pi(M)
}??
?
?+
+?
?
F?Fgen
?
?
?
?
{
M ?M
?
?
?pi(F ) > pi(M)
}??
?
?
Another way to deal with positional faithfulness constraints
could be to ignore altogether rankings where a positional
faithfulness constraint is ranked below the corresponding
general faithfulness constraint. This is trivial to obtain, by
adding a proper ERC to the ERC matrix given with an in-
stance of the problem (7).
n rows. I denote a square matrix of order n as
X = [xi,j ]ni,j=1, with the understanding that xi,j
is the element of the matrix X which sits in the
ith row and the jth column. I denote by Rn?n the
vector space of all square matrices of order n.
A square matrix X = [xi,j ]ni,j=1 is called a per-
mutation matrix iff its elements xi,j satisfy the fol-
lowing three conditions: (i) they are all 0 or 1; (ii)
each column contains a unique 1; (iii) each row
contains a unique 1. I denote by Pn the set of all
n! permutation matrices of order n. To illustrate, I
list Pn with n = 3 in (10).
(10)
[
1 0 0
0 1 0
0 0 1
] [
1 0 0
0 0 1
0 1 0
] [
0 1 0
1 0 0
0 0 1
]
[
0 0 1
1 0 0
0 1 0
] [
0 1 0
0 0 1
1 0 0
] [
0 0 1
0 1 0
1 0 0
]
Permutation matrices play a special role in convex
geometry (Webster, 1984, par. 5.8).
There is a natural correspondence between per-
mutation matrices of order n and rankings over n
constraints C1, . . . , Cn. Recall that a ranking pi
is a permutation over {1, 2, . . . , n}, with the un-
derstanding that pi(i) = j means that the rank-
ing pi assigns the constraint Ci to the jth stratum,
with the convention that the stratum correspond-
ing to j = n is the top stratum. I use i as the
index ranging over constraints and j as the in-
dex ranging over strata. Thus, a ranking pi can
be identified with that (unique) permutation ma-
trix X = [xi,j ]ni,j=1 ? P
n such that xi,j = 1 iff the
ranking pi assigns the constraint Ci to the jth stra-
tum, namely pi(i) = j. To illustrate, I list in (11)
the rankings over {C1, C2, C3} corresponding to
the six permutation matrices in (10), respectively.
(11) C3C2C1, C2C3C1, C3C1C2,
C1C3C2, C2C1C3, C1C2C3
I denote by piX the ranking corresponding to a per-
mutation matrix X ? Pn and by Xpi ? Pn the
permutation matrix corresponding to a ranking pi.
Prince and Tesar?s restrictiveness measure (9) of
a ranking pi can be straightforwardly read off the
corresponding permutation matrix Xpi, as follows.
Define the scalar product ?X,Y? ? R
between two arbitrary square matrices X =
[xi,j ]ni,j=1,Y = [yi,j ]
n
i,j=1 ? R
n?n as in (12)
(namely as the Euclidean scalar product of Rn2).
55
(12) ?X,Y? .=
n?
i,j=1
xi,jyi,j .
A function f : Rn?n ? R is called linear iff there
exists a square matrix ? ? Rn?n such that (13)
holds for any square matrix X ? Rn?n.
(13) f(X) = ??,X?.
Linear functions are the ?simplest? possible con-
vex functions, namely the ones that yield the easi-
est optimization problems.
Let me assume that the first m constraints in
C are the faithfulness constraints while the re-
maining n ? m constraints are the markedness
constraints, namely that F = {C1, . . . , Cm} and
M = {Cm+1, . . . , Cn}. Consider the matrix
?n,m ? Rn?n defined as follows: its first m rows
each have the form [0, 1, . . . , n? 2, n? 1]; the re-
maining n ? m rows are all null. To illustrate, I
give in (14) the matrix ?n,m with n = 7,m = 4.
(14) ?7,4
.=
?
?
?
?
?
?
?
?
?
?
0 1 2 3 4 5 6
0 1 2 3 4 5 6
0 1 2 3 4 5 6
0 1 2 3 4 5 6
0 0 0 0 0 0 0
0 0 0 0 0 0 0
0 0 0 0 0 0 0
?
?
?
?
?
?
?
?
?
?
The following Claim 1 explains how to compute
the restrictiveness ?(pi) of a ranking pi according
to (9) out of the corresponding permutation ma-
trix Xpi; see Appendix A.1. This Claim shows an
important property of Prince and Tesar?s restric-
tiveness measure: it can be described as a linear
function over the set of permutation matrices.
Claim 1 The restrictiveness ?(pi) of a ranking pi
according to (9) can be computed as follows:
(15) ?(pi) = ??n,m,Xpi? ?
1
2
m(m? 1)
namely as the scalar product ??n,m,X? between
the matrix ?n,m and the corresponding permuta-
tion matrix Xpi, minus the constant 12m(m ? 1)
which does not depend on the ranking.2 
2I have noted in footnote 1 that the conjecture that the
function ? in (9) is a restrictiveness measure runs into prob-
lems for constraint sets that contain both general and posi-
tional faithfulness constraints. And I have suggested that a
possible way out is to to switch from the definition (9) to the
variant in (i). Let me now point out that the latter variant too
can be described as a linear function over permutation ma-
trices. In fact, let ?n,m,? be as the matrix ?n,m defined
The problem of the acquisition of phonotactics
(7) with Prince and Tesar?s alleged restrictiveness
measure (9) can thus be restated as the optimiza-
tion problem (16).
(16) minimize: ??n,m,X?;
subject to: X ? Pn and piX is consis-
tent with the given ERC ma-
trix E.
Here, I have dropped the constant 12m(m ? 1)
which appears in (15), as it does not affect the op-
timization problem.
3 An integer programming formulation
of the OT-consistency condition
The reformulation in (16) makes use of the notion
of OT-consistency with a given ERC matrix and
this notion is currently stated in terms of rankings
rather than in terms of the corresponding permu-
tation matrices. We need to restate the latter con-
dition directly in terms of permutation matrices.
In this Section, I point out two strategies for do-
ing that. The first approach hinges on a classical
observation by Prince and Smolensky (2004) that
OT consistency can be restated as linear consis-
tency in the case of exponentially spaced weights.
The second approach requires a larger number of
linear conditions, but is shown to provide a better
reformulation (i.e. a tighter relaxation).
3.1 An initial formulation of OT-consistency
Given an ERC e = [e1, . . . , en], consider the
corresponding square matrix Ae = [ai,j ]ni,j=1 ?
Rn?n defined in (17). Here, ti is the sign of the
ERC?s entry ei, namely ti is equal to ?1, 0 or
+1 depending on whether ei is equal to L, e or
W. Thus, the entry ai,j in the ith row and the jth
column of the matrix (17) consists of the sign ti
multiplied by 2j .
(17) Ae =
?
?
?
?
?
?
?
?
21t1 22t1 . . . 2jt1 . . . 2nt1
...
21ti 22ti . . . 2jti . . . 2nti
...
21tn 22tn . . . 2jtn . . . 2ntn
?
?
?
?
?
?
?
?
Intuitively, this entry ai,j = 2jti is the weight of
the sign ti under the assumption that the constraint
above, but with the rows corresponding to general faithful-
ness constraints multiplied by ?. Then, ??(X) coincides
with ??n,m,?,X?, but for a constant.
56
Ci is assigned to the jth stratum.
The following claim offers a restatement of
OT-consistency between an ERC and a ranking
in terms of the permutation matrix correspond-
ing to that ranking. This claim is just a re-
statement in matrix form of the observation by
Prince and Smolensky (2004) that OT consistency
is equivalent to a linear condition with exponen-
tially spaced weights; see Subsection A.2.
Claim 2 A ranking pi is OT-consistent with an
ERC e iff ?Ae,Xpi? ? 0, where ?Ae,Xpi? is the
scalar product (12) between the matrix Ae corre-
sponding to the ERC e and the permutation matrix
Xpi corresponding to the ranking pi. 
The current formulation (16) of the problem of
the acquisition of phonotactics can thus be restated
as the optimization problem in (18).
(18) FIRST INTEGER REFORMULATION:
minimize: ??n,m,X?;
subject to: X?Pn s.t. ?Ae,X? ? 0 for ev-
ery ERC e of the ERC matrix E.
Problem (18) is an optimization problem over per-
mutation matrices X?Pn. The objective function
is the linear function ??n,m,X?. And the feasi-
ble set is defined in terms of linear side condi-
tions ?Ae,X? ? 0. Problem (18) is thus an in-
teger program. In particular, it is an Assignment
problem with linear side constraints (AssignLSC-
sPbm) (Bertsimas and Weismantel, 2005).
3.2 Another formulation of OT-consistency
Let `(e) be the number of entries equal to L in
an ERC e = [e1, . . . , en]. Assume without loss
of generality that `(e) > 0, as ERCs with no L?s
can be ignored. For every stratum ? ? {1, . . . , n},
consider the square matrix A?e = [ai,j ]ni,j=1 with
n rows and n columns whose generic element ai,j
is defined as in (19).
(19) ai,j
.=
?
?
?
1 if ei = L, j ? ?
?1 if ei = W, j ? ?+ `
0 otherwise
The following claim offers another restatement
of OT-consistency between an ERC and a ranking
in terms of the permutation matrix corresponding
to that ranking; see Subsection A.3.
Claim 3 A ranking pi is OT-consistent with an
ERC e iff ?A?e,Xpi? ? 0 for every ? ? {1, . . . , n},
where ?A?e,Xpi? is the scalar product (12) be-
tween the matrix A?e corresponding to the ERC e
and the stratum ? and the permutation matrix Xpi
corresponding to the ranking pi. 
The current formulation (16) of the problem of
the acquisition of phonotactics can thus be alter-
natively restated as the optimization problem (20).
(20) SECOND INTEGER REFORMULATION:
minimize: ??n,m,X?;
subject to: X ? Pn s.t. ?A?e,X? ? 0 for
every ERC e of the ERC matrix
E and every ? ? {1, . . . , n}.
Again, (20) is another instance of the AssignLSC-
sPbm. The feasible set in the latter formulation
(20) involves n times more inequalities than the
formulation (18).
3.3 Comparing the two formulations
Problems (18) and (20) are two different formula-
tions of the original problem (16) of the acquisi-
tion of phonotactics. They are thus equivalent, in
the sense that a solution to any of the two prob-
lems is also a solution to the other and further-
more to the original problem. This Subsection
explains why, nonetheless, the latter formulation
(20) is better than the former formulation (18).
Both (18) and (20) are optimization problems
over permutation matrices X ? Pn. The latter
condition on the matrix X = [xi,j ]ni,j=1 means that
conditions (21) hold for any i, j = 1, . . . , n.
(21) xi,j ? {0, 1}
n?
i=1
xi,j = 1,
n?
j=1
xi,j = 1
Problems (18) and (20) are integer optimization
problems because of the condition xi,j ? {0, 1}
in (21). This condition can be relaxed, requiring
the entires xi,j to be not necessarily 0 or 1 but in-
stead any number in between 0 and 1. Thus, let
Pnrel be the set of matrices that satisfy the relaxed
conditions (22), known as the Birkhoff polytope.
(22) xi,j ? [0, 1]
n?
i=1
xi,j = 1,
n?
j=1
xi,j = 1
Relaxing the integer constraint X ? Pn into the
continuous constraint X ? Pnrel, yields the two
corresponding problems (23) and (24).
57
(23) FIRST RELAXATION:
minimize: ??n,m,X?;
subject to: X ? Pnrel s.t. ?Ae,X? ? 0 for
any ERC e of the ERC matrix.
(24) SECOND RELAXATION:
minimize: ??n,m,X?;
subject to: X ? Pnrel s.t. ?A
?
e,X? ? 0 for
any ERC e of the ERC matrix
and any stratum ? ? {1, . . . , n}.
These linear programs (23) and (24) are the relax-
ations of the two integer programs (18) and (20).
The relaxation of an integer program provides
a lower bound on the solution of that integer pro-
gram. This lower bound is used by solution al-
gorithms for the integer program. Of course, lin-
ear relaxations that provide tight bounds yield im-
proved solution algorithms for the original integer
problem (Bertsimas and Weismantel, 2005). De-
spite the fact that the two original integer programs
(18) and (20) are equivalent, the two correspond-
ing relaxations (23) and (24) are not. Claim 4 en-
sures that the feasible set of the relaxation (24) is
a subset of that of the relaxation (23), so that the
lower bound provided by a solution of the former
will be at least as tight as the lower bound provided
by a solution of the latter.
Claim 4 If a matrix X belongs to the feasible set
of problem (24), then it also belongs to the feasible
set of problem (23). 
The following counterexample shows that the
lower bound provided by the relaxation (24) is
not just as tight as but actually tighter than the
bound provided by the relaxation (23). Given the
ERC matrix (25), the solution to the corresponding
problem (7) is the ranking F2  M  F1: the
faithfulness constraint F1 is redundant and should
therefore be ranked at the bottom.
(25) E =
[
F1 F2 M
W W L
e W L
]
The solutions of the two corresponding relaxations
(23) and (24) are provided in (26).3
3These solutions have been computed with the Mat-
lab codes RelaxedSubPbmFirstFormulation.m and
RelaxedSubPbmSecondFormulation.m, that solve
the two relaxations (23) and (24), respectively. These codes
are available on the author?s website. The two codes use the
two subroutines MatrixToVectorConverter.m and
VectorToMatrixConverter.m, that are available on
the author?s website too.
(26) X(23) =
?
?
st1st2st3
F1 1 0 0
F2 0 12
1
2
M 0 12
1
2
?
?X(24) =
?
?
st1st2st3
F1 1 0 0
F2 0 0 1
M 0 1 0
?
?
The relaxation (23) has a non-integral solution; the
relaxation (24) is thus stronger because its solution
is integral. The latter solution indeed represents
the desired ranking, as it assigns F2 to the top 3rd
stratum (because of the 1 in the second column
and third row) and F1 to the bottom 1st stratum
(because of the 1 in the first row and first column).
4 Conclusion
In this paper, I have focused on Prince and Tesar?s
(2004) formulation (7) of the problem of the ac-
quisition of phonotactics, in terms of the alleged
restrictiveness measure (9). This problem is NP-
complete. To cope with this hardness result, in this
paper I have looked for an integer programming
formulation of the latter problem. The formulation
in (20) has emerged as the best formulation among
those considered, namely the one that yields the
tightest relaxation. This problem (20) is an in-
stance of a classical integer program, namely the
Assignment problem with linear side constraints
(AssignLSCsPbm). The result obtained in this pa-
per thus paves the way for the efficient application
of approximation algorithms for the AssignLSC-
sPbm to the problem of the acquisition of phono-
tactics in OT. In Magri (2012a), I report simula-
tion results with Arora?s et. al. (2002) algorithm,
a state-of-the-art approximation algorithm for the
AssignLSCsPbm.
Acknowledgments
I wish to thank A. Albright for endless discussion
on the problem of the acquisition of phonotac-
tics. This work was supported in part by a ?Euryi?
grant from the European Science Foundation to P.
Schlenker, by a grant from the Fyssen Research
Foundation, and by the LABEX-EFL grant.
Appendix: proof of the main results
A.1 Proof of claim 1
Consider the example of the permutation matrix X
in (27). There are seven constraints (hence n = 7),
four of which are faithfulness constraints (hence
m = 4). I have fringed each row of X with the
name of the constraint it corresponds to and I have
58
fringed each column of X with the stratum it cor-
responds to.
(27) X =
?
?
?
?
?
?
?
?
?
?
st1 st2 st3 st4 st5 st6 st7
F1 0 1 0 0 0 0 0
F2 0 0 0 0 0 1 0
F3 0 0 1 0 0 0 0
F4 0 0 0 0 0 0 1
M5 0 0 0 1 0 0 0
M6 1 0 0 0 0 0 0
M7 0 0 0 0 1 0 0
?
?
?
?
?
?
?
?
?
?
As prescribed by our conventions, the first four
rows correspond to the four faithfulness con-
straints, the bottom three rows correspond to the
markedness constraints; the leftmost column cor-
responds to the bottom stratum and the rightmost
column corresponds to the top stratum.
The ranking piX that corresponds to X can be
obtained as follows: the 1 in the first column of
X says that the markedness constraint M6 is as-
signed by piX to the bottom stratum j = 1; the 1
in the second column of X says that the faithful-
ness constraint F1 is assigned to the next stratum
j = 2; and so on. Thus, piX is the ranking (28).
(28) F4  F2 M7 M5  F3  F1 M6
According to (9), the restrictiveness ?(piX) of this
ranking piX is 8 = 3+3+1+1: 3 markedness con-
straints underneath F4, another 3 underneath F2, 1
underneath and F3 as all as underneath F1. Here
is a way to quickly compute this number directly
from the permutation matrix X.
Consider the matrix (29) obtained from the ma-
trix (27) through the following two steps. First, all
1?s which appear in the bottom three rows of X
(and thus correspond to markedness constraints)
are replaced with 0?s.
(29)
?
?
?
?
?
?
?
?
?
?
st1 st2 st3 st4 st5 st6 st7
F1 0 1 0 0 0 0 0
F2 0 0 0 0 0 5 0
F3 0 0 2 0 0 0 0
F4 0 0 0 0 0 0 6
M1 0 0 0 0 0 0 0
M2 0 0 0 0 0 0 0
M3 0 0 0 0 0 0 0
?
?
?
?
?
?
?
?
?
?
Second, each 1 which appears in one of the top
four rows of X (and thus corresponds to a faith-
fulness constraint) is replaced with the number
which identifes the corresponding column, dimin-
ished by 1. Thus for example, the 1 in the second
row in the matrix X in (27) is replaced by a 5 in
(29), since it occurs in the sixth column.
Next, let?s scan the columns of the matrix (29)
from left to right, assigning to each column which
is not all zeros a progressive index k starting from
k = 0, as made explicit in (30).
(30)
?
?
?
?
?
?
?
?
?
?
k1=0 k3=1 k2=2 k4=3
F1 0 1 0 0 0 0 0
F2 0 0 0 0 0 5 0
F3 0 0 2 0 0 0 0
F4 0 0 0 0 0 0 6
M1 0 0 0 0 0 0 0
M2 0 0 0 0 0 0 0
M3 0 0 0 0 0 0 0
?
?
?
?
?
?
?
?
?
?
Now we can straightforwardly read out of (30) the
number of markedness constraints ranked by piX
below each faithfulness constraint: F1 has only
one markedness constraint ranked below it, which
is precisely the number i1 = 1 which appears in
the row corresponding to F1 diminished by the
value k1 = 0 which corresponds to the column
where that number appears; F2 has three marked-
ness constraints ranked below it, which is pre-
cisely the number i2 = 5 which appears in the
row corresponding to F2 diminished by the value
k2 = 2 which corresponds to the column where
that number appears; and so on.
Since ?(piX) is defined in (9) as the sum
over each faithfulness constraint of the number of
markedness constraints ranked below that faithful-
ness constraint, we get the right result as in (31).
(31) ?(piX) =
=?(F1) + ?(F2) + ?(F3) + ?(F4)
=(i1?k1) + (i2?k2) + (i3?k3) + (i4?k4)
=(1? 0) + (5? 2) + (2? 1) + (6? 3)
=8
Note that the sum in the second line of (31) can be
rearranged as follows:
(32) ?(piX) =
=(i1 + i2 + i3 + i4)? (k1 + k2 + k3 + k4)
=(i1 + i2 + i3 + i4)? (0 + 1 + 2 + 3)
It is trivial to check directly from the definition
(12) of scalar product that the first term i1 + i2 +
i3+ i4 in the second line of (32) is the scalar prod-
uct ??7,4,X? between the permutation matrix X
in (27) and the matrix ?7,4 in (14). Thus, the first
term in the second line of (32) corresponds to the
first term in (15). It is also trivial to check that the
59
second term 0 + 1 + 2 + 3 in the second line of
(32) is equal to 12m(m? 1) for m = 4. Thus, the
second term in the second line of (32) corresponds
to the second term in (15).
A.2 Proof of claim 2
Consider a ranking pi, namely a permutation over
{1, . . . , n}. Let pi?1 be its inverse. Recall that
pi(i) = j means that constraint Ci is assigned
by the ranking pi to the jth stratum, with the top
stratum being the one corresponding to j = n.
Thus, pi?1(j) is the constraint assigned by pi to the
jth stratum. Given an ERC e = [e1, . . . , en], let
k = k(e) ? {1, . . . , n} be univocally defined by
conditions (33): they say that the constraints as-
signed by pi to the top strata k + 1, . . . , n all have
an e in the ERC e so that the constraint assigned
by pi to the kth stratum is the highest one that does
not have an e in the ERC.
(33) a. epi?1(k+1) = . . . = epi?1(n) = e.
b. epi?1(k) 6= e.
Thus, pi is OT-consistent with the ERC e iff
epi?1(k) = W. To prove Claim 2, I thus prove
the equivalence (34), where Xpi = [xi,j ]ni,j=1 is
the permutation matrix corresponding to pi and
Ae = [ai,j ]ni.j=1 is the matrix defined in (17).
(34) ?Ae,Xpi? > 0 ?? epi?1(k) = W.
Assume that epi?1(k) = W; then I can reason as
follows, following Prince and Smolensky (2004):
(35)?Ae,Xpi? =
n?
i,j=1
xi,jai,j =
n?
i,j=1
xi,j2jti
=
n?
i=1
ti
n?
j=1
xi,j2j =
n?
i=1
ti2pi(i)
=
n?
j=1
tpi?1(j)2
j > 2k ?
k?1?
j=1
2j > 0
The proof of the reverse implication is analogous.
A.3 Proof of claim 3
To illustrate why claim 3 holds, consider the con-
crete case of the ERC e in (36).
(36) t =
[
C1 C2 C3 C4 C5
W W e e L
]
A ranking pi is OT-consistent with this ERC e pro-
vided it ranks either C1 or C2 above C5. This con-
dition is equivalent to the set of implications (37).
For example, the the third implication says that if,
pi assigns C5 to either stratum 3, or 4 or 5 (the
latter being the top stratum), then pi must assign
either C1 or C2 to either stratum 4 or 5.
(37) C5 ? {1, 2, 3, 4, 5} =? C1 ? {2, 3, 4, 5} ? C2 ? {2, 3, 4, 5}
C5 ? {2, 3, 4, 5} =? C1 ? {3, 4, 5} ? C2 ? {3, 4, 5}
C5 ? {3, 4, 5} =? C1 ? {4, 5} ? C2 ? {4, 5}
C5 ? {4, 5} =? C1 ? {5} ? C2 ? {5}
C5 ? {5} =? C1 ? ? ? C2 ? ?
Consider the permutation matrix X = [xi,j ]n=5i,j=1.
Recall that xi,j = 1 iff the corresponding rank-
ing pi satisfies the condition pi(i) = j namely it
assigns constraint Ci to the jth stratum. Thus,
the implications in (37) can be restated in terms
of permutation matrices rather than rankings as in
(38), in the sense that a ranking pi satisfies (37) iff
the corresponding permutation matrix Xpi satisfies
(38). The five inequalities (38) can be written in
(38) x5,1 +x5,2 +x5,3 +x5,4 +x5,5 ? x1,2 +x1,3 +x1,4 +x1,5 +x2,2 +x2,3 +x2,4 +x2,5
x5,2 +x5,3 +x5,4 +x5,5 ? x1,3 +x1,4 +x1,5 +x2,3 +x2,4 +x2,5
x5,3 +x5,4 +x5,5 ? x1,4 +x1,5 +x2,4 +x2,5
x5,4 +x5,5 ? x1,5 +x2,5
x5,5 ? 0
(39) 2x5,1+4x5,2+8x5,3+16x5,4?2x1,1+4x1,2+8x1,3+16x1,4+32x1,5+2x2,1+4x2,2+8x2,3+16x2,4+32x2,5
(40) 4x5,1 +4x5,2 +4x5,3 +4x5,4 ? 4x1,2 +4x1,3 +4x1,4 +4x1,5 +4x2,2 +4x2,3 +4x2,4 +4x2,5
4x5,2 +4x5,3 +4x5,4 ? 4x1,3 +4x1,4 +4x1,5 +4x2,3 +4x2,4 +4x2,5
8x5,3 +8x5,4 ? 8x1,4 +8x1,5 +8x2,4 +8x2,5
16x5,4 ? 16x1,5 +16x2,5
(41) 4x5,1 +8x5,2 +16x5,3 +32x5,4 ? 4x1,2 +8x1,3 +16x1,4 +32x1,5 +4x2,2 +8x2,3 +16x2,4 +32x2,5
60
matrix notation as ?A?e,X? ? 0 for ? = 1, . . . , 5.
A.4 Proof of claim 4
To illustrate why claim 4 holds, consider again the
concrete case of the ERC (36). As just noted, the
conditions ?A?e,X? ? 0 for ? = 1, . . . , 5 enforced
by the relaxation (24) boil down to the inequali-
ties (38). The condition ?Ae,X? ? 0 enforced
by the relaxation (23) boils down to the inequal-
ity (39). In order to prove claim 4 in this specific
case, I thus need to show that, if X ? Pnrel satis-
fies inequalities (38), then it also satisfies inequal-
ities (39). Indeed, the last inequality in (38) says
that x5,5 is null, and can thus be dropped from the
other four inequalities (38). Multiplying the first
inequality in (38) by 4, the second by 4, the third
by 8 and the fourth by 16, I get (40). Summing
the inequalities (40) together, I get the inequality
(41). As xi,j ? 0, I can weaken the inequality (41)
by dividing the left hand side by 2 and by adding
2x1,1 and 2x2,1 to the right hand side, thus obtain-
ing the desired inequality (39).
References
Sanjeev Arora, Alan Frieze, and Haim Kaplan. 2002.
A New Rounding Procedure for the Assignment
Problem with Applications to Dense Graph Ar-
rangement Problems. Mathematical Programming,
92.1:1?36.
Dimitris Bertsimas and Robert Weismantel. 2005. Op-
timization over Integers. Dynamic Ideas, Belmont,
Massachusetts.
Robert Berwick. 1985. The acquisition of syntactic
knowledge. MIT Press, Cambridge, MA.
Janet Dean Fodor and William Gregory Sakas. 2005.
The subset principle in syntax: costs of compliance.
Linguistics, 41:513?569.
Bruce Hayes. 2004. Phonological Acquisition in Op-
timality Theory: The Early Stages. In R. Kager,
J. Pater, and W. Zonneveld, editors, Constraints
in Phonological Acquisition, pages 158?203. Cam-
bridge University Press.
Jeffrey Heinz, Gregory M. Kobele, and Jason Rig-
gle. 2009. Evaluating the Complexity of Optimality
Theory. Linguistic Inquiry, 40:277?288.
P. W. Jusczyk, A. D. Friederici, J. M. I. Wessels, V. Y.
Svenkerud, and A. Jusczyk. 1993. Infants? sensitiv-
ity to the sound patterns of native language words.
Journal of Memory and Language, 32:402?420.
Rene? Kager. 1999. Optimality Theory. Cambridge
University Press.
Giorgio Magri. 2010. Complexity of the Acquisi-
tion of Phonotactics in Optimality Theory. In Jef-
frey Heinz, Lynne Cahill, and Richard Wicentowski,
editors, Proceedings of SIGMORPHON 11: the
11th biannual meeting of the ACL Special Interest
Group on Computational Morphology and Phonol-
ogy, pages 19?27, Uppsala, Sweden. Association for
Computational Linguistics.
Giorgio Magri. 2011. An online model of the acqui-
sition of phonotactics within Optimality Theory. In
L. Carlson, C. Ho?lscher, and T. Shipley, editors, Pro-
ceedings of CogSci 33: the 33rd annual conference
of the Cognitive Science Society, Austin, TX:. Cog-
nitive Science Society.
Giorgio Magri. 2012a. An approximation approach to
the problem of the acquisition of phonotactics in op-
timality theory. manuscript available on the author?s
website; this is a longer version of the present paper.
Giorgio Magri. 2012b. Complexity of the acquisition
of Phonotactics in Optimality Theory. Accepted at
Linguistic Inquiry.
Giorgio Magri. 2012c. Restrictiveness of error-
driven ranking algorithms: an initial assessment.
Manuscript in progress.
M. Rita Manzini and Ken Wexler. 1987. Parame-
ters, Binding Theory, and Learnability. Linguistic
Inquiry, 18.3:413?444.
Joe Pater and Jessica A. Barlow. 2003. Constraint
conflict in cluster reduction. Journal of Child Lan-
guage, 30:487?526.
Alan Prince and Paul Smolensky. 2004. Optimality
Theory: Constraint Interaction in Generative Gram-
mar. Blackwell. As Technical Report CU-CS-696-
93, Department of Computer Science, University of
Colorado at Boulder, and Technical Report TR-2,
Rutgers Center for Cognitive Science, Rutgers Uni-
versity, New Brunswick, NJ, April 1993. Rutgers
Optimality Archive 537 version, 2002.
Alan Prince and Bruce Tesar. 2004. Learning Phono-
tactic Distributions. In R. Kager, J. Pater, and
W. Zonneveld, editors, Constraints in Phonological
Acquisition, pages 245?291. Cambridge University
Press.
Alan Prince. 2002. Entailed Ranking Arguments.
ROA 500.
Bruce Tesar. 2008. Output-Driven Maps. ms., Rutgers
University; ROA-956.
Roger Webster. 1984. Convexity. Oxford University
Press.
61
Proceedings of the 2014 Joint Meeting of SIGMORPHON and SIGFSM, pages 10?18,
Baltimore, Maryland USA, June 27 2014.
c?2014 Association for Computational Linguistics
The error-driven ranking model of the acquisition of phonotactics:
how to keep the faithfulness constraints at bay
Giorgio Magri
SFL (CNRS and University of Paris 8)
UiL OTS (Utrecht University)
magrigrg@gmail.com
Abstract
A problem which arises in the theory of
the error-driven ranking model of the ac-
quisition of phonotactics is that the faith-
fulness constraints need to be promoted
but should not be promoted too high. This
paper motivates this technical problem and
shows how to tune the promotion compo-
nent of the re-ranking rule so as to keep the
faithfulness constraints at bay.
Sections 1-2 introduce the algorithmic frame-
work considered in the paper, namely the error-
driven ranking model of the acquisition of phono-
tactics. Section 3 motivates a specific problem
which arises in the design and analysis of this
model, namely the problem of controlling the
height reached by the faithfulness (F) constraints.
Sections 4-6 sketch the theory of F-controlling.
Magri (2014a) presents the theory in more detail.
1 The acquisition of phonotactics
Generative linguistics assumes that the learner is
provided with a typology of grammars G
1
, G
2
...
The language-learning problem thus consists of
individuating the target adult grammar G
?
within
the typology, on the basis of a finite set of data
generated by that grammar. Various formulations
of this problem differ for the structural assump-
tions about the underlying typology, for the type
of data fed to the learner, and for the criteria of
success used to evaluate the grammar
?
G chosen
by the learner relative to the target grammar G
?
.
In this paper, I focus on the following spe-
cific formulation of this general language learn-
ing problem. The typology consists of the phono-
logical grammars defined in Optimality Theoretic
(OT) terms through the rankings of a given set of
constraints (Prince and Smolensky, 2004). The
data fed to the learner consist of surface forms
sampled from the language L
?
generated by the
target OT grammar G
?
, namely the set of surface
forms which are the phonological realizations of
some underlying forms according to G
?
. The cri-
teria for success is that the OT grammar
?
G chosen
by the learner generates a language
?
L which coin-
cides with the target one:
?
L = L
?
.
This specific formulation is called the problem
of the acquisition of phonotactics. In fact, phono-
tactics is the knowledge of the distinction between
licit and illicit forms. Assuming that the distinc-
tion is categorical (Gorman, 2013), knowledge of
phonotactics reduces to knowledge of the set of
licit forms (the set of illicit forms is just the com-
plement). And the set of licit forms relative to an
OT grammarG is the corresponding language L
G
.
2 The EDRA model
In this paper, I focus on a specific algorithmic ap-
proach to the problem of the acquisition of phono-
tactics, based on error-driven ranking algorithms
(EDRAs). This approach is summarized below
and explained in the rest of this section.
Algorithm 1 The EDRA model
Initialize
the ranking values of F constraints to zero
the ranking values ofM constraints to ?
init
>0
Repeat
1 get a surface form [y] from the target language
2 pick a loser form [z]
3 check whether the current ranking vector ? is
consistent with the underlying/winner/loser
form triplet (/y/, [y], [z])
4 if it isn?t, update the current ranking vector ?
until no more mistakes are made at step 3
The EDRA model maintains a current hypothe-
sis of the target adult grammar, namely a current
constraint ranking. This ranking is represented nu-
merically through a ranking vector ? = (?
1
, , ?
n
)
10
which assigns to each constraint C
k
a numerical
ranking value ?
k
. A constraint C
k
is ranked above
another constraint C
h
according to a ranking vec-
tor ? provided the ranking value ?
k
of the former
is (strictly) larger than the ranking value ?
h
of the
latter (Boersma, 1998; Boersma, 2009).
The current ranking (vector) is initialized in
such a way that the corresponding initial language
is as small as possible. OT constraints come in two
varieties: faithfulness (F) and markedness (M)
constraints. A smallest language corresponds to
a ranking which assigns all F constraints under-
neath all M constraints. Thus, the F constraints
are assigned a small initial ranking value, say zero
for concreteness; and theM constraints start with
a large positive initial ranking value ?
init
> 0. The
algorithm then loops through the three steps 1-4.
At step 1, the EDRA model receives a piece of
data, namely a surface form [y] sampled from the
target language L
?
. Assuming that the underly-
ing typology satisfies Tesar?s (2013) Surface Ori-
entedness Condition, this piece of data provides
evidence that the target grammar G
?
maps this
phonological form (construed as the underlying
form /y/) into itself (construed as the surface form
[y]) rather than reducing it to some non-faithful
candidate [z] (as a mnemonic, I strike out a candi-
date construed as a loser). In other words, the tar-
get adult ranking (vector) ?
?
is consistent with the
underlying/winner/loser form triplet (/y/, [y], [z])
for any loser [z], namely it satisfies condition (1).
Here,W (L) is the set of winner-preferring (loser-
preferring) constraints, namely those which assign
less (more) violations to the faithful mapping of
/y/ to [y] than to the neutralization of /y/ to [z].
(1) max
C
k
?W
?
?
k
> max
C
h
?L
?
?
h
This consistency condition (1) says that there is
at least a winner-preferring constraint which is
ranked above all loser-preferring constraints by
the target ranking (vector) ?
?
= (?
?
1
, . . . , ?
?
n
).
At steps 2 and 3, the EDRA model thus picks
a specific loser [z] and checks whether its cur-
rent ranking vector ? satisfies the corresponding
consistency condition (1). Failure to satisfy this
condition means that the current ranking values
of the loser-preferring (winner-preferring) con-
straints are too large (too small). The algorithm
thus promotes the winner-preferring constraints
by a small promotion amount and demotes the
loser-preferring constraints by a small demotion
amount. What matters is not the actual values of
the promotion and demotion amounts, but rather
their ratio. Thus, the demotion amount can be
set equal to 1 for concreteness, letting instead the
promotion amount be equal to an arbitrary non-
negative constant p ? 0, as in (2).
(2) a. Increase the ranking value of each winner-
preferring constraint by p ? 0;
b. decrease the ranking value of each undom-
inated loser-preferring constraint by 1.
Crucially, not all loser-preferring constraints are
demoted by (2b), but only those that need to be
demoted, namely the undominated ones (Tesar and
Smolensky, 1998), whose current ranking value is
at least as large as the ranking value of all winner-
preferring constraints and thus are responsible for
flouting the consistency condition (1).
3 The problem of F-control
The crucial implementation parameter of the
EDRA model is the promotion amount p ? 0 used
in the promotion component (2a) of the re-ranking
rule. How should this parameter be tuned so as to
optimize the performance of the EDRA model of
the acquisition of phonotactics? This section ex-
plains how this question leads to the problem of
controlling the height of the F constraints.
3.1 Some initial guarantees
The problem of the acquisition of phonotactics
in OT is intractable: no algorithm can solve effi-
ciently an arbitrary instance of the problem cor-
responding to an arbitrary constraint set (Magri,
2013a). Prompted by this intractability result, Ma-
gri (2013b) starts to tackle the problem by looking
at a class of ?easy? cases.
The intuitive idea is that the relative ranking
of the F constraints might often be irrelevant for
phonotactics, namely for drawing the line between
licit and illicit forms (although it is of course al-
ways crucial for phonology, namely for the spe-
cific way in which illicit forms are repaired). This
intuition that the relative ranking of the F con-
straints is not relevant to describe a certain phono-
tactic pattern can be formalized as follows. A
partial constraint ranking is any partial order on
the constraint set. A partial ranking generates
a language provided each one of its total refine-
ments generates that language in the usual OT
sense (Yanovich, 2012). A language is called F-
irrelevant provided it can be generated in this tech-
11
nical sense by a partial ranking which does not
rank any two F constraints relative to each other
(see subsection 3.2 for an example).
Suppose that the EDRA model is trained on a
target language L
?
which is F-irrelevant. The
M constraints start out high, with an initial rank-
ing value ?
init
usually larger than the number m
of markedness constraints. The F constraints in-
stead start out low, with a null initial ranking
value. Throughout learning, the F constraints will
raise, if the algorithm adopts a non-null promotion
amount p > 0. Theorem 1 provides guarantees
that the EDRA model learns the target phonotac-
tics, as long as the F constraints don?t raise too
high, namely their ranking values remain smaller
by at least m than the initial ranking value ?
init
of
theM constraints, as stated in (3).
Theorem 1 Suppose that the underlying OT ty-
pology satisfies the following two assumptions.
First, if a surface form [y] is a non-faithful candi-
date of an underlying form /x/, then there exists
at least one faithfulness constraint which assigns
at least one violation to the mapping of /x/ into
[y] (F-discernibility assumption). Second, a form
[y] is a candidate of an underlying form /x/ if and
only if the latter form construed as the surface
form [x] is vice versa a candidate of the former
form construed as the underlying form /y/ (sym-
metric candidacy assumption). Consider a lan-
guage in this OT typology which is F-irrelevant.
Suppose that the EDRA model only makes a fi-
nite number of errors and then converges to a fi-
nal ranking vector which is never updated again.
Suppose furthermore that the ranking value ?
F
of
any F constraint F at any time in the run satisfies
condition (3), where m is the number ofM con-
straints and ?
init
> m their initial ranking value.
(3) ?
F
? ?
init
?m
Then, the language generated by (an arbitrary re-
finement of) the final ranking vector learned by the
EDRA model coincides with the target language
the EDRA model has been trained on. 
The two assumptions of F-discernibility and
symmetric candidacy required by theorem 1 are
extremely mild. Magri (2013b; 2014b) conjec-
tures that the relative ranking of the faithfulness
constraints turns out to matter for phonotactics
only in very special configurations, so that the
F-irrelevancy assumption might plausibly hold in
the vast majority of cases. Theorem 1 thus pro-
vides guarantees that the EDRA model succeeds
at the problem of the acquisition of phonotactics
in a large class of cases under two crucial assump-
tions. One assumption is that it can only make a
finite number of errors before it converges to a fi-
nal ranking which is consistent with any form and
thus never updated. The other assumption is the
condition (3) that the height of the F-constraints
can be properly controlled.
3.2 Some examples
To illustrate the issues raised by convergence and
F-control, consider the following OT typology.
The set of forms consists of only four forms
{apsa, apza, absa, abza}. The faithfulness con-
straints are the two identity constraints for voicing
in stops and fricatives (F
1
, F
2
). The markedness
constraints are the two corresponding constraints
against stop and fricative voicing (M
1
,M
2
) plus
an additional constraint M which bans sequences
of stops and fricatives which agree in voicing,
namely it is violated by the two forms apsa and
abza. The candidacy relation is total: the four
forms are all candidates of each other.
The OT typology just described contains in par-
ticular the language L = {[absa], [apza]}. This
language is generated by any ranking which satis-
fies the ranking conditions (4).
(4)
M
F
2
F
1
M
1
M
2
These ranking conditions (4) say nothing about the
relative ranking of the two F constraints F
1
and
F
2
. The language L thus qualifies as F-irrelevant.
When trained on this language, the EDRA
model will be provided at step 1 with a sequence
of the two licit forms [absa] and [apza]. It will then
complete them into an underlying/winner/loser
form triplet at steps 2 and 3 by assuming a faith-
ful underlying form and a non-faithful loser form.
The list of all possible such triplets that the algo-
rithm can consider is provided in (5).
(5)
?
?
?
?
?
?
?
?
F
1
F
2
M
1
M
2
M
(/absa/, [absa], [apsa]) W e L e W
(/absa/, [absa], [abza]) e W e W W
(/absa/, [absa], [apza]) W W L W e
(/apza/, [apza], [abza]) W e W e W
(/apza/, [apza], [apsa]) e W e L W
(/apza/, [apza], [absa]) W W W L e
?
?
?
?
?
?
?
?
12
Each triplet is described here in ERC notation
(Prince, 2002): constraints which are winner- or
loser-preferring or even relative to a triplet are
marked with a corresponding W or L or e.
The triplets where the constraint M is winner-
preferring will trigger virtually no update, since
that constraint starts high and is never demoted,
and will thus always ensure consistency with those
triplets. The learning run is thus driven by the two
remaining triplets, boldfaced in (5), which I as-
sume are fed one after the other to the algorithm.
Suppose the promotion amount is non-null, say
equal to the demotion amount: p = 1. The re-
sulting learning run is described in (6).
(6)
?
?
?
F
1
0
F
2
0
M
1
5
M
2
5
M 5
?
?
?
?
?
?
?
1
1
4
6
5
?
?
?
?
?
?
?
2
2
5
5
5
?
?
?
?
?
?
?
3
3
4
6
5
?
?
?
?
?
?
?
4
4
5
5
5
?
?
?
?
?
?
?
5
5
4
6
5
?
?
?
?
?
?
?
6
6
5
5
5
?
?
?
The two F constraints end up too high, namely
with a final ranking value ?
F
1
= ?
F
2
= 6 which
is larger than the initial ranking value ?
init
= 5
of theM constraints. And indeed the EDRA has
failed at learning the target phonotactics: since the
F constraints are ranked at the top, the model has
incorrectly learned that any form is licit.
A trivial strategy to enforce the F-control con-
dition (3) would be to threshold the promotion
component (2a) of the re-ranking rule, as in (2a
?
).
(2) a
?
. Increase the ranking value of each
winner-preferring constraint by p, except
for an F constraint which is already
close to the forbidden threshold ?
init
?m.
Yet, suppose we tried to remedy to the failure
in (6) by thresholding the promotions as in (2a
?
).
When an F constraint reaches the height ?
init
?
m = 5 ? 3 = 2, we stop promoting it, as bold-
faced in the learning run (7).
(7)
?
?
?
F
1
0
F
2
0
M
1
5
M
2
5
M 5
?
?
?
?
?
?
?
1
1
4
6
5
?
?
?
?
?
?
?
2
2
5
5
5
?
?
?
?
?
?
?
2
2
4
6
5
?
?
?
?
?
?
?
2
2
5
5
5
?
?
?
?
?
?
?
2
2
4
6
5
?
?
?
?
?
?
?
2
2
5
5
5
?
?
?
. . .
In this run, the constraint M stays put at its initial
position. The constraints M
1
and M
2
oscillate up
and down, because promoted and demoted by the
two boldfaced triplets in (5). The constraints F
1
and F
2
raise a bit until they hit the threshold, and
then settle. The EDRA model will thus keep mak-
ing mistakes forever, without ever converging to a
ranking vector consistent with the data.
3.3 Against a null promotion amount
These difficulties with convergence and the F-
control condition (3) would disappear if the pro-
motion amount p was set equal to zero, so that
the EDRA performs no constraint promotion at
all. In fact, Tesar and Smolensky (1998) guarantee
convergence for the demotion-only case. And the
F constraints could not possibly be promoted too
high, as they would not be promoted at all.
Unfortunately, the option of a null promotion
amount is not viable, as argued in Magri (2012;
2014b). In fact, recall that the EDRA model at
step 3 always considers underlying/winner/loser
form triplets (/y/, [y], [z]) which have an underly-
ing form /y/ faithful to the winner [y]. This means
that the F constraints are never loser-preferring
and are therefore never demoted. If the promotion
amount is set equal to zero, then they will not be
promoted either. In the end, the F constraints will
thus never be re-ranked. This hampers the ability
of the EDRA model to learn the correct relative
ranking of the F constraints when trained on a F-
relevant language, namely when it needs to learn a
phonotactic pattern which crucially does require a
specific relative ranking of the F constraints.
3.4 Convergence through calibration
As recalled above, Tesar and Smolensky (1998)
show that the EDRA model converges when the
promotion amount is null and the algorithm per-
forms only constraint demotion. It could in princi-
ple be the case that convergence does not extend to
the demotion/promotion case, because any amount
of promotion disrupts convergence. But Magri
(2012) shows that is not the case: convergence ex-
tends to EDRAs which perform constraint promo-
tion as well, as long as the promotion amount is
small enough. In particular, consider a promotion
amount p which scales as in (8) with the numbers
` and w of currently undominated loser-preferring
constraints and of winner-preferring constraints.
(8) p =
`
w + ?
It turns out that the EDRA model converges ef-
ficiently if (and only if) the promotion amount
is calibrated, namely has the shape in (8) corre-
sponding to some strictly positive calibration con-
stant ? > 0. The larger the calibration constant ?,
the smaller the promotion amount. The case of a
null promotion amount corresponds to the limiting
case ? =?.
13
3.5 F-control through calibration as well
Let?s take stock. Theorem 1 provides some ini-
tial guarantees of success of the EDRA model of
the acquisition of phonotactics. These guarantees
hold under two crucial assumptions: convergence
and theF-control condition (3). Do these assump-
tions hold when the promotion amount is non-
null? Convergence does hold, if the promotion
amount, although not null, is nonetheless small,
namely calibrated as in (8). What about the F-
control condition (3)? Can we play the same trick
of a small promotion amount? Or is it the case
that, no matter how small the promotion amount,
as soon as it is allowed to be non-null, the F con-
straints raise too high through a long sequence of
very small promotions? Section 4 shows that the
latter scenario can never arise: the F constraints
can never raise too high if the promotion amount
is small enough. More precisely, it assumes a cal-
ibrated promotion amount as in (8). And it shows
that the F-control condition (3) holds when the
calibration constant ? is large enough, namely it
grows as the number m ofM constraints.
As the calibration constant increases as the
number m of markedness constraints, the promo-
tion amount decreases quickly. Is it possible to
improve on the analysis of section 4 and guaran-
tee the F-control condition (3) with a calibration
constant ? which does not grow with the number
m of markedness constraints? Unfortunately, sec-
tion 5 shows that the calibration constant must in-
crease with m. More precisely, this section con-
siders the very simple case where there is a single
F constraint and where theM constraints are al-
ways loser-preferring (or even) but never winner-
preferring. In this case, the F-control condition
fails if the calibration constant ? does not grow
with m at least as
m
logm
.
Interestingly, the derivative of the function
m
logm
goes to zero as m grows. In other words, although
the function increases with m, the rate of increase
becomes smaller and smaller, making this func-
tion as close as possible to a constant. Is this par-
ticularly favorable choice of the calibration con-
stant only possible in the peculiar case considered
in section 5? or does this favorable choice of the
calibration constant ensure F-calibration also in
the general case? Section 6 shows how to relax at
least one of the two restrictive assumptions made
in section 5, namely the assumption that the M
constraints are never winner-preferring.
4 F-controlling with a non-null
promotion amount
The most basic question of the theory ofF-control
is as follows: is it possible to guarantee the F-
control condition (3) despite a non-null promotion
amount? This section provides a positive answer
to this question. In particular, assume the promo-
tion amount p is calibrated as in (8), through the
calibration constant ?. The F-control condition
then holds provided the calibration constant ? sat-
isfies the bound (9), where m is the number ofM
constraints and ?
init
is their initial ranking value.
(9) ? ?
2m+m?
init
?
init
?m
To get a sense of the bound (9), assume that the
initial ranking value ?
init
of the M constraints is
some power of the number m of M constraints:
?
init
= m
k
for some k > 1. The bound (9) thus
becomes
m
k
+2
m
k?1
?1
, which is approximately m.
At each update, each of the ` currently undom-
inated loser-preferring constraints is demoted by
1 and each of the w winner-preferring constraints
is promoted by p. Because of the specific shape
(8) of the promotion amount p, the sum of the
current ranking values decreases by ` ? wp =
` ?
w`
w+?
=
`?
w+?
. And the latter is at least
?
w+?
,
as every update requires at least one undominated
loser-preferring constraint, namely ` ? 1. Let ?
i
be the number of updates triggered by the ith ERC
in the run considered up to the time considered
(note that there is only a finite number of ERCs
relative to a finite number of constraints). Thus,
the sum
?
k
?
k
of the current ranking values has
overall decreased by at least
?
i
?
i
?
w
i
+?
relative
to the the sum
?
k
?
init
k
of the initial ranking val-
ues, as stated in (10).
(10)
?
k
?
k
?
?
k
?
init
k
?
?
i
?
i
?
w
i
+ ?
The sum
?
k
?
init
k
of the initial ranking values
can be computed explicitly as in (11), as the m
M constraints start with the initial ranking value
?
init
while theF constraints start with a null initial
ranking value.
(11)
?
k
?
init
k
= m?
init
The sum
?
k
?
k
of the current ranking values can
be lower bounded as in (12).
14
(12)
?
k
?
k
(a)
=
?
F
?
F
+
?
M
?
M
(b)
? 0 +
?
M
?
M
(c)
> 0 +m(?2) = ?2m
In step (11a), I have split the sum over all con-
straints into the sum over the faithfulness and the
markedness constraints. In step (11b), I have noted
that the ranking value ?
F
of any faithfulness con-
straint F is always at least as large as 0. In fact,
the faithfulness constraints start with a null ini-
tial ranking value and are never demoted, because
the EDRA model always assumes an underlying
form faithful to the winner, so that the faithful-
ness constraints are never loser-preferring. In step
(11c), I have noted that the ranking value ?
M
of
a markedness constraint M can never get smaller
than ?2. In fact, suppose by contradiction that M
managed to be demoted that low. That would im-
ply that some ERC triggers an update that demotes
M despite the fact that its current ranking value
is strictly smaller than 0. And that is impossible.
In fact, at least one faithfulness constraint F must
be winner-preferring relative to that ERC, because
of the F-discernibility assumption. Furthermore,
that constraint F must already dominate M , be-
cause F has a non-negative current ranking value
while M has a negative current ranking value.
Using the expressions for the sum of the ini-
tial and the current ranking values obtained in (11)
and (12) respectively, the original inequality (10)
yields the bound in (13).
(13)
?
i
?
i
1
w
i
+ ?
<
2m+m?
init
?
The ranking value ?
F
of a generic faithfulness
constraint F can now be bound as in (14).
(14) ?
F
(a)
?
?
i
?
i
1
w
i
+ ?
(b)
<
2m+m?
init
?
(c)
? ?
init
?m
In step (14a), I have used the fact that the faithful-
ness constraint F starts with a null initial ranking
value and is promoted by
1
w
i
+?
for each one of the
?
i
updates triggered by the ith ERC, as long as F
is winner-preferring relative to that ERC. In step
(14b), I have used the bound computed in (13).
And in step (14c), I have used the choice (9) of the
calibration constant ?.
The bound obtained in (14) guarantees that
the generic faithfulness constraint F never raises
above the forbidden threshold ?
init
?m, thus com-
plying with the F-control condition (3). In other
words, we have obtained the following sufficient
solution to the problem of F-controlling.
Theorem 2 Suppose the underlying typology sat-
isfies the F-discernibility assumption. Consider a
run of the EDRA model on an arbitrary language
in that typology. Assume that the F constraints
start out with a null initial ranking value while the
m M constraints start out with an initial rank-
ing value ?
init
> m. Assume furthermore that the
promotion amount is calibrated as in (8) and that
the calibration constant ? is large enough to sat-
isfy the bound (9). Then, the ranking values of the
F constraints remain smaller than the forbidden
threshold ?
init
?m throughout the entire run. 
5 F-controlling on the diagonal case
The preceding section has established the F-
control condition (3) when the promotion amount
is not null, provided it is small enough, namely it
corresponds to a calibration constant which grows
as the numberm ofM constraints. Is it possible to
do better? In particular, is it possible to guarantee
F-control when the calibration constant does not
increase with m? This section sketches a coun-
terexample which provides a negative answer to
this question; see Magri (2014a) for details.
At every iteration, the EDRA model receives
a winner form sampled from the target language,
assumes a corresponding faithful underlying form
and picks a corresponding loser candidate. At ev-
ery iteration, the model thus constructs an under-
lying/winner/loser form triplet, which can be de-
scribed in terms of the corresponding ERC, as ex-
emplified in (5) above. Since there are only a finite
number of ERCs corresponding to a finite number
of constraints, the ERCs considered in a run of the
model can be stacked one on top of the other into
an input ERC matrix.
Without loss of generality, assume that each
input ERC has a unique loser-preferring con-
straint. Next, let me make two crucial assump-
tions. First, assume that the constraint set contains
a single faithfulness constraint F ? plus of course
a certain number m of markedness constraints
M
1
, . . . ,M
m
. Second, assume that M
1
, . . . ,M
m
15
Figure 1: First three stages of the learning dynamics where each diagonal ERC is fed persistently in turn
ERC 1
?
init
/3
0
?
init
F
M
1
M
2
, ,M
m
ERC 1 ERC 2
0
?
init
?
init
/3
2
9
?
init
F
M
1
M
2
M
3
, ,M
m
ERC 1 ERC 2 ERC 3
0
?
init
1
3
?
init
2
9
?
init
4
27
?
init
F
M
1
M
2
M
3
M
4
, ,M
m
are either loser-preferring or even in the input
ERCs, but never winner-preferring. The input
ERC matrix thus is (a subset of) the matrix (15).
(15)
?
?
F M
1
... M
m
ERC 1 W L e
.
.
. |
.
.
.
ERC m W e L
?
?
The column corresponding to F consists of all
W?s. The entries corresponding to M
1
, . . . ,M
m
are all equal to e?s but for the diagonal of L?s. This
ERC matrix is thus called diagonal.
What is the maximum height that the constraint
F can reach in a run of the EDRA model on the
input diagonal ERC matrix (15)? To address this
question, consider the following special run. To
start, we persistently feed ERC 1 to the algorithm,
until the markedness constraint M
1
is demoted
underneath the faithfulness constraint F and that
ERC cannot trigger any further update. Only at
that point, we stop feeding ERC 1 to the algo-
rithm, and persistently feed ERC 2 instead, again
until it cannot trigger any further update. Only at
that point, we stop feeding ERC 2 and persistently
feed ERC 3. And so on.
Assume that the promotion amount has the
shape (8) and suppose for concreteness that the
calibration constant is ? = 1, so that the faith-
fulness constraint is promoted by 1/2 with each
update. The dynamics of the ranking values is
depicted in Figure 1 for the first three learning
stages. Throughout stage 1, it is ERC 1 that trig-
gers updates, whereby the markedness constraint
M
1
is demoted and the faithfulness constraint is
promoted by
1
3
? =
1
2+?
?
init
, until the two con-
straints meet. Throughout stage 2, it is ERC 2 that
triggers updates, whereby the markedness con-
straint M
2
is demoted and the faithfulness con-
straint is promoted by another
2
9
? =
1+?
(2+?)
2
?
init
,
until the two constraints meet. Throughout the
generic kth stage, it is the kth ERC that trig-
gers updates, whereby the markedness constraint
M
k
is demoted and the faithfulness constraint pro-
moted by an amount that turns out to be equal to
(1+?)
k?1
(2+?)
k
?
init
. The height ?
F
reached by the faith-
fulness constraint at the end of the special run con-
sidered is thus
?
m
k=1
(1+?)
k?1
(2+?)
k
?
init
. It turns out
that this is indeed the maximum height reacheable
by the faithfulness constraint F on any run on the
diagonal ERC matrix (15).
The F-control condition (3) thus boils down to
the inequality
?
m
k=1
(1+?)
k?1
(2+?)
k
?
init
? ?
init
? m.
Assume that the m markedness constraints start
out with the initial ranking value ?
init
= m
k
. This
inequality can then be solved analytically yielding
?(m) = (1? exp {(?k logm)/m})
?1
. By a first
order Taylor expansion exp(x) ? 1+x+o(x
2
) of
the exponential function, the latter expression can
be approximated as in (16).
(16) ? = ?(m) ?
m
k logm
The latter bound for the calibration threshold
is substantially smaller than the linear bound
?(m) ? m obtained through the elementary anal-
ysis of section 6. In particular, although (16) is not
bounded as a function of m, its derivative goes to
zero as 1/ logm.
6 F-controlling when the promotion
amount decreases slowly
The preceding section has made two restrictive as-
sumptions. First, that there is a unique F con-
straint. Second, that the M constraints are never
winner-preferring. Under these assumptions, it
has shown that the F-control condition (3) holds
when the calibration constant grows only very
slowly with m, namely as in (16). Does this favor-
able result also hold when we relax the two restric-
tive assumptions? This section shows how to relax
one of the two assumptions, namely the assump-
tion that the M constraints cannot be winner-
preferring. At this stage, I do know how to relax
the other assumption that there is a unique F con-
straint. Again, the reasoning here is only sketched;
see Magri (2014a) for details.
16
To illustrate the core idea, suppose that the
EDRA model is trained on the input ERC matrix
(17a) and walks through the run (18a). Here, I
am assuming that the promotion amount p has the
shape in (8), with the calibration constant ? = 0
set equal to zero for concreteness.
(17)a. b.
[
F M
1
M
2
ERC 1 W L e
ERC 2 W W L
] [
F M
1
M
2
ERC 1 W L e
ERC 2 W e L
]
(18) a.
F
M
1
M
2
?
?
0
10
10
?
?
?
?
1
9
10
?
?
?
?
2
8
10
?
?
?
?
2.5
8.5
9
?
?
?
?
3
9
8
?
?
ERC 1 ERC 1 ERC 2 ERC 2
b.
F
M
1
M
2
?
?
0
10
10
?
?
?
?
1
9
10
?
?
?
?
2
9
9
?
?
?
?
3
9
8
?
?
ERC 1 ERC 2 ERC 2
Consider the diagonal ERC matrix (17b) corre-
sponding to m = 2 markedness constraints. The
original run (18a) on the original ERC matrix
(17a) can be simulated with the run (18b) on the
diagonal ERC matrix (17b) in such a way that all
constraints end up at the same high in the two runs.
This reasoning holds in complete generality. In-
deed, under the assumption that there is a unique
F constraint but no restrictions on the M con-
straints, the input ERC matrix looks like (19).
(19)
?
?
?
F
1
M
1
... M
m
|
.
.
. .
.
.
W L, e,W
|
.
.
. .
.
.
?
?
?
Any run of the EDRA model on this input ERC
matrix (19) can be mimicked by a corresponding
run on the diagonal ERC matrix (15). This reduc-
tion to the diagonal case holds provided the pro-
motion amount is calibrated, namely has the shape
in (8), no matter the choice of the calibration con-
stant ? ? 0. This reduction fails if the promotion
amount is not calibrated.
Another crucial condition needed for the re-
duction to the diagonal case is the following: in
the original run, the markedness constraints are
allowed to raise only slightly above their initial
ranking value ?
init
. Indeed, if a markedness con-
straint could raise arbitrarily high above its initial
ranking value in the original run, there would be
no way to mimic that increasing ranking dynam-
ics with a derived run on the diagonal ERC ma-
trix (15), as the latter only demotes but never pro-
motes the markedness constraints. The fact that
the markedness constraints can raise by a small
amount does not threaten the reduction to the diag-
onal case, because the markedness constraints can
be assigned a slightly larger initial ranking value
in the derived run on the diagonal ERC matrix.
Fortunately, the markedness constraints
M
1
, . . . ,M
m
indeed can raise above their initial
ranking value ?
init
only by a small amount,
namely never by more than m, as stated in (20).
(20) ?
1
, . . . , ?
m
? ?
init
+m
Obviously, this bound (20) holds at the beginning
of the run. It is thus sufficient to prove that this
bound is an invariant of the algorithm: if it holds
of the current ranking values at some time t ? 1,
then it also holds at the subsequent time t. The
challenge is that a winner-preferring markedness
constraint M
1
sitting right at ?
init
+ m at time
t ? 1 could in principle be promoted above that
forbidden threshold, so that the bound (20) would
hold at time t ? 1 but fail at time t. Yet, in order
for such an update to happen, there has got to ex-
ist another constraintM
2
which is loser-preferring
and is ranked at time t ? 1 at least as high as
the winer-preferring constraint M
1
. This means
in turn that the sum ?
t?1
1
+ ?
t?1
2
of the two rank-
ing values of M
1
and M
2
at time t ? 1 is at least
(?
init
+m) + (?
init
+m). This suggests to cope
with the difficulty just highlighted by strengthen-
ing the invariant. Not only a single ranking value
cannot get larger than ?
init
+m, but also the sum
of any two ranking values can never reach (?
init
+
m)+(?
init
+m). For instance, let?s say it can never
get larger than (?
init
+m) + (?
init
+m? 1). But
now again, in order to prove that the latter bound
on the sum of two ranking values holds at time t,
I need an assumption about the sum of three rank-
ing values at time t ? 1. And so on. Indeed, the
sum ?
i
1
+ . . .+?
i
k
of the current ranking values of
any number k of different markedness constraints
M
i
1
, . . . ,M
i
k
can be bound as in (21). This bound
holds for any promotion amount with the shape (8)
corresponding to a calibration constant ? which is
not too small, namely ? ? 1.
(21)
k
?
h=1
?
i
h
?
k
?
h=1
(?
init
+m? h+ 1)
For k = 1, (21) yields the desired bound (20).
Acknowledgments
This research was supported by a Marie Curie In-
tra European Fellowship within the 7th European
17
Community Framework Programme.
References
Paul Boersma. 1998. Functional Phonology. Ph.D.
thesis, University of Amsterdam, The Netherlands.
The Hague: Holland Academic Graphics.
Paul Boersma. 2009. Some correct error-driven ver-
sions of the constraint demotion algorithm. Linguis-
tic Inquiry, 40:667?686.
Kyle Gorman. 2013. Generative phonotactics. Ph.D.
thesis, University of Pennsylvania.
Giorgio Magri. 2012. Convergence of error-driven
ranking algorithms. Phonology, 29(2):213?269.
Giorgio Magri. 2013a. The complexity of learning in
OT and its implications for the acquisition of phono-
tactics. Linguistic Inquiry, 44.3:433468.
Giorgio Magri. 2013b. An initial result on the re-
strictiveness of the error-driven ranking model of the
early stage of the acquisition of phonotactics. In
Hsin-Lun Huang, Ethan Poole, and Amanda Rys-
ling, editors, Proceedings of NELS 43: the 43rd an-
nual meeting of the North East Linguistic Society.
Giorgio Magri. 2014a. The error-driven ranking model
of the acquisition of phonotactics: how to control the
height of the faithfulness constraints. CNRS, UiL-
OTS ms.
Giorgio Magri. 2014b. Error-driven versus batch mod-
els of the acquisition of phonotactics: David defeats
Goliath. In John Kingston, Claire Moore-Cantwell,
Joe Pater, and Robert Staubs, editors, Supplemental
Proceedings of Phonology 2013, Washington DC.
Linguistic Society of America.
Joe Pater. 2009. Weighted constraints in Generative
Linguistics. Cognitive Science, 33:999?1035.
Alan Prince and Paul Smolensky. 2004. Optimality
Theory: Constraint Interaction in generative gram-
mar. Blackwell, Oxford. As Technical Report CU-
CS-696-93, Department of Computer Science, Uni-
versity of Colorado at Boulder, and Technical Report
TR-2, Rutgers Center for Cognitive Science, Rut-
gers University, New Brunswick, NJ, April 1993.
Also available as ROA 537 version.
Alan Prince. 2002. Entailed ranking arguments.
Ms., Rutgers University, New Brunswick, NJ. Rut-
gers Optimality Archive, ROA 500. Available at
http://www.roa.rutgers.edu.
Bruce Tesar and Paul Smolensky. 1998. Learnability
in Optimality Theory. Linguistic Inquiry, 29:229?
268.
Bruce Tesar. 2013. Output-Driven Phonology: Theory
and Learning. Cambridge Studies in Linguistics.
Igor Yanovich. 2012. The logic of OT rankings. MIT
manuscript.
18
