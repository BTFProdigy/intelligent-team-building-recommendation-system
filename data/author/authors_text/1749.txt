Introduction to the CoNLL-2003 Shared Task:
Language-Independent Named Entity Recognition
Erik F. Tjong Kim Sang and Fien De Meulder
CNTS - Language Technology Group
University of Antwerp
{erikt,fien.demeulder}@uia.ua.ac.be
Abstract
We describe the CoNLL-2003 shared task:
language-independent named entity recog-
nition. We give background information on
the data sets (English and German) and
the evaluation method, present a general
overview of the systems that have taken
part in the task and discuss their perfor-
mance.
1 Introduction
Named entities are phrases that contain the names
of persons, organizations and locations. Example:
[ORG U.N. ] official [PER Ekeus ] heads for
[LOC Baghdad ] .
This sentence contains three named entities: Ekeus
is a person, U.N. is a organization and Baghdad is
a location. Named entity recognition is an impor-
tant task of information extraction systems. There
has been a lot of work on named entity recognition,
especially for English (see Borthwick (1999) for an
overview). The Message Understanding Conferences
(MUC) have offered developers the opportunity to
evaluate systems for English on the same data in a
competition. They have also produced a scheme for
entity annotation (Chinchor et al, 1999). More re-
cently, there have been other system development
competitions which dealt with different languages
(IREX and CoNLL-2002).
The shared task of CoNLL-2003 concerns
language-independent named entity recognition. We
will concentrate on four types of named entities:
persons, locations, organizations and names of
miscellaneous entities that do not belong to the pre-
vious three groups. The shared task of CoNLL-2002
dealt with named entity recognition for Spanish and
Dutch (Tjong Kim Sang, 2002). The participants
of the 2003 shared task have been offered training
and test data for two other European languages:
English and German. They have used the data
for developing a named-entity recognition system
that includes a machine learning component. The
shared task organizers were especially interested in
approaches that made use of resources other than
the supplied training data, for example gazetteers
and unannotated data.
2 Data and Evaluation
In this section we discuss the sources of the data
that were used in this shared task, the preprocessing
steps we have performed on the data, the format of
the data and the method that was used for evaluating
the participating systems.
2.1 Data
The CoNLL-2003 named entity data consists of eight
files covering two languages: English and German1.
For each of the languages there is a training file, a de-
velopment file, a test file and a large file with unanno-
tated data. The learning methods were trained with
the training data. The development data could be
used for tuning the parameters of the learning meth-
ods. The challenge of this year?s shared task was
to incorporate the unannotated data in the learning
process in one way or another. When the best pa-
rameters were found, the method could be trained on
the training data and tested on the test data. The
results of the different learning methods on the test
sets are compared in the evaluation of the shared
task. The split between development data and test
data was chosen to avoid systems being tuned to the
test data.
The English data was taken from the Reuters Cor-
pus2. This corpus consists of Reuters news stories
1Data files (except the words) can be found on
http://lcg-www.uia.ac.be/conll2003/ner/
2http://www.reuters.com/researchandstandards/
English data Articles Sentences Tokens
Training set 946 14,987 203,621
Development set 216 3,466 51,362
Test set 231 3,684 46,435
German data Articles Sentences Tokens
Training set 553 12,705 206,931
Development set 201 3,068 51,444
Test set 155 3,160 51,943
Table 1: Number of articles, sentences and tokens in
each data file.
between August 1996 and August 1997. For the
training and development set, ten days? worth of data
were taken from the files representing the end of Au-
gust 1996. For the test set, the texts were from De-
cember 1996. The preprocessed raw data covers the
month of September 1996.
The text for the German data was taken from the
ECI Multilingual Text Corpus3. This corpus consists
of texts in many languages. The portion of data that
was used for this task, was extracted from the Ger-
man newspaper Frankfurter Rundshau. All three of
the training, development and test sets were taken
from articles written in one week at the end of Au-
gust 1992. The raw data were taken from the months
of September to December 1992.
Table 1 contains an overview of the sizes of the
data files. The unannotated data contain 17 million
tokens (English) and 14 million tokens (German).
2.2 Data preprocessing
The participants were given access to the corpus af-
ter some linguistic preprocessing had been done: for
all data, a tokenizer, part-of-speech tagger, and a
chunker were applied to the raw data. We created
two basic language-specific tokenizers for this shared
task. The English data was tagged and chunked by
the memory-based MBT tagger (Daelemans et al,
2002). The German data was lemmatized, tagged
and chunked by the decision tree tagger Treetagger
(Schmid, 1995).
Named entity tagging of English and German
training, development, and test data, was done by
hand at the University of Antwerp. Mostly, MUC
conventions were followed (Chinchor et al, 1999).
An extra named entity category called MISC was
added to denote all names which are not already in
the other categories. This includes adjectives, like
Italian, and events, like 1000 Lakes Rally, making it
a very diverse category.
3http://www.ldc.upenn.edu/
English data LOC MISC ORG PER
Training set 7140 3438 6321 6600
Development set 1837 922 1341 1842
Test set 1668 702 1661 1617
German data LOC MISC ORG PER
Training set 4363 2288 2427 2773
Development set 1181 1010 1241 1401
Test set 1035 670 773 1195
Table 2: Number of named entities per data file
2.3 Data format
All data files contain one word per line with empty
lines representing sentence boundaries. At the end
of each line there is a tag which states whether the
current word is inside a named entity or not. The
tag also encodes the type of named entity. Here is
an example sentence:
U.N. NNP I-NP I-ORG
official NN I-NP O
Ekeus NNP I-NP I-PER
heads VBZ I-VP O
for IN I-PP O
Baghdad NNP I-NP I-LOC
. . O O
Each line contains four fields: the word, its part-
of-speech tag, its chunk tag and its named entity
tag. Words tagged with O are outside of named en-
tities and the I-XXX tag is used for words inside a
named entity of type XXX. Whenever two entities of
type XXX are immediately next to each other, the
first word of the second entity will be tagged B-XXX
in order to show that it starts another entity. The
data contains entities of four types: persons (PER),
organizations (ORG), locations (LOC) and miscel-
laneous names (MISC). This tagging scheme is the
IOB scheme originally put forward by Ramshaw and
Marcus (1995). We assume that named entities are
non-recursive and non-overlapping. When a named
entity is embedded in another named entity, usually
only the top level entity has been annotated.
Table 2 contains an overview of the number of
named entities in each data file.
2.4 Evaluation
The performance in this task is measured with F?=1
rate:
F? =
(?2 + 1) ? precision ? recall
(?2 ? precision + recall)
(1)
lex pos aff pre ort gaz chu pat cas tri bag quo doc
Florian + + + + + + + - + - - - -
Chieu + + + + + + - - - + - + +
Klein + + + + - - - - - - - - -
Zhang + + + + + + + - - + - - -
Carreras (a) + + + + + + + + - + + - -
Curran + + + + + + - + + - - - -
Mayfield + + + + + - + + - - - + -
Carreras (b) + + + + + - - + - - - - -
McCallum + - - - + + - + - - - - -
Bender + + - + + + + - - - - - -
Munro + + + - - - + - + + + - -
Wu + + + + + + - - - - - - -
Whitelaw - - + + - - - - + - - - -
Hendrickx + + + + + + + - - - - - -
De Meulder + + + - + + + - + - - - -
Hammerton + + - - - + + - - - - - -
Table 3: Main features used by the the sixteen systems that participated in the CoNLL-2003 shared task
sorted by performance on the English test data. Aff: affix information (n-grams); bag: bag of words; cas:
global case information; chu: chunk tags; doc: global document information; gaz: gazetteers; lex: lexical
features; ort: orthographic information; pat: orthographic patterns (like Aa0); pos: part-of-speech tags; pre:
previously predicted NE tags; quo: flag signing that the word is between quotes; tri: trigger words.
with ?=1 (Van Rijsbergen, 1975). Precision is the
percentage of named entities found by the learning
system that are correct. Recall is the percentage of
named entities present in the corpus that are found
by the system. A named entity is correct only if it
is an exact match of the corresponding entity in the
data file.
3 Participating Systems
Sixteen systems have participated in the CoNLL-
2003 shared task. They employed a wide variety of
machine learning techniques as well as system com-
bination. Most of the participants have attempted
to use information other than the available train-
ing data. This information included gazetteers and
unannotated data, and there was one participant
who used the output of externally trained named en-
tity recognition systems.
3.1 Learning techniques
The most frequently applied technique in the
CoNLL-2003 shared task is the Maximum Entropy
Model. Five systems used this statistical learning
method. Three systems used Maximum Entropy
Models in isolation (Bender et al, 2003; Chieu and
Ng, 2003; Curran and Clark, 2003). Two more
systems used them in combination with other tech-
niques (Florian et al, 2003; Klein et al, 2003). Max-
imum Entropy Models seem to be a good choice for
this kind of task: the top three results for English
and the top two results for German were obtained
by participants who employed them in one way or
another.
Hidden Markov Models were employed by four of
the systems that took part in the shared task (Flo-
rian et al, 2003; Klein et al, 2003; Mayfield et al,
2003; Whitelaw and Patrick, 2003). However, they
were always used in combination with other learning
techniques. Klein et al (2003) also applied the re-
lated Conditional Markov Models for combining clas-
sifiers.
Learning methods that were based on connection-
ist approaches were applied by four systems. Zhang
and Johnson (2003) used robust risk minimization,
which is a Winnow technique. Florian et al (2003)
employed the same technique in a combination of
learners. Voted perceptrons were applied to the
shared task data by Carreras et al (2003a) and
Hammerton used a recurrent neural network (Long
Short-Term Memory) for finding named entities.
Other learning approaches were employed less fre-
quently. Two teams used AdaBoost.MH (Carreras
et al, 2003b; Wu et al, 2003) and two other groups
employed memory-based learning (De Meulder and
Daelemans, 2003; Hendrickx and Van den Bosch,
2003). Transformation-based learning (Florian et
al., 2003), Support Vector Machines (Mayfield et al,
2003) and Conditional Random Fields (McCallum
and Li, 2003) were applied by one system each.
Combination of different learning systems has
proven to be a good method for obtaining excellent
results. Five participating groups have applied sys-
tem combination. Florian et al (2003) tested dif-
ferent methods for combining the results of four sys-
tems and found that robust risk minimization worked
best. Klein et al (2003) employed a stacked learn-
ing system which contains Hidden Markov Models,
Maximum Entropy Models and Conditional Markov
Models. Mayfield et al (2003) stacked two learners
and obtained better performance. Wu et al (2003)
applied both stacking and voting to three learners.
Munro et al (2003) employed both voting and bag-
ging for combining classifiers.
3.2 Features
The choice of the learning approach is important for
obtaining a good system for recognizing named en-
tities. However, in the CoNLL-2002 shared task we
found out that choice of features is at least as impor-
tant. An overview of some of the types of features
chosen by the shared task participants, can be found
in Table 3.
All participants used lexical features (words) ex-
cept for Whitelaw and Patrick (2003) who imple-
mented a character-based method. Most of the sys-
tems employed part-of-speech tags and two of them
have recomputed the English tags with better tag-
gers (Hendrickx and Van den Bosch, 2003; Wu et al,
2003). Othographic information, affixes, gazetteers
and chunk information were also incorporated in
most systems although one group reports that the
available chunking information did not help (Wu et
al., 2003) Other features were used less frequently.
Table 3 does not reveal a single feature that would
be ideal for named entity recognition.
3.3 External resources
Eleven of the sixteen participating teams have at-
tempted to use information other than the training
data that was supplied for this shared task. All in-
cluded gazetteers in their systems. Four groups ex-
amined the usability of unannotated data, either for
extracting training instances (Bender et al, 2003;
Hendrickx and Van den Bosch, 2003) or obtaining
extra named entities for gazetteers (De Meulder and
Daelemans, 2003; McCallum and Li, 2003). A rea-
sonable number of groups have also employed unan-
notated data for obtaining capitalization features for
words. One participating team has used externally
trained named entity recognition systems for English
as a part in a combined system (Florian et al, 2003).
Table 4 shows the error reduction of the systems
G U E English German
Zhang + - - 19% 15%
Florian + - + 27% 5%
Chieu + - - 17% 7%
Hammerton + - - 22% -
Carreras (a) + - - 12% 8%
Hendrickx + + - 7% 5%
De Meulder + + - 8% 3%
Bender + + - 3% 6%
Curran + - - 1% -
McCallum + + - ? ?
Wu + - - ? ?
Table 4: Error reduction for the two develop-
ment data sets when using extra information like
gazetteers (G), unannotated data (U) or externally
developed named entity recognizers (E). The lines
have been sorted by the sum of the reduction per-
centages for the two languages.
with extra information compared to while using only
the available training data. The inclusion of ex-
tra named entity recognition systems seems to have
worked well (Florian et al, 2003). Generally the sys-
tems that only used gazetteers seem to gain more
than systems that have used unannotated data for
other purposes than obtaining capitalization infor-
mation. However, the gain differences between the
two approaches are most obvious for English for
which better gazetteers are available. With the ex-
ception of the result of Zhang and Johnson (2003),
there is not much difference in the German results
between the gains obtained by using gazetteers and
those obtained by using unannotated data.
3.4 Performances
A baseline rate was computed for the English and the
German test sets. It was produced by a system which
only identified entities which had a unique class in
the training data. If a phrase was part of more than
one entity, the system would select the longest one.
All systems that participated in the shared task have
outperformed the baseline system.
For all the F?=1 rates we have estimated sig-
nificance boundaries by using bootstrap resampling
(Noreen, 1989). From each output file of a system,
250 random samples of sentences have been chosen
and the distribution of the F?=1 rates in these sam-
ples is assumed to be the distribution of the perfor-
mance of the system. We assume that performance
A is significantly different from performance B if A
is not within the center 90% of the distribution of B.
The performances of the sixteen systems on the
two test data sets can be found in Table 5. For En-
glish, the combined classifier of Florian et al (2003)
achieved the highest overall F?=1 rate. However,
the difference between their performance and that
of the Maximum Entropy approach of Chieu and Ng
(2003) is not significant. An important feature of the
best system that other participants did not use, was
the inclusion of the output of two externally trained
named entity recognizers in the combination process.
Florian et al (2003) have also obtained the highest
F?=1 rate for the German data. Here there is no sig-
nificant difference between them and the systems of
Klein et al (2003) and Zhang and Johnson (2003).
We have combined the results of the sixteen sys-
tem in order to see if there was room for improve-
ment. We converted the output of the systems to
the same IOB tagging representation and searched
for the set of systems from which the best tags for
the development data could be obtained with ma-
jority voting. The optimal set of systems was de-
termined by performing a bidirectional hill-climbing
search (Caruana and Freitag, 1994) with beam size 9,
starting from zero features. A majority vote of five
systems (Chieu and Ng, 2003; Florian et al, 2003;
Klein et al, 2003; McCallum and Li, 2003; Whitelaw
and Patrick, 2003) performed best on the English
development data. Another combination of five sys-
tems (Carreras et al, 2003b; Mayfield et al, 2003;
McCallum and Li, 2003; Munro et al, 2003; Zhang
and Johnson, 2003) obtained the best result for the
German development data. We have performed a
majority vote with these sets of systems on the re-
lated test sets and obtained F?=1 rates of 90.30 for
English (14% error reduction compared with the best
system) and 74.17 for German (6% error reduction).
4 Concluding Remarks
We have described the CoNLL-2003 shared task:
language-independent named entity recognition.
Sixteen systems have processed English and German
named entity data. The best performance for both
languages has been obtained by a combined learn-
ing system that used Maximum Entropy Models,
transformation-based learning, Hidden Markov Mod-
els as well as robust risk minimization (Florian et al,
2003). Apart from the training data, this system also
employed gazetteers and the output of two externally
trained named entity recognizers. The performance
of the system of Chieu et al (2003) was not signif-
icantly different from the best performance for En-
glish and the method of Klein et al (2003) and the
approach of Zhang and Johnson (2003) were not sig-
nificantly worse than the best result for German.
Eleven teams have incorporated information other
than the training data in their system. Four of them
have obtained error reductions of 15% or more for
English and one has managed this for German. The
resources used by these systems, gazetteers and ex-
ternally trained named entity systems, still require a
lot of manual work. Systems that employed unanno-
tated data, obtained performance gains around 5%.
The search for an excellent method for taking advan-
tage of the fast amount of available raw text, remains
open.
Acknowledgements
Tjong Kim Sang is financed by IWT STWW as a
researcher in the ATraNoS project. De Meulder is
supported by a BOF grant supplied by the University
of Antwerp.
References
Oliver Bender, Franz Josef Och, and Hermann Ney.
2003. Maximum Entropy Models for Named En-
tity Recognition. In Proceedings of CoNLL-2003.
Andrew Borthwick. 1999. A Maximum Entropy Ap-
proach to Named Entity Recognition. PhD thesis,
New York University.
Xavier Carreras, Llu??s Ma`rquez, and Llu??s Padro?.
2003a. Learning a Perceptron-Based Named En-
tity Chunker via Online Recognition Feedback. In
Proceedings of CoNLL-2003.
Xavier Carreras, Llu??s Ma`rquez, and Llu??s Padro?.
2003b. A Simple Named Entity Extractor using
AdaBoost. In Proceedings of CoNLL-2003.
Rich Caruana and Dayne Freitag. 1994. Greedy At-
tribute Selection. In Proceedings of the Eleventh
International Conference on Machine Learning,
pages 28?36. New Brunswick, NJ, USA, Morgan
Kaufman.
Hai Leong Chieu and Hwee Tou Ng. 2003. Named
Entity Recognition with a Maximum Entropy Ap-
proach. In Proceedings of CoNLL-2003.
Nancy Chinchor, Erica Brown, Lisa Ferro, and Patty
Robinson. 1999. 1999 Named Entity Recognition
Task Definition. MITRE and SAIC.
James R. Curran and Stephen Clark. 2003. Lan-
guage Independent NER using a Maximum En-
tropy Tagger. In Proceedings of CoNLL-2003.
Walter Daelemans, Jakub Zavrel, Ko van der Sloot,
and Antal van den Bosch. 2002. MBT: Memory-
Based Tagger, version 1.0, Reference Guide. ILK
Technical Report ILK-0209, University of Tilburg,
The Netherlands.
Fien De Meulder and Walter Daelemans. 2003.
Memory-Based Named Entity Recognition using
Unannotated Data. In Proceedings of CoNLL-
2003.
Radu Florian, Abe Ittycheriah, Hongyan Jing, and
Tong Zhang. 2003. Named Entity Recognition
through Classifier Combination. In Proceedings of
CoNLL-2003.
James Hammerton. 2003. Named Entity Recogni-
tion with Long Short-Term Memory. In Proceed-
ings of CoNLL-2003.
Iris Hendrickx and Antal van den Bosch. 2003.
Memory-based one-step named-entity recognition:
Effects of seed list features, classifier stacking, and
unannotated data. In Proceedings of CoNLL-2003.
Dan Klein, Joseph Smarr, Huy Nguyen, and Christo-
pher D. Manning. 2003. Named Entity Recogni-
tion with Character-Level Models. In Proceedings
of CoNLL-2003.
James Mayfield, Paul McNamee, and Christine Pi-
atko. 2003. Named Entity Recognition using Hun-
dreds of Thousands of Features. In Proceedings of
CoNLL-2003.
Andrew McCallum and Wei Li. 2003. Early results
for Named Entity Recognition with Conditional
Random Fields, Feature Induction and Web-
Enhanced Lexicons. In Proceedings of CoNLL-
2003.
Robert Munro, Daren Ler, and Jon Patrick.
2003. Meta-Learning Orthographic and Contex-
tual Models for Language Independent Named En-
tity Recognition. In Proceedings of CoNLL-2003.
Eric W. Noreen. 1989. Computer-Intensive Methods
for Testing Hypotheses. John Wiley & Sons.
Lance A. Ramshaw and Mitchell P. Marcus.
1995. Text Chunking Using Transformation-Based
Learning. In Proceedings of the Third ACL Work-
shop on Very Large Corpora, pages 82?94. Cam-
bridge, MA, USA.
Helmut Schmid. 1995. Improvements in Part-of-
Speech Tagging with an Application to German.
In Proceedings of EACL-SIGDAT 1995. Dublin,
Ireland.
Erik F. Tjong Kim Sang. 2002. Introduction to the
CoNLL-2002 Shared Task: Language-Independent
Named Entity Recognition. In Proceedings of
CoNLL-2002, pages 155?158. Taipei, Taiwan.
C.J. van Rijsbergen. 1975. Information Retrieval.
Buttersworth.
English test Precision Recall F?=1
Florian 88.99% 88.54% 88.76?0.7
Chieu 88.12% 88.51% 88.31?0.7
Klein 85.93% 86.21% 86.07?0.8
Zhang 86.13% 84.88% 85.50?0.9
Carreras (a) 84.05% 85.96% 85.00?0.8
Curran 84.29% 85.50% 84.89?0.9
Mayfield 84.45% 84.90% 84.67?1.0
Carreras (b) 85.81% 82.84% 84.30?0.9
McCallum 84.52% 83.55% 84.04?0.9
Bender 84.68% 83.18% 83.92?1.0
Munro 80.87% 84.21% 82.50?1.0
Wu 82.02% 81.39% 81.70?0.9
Whitelaw 81.60% 78.05% 79.78?1.0
Hendrickx 76.33% 80.17% 78.20?1.0
De Meulder 75.84% 78.13% 76.97?1.2
Hammerton 69.09% 53.26% 60.15?1.3
Baseline 71.91% 50.90% 59.61?1.2
German test Precision Recall F?=1
Florian 83.87% 63.71% 72.41?1.3
Klein 80.38% 65.04% 71.90?1.2
Zhang 82.00% 63.03% 71.27?1.5
Mayfield 75.97% 64.82% 69.96?1.4
Carreras (a) 75.47% 63.82% 69.15?1.3
Bender 74.82% 63.82% 68.88?1.3
Curran 75.61% 62.46% 68.41?1.4
McCallum 75.97% 61.72% 68.11?1.4
Munro 69.37% 66.21% 67.75?1.4
Carreras (b) 77.83% 58.02% 66.48?1.5
Wu 75.20% 59.35% 66.34?1.3
Chieu 76.83% 57.34% 65.67?1.4
Hendrickx 71.15% 56.55% 63.02?1.4
De Meulder 63.93% 51.86% 57.27?1.6
Whitelaw 71.05% 44.11% 54.43?1.4
Hammerton 63.49% 38.25% 47.74?1.5
Baseline 31.86% 28.89% 30.30?1.3
Table 5: Overall precision, recall and F?=1 rates ob-
tained by the sixteen participating systems on the
test data sets for the two languages in the CoNLL-
2003 shared task.
Casey Whitelaw and Jon Patrick. 2003. Named En-
tity Recognition Using a Character-based Proba-
bilistic Approach. In Proceedings of CoNLL-2003.
Dekai Wu, Grace Ngai, and Marine Carpuat. 2003.
A Stacked, Voted, Stacked Model for Named En-
tity Recognition. In Proceedings of CoNLL-2003.
Tong Zhang and David Johnson. 2003. A Robust
Risk Minimization based Named Entity Recogni-
tion System. In Proceedings of CoNLL-2003.
Memory-Based Named Entity Recognition using Unannotated Data
Fien De Meulder and Walter Daelemans
CNTS - Language Technology Group
University of Antwerp
{Fien.DeMeulder,Walter.Daelemans}@ua.ac.be
Abstract
We used the memory-based learner Timbl
(Daelemans et al, 2002) to find names in En-
glish and German newspaper text. A first sys-
tem used only the training data, and a number
of gazetteers. The results show that gazetteers
are not beneficial in the English case, while
they are for the German data. Type-token gen-
eralization was applied, but also reduced per-
formance. The second system used gazetteers
derived from the unannotated corpus, as well as
the ratio of capitalized versus uncapitalized use
of each word. These strategies gave an increase
in performance.
1 Introduction
This paper describes a memory-based approach to learn-
ing names in English and German newspaper text.
The first system used no unannotated data - only the
provided training material, and a number of gazetteers.
It was shown that the gazetteers made for a better per-
formance in the German task, but not in the English task.
Type-token generalization was helpful for neither English
nor German.
The second system used unannotated data, but only for
the English task. The extra data were used in two ways:
first, more gazetteers were derived from the corpus by
exploiting conjunctions: if in a conjunction of capitalized
strings one string is recognized as being a certain type
of name, the other strings are assumed to be of the same
type and stored in a new gazetteer. This list was then used
to construct an additional feature for training the machine
learning algorithm. The second approach counts how of-
ten each word form in the additional corpus is capitalized,
and how often it is not. This is used as another feature for
the learning algorithm.
2 Memory Based Learning
We used Timbl (Daelemans et al, 2002), a memory-
based learner. When presented with training instances,
the learner stores them all, and then classifies new data
on the basis of its k nearest neighbours in the training set.
Before classification, the learner assigns weights to each
of the features, marking their importance for the learning
task. Features with higher weights are treated as more
important in classification as those with lower weights.
Timbl has some parameters which can be adjusted in
order to improve learning. For the NER system described
in this paper, we varied the parameters k and m. k is the
number of nearest neighbours Timbl looks at. m deter-
mines the feature metrics, i.e. the importance weights
given to each feature, and the way similarity between
values of the same feature is computed. This parame-
ter can be adjusted separately for each feature. The two
metrics used were weighted overlap and modified value
difference.
3 System 1: Description
3.1 Features
For the basic English system, 37 features were used. The
first seven features were the lowercase versions of the fo-
cus word, and a context of three words to the left and the
right. The next seven features were the part-of-speech
tags of the same seven words. Then followed seven fea-
tures indicating for each of the seven words if they were
capitalized or not. The next six features represented the
first and last three letters of the word to be classified.
These features were included in order to make it possible
for the memory-based learner to use word-internal infor-
mation. Frequent prefixes and suffixes can thus be used
to learn names. Finally, ten features indicated if the focus
word appears in any of the gazetteers used for this task.
These gazetteers are discussed in more detail in the next
section.
For the German system, the same features were used,
with an additional seven features: for each word in the
seven-word window, the stem of the word was also in-
cluded.
3.2 Gazetteers
Ten gazetteers were used to provide features. These
gazetteers listed names of all four kinds, as well as words
which often appear inside names (such as International
(for organization names) and de (for person names)).
3.3 Type ? token generalization
A module was created to generalize NE tags from types
to tokens. It is a simple program which assumes that if
two capitalized words have the same form, they will also
have the same NE tag. This is potentially problematic,
because many words can be used either as part of a name
or not, and in this case it indeed proved to be unhelpful.
4 System 2: Description
For the extended English system, four more features were
added to each instance: the first four indicated if the focus
word was part of a named entity found in a list of named
entities derived from the unannotated data. The second
new feature indicated if the focusword is capitalized or
uncapitalized most often in the unannotated data.
4.1 Gazetteers extracted from conjunctions
First, potential names were identified in the unannotated
data. This was done using the gazetteers which were
used for the first system, and a simple grammar of names.
Then we looked for all conjunctions of capitalized strings
in the unannotated data. If one of the strings was tagged
in its entirety as being of one NE type, and no other
strings in the conjunction had another NE tag, it was hy-
pothesized that all strings in this conjunction were of the
same type. All strings would then be stored in a gazetteer
of NEs of that type.
The next step was to add four more features to the
training and test sets of the NE system. In the training and
test texts, strings of capitalized words were matched with
the strings in the newly made gazetteers. All instances
were enlarged by four binary features, one for each type
of NE (L, M, O, P). These features are on when the fo-
cus word (and its context in the case of a longer name)
matches a string in the associated gazetteer, and off when
it does not.
4.2 Ratio of capitalized to non-capitalized
occurrence of tokens
A last feature added to all instances indicated if the focus
word (the word to be classified) appears more often cap-
italized or uncapitalized in the unannotated corpus. This
approach has been used earlier by (Collins, 2002). In
order to make this feature, a list was made of all word-
forms, converted to lowercase, in the corpus, and the ra-
tio of capitalized to uncapitalized occurrences. The extra
feature was binary: on if a word appears more often cap-
italized than not, and off otherwise.
5 System 1: Discussion of results
5.1 Role of gazetteers
Two experiments were run to assess the importance of
the gazetteers in this experiment: the first used only the
word to be classified and its context, the second used bi-
nary features indicating inclusion in gazetteers, as well
as the features used in the first experiment. Perhaps sur-
prisingly, the English system did worse when gazetteer
information was used. This was true using the default pa-
rameter settings, and also after (limited) separate param-
eter optimization. The German system did slightly better
on the development data when gazetteers were used.
The difference between the English and German sys-
tems is very surprising, as the lists were not adjusted to
include extra German names. They contain mainly En-
glish and Dutch names, as a result of previous work on
Dutch and English. In order to find an explanation, we
looked at the performance (not optimized) of the lists on
their own, not using any context or word-internal infor-
mation at all. The result did not make things at all clearer:
the precision of the lists on the German data was striking,
even more so than on the English data.
English devel. Precision Recall F?=1
No gazetteers 84.09% 85.20% 84.64
With gazetteers 78.27% 78.11% 78.19
Only gazetteers 49.20% 33.82% 40.08
German devel. Precision Recall F?=1
No gazetteers 60.63% 48.36% 53.80
With gazetteers 61.35% 49.87% 55.02
Only gazetteers 29.53% 5.75% 9.62
Table 1: Role of gazetteers
5.2 Type ? token generalization
Type-token generalization was attempted only on the En-
glish data. The intuition behind this approach is that a
memory-based learner may recognize a name due to its
context, but it will not generalize the classification to
other tokens of the same type. However, a concern is
that mistakes will be introduced by generalizing ambigu-
ous words to the wrong type, and by repeating mistakes
which would otherwise occur only sporadically. In the
end, introducing generalization did not make much of
a difference. While precision declines marginally (two
more phrases were incorrectly tagged as names), recall is
unaffected.
The results in Table 2 were derived using Timbl with
default parameters. The lack of optimization explains the
low result even without generalization.
5.3 Parameter optimization and feature selection
Parameter optimization was used both for system 1 and
for system 2. This was combined with limited feature
selection. The difference feature selection can make, is
already obvious from the results above, and will be shown
English devel. Precision Recall F?=1
No generalization 75.90% 82.88% 79.23
With generalization 75.87% 82.88% 79.22
Table 2: Role of type ? token generalization
in the rest of the paper also. Parameter optimization can
have a major effect on performance of machine learning
systems in general, and Timbl in particular, as can be seen
in Table 3.
As was shown by Daelemans and Hoste (2002), param-
eter optimization and feature selection heavily interact in
machine learning: separate optimization leads to inferior
results to interleaved optimization. Different parameter
settings might be best for different feature selections, and
vice versa. It would therefore be best to optimize both
at the same time, treating feature selection and parameter
optimization together as one search space. This was done
to a very limited extent for this problem, but because of
the time needed for each experiment, a full search of the
solution space was impossible.
Another restriction is the fact that not all parameters of
the learner were optimized, again due to time constraints.
The two that were found to have a great effect were used
only. These are k, the number of nearest neighbours taken
into account when classifying a new instance, and m, the
feature metric. m was toggled between weighted overlap
and modified value difference.
The results shown in Table 3 are those on the consis-
tently best featureset found, i.e. the one using all infor-
mation minus gazetteers.
On the German data, parameter optimization and fea-
ture selection were also found to be beneficial, but opti-
mization had to be cut short due to time constraints.
English devel. Precision Recall F?=1
k=1, overlap 75.88% 82.88% 79.22
k=1, mvdm 82.28% 84.69% 83.47
k=3, overlap 74.04% 80.51% 77.14
k=3, mvdm 84.09% 85.20% 84.64
k=5, overlap 72.67% 79.21% 75.80
k=5, mvdm 83.94% 84.77% 84.35
Table 3: Role of parameter optimization
6 System 2: Discussion of results
In this system, extra information is added to the train-
ing set in the following way: the number of the instances
in the training set remains the same, but the number of
features for each instance is increased. The information
for the extra instances is found in the unannotated data,
so this should bring the benefit of using this extra infor-
mation source. At the same time, only the hand-tagged
training set is used, which means that no extra noise is
introduced into the training set.
6.1 Gazetteers extracted from conjunctions
In this step, four new features were added to each instance
in the training and test sets, one for each type of NE.
Even though gazetteers were already in use, we ex-
tracted new gazetteers from the unannotated data. The
hope was that these gazetteers would be more useful for
this particular task, as they would be corpus-specific. The
gazetteers which were used originally, and which did not
improve performance, were mainly taken off the inter-
net, and partially hand-crafted. This means that they are
general-purpose gazetteers. Also, they were a mixture
of Dutch and English names. The new gazetteers were
only English, and only included those names which were
found in the Reuters corpus.
Once the gazetteers were extracted, their entries were
matched against the text in the training data. When a
string of words in the training data matched a name, this
would be reflected in the new features. For example, if
New York was found both in the locations gazetteer and in
the training set, then both New and York would receive a
feature value Ltag (for location tag) for the newly added
location feature. The results in Table 4 show that this
strategy was successful.
The results were found using Timbl with default set-
tings.
English devel. Precision Recall F?=1
Only context 75.88% 82.88% 79.22
With old lists 70.40% 75.73% 72.97
With new lists 77.58% 83.81% 80.58
Table 4: Effect of corpus-specific gazetteers
6.2 Ratio of capitalized to non-capitalized
occurrence of tokens
Next, another feature was added to the training and test
instances. This feature is another binary feature, and it in-
dicates if the focus word of the instance is found more of-
ten in its capitalized form, or in its non-capitalized form.
This feature can help the process of NER in different
ways. One of them is the identification of sentence-initial
words. They are always capitalized in English, but if they
tend to appear uncapitalized more often, they are proba-
bly not a name. Another way they can help is in finding
words which are sometimes names, and sometimes ordi-
nary words (e.g. Apple). They should not be tagged as a
name if the uncapitalized version occurs more frequently.
This approach was also successful. Results shown in
Table 5 were once again obtained by using Timbl with
default settings.
English devel. Precision Recall F?=1
No cap. info 75.88% 82.88% 79.22
With cap. info 77.18% 84.20% 80.54
Table 5: Effect of capitalization/non-capitalization ratio
6.3 Combination of conjunction lists and
capitalization information
Finally, all features were combined, and a number of op-
timization and (limited) feature selection runs were exe-
cuted. The best run found used all five of the extra fea-
tures derived from the unannotated data. This is good
news, because it means that using unannotated data can
help to improve NER of English.
Both results shown in Table 6 are those of the best runs
after optimization.
English devel. Precision Recall F?=1
No extra data 84.09% 85.20% 84.64
With extra data 84.75% 87.06% 85.89
Table 6: Effect of using unannotated data and optimiza-
tion runs
7 Conclusion
In the plain learning problem (i.e. using only annotated
data), our system used only context and word-internal in-
formation. Type ? token generalization was never benefi-
cial, and gazetteers helped only for the German task.
When using unannotated data, performance was im-
proved in two ways: extra gazetteers were constructed by
exploiting conjunctions, and words which appear mostly
in capitalized form were set apart from those that do not.
8 Acknowledgements
The authors would like to thank Erik Tjong Kim Sang for
his help with data preprocessing, as well as for helpful
hints in the construction of the system.
References
Michael Collins. 2002. Ranking Algorithms for Named-
Entity Extraction: Boosting and the Voted Perceptron.
In Proceedings of the 40th Annual Meeting of the As-
sociation for Computational Linguistics (ACL), pages
489?496, Philadelphia.
English devel. Precision Recall F?=1
LOC 87.59% 91.02% 89.27
MISC 84.97% 81.56% 83.23
ORG 74.54% 79.27% 76.83
PER 89.49% 91.53% 90.50
overall 84.75% 87.06% 85.89
English test Precision Recall F?=1
LOC 77.25% 87.35% 81.99
MISC 71.67% 73.50% 72.57
ORG 70.36% 68.03% 69.18
PER 81.52% 81.01% 81.27
overall 75.84% 78.13% 76.97
German devel. Precision Recall F?=1
LOC 56.75% 69.43% 62.45
MISC 74.82% 41.78% 53.62
ORG 52.49% 36.58% 43.11
PER 67.74% 50.96% 58.17
overall 61.35% 49.87% 55.02
German test Precision Recall F?=1
LOC 59.68% 62.22% 60.93
MISC 66.49% 37.01% 47.56
ORG 48.77% 35.83% 41.31
PER 76.67% 61.59% 68.31
overall 63.93% 51.86% 57.27
Table 7: Best results obtained for English using the unan-
notated data, and for German using only the training data
and gazetteers
Walter Daelemans and Ve?ronique Hoste. 2002. Evalu-
ation of Machine Learning Methods for Natural Lan-
guage Processing Tasks. In Proceedings of the Third
International Conference on Language Resources and
Evaluation (LREC 2002), pages 755?760, Las Palmas,
Gran Canaria.
Walter Daelemans, Jakub Zavrel, Ko van der Sloot,
and Antal van den Bosch. 2002. TiMBL: Tilburg
Memory Based Learner, version 4.3, Reference Guide.
ILK Technical Report 02-10, ILK. Available from
http://ilk.kub.nl/downloads/pub/papers/ilk0210.ps.gz.
Fien De Meulder, Walter Daelemans, and Ve?ronique
Hoste. 2002. A Named Entity Recognition System
for Dutch. In M. Theune, A. Nijholt, and H. Hondrop,
editors, Computational Linguistics in the Netherlands
2001. Selected Papers from the Twelfth CLIN Meeting,
pages 77?88, Amsterdam ? New York. Rodopi.
