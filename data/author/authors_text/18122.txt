Proceedings of COLING 2014, the 25th International Conference on Computational Linguistics: Technical Papers,
pages 1533?1542, Dublin, Ireland, August 23-29 2014.
Empirical Analysis of Aggregation Methods
for Collective Annotation
Ciyang Qing, Ulle Endriss, Raquel Fern
?
andez and Justin Kruger
Institute for Logic, Language and Computation
University of Amsterdam
{qciyang | justin.g.kruger}@gmail.com
{ulle.endriss | raquel.fernandez}@uva.nl
Abstract
We investigate methods for aggregating the judgements of multiple individuals in a linguistic
annotation task into a collective judgement. We define several aggregators that take the relia-
bility of annotators into account and thus go beyond the commonly used majority vote, and we
empirically analyse their performance on new datasets of crowdsourced data.
1 Introduction
Human annotation of linguistic resources has become indispensable in computational linguistics, es-
pecially with regards to semantic and pragmatic information, which is yet beyond the reach of robust
automatic labelling. Most annotation campaigns involve a small group of trained annotators who may
not always agree on their judgements. The reliability of the annotation is typically assessed by quan-
tifying the level of inter-annotator agreement, while the final annotation to be released is consensuated
amongst experts. In recent years, however, crowdsourcing methods such Amazon?s Mechanical Turk
(AMT) have shaken up this scenario by making it possible to rapidly recruit large numbers of untrainned
annotators at a low cost. This offers great opportunities?in particular, if we consider that the community
of speakers is the highest authority regarding linguistic knowledge?but also creates several challenges:
amongst others, how to obtain good quality annotations from untrainned and unmonitored individuals,
and how to combine large numbers of possibly conflicting judgements into a single joint annotation. In
this paper we focus on the latter challenge. Our aim is to investigate and empirically test methods for
aggregating the judgements of large numbers of individuals in a linguistic annotation task conducted via
crowdsourcing into a collective judgement.
Most researchers who turn to crowdsourcing to collect data use majority voting to combine the par-
ticipants? responses (Sayeed et al., 2011; Zarcone and R?ud, 2012; Venhuizen et al., 2013). Although in
the limit it makes sense to take the judgement of the majority as reflecting the view of the community,
in practice we cannot reach out to the full population of speakers, which means that the possible biases
amongst the participants we manage to recruit may distort the outcome. Also, given the nature of crow-
sourcing (rewarding speed rather than quality), some participants may not respond truthfully according
to their intuitions as speakers. To address these issues, we propose aggregation methods that go beyond
majority voting by taking into account the reliability of individual annotators at the time of aggregation.
1
Our approach is related to existing work on analysing the quality of annotated data by examining, for
instance, (dis)agreement patterns amongst annotators (Bhardwaj et al., 2010; Peldszus and Stede, 2013;
Ramanath et al., 2013). However, while the main aim of this kind of studies is to gain insight into the
difficulty of an annotation task or into the feasibility of using untrainned annotators for particular tasks,
our focus is on exploiting patterns of judgements for the purpose of aggregation into a single collective
annotation?an aspect that has received far less attention in the literature.
We make the following contributions: (i) we make available two new datasets of judgements gathered
with AMT for two multi-category annotation tasks; (ii) we define several aggregation methods based, on
This work is licensed under a Creative Commons Attribution 4.0 International Licence. Page numbers and proceedings footer
are added by the organisers. Licence details: http://creativecommons.org/licenses/by/4.0/
1
Other aspects can contribute to reduce the shortcomings of crowdsourcing at earlier stages, such as task design and anno-
tator recruiting constraints. However, here we specifically deal with improving quality at the time of aggregation.
1533
the one hand, on an approach by inspired by social choice theory (Endriss and Fern?andez, 2013; Kruger
et al., 2014), and on the other hand, on probabilistic generative models pioneered by Dawid and Skene
(1979); and (iii) we systematically evaluate the performance of the proposed methods on three different
annotation tasks.
2
The paper is structured as follows: In the next section, we introduce our aggregation methods. In
Section 3, we evaluate their performance on different datasets and analyse the results. We then examine
two further aspects: the impact of the number of annotators in Section 4 and the presence of highly
unreliable annotators in Section 5. We conclude in Section 6 with plans for future work.
2 Aggregation Methods
In this section, we define several methods for deriving a collective judgement in a linguistic annotation
task from a set of individual annotations. We focus on simple classification tasks where collecting these
individual annotations via a crowdsourcing platform is feasible.
2.1 Notation and Terminology
In our model, an annotation task consists of three finite sets: the items J , the categories K, and the
annotators N . Each annotator is asked to label some of the items with a category. A group annotation A
is an |N | ? |J | matrix, with a
ij
representing the category k ? K that annotator i ? N assigned to item
j ? J . Let N
j
denote the set of annotators who annotated item j (i.e., a
ij
is undefined if i 6? N
j
).
We want to aggregate the information contained in a group annotation into a single collective annota-
tion that assigns a category to each item. An aggregator is a function F that maps a group annotation A
into a collective annotation F (A), a vector of categories with dimensionality |J | labelling every item with
a category. The most widely used aggregator is the simple plurality rule (SPR)?known as simple major-
ity in the two-category case?which returns a collective annotation where each item j is labelled with the
category chosen most often for j by the group, i.e., SPR(A)
j
? argmax
k?K
|{i ? N
j
| a
ij
= k}|. Since
the SPR may lead to a tie, if we require a single category for each item, a tie-breaking method (such as
random tie-breaking) must be adopted. For the purposes of this paper, we assign the special category
?undecided? whenever an aggregator produces a tie (this is reasonable also in practice: we would not
want to commit to a randomly chosen category for an annotated linguistic resource).
2.2 Frequency-based Aggregation
In previous work, we introduced (Endriss and Fern?andez, 2013) and further refined (Kruger et al., 2014)
a framework for deriving a collective annotation inspired by social choice theory. They propose so-called
bias-correcting rules (BCR?s), which try to take the reliability of annotators into account by considering
the frequencies with which annotators choose certain categories. For example, if annotator i uses cate-
gory k very often, then this might be a sign that i is overusing k and we should give her votes for k less
weight. However, if k is also a frequent choice of the population of annotators at large, then this might
again temper that effect.
For a given group annotation A, define the individual frequency of annotator i choosing category k?
Freq
i
(k)?as the number of times i chooses k, divided by the total number of items she annotates. Define
the global frequency of k?Freq(k)?as the number of times k is chosen by someone, divided by the total
number of individual annotations. Thus, if Freq
i
(k) is high, particularly if Freq
i
(k) > Freq(k), we may
want to give a relatively low weight to any instance of annotator i choosing catgeory k.
Every BCR defines a family of weights w
ik
, specifying for each annotator i ? N and each category
k ? K how much weight to give to i?s choice of k:
F
w
(A)
j
? argmax
k?K
?
i?N
j
|a
ij
=k
w
ik
2
The new datasets and an implementation of our aggregation methods are available at http://www.illc.uva.nl/
Resources/CollectiveAnnotation/.
1534
Diff difference-based BCR w
ik
= 1 + Freq(k)? Freq
i
(k)
Com complement-based BCR w
ik
= 1 + 1/|K| ? Freq
i
(k)
Rat ratio-based BCR w
ik
= Freq(k)/Freq
i
(k)
Inv inverse-based BCR w
ik
= 1/Freq
i
(k)
Table 1: Weights used for canonical Bias Correcting Rules.
In case of a tie, we assign category ?undecided?. Table 1 defines the weights for four specific BCR?s.
Thus, for example, if an annotator uses k in 50% of the cases, while the general population only uses k
in 20% of all cases, then under Diff she has weight 0.7 whenever she chooses k. Note that Com and Inv
do not take global frequencies into account, while Diff and Rat do.
2.3 Agreement-based Aggregation
Suppose each item has a true (but unknown) category (its gold standard). We may view an annotator?s
judgement as a noisy signal of the gold standard. We now want to design an aggregator as a maximum
likelihood estimator for this ground truth. This approach has been pioneered by Dawid and Skene (1979).
Variants have been used for diverse purposes by, amongst others, Snow et al. (2008), Carpenter (2008),
Raykar et al. (2010), Ipeirotis et al. (2010), Li et al. (2013), and Passonneau and Carpenter (2013).
Let p(a
ij
= k | g
j
= k
?
), with k not necessarily distinct from k
?
, be the probability of agent i ? N
j
annotating item j with category k ? K, given that the gold standard category of j is k
?
? K. If we can
obtain estimates of these probabilities, then we can use them to calibrate the weights of the annotators.
The challenge, particularly for multi-category annotation tasks, is that the number of probabilities to
estimate is fairly large (in particular, it is quadratic in |K|). To be able to provide reasonable estimates,
we need a large amount of data from every individual annotator. But this precisely we do not have in
crowdsourcing: we have a lot of data, but it comes from many different annotators. We thus make two
simplifying assumptions, aimed at aggressively reducing the number of parameters to estimate:
3
(1) We assume that p(a
ij
=k
?
| g
j
=k
?
), i.e., annotator i?s probability of choosing the correct category,
does not depend on either j or k
?
. It only depends on i?s accuracy. Thus, we can abbreviate
acc
i
:= p(a
ij
=k
?
| g
j
=k
?
).
(2) We assume that when annotator i does not choose the correct category k
?
, then she is equally likely
to pick any of the wrong categories k 6= k
?
: p(a
ij
=k | g
j
=k
?
) =
1?acc
i
|K|?1
.
Assumption (1) is not uncommon (Li et al., 2013), but it clearly is a limiting assumption: accuracy not
depending on j means that we cannot model the fact that some items are more difficult to label correctly;
accuracy not depending on k means that we cannot model the fact that some categories are harder to
comprehend than others. Assumption (2) and its alternatives only come into play when there are more
than two categories; as large parts of the literature focus on the two-category case, this issue has received
less attention. One of the limitations of assumption (2) is that we cannot model that some categories may
?look similar? and are likely to get confused with each other.
On the positive side, in our simplified model we only have a single parameter to estimate for each
annotator, namely its accuracy acc
i
. Now suppose, hypothetically, we knew the acc
i
?s (which we do not
in practice). Which category should we pick for item j? To answer this question we need to consider
probabilities such as p(g
j
= k | A
j
), the probability that k is the true category for item j given our
observation of column A
j
. If we do not want to make any assumptions regarding possible priors for
either gold standards or annotation biases (i.e., if we opt for the default assumption of uniform priors),
then we can instead work with p(A
j
| g
j
= k). Specifically, we should choose k over k
?
if p(A
j
| g
j
=
k) > p(A
j
| g
j
=k
?
), i.e., if:
?
i|a
ij
=k
acc
i
?
i|a
ij
=k
?
1?acc
i
|K|?1
?
i|a
ij
6?{k,k
?
}
1?acc
i
|K|?1
>
?
i|a
ij
=k
?
acc
i
?
i|a
ij
=k
1?acc
i
|K|?1
?
i|a
ij
6?{k,k
?
}
1?acc
i
|K|?1
?
i|a
ij
=k
(|K|?1)?acc
i
1?acc
i
>
?
i|a
ij
=k
?
(|K|?1)?acc
i
1?acc
i
3
That is, we are trading generality of the model against estimation quality of its parameters (see also Section 3.4).
1535
Taking logarithms on both sides, we see that giving each annotator a weight of log
(|K|?1)?acc
i
1?acc
i
results in
an optimal aggregator. Let us call the corresponding aggregator the oracle rule Ora. Importantly, this
is not a practically useful rule, as in reality we do not know the acc
i
?s. As we shall see, however, it is a
useful benchmark, as it allows us to distinguish between loss in quality due to the simplicity of our model
and loss in quality accrued during estimation (given that Ora is perfect w.r.t. the latter dimension).
4
In practice, we need to estimate the acc
i
?s. We use a particularly simple method and estimate acc
i
as
i?s agreement agr
i
with the SPR, defined as follows:
5
agr
i
:=
|{j ? J | a
ij
= SPR(A)
j
}|+ 0.5
|{j ? J | i annotates j}|+ 1
We call the rule we obtain using this method, i.e., the rule giving weight log
(|K|?1)?agr
i
1?agr
i
to annotator i,
the agreement-based rule Agr. There are two natural refinements of Agr one might consider. First, we
could attempt to take priors regarding gold standards into account. If p(k) is the prior probability of
encountering (true) category k, then we get p(g
j
= k | A
j
) ? p(A
j
| g
j
= k) ? p(k). This corresponds
to adding log p(k) as an extra weight in favour of category k. We can estimate p(k) using either Freq(k)
or the SPR. The second possible refinement is to iterate the process used to estimate acc
i
, i.e., to use Agr
in place of SPR to compute better estimates agr
?
i
of acc
i
, and so forth. That is, we could use the EM
algorithm (Dawid and Skene, 1979) to estimate acc
i
. As we shall see, Agr outperforms both of these
refinements for the datasets considered in this paper.
3 Performance on Different Datasets
In this section, we evaluate the performance of our aggregation methods on three datasets from three
different categorical annotation tasks for which gold standard annotations are readily available. One of
these tasks?Recognising Textual Entailment?is a binary classification task and includes non-expert
annotations collected by Snow et al. (2008). The other two tasks?Preposition Sense Disambiguation
and Question Dialogue Acts?are multi-category tasks for which we have collected new crowdsourced
annotations for the purposes of the present study.
6
3.1 Recognising Textual Entailment (RTE)
This dataset is based on the task proposed by Dagan et al. (2006) in the PASCAL Recognizing Textual
Entailment (RTE) Challenge. The RTE task involves deciding whether the meaning of a sentence (the hy-
pothesis) can be inferred from a text. The original RTE1 Challenge testset consists of 800 text-hypothesis
pairs (e.g., T :?In central Antioquia two ranges of the Colombian Andeas meet?, H:?Antioquia is in
Colombia.?) with a gold standard annotation that classifies each of them as either true (1) or false (0),
depending on whether H can be inferred from T or not. The released expert annotation is perfectly
balanced, with 400 items annotated as 0 and 400 as 1.
Snow et al. (2008) used Amazon?s Mechanical Turk (AMT) to collect 10 non-expert annotations for
each of the 800 items. The annotation task included a total of 164 AMT workers who annotated between
20 items (124 annotators) and 800 items each (only one annotator). Amongst the non-expert annotations,
category 1 is slightly more frequent (? 57%) than category 0.
Table 2a shows the results of applying the aggregation rules (and the oracle rule) to this data. Here
(as later in Tables 2b and 2c), the first columns shows observed agreement (A) between the collective
annotation output by each rule and the gold standard.
7
The following columnss show precision and
recall for each category. We can see that all rules outperform the SPR.
8
Agr yields better results (93.3%)
4
Snow et al. (2008) used Dawid and Skene?s model to calibrate annotator judgements in terms of the gold standard. In
contrast, we only use Ora as a benchmark to get a better understanding of the limitations of our probabilistic model.
5
The smoothing terms (0.5 and 1) ensure that agr
i
will never be 0 or 1, i.e., log
(|K|?1)?agr
i
1?agr
i
is always well-defined.
6
For practical reasons, we have opted for evaluating our methods against a gold standard. However, we note that in linguistic
tasks, especially those concerning semantics and pragmatics, there may simply not be a ?true? category?a collective annotation
may be the closest we can get to representing the view of the community.
7
All aggregators assign category ?undecided? in case of a tie. Therefore, any ties are counted as instances of disagreement.
8
The SPR leads to 65 ties; the other rules lead to none.
1536
A 0 1
SPR 0.856 .96/.79 .91/.93
Com 0.916 .93/.90 .91/.93
Inv 0.893 .87/.92 .91/.87
Diff 0.915 .94/.88 .89/.95
Rat 0.908 .94/.88 .88/.94
Agr 0.933 .93/.93 .93/.94
[Ora] 0.941 .93/.96 .96/.93
(a) RTE
A 1 2 3
SPR 0.813 .89/.96 .82/.40 .82/.92
Com 0.820 .87/.95 .70/.46 .82/.92
Inv 0.807 .88/.95 .62/.51 .82/.85
Diff 0.833 .86/.96 .80/.46 .82/.93
Rat 0.840 .87/.96 .81/.49 .82/.93
Agr 0.827 .85/.98 .88/.40 .80/.93
[Ora] 0.833 .85/.98 .88/.43 .81/.93
(b) PSD
A 1 2 3 4
SPR 0.857 .86/.98 .87/1.0 .92/.75 .90/.42
Com 0.870 .87/.98 .87/1.0 .88/.77 .88/.49
Inv 0.877 .91/.91 .94/.98 .84/.77 .72/.73
Diff 0.867 .84/.98 .87/1.0 .89/.78 .91/.44
Rat 0.870 .84/.99 .87/1.0 .92/.77 .91/.47
Agr 0.867 .84/.99 .87/1.0 .92/.77 .91/.44
[Ora] 0.870 .85/.99 .87/1.0 .92/.77 .91/.47
(c) QDA
Table 2: Observed agreement with the gold standard and precision/recall per category for each task.
than any of the BCR?s in this case. For the SPR, category 1 has higher recall than precision, while the
opposite is the case for category 0. This is in line with the slightly higher frequency of category 1 in the
AMT annotations. The BCR?s should be able to correct for this bias and to some extent they do (note
the increase in category 0?s recall: 88% or higher for any of the BCR?s vs. 79% for the SPR). In this
dataset, the best-performing BCR is Com (91.6% agreement), keeping a good balance between precision
and recall for both categories. If we use the refinement of Agr with priors, then the observed agreement
drops slightly (to 92.9% if we estimate gold standard distributions using Freq(k), and to 93.1% if we use
the SPR). If we use the EM algorithm to estimate acc
i
, the system stabilises after six iterations and the
resulting rule also does slightly worse than Agr (93.0%).
3.2 Preposition Sense Disambiguation (PSD)
This annotation task is based on the dataset used in the SemEval 2007 task on word-sense disambigua-
tion of prepositions (Litkowski and Hargraves, 2007). The SemEval dataset consists of roughly 25,000
sentences each containing one of the 34 most common English prepositions. The gold standard annota-
tion was constructed by a single lexicographer who tagged each preposition instance with a sense from
the sense inventories given by the Oxford Dictionary of English (ODE).
For our non-expert data collection, we used the 150 sentences with the preposition among, which
according to ODE has four senses. We simplified the task by collapsing senses 3 and 4, as there is only
one item classified with sense 4 by the gold standard and that sense is closest to sense 3.
9
The annotation
task was conducted using AMT. We showed the workers the following sense definitions of among and
asked them to select the appropriate sense for each sentence:
(1) situated more or less centrally in relation to other things, e.g., ?There are flowers hidden among the roots of the trees.?
(2) being a member of a larger set, e.g., ?Snakes are among the animals most feared by man.?
(3) shared by some members of a group or community, e.g., ?Members of the government bickered among themselves.?
The distribution of categories according to the gold standard is 37.3%, 23.3%, and 39.3% for sense 1, 2,
and 3, respectively. The non-expert annotation task included 45 AMT workers who annotated between
15 items (26 annotators) and 150 items each (only one annotator; another annotated 135 items). Amongst
the AMT annotations, the relative frequency of the categories is 40.6%, 18.8%, and 40.6%, respectively.
The results are shown in Table 2b.
10
The rules with the highest agreement with the gold standard are
Diff (83.3%) and Rat (84%), i.e., the rules that take into account the global frequency of the categories.
Rat outperforms not only the other three BCR?s and the SPR (81.3%) but also Agr (82.7%) and Ora
(83.3%). Recall for sense 2 (the rarest category) is low across rules, although less so for the BCR?s,
which manage to correct slightly for the annotators? bias against this category.
11
9
The original ODE sense definitions for among can be found at http://tinyurl.com/ode-among.
10
The SPR leads to 6 ties; the other rules lead to none. The two refinements of Agr (priors and EM) do not affect the outcome.
11
After inspecting the data, we suspect that the gold standard overuses sense 2. For instance, in the folowing sentence among
is tagged with sense 2 although sense 1 seems more appropriate: ?[. . . ] like icebergs 90 per cent is under the water and that is
making them incredibly difficult to see among the waves.?
1537
3.3 Question Dialogue Acts (QDA)
The second dataset we collected is based on the Switchboard corpus (Godfrey et al., 1992). The cor-
pus includes a gold standard annotation prepared by trained annotators, labelling each utterance with a
dialogue act tag from the SWBD-DAMSL annotation scheme (Jurafsky et al., 1997).
For our crowdsourcing experiment, we restricted ourselves to four types of question dialogue acts:
Yes-No questions, Wh-questions, Declarative questions (including both declarative wh- and yes-no ques-
tions), and Rhetorical questions. We extracted 300 questions from the corpus, 35% of which were anno-
tated as Yes-No in the gold standard, 30% as Wh, 20% as Declarative, and 15% as Rhetorical. The AMT
workers were shown the following category definitions (here slightly simplified for space reasons):
(1) Yes-No: Questions with a standard form that could be answered with ?yes? or ?no? (?Is that the only pet that you have??)
(2) Wh: Questions with a standard form that ask for specific information using wh-words (?What kind of pet do you have??)
(3) Declarative: Questions with a statement-like form that nevertheless ask for an answer (?You have how many pets.?)
(4) Rhetorical: Questions that do not need to be answered. They can have the form of any of the question types above, but
they are asked only to make a point (?If I ever wanted to have a pet, how could I work??)
Each item consists of a short dialogue fragment showing three utterances before and after the question
to be annotated. The AMT workers were asked to classify the highlighted question with one of the four
question types above. Here is a sample item (with reduced context for space reasons):
A: I understand.
A: Where is home for you?
B: Originally, was born in Missouri.
A total of 63 AMT workers participated in the annotation task, annotating between 10 items (24 an-
notators) and 200 items each (only one annotator). Amongst these non-expert annotations, the relative
frequencies for category 1 to 4 are 36.6%, 34.1%, 18.4%, and 10.9%, respectively.
Table 2c shows the results of applying the aggregation rules to this data, plus the outcome of the oracle.
12
Inv yields the best result (87.7%), even outperforming Ora (87%). The annotators tend to overuse the
common categories (1 and 2), resulting in high recall but low precision. In contrast, the less frequent
categories (3 and 4) tend to be underused, resulting in high precision but low recall. Note how applying
Inv leads to particularly high recall for rhetorical questions (category 4). The price to pay is the drop in
precision for this category compared to the other rules. The dual effect is that precision for Yes-No (1)
and Wh (2) is higher with Inv than with the other rules, while recall is lower.
3.4 Comparative Analysis
First, let us compare Agr and Ora. The good performance of Agr suggests that our simple probabilistic
model is not too simplistic; the trade-off between loss in generality and gain in ability to estimate param-
eters mentioned in Section 2 appears to be appropriate. The fact that Ora outperforms Agr only slightly
suggests that the number of parameters in our model is sufficiently small to be estimated well using the
amount of data typically available in linguistic annotation taks conducted via crowdsourcing.
Second, the fact that Agr (modestly) outperforms its refinement using an estimated prior can be ex-
plained by the fact that, in our datasets, annotators tend to overuse frequent categories and underuse rare
categories. The reason why iterating the rule used to estimate accuracies did not improve performance
of Agr for our datasets is less clear, but may be related to the well-known fact that EM can get stuck in a
local optimum. The positive take-away message is that the simplest form of our agreement rule resulted
in the best performance (at least for our three datasets).
Third, the differences in performance between different BCR?s point at an interesting difference in
types of bias. Recall that Com and Inv judge the reliability of an annotator only in terms of her own
annotations and penalise frequent use of a category. Diff and Rat correct for this effect in case the global
frequency is high as well. This means that if a population of annotators has a shared bias against or in
favour of a category, then Diff and Rat cannot track this well. This explains the fact that Com outperforms
Diff and Inv outperforms Rat in the QDA data (see Table 2c): in this task many annotators appeared to
12
The SPR leads to 7 ties; the other rules to none. Once again, the observed agreement for Agr drops slightly for the two
refinements discussed (priors and EM).
1538
3 4 5 6 7 8 9 100.70
0.75
0.80
0.85
0.90
0.95
SPRComInvDiff
RatAgrOra
(a) RTE
3 4 5 6 7 8 9 100.74
0.76
0.78
0.80
0.82
0.84
SPRComInvDiff
RatAgrOra
(b) PSD
3 4 5 6 7 8 9 100.78
0.80
0.82
0.84
0.86
0.88
SPRComInvDiff
RatAgrOra
(c) QDA
Figure 1: Observed agreement with the gold standard (y-axis) for varying NAI (x-axis).
have difficulties recognising rhetorical questions, i.e., they had a shared bias against labelling an item as
Rhetorical. For a dataset with clear individual biases, on the other hand, we would expect Diff/Rat to
outperform Com/Inv. We do not have a clear case of such a phenomenon in the data analysed here. For
the PSD task, Diff/Rat do outperform Com/Inv (see Table 2b), but we believe that the explanation for this
finding is a different one: Arguably, the gold standard annotation overuses category 2 (see Footnote 11).
This means that high-quality annotators are seen as underusing it and get penalised by Com/Inv. For
Diff/Rat this effect is tempered by the fact that the population as a whole is underusing category 2
(relative to the questionable gold standard).
Finally, much can be learned from contraposing the frequency- and agreement-based approach. Sup-
pose the gold standard is uniformly distributed (as for RTE). Then the expected value of Freq
i
(k) is
1
|K|
,
i.e., it does not depend on acc
i
at all. Thus, the two approaches track entirely different parameters, yet
both achieve respectable results. This suggests that combining them might prove fruitful (see Section 5).
Certainly, an approach based on a richer probabilistic model would be able to track both kinds of parame-
ters, but as we had argued, this might be infeasible with the relatively small amount of data per annotator
we can collect through crowdsourcing. In some sense, what we have done with our rules is trying to
make up for the scarcity of data by exploiting our domain knowledge (e.g., regarding the relationships
between observed frequency and annotator reliability) to reduce the parameter space.
4 Impact of Number of Annotators
The cost and quality of an annotated linguistic resource created via crowdsourcing crucially depends on
the number of annotators that label each item. Having low numbers of coders will make the task more
affordable (in terms of time and money), but it will also make the aggregation process more vulnerable
to low-quality annotators. Snow et al. (2008) showed how the number of annotators per item (henceforth
NAI) influences the performance of the SPR. Here we further explore the impact of NAI on the quality
of the collective annotation obtained by different aggregation methods.
For each of the three datasets and each NAI n (3 6 n 6 9), we randomly resampled n annotations for
each set of items presented to a worker in one go (i.e., for each HIT in AMT terminology). This allowed
us to generate a subset of the original dataset with n annotators per item. We generated 1000 such random
subsets for each n, applied our aggregators to each subset (and also computed the oracle outcome). We
then calculated the average observed agreement with the gold standard. To test whether the differences
observed are statistically significant, we calculated the difference in performance between pairs of rules
on each subset and computed the 95% (one-sided) confidence intervals by using its distribution over the
1000 subsets. If the proportion of subsets on which this difference is strictly greater than 0 is higher than
95%, we consider the difference to be significant.
The results are shown in Figure 1. We can see that, as the NAI increases, the performance of the
rules generally improves (except for the oscillation of the SPR due to tie-breaking). This improvement
is greater when the NAI is small (from 3 to 5), which suggest that a minimum of 5 annotators per item is
1539
0 6
SPR 0.856 0.911
Com 0.916 0.930
Inv 0.893 0.933
Diff 0.915 0.928
Rat 0.908 0.926
Agr 0.933 0.929
[Ora] 0.941 0.944
(a) RTE
0 9
SPR 0.813 0.820
Com 0.820 0.840
Inv 0.807 0.840
Diff 0.833 0.820
Rat 0.840 0.833
Agr 0.827 0.827
[Ora] 0.833 0.827
(b) PSD
0 6
SPR 0.857 0.867
Com 0.870 0.883
Inv 0.877 0.903
Diff 0.867 0.873
Rat 0.870 0.877
Agr 0.867 0.867
[Ora] 0.870 0.883
(c) QDA
Table 3: Effect on observed agreement when removing 6 spammers in RTE, 9 in PSD, and 6 in QDA.
recommended. We can also observe that Agr has a robust performance on all datasets when the NAI is
between 5 and 7: its improvement over the SPR is statistically significant in all cases for the three tasks,
except on PSD when NAI is 7, in which case it is neither significantly better nor significantly worse
than the SPR. Note that in all datasets Agr only needs 6 or 7 annotators per item to achieve an accuracy
comparable to the SPR using 10 annotators per item.
The robustness of Agr with low NAI is not surprising, given that it already assigns low weights to
workers who consistently disagree with the majority. Discounting such problematic workers is partic-
ularly important when there are relatively few workers per item. But as the NAI increases, it becomes
more likely that random annotators will cancel each other out. It is then that we observe the greatest
advantage of using BCR?s. This can be seen in the plots for PSD and QDA with high NAI. In those
cases the improvement of the best performing BCR?s (Rat on PSD and Inv on QDA) over the other rules
approaches significance although does not reach the 95% threshold (e.g., on QDA when the NAI is 9,
Inv is strictly better than Agr for 93.4% of the subsets).
5 Removal of Low-Quality Annotators
Next we discuss how removing easily recognisable low-quality annotators (?spammers?) before aggre-
gation affects the quality of results. The BCR?s make the implicit assumption that annotators are sincere.
This can be problematic, given the nature of crowdsourcing, where it is not uncommon to encounter
workers giving random rather than truthful responses (Sheng et al., 2008; Raykar and Yu, 2012). BCR?s
are vulnerable to this phenomenon. Here we propose to combine the frequency- and agreement-based
approach by using the agreement rate of an annotator with the SPR outcome to identfy and remove
spammers prior to applying the frequency-based BCR?s.
We take spammers to be those annotators that annotate a large number of items (i.e., we have sufficient
evidence to judge) and that systematically deviate from the plurality outcome. In the specific context of
our datasets, we have implemented this idea by labelling as spammers those annotators who annotated
at least 20% of the total number of items and whose agreement rate with the SPR is below the median
agreement rate. This corresponds to 6 annotators in the RTE dataset, 9 in the PSD dataset, and 6 in the
QDA dataset. The effect of removing these low-quality annotators from the population can be seen in
Table 3 showing observed agreement of the different aggregation rules (and the oracle rule) with the gold
standard before and after spammer removal.
The results show that, with one exception, after removing spammers the performance of the BCR?s
improves significantly. The exception concerns Diff and Rat for the PSD dataset. Recall that the gold
standard for this dataset, arguably, overuses category 2 (see Footnote 11 and Section 3.4). That is, high-
quality annotators are (wrongly) judged to be underusing category 2. Before spammer removal, this effect
is tempered by the presence of a few annotators delivering ?random? annotations (thereby artificially
increasing the frequency of category 2). After spammer removal, this positive effect is diminished and
rules such as Diff and Rat suffer in performance. Con and Inv, on the other hand, can compensate for this
effect simply by giving very high weights to those (high-quality) annotators who still use the relatively
rare category 2. Also for RTE and QDA, amongst the BCR?s the rules not based on global frequencies,
i.e., Com and Inv, benefit most. Indeed, after spammer removal Com/Inv perform better than Diff/Rat
for all three datasets. Overall, Inv with spammer removal is our best-performing rule.
1540
Not surprisingly, Agr and Ora gain relatively little from spammer removal since, given our definition of
a spammer, the removed annotators already had very low weights to begin with. In fact, the performance
of these aggregation rules may even drop slightly after removing spammers (see Tables 3a and 3b).
6 Conclusions
We have argued that simply using the majority/plurality rule to aggregate individual linguistic judgments
in a crowdsourcing annotation task is far from optimal. Instead, we have proposed several methods that
weight the annotators? judgements by exploiting either the frequency with which they choose particular
categories or the degree to which they agree with the full population of annotators. We have tested
our methods on existing datasets and we have also created two new datasets. Our results show how
annotation tasks with different characteristics can benefit from different types of aggregation methods.
Our aggregation methods result in small but robust gains across datasets, both in terms of accuracy
achieved and in terms of the number of annotators required to obtain acceptable results.
Besides BCR?s, in our previous work we also proposed a greedy consensus rule, albeit only for the
two-category case (Endriss and Fern?andez, 2013) . This rule sequentially locks in simple majorities in
the order of relative majority strength, but along the way disregards annotators who disagree with too
many of those strong majorities. It performs well on the RTE dataset (almost as well as Agr). Intuitively
speaking, it can track item difficulty, by first settling the easy items (with clear majorities) and thereby
learning which annotators are most reliable to then have them decide on the harder items. Here we have
not included this rule as there is no single most natural way of generalising it to the multi-category case.
Arriving at such a generalisation in a principled manner is an important direction for future work.
It would also be interesting to get a clearer understanding of the links between methods for assessing
inter-annotator agreement (Artstein and Poesio, 2008) and methods of aggregation (i.e., methods that
may be applied to data of possibly rather poor inter-annotator agreement, as is the case for parts of our
datasets). A relevant observation in this context is that the notions of individual and global frequency at
the core of our BCR?s also play a role in agreement coefficients, namely to compute chance agreement:
pi (Scott, 1955) uses global frequencies and ? (Cohen, 1960) uses individual frequencies.
While the definition of Agr was motivated by a simple probabilistic model, the BCR?s were motivated
by rules of thumb regarding links between observed frequencies and reliability. We have noted before
that the BCR?s do not track the same phenomena as Agr; rather, they seem to complement each other, an
observation we have exploited explicitly when removing spammers before applying a BCR. Identifying
a suitable probabilistic model for our frequency-based BCR?s promises to be a fruitful future line of
research, as it would allow for a better comparison (and eventually integration) of the two approaches.
References
Ron Artstein and Massimo Poesio. 2008. Inter-coder agreement for computational linguistics. Computational
Linguistics, 34(4):555?596.
Vikas Bhardwaj, Rebecca J Passonneau, Ansaf Salleb-Aouissi, and Nancy Ide. 2010. Anveshan: a framework for
analysis of multiple annotators? labeling behavior. In Proc. 4th Linguistic Annotation Workshop, pages 47?55.
ACL.
Bob Carpenter. 2008. Multilevel Bayesian Models of Categorical Data Annotation. Technical report, LingPipe.
Jacob Cohen. 1960. A coefficient of agreement for nominal scales. Educational and Psychological Measurement,
20(1):37?46.
Ido Dagan, Oren Glickman, and Bernardo Magnini. 2006. The PASCAL recognising textual entailment challenge.
In Machine Learning Challenges, volume 3944 of LNCS, pages 177?190. Springer-Verlag.
Alexander P. Dawid and Allan M. Skene. 1979. Maximum likelihood estimation of observer error-rates using the
EM algorithm. Applied Statistics, 28(1):20?28.
Ulle Endriss and Raquel Fern?andez. 2013. Collective annotation of linguistic resources: Basic principles and
a formal model. In Proc. 51st Annual Meeting of the Association for Computational Linguistics (ACL-2013),
pages 539?549.
1541
John J. Godfrey, Edward C. Holliman, and Jane McDaniel. 1992. SWITCHBOARD: Telephone Speech Corpus
for Research and Devlopment. In Proc. IEEE Conference on Acoustics, Speech, and Signal Processing, pages
517?520.
Panagiotis G. Ipeirotis, Foster Provost, and Jing Wang. 2010. Quality Management on Amazon Mechanical Turk.
In Proc. 2nd Human Computation Workshop (HCOMP-2010).
Dan Jurafsky, Elizabeth Shriberg, and Debra Biasca. 1997. Switchboard SWBD-DAMSL shallow-discourse-
function-annotation coder?s manual, draft 13. Technical Report TR 97-02, Institute for Cognitive Science,
University of Colorado at Boulder.
Justin Kruger, Ulle Endriss, Raquel Fern?andez, and Ciyang Qing. 2014. Axiomatic analysis of aggregation meth-
ods for collective annotation. In Proc. 13th Int?l Conference on Autonomous Agents and Multiagent Systems
(AAMAS-2014), pages 1185?1192. IFAAMAS.
Hongwei Li, Bin Yu, and Dengyong Zhou. 2013. Error rate analysis of labeling by crowdsourcing. In Proc.
Machine Learning meets Crowdsourcing, Workshop at the Int?l Conference on Machine Learning (ICML-2013).
Kenneth C. Litkowski and Orin Hargraves. 2007. SemEval-2007 Task 06: Word-Sense Disambiguation of Prepo-
sitions. In Proc. 4th Int?l Workshop on Semantic Evaluations (SemEval-2007).
Rebecca J. Passonneau and Bob Carpenter. 2013. The benefits of a model of annotation. In Proc. 7th Linguistic
Annotation Workshop, pages 187?195. ACL.
Andreas Peldszus and Manfred Stede. 2013. Ranking the annotators: An agreement study on argumentation
structure. In Proc. 7th Linguistic Annotation Workshop, pages 196?204. ACL.
Rohan Ramanath, Monojit Choudhury, Kalika Bali, and Rishiraj Saha Roy. 2013. Crowd prefers the middle path:
A new iaa metric for crowdsourcing reveals turker biases in query segmentation. Proc. 51st Annual Meeting of
the Association for Computational Linguistics (ACL-2013), pages 1713?1722.
Vikas Raykar and Shipeng Yu. 2012. Eliminating spammers and ranking annotators for crowdsourced labeling
tasks. Journal of Machine Learning Research, 13:491?518.
Vikas Raykar, Shipeng Yu, Linda Zhao, Gerardo Hermosillo Valadez, Charles Florin, Luca Bogoni, and Linda
Moy. 2010. Learning from crowds. Journal of Machine Learning Research, 11:1297?1322.
Asad Sayeed, Bryan Rusk, Martin Petrov, Hieu Nguyen, Timothy Meyer, and Amy Weinber. 2011. Crowdsourcing
syntactic relatedness judgements for opinion mining in the study of information technology adoption. In Proc.
Workshop on Language Technology for Cultural Heritage, Social Sciences, and Humanities (LaTeCH-2011).
William A. Scott. 1955. Reliability of content analysis: the case of nominal scale coding. Public Opinion
Quaterly, 19(3):321?325.
Victor S. Sheng, Foster Provost, and Panagiotis G. Ipeirotis. 2008. Get another label? Improving data quality and
data mining using multiple, noisy labelers. In Proc. 14th ACM Int?l Conference on Knowledge Discovery and
Data Mining (KDD-208).
Rion Snow, Brendan O?Connor, Daniel Jurafsky, and Andrew Y. Ng. 2008. Cheap and fast?but is it good?
Evaluating non-expert annotations for natural language tasks. In Proc. Conference on Empirical Methods in
Natural Language Processing (EMNLP-2008), pages 254?263.
Noortje Venhuizen, Valerio Basile, Kilian Evang, and Johan Bos. 2013. Gamification for word sense labeling. In
Proc. 10th Int?l Conference on Computational Semantics (IWCS-2013), pages 397?403.
Alessandra Zarcone and Stefan R?ud. 2012. Logical metonymies and qualia structures: An annotated database of
logical metonymies for German. In Proc. Language Resources and Evaluation Conference (LREC-2012), pages
1799?1804.
1542
Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 539?549,
Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational Linguistics
Collective Annotation of Linguistic Resources:
Basic Principles and a Formal Model
Ulle Endriss and Raquel Ferna?ndez
Institute for Logic, Language & Computation
University of Amsterdam
{ulle.endriss|raquel.fernandez}@uva.nl
Abstract
Crowdsourcing, which offers new ways
of cheaply and quickly gathering large
amounts of information contributed by
volunteers online, has revolutionised the
collection of labelled data. Yet, to create
annotated linguistic resources from this
data, we face the challenge of having to
combine the judgements of a potentially
large group of annotators. In this paper
we investigate how to aggregate individual
annotations into a single collective anno-
tation, taking inspiration from the field of
social choice theory. We formulate a gen-
eral formal model for collective annotation
and propose several aggregation methods
that go beyond the commonly used major-
ity rule. We test some of our methods on
data from a crowdsourcing experiment on
textual entailment annotation.
1 Introduction
In recent years, the possibility to undertake large-
scale annotation projects with hundreds or thou-
sands of annotators has become a reality thanks to
online crowdsourcing methods such as Amazon?s
Mechanical Turk and Games with a Purpose. Al-
though these techniques open the door to a true
revolution for the creation of annotated corpora,
within the computational linguistics community
there so far is no clear understanding of how the
so-called ?wisdom of the crowds? could or should
be used to develop useful annotated linguistic re-
sources. Those who have looked into this increas-
ingly important issue have mostly concentrated on
validating the quality of multiple non-expert an-
notations in terms of how they compare to ex-
pert gold standards; but they have only used sim-
ple aggregation methods based on majority voting
to combine the judgments of individual annotators
(Snow et al, 2008; Venhuizen et al, 2013).
In this paper, we take a different perspective and
instead focus on investigating different aggrega-
tion methods for deriving a single collective an-
notation from a diverse set of judgments. For this
we draw inspiration from the field of social choice
theory, a theoretical framework for combining the
preferences or choices of several individuals into
a collective decision (Arrow et al, 2002). Our aim
is to explore the parallels between the task of ag-
gregating the preferences of the citizens participat-
ing in an election and the task of combining the
expertise of speakers taking part in an annotation
project. Our contribution consists in the formula-
tion of a general formal model for collective an-
notation and, in particular, the introduction of sev-
eral families of aggregation methods that go be-
yond the commonly used majority rule.
The remainder of this paper is organised as fol-
lows. In Section 2 we introduce some basic termi-
nology and argue that there are four natural forms
of collective annotation. We then focus on one of
them and present a formal model for it in Sec-
tion 3. We also formulate some basic principles
of aggregation within this model in the same sec-
tion. Section 4 introduces three families of ag-
gregation methods: bias-correcting majority rules,
greedy methods for identifying (near-)consensual
coalitions of annotators, and distance-based aggre-
gators. We test the former two families of aggrega-
tors, as well as the simple majority rule commonly
used in similar studies, in a case study on data ex-
tracted from a crowdsourcing experiment on tex-
tual entailment in Section 5. Section 6 discusses
related work and Section 7 concludes.
2 Four Types of Collective Annotation
An annotation task consists of a set of items, each
of which is associated with a set of possible cate-
gories (Artstein and Poesio, 2008). The categories
may be the same for all items or they may be item-
specific. For instance, dialogue act annotation
539
(Allen and Core, 1997; Carletta et al, 1997) and
word similarity rating (Miller and Charles, 1991;
Finkelstein et al, 2002) involve choosing from
amongst a set of categories?acts in a dialogue
act taxonomy or values on a scale, respectively?
which remains fixed for all items in the annotation
task. In contrast, in tasks such as word sense la-
belling (Kilgarriff and Palmer, 2000; Palmer et al,
2007; Venhuizen et al, 2013) and PP-attachment
annotation (Rosenthal et al, 2010; Jha et al, 2010)
coders need to choose a category amongst a set of
options specific to each item?the possible senses
of each word or the possible attachment points in
each sentence with a prepositional phrase.
In either case (one set of categories for all items
vs. item-specific sets of categories), annotators are
typically asked to identify, for each item, the cat-
egory they consider the best match. In addition,
they may be given the opportunity to indicate that
they cannot judge (the ?don?t know? or ?unclear?
category). For large-scale annotation projects run
over the Internet it is furthermore very likely that
an annotator will not be confronted with every sin-
gle item, and it makes sense to distinguish items
not seen by the annotator from items labelled as
?don?t know?. We refer to this form of annotation,
i.e., an annotation task where coders have the op-
tion to (i) label items with one of the available cat-
egories, to (ii) choose ?don?t know?, or to (iii) not
label an item at all, as plain annotation.
Plain annotation is the most common form of
annotation and it is the one we shall focus on in
this paper. However, other, more complex, forms
of annotation are also possible and of interest. For
instance, we may ask coders to rank the avail-
able categories (resulting in, say, a weak or par-
tial order over the categories); we may ask them to
provide a qualitative ratings of the available cat-
egories for each item (e.g., excellent match, good
match, etc.); or we may ask for quantitative rat-
ings (e.g., numbers from 1 to 100).1 We refer to
these forms of annotation as complex annotation.
We want to investigate how to aggregate the
information available for each item once annota-
tions by multiple annotators have been collected.
In line with the terminology used in social choice
theory and particularly judgment aggregation (Ar-
1Some authors have combined qualitative and quantitative
ratings; e.g., for the Graded Word Sense dataset of Erk et al
(2009) coders were asked to classify each relevant WordNet
sense for a given item on a 5-point scale: 1 completely differ-
ent, 2 mostly different, 3 similar, 4 very similar, 5 identical.
row, 1963; List and Pettit, 2002), let us call an ag-
gregation method independent if the outcome re-
garding a given item j only depends on the cate-
gories provided by the annotators regarding j it-
self (but not on, say, the categories assigned to a
different item j?). Independent aggregation meth-
ods are attractive due to their simplicity. They also
have some conceptual appeal: when deciding on
j maybe we should only concern ourselves with
what people have to say regarding j? On the other
hand, insisting on independence prevents us from
exploiting potentially useful information that cuts
across items. For instance, if a particular anno-
tator almost always chooses category c, then we
should maybe give less weight to her selecting c
for the item j at hand than when some other anno-
tator chooses c for j. This would call for methods
that do not respect independence, which we shall
refer to as general aggregation. Note that when
studying independent aggregation methods, with-
out loss of generality, we may assume that each
annotation task consists of just a single item.
In view of our discussion above, there are four
classes of approaches to collective annotation:
(1) Independent aggregation of plain annota-
tions. This is the simplest case, resulting in a
fairly limited design space. When, for a given
item, each annotator has to choose between
k categories (or abstain) and we do not per-
mit ourselves to use any other information,
then the only reasonable choice is to imple-
ment the plurality rule (Taylor, 2005), under
which the winning category is the category
chosen by the largest number of annotators.
In case there are exactly two categories avail-
able, the plurality rule is also called the ma-
jority rule. The only additional consideration
to make here (besides how to deal with ties)
is whether or not we may want to declare no
winner at all in case the plurality winner does
not win by a sufficiently significant margin or
does not make a particular quota. This is the
most common approach in the literature (see,
e.g., Venhuizen et al, 2013).
(2) Independent aggregation of complex annota-
tions. This is a natural generalisation of the
first approach, resulting in a wider range of
possible methods. We shall not explore it
here, but only point out that in case annotators
provide linear orders over categories, there is
a close resemblance to classical voting the-
540
ory (Taylor, 2005); in case only partial orders
can be elicited, recent work in computational
social choice on the generalisation of classi-
cal voting rules may prove helpful (Pini et al,
2009; Endriss et al, 2009); and in case an-
notators rate categories using qualitative ex-
pressions such as excellent match, the method
of majority judgment of Balinski and Laraki
(2011) should be considered.
(3) General aggregation of plain annotations.
This is the approach we shall discuss be-
low. It is related to voting in combinato-
rial domains studied in computational social
choice (Chevaleyre et al, 2008), and to both
binary aggregation (Dokow and Holzman,
2010; Grandi and Endriss, 2011) and judg-
ment aggregation (List and Pettit, 2002).
(4) General aggregation of complex annotations.
While appealing due to its great level of gen-
erality, this approach can only be tackled suc-
cessfully once approaches (2) and (3) are suf-
ficiently well understood.
3 Formal Model
Next we present our model for general aggregation
of plain annotations into a collective annotation.
3.1 Terminology and Notation
An annotation task is defined in terms of m items,
with each item j ? {1, . . . ,m} being associated
with a finite set of possible categories Cj . Anno-
tators are asked to provide an answer for each of
the items of the annotation task. In the context of
plain annotations, a valid answer for item j is an
element of the set Aj = Cj ? {?,?}.2 Here ?
represents the answer ?don?t know? and we use ?
to indicate that the annotator has not answered (or
even seen) the item at all. An annotation is a vec-
tor of answers by one annotator, one answer for
each item of the annotation task at hand, i.e., an
annotation is an element of the Cartesian product
A = A1 ? A2 ? ? ? ? ? Am. A typical element of
A will be denoted as A = (a1, . . . , am).
Let N = {1, . . . , n} be a finite set of n anno-
tators (or coders). A profile A = (A1, . . . , An) ?
An, for a given annotation task, is a vector of an-
notations, one for each annotator. That is, A is an
2As discussed earlier, in the context of complex annota-
tions, an answer could also be, say, a partial order on Cj or a
function associating elements of Cj with numerical ratings.
Item 1 Item 2 Item 3
Annotator 1 B A A
Annotator 2 B B B
Annotator 3 A B A
Majority B B A
Table 1: A profile with a collective annotation.
n?m-matrix; e.g., a3,7 is the answer that the 3rd
annotator provides for the 7th item.
We want to aggregate the information provided
by the annotators into a (single) collective anno-
tation. For the sake of simplicity, we use A also
as the domain of possible collective annotations
(even though the distinction between ? and?may
not be strictly needed here; they both indicate that
we do not want to commit to any particular cate-
gory). An aggregator is a function F : An ? A,
mapping any given profile into a collective annota-
tion, i.e., a labelling of the items in the annotation
task with corresponding categories (or ? or?). An
example is the plurality rule (also known as the
majority rule for binary tasks with |Cj | = 2 for
all items j), which annotates each item with the
category chosen most often.
Note that the collective annotation need not
coincide with any of the individual annotations.
Take, for example, a binary annotation task in
which three coders label three items with category
A or B as shown in Table 1. Here using the major-
ity rule to aggregate the annotations would result
in a collective annotation that does not fully match
any annotation by an individual coder.
3.2 Basic Properties
A typical task in social choice theory is to formu-
late axioms that formalise specific desirable prop-
erties of an aggregator F (Arrow et al, 2002). Be-
low we adapt three of the most basic axioms that
have been considered in the social choice litera-
ture to our setting and we briefly discuss their rel-
evance to collective annotation tasks.
We will require some additional notation: for
any profileA, item j, and possible answer a ? Aj ,
let NAj:a denote the set of annotators who chose
answer a for item j under profile A.
? F is anonymous if it treats coders symmetri-
cally, i.e., if for every permutation pi : N ? N ,
F (A1, . . . , An) = F (Api(1), . . . , Api(n)). In so-
cial choice theory, this is a fairness constraint.
For us, fairness per se is not a desideratum,
541
but when we do not have any a priori informa-
tion regarding the expertise of annotators, then
anonymity is a natural axiom to adopt.
? F is neutral if it treats all items symmetri-
cally, i.e., if for every two items j and j? with
the same set of possible categories (i.e., with
Cj = Cj?) and for every profile A, it is the case
that whenever NAj:a = NAj?:a for all answers
a ? Aj = Aj? , then F (A)j = F (A)j? . That
is, if the patterns of individual annotations of j
and j? are the same, then also their collective
annotation should coincide. In social choice
theory, neutrality is also considered a basic fair-
ness requirement (avoiding preferential treat-
ment one candidate in an election). In the con-
text of collective annotation there may be good
reasons to violate neutrality: e.g., we may use
an aggregator that assigns different default cat-
egories to different items and that can override
such a default decision only in the presence of
a significant majority (note that this is different
from anonymity: we will often not have any in-
formation on our annotators, but we may have
tangible information on items).3
? F is independent if the collective annotation of
any given item j only depends on the individual
annotations of j. Formally, F is independent if,
for every item j and every two profiles A and
A?, it is the case that wheneverNAj:a = NA?j:a for
all answers a ? Aj , then F (A)j = F (A?)j .
In social choice theory, independence is often
seen as a desirable albeit hard (or even impos-
sible) to achieve property (Arrow, 1963). For
collective annotation, we strongly believe that
it is not a desirable property: by considering
how annotators label other items we can learn
about their biases and we should try to exploit
this information to obtain the best possible an-
notation for the item at hand.
Note that the plurality/majority rule is indepen-
dent. All of the methods we shall propose in Sec-
tion 4 are both anonymous and neutral?except to
the extent to which we have to violate basic sym-
metry requirements in order to break ties between
categories chosen equally often for a given item.
None of our aggregators is independent.
3It would also be of interest to formulate a neutrality ax-
iom w.r.t. categories (rather than items). For two categories,
this idea has been discussed under the name of domain-
neutrality in the literature (Grandi and Endriss, 2011), but
for larger sets of categories it has not yet been explored.
Some annotation tasks might be subject to in-
tegrity constraints that determine the internal con-
sistency of an annotation. For example, if our
items are pairs of words and the possible cate-
gories include synonymous and antonymous, then
if item 1 is about words A and B, item 2 about
words B and C, and item 3 about words A and
C, then any annotation that labels items 1 and 2
as synonymous should not label item 3 as antony-
mous. Thus, a further desirable property that will
play a role for some annotation tasks is collective
rationality (Grandi and Endriss, 2011): if all in-
dividual annotations respect a given integrity con-
straint, then so should the collective annotation.
We can think of integrity constraints as impos-
ing top-down expert knowledge on an annotation.
However, for some annotation tasks, no integrity
constraints may be known to us in advance, even
though we may have reasons to believe that the
individual annotators do respect some such con-
straints. In that case, selecting one of the indi-
vidual annotations in the profile as the collective
annotation is the only way to ensure that these in-
tegrity constraints will be satisfied by the collec-
tive annotation (Grandi and Endriss, 2011). Of
course, to do so we would need to assume that
there is at least one annotator who has labelled all
items (and to be able to design a high-quality ag-
gregator in this way we should have a sufficiently
large number of such annotators to choose from),
which may not always be possible, particularly in
the context of crowdsourcing.
4 Three Families of Aggregators
In this section we instantiate our formal model by
proposing three families of methods for aggrega-
tion. Each of them is inspired, in part, by standard
approaches to desigining aggregation rules devel-
oped in social choice theory and, in part, by the
specific needs of collective annotation. Regard-
ing the latter point, we specifically emphasise the
fact that not all annotators can be expected to be
equally reliable (in general or w.r.t. certain items)
and we try to integrate the process of aggregation
with a process whereby less reliable annotators are
either given less weight or are excluded altogether.
4.1 Bias-Correcting Majority Rules
We first want to explore the following idea: If a
given annotator annotates most items with 0, then
we might want to assign less significance to that
542
choice for any particular item.4 That is, if an an-
notator appears to be biased towards a particular
category, then we might want to try to correct for
this bias during aggregation.
What follows applies only to annotation tasks
where every item is associated with the same set of
categories. For ease of exposition, let us further-
more assume that there are only two categories, 0
and 1, and that annotators do not make use of the
option to annotate with ? (?don?t know?).
For every annotator i ? N and every cate-
gory X ? {0, 1}, fix a weight wXi ? R. The
bias-correcting majority (BCM) rule for this fam-
ily of weights is defined as follows. Given profile
A, the collective category for item j will be 1 in
case?ai,j=1w1i >
?
ai,j=0w
0
i , and 0 otherwise.5
That is, we compute the overall weight for cate-
gory 1 by adding up the corresponding weights for
those coders that chose 1 for item j, and we do
accordingly for the overall weight for category 0;
finally, we choose as collective category that cate-
gory with the larger overall weight. Note that for
wXi ? 1 we obtain the simple majority rule.
Below we define three intuitively appealing
families of weights, and thereby three BCM rules.
However, before we do so, we first require some
additional notation. Fix a profile of annotations.
For X ? {0, 1}, let Freqi(X) denote the relative
frequency with which annotator i has chosen cat-
egory X . For instance, if i has annotated 20 items
and has chosen 1 in five cases, then Freqi(1) =
0.25. Similarly, let Freq(X) denote the frequency
of X across the entire profile.
Here are three ways of making the intuitive idea
of bias correction concrete:
(1) The complement-based BCM rule (ComBCM)
is defined by weights wXi = Freqi(1?X).
That is, the weight of annotator i for cate-
gory X is equal to her relative frequency of
having chosen the other category 1?X . For
example, if you annotate two items with 1 and
eight with 0, then each of your 1-annotations
will have weight 0.8, while each of your
0-annotations will only have weight 0.2.
(2) The difference-based BCM rule (DiffBCM) is
defined by weights wXi = 1 + Freq(X) ?
4A similar idea is at the heart of cumulative voting, which
requires a voter to distribute a fixed number of points amongst
the candidates (Glasser, 1959; Brams and Fishburn, 2002).
5For the sake of simplicity, our description here presup-
poses that ties are always broken in favour of 0. Other tie-
breaking rules (e.g., random tie-breaking) are possible.
Freqi(X). Recall that Freq(X) is the rela-
tive frequency ofX in the entire profile, while
Freqi(X) is the relative frequency of X in
the annotation of i. Hence, if i assigns cat-
egory X less often than the general popula-
tion, then her weight on X-choices will be in-
creased by the difference (and vice versa in
case she assigns X more often than the popu-
lation at large). For example, if you assign 1
in two out of ten cases, while in general cat-
egory 1 appears in exactly 50% of all annota-
tions, then your weight for a choice of 1 will
be 1 + 0.5? 0.2 = 1.3, while you weight for
a choice of 0 will only be 0.7.
(3) The relative BCM rule (RelBCM) is defined
by weights wXi = Freq(X)Freqi(X) . The idea is verysimilar to the DiffBCM rule. For the exam-
ple given above, your weight for a choice of
1 would be 0.5/0.2 = 2.5, while your weight
for a choice of 0 would be 0.5/0.8 = 0.625.
The main difference between the ComBCM rule
and the other two rules is that the former only takes
into account the possible bias of individual anno-
tators, while the latter two factor in as well the
possible skewness of the data (as reflected by the
labelling behaviour of the full set of annotators).
In addition, while ComBCM is specific to the
case of two categories, DiffBCM and RelBCM
immediately generalise to any number of cate-
gories. In this case, we add up the category-
specific weights as before and then choose the cat-
egory with maximal support (i.e., we generalise
the majority rule underlying the family of BCM
rules to the plurality rule).
We stress that our bias-correcting majority rules
do not violate anonymity (nor neutrality for that
matter). If we were to give less weight to a given
annotator based on, say, her name, this would con-
stitute a violation of anonymity; if we do so due to
properties of the profile at hand and if we do so in
a symmetric manner, then it does not.
4.2 Greedy Consensus Rules
Now consider the following idea: If for a given
item there is almost complete consensus amongst
those coders that annotated it with a proper cate-
gory (i.e., those who did not choose ? or ?), then
we should probably adopt their choice for the col-
lective annotation. Indeed, most aggregators will
make this recommendation. Furthermore, the fact
that there is almost full consensus for one item
543
may cast doubts on the reliability of coders who
disagree with this near-consensus choice and we
might want to disregard their views not only w.r.t.
that item but also as far as the annotation of other
items is concerned. Next we propose a family of
aggregators that implement this idea.
For simplicity, suppose that the only proper cat-
egories available are 0 and 1 and that annotators
do not make use of ? (but it is easy to generalise
to arbitrary numbers of categories and scenarios
where different items are associated with different
categories). Fix a tolerance value t ? {0, . . . ,m}.
The greedy consensus rule GreedyCRt works as
follows. First, initialise the set N ? with the full
population of annotators N . Then iterate the fol-
lowing two steps:
(1) Find the item with the strongest majority for
either 0 or 1 amongst coders in N ? and lock
in that value for the collective annotation.
(2) Eliminate all coders from N ? who disagree
on more than t items with the values locked
in for the collective annotation so far.
Repeat this process until the categories for all m
items have been settled.6 We may think of this as
a ?greedy? way of identifying a coalitionN ? with
high inter-annotator agreement and then applying
the majority rule to this coalition to obtain the col-
lective annotation.
To be precise, the above is a description of an
entire family of aggregators: Whenever there is
more than one item with a majority of maximal
strength, we could choose to lock in any one of
them. Also, when there is a split majority between
annotators in N ? voting 0 and those voting 1, we
have to use a tie-breaking rule to make a decision.
Additional heuristics may be used to make these
local decisions, or they may be left to chance.
Note that in case t = m, GreedyCRt is sim-
ply the majority rule (as no annotator will ever get
eliminated). In case t = 0, we end up with a coali-
tion of annotators that unanimously agree with all
of the categories chosen for the collective annota-
tion. However, this coalition of perfectly aligned
6There are some similarities to Tideman?s Ranked Pairs
method for preference aggregation (Tideman, 1987), which
works by fixing the relative rankings of pairs of alternatives
in order of the strength of the supporting majorities. In pref-
erence aggregation (unlike here), the population of voters is
not reduced in the process; instead, decisions against the ma-
jority are taken whenever this is necessary to guarantee the
transitivity of the resulting collective preference order.
annotators need not be the largest such coalition
(due to the greedy nature of our rule).
Note that greedy consensus rules, as defined
here, are both anonymous and neutral. Specifi-
cally, it is important not to confuse possible skew-
ness of the data with a violation of neutrality of the
aggregator.
4.3 Distance-based Aggregation
Our third approach is based on the notion of dis-
tance. We first define a metric on choices to be
able to say how distant two choices are. This in-
duces an aggregator that, for a given profile, re-
turns a collective choice that minimises the sum
of distances to the individual choices in the pro-
file.7 This opens up a wide range of possibilities;
we only sketch some of them here.
A natural choice is the adjusted Hamming dis-
tanceH : A?A ? R>0, which counts how many
items two annotations differ on:
H(A,A?) =
m?
j=1
?(aj , a?j)
Here ? is the adjusted discrete distance defined as
?(x, y) = 0 if x = y or x ? {?,?} or y ? {?,?},
and as ?(x, y) = 1 in all other cases.8
Once we have fixed a distance d on A (such
as H), this induces an aggregator Fd:
Fd(A) = argmin
A?A
n?
i=1
d(A,Ai)
To be precise, Fd is an irresolute aggregator that
might return a set of best annotations with minimal
distance to the profile.
Note that FH is simply the plurality rule. This
is so because every element of the Cartesian prod-
uct is a possible annotation. In the presence of in-
tegrity constraints excluding some combinations,
however, a distance-based rule allows for more so-
phisticated forms of aggregation (by choosing the
optimal annotation w.r.t. all feasible annotations).
We may also try to restrict the computation of
distances to a subset of ?reliable? annotators. Con-
sider the following idea: If a group of annota-
tors is (fairly) reliable, then they should have a
7This idea has been used in voting (Kemeny, 1959), belief
merging (Konieczny and Pino Pe?rez, 2002), and judgment
aggregation (Miller and Osherson, 2009).
8This ?, divided by m, is the same thing as what Artstein
and Poesio (2008) call the agreement value agrj for item j.
544
(fairly) high inter-annotator agreement. By this
reasoning, we should choose a group of annota-
tors ANN ? N that maximises inter-annotator
agreement in ANN and work with the aggrega-
tor argminA?A
?
i?ANN d(A,Ai). But this is too
simplistic: any singleton ANN = {i} will result
in perfect agreement. That is, while we can eas-
ily maximise agreement, doing so in a na??ve way
means ignoring most of the information collected.
In other words, we face the following dilemma:
? On the one hand, we should choose a small set
ANN (i.e., select few annotators to base our col-
lective annotation on), as that will allow us to
increase the (average) reliability of the annota-
tors taken into account.
? On the other hand, we should choose a large set
ANN (i.e., select many annotators to base our
collective annotation on), as that will increase
the amount of information exploited.
One pragmatic approach is to fix a minimum qual-
ity threshold regarding one of the two dimensions
and optimise in view of the other.9
5 A Case Study
In this section, we report on a case study in
which we have tested our bias-correcting major-
ity and greedy consensus rules.10 We have used
the dataset created by Snow et al (2008) for
the task of recognising textual entailment, orig-
inally proposed by Dagan et al (2006) in the
PASCAL Recognizing Textual Entailment (RTE)
Challenge. RTE is a binary classification task con-
sisting in judging whether the meaning of a piece
of text (the so-called hypothesis) can be inferred
from another piece of text (the entailing text).
The original RTE1 Challenge testset consists of
800 text-hypothesis pairs (such as T : ?Chre?tien
visited Peugeot?s newly renovated car factory?,
H: ?Peugeot manufactures cars?) with a gold
standard annotation that classifies each item as ei-
ther true (1)?in case H can be inferred from T?
or false (0). Exactly 400 items are annotated as
0 and exactly 400 as 1. Bos and Markert (2006)
performed an independent expert annotation of
9GreedyCRt is a greedy (rather than optimal) implemen-
tation of this basic idea, with the tolerance value t fixing a
threshold on (a particular form of) inter-annotator agreement.
10Since the annotation task and dataset used for our case
study do not involve any interesting integrity constraints, we
have not tested any distance-based aggregation rules.
this testset, obtaining 95% agreement between the
RTE1 gold standard and their own annotation.
The dataset of Snow et al (2008) includes 10
non-expert annotations for each of the 800 items
in the RTE1 testset, collected with Amazon?s Me-
chanical Turk. A quick examination of the dataset
shows that there are a total of 164 annotators who
have annotated between 20 items (124 annotators)
and 800 items each (only one annotator). Non-
expert annotations with category 1 (rather than 0)
are slightly more frequent (Freq(1) ? 0.57).
We have applied our aggregators to this data and
compared the outcomes with each other and to the
gold standard. The results are summarised in Ta-
ble 2 and discussed in the sequel. For each pair
we report the observed agreement Ao (proportion
of items on which two annotations agree) and, in
brackets, Cohen?s kappa ? = Ao?Ae1?Ae , with Ae be-ing the expected agreement for independent anno-
tators (Cohen, 1960; Artstein and Poesio, 2008).
Note that there are several variants of the major-
ity rule, depending on how we break ties. In Ta-
ble 2, Maj10 is the majority rule that chooses 1 in
case the number of annotators choosing 1 is equal
to the number of annotators choosing 0 (and ac-
cordingly for Maj01). For 65 out of the 800 items
there has been a tie (i.e., five annotators choose 0
and another five choose 1). This means that the tie-
breaking rule used can have a significant impact
on results. Snow et al (2008) work with a major-
ity rule where ties are broken uniformly at random
and report an observed agreement (accuracy) be-
tween the majority rule and the gold standard of
89.7%. This is confirmed by our results: 89.7%
is the mean of 87.5% (our result for Maj10) and
91.9% (our result for Maj01). If we break ties
in the optimal way (in view of approximating the
gold standard (which of course would not actu-
ally be possible without having access to that gold
standard), then we obtain an observed agreement
of 93.8%, but if we are unlucky and ties happen to
get broken in the worst possible way, we obtain an
observed agreement of only 85.6%.
For none of our bias-correcting majority rules
did we encounter any ties. Hence, for these ag-
gregators the somewhat arbitrary choices we have
to make when breaking ties are of no significance,
which is an important point in their favour. Ob-
serve that all of the bias-correcting majority rules
approximate the gold standard better than the ma-
jority rule with uniformly random tie-breaking.
545
Annotation Maj10 Maj01 ComBCM DiffBCM RelBCM GreedyCR0 GreedyCR15
Gold Standard 87.5% (.75) 91.9% (.84) 91.1% (.80) 91.5% (.81) 90.8% (.80) 86.6% (.73) 92.5% (.85)
Maj10 91.9% (.84) 88.9% (.76) 94.3% (.87) 94.0% (.87) 87.6% (.75) 91.5% (.83)
Maj01 96.0% (.91) 97.6% (.95) 96.9% (.93) 89.0% (.78) 96.1% (.92)
ComBCM 94.6% (.86) 94.4% (.86) 88.8% (.75) 93.9% (.86)
DiffBCM 98.8% (.97) 88.6% (.75) 94.8% (.88)
RelBCM 88.4% (.74) 93.8% (.86)
GreedyCR0 90.6% (.81)
Table 2: Observed agreement (and ?) between collective annotations and the gold standard.
Recall that the greedy consensus rule is in fact
a family of aggregators: whenever there is more
than one item with a maximal majority, we may
lock in any one of them. Furthermore, when there
is a split majority, then ties may be broken either
way. The results reported here refer to an imple-
mentation that always chooses the lexicographi-
cally first item amongst all those with a maximal
majority and that breaks ties in favour of 1. These
parameters yield neither the best or the worst ap-
proximations of the gold standard. We tested a
range of tolerance values. As an example, Table 2
includes results for tolerance values 0 and 15. The
coalition found for tolerance 0 consists of 46 an-
notators who all completely agree with the col-
lective annotation; the coalition found for toler-
ance 15 consists of 156 annotators who all dis-
agree with the collective annotation on at most
15 items. While GreedyCR0 appears to perform
rather poorly, GreedyCR15 approximates the gold
standard particularly well. This is surprising and
suggests, on the one hand, that eliminating only
the most extreme outlier annotators is a useful
strategy, and on the other hand, that a high-quality
collective annotation can be obtained from a group
of annotators that disagree substantially.11
6 Related Work
There is an increasing number of projects using
crowdsourcing methods for labelling data. On-
line Games with a Purpose, originally conceived
by von Ahn and Dabbish (2004) to annotate im-
ages, have been used for a variety of linguis-
tic tasks: Lafourcade (2007) created JeuxDeMots
to develop a semantic network by asking players
to label words with semantically related words;
Phrase Detectives (Chamberlain et al, 2008) has
been used to gather annotations on anaphoric co-
reference; and more recently Basile et al (2012)
11Recall that 124 out of 164 coders only annotated 20 items
each; a tolerance value of 15 thus is fairly lenient.
have developed the Wordrobe set of games for
annotating named entities, word senses, homo-
graphs, and pronouns. Similarly, crowdsourcing
via microworking sites like Amazon?s Mechanical
Turk has been used in several annotation experi-
ments related to tasks such as affect analysis, event
annotation, sense definition and word sense disam-
biguation (Snow et al, 2008; Rumshisky, 2011;
Rumshisky et al, 2012), amongst others.12
All these efforts face the problem of how to ag-
gregate the information provided by a group of
volunteers into a collective annotation. However,
by and large, the emphasis so far has been on is-
sues such as experiment design, data quality, and
costs, with little attention being paid to the aggre-
gation methods used, which are typically limited
to some form of majority vote (or taking averages
if the categories are numeric). In contrast, our fo-
cus has been on investigating different aggregation
methods for arriving at a collective annotation.
Our work has connections with the literature on
inter-annotator agreement. Agreement scores such
as kappa are used to assess the quality of an anno-
tation but do not play a direct role in constructing
one single annotation from the labellings of sev-
eral coders.13 The methods we have proposed, in
contrast, do precisely that. Still, agreement plays
a prominent role in some of these methods. In our
discussion of distance-based aggregation, we sug-
gested how agreement can be used to select a sub-
set of annotators whose individual annotations are
minimally distant from the resulting collective an-
notation. Our greedy consensus rule also makes
use of agreement to ensure a minimum level of
consensus. In both cases, the aggregators have the
effect of disregarding some outlier annotators.
12See also the papers presented at the NAACL 2010 Work-
shop on Creating Speech and Language Data with Amazon?s
Mechanical Turk (tinyurl.com/amtworkshop2010).
13Creating a gold standard often involves adjudication of
disagreements by experts, or even the removal of cases with
disagreement from the dataset. See, e.g., the papers cited by
Beigman Klebanov and Beigman (2009).
546
Other researchers have explored ways to di-
rectly identify ?low-quality? annotators. For in-
stance, Snow et al (2008) and Raykar et al (2010)
propose Bayesian methods for identifying and cor-
recting annotators? biases, while Ipeirotis et al
(2010) propose an algorithm for assigning a qual-
ity score to annotators that distinguishes intrinsic
error rate from an annotator?s bias. In our ap-
proach, we do not directly rate annotators or re-
calibrate their annotations?rather, some outlier
annotators get to play a marginal role in the re-
sulting collective annotation as a side effect of the
aggregation methods themselves.
Although in our case study we have tested our
aggregators by comparing their outcomes to a gold
standard, our approach to collective annotation it-
self does not assume that there is in fact a ground
truth. Instead, we view collective annotations as
reflecting the views of a community of speakers.14
This contrasts significantly with, for instance, the
machine learning literature, where there is a fo-
cus on estimating the hidden true label from a set
of noisy labels using maximum-likelihood estima-
tors (Dawid and Skene, 1979; Smyth et al, 1995;
Raykar et al, 2010).
In application domains where it is reasonable to
assume the existence of a ground truth and where
we are able to model the manner in which individ-
ual judgments are being distorted relative to this
ground truth, social choice theory provides tools
(using again maximum-likelihood estimators) for
the design of aggregators that maximise chances
of recovering the ground truth for a given model of
distortion (Young, 1995; Conitzer and Sandholm,
2005). In recent work, Mao et al (2013) have dis-
cussed the use of these methods in the context of
crowdsourcing. Specifically, they have designed
an experiment in which the ground truth is defined
unambiguously and known to the experiment de-
signer, so as to be able to extract realistic models
of distortion from the data collected in a crowd-
sourcing exercise.
7 Conclusions
We have presented a framework for combining
the expertise of speakers taking part in large-scale
14In some domains, such as medical diagnosis, it makes
perfect sense to assume that there is a ground truth. However,
in tasks related to linguistic knowledge and language use such
an assumption seems far less justified. Hence, a collective
annotation may be the closest we can get to a representation
of the linguistic knowledge/use of a linguistic community.
annotation projects. Such projects are becoming
more and more common, due to the availability
of online crowdsourcing methods for data annota-
tion. Our work is novel in several respects. We
have drawn inspiration from the field of social
choice theory to formulate a general formal model
for aggregation problems, which we believe sheds
light on the kind of issues that arise when trying
to build annotated linguistic resources from a po-
tentially large group of annotators; and we have
proposed several families of concrete methods for
aggregating individual annotations that are more
fine-grained that the standard majority rule that so
far has been used across the board. We have tested
some of our methods on a gold standard testset for
the task of recognising textual entailment.
Our aim has been conceptual, namely to point
out that it is important for computational linguists
to reflect on the methods used when aggregat-
ing annotation information. We believe that so-
cial choice theory offers an appropriate general
methodology for supporting this reflection. Im-
portantly, this does not mean that the concrete ag-
gregation methods developed in social choice the-
ory are immediately applicable or that all the ax-
ioms typically studied in social choice theory are
necessarily relevant to aggregating linguistic an-
notations. Rather, what we claim is that it is the
methodology of social choice theory which is use-
ful: to formally state desirable properties of ag-
gregators as axioms and then to investigate which
specific aggregators satisfy them. To put it dif-
ferently: at the moment, researchers in compu-
tational linguistics simply use some given aggre-
gation methods (almost always the majority rule)
and judge their quality on how they fare in specific
experiments?but there is no principled reflection
on the methods themselves. We believe that this
should change and hope that the framework out-
lined here can provide a suitable starting point.
In future work, the framework we have pre-
sented here should be tested more extensively, not
only against a gold standard but also in terms of
the usefulness of the derived collective annotations
for training supervised learning systems. On the
theoretial side, it would be interesting to study the
axiomatic properties of the methods of aggrega-
tion we have proposed here in more depth and to
define axiomatic properties of aggregators that are
specifically tailored to the task of collective anno-
tation of linguistic resources.
547
References
James Allen and Mark Core, 1997. DAMSL: Dialogue
Act Markup in Several Layers. Discourse Resource
Initiative.
Kenneth J. Arrow, Armatya K. Sen, and Kotaro Suzu-
mura, editors. 2002. Handbook of Social Choice
and Welfare. North-Holland.
Kenneth J. Arrow. 1963. Social Choice and Individual
Values. John Wiley and Sons, 2nd edition. First
edition published in 1951.
Ron Artstein and Massimo Poesio. 2008. Inter-coder
agreement for computational linguistics. Computa-
tional Linguistics, 34(4):555?596.
Michel Balinski and Rida Laraki. 2011. Majority
Judgment: Measuring, Ranking, and Electing. MIT
Press.
Valerio Basile, Johan Bos, Kilian Evang, and Noortje
Venhuizen. 2012. A platform for collaborative se-
mantic annotation. In Proc. 13th Conference of the
European Chapter of the Association for Computa-
tional Linguistics (EACL-2012), pages 92?96.
Beata Beigman Klebanov and Eyal Beigman. 2009.
From annotator agreement to noise models. Com-
putational Linguistics, 35(4):495?503.
Johan Bos and Katja Markert. 2006. Recognising tex-
tual entailment with robust logical inference. In Ma-
chine Learning Challenges, volume 3944 of LNCS,
pages 404?426. Springer-Verlag.
Steven J. Brams and Peter C. Fishburn. 2002. Voting
procedures. In Kenneth J. Arrow, Armartya K. Sen,
and Kotaro Suzumura, editors, Handbook of Social
Choice and Welfare. North-Holland.
Jean Carletta, Stephen Isard, Anne H. Anderson,
Gwyneth Doherty-Sneddon, Amy Isard, and Jacque-
line C. Kowtko. 1997. The reliability of a dialogue
structure coding scheme. Computational Linguis-
tics, 23:13?31.
Jon Chamberlain, Massimo Poesio, and Udo Kr-
uschwitz. 2008. Addressing the resource bottleneck
to create large-scale annotated texts. In Semantics
in Text Processing. STEP 2008 Conference Proceed-
ings, volume 1 of Research in Computational Se-
mantics, pages 375?380. College Publications.
Yann Chevaleyre, Ulle Endriss, Je?ro?me Lang, and
Nicolas Maudet. 2008. Preference handling in com-
binatorial domains: From AI to social choice. AI
Magazine, 29(4):37?46.
Jacob Cohen. 1960. A coefficient of agreement
for nominal scales. Educational and Psychological
Measurement, 20:37?46.
Vincent Conitzer and Tuomas Sandholm. 2005. Com-
mon voting rules as maximum likelihood estimators.
In Proc. 21st Conference on Uncertainty in Artificial
Intelligence (UAI-2005).
Ido Dagan, Oren Glickman, and Bernardo Magnini.
2006. The PASCAL recognising textual entail-
ment challenge. In Machine Learning Challenges,
volume 3944 of LNCS, pages 177?190. Springer-
Verlag.
Alexander Philip Dawid and Allan M. Skene. 1979.
Maximum likelihood estimation of observer error-
rates using the EM algorithm. Applied Statistics,
28(1):20?28.
Elad Dokow and Ron Holzman. 2010. Aggregation
of binary evaluations. Journal of Economic Theory,
145(2):495?511.
Ulle Endriss, Maria Silvia Pini, Francesca Rossi, and
K. Brent Venable. 2009. Preference aggrega-
tion over restricted ballot languages: Sincerity and
strategy-proofness. In Proc. 21st International Joint
Conference on Artificial Intelligence (IJCAI-2009).
Katrin Erk, Diana McCarthy, and Nicholas Gaylord.
2009. Investigations on word senses and word us-
ages. In Proc. 47th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL-2009),
pages 10?18.
Lev Finkelstein, Evgeniy Gabrilovich, Yossi Matias,
Ehud Rivlin, Zach Solan, Gadi Wolfman, and Ey-
tan Ruppin. 2002. Placing search in context: The
concept revisited. ACM Transactions on Informa-
tion Systems, 20(1):116?131.
Gerald J. Glasser. 1959. Game theory and cumula-
tive voting for corporate directors. Management Sci-
ence, 5(2):151?156.
Umberto Grandi and Ulle Endriss. 2011. Binary ag-
gregation with integrity constraints. In Proc. 22nd
International Joint Conference on Artificial Intelli-
gence (IJCAI-2011).
Panagiotis G. Ipeirotis, Foster Provost, and Jing Wang.
2010. Quality Management on Amazon Mechanical
Turk. In Proc. 2nd Human Computation Workshop
(HCOMP-2010).
Mukund Jha, Jacob Andreas, Kapil Thadani, Sara
Rosenthal, and Kathleen McKeown. 2010. Corpus
creation for new genres: A crowdsourced approach
to PP attachment. In Proc. NAACL-HLT Workshop
on Creating Speech and Language Data with Ama-
zon?s Mechanical Turk, pages 13?20.
John Kemeny. 1959. Mathematics without numbers.
Daedalus, 88:577?591.
Adam Kilgarriff and Martha Palmer. 2000. Introduc-
tion to the special issue on senseval. Computers and
the Humanities, 34(1):1?13.
Se?bastien Konieczny and Ramo?n Pino Pe?rez. 2002.
Merging information under constraints: A logical
framework. Journal of Logic and Computation,
12(5):773?808.
548
Mathieu Lafourcade. 2007. Making people play for
lexical acquisition with the JeuxDeMots prototype.
In Proc. 7th International Symposium on Natural
Language Processing.
Christian List and Philip Pettit. 2002. Aggregating sets
of judgments: An impossibility result. Economics
and Philosophy, 18(1):89?110.
Andrew Mao, Ariel D. Procaccia, and Yiling Chen.
2013. Better human computation through principled
voting. In Proc. 27th AAAI Conference on Artificial
Intelligence.
George A. Miller and Walter G. Charles. 1991. Con-
textual correlates of semantic similarity. Language
and Cognitive Processes, 6(1):1?28.
Michael K. Miller and Daniel Osherson. 2009. Meth-
ods for distance-based judgment aggregation. Social
Choice and Welfare, 32(4):575?601.
Martha Palmer, Hoa Trang Dang, and Christiane
Fellbaum. 2007. Making fine-grained and
coarse-grained sense distinctions, both manually
and automatically. Natural Language Engineering,
13(2):137?163.
Maria Silvia Pini, Francesca Rossi, K. Brent Venable,
and Toby Walsh. 2009. Aggregating partially or-
dered preferences. Journal of Logic and Computa-
tion, 19(3):475?502.
Vikas Raykar, Shipeng Yu, Linda Zhao, Gerardo Her-
mosillo Valadez, Charles Florin, Luca Bogoni, and
Linda Moy. 2010. Learning from crowds. The Jour-
nal of Machine Learning Research, 11:1297?1322.
Sara Rosenthal, William Lipovsky, Kathleen McKe-
own, Kapil Thadani, and Jacob Andreas. 2010. To-
wards semi-automated annotation for prepositional
phrase attachment. In Proc. 7th International Con-
ference on Language Resources and Evaluation
(LREC-2010).
Anna Rumshisky, Nick Botchan, Sophie Kushkuley,
and James Pustejovsky. 2012. Word sense inven-
tories by non-experts. In Proc. 8th International
Conference on Language Resources and Evaluation
(LREC-2012).
Anna Rumshisky. 2011. Crowdsourcing word sense
definition. In Proc. ACL-HLT 5th Linguistic Anno-
tation Workshop (LAW-V).
Padhraic Smyth, Usama Fayyad, Michael Burl, Pietro
Perona, and Pierre Baldi. 1995. Inferring ground
truth from subjective labelling of venus images. Ad-
vances in Neural Information Processing Systems,
pages 1085?1092.
Rion Snow, Brendan O?Connor, Daniel Jurafsky, and
Andrew Y. Ng. 2008. Cheap and fast?but is it
good? Evaluating non-expert annotations for natural
language tasks. In Proc. Conference on Empirical
Methods in Natural Language Processing (EMNLP-
2008), pages 254?263.
Alan D. Taylor. 2005. Social Choice and the Math-
ematics of Manipulation. Cambridge University
Press.
T. Nicolaus Tideman. 1987. Independence of clones
as a criterion for voting rules. Social Choice and
Welfare, 4(3):185?206.
Noortje Venhuizen, Valerio Basile, Kilian Evang, and
Johan Bos. 2013. Gamification for word sense la-
beling. In Proc. 10th International Conference on
Computational Semantics (IWCS-2013), pages 397?
403.
Luis von Ahn and Laura Dabbish. 2004. Labeling im-
ages with a computer game. In Proc. SIGCHI Con-
ference on Human Factors in Computing Systems,
pages 319?326. ACM.
H. Peyton Young. 1995. Optimal voting rules. Journal
of Economic Perspectives, 9(1):51?64.
549
