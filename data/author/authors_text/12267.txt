Proceedings of the NAACL HLT Student Research Workshop and Doctoral Consortium, pages 7?12,
Boulder, Colorado, June 2009. c?2009 Association for Computational Linguistics
Solving the ?Who?s Mark Johnson? Puzzle:
Information Extraction Based Cross Document Coreference
Jian Huang?? Sarah M. Taylor? Jonathan L. Smith? Konstantinos A. Fotiadis? C. Lee Giles?
?Information Sciences and Technology
Pennsylvania State University, University Park, PA 16802, USA
??Advanced Technology Office, Lockheed Martin IS&GS
?4350 N. Fairfax Drive, Suite 470, Arlington, VA 22203, USA
?230 Mall Blvd, King of Prussia, PA 19406, USA
Abstract
Cross Document Coreference (CDC) is the
problem of resolving the underlying identity
of entities across multiple documents and is a
major step for document understanding.
We develop a framework to efficiently
determine the identity of a person based on
extracted information, which includes unary
properties such as gender and title, as well as
binary relationships with other named entities
such as co-occurrence and geo-locations.
At the heart of our approach is a suite of
similarity functions (specialists) for matching
relationships and a relational density-based
clustering algorithm that delineates name
clusters based on pairwise similarity. We
demonstrate the effectiveness of our methods
on the WePS benchmark datasets and point
out future research directions.
1 Introduction
The explosive growth of web data offers users both
the opportunity and the challenge to discover and
integrate information from disparate sources. As
alluded to in the title, a search query of the common
name ?Mark Johnson? refers to as many as 70
namesakes in the top 100 search results from the
Yahoo! search engine, only one of whom is the
Brown University professor and co-author of an
ACL 2006 paper (see experiments). Cross document
coreference (CDC) (Bagga and Baldwin, 1998) is a
distinct technology that consolidates named entities
across documents according to their real referents.
Despite the variety of styles and content in different
text, CDC can break the boundaries of documents
and cluster those mentions referring to the same
?Contact author: jhuang@ist.psu.edu
Mark Johnson. As unambiguous person references
are key to many tasks, e.g. social network analysis,
this work focuses on person named entities. The
method can be later extended to organizations.
We highlight the key differences between our
proposed CDC system with past person name
search systems. First, we seek to transcend the
simple bag of words approaches in earlier CDC
work by leveraging state-of-the-art information
extraction (IE) tools for disambiguation. The
main advantage is that our IE based approach has
access to accurate information such as a person?s
work titles, geo-locations, relationships and other
attributes. Traditional IR approaches, on the other
hand, may naively use the terms in a document
which can significantly hamper accuracy. For
instance, an article about Hillary Clinton may
contain references to journalists, politicians who
make comments about her. Even with careful word
selection, such textual features may still confuse the
disambiguation system about the true identity of the
person. The information extraction process in our
work can thus be regarded as an intelligent feature
selection step for disambiguation. Second, after
coreferencing, our system not only yields clusters
of documents, but also structured information
which is highly useful for automated document
understanding and data mining.
We review related work on CDC next and
describe our approach in Section 3. The methods
are evaluated on benchmark datasets in Section 4.
We discuss directions for future improvement in
Section 5 and conclude in Section 6.
2 Related Work
There is a long tradition of work on the within
document coreference (WDC) problem in NLP,
7
which links named entities with the same referent
within a document into a WDC chain. State-of-
the-art WDC systems, e.g. (Ng and Cardie, 2001),
leverage rich lexical features and use supervised
and unsupervised machine learning methods.
Research on cross document coreference began
more recently. (Bagga and Baldwin, 1998) proposed
a CDC system to merge the WDC chains using the
Vector Space Model on the summary sentences.
(Gooi and Allan, 2004) simplified this approach by
eliminating the WDC module without significant
deterioration in performance. Clustering approaches
(e.g. hierarchical agglomerative clustering (Mann
and Yarowsky, 2003)) have been commonly used
for CDC due to the variety of data distributions
of different names. Our work goes beyond the
simple co-occurrence features (Bagga and Baldwin,
1998) and the limited extracted information (e.g.
biographical information in (Mann and Yarowsky,
2003) that is relatively scarce in web data) using
the broad range of relational information with the
support of information extraction tools. There
are also other related research problems. (Li et
al., 2004) solved the robust reading problem by
adopting a probabilistic view on how documents are
generated and how names are sprinkled into them.
Our previous work (Huang et al, 2006) resolved
the author name ambiguity problem based on the
metadata records extracted from academic papers.
3 Methods
The overall framework of our CDC system works
as follows. Given a document, the information
extraction tool first extracts named entities and
constructs WDC chains. It also creates linkages
(relationships) between entities. The similarity
between a pair of relationships in WDC chains
is measured by an awakened similarity specialist
and the similarity between two WDC chains is
determined by the mixture of awakened specialists?
predictions. Finally, a density-based clustering
method generates clusters corresponding to real
world entities. We describe these steps in detail.
3.1 Entity and Relationship Extraction
Given a document, an information extraction
tool is first used to extract named entities and
perform within document coreference. Hence,
named entities in each document are divided into
a set of WDC chains, each chain corresponding
to one real world entity. In addition, state-of-
the-art IE tools are capable of creating relational
information between named entities. We use an
IE tool AeroText1 (Taylor, 2004) for this purpose.
Besides the attribute information about the person
named entity (first/middle/last names, gender,
mention, etc), AeroText also extracts relationship
information between named entities, such as
Family, List, Employment, Ownership, Citizen-
Resident-Religion-Ethnicity, etc, as specified in the
Automatic Content Extraction (ACE) evaluation.
The input to the CDC system is a set of WDC chains
(with relationship information stored in them) and
the CDC task is to merge these WDC chains2.
3.2 Similarity Features
We design a suite of similarity functions to
determine whether the relationships in a pair of
WDC chains match, divided into three groups:
Text similarity. To decide whether two names
in the co-occurrence or family relationship match,
we use SoftTFIDF (Cohen et al, 2003), which has
shown best performance among various similarity
schemes tested for name matching. SoftTFIDF is
a hybrid matching scheme that combines the token-
based TFIDF with the Jaro-Winkler string distance
metric. This permits inexact matching of named
entities due to name variations, spelling errors, etc.
Semantic similarity. Text or syntactic similarity is
not always sufficient for matching relationships. For
instance, although the mentions ?U.S. President?
and ?Commander-in-chief? have no textual overlap,
they are semantically highly related as they can be
synonyms. We use WordNet and the information
theory based JC semantic distance (Jiang and
Conrath, 1997) to measure the semantic similarity
between concepts in relationships such as mention,
employment, ownership and so on.
1AeroText is a text mining application for content
analysis, with main focus on information extraction
including entity extraction and intrasource link analysis
(see http://en.wikipedia.org/wiki/AeroText).
2We make no distinctions whether WDC chains are
extracted from the same document. Indeed, the CDC system
can correct the WDC errors due to lack of information for
merging named entities within a document.
8
Other rule-based similarity. Several other
cases require special treatment. For example, the
employment relationships of Senator and D-N.Y.
should match based on domain knowledge. Also,
we design rule-based similarity functions to handle
nicknames (Bill and William), acronyms (COLING
for International Conference on Computational
Linguistics), and geographical locations3.
3.3 Learning a Similarity Matrix
After the similarity features between a pair of
WDC chains are computed, we need to compute
the pairwise distance metric for clustering. (Cohen
et al, 2003) trained a binary SVM model and
interpreted its confidence in predicting the negative
class as the distance metric. In our case of using
information extraction results for disambiguation,
however, only some of the similarity features are
present based on the availability of relationships
in two WDC chains. Therefore, we treat each
similarity function as a subordinate predicting
algorithm (called specialist) and utilize the
specialist learning framework (Freund et al, 1997)
to combine the predictions. Here, a specialist is
awake only when the same relationships are present
in two WDC chains. Also, a specialist can refrain
from making a prediction for an instance if it is
not confident enough. In addition to the similarity
scores, specialists have different weights, e.g. a
match in a family relationship is considered more
important than in a co-occurrence relationship.
The Specialist Exponentiated Gradient (SEG)
(Freund et al, 1997) algorithm is adopted to learn
to mix the specialists? prediction. Given a set
of T training instances {xt} (xt,i denotes the
i-th specialist?s prediction), the SEG algorithm
minimizes the square loss of the outcome y? in an
online manner (Algorithm 1). In each learning
iteration, SEG first predict y?t using the set of awake
experts Et with respect to instance xt. The true
outcome yt (1 for coreference and 0 otherwise) is
then revealed and square loss L is incurred. SEG
then updates the weight distribution p accordingly.
To sum up, the similarity between a pair of
3Though a rich set of similarity features has been built for
matching the relationships, they may not encompass all possible
cases in real world documents. The goal of this work, however,
is to focus on the algorithms instead of knowledge engineering.
Algorithm 1 SEG (Freund et al, 1997)
Input: Initial weight distribution p1;
learning rate ? > 0; training set {xt}
1: for t=1 to T do
2: Predict using:
y?t =
?
i?Et ptixt,i?
i?Et pti
(1)
3: Observe true label yt and incur square loss
L(y?t, yt) = (y?t ? yt)2
4: Update weight distribution: for i ? Et
pt+1i = ptie?2?xt,i(y?t?yt)
?
j?Et ptj?
j?Et ptje?2?xt,i(y?t?yt)
pt+1i = pti, otherwise
5: end for
Output: Model p
WDC chains wi and wj can be represented in a
similarity matrix R, with ri,j computed by the SEG
prediction step using the learned weight distribution
p (Equation 1). A relational clustering algorithm
then clusters entities using R, as we introduce next.
3.4 Relational Clustering
The set of WDC chains to be clustered are
represented by a relational similarity matrix. Most
of the work in clustering, however, is only capable
of clustering numerical object data (e.g. K-means).
Relational clustering algorithms, on the other hand,
cluster objects based on the less direct measurement
of similarity between object pairs. We choose to
use a density based clustering algorithm DBSCAN
(Ester et al, 1996) mainly for two reasons.
First, most clustering algorithm require the
number of clusters K as an input parameter. The
optimal K can apparently vary greatly for names
with different frequency and thus is a sensitive
parameter. Even if a cluster validity index is used
to determine K, it usually requires running the
underlying clustering algorithm multiple times
and hence is inefficient for large scale data.
DBSCAN, as a density based clustering method,
only requires density parameters such as the
radius of the neighborhood ? that are universal for
different datasets. As we show in the experiment,
9
density parameters are relatively insensitive for
disambiguation performance.
Second, the distance metric in relational space
may be non-Euclidean, rendering many clustering
algorithms ineffective (e.g. single linkage clustering
algorithm is known to generate chain-shaped
clusters). Density-based clustering, on the other
hand, can generate clusters of arbitrary shapes since
only objects in dense areas are placed in a cluster.
DBSCAN induces a density-based cluster by
the core objects, i.e. objects having more than
a specified number of other data objects in their
neighborhood of size ?. In each clustering step, a
seed object is checked to determine whether it?s a
core object and if so, it induces other points of the
same cluster using breadth first search (otherwise
it?s considered as a noise point). In interest of
space, we refer readers to (Ester et al, 1996) for
algorithmic details of DBSCAN and now turn
our attention to evaluating the disambiguation
performance of our methods.
4 Experiments
We first formally define the evaluation metrics,
followed by the introduction to the benchmark test
sets and the system?s performance.
4.1 Evaluation Measures
We evaluate the performance of our method using
the standard purity and inverse purity clustering
metrics. Let a set of clusters C = {C1, ..., Cs}
denote the system?s output and a set of categories
D = {D1, ..., Dt} be the gold standard. Both C and
D are partitions of the WDC chains {w1, ..., wn}
(n = ?i |Ci| = ?j |Dj |). First, the precision of
a cluster Ci w.r.t. a category Dj is defined as,
Precision(Ci, Dj) = |Ci ?Dj ||Ci|
Purity is defined as the weighted average of the
maximum precision achieved by the clusters on one
of the categories,
Purity(C,D) =
s?
i=1
|Ci|
n maxj Precision(Ci, Dj)
Hence purity penalizes putting noise WDC chains in
a cluster. Trivially, the maximum purity (i.e. 1) can
be achieved by making one cluster per WDC chain
(referred to as the one-in-one baseline).
Reversing the role of clusters and categories,
Inverse purity(C,D) def= Purity(D, C). Inverse
Purity penalizes splitting WDC chains belonging
to the same category into different clusters. The
maximum inverse purity can be achieved by putting
all chain in one cluster (all-in-one baseline).
Purity and inverse purity are similar to the
precision and recall measures commonly used
in information retrieval. There is a tradeoff
relationship between the two and their harmonic
mean F0.5 is used for performance evaluation.
4.2 Datasets
We evaluate our methods using the benchmark
test collection from the ACL SemEval-2007 web
person search task (WePS hereafter) (Artiles et al,
2007). The test collection consists of three sets of
documents for 10 different names, sampled from
the English Wikipedia (famous people), participants
of the ACL 2006 conference (computer scientists)
and common names from the US Census data,
respectively. For each ambiguous name, the top 100
documents retrieved from the Yahoo! Search API
were annotated by human annotators according to
the actual entity of the name. This yields on average
45 different real world entities per set and about 3k
documents in total.
We note that the annotation in WePS makes the
simplifying assumption that each document refers to
only one real world person among the namesakes
in question. The CDC task in the perspective of
this paper, however, is to merge the WDC chains
rather than documents. Hence in our evaluation,
we adopt the document label to annotate the WDC
chain from the document that corresponds to the
person name search query. Despite the difference,
the results of the one-in-one and all-in-one baselines
are almost identical to those reported in the WePS
evaluation (F0.5 = 0.61, 0.40 respectively). Hence
the performance reported here is comparable to the
official evaluation results (Artiles et al, 2007).
4.3 Experiment Results
We computed the similarity features from the WDC
chains extracted from the WePS training data and
subsampled the non-coreferent pairs to generate a
10
Table 1: Cross document coreference performance
(macro-averaged scores, I-Pur denotes inverse purity).
Test set Method Purity I-Pur F0.5
Wikipedia AT-CDC 0.684 0.725 0.687
ACL-06 AT-CDC 0.792 0.657 0.712
US Census AT-CDC 0.772 0.700 0.722
Global
Average
AT-CDC 0.749 0.695 0.708
One-in-one 1.000 0.482 0.618
All-in-one 0.279 1.000 0.389
training set of around 32k pairwise instances. We
then used the SEG algorithm to learn the weight
distribution model. The macro-averaged cross
document coreference results on the WePS test
sets are reported in Table 1. The F0.5 score of our
CDC system (AT-CDC) is 0.708, comparable to the
test results of the first tier systems in the official
evaluation. The two baselines are also included.
Because the test set is very ambiguous (on average
only two documents per real world entity), the
one-in-one baseline has relatively high F0.5 score.
The Wikipedia, ACL06 and US Census sets
have on average 56, 31 and 50 entities per name
respectively. We notice that as the data set becomes
more ambiguous, purity decreases implying
it?s harder for the system to discard irrelevant
documents from a cluster. The other case is true
for inverse purity. In particular, we are interested in
how the coreference performance changes with the
number of entities per name (which can be viewed
as the ambiguity level of a data set). This is shown
in Figure 1. We observe that in general the harmonic
mean of the purity is fairly stable across different
number of entities per dataset (generally within
the band between 0.6 and 0.8). This is important
because the system?s performance does not vary
greatly with the underlying data characteristics.
There is a particular name (with only one underlying
referent) that appears to be an outlier in performance
in Figure 1. After examining the extraction results,
we notice that the extracted relationships refer to
the same person?s employment, coauthors and geo-
locations. The generated CDC clusters correctly
reflect the different aspects of the person but the
system is unable to link them together due to the
lack of information for merging. This motivates us
to further improve performance in future work.
Figure 2 shows how the coreference performance
 0
 0.2
 0.4
 0.6
 0.8
 1
 0  10  20  30  40  50  60  70  80  90  100
F(0
.5)
Number of entities per name 
Figure 1: Coreference performance for names with
different number of real world entities.
changes with different density parameter ?. We
observe that as we increase the size of the ?
neighborhood, inverse purity increases indicating
that more correct coreference decisions are made.
On the other hand, purity decreases as more noise
WDC chains appear in clusters. Due to this tradeoff
relationship, the F score is fairly stable with a wide
range of ? values and hence the density parameter is
rather insensitive (compared to, say, the number of
clusters K).
5 Future Work
We see several opportunities to improve the
coreference performance of the proposed methods.
First, though the system?s performance compares
favorably with the WePS submissions, we observe
that purity is higher than inverse purity, indicating
that the system finds it more difficult to link
coreferent documents than to discard noise from
0.3 0.35 0.4 0.45 0.5 0.550
0.2
0.4
0.6
0.8
1
?
DBSCAN with different parameter settings
Purity
Inverse Purity
F(0.5)
Figure 2: Coreference performance with different ?.
11
clusters. Thus coreferencing based solely on the
information generated by an information extraction
tool may not always be sufficient. For one, it
remains a huge challenge to develop a general
purpose information extraction tool capable of
applying to web documents with widely different
formats, styles, content, etc. Also, even if the
extraction results are perfect, relationships extracted
from different documents may be of different
types (family memberships vs. geo-locations) and
cannot be directly matched against one another. We
are exploring several methods to complement the
extracted relationships using other information:
? Context-aided CDC. The context where an named
entity is extracted can be leveraged for coreference.
The bag of words in the context tend to be less noisy
than that from the entire document. Moreover, we
can use noun phrase chunkers to extract base noun
phrases from the context. These word or phrase level
features can serve as a safenet when the IE tool fails.
? Topic-based CDC. Similar to (Li et al, 2004),
document topics can be used to ameliorate the
sparsity problem. For example, the topics Sport
and Education are important cues for differentiating
mentions of ?Michael Jordan?, which may refer to a
basketball player, a computer science professor, etc.
Second, as noted in the top WePS run (Chen and
Martin, 2007), feature development is important in
achieving good coreference performance. We aim
to improve the set of similarity specialists in our
system by leveraging large knowledge bases.
Moreover, although the CDC system is developed
in the web person search context, the methods are
also applicable to other scenarios. For instance,
there is tremendous interest in building structured
databases from unstructured text such as enterprise
documents and news articles for data mining, where
CDC is a key step for ?understanding? documents
from disparate sources. We plan to continue our
investigations along these lines.
6 Conclusions
We have presented and implemented an information
extraction based Cross Document Coreference
(CDC) system that employs supervised and
unsupervised learning methods. We evaluated
the proposed methods with experiments on a
large benchmark disambiguation collection, which
demonstrate that the proposed methods compare
favorably with the top runs in the SemEval
evaluation. We believe that by incorporating
information such as context and topic, besides the
extracted relationships, the performance of the CDC
can be further improved. We have outlined research
plans to address this and several other issues.
References
Javier Artiles, Julio Gonzalo, and Satoshi Sekine. 2007.
The SemEval-2007 WePS evaluation: Establishing a
benchmark for the web people search task. In Proc 4th
Int?l Workshop on Semantic Evaluations (SemEval).
Amit Bagga and Breck Baldwin. 1998. Entity-based
cross-document coreferencing using the vector space
model. In Proc. of 36th ACL and 17th COLING.
Ying Chen and James Martin. 2007. Towards robust
unsupervised personal name disambiguation. In
Proceedings of EMNLP and CoNLL, pages 190?198.
William W. Cohen, Pradeep Ravikumar, and Stephen E.
Fienberg. 2003. A comparison of string distance
metrics for name-matching tasks. In Proc. of IJCAI
Workshop on Information Integration on the Web.
Martin Ester, Hans-Peter Kriegel, Jorg Sander, and
Xiaowei Xu. 1996. A density-based algorithm for
discovering clusters in large spatial databases with
noise. In Proceedings of 2nd KDD, pages 226 ? 231.
Yoav Freund, Robert E. Schapire, Yoram Singer, and
Manfred K. Warmuth. 1997. Using and combining
predictors that specialize. In Proceedings of 29th ACM
symposium on Theory of computing (STOC).
Chung H. Gooi and James Allan. 2004. Cross-document
coreference on a large scale corpus. In HLT-NAACL.
Jian Huang, Seyda Ertekin, and C. Lee Giles.
2006. Efficient name disambiguation for large scale
databases. In Proc. of 10th PKDD, pages 536 ? 544.
Jay J. Jiang and David W. Conrath. 1997. Semantic
similarity based on corpus statistics and lexical
taxonomy. In Proceedings of ROCLING X.
Xin Li, Paul Morie, and Dan Roth. 2004. Robust
reading: Identification and tracing of ambiguous
names. In Proceedings of HLT-NAACL, pages 17?24.
Gideon S. Mann and David Yarowsky. 2003.
Unsupervised personal name disambiguation. In
Proceedings of HLT-NAACL, pages 33?40.
Vincent Ng and Claire Cardie. 2001. Improving machine
learning approaches to coreference resolution. In
Proceedings of the 40th ACL, pages 104?111.
Sarah M. Taylor. 2004. Information extraction
tools: Deciphering human language. IT Professional,
6(6):28 ? 34.
12
Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 414?422,
Suntec, Singapore, 2-7 August 2009. c?2009 ACL and AFNLP
Profile Based Cross-Document Coreference
Using Kernelized Fuzzy Relational Clustering
Jian Huang? Sarah M. Taylor? Jonathan L. Smith? Konstantinos A. Fotiadis? C. Lee Giles?
?College of Information Sciences and Technology
Pennsylvania State University, University Park, PA 16802, USA
{jhuang, giles}@ist.psu.edu
?Advanced Technology Office, Lockheed Martin IS&GS, Arlington, VA 22203, USA
{sarah.m.taylor, jonathan.l.smith, konstantinos.a.fotiadis}@lmco.com
Abstract
Coreferencing entities across documents
in a large corpus enables advanced
document understanding tasks such as
question answering. This paper presents
a novel cross document coreference
approach that leverages the profiles
of entities which are constructed by
using information extraction tools and
reconciled by using a within-document
coreference module. We propose to
match the profiles by using a learned
ensemble distance function comprised
of a suite of similarity specialists. We
develop a kernelized soft relational
clustering algorithm that makes use of
the learned distance function to partition
the entities into fuzzy sets of identities.
We compare the kernelized clustering
method with a popular fuzzy relation
clustering algorithm (FRC) and show 5%
improvement in coreference performance.
Evaluation of our proposed methods
on a large benchmark disambiguation
collection shows that they compare
favorably with the top runs in the
SemEval evaluation.
1 Introduction
A named entity that represents a person, an or-
ganization or a geo-location may appear within
and across documents in different forms. Cross
document coreference (CDC) is the task of con-
solidating named entities that appear in multiple
documents according to their real referents. CDC
is a stepping stone for achieving intelligent in-
formation access to vast and heterogeneous text
corpora, which includes advanced NLP techniques
such as document summarization and question an-
swering. A related and well studied task is within
document coreference (WDC), which limits the
scope of disambiguation to within the boundary of
a document. When namesakes appear in an article,
the author can explicitly help to disambiguate, us-
ing titles and suffixes (as in the example, ?George
Bush Sr. ... the younger Bush?) besides other
means. Cross document coreference, on the other
hand, is a more challenging task because these
linguistics cues and sentence structures no longer
apply, given the wide variety of context and styles
in different documents.
Cross document coreference research has re-
cently become more popular due to the increasing
interests in the web person search task (Artiles
et al, 2007). Here, a search query for a person
name is entered into a search engine and the
desired outputs are documents clustered according
to the identities of the entities in question. In
our work, we propose to drill down to the sub-
document mention level and construct an entity
profile with the support of information extraction
tools and reconciled with WDC methods. Hence
our IE based approach has access to accurate
information such as a person?s mentions and geo-
locations for disambiguation. Simple IR based
CDC approaches (e.g. (Gooi and Allan, 2004)), on
the other hand, may simply use all the terms and
this can be detrimental to accuracy. For example, a
biography of John F. Kennedy is likely to mention
members of his family with related positions,
besides references to other political figures. Even
with careful word selection, these textual features
can still confuse the disambiguation system about
the true identity of the person.
We propose to handle the CDC task using a
novel kernelized fuzzy relational clustering algo-
rithm, which allows probabilistic cluster mem-
bership assignment. This not only addresses the
intrinsic uncertainty nature of the CDC problem,
but also yields additional performance improve-
ment. We propose to use a specialist ensemble
414
learning approach to aggregate the diverse set of
similarities in comparing attributes and relation-
ships in entity profiles. Our approach is first fully
described in Section 2. The effectiveness of the
proposed method is demonstrated using real world
benchmark test sets in Section 3. We review
related work in cross document coreference and
conclude in Section 5.
2 Methods
2.1 Document Level and Profile Based CDC
We make distinctions between document level and
profile based cross document coreference. Docu-
ment level CDC makes a simplifying assumption
that a named entity (and its variants) in a document
has one underlying real identity. The assump-
tion is generally acceptable but may be violated
when a document refers to namesakes at the same
time (e.g. George W. Bush and George H. W.
Bush referred to as George or President Bush).
Furthermore, the context surrounding the person
NE President Clinton can be counterproductive
for disambiguating the NE Senator Clinton, with
both entities likely to appear in a document at the
same time. The simplified document level CDC
has nevertheless been used in the WePS evaluation
(Artiles et al, 2007), called the web people task.
In this work, we advocate profile based disam-
biguation that aims to leverage the advances in
NLP techniques. Rather than treating a document
as simply a bag of words, an information extrac-
tion tool first extracts NE?s and their relationships.
For the NE?s of interest (i.e. persons in this work),
a within-document coreference (WDC) module
then links the entities deemed as referring to
the same underlying identity into a WDC chain.
This process includes both anaphora resolution
(resolving ?He? and its antecedent ?President Clin-
ton?) and entity tracking (resolving ?Bill? and
?President Clinton?). Let E = {e1, ..., eN} denote
the set of N chained entities (each corresponding
to a WDC chain), provided as input to the CDC
system. We intentionally do not distinguish which
document each ej belongs to, as profile based
CDC can potentially rectify WDC errors by lever-
aging information across document boundaries.
Each ei is represented as a profile which contains
the NE, its attributes and associated relationships,
i.e. ej =< ej,1, ..., ej,L > (ej,l can be a textual
attribute or a pointer to another entity). The profile
based CDC method generates a partition of E ,
represented by a partition matrix U (where uij
denotes the membership of an entity ej to the i-
th identity cluster). Therefore, the chained entities
placed in a name cluster are deemed as coreferent.
Profile based CDC addresses a finer grained
coreference problem in the mention level, enabled
by the recent advances in IE and WDC techniques.
In addition, profile based CDC facilitates user
information consumption with structured informa-
tion and short summary passages. Next, we focus
on the relational clustering algorithm that lies at
the core of the profile based CDC system. We then
turn our attention to the specialist learning algo-
rithm for the distance function used in clustering,
capable of leveraging the available training data.
2.2 CDC Using Fuzzy Relational Clustering
2.2.1 Preliminaries
Traditionally, hard clustering algorithms (where
uij ? {0, 1}) such as complete linkage hierarchi-
cal agglomerative clustering (Mann and Yarowsky,
2003) have been applied to the disambiguation
problem. In this work, we propose to use fuzzy
clustering methods (relaxing the membership con-
dition to uij ? [0, 1]) as a better way of handling
uncertainty in cross document coreference. First,
consider the following motivating example,
Example. The named entity President Bush is
extracted from the sentence ?President Bush ad-
dressed the nation from the Oval Office Monday.?
? Without additional cues, a hard clustering
algorithm has to arbitrarily assign the
mention ?President Bush? to either the NE
?George W. Bush? or ?George H. W. Bush?.
? A soft clustering algorithm, on the other
hand, can assign equal probability to the two
identities, indicating low entropy or high
uncertainty in the solution. Additionally, the
soft clustering algorithm can assign lower
probability to the identity ?Governor Jeb
Bush?, reflecting a less likely (though not
impossible) coreference decision.
We first formalize the cross document corefer-
ence problem as a soft clustering problem, which
minimizes the following objective function:
JC(E) =
C?
i=1
N?
j=1
umijd2(ej ,vi) (1)
s.t.
C?
i=1
uij = 1 and
N?
j=1
uij > 0, uij ? [0, 1]
415
where vi is a virtual (implicit) prototype of the i-th
cluster (ej ,vi ? D) and m controls the fuzziness
of the solution (m > 1; the solution approaches
hard clustering as m approaches 1). We will
further explain the generic distance function d :
D ? D ? R in the next subsection. The goal
of the optimization is to minimize the sum of
deviations of patterns to the cluster prototypes.
The clustering solution is a fuzzy partition P? =
{Ci}, where ej ? Ci if and only if uij > ?.
We note from the outset that the optimization
functional has the same form as the classical
Fuzzy C-Means (FCM) algorithm (Bezdek, 1981),
but major differences exist. FCM, as most ob-
ject clustering algorithms, deals with object data
represented in a vectorial form. In our case, the
data is purely relational and only the mutual rela-
tionships between entities can be determined. To
be exact, we can define the similarity/dissimilarity
between a pair of attributes or relationships of
the same type l between entities ej and ek as
s(l)(ej , ek). For instance, the similarity between
the occupations ?President? and ?Commander in
Chief? can be computed using the JC semantic
distance (Jiang and Conrath, 1997) with WordNet;
the similarity of co-occurrence with other people
can be measured by the Jaccard coefficient. In the
next section, we propose to compute the relation
strength r(?, ?) from the component similarities
using aggregation weights learned from training
data. Hence the N chained entities to be clustered
can be represented as relational data using an n?n
matrix R, where rj,k = r(ej , ek). The Any Rela-
tion Clustering Algorithm (ARCA) (Corsini et al,
2005; Cimino et al, 2006) represents relational
data as object data using their mutual relation
strength and uses FCM for clustering. We adopt
this approach to transform (objectify) a relational
pattern ej into an N dimensional vector rj (i.e.
the j-th row in the matrix R) using a mapping
? : D ? RN . In other words, each chained entity
is represented as a vector of its relation strengths
with all the entities. Fuzzy clusters can then
be obtained by grouping closely related patterns
using object clustering algorithm.
Furthermore, it is well known that FCM
is a spherical clustering algorithm and thus
is not generally applicable to relational data
which may yield relational clusters of arbitrary
and complicated shapes. Also, the distance in
the transformed space may be non-Euclidean,
rendering many clustering algorithms ineffective
(many FCM extensions theoretically require
the underlying distance to satisfy certain metric
properties). In this work, we propose kernelized
ARCA (called KARC) which uses a kernel-
induced metric to handle the objectified relational
data, as we introduce next.
2.2.2 Kernelized Fuzzy Clustering
Kernelization (Scho?lkopf and Smola, 2002) is a
machine learning technique to transform patterns
in the data space to a high-dimensional feature
space so that the structure of the data can be more
easily and adequately discovered. Specifically, a
nonlinear transformation ? maps data in RN to
H of possibly infinite dimensions (Hilbert space).
The key idea is the kernel trick ? without explicitly
specifying ? and H, the inner product in H can
be computed by evaluating a kernel function K in
the data space, i.e. < ?(ri),?(rj) >= K(ri, rj)
(one of the most frequently used kernel func-
tions is the Gaussian RBF kernel: K(rj , rk) =
exp(???rj ? rk?2)). This technique has been
successfully applied to SVMs to classify non-
linearly separable data (Vapnik, 1995). Kerneliza-
tion preserves the simplicity in the formalism of
the underlying clustering algorithm, meanwhile it
yields highly nonlinear boundaries so that spheri-
cal clustering algorithms can apply (e.g. (Zhang
and Chen, 2003) developed a kernelized object
clustering algorithm based on FCM).
Let wi denote the objectified virtual cluster vi,
i.e. wi = ?(vi). Using the kernel trick, the
squared distance between ?(rj) and ?(wi) in the
feature space H can be computed as:
??(rj)? ?(wi)?2H (2)
= < ?(rj)? ?(wi),?(rj)? ?(wi) >
= < ?(rj),?(rj) > ?2 < ?(rj),?(wi) >
+ < ?(wi),?(wi) >
= 2? 2K(rj ,wi) (3)
assuming K(r, r) = 1. The KARC algorithm
defines the generic distance d as d2(ej ,vi) def=
??(rj)??(wi)?2H = ??(?(ej))??(?(vi))?2H
(we also use d2ji as a notational shorthand).
Using Lagrange Multiplier as in FCM, the opti-
mal solution for Equation (1) is:
uij =
?
??
??
[
C?
h=1
(
d2ji
d2jh
)1/(m?1)]?1
, (d2ji 6= 0)
1 , (d2ji = 0)
(4)
416
?(wi) =
N?
k=1
umik?(rk)
N?
k=1
umik
(5)
Since ? is an implicit mapping, Eq. (5) can
not be explicitly evaluated. On the other hand,
plugging Eq. (5) into Eq. (3), d2ji can be explicitly
represented by using the kernel matrix,
d2ji = 2? 2 ?
N?
k=1
umikK(rj , rk)
N?
k=1
umik
(6)
With the derivation, the kernelized fuzzy clus-
tering algorithm KARC works as follows. The
chained entities E are first objectified into the
relation strength matrix R using SEG, the details
of which are described in the following section.
The Gram matrix K is then computed based on
the relation strength vectors using the kernel func-
tion. For a given number of clusters C, the
initialization step is done by randomly picking C
patterns as cluster centers, equivalently, C indices
{n1, .., nC} are randomly picked from {1, .., N}.
D0 is initialized by setting d2ji = 2? 2K(rj , rni).
KARC alternately updates the membership matrix
U and the kernel distance matrix D until conver-
gence or running more than maxIter iterations
(Algorithm 1). Finally, the soft partition is gen-
erated based on the membership matrix U , which
is the desired cross document coreference result.
Algorithm 1 KARC Alternating Optimization
Input: Gram matrix K; #Clusters C; threshold ?
initialize D0
t ? 0
repeat
t ? t+ 1
// 1? Update membership matrix U t:
uij = (d
2
ji)
? 1m?1
?C
h=1 (d2jh)
? 1m?1
// 2? Update kernel distance matrix Dt:
d2ji = 2? 2 ?
N?
k=1
umikKjk
N?
k=1
umik
until (t > maxIter) or
(t > 1 and |U t ? U t?1| < ?)
P? ? Generate soft partition(U t, ?)
Output: Fuzzy partition P?
2.2.3 Cluster Validation
In the CDC setting, the number of true underlying
identities may vary depending on the entities? level
of ambiguity (e.g. name frequency). Selecting the
optimal number of clusters is in general a hard
research question in clustering1. We adopt the
Xie-Beni Index (XBI) (Xie and Beni, 1991) as in
ARCA, which is one of the most popular cluster
validities for fuzzy clustering algorithms. Xie-
Beni Index (XBI) measures the goodness of clus-
tering using the ratio of the intra-cluster variation
and the inter-cluster separation. We measure the
kernelized XBI (KXBI) in the feature space as,
KXBI =
C?
i=1
N?
j=1
umij ??(rj)? ?(wi)?2H
N ? min
1?i<j?C
??(wi)? ?(wj)?2H
where the nominator is readily computed using D
and the inter-cluster separation in the denominator
can be evaluated using the similar kernel trick
above (details omitted). Note that KXBI is only
defined for C > 1. Thus we pick the C that
corresponds to the first minimum of KXBI, and
then compare its objective function value JC with
the cluster variance (J1 for C = 1). The optimal
C is chosen from the minimum of the two2.
2.3 Specialist Ensemble Learning of Relation
Strengths between Entities
One remaining element in the overall CDC ap-
proach is how the relation strength rj,k between
two entities is computed. In (Cohen et al, 2003),
a binary SVM model is trained and its confidence
in predicting the non-coreferent class is used as
the distance metric. In our case of using in-
formation extraction results for disambiguation,
however, only some of the similarity features are
present based on the available relationships in two
profiles. In this work, we propose to treat each
similarity function as a specialist that specializes
in computing the similarity of a particular type
of relationship. Indeed, the similarity function
between a pair of attributes or relationships may in
itself be a sophisticated component algorithm. We
utilize the specialist ensemble learning framework
(Freund et al, 1997) to combine these component
1In particular, clustering algorithms that regularize the
optimization with cluster size are not applicable in our case.
2In practice, the entities to be disambiguated tend to be
dominated by several major identities. Hence performance
generally does not vary much in the range of large C values.
417
similarities into the relation strength for clustering.
Here, a specialist is awakened for prediction only
when the same type of relationships are present in
both chained entities. A specialist can choose not
to make a prediction if it is not confident enough
for an instance. These aspects contrast with the
traditional insomniac ensemble learning methods,
where each component learner is always available
for prediction (Freund et al, 1997). Also, spe-
cialists have different weights (in addition to their
prediction) on the final relation strength, e.g. a
match in a family relationship is considered more
important than in a co-occurrence relationship.
Algorithm 2 SEG (Freund et al, 1997)
Input: Initial weight distribution p1;
learning rate ? > 0; training set {< st, yt >}
1: for t=1 to T do
2: Predict using:
y?t =
?
i?Et ptisti?
i?Et pti
(7)
3: Observe the true label yt and incur square
loss L(y?t, yt) = (y?t ? yt)2
4: Update weight distribution: for i ? Et
pt+1i =
ptie?2?x
t
i(y?t?yt)
?
j?Et
ptje?2?x
t
i(y?t?yt)
?
?
j?Et
ptj (8)
Otherwise: pt+1i = pti
5: end for
Output: Model p
The ensemble relation strength model is learned
as follows. Given training data, the set of chained
entities Etrain is extracted as described earlier. For
a pair of entities ej and ek, a similarity vector
s is computed using the component similarity
functions for the respective attributes and rela-
tionships, and the true label is defined as y =
I{ej and ek are coreferent}. The instances are
subsampled to yield a balanced pairwise train-
ing set {< st, yt >}. We adopt the Special-
ist Exponentiated Gradient (SEG) (Freund et al,
1997) algorithm to learn the mixing weights of the
specialists? prediction (Algorithm 2) in an online
manner. In each training iteration, an instance
< st, yt > is presented to the learner (with Et
denoting the set of indices of awake specialists in
st). The SEG algorithm first predicts the value y?t
based on the awake specialists? decisions. The true
value yt is then revealed and the learner incurs a
square loss between the predicted and the true val-
ues. The current weight distribution p is updated
to minimize square loss: awake specialists are
promoted or demoted in their weights according to
the difference between the predicted and the true
value. The learning iterations can run a few passes
till convergence, and the model is learned in linear
time with respect to T and is thus very efficient. In
prediction time, let E(jk) denote the set of active
specialists for the pair of entities ej and ek, and
s(jk) denote the computed similarity vector. The
predicted relation strength rj,k is,
rj,k =
?
i?E(jk) pis(jk)i?
i?E(jk) pi
(9)
2.4 Remarks
Before we conclude this section, we make several
comments on using fuzzy clustering for cross
document coreference. First, instead of conduct-
ing CDC for all entities concurrently (which can
be computationally intensive with a large cor-
pus), chained entities are first distributed into non-
overlapping blocks. Clustering is performed for
each block which is a drastically smaller problem
space, while entities from different blocks are
unlikely to be coreferent. Our CDC system uses
phonetic blocking on the full name, so that name
variations arising from translation, transliteration
and abbreviation can be accommodated. Ad-
ditional link constraints checking is also imple-
mented to improve scalability though these are not
the main focus of the paper.
There are several additional benefits in using
a fuzzy clustering method besides the capabil-
ity of probabilistic membership assignments in
the CDC solution. In the clustered web search
context, splitting a true identity into two clusters
is perceived as a more severe error than putting
irrelevant records in a cluster, as it is more difficult
for the user to collect records in different clusters
(to reconstruct the real underlying identity) than
to prune away noisy records. While there is no
universal way to handle this with hard clustering,
soft clustering algorithms can more easily avoid
the false negatives by allowing records to prob-
abilistically appear in different clusters (subject
to the sum of 1) using a more lenient threshold.
Also, while there is no real prototypical elements
in relational clustering, soft relational clustering
418
methods can naturally rank the profiles within
a cluster according to their membership levels,
which is an additional advantage for enhancing
user consumption of the disambiguation results.
3 Experiments
In this section, we first formally define the evalu-
ation metrics, followed by the introduction to the
benchmark test sets and the system?s performance.
3.1 Evaluation Metrics
We benchmarked our method using the standard
purity and inverse purity clustering metrics as in
the WePS evaluation. Let a set of clusters P =
{Ci} denote the system?s partition as aforemen-
tioned and a set of categories Q = {Dj} be the
gold standard. The precision of a cluster Ci with
respect to a category Dj is defined as,
Precision(Ci,Dj) = |Ci ? Dj ||Ci|
Purity is in turn defined as the weighted average
of the maximum precision achieved by the clusters
on one of the categories,
Purity(P,Q) =
C?
i=1
|Ci|
n maxj Precision(Ci,Dj)
where n = ? |Ci|. Hence purity penalizes putting
noise chained entities in a cluster. Trivially, the
maximum purity (i.e. 1) can be achieved by
making one cluster per chained entity (referred to
as the one-in-one baseline). Reversing the role of
clusters and categories, Inverse purity(P,Q) def=
Purity(Q,P). Inverse Purity penalizes splitting
chained entities belonging to the same category
into different clusters. The maximum inverse
purity can be similarly achieved by putting all
entities into one cluster (all-in-one baseline).
Purity and inverse purity are similar to the
precision and recall measures commonly used in
IR. The F score, F = 1/(? 1Purity + (1 ?
?) 1InversePurity ), is used in performance evalua-
tion. ? = 0.2 is used to give more weight to
inverse purity, with the justification for the web
person search mentioned earlier.
3.2 Dataset
We evaluate our methods using the benchmark
test collection from the ACL SemEval-2007 web
person search task (WePS) (Artiles et al, 2007).
The test collection consists of three sets of 10
different names, sampled from ambiguous names
from English Wikipedia (famous people), partici-
pants of the ACL 2006 conference (computer sci-
entists) and common names from the US Census
data, respectively. For each name, the top 100
documents retrieved from the Yahoo! Search API
were annotated, yielding on average 45 real world
identities per set and about 3k documents in total.
As we note in the beginning of Section 2, the
human markup for the entities corresponding to
the search queries is on the document level. The
profile-based CDC approach, however, is to merge
the mention-level entities. In our evaluation, we
adopt the document label (and the person search
query) to annotate the entity profiles that corre-
sponds to the person name search query. Despite
the difference, the results of the one-in-one and
all-in-one baselines are almost identical to those
reported in the WePS evaluation (F = 0.52, 0.58
respectively). Hence the performance reported
here is comparable to the official evaluation results
(Artiles et al, 2007).
3.3 Information Extraction and Similarities
We use an information extraction tool AeroText
(Taylor, 2004) to construct the entity profiles.
AeroText extracts two types of information for
an entity. First, the attribute information about
the person named entity includes first/middle/last
names, gender, mention, etc. In addition,
AeroText extracts relationship information
between named entities, such as Family, List,
Employment, Ownership, Citizen-Resident-
Religion-Ethnicity and so on, as specified in the
ACE evaluation. AeroText resolves the references
of entities within a document and produces the
entity profiles, used as input to the CDC system.
Note that alternative IE or WDC tools, as well
as additional attributes or relationships, can be
readily used in the CDC methods we proposed.
A suite of similarity functions is designed to
determine if the attributes relationships in a pair
of entity profiles match or not:
Text similarity. To decide whether two names
in the co-occurrence or family relationship match,
we use the SoftTFIDF measure (Cohen et al,
2003), which is a hybrid matching scheme that
combines the token-based TFIDF with the Jaro-
Winkler string distance metric. This permits in-
exact matching of named entities due to name
419
variations, typos, etc.
Semantic similarity. Text or syntactic similarity
is not always sufficient for matching relationships.
WordNet and the information theoretic semantic
distance (Jiang and Conrath, 1997) are used to
measure the semantic similarity between concepts
in relationships such as mention, employment,
ownership, etc.
Other rule-based similarity. Several other
cases require special treatment. For example,
the employment relationships of Senator and
D-N.Y. should match based on domain knowledge.
Also, we design dictionary-based similarity
functions to handle nicknames (Bill and William),
acronyms (COLING for International Conference
on Computational Linguistics), and geo-locations.
3.4 Evaluation Results
From the WePS training data, we generated a
training set of around 32k pairwise instances as
previously stated in Section 2.3. We then used
the SEG algorithm to learn the weight distribution
model. We tuned the parameters in the KARC
algorithm using the training set with discrete grid
search and chose m = 1.6 and ? = 0.3. The RBF
kernel (Gaussian) is used with ? = 0.015.
Table 1: Cross document coreference performance
(I. Purity denotes inverse purity).
Method Purity I. Purity F
KARC-S 0.657 0.795 0.740
KARC-H 0.662 0.762 0.710
FRC 0.484 0.840 0.697
One-in-one 1.000 0.482 0.524
All-in-one 0.279 1.000 0.571
The macro-averaged cross document corefer-
ence on the WePS test sets are reported in Table
1. The F score of our CDC system (KARC-
S) is 0.740, comparable to the test results of the
first tier systems in the official evaluation. The
two baselines are also included. Since different
feature sets, NLP tools, etc are used in different
benchmarked systems, we are also interested in
comparing the proposed algorithm with differ-
ent soft relational clustering variants. First, we
?harden? the fuzzy partition produced by KARC
by allowing an entity to appear in the cluster
with highest membership value (KARC-H). Purity
improves because of the removal of noise entities,
though at the sacrifice of inverse purity and the
Table 2: Cross document coreference performance
on subsets (I. Purity denotes inverse purity).
Test set Identity Purity I. Purity F
Wikipedia 56.5 0.666 0.752 0.717
ACL-06 31.0 0.783 0.771 0.773
US Census 50.3 0.554 0.889 0.754
F score deteriorates. We also implement a pop-
ular fuzzy relational clustering algorithm called
FRC (Dave and Sen, 2002), whose optimization
functional directly minimizes with respect to the
relation matrix. With the same feature sets and
distance function, KARC-S outperforms FRC in F
score by about 5%. Because the test set is very am-
biguous (on average only two documents per real
world entity), the baselines have relatively high F
score as observed in the WePS evaluation (Artiles
et al, 2007). Table 2 further analyzes KARC-
S?s result on the three subsets Wikipedia, ACL06
and US Census. The F score is higher in the
less ambiguous (the average number of identities)
dataset and lower in the more ambiguous one, with
a spread of 6%.
We study how the cross document coreference
performance changes as we vary the fuzziness in
the solution (controlled by m). In Figure 1, as
m increases from 1.4 to 1.9, purity improves by
10% to 0.67, which indicates that more correct
coreference decisions (true positives) can be made
in a softer configuration. The complimentary is
true for inverse purity, though to a lesser extent.
In this case, more false negatives, corresponding
to the entities of different coreferents incorrectly
 0.5
 0.55
 0.6
 0.65
 0.7
 0.75
 0.8
 0.85
 1.4  1.5  1.6  1.7  1.8  1.9
m
KARC performance with different m
purityinverse purityF
Figure 1: Purity, inverse purity and F score with
different fuzzifiers m.
420
 0.6
 0.65
 0.7
 0.75
 0.8
 0.85
 0.1  0.2  0.3  0.4  0.5  0.6
?
KARC performance with different ?
purityinverse purityF
Figure 2: CDC performance with different ?.
linked, are made in a softer partition. The F
score peaks at 0.74 (m = 1.6) and then slightly
decreases, as the gain in purity is outweighed by
the loss in inverse purity.
Figure 2 evaluates the impact of the different
settings of ? (the threshold of including a chained
entity in the fuzzy cluster) on the coreference
performance. We observe that as we increase
?, purity improves indicating less ?noise? entities
are included in the solution. On the other hand,
inverse purity decreases meaning more coreferent
entities are not linked due to the stricter threshold.
Overall, the changes in the two metrics offset each
other and the F score is relatively stable across a
broad range of ? settings.
4 Related Work
The original work in (Bagga and Baldwin, 1998)
proposed a CDC system by first performing WDC
and then disambiguating based on the summary
sentences of the chains. This is similar to ours in
that mentions rather than documents are clustered,
leveraging the advances in state-of-the-art WDC
methods developed in NLP, e.g. (Ng and Cardie,
2001; Yang et al, 2008). On the other hand, our
work goes beyond the simple bag-of-word features
and vector space model in (Bagga and Baldwin,
1998; Gooi and Allan, 2004) with IE results. (Wan
et al, 2005) describes a person resolution system
WebHawk that clusters web pages using some
extracted personal information including person
name, title, organization, email and phone number,
besides lexical features. (Mann and Yarowsky,
2003) extracts biographical information, which is
relatively scarce in web data, for disambiguation.
With the support of state-of-the-art information
extraction tools, the profiles of entities in this work
covers a broader range of relational information.
(Niu et al, 2004) also leveraged IE support, but
their approach was evaluated on a small artificial
corpus. Also, the pairwise distance model is
insomniac (i.e. all similarity specialists are awake
for prediction) and our work extends this with a
specialist learning framework.
Prior work has largely relied on using hier-
archical clustering methods for CDC, with the
threshold for stopping the merging set using the
training data, e.g. (Mann and Yarowsky, 2003;
Chen and Martin, 2007; Baron and Freedman,
2008). The fuzzy relational clustering method
proposed in this paper we believe better addresses
the uncertainty aspect of the CDC problem.
There are also orthogonal research directions
for the CDC problem. (Li et al, 2004) solved the
CDC problem by adopting a probabilistic view on
how documents are generated and how names are
sprinkled into them. (Bunescu and Pasca, 2006)
showed that external information from Wikipedia
can improve the disambiguation performance.
5 Conclusions
We have presented a profile-based Cross Docu-
ment Coreference (CDC) approach based on a
novel fuzzy relational clustering algorithm KARC.
In contrast to traditional hard clustering methods,
KARC produces fuzzy sets of identities which
better reflect the intrinsic uncertainty of the CDC
problem. Kernelization, as used in KARC, enables
the optimization of clustering that is spherical
in nature to apply to relational data that tend to
have complicated shapes. KARC partitions named
entities based on their profiles constructed by an
information extraction tool. To match the pro-
files, a specialist ensemble algorithm predicts the
pairwise distance by aggregating the similarities of
the attributes and relationships in the profiles. We
evaluated the proposed methods with experiments
on a large benchmark collection and demonstrate
that the proposed methods compare favorably with
the top runs in the SemEval evaluation.
The focus of this work is on the novel learning
and clustering methods for coreference. Future
research directions include developing rich feature
sets and using corpus level or external informa-
tion. We believe that such efforts can further im-
prove cross document coreference performance.
421
References
Javier Artiles, Julio Gonzalo, and Satoshi Sekine.
2007. The SemEval-2007 WePS evaluation:
Establishing a benchmark for the web people search
task. In Proceedings of the 4th International
Workshop on Semantic Evaluations (SemEval-
2007), pages 64?69.
Amit Bagga and Breck Baldwin. 1998. Entity-based
cross-document coreferencing using the vector
space model. In Proceedings of 36th International
Conference On Computational Linguistics (ACL)
and 17th international conference on Computational
linguistics (COLING), pages 79?85.
Alex Baron and Marjorie Freedman. 2008. Who
is who and what is what: Experiments in cross-
document co-reference. In Proceedings of the
2008 Conference on Empirical Methods in Natural
Language Processing (EMNLP), pages 274?283.
J. C. Bezdek. 1981. Pattern Recognition with Fuzzy
Objective Function Algoritms. Plenum Press, NY.
Razvan Bunescu and Marius Pasca. 2006. Using
encyclopedic knowledge for named entity disam-
biguation. In Proceedings of the 11th Conference
of the European Chapter of the Association for
Computational Linguistics (EACL), pages 9?16.
Ying Chen and James Martin. 2007. Towards
robust unsupervised personal name disambiguation.
In Proc. of 2007 Joint Conference on Empirical
Methods in Natural Language Processing and
Computational Natural Language Learning.
Mario G. C. A. Cimino, Beatrice Lazzerini, and
Francesco Marcelloni. 2006. A novel approach
to fuzzy clustering based on a dissimilarity relation
extracted from data using a TS system. Pattern
Recognition, 39(11):2077?2091.
William W. Cohen, Pradeep Ravikumar, and
Stephen E. Fienberg. 2003. A comparison of
string distance metrics for name-matching tasks.
In Proceedings of IJCAI Workshop on Information
Integration on the Web.
Paolo Corsini, Beatrice Lazzerini, and Francesco
Marcelloni. 2005. A new fuzzy relational clustering
algorithm based on the fuzzy c-means algorithm.
Soft Computing, 9(6):439 ? 447.
Rajesh N. Dave and Sumit Sen. 2002. Robust fuzzy
clustering of relational data. IEEE Transactions on
Fuzzy Systems, 10(6):713?727.
Yoav Freund, Robert E. Schapire, Yoram Singer, and
Manfred K. Warmuth. 1997. Using and combining
predictors that specialize. In Proceedings of the
twenty-ninth annual ACM symposium on Theory of
computing (STOC), pages 334?343.
Chung H. Gooi and James Allan. 2004. Cross-
document coreference on a large scale corpus. In
Proceedings of the Human Language Technology
Conference of the North American Chapter of
the Association for Computational Linguistics
(NAACL), pages 9?16.
Jay J. Jiang and David W. Conrath. 1997.
Semantic similarity based on corpus statistics and
lexical taxonomy. In Proceedings of International
Conference Research on Computational Linguistics.
Xin Li, Paul Morie, and Dan Roth. 2004. Robust
reading: Identification and tracing of ambiguous
names. In Proceedings of the Human Language
Technology Conference and the North American
Chapter of the Association for Computational
Linguistics (HLT-NAACL), pages 17?24.
Gideon S. Mann and David Yarowsky. 2003.
Unsupervised personal name disambiguation. In
Conference on Computational Natural Language
Learning (CoNLL), pages 33?40.
Vincent Ng and Claire Cardie. 2001. Improving ma-
chine learning approaches to coreference resolution.
In Proceedings of the 40th Annual Meeting of the
Association for Computational Linguistics (ACL),
pages 104?111.
Cheng Niu, Wei Li, and Rohini K. Srihari. 2004.
Weakly supervised learning for cross-document
person name disambiguation supported by infor-
mation extraction. In Proceedings of the 42nd
Annual Meeting on Association for Computational
Linguistics (ACL), pages 597?604.
Bernhard Scho?lkopf and Alex Smola. 2002. Learning
with Kernels. MIT Press, Cambridge, MA.
Sarah M. Taylor. 2004. Information extraction tools:
Deciphering human language. IT Professional,
6(6):28 ? 34.
Vladimir Vapnik. 1995. The Nature of Statistical
Learning Theory. Springer-Verlag New York.
Xiaojun Wan, Jianfeng Gao, Mu Li, and Binggong
Ding. 2005. Person resolution in person search
results: WebHawk. In Proceedings of the 14th
ACM international conference on Information and
knowledge management (CIKM), pages 163?170.
Xuanli Lisa Xie and Gerardo Beni. 1991. A validity
measure for fuzzy clustering. IEEE Transactions
on Pattern Analysis and Machine Intelligence,
13(8):841 ? 847.
Xiaofeng Yang, Jian Su, Jun Lang, Chew L. Tan,
Ting Liu, and Sheng Li. 2008. An entity-
mention model for coreference resolution with
inductive logic programming. In Proceedings of
the 46th Annual Meeting of the Association for
Computational Linguistics (ACL), pages 843?851.
Dao-Qiang Zhang and Song-Can Chen. 2003.
Clustering incomplete data using kernel-based fuzzy
c-means algorithm. Neural Processing Letters,
18(3):155 ? 162.
422
