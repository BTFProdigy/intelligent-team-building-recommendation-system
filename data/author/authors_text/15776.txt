Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural
Language Learning, pages 832?842, Jeju Island, Korea, 12?14 July 2012. c?2012 Association for Computational Linguistics
Explore Person Specific Evidence in Web Person Name Disambiguation
Liwei Chen, Yansong Feng, Lei Zou, Dongyan Zhao
Institute of Computer Science and Technology
Peking University
Beijing
{clwclw88,fengyansong,zoulei,zhaodongyan}@pku.edu.cn
Abstract
In this paper, we investigate different usages
of feature representations in the web person
name disambiguation task which has been suf-
fering from the mismatch of vocabulary and
lack of clues in web environments. In litera-
ture, the latter receives less attention and re-
mains more challenging. We explore the fea-
ture space in this task and argue that collecting
person specific evidences from a corpus level
can provide a more reasonable and robust es-
timation for evaluating a feature?s importance
in a given web page. This can alleviate the
lack of clues where discriminative features can
be reasonably weighted by taking their corpus
level importance into account, not just relying
on the current local context. We therefore pro-
pose a topic-based model to exploit the person
specific global importance and embed it into
the person name similarity. The experimen-
tal results show that the corpus level topic in-
formation provides more stable evidences for
discriminative features and our method out-
performs the state-of-the-art systems on three
WePS datasets.
1 Introduction
Resolving ambiguity associated with person names
found on the Web is a key challenge in many Internet
applications, such as information retrieval, question
answering, open information extraction, automatic
knowledge acquisition(Wu and Weld, 2008) and so
on. For example, if you want to know more about a
guy named George Foster and feed Yahoo! with his
name, the results are not satisfactory where you get
more than 40 different persons named George Fos-
ter scattering in the top 100 returned pages. None
of the dominant search engines currently helps users
group those returned pages into clusters according
to whether they refer to the same person. Users thus
have to either read those pages carefully or adjust
their queries by adding extra modifiers. This moti-
vates an intensive study in automatically resolving
person name ambiguity in various web applications.
However, resolving web person name ambiguity
is not a trivial task. Due to the difficulties in fig-
uring out or predicting the number of namesakes
in the returned pages, the task has been investi-
gated in an unsupervised learning fashion in the lit-
erature, which is apparently different from the tra-
ditional word sense disambiguation or entity link-
ing/disambiguation tasks, where the inventories of
candidate word senses or entities are usually known
given the target word or entity mention.
A general framework for this task can be formu-
lated as first extracting various features from the web
pages, and then grouping these pages into several
clusters each of which is assumed to represent one
specific person. Despite of the inevitably noisy na-
ture of web data, a key challenge is how to handle
the data sparsity problem which we mean as: mis-
match of vocabulary and lack of clues. The for-
mer refers to the case that two web pages may de-
scribe the same person but use different words thus
the word overlap between them are small. Vari-
ous features, including entities, biographical infor-
mation, URL, etc., have been introduced to bridge
the gap(Mann and Yarowsky, 2003; Kalashnikov
et al2008a; Ikeda et al2009; Jiang et al2009),
832
and external knowledge resources are also employed
to capture the semantic relationship between enti-
ties(Han and Zhao, 2009, 2010). However, a more
challenging scenario is that there are few clues avail-
able in the web pages. For example, there is a page
mentioning a nutritionist Emily Bender in WePS2
dataset(Javier et al2009). Throughout the whole
page we can find only one word, nutrition, related to
her identification, while other pages about the nu-
tritionist in the dataset contain substantial materi-
als about her profession and job. In this case, cur-
rent efforts, focusing on either feature engineering
or background knowledge, are incapable to exploit-
ing these limited clues from the current page to the
whole Emily Bender document set, where nutrition,
as an important feature for recognizing a nutritionist,
should be paid more attention.
As far as we know, there is less work focusing
on exploring person specific information to relieve
the lack of clues problem. Traditional vector space
model (VSM) is most widely used to accommodate
various features, but it ignores any relations between
them(Mann and Yarowsky, 2003; Ikeda et al2009).
Beyond bag-of-features, two kinds of features are
explored, co-occurrences of entities and Wikipedia
based semantic relationship between entities, both
of which provide a reasonable relatedness for en-
tity pairs. More recent works adopt one of these
relationships(Jiang et al2009; Kalashnikov et al
2008a; Han and Zhao, 2009). Han and Zhao try
to model both aspects, but their co-occurrence es-
timation, estimated from held-out resources, fails to
capture the person specific importance for a feature,
which is crucial to enhance limited clues in a cor-
pus level, e.g., the significance of nutrition for Emily
Bender in WePS1 dataset.
In this paper, we explore different usages of fea-
tures and propose an approach which mines cross
document information to capture the person specific
importance for a feature. Specifically, we construct a
semantic graph from Wikipedia concepts appearing
in all documents that contain the target name (which
we refer to name observation set), then group them
into several topics and further weight each feature by
considering both the relatedness of the feature to its
corresponding topic and the importance of this topic
in the current name observation set. By incorporat-
ing both the Wikipedia and topic information into
our person name similarity, our model exploits both
Wikipedia based background knowledge and per-
son specific importance. We argue that the corpus
level importance provides more stable evidences for
discriminative features in various scenarios, espe-
cially the tough case. We compared our model with
the state of the arts on three WePS datasets (from
the First and Second Web People Search Cluster-
ing Task), and our experiments show that our model
consistently outperforms other competitive models
on all three datasets.
In the rest of this paper, we first review related
work, and in Section 3, show how we exploit the
person specific importance in our disambiguation
model. Experiment results are discussed in Sec-
tion 4. We conclude this paper in Section 5.
2 Related Work
Web person name ambiguity resolution can be for-
mally defined as follows: Given a set of web
pages {d1, d2, ..., dn}, where each page di (i =
1, ..., n) contains an ambiguous name N which may
correspond to several persons holding this name
among these pages. The disambiguation system
should group these name observations into j cluster
{c1, c2, ..., cj} each of which is expected to contain
web pages about the same person.
As mentioned before, the task is usually formu-
lated in a unsupervised fashion, including two steps:
feature extraction and person clustering. Most re-
search efforts so far have been made to the for-
mer, exploring various features according to spe-
cific applications, while the second step is currently
dominated by hierarchical agglomerative cluster-
ing (HAC). According to the reliance of extra
knowledge resources, existing works can be catego-
rized into non-resource methods and resource-based
methods. Non-resource methods extract various lo-
cal features from the context of ambiguous names,
and compute the similarity between feature vectors.
These features include plain words(Bagga and Bald-
win, 1998), biographical information(Mann and
Yarowsky, 2003; Niu et al2004), named enti-
ties, compound key phrases, hyperlinks(Ikeda et al
2009), etc. The similarity between namesakes are
usually measured by the cosine similarity(Bagga
and Baldwin, 1998), or other graph based met-
833
rics(Iria et al2007; Kalashnikov et al2008a;
Jiang et al2009). Those methods pay more at-
tention to extracting informative features and their
co-occurrences, but they usually treat the features lo-
cally, and ignore the semantic relatedness of features
beyond the current document.
Resource-based approaches, on the other hand,
can leverage external resources to benefit from rich
background knowledge, which is crucial to rem-
edy the data sparsity problem. The employed re-
sources include raw texts available on the web and
online encyclopedias. Kalashnikov et alnd Yim-
ing et alse extra web corpora to obtain co-
occurrences between named entities. Rao et alse
Google Snippets to provide more contexts. By em-
ploying Wikipedia, the largest online encyclopedia,
rich background knowledge about the semantic re-
latedness between entities can be leveraged to im-
prove the disambiguation performance, and relieve
the coverage problem, to some extent. Bunescu
and Pasca and Cucerzan utilize Wikipedia?s cate-
gory hierarchy to disambiguate entities, while Pilz
uses Wikipedia?s link information. Han and Zhao
adopt Wikipedia semantic relatedness to compute
the similarity between name observations. They also
combine multiple knowledge sources and capture
explicit semantic relatedness between concepts and
implicit semantic relationship embedded in a seman-
tic graph simultaneously(Han and Zhao, 2010).
Most approaches discussed above explore vari-
ous features in the current page or rely on exter-
nal knowledge resources to bridge the vocabulary
gap, but pay less attention to the lack of clues since
they ignore the person specific evidence in the cur-
rent corpus level. Our model focuses on solving the
data sparsity problem by utilizing other web pages
in the same name observation set to provide a robust
but person specific weighting for discriminative fea-
tures beyond the current document alone. In terms
of extra resources, the Wikipedia based model (WS)
by Han and Zhao (2009) is close to our model. The
WS model uses Wikipedia to capture the relation-
ship between entities in the local context to bridge
the vocabulary gap, but it is incapable to evaluate
the importance of a feature with regarding to the tar-
get name, hence is unable to make use of limited
clues in the current web page. Our method captures
person specific evidences by generating topics from
all concepts in the current name observation set and
weighting a feature accordingly. In this case, dis-
criminative features that are sparse in the current
page can be globally weighted so as to provide a
more accurate and stable person name similarity.
3 The Model
Our model consists of three steps: feature extrac-
tion, topic generation and name disambiguation. For
an ambiguous name, we first extract three types of
features and construct a semantic graph from all
Wikipedia concepts extracted from the current name
observation set. We then collect global person spe-
cific evidences by clustering these concepts on the
graph into different topics, which in turn are used
to weight each concept by considering the impor-
tance of its corresponding topic in the current name
observation set and its highly related neighbors in
both the topic and its local context. At last, we in-
corporate the proposed topic representation into the
person name similarity functionand adopt the hierar-
chical agglomerative clustering (HAC) algorithm to
group these web pages.
3.1 Feature Extraction
We extract features from the contexts of ambiguous
names, including Wikipedia concepts, named enti-
ties and biographical information, such as email ad-
dresses, phone numbers and birth years.
Wikipedia Concept Extraction Each concept in
Wikipedia is described by an article containing hy-
perlinks to other concepts which are supposed to
related to the current one. All the linking rela-
tions in Wikipedia construct a huge semantic graph,
where we can mine rich semantic relationship be-
tween concepts(David and Ian, 2008). We col-
lect Wikipedia concepts from all web pages in the
dataset by comparing all n-grams (up to 8) from
the dataset to Wikipedia anchor text dictionary and
checking whether it is a Wikipedia concept surface
form. We further prune the extracted concepts ac-
cording to their keyphraseness(Mihalcea and Cso-
mai, 2007). Initially, each concept is weighted ac-
cording to its average semantic relateness(David and
Ian, 2008) with other concepts in the current page.
Named Entity and Biographical Information Ex-
traction Although Wikipedia concepts can pro-
834
vide rich background knowledge, they suffer from
the limited coverage. It is common that some
discriminative features are not likely to be found
in Wikipedia, such as names of infamous people
or organizations, email addresses, phone numbers,
etc. We therefore extract two extra kinds of fea-
tures, named entities that do not appear in the
Wikipedia anchor text dictionary, and biographical
information. We use Stanford Named Entity Rec-
ognizer(Finkel et al2005) to collect named entities
which are not in the Wikipedia list. We use regular
expressions to extract email address, phone numbers
and birth years. For convenience, we will also call
concept features for Wikipedia concept features and
non-concept features for the other two in the rest of
this paper.
3.2 Topic Generation and Weighting Scheme
Now we proceed to describe the key step of our
model, topic generation and weighting strategy. The
purpose of introducing topics into our model is to
exploit the corpus level importance of a feature for
a given name so that we will not miss any discrim-
inative features which are few in the current name
observation but have shown significant importance
over the whole name observation set.
Graph Construction In our model, we capture
the topic structure through a semantic graph. Specif-
ically, for each name observation set, we connect
all Wikipedia concepts appearing in the current ob-
servation set by their pairwise semantic relatedness-
David and Ian (2008)to form a semantic graph.
The constructed graph is usually very dense since
any pair of unrelated concepts would be connected
by a small semantic relatedness resulting in many
light-weighted or even meaningless edges. We
therefore propose to prune some light-weighted
edges to make the graph stable and easier to harvest
reasonable topics. We use the following strategies to
prune the graph:
? If an edge?s weight is lower than a predefined
threshold, it will be pruned.
? If two vertices of an edge do not co-occur in
any web page of the current observation set,
then this edge will be pruned.
Home 
Run
Major 
League 
Baseball
Stolen 
Base
Cincinnati 
Reds
Shortstop
Sports 
League
Cornerback
Tackle
National 
Football 
League Pro 
Football 
Weekly
0.3862
0.4228
0.3799
0.2976
0.3296
0.2697
0.2445
0.3467
0.3628
0.4145
0.4008 0.3205
0.2738
0.3567
0.3201
0.3136 0.2245
Figure 1: An abridged example of the semantic graph
for George Foster. The green node Sports League is a
hub node, and the yellow node Pro Football Weekly is an
outlier.
The second rule is set to be strict and is proposed
to handle the following circumstance. Some gen-
eral concepts, such as swimming, football, basket-
ball and golf, will be measured highly related with
each other by Wikipedia semantic relatedness and
thus are very likely to be grouped into one topic,
however, they are discriminative on their own when
disambiguating different persons. For example, the
concept swimming is discriminative enough to dis-
tinguish Russian swimmer Popov from basketball
player Popov. So it is not a good idea to group
these concepts into one topic. The proposed co-
occurrence rule is based on the above observation
that it is rare that such kind of general concepts,
e.g., swim and basketball, often co-occur with each
other when talking about one specific person. Af-
ter the pruning step, for each ambiguous name, we
get a semantic graph from all Wikipedia concepts
extracted in this name observation set. Figure 1 il-
lustrates an abridged version of a semantic graph for
George Foster.
835
Graph Clustering Considering the graph con-
struction strategy we use, it is more suitable for us
to group the concepts on the graph into several top-
ics using a density-based clustering model.
We choose SCAN algorithm Xu et al2007) to
perform the clustering step. The SCAN algorithm
utilizes a neighborhood structure to measure the
similarity between two vertices. If a vertex has a
minimal of ? neighbors with a similarity larger than
?, it is called a core. The algorithm1 starts from a
random vertex in a graph, examining whether it is a
core or not. If yes, the algorithm will expand a clus-
ter from this vertex recursively, otherwise the vertex
will be assigned either a hub node or an outlier de-
pending on the number of its neighboring clusters.
A hub node connects to more than one cluster, while
an outlier connects to one or no cluster. Take the
semantic graph in Figure 1 for example, the node
Sports League is a hub node, while the node Pro
Football Weekly is an outlier. Finally, all concepts
in the graph are grouped into K + 2 parts (K is the
number of the clusters, and is determined automat-
ically), including K clusters, the set of hub nodes
and the set of outliers.
One problem of applying SCAN in our work is
that it is originally designed for unweighted graphs.
We have to adapt it to our weighted graph by mod-
ifying the similarity function between two nodes as
follows:
sim(c1, c2) = ??
simnb(c1, c2)
1 + ?
+
sr(c1, c2)
1 + ?
(1)
and simnb(c1, c2) is defined as:
simnb(c1, c2) =
?
c?N(c1)?N(c2)
sr(c1,c)+sr(c2,c)
2
|N(c1) ?N(c2)|
where N(c) is the neighbor set of concept c. This
new similarity function contains two parts: the
neighborhood similarity and the semantic related-
ness between two concepts. We combine them us-
ing a linear combination, where ? is a weight tuned
during training.
Topic Generation Now we will map the cluster-
ing results into different topics. Intuitively, each
1We omit the details of SCAN for brevity, and refer inter-
ested reader to Xu et al2007) for more details.
cluster will be treated as a topic. However, we found
that hub nodes usually correspond to general con-
cepts which may be related to many topics, but with
a loose relatedness. We thus distribute each general
concept into its every related topic, but with a lower
weight to distinguish from ordinary concepts in this
topic.
Outliers may be concepts which are far away from
main themes of the corpus, or noise concepts. We
calculate the average semantic relatedness of an out-
lier with its neighbor concepts that belong to one
topic. If the result is lower than a threshold, this
outlier will be discarded, otherwise it will be treated
as a non-concept feature.
Now we are able to map the clustering results
into different topics. Intuitively, each cluster will
be treated as a topic. However, we found that hub
nodes usually correspond to general concepts, e.g.,
education or public, which may be related to many
topics, but with a loose relatedness. We thus dis-
tribute each general concept into its every related
topic, but with a lower weight to distinguish from
ordinary concepts in this topic. Outliers are found
to contain concepts which are far away from main
topics of the document set and look like noise con-
cepts. We therefore calculate the average semantic
relatedness of an outlier node with its neighboring
concepts which belong to some topics. If the aver-
age relatedness is lower than a threshold, this node
will be discarded, otherwise it will be treated as a
non-concept feature.
Weighting Topics After generating all topics, we
should weight each topic according to its importance
in the current name observation set as well as the
quality of the topic (cluster). Intuitively, if most con-
cepts in the topic are considered to be discriminative
in the current name set and they are closely related
to each other, this topic should be weighted as im-
portant. By properly weighting the generated topics,
we can capture the importance of a concept reliably
in the corpus level (in the current name observation
set) rather than in the current page solely.
Before we weight a topic, we first explain how
we re-weight a hub concept in a topic since our ini-
tial feature weighting scheme(Han and Zhao, 2009)
works on individual web page, lacks cross document
information and is likely to over-estimate the impor-
836
tance of a hub node (general concept) by by assign-
ing a higher weight. Suppose a hub node h connects
to a topic t with n neighbors, namely c1, c2, ? ? ? , cn.
The similarity between this hub node and the topic
is computed by averaging the semantic relatedness
between this hub node and these n neighbors:
sim(h, t) =
1
n
n?
i=1
sr(h, ci). (2)
We then update the weight of this hub node by
considering its similarity with this topic: wt(h) =
w(h) ? sim(h, t) from which we can see that the
hub node receives a lower weight than before indi-
cating that it is not as important as ordinary concepts
in a topic.
Now we proceed to weight the topic t by taking
into account the frequencies of its concepts and the
coherence between the concepts and their neighbor-
hood in topic t:
w(t) =
n?
i=1
f(ci)
n
?
n?
i=1
n coh(ci, t)
n
(3)
where topic t contains n concepts {c1, c2, ..., cn},
f(c) is the frequency of concept c over current name
observation set, specially, when c is a hub node con-
cept, we will distribute its frequency according to
equation (2), having ft(c) = f(c)sim(c, t). And
n coh(c, t) is the neighborhood coherence of con-
cept c with topic t, defined as:
n coh(c, t) =
?
q?N(c)?t
sr(q, c)
|N(c) ? t|
(4)
where N(c) is the neighboring node set of concept
c.
By incorporating corpus level concept frequen-
cies into topic weighting, discriminative concepts
that are sparse in one document and suppressed by
conventional models can benefit from their corpus
level importance as well as their coherence in related
topics.
3.3 Clustering Person Name Observations
Now the remaining key step is to compute the sim-
ilarity between two name observations. The simi-
larity proposed in GRAPE(Jiang et al2009) mea-
sures two documents by bridge tags (common fea-
tures) shared by two document graphs. Specifically,
Jiang et altilize cohesion to weight a bridge tag in
a document. The more bridge tags two documents
share, the stronger the cohesion of each bridge tag
is, and in turn the more similar the two documents
are.
However, this similarity bears a shortcoming that
the bridge tags shared by the two documents re-
quire an exact match of features, which does not
take any semantic relatedness into consideration. If
two web pages mentioning the same person but have
few features in common, the GRAPE similarity may
not work properly. We, therefore, propose a new
similarity measure combining topic similarity, topic
based connectivity strength and GRAPE?s connec-
tivity strength.
Matching Topics to Person Name Observations
We first describe how to match the generated top-
ics to different name observations. In order to avoid
unreliable estimation, we only match a topic to a
name observation when they share at least one con-
cept. To measure the relatedness between a topic
and a name observation, we formulate this similar-
ity as the weighted average of semantic relatedness
between each concept from one side and its closely
related counterpart from the other side,defined as:
sim(A? B) =
?
a?A
wA(a)? wB(ba)? sr(a, ba)
?
a?A
wA(a)? wB(ba)
(5)
sim(A,B) = (sim(A? B) + sim(B ? A))/2,
where A can be a topic and B a name observation or
vice versa, ba is a concept inB that is most related to
concept a, wA(a) represents the weight of concept a
estimated by the averaged relatedness between a and
other concepts in A.
Person Name Similarity Now we describe the
first component in our proposed measure: topic sim-
ilarity, which is calculated through the common top-
ics shared by the two name observations, o1 and o2:
TSm(o1, o2) =
?
t?T (o1,o2)
sim(o1, t)? sim(o2, t) (6)
?sim(o1 ? t, o2 ? t)? w(t)
where T (o1, o2) contains all common topics of o1
and o2, w(t) is the weight of topic t estimated using
837
equation (3), both sim(oi, t) and sim(o1 ? t, o2 ? t)
measure the similarity between two concept sets and
can be estimated using equation (5). The underly-
ing idea of the equation is, if two name observations
share more and closer common topics, and also these
topics receive higher weights according to the cur-
rent name observation set, then the two observations
should be more related to each other.
Specifically, the factor sim(o1 ? t, o2 ? t) is de-
signed to measure the fine relatedness between o1
and o2 given the topic t. Sometimes, both o1 and
o2 are mapped to t and both close to this topic, but
in fact they depict different aspects of t since some
of our topics are more general thus include several
aspects. The comparison of their intersections will
provide a more detailed view for their similarity.
Inspired by the use of bridge tags in
GRAPE(Jiang et al2009), we propose to capture
the connection strength between concept sets by the
means of our topics. We consider common topics
as the bridge tags and define our topic based con-
nectivity strength between two name observations
as:
TCS(o1, o2) =
1
2
?
t?T (o1,o2)
sim(o1 ? t, o2 ? t)?
(Cohs(o1, t) + Cohs(o2, t)) (7)
Note that we still need sim(o1 ? t, o2 ? t) to capture
the fine differences inside a topic. Cohs(o, t) is a
cohesion measure to capture the relatedness between
non-concept features in o and concept features in t,
defined as:
Cohs(o, t) =
?
c?o?t
w(t)?
?
q?EB(o)
occ(c, q)fo(c)fo(q)
(8)
where EB(o) contains all non-concept features in
o (e.g., non-Wikipedia entities and biographical in-
formation), occ(c, q) is the co-occurring number of
concept c and feature q, fo(q) is the relative fre-
quency of q in observation o. It is easy to find that
a higher cohesion can be achieved by larger overlap
between o and t, higher topic weight and more co-
occurrences of concept features in t and other fea-
tures in o.
The third part is the original connectivity strength
defined in GRAPE(Jiang et al2009): CS(o1, o2),
calculated using plain features without topics (we
omit the details for brevity). Finally, we linearly
combine equation (6), (7) and CS(o1, o2) into the
person name similarity function as:
S(o1, o2)= ?1 ? TSm(o1, o2) + ?2 ? TCS(o1, o2)
+(1? ?1 ? ?2)? CS(o1, o2) (9)
where ?1 and ?2 are optimized during training.
This final similarity function will then be embed-
ded into a normal HAC algorithm to group the web
pages into different namesakes where we compute
the centroid-based distance between clusters(Mann
and Yarowsky, 2003).
4 Experiments
We compare our model with competitive baselines
on three WePS datasets. In the following, we first
describe the experimental setup, and then discuss the
their performances.
4.1 Data
Wikipedia Data Wikipedia offers free copies of
all available data to interested users in their website.
We used the one released in March 6th, 2009 in our
experiments. We identified over 4,000,000 highly
connected concepts in this dump; each concept links
to 10 other concepts in average.
WePS Datasets We used three datasets in our
experiments, WePS1 Training and Testing (Artiles
et al2007), WePS2 Testing (Javier et al2009).
These datasets collected names from three differ-
ent resources including Wikipedia names, program
committee of a computer science conference and US
census. Each name were queried in Yahoo! Search
and top N result pages (100 pages in WePS1 and
150 pages in WePS2) were obtained and manually
labeled.
4.2 Baselines
We compare our model TM with four baseline meth-
ods: (1)VSM: traditional vector space model with
cosine similarity. We use features extracted in Sec-
tion 3.1 and weight them using TFIDF. The docu-
ments are grouped using standard HAC algorithm.
(2)GRAPE(Jiang et al2009): we re-implement the
state-of-the-art system which outperforms any mod-
els that do not use extra knowledge resources re-
ported in WePS1 and WePS2. (3)WS: the Wikipedia
838
Semantic method(Han and Zhao, 2009). This sys-
tem uses Wikipedia to enhance the results of name
disambiguation. (4)SSR: the Structural Semantic re-
latedness model(Han and Zhao, 2010) creates a se-
mantic graph to re-calculate the semantic related-
ness between features, and captures both explicit
semantic relations and implicit structural semantic
knowledge. We also build two variants of TM: TM-
nTW which removes topic weighting to examine
what effect the topic weighting strategy can make
and whether it can provide a person specific evi-
dence and TM-nCP which does not use co-occurring
information to prune the semantic graph to examine
whether the pruning is effective.
4.3 Parameters
There are several parameters to be tuned in our
model. In the SCAN algorithm, we use default pa-
rameters according to (Xu et al2007) with an ex-
ception: the weight ? is tuned exhaustively to be 0.2.
Note that the number of topics are automatically de-
cided by SCAN. The semantic graph pruning thresh-
old is set to 0.27 tuned on a held out set. The
smoothing parameters in equation (9) are: ?1 = 0.3,
?2 = 0.2 which are tuned using cross validation.
Optimization of some parameters will be addressed
in detail in the following subsection. In HAC, all
optimal merging thresholds are selected by applying
leave-one-out cross validation.
4.4 Results and Discussion
We adopt the same evaluation process as (Han and
Zhao, 2009), and evaluating these models using Pu-
rity, Inverse Purity and the F-measure (also used in
WePS Task Artiles et al2007)). The overall perfor-
mance is shown in Table 1, and the best scores are
in boldface.
Let us first look at our model and its variants,
TM-nTW and TM-nCP. By introducing the corpus
level topic weighting scheme, our model improves
in average 1.6% consistently over all datasets. Re-
call that our topic weightings are obtained over the
whole name observation set beyond local context,
this improvement indicates that this corpus level per-
son specific evidences render the person similarity
more reasonably than that of single document. On
the other hand, by pruning the semantic graph, our
model improves averagely 1.3% over TM-nCP. This
Table 1: Web person name disambiguation results on all
three WePS datasets
WePS1 Training
Method P IP FMeasure
VSM 0.86 0.86 0.85
GRAPE 0.93 0.90 0.91
WS 0.88 0.89 0.87
SSR 0.82 0.92 0.85
TM-nTW 0.91 0.89 0.90
TM-nCP 0.92 0.90 0.91
TM 0.93 0.91 0.91
WePS1 Testing
Method P IP FMeasure
VSM 0.79 0.85 0.81
GRAPE 0.93 0.83 0.87
WS 0.88 0.90 0.88
SSR 0.85 0.83 0.84
TM-nTW 0.93 0.85 0.88
TM-nCP 0.92 0.86 0.88
TM 0.94 0.86 0.90
WePS2 Testing
Method P IP FMeasure
VSM 0.82 0.87 0.83
GRAPE 0.88 0.90 0.89
WS 0.85 0.89 0.86
SSR 0.89 0.84 0.86
TM-nTW 0.92 0.87 0.89
TM-nCP 0.93 0.88 0.90
TM 0.93 0.89 0.91
shows that our co-occurrence based pruning strategy
can help render the semantic graph with less noisy
edges, thus generate more reasonable topics.
Generally, our proposed model works best con-
sistently over all three datasets. Our method gains
9.3% improvement on average in three datasets com-
pared with VSM, 1.7% improvement compared to
GRAPE, 3.8% over WS and 6.7% over SSR. We also
performed significance testing on F-measures: the
differences between our model and other models are
significant. We notice there are many noisy or short
web pages which lead to inaccurate concept extrac-
tion, but this cross document evidences, to some ex-
tent, can remedy this. In the Emily Bender exam-
ple, our system correctly groups the odd page, which
contains limited clues, into the nutritionist cluster,
839
while the rest, excluding WS and SSR, failed. Sur-
prisingly, SSR combines both kinds of relations and
implicit structural knowledge, but performs in the
same bulk with VSM in WePS1 training set. We
think the reason may be that some name observation
sets are too small to estimate non-concept related-
ness via random walk. In WePS1 training set, many
names in this dataset contains several namesakes,
each of which corresponds to a few web pages. In
this case, our corpus level weighting scheme and
WS show no advantage over GRAPE which consid-
ers word co-occurrences solely. From the results,
we can also find that there is no clear winner be-
tween GRAPE and WS. The former does not use
Wikipedia relatedness but only includes local rela-
tionship, and performs even slightly better than WS
in WePS2, which indicates that non-Wikipedia con-
cepts are important disambiguation features as well.
4.5 Parameter Optimization
In this subsection, we discuss the optimization of
several parameters in the proposed method. In total
we need to set four parameters. The first one is the
edge pruning threshold during graph construction;
the second one is the weight ? in SCAN algorithm;
the third one and the forth one are the combination
parameters in the final similarity function. We will
address the first two in the following. The last two
combination parameters are tuned by exhaustively
searching the space and omitted here for brevity
First, we configure the pruning threshold. Intu-
itively, larger threshold can prune more unimpor-
tant edges and improve the disambiguation perfor-
mance. However, if the threshold is too large, we
may prune important edges and harm the results.
The F-measure of our method with respect to the
pruning threshold is plotted in Figure 2.
From Figure 2, we can know that in all three
data sets, a pruning threshold of 0.27 will lead to
the best performance. Both increasing and decreas-
ing of this pruning threshold will cause a decline of
the F-Measure, because they will either leave more
noisy light-weighted edges or prune some important
edges.
Secondly, we configure the neighborhood similar-
ity weight. The larger this weight is, the more neigh-
borhood information can influence the similarity be-
tween two nodes in the semantic graph. We plot the
0.22 0.24 0.26 0.28 0.3 0.32 0.34 0.36 0.380.86
0.87
0.88
0.89
0.9
0.91
0.92
Edge Pruning Threshold
FMea
sure
 
 WePS1 TrainingWePS1 TestingWePS2 Testing
Figure 2: The F-Measure v.s. the edge pruning threshold
on three data sets.
0 0.2 0.4 0.6 0.8 10.88
0.885
0.89
0.895
0.9
0.905
0.91
0.915
0.92
0.925
0.93
Neighborhood Weight
FMea
sure
 
 WePS1 TrainingWePS1 TestingWePS2 Testing
Figure 3: The F-Measure v.s. the neighborhood similarity
weight on three data sets.
performance of our method regarding to the neigh-
borhood similarity weight in Figure 3.
From Figure 3, we know that for the WePS 1 Test-
ing and WePS2 Testing data sets, a neighborhood
similarity weight of 0.2 can result in the best perfor-
mance, but for WePS 1 Training set, the weight for
the best performance is 0.6. In fact, when the neigh-
borhood similarity weight varies from 0 to 1, the dif-
ference between the best and worst performance are
less than 0.01, which indicates that neighborhood
similarity is as considerable as semantic relatedness.
840
5 Conclusion and Future Work
In this paper, we explore the feature space in the
web person name disambiguation task and propose
a topic-based model which exploits corpus level
person specific evidences to handle the data spar-
sity challenges, especially the case that limited ev-
idences can be collected from the local context. In
particular, we harvest topics from wikipedia con-
cepts appearing in the name observation set, and
weight a concept based on both the relatedness of
the concept to its corresponding topic and the im-
portance of this topic in the current name observa-
tion set, so that some discriminative but sparse fea-
tures can obtain more reliable weights. Experimen-
tal results show that our weighting strategy does its
job and the proposed model outperforms the-state-
of-the-art systems. Our current work utilizes the
topic information shared in one name observation
set but is incapable to handle sparse name set, which
needs more accurate relation extraction inside the
name observations. Jointly modeling entity link-
ing and person (entity) disambiguation tasks will
be an interesting direction where the two tasks are
closely related and usually need to be considered at
the same time. Investigating the person name dis-
ambiguation task in different web applications will
also be of great importance, e.g., disambiguating a
name in streaming data or during knowledge base
construction. In addition, graphical model, which
has been studied in academic author disambiguation,
may be a good choice to cope with the noises and
non-standard forms in web data.
Acknowledgments
We would like to thank Yidong Chen, Wei Wang
and Tinghua Wang for their useful discussions and
the anonymous reviewers for their helpful comments
which greatly improved the work and the presen-
tation. This work was supported by the National
High Technology Research and Development Pro-
gram of China (Grant No. 2012AA011101), Na-
tional Natural Science Foundation of China (Grant
No.61003009) and Research Fund for the Doc-
toral Program of Higher Education of China (Grant
No.20100001120029).
References
Artiles, J., Gonzalo, J., and Sekine, S. (2007). The
semeval-2007 weps evaluation: establishing a
benchmark for the web people search task. In
SemEval, SemEval ?07, pages 64?69, Strouds-
burg, PA, USA. Association for Computational
Linguistics.
Bagga, A. and Baldwin, B. (1998). Entity-based
cross-document coreferencing using the vector
space model. In ACL, pages 79?85, Strouds-
burg, PA, USA. Association for Computational
Linguistics.
Bunescu, R. C. and Pasca, M. (2006). Using ency-
clopedic knowledge for named entity disambigua-
tion. In EACL. The Association for Computer
Linguistics.
Cucerzan, S. (2007). Large-scale named entity dis-
ambiguation based on wikipedia data. In EMNLP-
CoNLL, pages 708?716. ACL.
David, M. and Ian, H. (2008). An effective, low-cost
measure of semantic relatedness obtained from
wikipedia links. In AAAI, AAAI ?08.
Finkel, J. R., Grenager, T., and Manning, C. (2005).
Incorporating non-local information into informa-
tion extraction systems by gibbs sampling. In
ACL, pages 363?370, Ann Arbor, Michigan. As-
sociation for Computational Linguistics.
Han, X. and Zhao, J. (2009). Named entity dis-
ambiguation by leveraging wikipedia semantic
knowledge. In CIKM, CIKM ?09, pages 215?224,
New York, NY, USA. ACM.
Han, X. and Zhao, J. (2010). Structural semantic
relatedness: a knowledge-based method to named
entity disambiguation. In ACL, ACL ?10, pages
50?59, Stroudsburg, PA, USA. Association for
Computational Linguistics.
Ikeda, M., Ono, S., Sato, I., Yoshida, M., and Naka-
gawa, H. (2009). Person name disambiguation on
the web by two-stage clustering. In WWW.
Iria, J., Xia, L., and Zhang, Z. (2007). Wit: web peo-
ple search disambiguation using random walks. In
SemEval, SemEval ?07, pages 480?483, Strouds-
burg, PA, USA. Association for Computational
Linguistics.
841
Javier, A., Julio, G., and Satoshi, S. (2009). Weps 2
evaluation campaign: Overview of the web peo-
ple search clustering task. In WWW 2009.
Jiang, L., Wang, J., An, N., Wang, S., Zhan, J.,
and Li, L. (2009). Grape: A graph-based frame-
work for disambiguating people appearances in
web search. In ICDM, ICDM ?09, pages 199?208,
Washington, DC, USA. IEEE Computer Society.
Kalashnikov, D. V., Chen, Z., Mehrotra, S., and
Nuray-Turan, R. (2008a). Web people search via
connection analysis. IEEE Trans. on Knowl. and
Data Eng., 20:1550?1565.
Kalashnikov, D. V., Nuray-Turan, R., and Mehrotra,
S. (2008b). Towards breaking the quality curse.: a
web-querying approach to web people search. In
SIGIR, SIGIR ?08, pages 27?34, New York, NY,
USA. ACM.
Mann, G. S. and Yarowsky, D. (2003). Unsuper-
vised personal name disambiguation. In CONLL,
CONLL ?03, pages 33?40, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Mihalcea, R. and Csomai, A. (2007). Wikify!: link-
ing documents to encyclopedic knowledge. In
Proceedings of CIKM?07, pages 233?242.
Niu, C., Li, W., and Srihari, R. K. (2004). Weakly
supervised learning for cross-document person
name disambiguation supported by information
extraction. In ACL, ACL ?04, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Pilz, A. (2010). Entity disambiguation using link
based relations extracted from wikipedia. In
ICML.
Rao, D., Garera, N., and Yarowsky, D. (2007). Jhu1:
an unsupervised approach to person name dis-
ambiguation using web snippets. In SemEval,
SemEval ?07, pages 199?202, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Wu, F. and Weld, D. S. (2008). Automatically re-
fining the wikipedia infobox ontology. In WWW,
WWW ?08, pages 635?644, New York, NY, USA.
ACM.
Xu, X., Yuruk, N., Feng, Z., and Schweiger, T. A. J.
(2007). Scan: a structural clustering algorithm
for networks. In Proceedings of KDD, KDD ?07,
pages 824?833, New York, NY, USA. ACM.
Yiming, L., Zaiqing, N., Taoyuan, C., Ying, G., and
Ji-Rong, W. (2007). Name disambiguation using
web connection. In AAAI.
842
Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 1912?1923,
October 25-29, 2014, Doha, Qatar.
c
?2014 Association for Computational Linguistics
Joint Inference for Knowledge Base Population
Liwei Chen
1
, Yansong Feng
1?
, Jinghui Mo
1
, Songfang Huang
2
, and Dongyan Zhao
1
1
ICST, Peking University, Beijing, China
2
IBM China Research Lab, Beijing, China
{chenliwei,fengyansong,mojinghui,zhaodongyan}@pku.edu.cn
huangsf@cn.ibm.com
Abstract
Populating Knowledge Base (KB) with
new knowledge facts from reliable text re-
sources usually consists of linking name
mentions to KB entities and identifying
relationship between entity pairs. How-
ever, the task often suffers from errors
propagating from upstream entity linkers
to downstream relation extractors. In this
paper, we propose a novel joint infer-
ence framework to allow interactions be-
tween the two subtasks and find an opti-
mal assignment by addressing the coher-
ence among preliminary local predictions:
whether the types of entities meet the ex-
pectations of relations explicitly or implic-
itly, and whether the local predictions are
globally compatible. We further measure
the confidence of the extracted triples by
looking at the details of the complete ex-
traction process. Experiments show that
the proposed framework can significantly
reduce the error propagations thus obtain
more reliable facts, and outperforms com-
petitive baselines with state-of-the-art re-
lation extraction models.
1 Introduction
Recent advances in natural language processing
have made it possible to construct structured KBs
from online encyclopedia resources, at an un-
precedented scale and much more efficiently than
traditional manual edit. However, in those KBs,
entities which are popular to the community usu-
ally contain more knowledge facts, e.g., the bas-
ketball player LeBron James, the actor Nicholas
Cage, etc., while most other entities often have
fewer facts. On the other hand, knowledge facts
should be updated as the development of entities,
such as changes in the cabinet, a marriage event,
or an acquisition between two companies, etc.
In order to address the above issues, we could
consult populating existing KBs from reliable text
resources, e.g., newswire, which usually involves
enriching KBs with new entities and populating
KBs with new knowledge facts, in the form of
<Entity, Relation, Entity> triple. In this paper, we
will focus on the latter, identifying relationship be-
tween two existing KB entities. This task can be
intuitively considered in a pipeline paradigm, that
is, name mentions in the texts are first linked to
entities in the KB (entity linking, EL), and then
the relationship between them are identified (re-
lation extraction, RE). It is worth mentioning that
the first task EL is different from the task of named
entity recognition (NER) in traditional informa-
tion extraction (IE) tasks, where NER recognizes
and classifies the entity mentions (to several pre-
defined types) in the texts, but EL focuses on link-
ing the mentions to their corresponding entities in
the KB. Such pipeline systems often suffer from
errors propagating from upstream to downstream,
since only the local best results are selected to the
next step. One idea to solve the problem is to allow
interactions among the local predictions of both
subtasks and jointly select an optimal assignment
to eliminate possible errors in the pipeline.
Let us first look at an example. Suppose we are
extracting knowledge facts from two sentences in
Figure 1: in sentence [1], if we are more confi-
dent to extract the relation fb:org.headquarters
1
,
we will be then prompted to select Bryant Univer-
sity, which indeed favors the RE prediction that
requires an organization to be its subject. On
the other side, if we are sure to link to Kobe
Bryant in sentence [2], we will probably select
fb:pro athlete.teams, whose subject position ex-
pects an athlete, e.g., an NBA player. It is not dif-
ficult to see that the argument type expectations of
relations can encourage the two subtasks interact
with each other and select coherent predictions for
1
The prefix fb means the relations are defined in Freebase.
1912
Sentence 1: ? [Bryant] is a private university located in [Smithfield]. ?
Sentence 2 : ? Shaq and [Bryant] led the [Lakers] to three consecutive championships ?
Bryant, Illinois
fb:people.person.place_of_birth
fb:sports.pro_athlete.teams
fb:org.org.headquarters
fb:business.board_member.leader_of
Bryant University
...Kobe Bryant
Kobe Bryant
Bryant University
Bryant, Illinois
...
Smithfield, Rhode Island 
Smithfield, Illinois
...
Los Angeles Lakers
Laguna Lakers
...
Figure 1: Two example sentences from which we
can harvest knowledge facts.
both of them. In KBs with well-defined schemas,
such as Freebase, type requirements can be col-
lected and utilized explicitly (Yao et al., 2010).
However, in other KBs with less reliable or even
no schemas, it is more appropriate to implicitly
capture the type expectations for a given relation
(Riedel et al., 2013).
Furthermore, previous RE approaches usually
process each triple individually, which ignores
whether those local predictions are compatible
with each other. For example, suppose the local
predictions of the two sentences above are <Kobe
Bryant, fb:org.headquarters, Smithfield, Rhode Is-
land> and <Kobe Bryant, fb:pro athlete.teams,
Los Angeles Lakers>, respectively, which, in fact,
disagree with each other with respect to the KB,
since, in most cases, these two relations cannot
share subjects. Now we can see that either the re-
lation predictions or the EL results for ?Bryant?
are incorrect. Those disagreements provide us an
effective way to remove the possible incorrect pre-
dictions that cause the incompatibilities.
On the other hand, the automatically extracted
knowledge facts inevitably contain errors, espe-
cially for those triples collected from open do-
main. Extractions with confidence scores will be
more than useful for users to make proper deci-
sions according to their requirements, such as trad-
ing recall for precision, or supporting approximate
queries.
In this paper, we propose a joint framework to
populate an existing KB with new knowledge facts
extracted from reliable text resources. The joint
framework is designed to address the error propa-
gation issue in a pipeline system, where subtasks
are optimized in isolation and locally. We find an
optimal configuration from top k results of both
subtasks, which maximizes the scores of each step,
fulfills the argument type expectations of relations,
which can be captured explicitly or implicitly, in
the KB, and avoids globally incoherent predic-
tions. We formulate this optimization problem in
an Integer Linear Program (ILP) framework, and
further adopt a logistic regression model to mea-
sure the reliability of the whole process, and assign
confidences to all extracted triples to facilitate fur-
ther applications. The experiments on a real-world
case study show that our framework can elimi-
nate error propagations in the pipeline systems by
taking relations? argument type expectations and
global compatibilities into account, thus outper-
forms the pipeline approaches based on state-of-
the-art relation extractors by a large margin. Fur-
thermore, we investigate both explicit and implicit
type clues for relations, and provide suggestions
about which to choose according to the character-
istics of existing KBs. Additionally, our proposed
confidence estimations can help to achieve a pre-
cision of over 85% for a considerable amount of
high quality extractions.
In the rest of the paper, we first review related
work and then define the knowledge base popula-
tion task that we will address in this paper. Next
we detail the proposed framework and present our
experiments and results. Finally, we conclude this
paper with future directions.
2 Related Work
Knowledge base population (KBP), the task of ex-
tending existing KBs with entities and relations,
has been studied in the TAC-KBP evaluations (Ji et
al., 2011), containing three tasks. The entity link-
ing task links entity mentions to existing KB nodes
and creates new nodes for the entities absent in the
current KBs, which can be considered as a kind
of entity population (Dredze et al., 2010; Tamang
et al., 2012; Cassidy et al., 2011). The slot-filling
task populates new relations to the KB (Tamang
et al., 2012; Roth et al., 2012; Liu and Zhao,
2012), but the relations are limited to a predefined
sets of attributes according to the types of enti-
ties. In contrast, our RE models only require min-
imal supervision and do not need well-annotated
training data. Our framework is therefore easy to
adapt to new scenarios and suits real-world appli-
cations. The cold-start task aims at constructing a
KB from scratch in a slot-filling style (Sun et al.,
2012; Monahan and Carpenter, 2012).
Entity linking is a crucial part in many KB re-
1913
lated tasks. Many EL models explore local con-
texts of entity mentions to measure the similarity
between mentions and candidate entities (Han et
al., 2011; Han and Sun, 2011; Ratinov et al., 2011;
Cheng and Roth, 2013). Some methods further ex-
ploit global coherence among candidate entities in
the same document by assuming that these enti-
ties should be closely related (Han et al., 2011;
Ratinov et al., 2011; Sen, 2012; Cheng and Roth,
2013). There are also some approaches regarding
entity linking as a ranking task (Zhou et al., 2010;
Chen and Ji, 2011). Lin et al. (2012) propose an
approach to detect and type entities that are cur-
rently not in the KB.
Note that the EL task in KBP is different from
the name entity mention extraction task, mainly
in the ACE task style, which mainly identifies the
boundaries and types of entity mentions and does
not explicitly link entity mentions into a KB (ACE,
2004; Florian et al., 2006; Florian et al., 2010; Li
and Ji, 2014), thus are different from our work.
Meanwhile, relation extraction has also been
studied extensively in recent years, ranging from
supervised learning methods (ACE, 2004; Zhao
and Grishman, 2005; Li and Ji, 2014) to unsuper-
vised open extractions (Fader et al., 2011; Carl-
son et al., 2010). There are also models, with dis-
tant supervision (DS), utilizing reliable texts re-
sources and existing KBs to predict relations for a
large amount of texts (Mintz et al., 2009; Riedel et
al., 2010; Hoffmann et al., 2011; Surdeanu et al.,
2012). These distantly supervised models can ex-
tract relations from texts in open domain, and do
not need much human involvement. Hence, DS is
more suitable for our task compared to other tradi-
tional RE approaches.
Joint inference over multiple local models has
been applied to many NLP tasks. Our task is dif-
ferent from the traditional joint IE works based in
the ACE framework (Singh et al., 2013; Li and
Ji, 2014; Kate and Mooney, 2010), which jointly
extract and/or classify named entity mentions to
several predefined types in a sentence and iden-
tify in a sentence level which relation this specific
sentence describes (between a pair of entity men-
tions in this sentence). Li and Ji (2014) follow
the ACE task definitions and present a neat incre-
mental joint framework to simultaneously extract
entity mentions and relations by structure percep-
tron. In contrast, we link entity mentions from a
text corpus to their corresponding entities in an ex-
isting KB and identify the relations between pairs
of entities based on that text corpus. Choi et al.
(2006) jointly extracts the expressions and sources
of opinion as well as the linking relations (i.e., a
source entity expresses an opinion expression) be-
tween them, while we focus on jointly modeling
EL and RE in open domain, which is a different
and challenging task.
Since the automatically extracted knowledge
facts inevitably contain errors, many approaches
manage to assign confidences for those extracted
facts (Fader et al., 2011; Wick et al., 2013). Wick
et al. (2013) also point out that confidence estima-
tion should be a crucial part in the automated KB
constructions and will play a key role for the wide
applications of automatically built KBs. We thus
propose to model the reliability of the complete
extraction process and take the argument type ex-
pectations of the relation, coherence with other
predictions and the triples in the existing KB into
account for each populated triple.
3 Task definition
We formalize our task as follows. Given a set
of entities sampled from an existing KB, E =
{e
1
, e
2
, ..., e
|E|
}, a set of canonicalized relations
from the same KB, R = {r
1
, r
2
, ..., r
|R|
}, a set
of sentences extracted from news corpus, SN =
{sn
1
, sn
2
, ..., sn
|SN |
}, each contains two men-
tions m
1
and m
2
whose candidate entities belong
to E, a set of text fragments T = {t
1
, t
2
, ..., t
|T |
},
where t
i
contains its corresponding target sentence
sn
i
and acts as its context. Our task is to link those
mentions to entities in the given KB, identify the
relationship between entity pairs and populate new
knowledge facts into the KB.
4 The Framework
We propose to perform joint inference over sub-
tasks involved. For each sentence with two entity
mentions, we first employ a preliminary EL model
and RE model to obtain entity candidates and pos-
sible relation candidates between the two men-
tions, respectively. Our joint inference framework
will then find an optimal assignment by taking the
preliminary prediction scores, the argument type
expectations of relations and the global compati-
bilities among the predictions into account. In the
task of KBP, an entity pair may appear in multiple
sentences as different relation instances, and the
crucial point is whether we can identify all the cor-
1914
Sentence 1: ? [Bryant] is a private university located in [Smithfield]. ?
Sentence 2: ? Shaq and [Bryant] led the [Lakers] to three consecutive 
championships from 20 0 0  to 20 0 2. ?
Bryant, Illinois
fb:people.place_of_birth
fb:pro_athlete.teams
fb:org.headquarters
fb:business.leader_of
Bryant University
...
Kobe Bryant
Kobe Bryant
Bryant University
Bryant, Illinois
...
Smithfield, Rhode Island 
Smithfield, Illinois
...
Los Angeles Lakers
Laguna Lakers
...
D isagreement!
Figure 2: An example of our joint inference framework. The top and bottom are two example sentences
with entity mentions in the square brackets, candidate entities in the white boxes, candidate relations in
the grey boxes, and the solid lines with arrows between relations and entities represent their preference
scores, with thickness indicating the preferences? value.
rect relations for an entity pair. Thus, after finding
an optimal sentence-level assignment, we aggre-
gate those local predictions by ORing them into
the entity pair level. Finally, we employ a regres-
sion model to capture the reliability of the com-
plete extraction process.
4.1 Preliminary Models
Entity Linking The preliminary EL model can
be any approach which outputs a score for each
entity candidate. Note that a recall-oriented model
will be more than welcome, since we expect to in-
troduce more potentially correct local predictions
into the inference step. In this paper, we adopt
an unsupervised approach in (Han et al., 2011)
to avoid preparing training data. Note the chal-
lenging NIL problem, i.e., identifying which en-
tity mentions do not have corresponding entities
in the KB (labeled as NIL) and clustering those
mentions, will be our future work. For each men-
tion we retain the entities with top p scores for the
succeeding inference step.
Relation Extraction The choice of RE model is
also broad. Any sentence level extractor whose
results are easy to be aggregated to entity pair
level can be utilized here (again, a recall-oriented
version will be welcome), such as Mintz++ men-
tioned in (Surdeanu et al., 2012), which we adapt
into a Maximum Entropy version. We also include
a special label, NA, to represent the case where
there is no predefined relationship between an en-
tity pair. For each sentence, we retain the relations
with top q scores for the inference step, and we
also call that this sentence supports those candi-
date relations. As for the features of RE models,
we use the same features (lexical features and syn-
tactic features) with the previous works (Chen et
al., 2014; Mintz et al., 2009; Riedel et al., 2010;
Hoffmann et al., 2011).
4.2 Relations? Expectations for Argument
Types
In most KBs? schemas, canonicalized relations are
designed to expect specific types of entities to be
their arguments. For example, in Figure 2, it is
more likely that an entity Kobe Bryant takes the
subject position of a relation fb:pro athlete.teams,
but it is unlikely for this entity to take the subject
position of a relation fb:org.headquarters. Making
use of these type requirements can encourage the
framework to select relation and entity candidates
which are coherent with each other, and discard
incoherent choices.
In order to obtain the preference scores between
1915
the entities in E and the relations in R, we gener-
ate two matrices with |E| rows and |R| columns,
whose elements sp
ij
indicates the preference score
of entity i and relation j. The matrix S
subj
is for
relations and their subjects, and the matrix S
obj
is
for relations and their objects. We initialize the
two matrices using the KB as follows: for entity i
and relation j, if relation j takes entity i as its sub-
ject/object in the KB, the element at the position
(i, j) of the corresponding matrix will be 1, oth-
erwise it will be 0. Note that in our experiments,
we do not count the triples that are evaluated in the
testing data, to build the matrices. Now the prob-
lem is how we can obtain the unknown elements
in the matrices.
Explicit Type Information Intuitively, we
should examine whether the explicit types of the
entities fulfill the expectations of relations in the
KB. For each unknown element S
subj
(i, j), we
first obtain the type of entity i, which is collected
from the lowest level of the KB?s type hierarchy,
and examine whether there is another entity
with the same type taking the subject position
of relation j in the initial matrix. If such an
entity exists, S
subj
(i, j) = 1, otherwise 0. For
example, for the subject Jay Fletcher Vincent and
the relation fb:pro athlete.teams, we first obtain
the subject?s type basketball player, and then we
go through the initial matrix and find another
entity Kobe Bryant with the same type taking
the subject position of fb:pro athlete.teams,
indicating that Jay Fletcher Vincent may take the
relation fb:pro athlete.teams. The matrix S
obj
is
processed in the same way.
Implicit Type Expectations In practice, few
KBs have well-defined schemas. In order to make
our framework more flexible, we need to come up
with an approach to implicitly capture the rela-
tions? type expectations, which will also be rep-
resented as preference scores.
Inspired by Riedel et al. (2013) who use a ma-
trix factorization approach to capture the associa-
tion between textual patterns, relations and entities
based on large text corpora, we adopt a collabora-
tive filtering (CF) method to compute the prefer-
ence scores between entities and relations based
on the statistics obtained from an existing KB.
In CF, the preferences between customers and
items are calculated via matrix factorization over
the initial customer-item matrix. In our frame-
work, we compute the preference scores between
entities and relations via the same approach over
the two initialized matrices S
subj
and S
obj
, re-
sulting in two entity-relation matrices with esti-
mated preference values. We use ALS-WR (Zhou
et al., 2008) to process the matrices and compute
the preference of a relation taking an entity as its
subject and object, respectively. We normalize the
preference scores of each entity using their means
? and standard deviations ?.
4.3 Compatibilities among Predicted Triples
The second aspect we investigate is whether the
extracted triples are compatible with respect to all
other knowledge facts. For example, according to
the KB, the two relations fb:org.headquarters and
fb:pro athlete.teams in Figure 2 cannot share the
same entity as their subjects. So if such sharing
happens, that will indicate either the predictions
of the relations or the entities are incorrect. The
clues can be roughly grouped into three categories,
namely whether two relations can share the same
subjects, whether two relations can share the same
objects, and whether one relation?s subject can be
the other relation?s object.
Global compatibilities among local predictions
have been investigated by several joint models (Li
et al., 2011; Li and Ji, 2014; Chen et al., 2014) to
eliminate the errors propagating in a pipeline sys-
tem. Specifically, Chen et al. (2014) utilized the
clues with respect to the compatibilities of rela-
tions in the task of relation extraction. Following
(Li et al., 2011; Chen et al., 2014), we extend the
idea of global compatibilities to the entity and re-
lation predictions during knowledge base popula-
tion. We examine the pointwise mutual informa-
tion (PMI) between the argument sets of two re-
lations to collect such clues. For example, if we
want to learn whether two relations can share the
same subject, we first collect the subject sets of
both relations from the KB, and then compute the
PMI value between them. If the value is lower
than a certain threshold (set to -3 in this paper), the
clue that the two relations cannot share the same
subject is added. These clues can be easily inte-
grated into an optimization framework in the form
of constraints.
4.4 Integer Linear Program Formulation
Now we describe how we aggregate the above
components, and formulate the joint inference
problem into an ILP framework. For each candi-
1916
date entity e of mention m in text fragment t, we
define a boolean decision variable d
m,e
t
, which de-
notes whether this entity is selected into the final
configuration or not. Similarly, for each candidate
relation r of fragment t, we define a boolean de-
cision variable d
r
t
. In order to introduce the pref-
erence scores into the model, we also need a deci-
sion variable d
r,m,e
t
, which denotes whether both
relation r and candidate entity e of mention m are
selected in t.
We use s
t,m,e
el
to represent the score of mention
m in t disambiguated to entity e, which is output
by the EL model, s
t,r
re
representing the score of re-
lation r assigned to t, which is output by the RE
model, s
r,e
p
the explicit/implicit preference score
between relation r and entity e.
Our goal is to find the best assignment to the
variables d
r
t
and d
m,e
t
, such that it maximizes the
overall scores of the two subtasks and the co-
herence among the preliminary predictions, while
satisfying the constraints between the predicted
triples as well. Our objective function can be writ-
ten as:
max el? conf
ent
+ re? conf
rel
+ sp? coh
e?r
(1)
where el, re and sp are three weighting parameters
tuned on development set. conf
ent
is the overall
score of entity linking:
conf
ent
=
?
t
?
m?M(t)
?
e?C
e
(m)
s
t,m,e
el
d
m,e
t
(2)
where M(t) is the set of mentions in t, C
e
(m) is
the candidate entity set of the mention m. conf
rel
represents the overall score of relation extraction:
conf
rel
=
?
t
?
r?C
r
(t)
s
t,r
re
d
r
t
(3)
where C
r
(t) is the set of candidate relations in t.
coh
e?r
is the coherence between the candidate re-
lations and entities in the framework:
coh
e?r
=
?
t
?
r?C
r
(t)
?
m?M(t)
?
e?C
e
(m)
s
r,e
p
d
r,m,e
t
(4)
Now we describe the constraints used in our ILP
problem. The first kind of constraints is intro-
duced to ensure that each mention should be dis-
ambiguated to only one entity:
?t,?m ?M(t),
?
e?C
e
(m)
d
m,e
t
? 1 (5)
The second type of constraints ensure that each en-
tity mention pair in one sentence can only take one
relation label:
?t,
?
r?C
r
(t)
d
t
r
? 1 (6)
The third is introduced to ensure the decision vari-
able d
r,m,e
t
equals 1 if and only if both the corre-
sponding variables d
r
t
and d
m,e
t
equal 1.
?t,?r ? C
r
(t), ?m ?M(t),?e ? C
e
(m)
d
r,m,e
t
? d
r
t
(7)
d
r,m,e
t
? d
m,e
t
(8)
d
r
t
+ d
m,e
t
? d
r,m,e
t
+ 1 (9)
As for the compatibility constraints, we need to
introduce another type of boolean decision vari-
ables. If a mention m
1
in t
1
and another mention
m
2
in t
2
share an entity candidate e, we add a vari-
able y for this mention pair, which equals 1 if and
only if both d
m
1
,e
t
1
and d
m
2
,e
t
2
equal 1. So we add
the following constraints for each mention pairm
1
and m
2
satisfies the previous condition:
y ? d
m
1
,e
t
1
(10)
y ? d
m
2
,e
t
2
(11)
d
m
1
,e
t
1
+ d
m
2
,e
t
2
? y + 1 (12)
Then we further add the following constraints for
each mention pair to avoid incompatible predic-
tions:
?r
1
? C
r
(t
1
), r
2
? C
r
(t
2
)
If (r
1
, r
2
) ? C
sr
, p(m
1
) = subj, p(m
2
) = subj
d
r
1
t
1
+ d
r
2
t
2
+ y ? 2 (13)
If (r
1
, r
2
) ? C
ro
, p(m
1
) = obj, p(m
2
) = obj
d
r
1
t
1
+ d
r
2
t
2
+ y ? 2 (14)
If (r
1
, r
2
) ? C
sro
, p(m
1
) = obj, p(m
2
) = subj
d
r
1
t
1
+ d
r
2
t
2
+ y ? 2 (15)
where p(m) returns the position of mention m, ei-
ther subj (subject) or obj (object). C
sr
is the pairs
of relations which cannot share the same subject,
C
ro
is the pairs of relations which cannot share the
same object, C
sro
is the pairs of relations in which
one relation?s subject cannot be the other one?s ob-
ject.
We use IBM ILOG Cplex
2
to solve the above
ILP problem.
2
http://www.cplex.com
1917
Table 1: The features used to calculate the confi-
dence scores.
Type Feature
Real The RE score of the relation.
Real The EL score of the subject.
Real The EL score of the object.
Real
The preference score between the relation
and the subject.
Real
The preference score between the relation
and the object.
Real
The ratio of the highest and the second highest
relation score in this entity pair.
Real
The ratio of the current relation score and the
maximum relation score in this entity pair.
Real
The ratio of the number of sentences supporting
the current relation and the total number
of sentences in this entity pair.
Real
Whether the extracted triple is coherent with the KB
according to the constraints in Section 4.3.
4.5 Confidence Estimation for Extracted
Triples
The automatically extracted triples inevitably con-
tain errors and are often considered as with high
recall but low precision. Since our aim is to pop-
ulate the extracted triples into an existing KB,
which requires highly reliable knowledge facts,
we need a measure of confidence for those ex-
tracted triples, so that others can properly utilize
them.
Here, we use a logistic regression model to mea-
sure the reliability of the process, how the entities
are disambiguated, how the relationships are iden-
tified, and whether those predictions are compat-
ible. The features we used are listed in Table 1,
which are all efficiently computable and indepen-
dent from specific relations or entities. We manu-
ally annotate 1000 triples as correct or incorrect to
prepare the training data.
5 Experiments
We evaluate the proposed framework in a real-
world scenario: given a set of news texts with en-
tity mentions and a KB, a model should find more
and accurate new knowledge facts between pairs
of those entities.
5.1 Dataset
We use New York Times dataset from 2005 to
2007 as the text corpus, and Freebase as the KB.
We divide the corpus into two equal parts, one for
creating training data for the RE models using the
distant supervision strategy (we do not need train-
ing data for EL), and the other as the testing data.
For the convenience of experimentation, we ran-
domly sample a subset of entities for testing. We
first collect all sentences containing two mentions
which may refer to the sampled entities, and prune
them according to: (1)there should be no more
than 10 words between the two mentions; (2)the
prior probability of the mention referring to the
target entity is higher than a threshold (set to 0.1
in this paper), which is set to filter the impossi-
ble mappings; (3)the mention pairs should not be-
long to different clauses. The resulting test set is
split into 10 parts and a development set, each with
3500 entity pairs roughly, which leads to averagely
200,000 variables and 900,000 constraints per split
and may take 1 hour for Cplex to solve. Note that
we do not count the triples that will be evaluated
in the testing data when we learn the preferences
and the clues from the KB.
5.2 Experimental Setup
We compare our framework with three baselines.
The first one, ME-pl, is the pipeline system con-
structed by the entity linker in (Han et al., 2011)
and the MaxEnt version of Mintz++ extractor
mentioned in (Surdeanu et al., 2012). The sec-
ond and third baselines are the pipeline systems
constructed by the same linker and two state-of-
the-art DS approaches, MultiR (Hoffmann et al.,
2011) and MIML-RE (Surdeanu et al., 2012), re-
spectively. They are referred to as MultiR-pl and
MIML-pl in the rest of this paper.
We also implement several variants of our
framework to investigate the following two com-
ponents in our framework: whether to use ex-
plicit (E) or implicit (I) argument type expecta-
tions, whether to take global (G) compatibilities
into account, resulting in four variants: ME-JE,
ME-JI, ME-JEG, ME-JIG.
We tune the parameters in the objective func-
tion on the development set to be re = 1, el = 4,
sp = 1. The numbers of preliminary results re-
tained to the inference step are set to p = 2, q = 3.
Three metrics used in our experiments include:
(1)the precision of extracted triples, which is the
ratio of the number of correct triples and the num-
ber of total extracted triples; (2)the number of cor-
rect triples (NoC); (3)the number of correct triples
in the results ranked in top n. The third metric
is crucial for KBP, since most users are only in-
terested in the knowledge facts with high confi-
dences. We compare the extracted triples against
1918
Table 2: The results of our joint frameworks and
the three baselines.
Approach Precision NoC Top 50 Top 100
ME-pl 28.7? 0.8 725? 12 38? 2 75? 4
MultiR-pl 31.0? 0.8 647? 15 39? 2 71? 3
MIML-pl 33.2? 0.6 608? 16 40? 3 74? 5
ME-JE 32.8? 0.7 768? 10 46? 2 90? 3
ME-JEG 34.2? 0.5 757? 8 46? 2 90? 3
ME-JI 34.5? 1.0 784? 9 43? 3 88? 3
ME-JIG 35.7? 1.0 772? 8 43? 3 88? 4
Freebase to compute the precision, which may un-
derestimate the performance since Freebase is in-
complete. Since we do not have exact annotations
for the EL, it is difficult to calculate the exact re-
call. We therefore use NoC instead. We evalu-
ate our framework on the 10 subsets of the testing
dataset and compute their means and standard de-
viations.
5.3 Overall Performance
We are interested to find out: (a)whether the task
benefits from the joint inference i.e., can we col-
lect more and correct facts? Or with a higher pre-
cision? (b) whether the argument type expecta-
tions (explicit and implicit) and global compati-
bility do their jobs as we expected? And, how do
we choose from these components ? (c)whether
the framework can work with other RE models?
(d)whether we can find a suitable approach to
measure the confidence or uncertainty during the
extraction so that users or other applications can
better utilize the extracted KB facts?
Let us first look at the performance of the
baselines and our framework in Table 2 for an
overview. Comparing the three pipeline sys-
tems, we can discover that using the same en-
tity linker, MIML-pl performs the best in precision
with slightly fewer correct triples, while ME-pl
performs the worst. It is not surprising, ME-pl, as
a strong and high-recall baseline, outputs the most
correct triples. As for the results with high confi-
dences, MultiR-pl outputs more correct triples in
the top 50 results than ME-pl, and MIML-pl per-
forms better or comparable than ME-pl in top n
results.
After performing the joint inference, ME-JE
improves ME-pl with 4.1% in precision and 43
more correct triples averagely, and results in bet-
ter performance in top n results. By taking global
compatibilities into consideration, ME-JEG fur-
ther improve the precision to 34.2% in average
with slightly fewer correct triples, indicating that
0
100
200
300
400
500
0.40.50.60.70.80.91
Numb
er of C
orrect
 Triple
s
Precision
 
 
ME?p
l
MultiR
?pl
MIML
?pl
ME?J
EG
ME?J
IG
Figure 3: The numbers of correct triples v.s. the
precisions for different approaches.
both argument type expectations and global com-
patibilities are useful in improving the perfor-
mance: argument type information can help to
select the correct and coherent predictions from
the candidates EL and RE outputs, while global
compatibilities can further prune incorrect triples
that cause disagreements, although a few correct
ones may be incorrectly eliminated. We can also
observe that ME-JIG performs even higher than
ME-JEG in overall precision, but ME-JEG col-
lects more correct triples than ME-JIG in the top
n predictions, showing that explicit type expec-
tations with more accurate type information may
perform better in high confidence results.
Furthermore, even though MultiR-pl and
MIML-pl are based on state-of-the-art RE ap-
proaches, our model (for example, ME-JIG) can
still outperform them in terms of all metrics, with
4.7% higher in precision than MultiR-pl, 2.5%
higher than MIML-pl. Our model can extract 125
more correct triples than MultiR-pl, 164 more
than MIML-pl, and perform better in top n results
as well.
In previous RE tasks, Precision-Recall curves
are mostly used to evaluate the systems? perfor-
mances. In our task, since it is difficult to calculate
the recall exactly, we use the number of correct
triples instead, and plot curves of Precision-NoC
to show the performance of the competitors and
our approaches in more detail. For each value of
NoC, the precision is the average of the ten splits
of the testing dataset.
As shown in Figure 3, our approaches (ME-JEG
and ME-JIG) obtain higher precisions on each
NoC value, and the curves are much smoother than
1919
Table 3: The results of our joint frameworks with
MultiR sentence extractor.
Approach Precision NoC Top 50 Top 100
MultiR-pl 31.0? 0.8 647? 15 39? 2 71? 3
MultiR-JEG 36.9? 0.8 687? 15 46? 2 88? 3
MultiR-JIG 38.5? 0.9 700? 15 45? 2 88? 3
the pipeline systems, indicating that our frame-
work is more suitable for harvesting high quality
knowledge facts. Comparing the two kinds of type
clues, we can see that explicit ones perform better
when the confidence control is high and the num-
ber of correct triples is small, and then the two are
comparable. Since the precision of the triples with
high confidences is crucial for the task of KBP,
we still suggest choosing the explicit ones when
there is a well-defined schema available in the KB,
although implicit type expectations can result in
higher overall precision.
5.4 Adapting MultiR Sentence Extractor into
the Framework
The preliminary relation extractor of our frame-
work is not limited to the MaxEnt
3
extractor. It
can be any sentence level recall-oriented relation
extractors. To further investigate the generaliza-
tion of our joint inference framework, we also
try to fit other sentence level relation extractors
into the framework. Considering that MIML-RE
does not output sentence-level results, we only
adapt MultiR, with both global compatibilities
and explicit/implicit type expectations, named as
MultiR-JEG and MultiR-JIG, respectively. Since
the scores output by the original MultiR are un-
normalized, which are difficult to directly apply to
our framework, we normalize their scores and re-
tune the framework?s parameters accordingly. The
parameters are set to re = 1, el = 32, sp = 16.
As seen in Table 3, MultiR-JEG helps MultiR
obtain about 40 more correct triples in average,
and achieves 5.9% higher in precision, as well
as significant improvements in top n correct pre-
dictions. As for MultiR-JIG, the improvements
are 7.5% in precision and 53 in number of cor-
rect triples. In terms of top n results, the explicit
and implicit type expectations perform compara-
ble. We also observe that our framework improves
MultiR as much as it does to MaxEnt, indicating
our joint framework can generalize well in differ-
ent RE models.
3
http://homepages.inf.ed.ac.uk/
lzhang10/maxent_toolkit.html
01
002
003
004
005
00
0.40.60.81
Numbe
r of Co
rrect T
riples
Precision
 
 
MultiR
?pl
MultiR
?JEG
MultiR
?JIG
Figure 4: The numbers of correct triples v.s. the
precisions for approaches with MultiR extractor.
0.5
0.6
0.7
0.8
0.9
1
0.30.40.50.60.70.80.91
Confid
ence 
Thres
hold
Precision
 
 
ME?p
l
MultiR
?pl
ME?J
IG
MultiR
?JIG
MIML
?pl
ME?J
EG
MultiR
?JEG
Figure 5: The precisions of different models un-
der different confidence thresholds. The error bars
represents the standard deviations of the results.
We further plot Precision-NoC curves for
MultiR-JEG and MultiR-JIG in Figure 4, show-
ing that our framework can result in better perfor-
mance and smoother curves with MultiR extractor.
It is interesting to see that with MultiR extractor,
the two kinds of expectations perform comparably.
5.5 Results with Confidence Estimations
Now, we will investigate the results from another
perspective with the help of confidence estima-
tions. We calculate the precisions of the competi-
tors and our approaches on different confidence
thresholds from 0.5 to 1. The results are summa-
rized in Figure 5. Note that the results across dif-
ferent approaches are not directly comparable, we
put them in the same figure only to save space.
In Figure 5, intuitively, as the confidence thresh-
old goes up, the extraction precisions should
increase, indicating triples with higher confi-
dences are more likely to be correct. However,
1920
lower thresholds tend to result in estimations with
smaller standard derivations due to those preci-
sions are estimated over much more triples than
those with higher thresholds, which means the ran-
domness will be smaller.
On the other hand, our joint frameworks pro-
vide more evidences that can be used to well cap-
ture the reliability of an extraction. For example,
the precisions of Multir-JIG and ME-JIG both stay
around 85% when the confidence is higher than
0.85, with about 120 correct triples, indicating that
by setting a proper threshold, we can obtain con-
siderable amount of high quality knowledge facts
at an acceptable precision, which is crucial for
KBP. However, we cannot harvest such amount of
high quality knowledge facts from the other three
pipeline systems.
6 Conclusions
In this paper, we propose a joint framework for the
task of populating KBs with new knowledge facts,
which performs joint inference on two subtasks,
maximizes their preliminary scores, fulfills the
type expectations of relations and avoids global
incompatibilities with respect to all local predic-
tions to find an optimal assignment. Experimen-
tal results show that our framework can signifi-
cantly eliminate the error propagations in pipeline
systems and outperforms competitive pipeline sys-
tems with state-of-the-art RE models. Regard-
ing the explicit argument type expectations and
the implicit ones, the latter can result in a higher
overall precision, while the former performs bet-
ter in acquiring high quality knowledge facts with
higher confidence control, indicating that if the
KB has a well-defined schema we can use explicit
type requirements for the KBP task, and if not,
our model can still perform well by mining the
implicit ones. Our framework can also generalize
well with other preliminary RE models. Further-
more, we assign extraction confidences to all ex-
tracted facts to facilitate further applications. By
setting a suitable threshold, our framework can
populate high quality reliable knowledge facts to
existing KBs.
For future work, we will address the NIL is-
sue of EL where we currently assume all entities
should be linked to a KB. It would be also inter-
esting to jointly model the two subtasks through
structured learning, instead of joint inference only.
Currently we only use the coherence of extracted
triples and the KB to estimate confidences, which
would be nice to directly model the issue in a joint
model.
Acknowledgments
We would like to thank Heng Ji, Kun Xu, Dong
Wang and Junyang Rao for their helpful discus-
sions and the anonymous reviewers for their in-
sightful comments that improved the work consid-
erably. This work was supported by the National
High Technology R&D Program of China (Grant
No. 2012AA011101, 2014AA015102), National
Natural Science Foundation of China (Grant No.
61272344, 61202233, 61370055) and the joint
project with IBM Research. Any correspondence
please refer to Yansong Feng.
References
ACE. 2004. The automatic content extraction projects.
http://projects.ldc.upenn.edu/ace.
Andrew Carlson, Justin Betteridge, Byran Kisiel, Burr
Settles, Estevam Hruschka Jr., and Tom Mitchell.
2010. Toward an architecture for never-ending lan-
guage learning. In Proceedings of the Conference
on Artificial Intelligence (AAAI), pages 1306?1313.
AAAI Press.
Taylor Cassidy, Zheng Chen, Javier Artiles, Heng Ji,
Hongbo Deng, Lev-Arie Ratinov, Jing Zheng, Jiawei
Han, and Dan Roth. 2011. Entity linking system
description. In TAC2011.
Zheng Chen and Heng Ji. 2011. Collaborative rank-
ing: A case study on entity linking. In Proceedings
of the Conference on Empirical Methods in Natu-
ral Language Processing, EMNLP ?11, pages 771?
781, Stroudsburg, PA, USA. Association for Com-
putational Linguistics.
Liwei Chen, Yansong Feng, Songfang Huang, Yong
Qin, and Dongyan Zhao. 2014. Encoding relation
requirements for relation extraction via joint infer-
ence. In Proceedings of the 52nd Annual Meeting
on Association for Computational Linguistics, ACL
2014, pages 818?827, Stroudsburg, PA, USA. Asso-
ciation for Computational Linguistics.
Xiao Cheng and Dan Roth. 2013. Relational inference
for wikification. In EMNLP.
Yejin Choi, Eric Breck, and Claire Cardie. 2006. Joint
extraction of entities and relations for opinion recog-
nition. In Proceedings of the 2006 Conference on
Empirical Methods in Natural Language Process-
ing, EMNLP ?06, pages 431?439, Stroudsburg, PA,
USA. Association for Computational Linguistics.
1921
Mark Dredze, Paul McNamee, Delip Rao, Adam Ger-
ber, and Tim Finin. 2010. Entity disambiguation for
knowledge base population. In Coling2010.
Anthony Fader, Stephen Soderland, and Oren Etzioni.
2011. Identifying relations for open information ex-
traction. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing,
EMNLP ?11, pages 1535?1545, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Radu Florian, Hongyan Jing, Nanda Kambhatla, and
Imed Zitouni. 2006. Factorizing complex mod-
els: A case study in mention detection. In Proceed-
ings of the 21st International Conference on Com-
putational Linguistics and the 44th annual meeting
of the Association for Computational Linguistics,
pages 473?480. Association for Computational Lin-
guistics.
Radu Florian, John F Pitrelli, Salim Roukos, and Imed
Zitouni. 2010. Improving mention detection robust-
ness to noisy input. In Proceedings of the 2010 Con-
ference on Empirical Methods in Natural Language
Processing, pages 335?345. Association for Com-
putational Linguistics.
Xianpei Han and Le Sun. 2011. A generative entity-
mention model for linking entities with knowledge
base. In Proceedings of ACL, HLT ?11, pages 945?
954, Stroudsburg, PA, USA. Association for Com-
putational Linguistics.
Xianpei Han, Le Sun, and Jun Zhao. 2011. Collective
entity linking in web text: a graph-based method. In
SIGIR, SIGIR ?11, pages 765?774, New York, NY,
USA. ACM.
Raphael Hoffmann, Congle Zhang, Xiao Ling,
Luke Zettlemoyer, and Daniel S. Weld. 2011.
Knowledge-based weak supervision for information
extraction of overlapping relations. In Proceedings
of the 49th ACL-HLT - Volume 1, HLT ?11, pages
541?550, Stroudsburg, PA, USA. ACL.
Heng Ji, Ralph Grishman, and Hoa Dang. 2011.
Overview of the tac2011 knowledge base population
track. In Proceedings of TAC.
Rohit J. Kate and Raymond J. Mooney. 2010. Joint
entity and relation extraction using card-pyramid
parsing. In Proceedings of the Fourteenth Confer-
ence on Computational Natural Language Learning,
CoNLL ?10, pages 203?212, Stroudsburg, PA, USA.
Association for Computational Linguistics.
Qi Li and Heng Ji. 2014. Incremental joint extrac-
tion of entity mentions and relations. In Proceed-
ings of the 52nd Annual Meeting on Association for
Computational Linguistics, ACL 2014, pages 402?
412, Stroudsburg, PA, USA. Association for Com-
putational Linguistics.
Qi Li, Sam Anzaroot, Wen-Pin Lin, Xiang Li, and
Heng Ji. 2011. Joint inference for cross-document
information extraction. In Proceedings of the 20th
ACM International Conference on Information and
Knowledge Management, CIKM ?11, pages 2225?
2228, New York, NY, USA. ACM.
Thomas Lin, Mausam, and Oren Etzioni. 2012.
No noun phrase left behind: Detecting and typ-
ing unlinkable entities. In Proceedings of the 2012
EMNLP-CoNLL, EMNLP-CoNLL ?12, pages 893?
903, Stroudsburg, PA, USA. Association for Com-
putational Linguistics.
Fang Liu and Jun Zhao. 2012. Sweat2012: Pattern
based english slot filling system for knowledge base
population at tac 2012. In TAC2012.
Mike Mintz, Steven Bills, Rion Snow, and Dan Ju-
rafsky. 2009. Distant supervision for relation ex-
traction without labeled data. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the
ACL and the 4th IJCNLP of the AFNLP: Volume 2 -
Volume 2, ACL ?09, pages 1003?1011.
Sean Monahan and Dean Carpenter. 2012. Lorify: A
knowledge base from scratch. In TAC2012.
Lev Ratinov, Dan Roth, Doug Downey, and Mike An-
derson. 2011. Local and global algorithms for dis-
ambiguation to wikipedia. In ACL.
Sebastian Riedel, Limin Yao, and Andrew McCallum.
2010. Modeling relations and their mentions with-
out labeled text. In Machine Learning and Knowl-
edge Discovery in Databases, volume 6323 of Lec-
ture Notes in Computer Science, pages 148?163.
Springer Berlin / Heidelberg.
Sebastian Riedel, Limin Yao, Benjamin M. Marlin, and
Andrew McCallum. 2013. Relation extraction with
matrix factorization and universal schemas. In Joint
Human Language Technology Conference/Annual
Meeting of the North American Chapter of the Asso-
ciation for Computational Linguistics (HLT-NAACL
?13), June.
Benjamin Roth, Grzegorz Chrupala, Michael Wiegand,
Mittul Singh, and Dietrich Klakow. 2012. General-
izing from freebase and patterns using cluster-based
distant supervision for tac kbp slotfilling 2012. In
TAC2012.
Prithviraj Sen. 2012. Collective context-aware topic
models for entity disambiguation. In Proceedings
of the 21st International Conference on World Wide
Web, WWW ?12, pages 729?738, New York, NY,
USA. ACM.
Sameer Singh, Sebastian Riedel, Brian Martin, Jiap-
ing Zheng, and Andrew McCallum. 2013. Joint
inference of entities, relations, and coreference. In
Proceedings of the 2013 Workshop on Automated
Knowledge Base Construction, AKBC ?13, pages 1?
6, New York, NY, USA. ACM.
Ang Sun, Xin Wang, Sen Xu, Yigit Kiran, Shakthi
Poornima, Andrew Borthwick, , and Ralph Grish-
man. 2012. Intelius-nyu tac-kbp2012 cold start sys-
tem. In TAC2012.
1922
Mihai Surdeanu, Julie Tibshirani, Ramesh Nallap-
ati, and Christopher D. Manning. 2012. Multi-
instance multi-label learning for relation extraction.
In EMNLP-CoNLL, pages 455?465. ACL.
Suzanne Tamang, Zheng Chen, and Heng Ji. 2012. En-
tity linking system and slot filling validation system.
In TAC2012.
Michael Wick, Sameer Singh, Ari Kobren, and Andrew
McCallum. 2013. Assessing confidence of knowl-
edge base content with an experimental study in en-
tity resolution. In AKBC2013.
Limin Yao, Sebastian Riedel, and Andrew McCallum.
2010. Collective cross-document relation extraction
without labelled data. In Proceedings of EMNLP,
EMNLP ?10, pages 1013?1023, Stroudsburg, PA,
USA. ACL.
Shubin Zhao and Ralph Grishman. 2005. Extracting
relations with integrated information using kernel
methods. In Proceedings of the 43rd Annual Meet-
ing on Association for Computational Linguistics,
ACL ?05, pages 419?426, Stroudsburg, PA, USA.
Association for Computational Linguistics.
Yunhong Zhou, Dennis Wilkinson, Robert Schreiber,
and Rong Pan. 2008. Large-scale parallel collabo-
rative filtering for the netflix prize. In Proceedings
of the 4th International Conference on Algorithmic
Aspects in Information and Management, AAIM
?08, pages 337?348, Berlin, Heidelberg. Springer-
Verlag.
Yiping Zhou, Lan Nie, Omid Rouhani-Kalleh, Fla-
vian Vasile, and Scott Gaffney. 2010. Resolving
surface forms to wikipedia topics. In Proceedings
of the 23rd International Conference on Computa-
tional Linguistics, COLING ?10, pages 1335?1343,
Stroudsburg, PA, USA. Association for Computa-
tional Linguistics.
1923
Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, pages 818?827,
Baltimore, Maryland, USA, June 23-25 2014.
c?2014 Association for Computational Linguistics
Encoding Relation Requirements for Relation Extraction via Joint
Inference
Liwei Chen
1
, Yansong Feng
?1
, Songfang Huang
2
, Yong Qin
2
and Dongyan Zhao
1
1
ICST, Peking University, Beijing, China
2
IBM China Research Lab, Beijing, China
chenliwei,fengyansong,zhaodongyan@pku.edu.cn
huangsf,qinyong@cn.ibm.com
Abstract
Most existing relation extraction models
make predictions for each entity pair lo-
cally and individually, while ignoring im-
plicit global clues available in the knowl-
edge base, sometimes leading to conflicts
among local predictions from different en-
tity pairs. In this paper, we propose
a joint inference framework that utilizes
these global clues to resolve disagree-
ments among local predictions. We ex-
ploit two kinds of clues to generate con-
straints which can capture the implicit type
and cardinality requirements of a relation.
Experimental results on three datasets, in
both English and Chinese, show that our
framework outperforms the state-of-the-
art relation extraction models when such
clues are applicable to the datasets. And,
we find that the clues learnt automatically
from existing knowledge bases perform
comparably to those refined by human.
1 Introduction
Identifying predefined kinds of relationship be-
tween pairs of entities is crucial for many knowl-
edge base related applications(Suchanek et al,
2013). In the literature, relation extraction (RE) is
usually investigated in a classification style, where
relations are simply treated as isolated class labels,
while their definitions or background information
are sometimes ignored. Take the relation Capital
as an example, we can imagine that this relation
will expect a country as its subject and a city as
object, and in most cases, a city can be the capital
of only one country. All these clues are no doubt
helpful, for instance, Yao et al (2010) explicitly
modeled the expected types of a relation?s argu-
ments with the help of Freebase?s type taxonomy
and obtained promising results for RE.
?
Yansong Feng is the corresponding author.
However, properly capturing and utilizing such
typing clues are not trivial. One of the hurdles here
is the lack of off-the-shelf resources and such clues
often have to be coded by human experts. Many
knowledge bases do not have a well-defined typing
system, let alne fine-grained typing taxonomies
with corresponding type recognizers, which are
crucial to explicitly model the typing requirements
for arguments of a relation, but rather expensive
and time-consuming to collect. Similarly, the car-
dinality requirements of arguments, e.g., a person
can have only one birthdate and a city can only be
labeled as capital of one country, should be con-
sidered as a strong indicator to eliminate wrong
predictions, but has to be coded manually as well.
On the other hand, most previous relation ex-
tractors process each entity pair (we will use en-
tity pair and entity tuple exchangeably in the rest
of the paper) locally and individually, i.e., the ex-
tractor makes decisions solely based on the sen-
tences containing the current entity pair and ig-
nores other related pairs, therefore has difficulties
to capture possible disagreements among different
entity pairs. However, when looking at the output
of a multi-class relation predictor globally, we can
easily find possible incorrect predictions such as a
university locates in two different cities, two dif-
ferent cities have been labeled as capital for one
country, a country locates in a city and so on.
In this paper, we will address how to derive and
exploit two categories of these clues: the expected
types and the cardinality requirements of a rela-
tion?s arguments, in the scenario of relation extrac-
tion. We propose to perform joint inference upon
multiple local predictions by leveraging implicit
clues that are encoded with relation specific re-
quirements and can be learnt from existing knowl-
edge bases. Specifically, the joint inference frame-
work operates on the output of a sentence level re-
lation extractor as input, derives 5 types of con-
straints from an existing KB to implicitly capture
818
the expected type and cardinality requirements for
a relation?s arguments, and jointly resolve the dis-
agreements among candidate predictions. We for-
malize this procedure as a constrained optimiza-
tion problem, which can be solved by many opti-
mization frameworks. We use integer linear pro-
gramming (ILP) as the solver and evaluate our
framework on English and Chinese datasets. The
experimental results show that our framework per-
forms better than the state-of-the-art approaches
when such clues are applicable to the datasets. We
also show that the automatically learnt clues per-
form comparably to those refined manually.
In the rest of the paper, we first review related
work in Section 2, and in Section 3, we describe
our framework in detail. Experimental setup and
results are discussed in Section 4. We conclude
this paper in Section 5.
2 Related Work
Since traditional supervised relation extraction
methods (Soderland et al, 1995; Zhao and Gr-
ishman, 2005) require manual annotations and are
often domain-specific, nowadays many efforts fo-
cus on semi-supervised or unsupervised methods
(Banko et al, 2007; Fader et al, 2011). Distant
supervision (DS) is a semi-supervised RE frame-
work and has attracted many attentions (Bunescu,
2007; Mintz et al, 2009; Yao et al, 2010; Sur-
deanu et al, 2010; Hoffmann et al, 2011; Sur-
deanu et al, 2012). DS approaches can predict
canonicalized (predefined in KBs) relations for
large amount of data and do not need much hu-
man involvement. Since the automatically gener-
ated training datasets in DS often contain noises,
there are also research efforts focusing on reduc-
ing the noisy labels in the training data (Takamatsu
et al, 2012). To bridge the gaps between the rela-
tions extracted from open information extraction
and the canonicalized relations in KBs, Yao et al
(2012) and Riedel et al (2013) propose a universal
schema which is a union of KB schemas and nat-
ural language patterns, making it possible to in-
tegrate the unlimited set of uncanonicalized rela-
tions in open settings with the relations in existing
KBs.
As far as we know, few works have managed
to take the relation specific requirements for ar-
guments into account, and most existing works
make predictions locally and individually. The
MultiR system allows entity tuples to have more
than one relations, but still predicts each entity
tuple locally (Hoffmann et al, 2011). Surdeanu
et al (2012) propose a two-layer multi-instance
multi-label (MIML) framework to capture the de-
pendencies among relations. The first layer is a
multi-class classifier making local predictions for
single sentences, the output of which are aggre-
gated by the second layer into the entity pair level.
Their approach only captures relation dependen-
cies, while we learn implicit relation backgrounds
from knowledge bases, including argument type
and cardinality requirements. Riedel et al (2013)
propose to use latent vectors to estimate the pref-
erences between relations and entities. These can
be considered as the latent type information of the
relations? arguments, which is learnt from various
data sources. In contrast, our approach learn im-
plicit clues from existing KBs, and jointly opti-
mize local predictions among different entity tu-
ples to capture both relation argument type clues
and cardinality clues. Li et al (2011) and Li et al
(2013) use co-occurring statistics among relations
or events to jointly improve information extrac-
tion performances in ACE tasks, while we mine
existing KBs to collect global clues to solve lo-
cal conflicts and find the optimal aggregation as-
signments, regarding existing knowledge facts. de
Lacalle and Lapata (2013) encode general domain
knowledge as FOL rules in a topic model while
our instantiated constraints are directly operated in
an ILP model. Zhang et al (2013) utilize relation
cardinality to create negative samples for distant
supervision while we use both implicit type clues
and relation cardinality expectations to discover
possible inconsistencies among local predictions.
3 The Framework
Our framework takes a set of entity pairs and their
supporting sentences as its input. We first train
a preliminary sentence level extractor which can
output confidence scores for its predictions, e.g.,
a maximum entropy or logistic regression model,
and use this local extractor to produce local predic-
tions. In order to implicitly capture the expected
type and cardinality requirements for a relation?s
arguments, we derive two kinds of clues from an
existing KB, which are further utilized to discover
the disagreements among local candidate predic-
tions. Our objective is to maximize the overall
confidence of all the selected predictions.
819
3.1 Generating Candidate Relations
Since we will focus on the open domain relation
extraction, we still follow the distant supervision
paradigm to collect our training data guided by
a KB, and train the local extractor accordingly.
Specifically, we train a sentence level extractor us-
ing the maximum entropy model. Given a sen-
tence containing an entity pair, the model will
output the confidence of this sentence represent-
ing certain relationship (from a predefined relation
set) between the entity pair. Formally R repre-
sents the relation set we are working on, T is the
set of entity tuples that we will predict in the test
set.
Keep in mind that our local extractor is trained
on noisy training data, which, we admit, is not
fully reliable. As we observed in a pilot experi-
ment that there is a good chance that the predic-
tions ranked in the second or third may still be
correct, we select top three predictions as the can-
didate relations for each mention in order to intro-
duce more potentially correct output.
On the other hand, we should discard the pre-
dictions whose confidences are too low to be true,
where we set up a threshold of 0.1. For a tuple t,
we obtain its candidate relation set by combining
the candidate relations of all its mentions, and rep-
resent it as R
t
. For a candidate relation r ? R
t
and
a tuple t, we define M
r
t
as all t?s mentions whose
candidate relations contain r. Now the confidence
score of a relation r ? R
t
being assigned to tuple
t can be calculated as:
conf(t, r) =
?
m?M
r
t
MEscore(m, r) (1)
where MEscore(m, r) is the confidence of mention
m representing relation r output by our prelimi-
nary extractor.
Traditionally, both lexical features and syntac-
tic features are used in relation extraction. Lexi-
cal features are the word chains between the sub-
jects and objects in the sentences, while syntactic
features are the dependency paths from the sub-
jects to the objects on the dependency graphs of
the supporting sentences. However, lexical fea-
tures are usually too specific to frequently appear
in the test data, while the reliability of syntactic
features depends heavily on the quality of depen-
dency parsing tools. Generally, we expect more
potentially correct relations to be put into the can-
didate relation set for further consideration. So in
conflict
conflict
conflict
conflict
Capital: 0.5
LargestCity: 0.4
LocationCity: 0.05
1
1->0
1
USA, New York
LocationCity: 0.8
FoundationPlace: 0.15
1
1
New York University, New York
Capital: 0.95
LocationCity: 0.03
1
1->0
USA, Washington D.C.
Nationality: 0.7
BirthPlace: 0.2
1
1
Richard Fuld,USA
Capital: 0.3 1->0
Germany, Washington D.C.
conflict
LocationCountry: 0.5
LocationCity: 0.3
1->0
1
Columbia University, New York
conflict
Figure 1: The different types of disagreements we
will investigate in the candidate relations. The
clues of detecting these inconsistencies can be
learnt from a knowledge base.
addition to lexical and syntactic features, we also
use n-gram features to train our preliminary rela-
tion extraction model. N-gram features are consid-
ered as more ambiguous compared to traditional
lexical and syntactic features, and may introduce
incorrect predictions, thus improving the recall at
the cost of precision.
3.2 Disagreements among the Candidates
The candidate relations we obtained in the pre-
vious subsection inevitably include many incor-
rect predictions. Ideally we should discard those
wrong predictions to produce more accurate re-
sults.
As discussed earlier, we will exploit from the
knowledge base two categories of clues that im-
plicitly capture relations? backgrounds: their ex-
pected argument types and argument cardinalities,
based on which we can discover two categories
of disagreements among the candidate predictions,
summarized as argument type inconsistencies and
violations of arguments? uniqueness, which have
been rarely considered before. We will discuss
them in detail, and describe how to learn the clues
from a KB afterwards.
Implicit Argument Types Inconsistencies:
Generally, the argument types of the correct
predictions should be consistent with each other.
Given a relation, its arguments sometimes are
required to be certain types of entities. For
example, in Figure 1, the relation LargestCity
restricts its subject to be either countries or states,
and its object to be cities. If the predictions
among different entity tuples require the same
entity to belong to different types, we call this
820
an argument type inconsistency. Take <USA,
New York> and <USA, Washington D.C.> as an
example. In Figure 1, <USA, New York> has
a candidate relation LargestCity which restricts
USA to be either countries or states, while <USA,
Washington D.C.> has a prediction LocationCity
which indicates a disagreement in terms of USA?s
type because the latter prediction expects USA to
be an organization located in a city. This warns
that at least one of the two candidate relations is
incorrect.
The previous scenario shows that the subjects
of two candidate relations may disagree with each
other. From Figure 1, we can observe two more
situations: the first one is that the objects of
the two candidate relations are inconsistent with
each other, for example <New York University,
New York> with the prediction LocationCity and
<Columbia University, New York> with the pre-
diction LocationCountry. The second one is
that the subject of one candidate relation do not
agree with another prediction?s object, for exam-
ple <Richard Fuld, USA> with the prediction Na-
tionality and <USA, New York> with the pre-
diction LocationCity. Although we have not as-
signed explicit types to these entities, we can still
exploit the inconsistencies implicitly with the help
of shared entities. Note that the implicit argument
typing clues here mean whether two relations can
share arguments, but NOT enumate what types ex-
plicitly their arguments should have.
We formalize all the relation pairs that disagree
with each other as follows. These relation pairs
can be divided into three subcategories. We repre-
sent the relation pairs (r
i
, r
j
) that are inconsistent
in terms of subjects as C
sr
, the relations pairs that
are inconsistent in terms of objects as C
ro
, the re-
lation pairs that are inconsistent in terms of one?s
subject and the other one?s object as C
rer
.
It is worth mentioning that disagreements in-
side a tuple are also included here. For instance,
an entity tuple <USA, Washington D.C.> in Fig-
ure 1 has two candidate relations, Capital and Lo-
cationCity. These two predictions are inconsistent
with each other with respect to the type of USA.
They implicitly consider USA as ?country? and
?organization?, respectively.
Violations of Arguments? Uniqueness: The
previous categories of disagreements are all based
on the implicit type information of the relations?
arguments, Now we make use of the clues of ar-
gument cardinality requirements. Given a subject,
some relations should have unique objects. For
example, in Figure 1, given USA as the subject of
the relation Capital, we can only accept one pos-
sible object, because there is great chance that a
country only have one capital. On the other hand,
given Washington D.C. as the object of the relation
Capital, we can only accept one subject, since usu-
ally a city can only be the capital of one country
or state. If these are violating in the candidates,
we could know that there may be some incorrect
predictions. We represent the relations expecting
unique objects as C
ou
, and the relations expecting
unique subjects as C
su
.
3.3 Obtaining the Global Clues
Now, the issue is how to obtain the clues used
in the previous subsection. That is, how we de-
termine which relations expect certain types of
subjects, which relations expect certain types of
objects, etc. These knowledge can be definitely
coded by human, or learnt from a KB.
Most existing knowledge bases represent their
knowledge facts in the form of (<subject, rela-
tion, object>) triple, which can be seen as re-
lational facts between entity tuples. Usually the
triples in a KB are carefully defined by experts. It
is rare to find inconsistencies among the triples in
the knowledge base. The clues are therefore learnt
from KBs, and further refined manually if needed.
Given two relations r
1
and r
2
, we query the KB
for all tuples bearing the relation r
1
or r
2
. We use
S
i
and O
i
to represent r
i
?s (i ? {1, 2}) subject set
and object set, respectively. We adopt the point-
wise mutual information (PMI) to estimate the de-
pendency between the argument sets of two rela-
tions:
PMI(A,B) = log
p(A,B)
p(A)p(B)
(2)
where p(A,B) is number of the entities both in
A and B, p(A) and p(B) are the numbers of
the entities in A and B, respectively. For any
pair of relations from R ? R, we calculate four
scores: PMI(S
1
, S
2
), PMI(O
1
, O
2
), PMI(S
1
, O
2
)
and PMI(S
2
, O
1
). To make more stable esti-
mations, we set up a threshold for the PMI. If
PMI(S
1
, S
2
) is lower than the threshold, we will
consider that r
1
and r
2
cannot share a subject.
Things are similar for the other three scores. The
threshold is set to -3 in this paper.
821
We can also learn the uniqueness of arguments
for relations. For each pre-defined relation in R,
we collect all the triples containing this relation,
and count the portion of the triples which only
have one object for each subject, and the por-
tion of the triples which only have one subject
for each object. The relations whose portions are
higher than the threshold will be considered to
have unique argument values. This threshold is
set to 0.8 in this paper.
3.4 Integer Linear Program Formulation
As discussed above, given a set of entity pairs and
their candidate relations output by a preliminary
extractor, our goal is to find an optimal configura-
tion for all those entities pairs jointly, solving the
disagreements among those candidate predictions
and maximizing the overall confidence of the se-
lected predictions. This is an NP-hard optimiza-
tion problem. Many optimization models can be
used to obtain the approximate solutions.
In this paper, we propose to solve the problem
by using an ILP tool, IBM ILOG Cplex
1
. Firstly,
for each tuple t and one of its candidate relations
r, we define a binary decision variable d
r
t
indicat-
ing whether the candidate relation r is selected by
the solver. Our objective is to maximize the total
confidence of all the selected candidates, and the
objective function can be written as:
max
?
t?T ,r?R
t
conf(t, r)d
r
t
+
?
?t,r?R
t
,m?M
r
t
maxMEscore(m, r)d
r
t
where conf(t, r) is the confidence of the tuple t
bearing the candidate relation r. The first compo-
nent is the sum of the original confidence scores of
all the selected candidates, and the second one is
the sum of the maximal mention-level confidence
scores of all the selected candidates. The latter is
designed to encourage the model to select the can-
didates with higher individual mention-level con-
fidence scores.
We add the constraints with respect to the dis-
agreements described in Section 3.2. For the sake
of clarity, we describe the constraints derived from
each scenario of the two categories of disagree-
ments separately.
The subject-relation constraints avoid the dis-
agreements between the predictions of two tuples
1
www.cplex.com
sharing a subject. These constraints can be repre-
sented as:
d
r
t
i
t
i
+ d
r
t
j
t
j
? 1 (3)
?t
i
, t
j
: subj(t
i
) = subj(t
j
) ? (r
t
i
, r
t
j
) ? C
sr
where t
i
and t
j
are two tuples in T , subj(t
i
) is the
subject of t
i
, r
t
i
is a candidate relation of t
i
, r
t
j
is
a candidate relation of t
j
.
The object-relation constraints avoid the incon-
sistencies between the predictions of two tuples
sharing an object. Formally we add the following
constraints:
d
r
t
i
t
i
+ d
r
t
j
t
j
? 1 (4)
?t
i
, t
j
: obj(t
i
) = obj(t
j
) ? (r
t
i
, r
t
j
) ? C
ro
where t
i
? T and t
j
? T are two tuples, obj(t
i
)
is the object of t
i
.
The relation-entity-relation constraints ensure
that if an entity works as subject and object in two
tuples t
i
and t
j
respectively, their relations agree
with each other. The constraints we add are:
d
r
t
i
t
i
+ d
r
t
j
t
j
? 1 (5)
?t
i
, t
j
: obj(t
i
) = subj(t
j
) ? (r
t
i
, r
t
j
) ? C
rer
The object uniqueness constraints ensure that
the relations requiring unique objects do not bear
more than one object given a subject.
?
t?Tuple(r),subj(t)=e
d
r
t
? 1 (6)
?e ? r ? C
ou
where e is an entity, Tuple(r) are the tuples whose
candidate relations contain r.
The subject uniqueness constraints ensure that
given an object, the relations expecting unique
subjects do not bear more than one subject.
?
t?Tuple(r),obj(t)=e
d
r
t
? 1 (7)
?e ? r ? C
su
By adopting ILP, we can combine the local
information including MaxEnt confidence scores
and the implicit relation backgrounds that are em-
bedded into global consistencies of the entity tu-
ples together. After the optimization problem is
solved, we will obtain a list of selected candidate
relations for each tuple, which will be our final
output.
822
4 Experiments
4.1 Datasets
We evaluate our approach on three datasets, in-
cluding two English datasets and one Chinese
dataset.
The first English dataset, Riedel?s dataset, is the
one used in (Riedel et al, 2010; Hoffmann et al,
2011; Surdeanu et al, 2012), with the same split.
It uses Freebase as the knowledge base and New
York Time corpus as the text corpus, including
about 60,000 entity tuples in the training set, and
about 90,000 entity tuples in the testing set.
We generate the second English dataset, DB-
pedia dataset, by mapping the triples in DBpedia
(Bizer et al, 2009) to the sentences in New York
Time corpus. We map 51 different relations to the
corpus and result in about 50,000 entity tuples,
134,000 sentences for training and 30,000 entity
tuples, 53,000 sentences for testing.
For the Chinese dataset, we derive knowledge
facts and construct a Chinese KB from the In-
foboxes of HudongBaike, one of the largest Chi-
nese online encyclopedias. We collect four na-
tional economic newspapers in 2009 as our corpus.
28 different relations are mapped to the corpus and
this results in 60,000 entity tuples, 120,000 sen-
tences for training and 40,000 tuples, 83,000 sen-
tences for testing.
4.2 Baselines and Competitors
The baseline we use in this paper is Mintz++,
which is described in (Surdeanu et al, 2012). It
is a modification of the model proposed by Mintz
et al (2009). The model predicts for each mention
separately, and allows multi-label outputs for an
entity tuple by OR-ing the outputs of its mentions.
As we described in Section 3.1, originally we
select the top three predicted relations as the can-
didates for each mention. In order to investigate
whether it is necessary to use up to three candi-
dates, we implement two variants of our approach,
which select the top one and top two relations as
candidates for each mention, and represented as
ILP-1cand and ILP-2cand, respectively.
We also use two distant supervision approaches
for the comparison. The first one is MultiR (Hoff-
mann et al, 2011), a novel joint model that can
deal with the relation overlap issue. The second
one, MIML-RE (Surdeanu et al, 2012), is one of
the state-of-the-art MIML relation extraction sys-
tems. We tune the models of MultiR and MIML-
RE so that they fit our datasets.
4.3 Overall Performance
First we compare our framework and its vari-
ants with the baseline and the state-of-the-art RE
models. Following previous works, we use the
Precision-Recall curve as the evaluation criterion
in our experiment. The results are summarized
in Figure 2. For the constraints, we first manu-
ally select an average of 20 relation pairs for each
subcategory of the first kind of clues, and all the
relations with unique argument values in R. We
also show how automatically learnt clues perform
in Section 4.5.
Figure 2 shows that compared with the baseline,
our framework performs consistently better in the
DBpedia dataset and the Chinese dataset. Mintz++
proves to be a strong baseline on both datasets. It
tends to result in a high recall, and its weakness of
low precision is perfectly fixed by the ILP model.
Our ILP model and its variants all outperform
Mintz++ in precision in both datasets, indicating
that our approach helps filter out incorrect predic-
tions from the output of MaxEnt model. Com-
pared with MultiR, our framework obtains better
results in both datasets. Especially in the Chinese
dataset, the improvement in precision reaches as
high as 10-16% at the same recall points. Our
framework performs better compared to MIML-
RE in the English dataset. On the Chinese dataset,
our framework outperforms MIML-RE except in
the low-recall portion (<10%) of the P-R curve.
All these results show that embedding the relation
background information into RE can help elim-
inate the wrong predictions and improve the re-
sults.
However, in the Riedel?s dataset, Mintz++, the
MaxEnt relation extractor, does not perform well,
and our framework cannot improve its perfor-
mance. In order to find out the reasons, we manu-
ally investigate the dataset. The top three relations
of this dataset are /location/location/contains,
/people/person/nationality and
/people/person/place lived. About two-thirds of
the entity tuples belongs to these three relations,
and the outputs of the local extractor usually
bias even more to the large relations. What is
worse, we cannot find any clues from the top
three relations because their arguments? types are
too general. Things are similar for many other
823
0 0.1 0.2 0.3 0.4 0.50.2
0.4
0.6
0.8
1
recall
preci
sion
 
 Mintz++ILP?1candILP?2candILP
(a) The DBpedia Dataset
0 0.1 0.2 0.3 0.4 0.5 0.60
0.2
0.4
0.6
0.8
1
recall
preci
sion
 
 Mintz++ILP?1candILP?2candILP
(b) The Riedel?s Dataset
0 0.1 0.2 0.3 0.4 0.5 0.60.3
0.4
0.5
0.6
0.7
0.8
0.9
1
recall
preci
sion
 
 Mintz++ILP?1candILP?2candILP
(c) The Chinese Dataset
0 0.1 0.2 0.3 0.4 0.50.2
0.4
0.6
0.8
1
recall
preci
sion
 
 Mintz++MultiRMIML?REILP
(d) The DBpedia Dataset
0 0.1 0.2 0.3 0.4 0.5 0.60
0.2
0.4
0.6
0.8
1
recall
preci
sion
 
 Mintz++MultiRMIML?REILP
(e) The Riedel?s Dataset
0 0.1 0.2 0.3 0.4 0.5 0.60.3
0.4
0.5
0.6
0.7
0.8
0.9
1
recall
preci
sion
 
 Mintz++MultiRMIML?REILP
(f) The Chinese Dataset
Figure 2: Overall performances of our framework and its variants, the baselines and the state-of-the-art
approaches on the three datasets.
relations in this dataset. Although we may find
some clues any way, they are too few to make
any improvement. Hence, our framework does
not perform well due to the poor performance of
MaxEnt extractor and the lack of clues. To solve
this problem, we think of addressing the selection
preferences between relations and entities pro-
posed in (Riedel et al, 2013), which should be
our future work.
We notice that in all three datasets our variant
ILP-1cand is shorter than Mintz++ in recall, in-
dicating we may incorrectly discard some predic-
tions. Compared to ILP-2cand and original ILP,
ILP-1cand leads to slightly lower precision but
much lower recall, showing that selecting more
candidates may help us collect more potentially
correct predictions. Comparing ILP-2cand and
original ILP, the latter hardly makes any improve-
ment in precision, but is slightly longer in re-
call, indicating using three candidates can still col-
lect some more potentially correct predictions, al-
though the number may be limited.
In order to study how our framework improves
the performances on the DBpedia dataset and the
Chinese dataset, we further investigate the num-
ber of incorrect predictions eliminated by ILP and
the number of incorrect predictions corrected by
ILP. We also examine the number of correct pre-
Table 1: Details of the improvements made by ILP
in the DBpedia and Chinese datasets.
Datasets Incorrect Predictions Wrong Predictioins Correct Predictions
Eliminated Corrected Newly Introduced
DBpedia 268 61 1426
Chinese 1506 14 283
dictions newly introduce by ILP, which were NA
in Mintz++. We summarize the results in Table 1.
The results show that our framework can reduce
the incorrect predictions and introduce more cor-
rect predictions at the same time. We also find
an interesting results: in the DBpedia dataset, ILP
is more likely to introduce correct predictions to
the results, while in the Chinese dataset it tends to
reduce more incorrect predictions, which may be
caused by the differences between performances
of Mintz++ on the two datasets, where it gets a
higher recall on the Chinese dataset.
Following Surdeanu et al (2012), we also list
the peak F1 score (highest F1 score) for each
model in Table 2. Different from (Surdeanu et al,
2012), we use all the entity pairs instead of the
ones with more than 10 mentions. We can observe
that our model obtains the best performance in the
DBpedia dataset and the Chinese dataset. In the
DBpedia dataset, it is 3.6% higher than Mintz++,
824
7.9% higher than MIML-RE and 13.9% higher
than MultiR. In the Chinese dataset, Mintz++,
MultiR and MIML-RE performs similarly in terms
of the highest F1 score, while our model gains
about 8% improvement. In the Riedel?s dataset,
our framework hardly obtains any improvement
compared with Mintz++.
We also investigate the impacts of the con-
straints used in ILP, which are derived based on the
two kinds of clues and can encode relation defini-
tion information into our framework. Experimen-
tal results in Table 2 shows that in the DBpedia
dataset, the highest F1 score increases from 35.2%
to 38.3% with the help of both kinds of clues,
while in the Chinese dataset the improvement is
from 44.4% to 52.8%. In the Riedel?s dataset we
do not see any improvements since there are al-
most no clues. Furthermore, using constraints de-
rived from only one kind of clues can also improve
the performance, but not as well as using both of
them.
4.4 Adapting MultiR Sentence Level
Extractor to Our Framework
The preliminary relation extractor of our optimiza-
tion framework is not limited to the MaxEnt ex-
tractor, and can take any sentence level relation
extractor with confidence scores. We also fit Mul-
tiR?s mention level extractor into our framework.
As shown in Figure 3, in the DBpedia dataset
and the Chinese dataset, in most parts of the curve,
ILP optimized MultiR outperforms original Mul-
tiR. We think the reason is that our framework
make use of global clues to discard the incorrect
predictions. The results are not as high as when
we use MaxEnt as the preliminary extractor. We
think one reason is that MultiR does not perform
well in these two datasets. Furthermore, the confi-
dence scores which MultiR outputs are not nor-
malized to the same scale, which brings us dif-
ficulties in setting up a confidence threshold to
select the candidates. As a result, we only use
the top one result as the candidate since including
top two predictions without thresholding the confi-
dences performs bad, indicating that a probabilis-
tic sentence-level extractor is more suitable for our
framework. We also notice that in the Riedel?s
dataset our framework does not improve the per-
formance significantly, and we have discussed the
reasons in Section 4.3.
( a)
( b)
Figure 4: F1 score v.s. number of relations (used
to introduce the related learnt clues into the ILP
framework) on the DBpedia dataset (a) and the
Chinese dataset (b).
00.
20.4
0.6
0.20.40.60.81
recall
precision
 
 Manual Auto
(a) The DBpedia Dataset
00.2
0.40.6
0.20.40.60.81
recall
precision
 
 Manual Auto
(b) The Chinese Dataset
Figure 5: Performances of manually selected clues
and automatically learnt clues on two datasets.
4.5 Examining the Automatically Learnt
Clues
Now we evaluate the performance of automati-
cally collected clues used in our model. Since
there are almost no clues in the Riedel?s dataset,
we only investigate the other two datasets. We add
clues according to their related relations? propor-
tions in the local predictions. For example, Coun-
try and birthPlace take up about 30% in the local
predictions, we thus add clues that are related to
these two relations, and then move on with new
clues related to other relations according to those
relations? proportions in the local predictions.
As is shown in Figure 4, in both datasets, the
clues related to more local predictions will solve
more inconsistencies, thus are more effective.
Adding the first two relations improves the model
significantly, and as more relations are added, the
825
Table 2: Results of the highest F1 score on all three datasets.
DBpedia Riedel Chinese
Method P(%) R(%) F1(%) P(%) R(%) F1(%) P(%) R(%) F1(%)
Mintz++ 40.2 30.5 34.7 35.3 23.2 27.9 43.3 45.7 44.4
MultiR 60.4 15.3 24.4 32.3 25.1 28.2 53.5 38.2 44.6
MIML-RE 51.3 21.6 30.4 41.5 19.9 26.9 49.2 41.3 44.9
ILP 37.4 39.2 38.3 35.5 23.2 28.0 52.6 52.9 52.8
ILP-No-Constraint 34.1 36.3 35.2 35.3 23.2 28.0 43.3 45.7 44.4
ILP-Type-Inconsistent 36.3 39.2 37.7 35.5 23.2 28.0 49.5 49.0 49.2
ILP-Cardinality 35.3 37.8 36.5 35.4 23.2 28.0 50.3 48.8 49.6
0 0.05 0.1 0.150.6
0.7
0.8
0.9
1
recall
preci
sion
 
 ILP Optimized MultiROriginal MultiR
(a) The DBpedia Dataset
0 0.05 0.1 0.15 0.2 0.25 0.30.3
0.4
0.5
0.6
0.7
0.8
0.9
1
recall
preci
sion
 
 ILP Optimized MultiROriginal MultiR
(b) The Riedel?s Dataset
0 0.1 0.2 0.3 0.40.5
0.6
0.7
0.8
0.9
1
recall
preci
sion
 
 ILP Optimized MultiROriginal MultiR
(c) The Chinese Dataset
Figure 3: The results of original MultiR and ILP optimized MultiR on the three datasets.
performances keep increasing until approaching
the still state. It is worth mentioning that when
sufficient learnt clues are added into the model, the
results are comparable to those based on the clues
refined manually, as shown in Figure 5. This indi-
cates that the clues can be collected automatically,
and further used to examine whether predicted re-
lations are consistent with the existing ones in the
KB, which can be considered as a form of quality
control.
5 Conclusions
In this paper, we make use of the global clues de-
rived from KB to help resolve the disagreements
among local relation predictions, thus reduce the
incorrect predictions and improve the performance
of relation extraction. Two kinds of clues, includ-
ing implicit argument type information and argu-
ment cardinality information of relations are in-
vestigated. Our framework outperforms the state-
of-the-art models if we can find such clues in the
KB. Furthermore, our framework is scalable for
other local sentence level extractors in addition to
the MaxEnt model. Finally, we show that the clues
can be learnt automatically from the KB, and lead
to comparable performance to manually refined
ones.
For future work, we will investigate other kinds
of clues and attempt a joint optimization frame-
work that could host entity disambiguation, rela-
tion extraction and entity linking together. We
will also adopt selection preference between en-
tities and relations since sometimes we may not
find useful clues.
Acknowledgments
We would like to thank Heng Ji, Dong Wang and
Kun Xu for their useful discussions and the anony-
mous reviewers for their helpful comments which
greatly improved the work. This work was sup-
ported by the National High Technology R&D
Program of China (Grant No. 2012AA011101),
National Natural Science Foundation of China
(Grant No. 61272344, 61202233, 61370055) and
the joint project with IBM Research.
References
Michele Banko, Michael J. Cafarella, Stephen Soder-
land, Matt Broadhead, and Oren Etzioni. 2007.
Open information extraction from the web. In Pro-
ceedings of IJCAI, IJCAI?07, pages 2670?2676.
Christian Bizer, Jens Lehmann, Georgi Kobilarov,
S?oren Auer, Christian Becker, Richard Cyganiak,
826
and Sebastian Hellmann. 2009. Dbpedia - a crys-
tallization point for the web of data. Web Semant.,
7:154?165, September.
Razvan C. Bunescu. 2007. Learning to extract rela-
tions from the web using minimal supervision. In
Proceedings of the 45th Annual Meeting of the As-
sociation for Computational Linguistics (ACL07.
Oier Lopez de Lacalle and Mirella Lapata. 2013. Un-
supervised relation extraction with general domain
knowledge. In EMNLP, pages 415?425. ACL.
Anthony Fader, Stephen Soderland, and Oren Etzioni.
2011. Identifying relations for open information ex-
traction. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing,
EMNLP ?11, pages 1535?1545, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Raphael Hoffmann, Congle Zhang, Xiao Ling,
Luke Zettlemoyer, and Daniel S. Weld. 2011.
Knowledge-based weak supervision for information
extraction of overlapping relations. In Proceedings
of the 49th ACL-HLT - Volume 1, HLT ?11, pages
541?550, Stroudsburg, PA, USA. ACL.
Qi Li, Sam Anzaroot, Wen-Pin Lin, Xiang Li, and
Heng Ji. 2011. Joint inference for cross-document
information extraction. In Proceedings of the 20th
ACM International Conference on Information and
Knowledge Management, CIKM ?11, pages 2225?
2228, New York, NY, USA. ACM.
Qi Li, Heng Ji, and Liang Huang. 2013. Joint event
extraction via structured prediction with global fea-
tures. In ACL, pages 73?82. The Association for
Computer Linguistics.
Mike Mintz, Steven Bills, Rion Snow, and Dan Ju-
rafsky. 2009. Distant supervision for relation ex-
traction without labeled data. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the
ACL and the 4th IJCNLP of the AFNLP: Volume 2 -
Volume 2, ACL ?09, pages 1003?1011.
Sebastian Riedel, Limin Yao, and Andrew McCallum.
2010. Modeling relations and their mentions with-
out labeled text. In Machine Learning and Knowl-
edge Discovery in Databases, volume 6323 of Lec-
ture Notes in Computer Science, pages 148?163.
Springer Berlin / Heidelberg.
Sebastian Riedel, Limin Yao, Benjamin M. Marlin, and
Andrew McCallum. 2013. Relation extraction with
matrix factorization and universal schemas. In Joint
Human Language Technology Conference/Annual
Meeting of the North American Chapter of the Asso-
ciation for Computational Linguistics (HLT-NAACL
?13), June.
Stephen Soderland, David Fisher, Jonathan Aseltine,
and Wendy Lehnert. 1995. Crystal inducing a con-
ceptual dictionary. In Proceedings of the 14th IJCAI
- Volume 2, IJCAI?95, pages 1314?1319, San Fran-
cisco, CA, USA. Morgan Kaufmann Publishers Inc.
Fabian Suchanek, James Fan, Raphael Hoffmann, Se-
bastian Riedel, and Partha Pratim Talukdar. 2013.
Advances in automated knowledge base construc-
tion. In SIGMOD Records journal, March.
Mihai Surdeanu, David McClosky, Julie Tibshirani,
John Bauer, Angel X. Chang, Valentin I. Spitkovsky,
and Christopher D. Manning. 2010. A simple dis-
tant supervision approach for the TAC-KBP slot fill-
ing task. In Proceedings of the Third Text Anal-
ysis Conference (TAC 2010), Gaithersburg, Mary-
land, USA, November.
Mihai Surdeanu, Julie Tibshirani, Ramesh Nallap-
ati, and Christopher D. Manning. 2012. Multi-
instance multi-label learning for relation extraction.
In EMNLP-CoNLL, pages 455?465. ACL.
Shingo Takamatsu, Issei Sato, and Hiroshi Nakagawa.
2012. Reducing wrong labels in distant supervi-
sion for relation extraction. In Proceedings of the
50th Annual Meeting of the Association for Compu-
tational Linguistics: Long Papers - Volume 1, ACL
?12, pages 721?729, Stroudsburg, PA, USA. Associ-
ation for Computational Linguistics.
Limin Yao, Sebastian Riedel, and Andrew McCallum.
2010. Collective cross-document relation extraction
without labelled data. In Proceedings of EMNLP,
EMNLP ?10, pages 1013?1023, Stroudsburg, PA,
USA. ACL.
Limin Yao, Sebastian Riedel, and Andrew McCal-
lum. 2012. Probabilistic databases of universal
schema. In Proceedings of the Joint Workshop on
Automatic Knowledge Base Construction and Web-
scale Knowledge Extraction, AKBC-WEKEX ?12,
pages 116?121, Stroudsburg, PA, USA. Association
for Computational Linguistics.
Xingxing Zhang, Jianwen Zhang, Junyu Zeng, Jun
Yan, Zheng Chen, and Zhifang Sui. 2013. Towards
accurate distant supervision for relational facts ex-
traction. In Proceedings of the 51st Annual Meet-
ing of the Association for Computational Linguis-
tics (Volume 2: Short Papers), pages 810?815, Sofia,
Bulgaria, August. Association for Computational
Linguistics.
Shubin Zhao and Ralph Grishman. 2005. Extracting
relations with integrated information using kernel
methods. In Proceedings of the 43rd Annual Meet-
ing on Association for Computational Linguistics,
ACL ?05, pages 419?426, Stroudsburg, PA, USA.
Association for Computational Linguistics.
827
Proceedings of the 2012 Student Research Workshop, pages 67?72,
Jeju, Republic of Korea, 8-14 July 2012. c?2012 Association for Computational Linguistics
Towards Automatic Construction of Knowledge Bases from Chinese Online
Resources
Liwei Chen, Yansong Feng, Yidong Chen, Lei Zou, Dongyan Zhao
Institute of Computer Science and Technology
Peking University
Beijing, China
{clwclw88,fengyansong,chenyidong,zoulei,zhaodongyan}@pku.edu.cn
Abstract
Automatically constructing knowledge bases
from online resources has become a crucial
task in many research areas. Most existing
knowledge bases are built from English re-
sources, while few efforts have been made for
other languages. Building knowledge bases
for Chinese is of great importance on its own
right. However, simply adapting existing tool-
s from English to Chinese yields inferior re-
sults.In this paper, we propose to create Chi-
nese knowledge bases from online resources
with less human involvement.This project will
be formulated in a self-supervised framework
which requires little manual work to extrac-
t knowledge facts from online encyclopedia
resources in a probabilistic view.In addition,
this framework will be able to update the con-
structed knowledge base with knowledge facts
extracted from up-to-date newswire.Currently,
we have obtained encouraging results in our
pilot experiments that extracting knowledge
facts from infoboxes can achieve a high accu-
racy of around 95%, which will be then used
as training data for the extraction of plain web-
pages.
1 Introduction
As the development of world wide web (WWW),
the volume of web data is growing exponentially
in recent years. Most of the data are unstructured,
while a few are manually structured and only a s-
mall part of them are machine-readable. How to
make these data accessible and useable for end user-
s has become a key topic in many research areas,
such as information retrieval, natural language pro-
cessing, semantic web(Tim et al, 2001) and so on.
Among others, constructing knowledge bases (KB)
from web data has been considered as a preliminary
step. However, it is not trivial to extract knowledge
facts from unstructured web data, especially in open
domain, and the accuracy is usually not satisfacto-
ry. On the other hand, with the development of We-
b2.0, there are increasing volume of online encyclo-
pedias which are collectively created by active vol-
unteers, e.g., Wikipedia1. Surprisingly, experiment
evidences show that the confidence of Wikipedia is
even comparable with that of British Encyclopedi-
a (Giles, 2005). Therefore, many efforts have been
made to distill knowledge facts from Wikipedia or
similar resources and further build KBs, for example
YAGO(Suchanek et al, 2007), DBpedia(Bizer et al,
2009) and KOG(Wu and Weld, 2008).
In the literature, most KBs constructed recently
are in English as it takes up an overwhelming major-
ity on the web, while other major languages receives
less attention, for example, Chinese features similar
amounts of web pages with English yet is less fre-
quently studied with regarding to building KBs. Al-
though continuous works have been made to process
English resources, building Chinese KBs is of great
value on its own. To the best of our knowledge, few
efforts have been made to construct a KB in Chi-
nese until now. Despite of necessary special pre-
processings, e.g., word segmentation, for Chinese,
building a Chinese KB from web data is quite differ-
ent from building English ones, since we have lim-
ited resources available in Chinese that are of lower
1http://www.wikipedia.com
67
quality compared to their English counterparts. This
brings more difficulties than that of English. As a
result, the approaches used in English may not work
well in Chinese.
In this paper, we propose a new framework to
build a KB in Chinese from online resources with-
out much human involvement. Since the Chinese
portion of Wikipedia is much smaller than its En-
glish part, we harvest knowledge facts from a Chi-
nese online encyclopedia, HudongBaike2. Hudong-
Baike is the largest Chinese online encyclopedia and
features similar managing rules and writing styles
with Wikipedia. We first obtain knowledge facts by
parsing the infoboxes of HudongBaike. Then we use
these triples as seeds, and adopt the idea of distant
supervision(Mintz et al, 2009; Riedel et al, 2010;
Yao et al, 2010) to extract more facts from other
HudongBaike articles and build a KB accordingly.
Moreover, to make the knowledge base more up-to-
date, we also propose to propagate the KBwith news
events.
The rest of this paper is organized as follows: we
first introduce the related work, and briefly introduce
two online encyclopedias. In Section 4 we describe
our framework in detail. Our current work are dis-
cussed in Section 5. In Section 6 we conclude this
paper.
2 Related Work
KB construction is an important task and has at-
tracted many research efforts from artificial intelli-
gence, information retrieval, natural language pro-
cessing, and so on. Traditional KBs are most-
ly manually created, including WordNet(Stark and
Riesenfeld, 1998), Cyc or OpenCyc(Matuszek et al,
2006), SUMO(Niles and Pease, 2001), and also
some domain-specific ontologies such as GeneOn-
tology3. These KBs achieve a high accuracy since
they are manually built or filtered by domain ex-
perts. However, manually creating KB is a time-
consuming and labor-intensive work, and continu-
ous annotation is required to keep the KB up-to date.
Most of them thus suffers from the coverage issue in
practice.
In recent years, many researchers turn to auto-
2http://www.hudong.com
3http://www.geneontology.org
matically extract knowledge to construct KBs. One
kind of methods extract knowledge facts from gener-
al text corpus. These approaches, such as TextRun-
ner(Banko et al, 2007) and KnowItAll(Etzioni et al,
2004), use rule based information extraction tech-
nologies to extract relations between entity pairs.
Recently, TextRunner is expanded by a life long
learning strategy, which can acquire new facts. An-
other type of approaches aims to automatically de-
rive facts from online encyclopedias. Collectively
created by many volunteers, online encyclopedias
are more reliable than general web pages. They al-
so contain semi-structured knowledge such as hand-
crafted infoboxes. Therefore, the accuracy of the
facts extracted will be higher. Researchers utilize
these semi-structured data resources for knowledge
extraction, for example, YAGO extract facts from in-
foboxes and category names of Wikipedia, and use
WordNet as its taxonomy(Suchanek et al, 2007).
A similar approach is adopted by DBpedia, which
also extract knowledge facts from infoboxes(Bizer
et al, 2009). Unlike YAGO and DBpedia, Kylin us-
es the infoboxes and the Wikipedia pages containing
these infoboxes to build a training set, and use ma-
chine learning methods to extract facts from plain
Wikipedia articles(Wu and Weld, 2007). Although
Kylin achieves a high precision, it is corpus-specific,
which means it can only be used in Wikipedia-like
corpora. It is noticed that all the above works fo-
cus on building an English KB, and few efforts have
been made in building a Chinese one until now.
3 Online Encyclopedia
Wikipedia is known as an accurate online encyclo-
pedia whose accuracy is comparable with Encyclo-
pedia Britannica(Giles, 2005). It?s created by thou-
sands of volunteers around the whole world. Until
now, the English version ofWikipedia has 3,878,200
content pages, making it the largest English on-
line encyclopedia. The Chinese version contains
402,781 content pages, which is much smaller than
the English version.
HudongBaike is the largest Chinese online ency-
clopedia with over 5 million content pages. Similar-
ly with Wikipedia, HudongBaike is also created by
volunteers, and relies on the community to ensure
its quality. Many HudongBaike pages also contains
68
Preprocessed HudongBaike Pages
Extracted Triples HudongBaike Articles
Triples Extracted from Articles
Knowledge Base
 Up-to-Date Data
Semantic Elements 
Propagated KB
Analyzing Infoboxes Cleaning pages
Mapping
Distant supervision
KB construction Semantic Elements Extraction
Propagating KB
Figure 2: The framework of Our project
a hand-crafted summary box, infobox. An infobox
summarizes the knowledge of the corresponding en-
tity. The information in the infobox is reliable since
these are collaboratively crafted by many volunteer-
s. Figure 1 is an example page with an infobox from
HudongBaike, introducing a US general ????
?? (George Marshall).
4 The Framework
In this paper, we formulated the KB construction
task in a semi-supervised learning fashion which re-
quires little manual annotation and supports knowl-
edge propagation by up-to-date feeds. Because
the Chinese part of Wikipedia is relatively smal-
l and may suffer from the coverage problem, we use
HudongBaike to build our KB in this project. In fu-
ture we may merge the Wikipedia part into our KB.
After necessary preprocessings including word seg-
mentation and named entity extraction, we are able
to apply our framework shown in Figure 2.
In general, our framework contains the follow-
ing steps: (1)Extracting knowledge from online
encyclopedia; (2)Linking triples and building KB;
(3)Propagating KB with up-to-date data.
4.1 Entity Relation Extraction
Compared to other resources on the Web, online
encyclopedias contain less noises and feature more
regular structures, thus are considered easier for us
to extract knowledge facts.
Analyzing Infoboxes As mentioned before, many
HudongBaike pages contains an infobox, which
has high accuracy and can be used directly for
relation extraction. We can conveniently parse
these infoboxes into < S,P,O > triples. For
example, from the first entry of this infobox,
we can derive the following triple: < ?
????? , ??? , ???? >(<
GeorgeMarshall, BirthP lace, Uniontown >).
The precision of the extraction is over 95%, and
these triples can form a valuable knowledge source.
Extracting relations with Distant Supervision
Extracting knowledge from infoboxes is efficien-
t and can achieve a high precision. However, many
web pages in HudongBaike do not have infoboxes.
There is much richer knowledge in the main arti-
cles of HudongBaike, which we should also take in-
to consideration.
Extracting knowledge from unstructured articles
is a challenging task. Traditionally, researchers
use manually created templates to extract relation-
s. These templates need lots of human efforts and
are domain-specific. Recent methods trend to re-
ly on machine learning models, which need a large
amount of labeled data. One idea is to utilize the
infoboxes to form the training data set, and train an
extractor to extract relations from the pages with-
out an infobox(Wu and Weld, 2007). However, the
relations extracted from a page are restricted to the
infobox template used by the current page catego-
ry, and their subject must be the entity that this page
describes. For example, when we extract relation-
s from the page of ????? (Charles Yeager,
Ace of US in WWII) which does not contain an in-
fobox, the subject of these relations must be Charles
Yeager, and we can only extract the relation types
listed in infobox template for a military person. As
a result, this method can only be used in online en-
cyclopedias in a Wikipedia style, and the recall will
be relatively low.
Distant supervision is widely used in relation ex-
traction in recent years. It hardly need any manual
work, and can overcome the above problems. It can
be used in any reliable corpus, and doesn?t have the
strict restrictions as previous methods. We adopt its
idea in our framework. The basic assumption of dis-
tant supervision is the sentences containing two en-
69
Figure 1: A HudongBaike page about a US general George Marshall
tities should express the relation between them more
or less. It only needs a reliable seed KB (in the form
of relation triples) and a corpus. Here, we can use
the knowledge facts extracted from infoboxes previ-
ously as the seed KB, and the articles of Hudong-
Baike as text corpus. For each triple in the seed K-
B, we generate positive training data by finding sen-
tences containing both its subject and object in the
corpus. For example, we can map the first entry in
Figure 1 to the sentence 1880?12?31?????
??????? (On December 31th, 1880, Mar-
shall was born in Uniontown). The negative training
data can be generated by randomly select some sen-
tences which contain neither of the subject and the
object. A predictive model such as logistic regres-
sion model is trained with the training data. We can
use the model to give predictions for the relations
in a textual knowledge source. For a HudongBaike
page, we should decide the entity pairs we are in-
terested in. A simple strategy is to select all entity
pairs. But it will be time-consuming, and may suffer
from weak-related entity pairs. So we extract top-
ic entities which have high tfidf weights from this
page, and generate entity pairs under the restriction
that they must contain at least one topic entity. For
each entity pair, we find the sentences which contain
both the subject and object and use the predictive
model to give the possible relations between them
and the confidence of the relations.
However, the predictions of distant supervision
is less accurate than those of supervised method-
s. So we should adopt some heuristics to filter the
relations extracted. An easy strategy is to set up a
threshold for relation confidences to avoid uncertain
relations and improve the precision. We adopt this
method in our project. Furthermore, we can also use
the strategies of Riedel et al (2010) or Yao et al
(2010).
4.2 Knowledge Base Construction
After the relation extraction, we must link the ex-
tracted knowledge triples in order to construct the
knowledge base. In our scenario this linking task can
be formulated as: given a base KB, a bunch of newly
extracted knowledge triples with the sentences de-
scribing them and their contexts, the task of entity
linking aims to link each of the entity mentions in
the plain texts (these sentences mentioned above) to
its corresponding entity in the base KB. At the very
beginning, we initiate a base KB by using the taxon-
omy of HudongBaike thus are able to map relations
between entities into the KB through entity linking.
In online encyclopedias, the synonyms of an en-
tity are represented by redirect links. Synonyms are
important in entity linking because they provide al-
ternative names for entities, and we may miss some
mappings without them. For example, we have an
entity ?????? (United States of America)
in the KB, and an mention ?? (USA) in a piece
of text. Redirect links can tell us that we can create
a mapping between them. Basically, for each men-
tion, we can find matching candidates for them in a
KB through exact matching. However, if we can-
not find an exact match for a mention, we will try
70
fuzzy matching since a mention may not match ex-
actly with its referent entity in KB.
Now we need to solve the entity linking task. Tra-
ditional methods did not exploit global interdepen-
dence between entity linking decisions. We thus
adopt the collective entity linking approach of Han
et al (2011) to solve this problem. This method cap-
tures the rich semantic relatedness knowledge be-
tween entities, and take the interdependence of link-
ing decisions into consideration. They construct a
graph by linking name mentions and candidate enti-
ties in pairwise using the semantic relatedness be-
tween them. Then they use a random walk algo-
rithm on the graph to solve the problem. However,
they did not take the NIL problem into considera-
tion. That is, in entity linking, if the referent enti-
ty of an name mention is not in our KB, it should
be linked to a pseudo entity NIL. In our case, we
should abandon the mapping of the current triple by
deciding whether this entity has been listed in the
KB(Zheng et al, 2010).
4.3 Knowledge base Propagation
Although we can extract millions of relations and
built a KB in previous subsections, it has the same
shortage as most existing KBs: the knowledge ex-
tracted are mostly statical attributes of entities (such
as birthdate or occupation of a person) and can not
describe the latest updates of an entity (such as a
politician is currently visiting a country).
In order to settle this problem, we use the dy-
namical knowledge extracted from up-to-date data
to expand our KB. One possible solution is extract-
ing semantic event elements from online news. In
this project, we will synchronies our KB with a Chi-
nese newspaper, RenMinRiBao (People?s Daily).
5 Current Work
Currently, we have extracted triples from the in-
foboxes of HudongBaike and built the base KB.
Manual evaluation shows that the precision of struc-
tured content extraction is over 95%. Most errors
are caused by the web page?s own mistakes or edit-
ing errors in infoboxes.
To assess the quality of HudongBaike data, in our
preliminary experiments(Yidong et al, 2012), we
extract relation facts from plain HudongBaike arti-
cles without infoboxes in a way similar to Kylin. We
focus on three categories, including ?? (Nation),
?? (Person) and ?? (Actor or Actress). In each
category we select several representative attributes
from its infobox template. We manually annotated
more than 200 testing examples for evaluation: 100
in Person, 33 in Nation and 91 in Actor or Actress.
The results shows that the HudongBaike data can be
used to extract knowledge facts with a high precision
in all three categories: in ?? the average precision
is 79.43%, in ?? it is 78.9%, and in ?? it even
goes up to 90.8%.
Distant Supervision We further adopt the ap-
proach of distant supervision(Mintz et al, 2009) in
a Chinese dataset. We generate a dataset from Ren-
MinRiBao with 10000 sentences, and each sentence
contains at least a pair of entities which correspond
to a knowledge triple in HudongBaike?s infobox ex-
traction. We use 60% of the sentences as training
set and 40% as the testing set. Our experiments
show that when the recall is 10%, we can obtain a
high precision of 87%, which indicates the feasibili-
ty of our model. However, as the recall raises, the
precision drops dramatically. For example, when
the recall is 29% the precision is about 65%. This
can be remedied by adopting more encyclopedia-
specific filtering strategies and assumptions during
the distant supervision modeling.
6 Conclusions
In this project, we proposed a framework to build
KBs in Chinese. It uses the infoboxes of Hudong-
Baike as a seed knowledge base, the articles of
HudongBaike as extra textual resources, adopts the
idea of distant supervision to extract knowledge fact-
s from unstructured data and link the triples to build
a knowledge base. This framework requires lit-
tle manual work, and can be used in other reliable
knowledge resources. Our preliminary experimental
results are encouraging, showing that the Hudong-
Baike provides reasonable resources for building
knowledge bases and the distant supervision fashion
can be adapted to work well in Chinese.
For the next, we will further adapt our frame-
work into a self-training manner. By using higher
threshold for confidence in distant supervision we
can make sure the precision of extracted knowledge
71
is high enough for bootstrapping. Then we put the
extracted knowledge facts into the seed KB, and the
framework will repeat iteratively. On the other hand,
we can extract knowledge facts from other reliable
knowledge resource, such as Wikipedia, academic
literature, and merge knowledge from different re-
sources into one KB. Moreover, we can also make
our KB multilingual by adopting our framework in
other languages.
References
Banko, M., Cafarella, M. J., Soderland, S., Broad-
head, M., and Etzioni, O. (2007). Open informa-
tion extraction from the web. In Proceedings of
IJCAI, IJCAI?07, pages 2670?2676.
Bizer, C., Lehmann, J., Kobilarov, G., Auer, S.,
Becker, C., Cyganiak, R., and Hellmann, S.
(2009). Dbpedia - a crystallization point for the
web of data. Web Semant., 7:154?165.
Etzioni, O., Cafarella, M., Downey, D., Kok, S.,
Popescu, A.-M., Shaked, T., Soderland, S., Weld,
D. S., and Yates, A. (2004). Web-scale informa-
tion extraction in knowitall. In Proceedings of the
13th WWW, WWW ?04, pages 100?110.
Giles, J. (2005). Internet encyclopaedias go head to
head. Nature, 438:900?901.
Han, X., Sun, L., and Zhao, J. (2011). Collective
entity linking in web text: a graph-based method.
In SIGIR, SIGIR ?11, pages 765?774, New York,
NY, USA. ACM.
Matuszek, C., Cabral, J., Witbrock, M., and DeO-
liveira, J. (2006). An introduction to the syntax
and content of cyc. In Proceedings of the 2006
AAAI Spring Symposium.
Mintz, M., Bills, S., Snow, R., and Jurafsky, D.
(2009). Distant supervision for relation extraction
without labeled data. In Proceedings of the Joint
Conference of the 47th Annual Meeting of the A-
CL and the 4th IJCNLP of the AFNLP: Volume 2
- Volume 2, ACL ?09, pages 1003?1011.
Niles, I. and Pease, A. (2001). Towards a standard
upper ontology. In Proceedings of FIOS - Volume
2001, pages 2?9. ACM Press, New York.
Riedel, S., Yao, L., and McCallum, A. (2010).
Modeling relations and their mentions without la-
beled text. In Machine Learning and Knowledge
Discovery in Databases, volume 6323 of Lec-
ture Notes in Computer Science, pages 148?163.
Springer Berlin / Heidelberg.
Stark, M. M. and Riesenfeld, R. F. (1998). Wordnet:
An electronic lexical database. In Proceedings of
11th Eurographics Workshop on Rendering. MIT
Press.
Suchanek, F. M., Kasneci, G., and Weikum, G.
(2007). Yago: a core of semantic knowledge.
In Proceedings of WWW, WWW ?07, pages 697?
706, New York, NY, USA. ACM.
Tim, B.-L., J., H., and O., L. (2001). The semantic
web. Scientific American.
Wu, F. and Weld, D. S. (2007). Autonomously
semantifying wikipedia. In CIKM, CIKM ?07,
pages 41?50, New York, NY, USA. ACM.
Wu, F. and Weld, D. S. (2008). Automatically re-
fining the wikipedia infobox ontology. In WWW,
WWW ?08, pages 635?644, New York, NY, USA.
ACM.
Yao, L., Riedel, S., and McCallum, A. (2010). Col-
lective cross-document relation extraction with-
out labelled data. In Proceedings of EMNLP,
EMNLP ?10, pages 1013?1023, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Yidong, C., Liwei, C., and Kun, X. (2012). Learning
chinese entity attributes from online encyclopedi-
a. In Proceedings of IEKB workshop in APWeb
2012.
Zheng, Z., Li, F., Huang, M., and Zhu, X. (2010).
Learning to link entities with knowledge base. In
HLT-NAACL 2010, pages 483?491, Stroudsburg,
PA, USA.
72
